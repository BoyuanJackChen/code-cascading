[
    {
        "number": 3000,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2\\n2 3\") == \"5\"\nassert solution(\"8\\n( 2 ( 2 1 ) ) 3\") == \"9\"\nassert solution(\"4\\n( 12 3 )\") == \"36\"\nassert solution(\"6\\n( 2 ) ( 3 )\") == \"5\"\nassert solution(\"6\\n( ( 2 3 ) )\") == \"5\""
    },
    {
        "number": 3001,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"009990001\") == \"3\"\nassert solution(\"29998\") == \"5\"\nassert solution(\"610\") == \"4\"\nassert solution(\"981\") == \"2\""
    },
    {
        "number": 3002,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42000\") == \"seems legit\"\nassert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42001\") == \"insufficient service\"\nassert solution(\"2\\n2017 11 0\\n2018 1 1000\") == \"tampered odometer\"\nassert solution(\"2\\n2013 1 0\\n2013 2 0\") == \"seems legit\""
    },
    {
        "number": 3003,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2\\n0 2 3\\n0 1\\n1\") == \"3\"\nassert solution(\"5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\") == \"2\"\nassert solution(\"6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\") == \"2\"\nassert solution(\"4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\") == \"4\""
    },
    {
        "number": 3004,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2\\nBLUE 1 5000\\nRED 5001 10000\") == \"2\"\nassert solution(\"3\\nBLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000\") == \"3\"\nassert solution(\"4\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000\") == \"IMPOSSIBLE\"\nassert solution(\"2\\nBLUE 1 4000\\nRED 4002 10000\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3005,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\"\nassert solution(\"GGGGGGGGG\") == \"1\"\nassert solution(\"PRIME\") == \"5\"\nassert solution(\"BABBABABBABBA\") == \"6\""
    },
    {
        "number": 3006,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"\"\"D 1\nD 2\nE\nD 3\nD 1\nE\"\"\") == \"0\"\n\nassert solution(\"\"\"D 2\nD 1\nE\nD 1\nD 2\nE\"\"\") == \"1\"\n\nassert solution(\"\"\"I 1 X\nD 1\nE\nE\"\"\") == \"0\"\n\nassert solution(\"\"\"I 14 B\nI 14 A\nE\nI 14 A\nI 15 B\nE\"\"\") == \"0\""
    },
    {
        "number": 3007,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 0 1 0 0 0\") == \"300\"\nassert solution(\"5 0 1 0 1 0\") == \"1900\"\nassert solution(\"6 0 1 1 0 0\") == \"2300\"\nassert solution(\"10 399 0 0 0 0\") == \"399\""
    },
    {
        "number": 3008,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 10\\n1 12\\n1 13\") == \"2\"\nassert solution(\"2 10\\n1 5\\n1 12\") == \"2\"\nassert solution(\"2 10\\n1 5\\n1 4\") == \"2\"\nassert solution(\"2 10\\n1 5\\n4 1\") == \"2\""
    },
    {
        "number": 3009,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4\\n10 10 5\\n10 20 5\\n20 10 5\\n20 20 5\") == \"28\"\nassert solution(\"4\\n10 10 5\\n10 20 1\\n20 10 12\\n20 20 8\") == \"36.2842712475\"\nassert solution(\"6\\n1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\") == \"28.970562748\"\nassert solution(\"8\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8\") == \"32\""
    },
    {
        "number": 3010,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 3 9 5\\n2 2 6 8\\n4 8 9 3\") == \"3\"\nassert solution(\"3\\n5 2 7 10\\n7 4 4 10\\n2 4 10 8\") == \"1\"\nassert solution(\"3\\n2 1 6 5\\n2 5 5 4\\n5 1 7 7\") == \"1\"\nassert solution(\"2\\n-1 -2 -1 -1\\n-1 2 -1 -1\") == \"1\""
    },
    {
        "number": 3011,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"10\") == \"10\"\nassert solution(\"55\") == \"55\"\nassert solution(\"101\") == \"-1\"\nassert solution(\"1234321\") == \"94708\""
    },
    {
        "number": 3012,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 0 0 0 3\") == \"6\"\nassert solution(\"1 2 0 0 5\") == \"2\"\nassert solution(\"1 2 0 0 4\") == \"4\"\nassert solution(\"1 2 0 0 6\") == \"0\""
    },
    {
        "number": 3013,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"0.5 -5.301 3.098\") == \"-1.26167861 3.88425357\"\nassert solution(\"0.5 8 8\") == \"9.21068947 2.56226688\"\nassert solution(\"1 8 8\") == \"6.22375968 -0.31921472\"\nassert solution(\"0.5 -8 8\") == \"-4.36385220 9.46891588\""
    },
    {
        "number": 3014,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n1 2\\n2 1\") == \"1\\n2\"\nassert solution(\"3 3\\n1 2\\n2 3\\n3 1\") == \"1\\n1\"\nassert solution(\"4 5\\n1 2\\n1 3\\n3 2\\n2 4\\n3 4\") == \"0\"\nassert solution(\"4 5\\n1 2\\n2 3\\n2 4\\n3 1\\n4 1\") == \"2\\n4\\n5\""
    },
    {
        "number": 3015,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\") == \"11\"\nassert solution(\"5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\") == \"infinity\"\nassert solution(\"2 1 0 1\\n0 1 2\") == \"2\"\nassert solution(\"3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\") == \"infinity\""
    },
    {
        "number": 3016,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 2 1 2 1\\n2 1 2\\n2 3 4\") == \"6\"\nassert solution(\"3 3 1 1\\n1 1\\n2 2 3\") == \"0\"\nassert solution(\"3 2 2 3\\n1 1\\n2 2 3\") == \"18\"\nassert solution(\"3 1 2 3\\n2 1 2\\n0\") == \"12\""
    },
    {
        "number": 3017,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1000000 1\") == \"468559\"\nassert solution(\"1000000 5\") == \"49401\"\nassert solution(\"1000000 16\") == \"20\"\nassert solution(\"9000000000000000000 62\") == \"1\""
    },
    {
        "number": 3018,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 9\\n5 4 1\") == \"1\"\nassert solution(\"4 13\\n2 2 2 2\") == \"3\"\nassert solution(\"18 90\\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\") == \"12\""
    },
    {
        "number": 3019,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1\\n1\") == \"0\"\nassert solution(\"3\\n4 7 8\") == \"3\"\nassert solution(\"5\\n2 3 4 5 8\") == \"5\""
    },
    {
        "number": 3020,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"149\") == \"17\"\nassert solution(\"123476544\") == \"11112\""
    },
    {
        "number": 3021,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"d 4\\ncab\\ncda\\nccc\\nbadca\\n\") == \"adcb\"\nassert solution(\"c 4\\nabc\\nbca\\ncab\\naca\\n\") == \"IMPOSSIBLE\"\nassert solution(\"f 2\\ndea\\ncfb\\n\") == \"AMBIGUOUS\""
    },
    {
        "number": 3022,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 3 3 3\") == \"9\"\nassert solution(\"10 20 0 0\") == \"10\"\nassert solution(\"100 20 543 12\") == \"164\""
    },
    {
        "number": 3023,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n2 1 0\") == \"yes\"\nassert solution(\"4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\") == \"no\"\nassert solution(\"3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\") == \"yes\""
    },
    {
        "number": 3024,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"652526\") == \"4\"\nassert solution(\"12121131221\") == \"7\"\nassert solution(\"123456789\") == \"1\""
    },
    {
        "number": 3025,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n1\\n1 2\\n2 3\\n1 3\") == \"0\"\nassert solution(\"4 4\\n24 10\\n1 3\\n2 3\\n2 4\\n1 4\") == \"24\"\nassert solution(\"6 8\\n100 500 300 75\\n1 3\\n1 4\\n3 6\\n4 5\\n3 5\\n4 6\\n2 5\\n2 6\") == \"800\""
    },
    {
        "number": 3026,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 3 2 4\") == \"1 4\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1 2 3 4 5\"\nassert solution(\"4\\n2 1 4 3\") == \"-1\""
    },
    {
        "number": 3027,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"\"\"4 8\n..#..#..\n.######.\n.######.\n..#..#..\"\"\") == \"8\"\n\nassert solution(\"\"\"3 3\n...\n.#.\n...\"\"\") == \"1\"\n\nassert solution(\"\"\"2 6\n.#####\n#####.\"\"\") == \"5\""
    },
    {
        "number": 3028,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\") == \"6\\n19 12 2 18 5 5\"\nassert solution(\"3 3 3\\n3 1 1\\n1 3 2\\n3 2 3\") == \"13\\n4 2 6 1 9 7 5 5 7 1 2 3 3\"\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\") == \"-1\""
    },
    {
        "number": 3029,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5\\n3\\n3\\n3\\n3\\n3\\n1\\n2\\n3\\n4\\n\") == \"5 1\\n\"\nassert solution(\"5\\n4\\n3\\n2\\n1\\n0\\n1\\n2\\n3\\n4\\n\") == \"1 5\\n\"\nassert solution(\"4\\n1\\n5\\n3\\n6\\n1\\n2\\n3\\n\") == \"3 2\\n\""
    },
    {
        "number": 3030,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5\\n3 0\\n3 1\\n3 2\\n3 3\\n3 4\") == \"1\"\nassert solution(\"5\\n4 0\\n3 1\\n2 2\\n1 3\\n0 4\") == \"5\"\nassert solution(\"6\\n3 0\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\") == \"5\""
    },
    {
        "number": 3031,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"8\\n1 3 1\\n2 3 1\\n3 4 3\\n4 5 4\\n5 6 3\\n6 7 2\\n6 8 2\") == \"4\\n3\\n4\\n5\\n6\"\nassert solution(\"8\\n1 2 2\\n1 3 1\\n2 4 3\\n2 7 1\\n3 5 2\\n5 6 2\\n7 8 1\") == \"0\"\nassert solution(\"9\\n1 2 2\\n1 3 1\\n1 4 5\\n1 5 5\\n2 6 3\\n3 7 3\\n4 8 1\\n5 9 2\") == \"5\\n1\\n2\\n3\\n6\\n7\""
    },
    {
        "number": 3032,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1 2\\nV1 V2 V1 V1 V2\") == \"5\"\nassert solution(\"2 1\\nV1 V2 V1 V1 V2\") == \"6\"\nassert solution(\"1 2\\nR10 V1 V2 V1 E\") == \"30\""
    },
    {
        "number": 3033,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"10 24\") == \"38\"\nassert solution(\"10 11\") == \"impossible\"\nassert solution(\"9 216\") == \"546\""
    },
    {
        "number": 3034,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"20 60 2 1\\n5 15 0.33333 30\\n22 60 0.66666 70\\n0 10\") == \"466.662\"\nassert solution(\"3 4 2 1\\n1 3 0.25 8\\n2 4 0.66667 15\\n1 2\") == \"10.00005\"\nassert solution(\"3 4 1 0\\n0 2 0.25 8\") == \"2.0\""
    },
    {
        "number": 3035,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\nblue pink 1.0\\nred pink 1.5\\nblue red 1.0\") == \"1.500000000000000\"\nassert solution(\"2\\nblue red 1.0\\nred pink 1.5\") == \"0.000000000000000\"\nassert solution(\"4\\norange pink 1.9\\nyellow orange 1.9\\ngreen yellow 1.9\\nblue green 1.9\") == \"10.000000000000000\""
    },
    {
        "number": 3036,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"6 1 1 1 0\\n2 3 1 5 3 2\\n2 1 2\\n3 3 4 5\\n1 6\") == \"180\"\nassert solution(\"3 2 2 1 1\\n2 3 2\\n1 1\\n1 2\\n1 2\\n1 3\\n1 1\\n2 3\") == \"22\"\nassert solution(\"3 1 1 1 1\\n5 5 5\\n3 1 2 3\\n3 1 2 3\\n3 1 2 3\\n2 1\") == \"0\""
    },
    {
        "number": 3037,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\") == \"20 20\"\nassert solution(\"6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\") == \"17 17\"\nassert solution(\"3 3 2\\n...\\n.#.\\n...\\nup 2\\nright 2\") == \"-1 -1\""
    },
    {
        "number": 3038,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"371\\n3\\n2 40 65\\n2 100 150\\n2 300 320\") == \"impossible\"\nassert solution(\"310\\n3\\n2 40 65\\n2 100 150\\n2 300 320\") == \"300\"\nassert solution(\"90\\n2\\n2 20 35\\n2 88 200\") == \"88\""
    },
    {
        "number": 3039,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n......\n......\n######\n......\n......\n......\n\"\"\") == \"cannot fold\"\n\nassert solution(\"\"\"\n......\n"
    },
    {
        "number": 3040,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\""
    },
    {
        "number": 3041,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1 4\\n2 5\") == \"4\"\nassert solution(\"2\\n1 4\\n2 10005\") == \"6\"\nassert solution(\"3\\n1 4\\n2 10\\n0 15\") == \"4\""
    },
    {
        "number": 3042,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"7\\n2 3 4 4 8 12 24\") == \"2\"\nassert solution(\"3\\n7 7 7\") == \"3\"\nassert solution(\"5\\n1 2 3 2 1\") == \"0\""
    },
    {
        "number": 3043,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 5 4\\nS#.F.\\n.MFMG\") == \"3\"\nassert solution(\"1 2 1\\nGS\") == \"1\"\nassert solution(\"2 2 10\\nS#\\n#G\") == \"-1\""
    },
    {
        "number": 3044,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"\"\"3 3\nS..\n.#.\n..G\nDRRDD\"\"\") == \"1\"\n\nassert solution(\"\"\"3 7\n.......\n.G.#.S.\n.......\nLDLDLLDR\"\"\") == \"1\"\n\nassert solution(\"\"\"3 7\n.#.....\n.G.##S.\n.......\nLDLDLLDR\"\"\") == \"2\""
    },
    {
        "number": 3045,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n999999 0 1000\\n999900 950 451\\n987654 123 13222\") == \"1000200 799\\n\"\nassert solution(\"2\\n100 0 101\\n0 200 199\") == \"uncertain\\n\"\nassert solution(\"2\\n100 0 100\\n0 200 199\") == \"impossible\\n\""
    },
    {
        "number": 3046,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"\"\"2\n4 7\n9 8\n14 17\n19 18\"\"\") == \"2\\n1\"\n\nassert solution(\"\"\"2\n4 7\n14 17\n9 8\n19 18\"\"\") == \"1\\n2\"\n\nassert solution(\"\"\"2\n4 8\n9 7\n14 18\n19 17\"\"\") == \"syntax error\""
    },
    {
        "number": 3047,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n_ 90 22 _ 6 _ _ _ _ 81\n_ 40 _ _ _ 12 60 _ 90 _\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n85 55 _ 99 51 _ _ _ _ _\n_ _ _ _ _ _ _ 85 63 153\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n160 _ _ 136 _ _ _ _ _ 170\n_ _ _ _ 120 _ _ 144 _ _\n\"\"\") == \"8640\""
    },
    {
        "number": 3048,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 2\\n1 3\") == \"2\"\nassert solution(\"5\\n2 1\\n1 5\\n3 1\\n4 3\\n\") == \"8\"\nassert solution(\"10\\n1 2\\n2 3\\n2 4\\n1 5\\n3 6\\n2 7\\n7 8\\n5 9\\n5 10\\n\") == \"24\""
    },
    {
        "number": 3049,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"secretmessage\\nboot\") == \"essa\"\nassert solution(\"treetreetreetree\\nwood\") == \"3\"\nassert solution(\"oranges\\napples\") == \"0\""
    },
    {
        "number": 3050,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"6\\n>^<^\\n######\\n#.#..#\\n#....#\\n#..R.#\\n#....#\\n######\\n\") == \"2\"\nassert solution(\"4\\nv<^>\\n####\\n#.R#\\n#..#\\n####\\n\") == \"4\"\nassert solution(\"4\\n<<<\\n####\\n#.R#\\n#..#\\n####\\n\") == \"1\""
    },
    {
        "number": 3051,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2\\n2 3 0 2 9 2 3 0\\n1 6 1 4 6 3 -1 -2\") == \"3\"\nassert solution(\"3\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\") == \"6\"\nassert solution(\"2\\n7 0 0 20 10 3 0 10\\n10 1 0 2 5 2 2 7\") == \"11\""
    },
    {
        "number": 3052,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\") == \"168.7916512460\"\nassert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\") == \"163.5274740179\"\nassert solution(\"0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\") == \"3.7320508076\""
    },
    {
        "number": 3053,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"6 5 3\") == \"rarity\"\nassert solution(\"9 8 1\") == \"canterlot\"\nassert solution(\"5 3 5\") == \"madam\""
    },
    {
        "number": 3054,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road.\\nLeaves, glowing in autumn sun,\\nfall in Virginia.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\"\nassert solution(\"International contest- motivation high Programmers have fun!. \") == \"International\\ncontest- motivation high\\nProgrammers have fun!.\""
    },
    {
        "number": 3055,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2\\nThoreTiemann\\nThoreHusfeldt\") == \"ThoreH\"\nassert solution(\"2\\nThoreHusfeldt\\nJohanSannemo\") == \"Thore is awesome\"\nassert solution(\"2\\nThoreHusfeldter\\nThoreHusfeldt\") == \"Thore sucks\""
    },
    {
        "number": 3056,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"P*P\") == \"6\"\nassert solution(\"L*R\") == \"25\"\nassert solution(\"**\") == \"33\""
    },
    {
        "number": 3057,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4\\nherp is derp\\nderp is herp\\nherp is herp\\nderp is derp\") == \"yes\"\nassert solution(\"3\\noskar not lukas\\noskar is poptart\\nlukas is smart\") == \"wait what?\"\nassert solution(\"1\\nmoo not foo\") == \"yes\""
    },
    {
        "number": 3058,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n5\nAACCMMAA\nACA\nMM\nACMAA\nAA\nA\n\"\"\") == \"1 4\\nMM\\nA\\nAA\\nACA\\nACMAA\\n\"\n\nassert solution(\"\"\"\n3\nACMA\nACM\nACA\nAMA\n\"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n1\nAM\nMA\n\"\"\") == \"impossible\""
    },
    {
        "number": 3059,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"100 111 5\\n20 0.5 10\\n80 0.5 2\\n85 0.5 2\\n90 0.5 2\\n95 0.5 2\") == \"124\"\nassert solution(\"2 4 1\\n1 0.5 5\") == \"3\"\nassert solution(\"10 20 3\\n5 0.3 8\\n6 0.8 3\\n8 0.9 3\") == \"18.9029850746\""
    },
    {
        "number": 3060,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 3\") == \"2 1 2\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"5 22\") == \"4 3 4 2\""
    },
    {
        "number": 3061,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n1 2\\n1 3\\n3 4\\n2 4\") == \"2\"\nassert solution(\"7 6\\n1 2\\n2 3\\n2 5\\n6 3\\n7 2\\n3 4\") == \"2\"\nassert solution(\"7 5\\n1 2\\n2 3\\n3 4\\n5 6\\n6 7\") == \"0\""
    },
    {
        "number": 3062,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"20 0\\n1.00 0.10\") == \"20.00000000\"\nassert solution(\"-10 10\\n10.00 1.00\") == \"3.14159265\"\nassert solution(\"0 20\\n1.00 0.10\") == \"28.26445910\""
    },
    {
        "number": 3063,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4\\n2 100\\n1 100\\n4 70\\n3 70\") == \"170\"\nassert solution(\"3\\n2 120\\n3 50\\n2 80\") == \"150\""
    },
    {
        "number": 3064,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n1 2\\n1 3\\n2 4\") == \"2\"\nassert solution(\"6 6\\n1 2\\n1 3\\n2 4\\n3 4\\n3 5\\n5 6\") == \"5\""
    },
    {
        "number": 3065,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1\\n0\\n2 1 2\\n1 0\\n1 0\") == \"0.5\"\nassert solution(\"8\\n6\\n1 0 2 3 0 1\\n7 1 2 3 4 5 6 7\\n1 0\\n2 0 3\\n2 0 2\\n1 0\\n1 0\\n1 0\\n1 0\") == \"0.0446429\""
    },
    {
        "number": 3066,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"6\\n1 2 3 3 2 1\") == \"3\\n1 6 1\\n2 5 2\\n3 4 3\"\nassert solution(\"4\\n1 2 1 2\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3067,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 2\\n1 100\\n1 1\") == \"1 2 100\"\nassert solution(\"2\\n5 10 20 30 40 50\\n2 28 27\") == \"10 20 28 27 30 40 50\""
    },
    {
        "number": 3068,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"0\\n\") == \"2600\"\nassert solution(\"3\\nAB 1 1\\nAC 2 1\\nBC 2 1\\n\") == \"506\""
    },
    {
        "number": 3069,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"()))\") == \"possible\"\nassert solution(\")))(\") == \"impossible\""
    },
    {
        "number": 3070,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n1 1800 9000 1800\\n1 2000 9200 1600\\n1 2200 9400 1400\") == \"1800\"\nassert solution(\"2 2\\n1 1800 3600 1800\\n1 1900 3600 1600\") == \"impossible\""
    },
    {
        "number": 3071,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2\"\nassert solution(\"2 3\") == \"A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2\\nA1-C2 A2-B2 B1-C1\""
    },
    {
        "number": 3072,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n..\\n..\") == \"7\"\nassert solution(\"4 4\\nX.XX\\nX..X\\n..X.\\n..XX\") == \"9\""
    },
    {
        "number": 3073,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2\\n3 3 2 2 100\\n1 1 1 1 500\") == \"600\"\nassert solution(\"2\\n2 0 2 1 100\\n6 0 8 1 1\") == \"100\""
    },
    {
        "number": 3074,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n361\") == \"3\"\nassert solution(\"2\\n11\") == \"0\""
    },
    {
        "number": 3075,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 10\\n2 100\\n1 10\\n11 5\") == \"10\"\nassert solution(\"3 10\\n2 100\\n1 10\\n13 5\") == \"cancel road trip\""
    },
    {
        "number": 3076,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 9\\n2 8\\n1 1\\n3 4\\n5 100\") == \"1 8 9 9 100 101 108 109 109\"\nassert solution(\"5 7\\n2 2\\n3 8\\n2 7\\n2 4\\n3 8\") == \"0 7 8 11 15 16 19\""
    },
    {
        "number": 3077,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\") == \"1\"\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == \"3\""
    },
    {
        "number": 3078,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5 10000\\n1\\n1\\n1\\n1\\n1\") == \"4\\n4\\n2\\n2\\n0\"\nassert solution(\"5 9\\n1\\n1\\n10\\n1\\n9\") == \"2\\n0\\n0\\n2\\n0\""
    },
    {
        "number": 3079,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2\\nne\") == \"NE\\nn\"\nassert solution(\"4\\nkava\") == \"DA\\nak\""
    },
    {
        "number": 3080,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 4 4\\n1 2\\n1 3\\n2 4\\n3 4\\n1 1 4\\n2 1 4\\n1 1 3\\n2 2 3 2\") == \"2\\n0\\n2\\n1\\n\"\nassert solution(\"8 10 4\\n1 2\\n2 3\\n1 3\\n3 6\\n6 8\\n2 4\\n2 5\\n4 7\\n5 7\\n7 8\\n2 3 4 5 6\\n2 2 6 8\\n1 1 6\\n1 1 8\") == \"0\\n0\\n3\\n2\\n\""
    },
    {
        "number": 3081,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 1\") == \"2\"\nassert solution(\"2 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 3\") == \"1\""
    },
    {
        "number": 3082,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 15\\nD 4 10 1\\nC 6 1\") == \"40.500000000\"\nassert solution(\"3 15\\nD 4 10 1\\nC 6 1\\nC 9 3\") == \"49.000000000\"\nassert solution(\"2 16\\nD 4 10 1\\nC 6 1\") == \"impossible\"\nassert solution(\"2 14\\nD 4 10 1\\nC 6 1\") == \"impossible\"\nassert solution(\"2 15\\nD 4 10 1\\nC 6 2\") == \"impossible\"\nassert solution(\"2 15\\nD 4 10 1\\nC 6 0\") == \"impossible\"\nassert solution(\"2 15\\nD 4 10 1\\nC 6 -1\") == \"impossible\"\nassert solution(\"2 15\\nD 4 10 1\\nC 6 10001\") == \"impossible\"\nassert solution(\"2 15\\nD 4 10 1\\nC 6 10000\") == \"40.500000000\"\nassert solution(\"2 15\\nD 4 10 1\\nC 6 1000000000\") == \"40.500000000\"\nassert solution(\"2 15\\nD 4 10 1\\n
    },
    {
        "number": 3083,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n10\na 2 10 3\nb 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\n\"\"\") == \"5 4 9 3 1 10 7 6 2\"\n\nassert solution(\"\"\"\n10\na 2 10 3\na 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\n\"\"\") == \"fail\""
    },
    {
        "number": 3084,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"00:00\\n01:01\") == \"3\\n00:00\\n01:00\\n01:01\"\nassert solution(\"00:08\\n00:00\") == \"3\\n00:08\\n00:09\\n00:00\""
    },
    {
        "number": 3085,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"(())\") == \"4,8:8,8:\"\nassert solution(\"()\") == \"4,4:\""
    },
    {
        "number": 3086,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1 1\\n26 02 03 03 1\") == \"5\"\nassert solution(\"1 1\\n26 02 03 03 2\") == \"185\""
    },
    {
        "number": 3087,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\"\nassert solution(\"4 2\\n3 4 1 2\") == \"2 3 4 1\"\nassert solution(\"10 3\\n1 2 3 4 5 6 7 8 9 10\") == \"Impossible\"\nassert solution(\"10 10\\n1 2 3 4 5 6 7 8 9 10\") == \"1 2 3 4 5 6 7 8 9 10\""
    },
    {
        "number": 3088,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1374 2\") == \"7413\"\nassert solution(\"210 1\") == \"201\""
    },
    {
        "number": 3089,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 1\\n1 0\") == \"0.666666666666667\"\nassert solution(\"3\\n0 0\\n1 1\\n2 0\") == \"0.733333333333333\""
    },
    {
        "number": 3090,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 3 4\\n10 1 3\\n0 1 20\") == \"9\"\nassert solution(\"2 3 100\\n10 1 10\\n10 1 10\") == \"21\""
    },
    {
        "number": 3091,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"8 2 7 -\\n1 1 1 2\") == \"2\"\nassert solution(\"9 2 7 -\\n1 1 1 2\") == \"4\""
    },
    {
        "number": 3092,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n1 2 5\\n2 3 5\\n3 4 5\") == \"3\\n4\\n3\"\nassert solution(\"4 4\\n1 2 5\\n2 3 5\\n3 4 5\\n1 4 8\") == \"2\\n3\\n2\\n1\""
    },
    {
        "number": 3093,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n2 1\") == \"6\"\nassert solution(\"3 4\\n2 3 1\") == \"24\""
    },
    {
        "number": 3094,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1 2\") == \"2\"\nassert solution(\"5\\n3 4 5 1 2\") == \"1\""
    },
    {
        "number": 3095,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n1 4 10\\n5 2 6\\n11 1 3\") == \"9\"\nassert solution(\"3 3\\n1 3 1\\n2 1 2\\n1 1 1\") == \"4\""
    },
    {
        "number": 3096,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4\\n2 1 3 4\\n1 2\\n1 3\\n3 4\") == \"6\"\nassert solution(\"4\\n3 4 5 6\\n1 2\\n1 3\\n2 4\") == \"3\""
    },
    {
        "number": 3097,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1 10\\n5 8\") == \"18\\n8\"\nassert solution(\"3\\n17 144\\n121 121\\n89 98\") == \"265\\n25\\n10\""
    },
    {
        "number": 3098,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n0 0\\n1 1\\n2 1\\n1 0\") == \"0.50000000\"\nassert solution(\"5 5\\n0 4\\n4 2\\n4 1\\n3 -1\\n-2 4\") == \"12.50000000\""
    },
    {
        "number": 3099,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 1 3\\n0 1\\n1 2\\n2 3\\n1\") == \"2\"\nassert solution(\"4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\") == \"1\""
    },
    {
        "number": 3100,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1 2 1\") == \"6\"\nassert solution(\"2 2 2\") == \"30\""
    },
    {
        "number": 3101,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2020 2020 2020\") == \"2021 2020 2020\"\nassert solution(\"2\\n1 9999999\") == \"impossible\""
    },
    {
        "number": 3102,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"30 70\") == \"11\"\nassert solution(\"66 69\") == \"2\""
    },
    {
        "number": 3103,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 2 0\\n>@\\n>~\") == \"2\"\nassert solution(\"3 5 1\\n>>@<<\\n>~#~<\\n>>>>~\") == \"4\"\nassert solution(\"3 5 1\\n>>@<<\\n>~#~<\\n>>>>~\\n\") == \"4\"\nassert solution(\"3 5 1\\n>>@<<\\n>~#~<\\n>>>>~\\n\\n\") == \"4\"\nassert solution(\"3 5 1\\n>>@<<\\n>~#~<\\n>>>>~\\n\\n\\n\") == \"4\"\nassert solution(\"3 5 1\\n>>@<<\\n>~#~<\\n>>>>~\\n\\n\\n\\n\") == \"4\"\nassert solution(\"3 5 1\\n>>@<<\\n>~#~<\\n>>>>~\\n\\n\\n\\n\\n\") == \"4\"\nassert solution(\"3 5 1\\n>>@<<\\n>~#~<\\n>>>>~\\n\\n\\n\\n\\n\\n\") == \"4\"\nassert solution(\"3 5 1\\n>>@<<\\n>~#~<\\n>>>>~\\n\\n\\n\\n\\n\\n\\n\") == \"4\"\nassert solution(\"3 5 1\\n>>@<<\\n>~#~<\\n>>>>~\\n\\n\\n\\n\\n\\n\\n\\n\") == \"4\"\nassert solution(\"3 5 1\\n>>@<<\\n>~#~<\\n>>>>~\\n\\n\\n\\n\\n\\n\\n\\n\\n\") == \"4\"\nassert solution(\"3 5 1\\n>>@<<\\n>~#~<\\n>>>>~\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\") == \"4\"\nassert solution(\"3 5 1\\n>>@<<\\n>~#~<\\n>>>>~\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\") == \"4\"\nassert solution(\"3 5 1\\n>>@<<\\n>~#~<\\n>>>>~\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\") == \"4\"\nassert solution(\"3 5 1\\n>>@<<\\n>~#~<\\n>>>>~\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\") == \"4\"\nassert solution(\"3 5 1\\n>>@<<\\n>~#~<\\n>>>>~\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\") == \"4\"\nassert solution(\"3 5 1\\n>>@<<\\n>~#~<\\n>>>>~\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\") == \"4\"\nassert solution(\"3 5 1\\n>>@<<\\n>~#~<\\n>>>>~\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\") == \"4\"\nassert solution(\"3 5 1\\n>>@<<\\n>~#~<\\n>>>>~\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\") == \"4\"\nassert solution(\"3 5 1\\n>>@<<\\n>~#~<\\n>>>>~\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\") == \"4\"\nassert solution(\"3 5 1\\n>>@<<\\n>~#~<\\n>>>>~\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\") == \"4\"\nassert solution(\"3 5 1\\n>>@<<\\n>~#~<\\n>>>>~\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\"
    },
    {
        "number": 3104,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\""
    },
    {
        "number": 3105,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"8\\n1\\n3\\n2\\n4\\n1\\n5\\n2\\n4\") == \"1 2\\n\"\nassert solution(\"8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n1\") == \"-1\\n\""
    },
    {
        "number": 3106,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1101\") == \"1\"\nassert solution(\"1\") == \"0\""
    },
    {
        "number": 3107,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3 3\n3 1 3 1\n2 2 1\n3 3 1 3\n1 2\n2 3\n3 1\n\"\"\") == \"1\\n0\\n2\\n\"\n\nassert solution(\"\"\"\n2 1\n4 1 6 3 6\n7 3 4 2 6 5 6 1\n1 2\n\"\"\") == \"3\\n\""
    },
    {
        "number": 3108,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 1\\n1 2 3 4\") == \"4.000000\"\nassert solution(\"4 2\\n2 4 3 4\") == \"3.666666\""
    },
    {
        "number": 3109,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.0 0.0\\n0.0 2.0\") == \"0.750\"\nassert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0\") == \"0.625\""
    },
    {
        "number": 3110,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n1 2 4\\n0 3 6\\n4 0 3\") == \"2\"\nassert solution(\"3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0\") == \"37\""
    },
    {
        "number": 3111,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n1234\\n1 4\\n1 4\\n1 4\") == \"10\\n14\\n18\"\nassert solution(\"4 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\") == \"1\\n4\\n9\\n16\""
    },
    {
        "number": 3112,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 2 3\\n1 3\\n2 3\\n3 4\") == \"2\"\nassert solution(\"5 2 4\\n1 3\\n3 4\\n2 4\\n4 5\") == \"1\""
    },
    {
        "number": 3113,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0\") == \"no\"\nassert solution(\"2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\") == \"no\""
    },
    {
        "number": 3114,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n1 2\\n2 3\\n1 3\") == \"YES\\n1 3\\n2 1\\n3 2\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\") == \"NO\""
    },
    {
        "number": 3115,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n0 > 1\\n1 = 2\\n0 = 2\") == \"inconsistent\"\nassert solution(\"5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 > 3\\n1 > 4\") == \"consistent\""
    },
    {
        "number": 3116,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 0 0\\n1 1 0\\n0 0 0\\n0 0 1\") == \"1.57079633\"\nassert solution(\"4\\n-100 0 0\\n10 0 10\\n-10 -10 -10\\n0 0 0\") == \"41938.65135885\""
    },
    {
        "number": 3117,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"11\\nsabcabcfabc\") == \"3\"\nassert solution(\"18\\ntrutrutiktiktappop\") == \"4\""
    },
    {
        "number": 3118,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2 3 1\\n3 1 2\") == \"2\"\nassert solution(\"6\\n5 1 6 3 2 4\\n4 6 5 1 3 2\") == \"5\""
    },
    {
        "number": 3119,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 1\\n0 10 20\\n0 10\") == \"4\"\nassert solution(\"6 1\\n0 10 20 26 40 50\\n0 40\") == \"9\""
    },
    {
        "number": 3120,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"\"\"concat(shuffle([1,2]),shuffle([1,2]))\nshuffle([1,2,1,2])\"\"\") == \"not equal\"\n\nassert solution(\"\"\"sorted(concat([3,2,1],[4,5,6]))\n[1,2,3,4,5,6]\"\"\") == \"equal\""
    },
    {
        "number": 3121,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1 2\\n3 2\\n1 2 1 2\\n2 3 1 2\") == \"Oh no\"\nassert solution(\"1 3\\n3 2\\n1 2 1 2\\n2 3 1 2\") == \"1\""
    },
    {
        "number": 3122,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n1 2 2\\n2 3 1\\n3 4 1\\n4 1 2\") == \"3\"\nassert solution(\"5 5\\n1 2 1\\n2 3 1\\n2 4 1\\n2 5 1\\n4 5 1\") == \"impossible\""
    },
    {
        "number": 3123,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5\\n2 1 1 1 3\") == \"2\"\nassert solution(\"1\\n22\") == \"4\""
    },
    {
        "number": 3124,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3 1 5\") == \"3\"\nassert solution(\"4\\n1 2 3 4\") == \"2\""
    },
    {
        "number": 3125,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"a+b-c\\na-b+d-c\") == \"- +d-\\n- +d-\"\nassert solution(\"knuth-morris-pratt\\nknuthmorrispratt\") == \"<any> <empty>\""
    },
    {
        "number": 3126,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1 1\\n0\\n7\\nt 0\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\") == \"0\\n1\\n3\\n2\\n3\\n5\\n3\\n\"\nassert solution(\"3 0\\n2 6 6\\n10\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\nt 7\\nt 8\\nt 9\\nt 10\") == \"11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\\n\""
    },
    {
        "number": 3127,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"7 8\\n1 2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1\") == \"2\\n4 6\"\nassert solution(\"5 6\\n1 2 2\\n2 3 2\\n3 5 2\\n1 4 3\\n4 5 3\\n1 5 6\") == \"0\""
    },
    {
        "number": 3128,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"12\\n1 1\\n1 2\\n1 3\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n2 6\") == \"4\\n5\\n6\\n1\\n2\\n3\\n\"\nassert solution(\"6\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\") == \"1\\n2\\n3\\n\""
    },
    {
        "number": 3129,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"CPCC\") == 1\nassert solution(\"PPPPCCCC\") == 8"
    },
    {
        "number": 3130,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 2 1\\n1 2\\n2 3\\n2\") == \"1 2 3\\n\"\nassert solution(\"3 2 1\\n1 3\\n2 3\\n3\") == \"3\\n\""
    },
    {
        "number": 3131,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n2 4 2 3 4\") == \"39\"\nassert solution(\"5 1\\n1 0 1 1 1\") == \"4\""
    },
    {
        "number": 3132,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\nxx.\\nxxx\\n...\") == \"1 1 2\\n2 3 1\"\nassert solution(\"4 6\\nxx....\\nxx.xxx\\n...xxx\\n...xxx\") == \"1 1 2\\n2 4 3\""
    },
    {
        "number": 3133,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 1 2\\n1 2 1\\n0 2 0\\n0 1 0\") == \"indistinguishable\"\nassert solution(\"2 0 1\\n1 1 1\\n0 0 0\") == \"0\""
    },
    {
        "number": 3134,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"0110\\n1001\") == \"1111\\n0111\\n1110\\n1111\"\nassert solution(\"0\\n1\") == \"-1\""
    },
    {
        "number": 3135,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"10000\") == \"+0000\"\nassert solution(\"1111\") == \"+000-\""
    },
    {
        "number": 3136,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"7 8 3 2\\n1 2\\n7 3 4\\n5 6\\n1 3 2\\n1 4 1\\n1 5 1\\n1 6 6\\n2 3 9\\n2 4 2\\n2 6 4\\n7 6 5\") == \"9\"\nassert solution(\"2 1 1 1\\n2 2\\n1\\n1\\n1 2 1\") == \"2\""
    },
    {
        "number": 3137,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 3 1\\n2 2\\n1 1 R\\n010\\n000\\n000\") == \"2\"\nassert solution(\"3 4 2\\n2 2\\n3 4 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301\") == \"7\""
    },
    {
        "number": 3138,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5\\n2 2 1 2 3\") == \"2\"\nassert solution(\"8\\n1 2 4 1 1 2 5 1\") == \"4\""
    },
    {
        "number": 3139,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"6\\nD 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3\\n\") == \"NE\\nNE\\nNE\\n\"\nassert solution(\"6\\nD 8 8\\nD 2 4\\nD 5 6\\nP 2\\nD 6 2\\nP 4\\n\") == \"3\\n1\\n\""
    },
    {
        "number": 3140,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 2 1 10\\n0 0\\n1 4\\n3 2\") == \"2\"\nassert solution(\"2 3 5 6\\n1 1\\n1 1 6\\n1 2 2\") == \"5\""
    },
    {
        "number": 3141,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"\"\"3\n1.0 0.0 1.4\n-1.0 0.0 -1.4\n0.0 1.0 -0.2\"\"\") == \"2.0000000000\"\n\nassert solution(\"\"\"5\n1.4 1.0 0.0\n-0.4 -1.0 0.0\n-0.1 -0.25 -0.5\n-1.2 0.0 0.9\n0.2 0.5 0.5\"\"\") == \"2.0000000000\""
    },
    {
        "number": 3142,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1 9 5\") == \"1\\n5\"\nassert solution(\"1 100 10\") == \"9\\n19\""
    },
    {
        "number": 3143,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1 1\\n1\\n1\") == \"1\\n1\"\nassert solution(\"4 5\\n4 1 2 4 4\\n4 3 2 1\") == \"7\\n4 4 2 4 4 1 4\""
    },
    {
        "number": 3144,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 10 3 2\") == \"4\"\nassert solution(\"10 10 5 0\") == \"10\""
    },
    {
        "number": 3145,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 1 20\\n0123456789\") == \"10\"\nassert solution(\"6 100 9294\\n23689\") == \"111\""
    },
    {
        "number": 3146,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\") == \"1.500000 2.666667\"\nassert solution(\"5 2\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\") == \"1.500000 3.666667\""
    },
    {
        "number": 3147,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 6\\n101010\\n111001\\n101001\") == \"3\"\nassert solution(\"4 5\\n10010\\n01010\\n10101\\n01001\") == \"3\""
    },
    {
        "number": 3148,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5\\n0 0\\n0 1\\n1 0\\n0 -1\\n-1 0\") == \"-3 -1\\n3 1\"\nassert solution(\"4\\n2 4\\n6 -1\\n3 5\\n-1 -1\") == \"3 4\\n3 -1\""
    },
    {
        "number": 3149,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 6 5 45 20\\n0 0\\n2 0\\n1 1.5\") == \"2 5.086781\"\nassert solution(\"3 0.25 2 45 20\\n0 0\\n2 0\\n1 1.5\") == \"1 12.715255\""
    },
    {
        "number": 3150,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"6\\n0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\") == \"8\"\nassert solution(\"4\\n5 1 7 1\\n1 1 5 1\\n4 0 4 4\\n7 0 3 4\") == \"1\""
    },
    {
        "number": 3151,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"7\") == \"4 3\"\nassert solution(\"10\") == \"impossible\""
    },
    {
        "number": 3152,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1\\n3\") == \"16\"\nassert solution(\"4\\n2\\n4\\n1\\n4\") == \"109\""
    },
    {
        "number": 3153,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n5 1\\n1 2\\n1 2\\n1 2\") == \"3\\n1 2 1\\n1 2 2\\n1 2 2\"\nassert solution(\"4 3\\n5 3 1 1\\n1 3\\n2 3\\n4 1\") == \"5\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1\\n3 1 0\""
    },
    {
        "number": 3154,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n6 7\\n0 1 1\\n0 2 2\\n1 1 3\\n2 1 2\\n2 2 1\\n3 2 3\\n4 2 1\") == \"1 2\"\nassert solution(\"2 1\\n20 3\\n0 1 1\\n10 1 0\\n10 2 1\") == \"impossible\""
    },
    {
        "number": 3155,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"10\") == \"5 2\"\nassert solution(\"2020\") == \"2020 1\""
    },
    {
        "number": 3156,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n3\n0 chocolate\n1 icecream\n2 cookies\n3\nchocolate\ncookies\nicecream\n\"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n3\n4\n0 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\nicecream\ncookies\n\"\"\") == \"unique\"\n\nassert solution(\"\"\"\n3\n4\n0 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\nicecream\ncookies\n\"\"\") == \"unique\"\n\nassert solution(\"\"\"\n3\n4\n0 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\nicecream\ncookies\n\"\"\") == \"unique\"\n\nassert solution(\"\"\"\n3\n4\n0 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\nicecream\ncookies\n\"\"\") == \"unique\"\n\nassert solution(\"\"\"\n3\n4\n0 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\nicecream\ncookies\n\"\"\") == \"unique\"\n\nassert solution(\"\"\"\n3\n4\n0 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\nicecream\ncookies\n\"\"\") == \"unique\"\n\nassert solution(\"\"\"\n3\n4\n0 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\nicecream\ncookies\n\"\"\") == \"unique\"\n\nassert solution(\"\"\"\n3\n4\n0 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\nicecream\ncookies\n\"\"\") == \"unique\"\n\nassert solution(\"\"\"\n3\n4\n0 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\nicecream\ncookies\n\"\"\") == \"unique\"\n\nassert solution(\"\"\"\n3\n4\n0 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\nicecream\ncookies\n\"\"\") == \"unique\"\n\nassert solution(\"\"\"\n3\n4\n0 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\nicecream\ncookies\n\"\"\") == \"unique\"\n\nassert solution(\"\"\"\n3\n4\n0 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\nicecream\ncookies\n\"\"\") == \"unique\"\n\nassert solution(\"\"\"\n3\n4\n0 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\nicecream\ncookies\n\"\"\") == \"unique\"\n\nassert solution(\"\"\"\n3\n4\n0 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\nicecream\ncookies\n\"\"\") == \"unique\"\n\nassert solution(\"\"\"\n3\n4\n0 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\nicecream\ncookies\n\"\"\") == \"unique\"\n\nassert solution(\"\"\"\n3\n4\n0 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\nicecream\ncookies\n\"\"\") == \"unique\"\n\nassert solution(\"\"\"\n3\n4\n0 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\nicecream\ncookies\n\"\"\") == \"unique\"\n\nassert solution(\"\"\"\n3\n4\n0 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\nicecream\ncookies\n\"\"\") == \"unique\"\n\nassert solution(\"\"\"\n3\n4\n0 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\nicecream\ncookies\n\"\"\") == \"unique\"\n\nassert solution(\"\"\"\n3\n4\n0 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\nicecream\ncookies\n\"\"\") == \"unique\"\n\nassert solution(\"\"\"\n3\n4\n0 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\nicecream\ncookies\n\"\"\") == \"unique\"\n\nassert solution(\"\"\"\n3\n4\n0 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\nicecream\ncookies\n\"\"\") == \"unique\"\n\nassert solution(\"\"\"\n3\n4\n0 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\nicecream\ncookies\n\"\"\") == \"unique\"\n\nassert solution(\"\"\"\n3\n4\n0 chocolate\n1 icecream\n2 cookies\n2"
    },
    {
        "number": 3157,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1 0 10\") == \"0\"\nassert solution(\"1 2 10\") == \"1\""
    },
    {
        "number": 3158,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n............................................................\n............................................................\n....XXXX....................................................\n....XXXX..................................XXXX..............\n....XXXX...................................XXX..............\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n\"\"\") == \"1 pan\"\n\nassert solution(\"\"\"\n............................................................\n............................................................\n...............................................XX...........\n.....................................XXX......XXXX..........\n....................................XXXX........X...........\n........XXX....XXX....................X.....................\n.........XXX...XX...........................................\n............................................................\n............XX..............................................\n...........XXX..............................................\n............................................................\n............................................XX..............\n...........................................XXXX.............\n.............................................XX.............\n............................................................\n\"\"\") == \"3 zoom out\""
    },
    {
        "number": 3159,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"\"\"8 20\n apples are great!  \n++++++++++++++++++++\n+ oranges are      +\n+ way better!      +\n+ #oranges>apples  +\n++++++++++++++++++++\n check out our      \n fresh apples!      \n\"\"\") == \"\"\" apples are great!  \n                    \n                    \n                    \n                    \n                    \n check out our      \n fresh apples!    \"\"\"\n\nassert solution(\"\"\"7 7\n+++++++\n+  =  +\n+ +++ +\n+ + + +\n+ +++ +\n+     +\n+++++++\n\"\"\") == \"\"\"\n       \n       \n       \n       \n       \n       \n\"\"\""
    },
    {
        "number": 3160,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"HH\") == \"2.0\"\nassert solution(\"H?\") == \"1.5\""
    },
    {
        "number": 3161,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4\\n0001\\n0001\\n0011\\n1110\") == \"1\\n0001\\n0001\\n0011\\n1111\"\nassert solution(\"4\\n1111\\n1111\\n1111\\n1111\") == \"6\\n0011\\n0011\\n0111\\n1101\""
    },
    {
        "number": 3162,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"\"\"4\nh 1 4 1\nv 2 4 2\nh 10 2 2\nv 11 2 3\"\"\") == \"2\"\n\nassert solution(\"\"\"4\nh 1 10 1\nh 5 10 2\nv 1 10 1\nv 5 10 3\"\"\") == \"4\""
    },
    {
        "number": 3163,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5\") == \"2\"\nassert solution(\"3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8\") == \"4\""
    },
    {
        "number": 3164,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"6\\n1 2 3 3 4 2\") == \"2\"\nassert solution(\"8\\n1 2 1 3 1 3 1 2\") == \"4\""
    },
    {
        "number": 3165,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 2 2\\n1 1 1\\n2 2 1\\n2 2 2 1\\n1 1 1 2\") == \"4\\n0\"\nassert solution(\"2 2 2\\n1 1 1\\n2 2 2\\n2 2 2 1\\n1 1 1 2\") == \"4\\n2\""
    },
    {
        "number": 3166,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2\") == \"1\"\nassert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n1 2\") == \"impossible\""
    },
    {
        "number": 3167,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"10 4\\n1 1 2 1\\n3\\n0 9\\n2 6\\n7 7\") == \"35\\n18\\n3\\n\"\nassert solution(\"11 3\\n3 7 10\\n3\\n0 10\\n2 6\\n7 7\") == \"8\\n2\\n1\\n\""
    },
    {
        "number": 3168,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1\\n2\\n3\\n4\") == \"0\\n1\\n3\\n6\"\nassert solution(\"5\\n3\\n2\\n4\\n1\\n5\") == \"0\\n1\\n2\\n4\\n6\""
    },
    {
        "number": 3169,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 3 2 2\\n1 1 3 2\\n2 4 7 3\\n3 3 5 3\") == \"2 4 1 3\"\nassert solution(\"4\\n0 0 1 1\\n1 2 0 3\\n2 2 3 3\\n4 0 3 1\") == \"4 3 1 2\""
    },
    {
        "number": 3170,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\""
    },
    {
        "number": 3171,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1 2\\n1 charlatan 1\\n1 not charlatan 1\") == \"charlatan\\n\"\nassert solution(\"2 1\\n1 and fabulist 1 fabulist 2\") == \"fabulist\\ntruther\\n\""
    },
    {
        "number": 3172,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1.00 5.00\\n3.00 3.00\\n4.00 2.00\\n6.00 4.50\\n7.00 1.00\") == \"4\"\nassert solution(\"3\\n-1.50 -1.00\\n1.50 -1.00\\n0.00 1.00\") == \"3\""
    },
    {
        "number": 3173,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 5 2\\nR..?.\\n.X...\\n100 100 7 100 8\") == \"16\"\nassert solution(\"2 3 1\\nX..\\n.?.\\n10 1000 1\") == \"10\""
    },
    {
        "number": 3174,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n0 4 4\\n1 5 1\\n2 6 1\") == \"1.414\"\nassert solution(\"6 11\\n0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10\") == \"5.657\""
    },
    {
        "number": 3175,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 1 1 1 1\") == \"1.0\"\nassert solution(\"3 1 1 1\") == \"0.433\"\nassert solution(\"5 1 2 3 4 5\") == \"10.828\"\nassert solution(\"6 1 2 3 4 5 6\") == \"13.236\"\nassert solution(\"7 1 2 3 4 5 6 7\") == \"15.644\""
    },
    {
        "number": 3176,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"6 5\\n1 1 5\\n2 1 5\\n1 2 4\\n2 3 5\\n3 2 30\\n3 3 5\") == \"5\\n4\\n1 1\\n2 1\\n2 3\\n3 3\"\nassert solution(\"8 10\\n1 1 15\\n2 2 30\\n1 2 8\\n2 1 7\\n3 2 8\\n2 3 7\\n4 2 100\\n3 3 15\") == \"36\\n5\\n1 1\\n1 2\\n2 2\\n3 2\\n3 3\""
    },
    {
        "number": 3177,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 1\\n2 1\") == \"1\"\nassert solution(\"3 2\\n2 1 3\\n1 3\\n2 3\") == \"3\""
    },
    {
        "number": 3178,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5 8\\n1 4\\n4 5\\n1 5\\n1 2\\n1 3\\n2 3\\n3 5\\n2 5\") == \"-1\"\nassert solution(\"6 5\\n2 4\\n3 5\\n1 5\\n3 6\\n1 6\") == \"5\""
    },
    {
        "number": 3179,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 1\\n1 1\\n5 1\\n5 5\\n4 2\") == \"4.00\"\nassert solution(\"6 3\\n-8 -8\\n0 -1\\n8 -8\\n1 0\\n0 10\\n-1 0\") == \"9.00\""
    },
    {
        "number": 3180,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 3 2\\nPAINT 2 0 0 3 3\\nPAINT 3 0 3 3 3\") == \"2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\"\nassert solution(\"3 3 4\\nPAINT 3 0 0 1 1\\nSAVE\\nPAINT 2 1 1 2 2\\nLOAD 1\") == \"3 1 1\\n1 3 1\\n1 1 1\""
    },
    {
        "number": 3181,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 3\") == \"1 4 2 3\"\nassert solution(\"5 1\") == \"-1\""
    },
    {
        "number": 3182,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n4 2\\n2 1\\n1 3\") == \"1\"\nassert solution(\"4\\n5 0\\n2 6\\n8 6\\n5 7\") == \"0\""
    },
    {
        "number": 3183,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10\") == \"4 140\"\nassert solution(\"2 1 0 1\\n0 1 1000 100\") == \"1000 100000\""
    },
    {
        "number": 3184,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"100 7\\n1 50\\n50 70\\n70 90\\n90 40\\n20 60\\n60 80\\n80 20\") == \"3\"\nassert solution(\"8 2\\n8 3\\n5 7\") == \"impossible\""
    },
    {
        "number": 3185,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"120\") == \"5\"\nassert solution(\"51090942171709440000\") == \"21\""
    },
    {
        "number": 3186,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"10 1 2\") == \"45\"\nassert solution(\"3 3 3\") == \"10\""
    },
    {
        "number": 3187,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n10\") == \"18\"\nassert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\") == \"20\"\nassert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n1\") == \"impossible\""
    },
    {
        "number": 3188,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1 5 10\\n7 8 2\") == \"3\"\nassert solution(\"3\\n-1 -1 -1\\n5 5 5\\n10 10 10\") == \"11\""
    },
    {
        "number": 3189,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 1\\n110\\n011\") == \"2\"\nassert solution(\"4 2\\n1000\\n1000\\n0000\\n0010\") == \"0\""
    },
    {
        "number": 3190,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 2 3\\n3\") == \"1\"\nassert solution(\"3\\n1 3 2\\n2\") == \"5\""
    },
    {
        "number": 3191,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1 100 20\") == \"0\"\nassert solution(\"10 10 1\") == \"19\""
    },
    {
        "number": 3192,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"\"\"4\na b c d\na 1\nimport d, b, c\nb 2\nimport d\nimport c\nc 1\nimport c\nd 0\"\"\") == \"c\"\n\nassert solution(\"\"\"5\nclassa classb myfilec execd libe\nclassa 2\nimport classb\nimport myfilec, libe\nclassb 1\nimport execd\nmyfilec 1\nimport libe\nexecd 1\nimport libe\nlibe 0\"\"\") == \"SHIP IT\""
    },
    {
        "number": 3193,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5+3+x\\n9 10\") == \"1\"\nassert solution(\"20+3+x\\n0 5\") == \"2\""
    },
    {
        "number": 3194,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 10\\n0 15\\n5 20\") == \"yes\"\nassert solution(\"2 10\\n1 15\\n0 20\") == \"no\""
    },
    {
        "number": 3195,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 4 4\\n3\\n2 green\\n18 yellow\\n34 red\\n5 green\\n\") == \"0.25\"\nassert solution(\"4 4 4\\n4\\n2 green\\n6 yellow\\n10 red\\n14 green\\n4 red\\n\") == \"0\""
    },
    {
        "number": 3196,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"6 7\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\") == \"3\"\nassert solution(\"6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\") == \"inf\""
    },
    {
        "number": 3197,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n1 2 3 4\") == \"4\"\nassert solution(\"12 3\\n2 3 4 5 6 7 4 7 8 8 12 12\") == \"2\""
    },
    {
        "number": 3198,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5\\nhoose\\nhose\\nnose\\nnoises\\nnoise\") == \"hoose\\nnoises\\nnoise\"\nassert solution(\"4\\nhose\\nhoose\\noose\\nmoose\") == \"hoose\\nmoose\""
    },
    {
        "number": 3199,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1 1\\n3\") == \"2\\n2\\n5\"\nassert solution(\"2 3\\n4\") == \"0\\n16\\n8\""
    },
    {
        "number": 3200,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1\\n\") == \"44.72135955\"\nassert solution(\"2\\n50 45 45\") == \"68.52419365\""
    },
    {
        "number": 3201,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 3 1 5\\n1 2\") == \"1\\n3\\n2\"\nassert solution(\"3 4 2 3\\n1 3 1\") == \"1\\n1\\n0\\n2\""
    },
    {
        "number": 3202,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 5\\n1 1\") == \"3\"\nassert solution(\"5 3\\n2 2 3 2 2\") == \"2\""
    },
    {
        "number": 3203,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2\\n100 100\\n50 50\") == \"50\"\nassert solution(\"2\\n0 50\\n50 0\") == \"25\""
    },
    {
        "number": 3204,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2\\n100\\n200\") == \"160\"\nassert solution(\"3\\n100\\n200\\n2010\") == \"250\""
    },
    {
        "number": 3205,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n0 1 1\\n2 3 1\") == \"2\"\nassert solution(\"5 5\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\") == \"0\""
    },
    {
        "number": 3206,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n3 3 2 1\\n3 3 3\") == \"1 1\\n1 2\\n2 3 4\"\nassert solution(\"4 2\\n3 3 2 2\\n6 3\") == \"-1\""
    },
    {
        "number": 3207,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 3 10\\n0 0 D\\n10 1 L\") == \"10.0\\n10.0\\n0.0\"\nassert solution(\"4 3 7\\n1 0 D\\n3 0 D\\n4 1 L\\n6 2 D\") == \"10.0\\n4.0\\n1.0\""
    },
    {
        "number": 3208,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\""
    },
    {
        "number": 3209,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"Hamburg Bremen\\n3\\nHamburg Bremen 15 68 10 5\\nHamburg Bremen 46 55 50 60\\nBremen Frankfurt 14 226 10 120\") == \"68.3\"\nassert solution(\"Amsterdam Rotterdam\\n1\\nAmsterdam Utrecht 10 22 5 10\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3210,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n*-*.*\\n|.|.|\\n*.*-*\\n|...|\\n*.*.*\") == \"3\"\nassert solution(\"2\\n*.*\\n...\\n*.*\") == \"4\""
    },
    {
        "number": 3211,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"8\\n12210020\") == \"4\"\nassert solution(\"4\\n1111\") == \"impossible\""
    },
    {
        "number": 3212,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n500 500 499\\n0 0 999\\n1000 1000 200\") == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\\n\"\nassert solution(\"4\\n250 250 300\\n750 250 300\\n250 750 300\\n750 750 300\") == \"Bill will be bitten.\\n\""
    },
    {
        "number": 3213,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"8 3\\n++xx+x++\") == \"++xx+o++\"\nassert solution(\"8 3\\nxxxxxxxx\") == \"xxoooooo\""
    },
    {
        "number": 3214,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"\"\"Lost is Close to Lose\n\n\"Better Documents Inc. wants to add Typo Checking in to the\nnext generation of word processors,\" he said.\n***\"\"\") == \"\"\"close: lose\nhe: the\nin: inc is\ninc: in\nis: in\nlose: close lost\nlost: lose\nthe: he\n\n\"\"\"\n\nassert solution(\"\"\"The fox said, \"When?\"\n\"Not till 12 o'clock\", replied the hen.\n\"That clock is stopped, it will never strike.\", he said.\n***\"\"\") == \"\"\"clock: oclock\nhe: hen the\nhen: he when\nis: it\nit: is\noclock: clock\nthe: he\ntill: will\nwhen: hen\nwill: till\n\"\"\""
    },
    {
        "number": 3215,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"10\\n1 2 7 3 8 9 4 5 10 6\") == \"1\"\nassert solution(\"10\\n3 8 1 9 4 5 2 7 10 6\") == \"2\""
    },
    {
        "number": 3216,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"0.142857 6\") == \"1/7\"\nassert solution(\"1.6 1\") == \"5/3\""
    },
    {
        "number": 3217,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1\\n0 0 0\") == \"6\"\nassert solution(\"2\\n0 0 0\\n0 0 1\") == \"10\""
    },
    {
        "number": 3218,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n-1 2 -1\\n2 2\\n1 -1 1\") == \"1\"\nassert solution(\"7\\n-1 4 5 1 0 -1 -1\\n-1 3 2 0 0 1\\n-1 4 -1 1 0 -1 -1\\n1 3 4 2 2 4\\n0 2 3 -1 4 4 2\\n-1 4 4 3 3 2\\n1 -1 -1 -1 4 2 -1\") == \"1\""
    },
    {
        "number": 3219,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1001\") == \"3\"\nassert solution(\"1111\") == \"1\""
    },
    {
        "number": 3220,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 1 1\") == \"LLL\"\nassert solution(\"5\\n1 2 2 1 2\") == \"LLRLR\""
    },
    {
        "number": 3221,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"7 7 10\\n1 2 1000000\\n2 3 2000000\\n3 4 3000000\\n4 5 4000000\\n5 6 5000000\\n6 7 6000000\\n7 1 7000000\") == \"49000000000070\"\nassert solution(\"6 6 7\\n1 3 1000000\\n3 5 3000000\\n5 1 5000000\\n2 4 2000000\\n4 6 4000000\\n6 2 6000000\") == \"25000000000021\""
    },
    {
        "number": 3222,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 2\") == \"2\\n2\\n0\\n1\\n2\\n2\\n3\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 3\") == \"Yeah!\\n\"\nassert solution(\"5 5\\n0 1\\n1 0\\n2 3\\n3 2\\n4 0\\n\") == \"3\\n2\\n0\\n1\\n2\\n3\\n4\\n\"\nassert solution(\"5 5\\n0 1\\n1 0\\n2 3\\n3 2\\n4 4\\n\") == \"2\\n2\\n0\\n1\\n2\\n3\\n4\\n\"\nassert solution(\"5 5\\n0 1\\n1 0\\n2 3\\n3 2\\n4 2\\n\") == \"2\\n2\\n0\\n1\\n2\\n3\\n4\\n\"\nassert solution(\"5 5\\n0 1\\n1 0\\n2 3\\n3 2\\n4 1\\n\") == \"2\\n2\\n0\\n1\\n2\\n3\\n4\\n\"\nassert solution(\"5 5\\n0 1\\n1 0\\n2 3\\n3 2\\n4 3\\n\") == \"2\\n2\\n0\\n1\\n2\\n3\\n4\\n\"\nassert solution(\"5 5\\n0 1\\n1 0\\n2 3\\n3 2\\n4 5\\n\") == \"2\\n2\\n0\\n1\\n2\\n3\\n4\\n\"\nassert solution(\"5 5\\n0 1\\n1 0\\n2 3\\n3 2\\n4 4\\n5 0\\n\") == \"3\\n2\\n0\\n1\\n2\\n3\\n4\\n5\\n\"\nassert solution(\"5 5\\n0 1\\n1 0\\n2 3\\n3 2\\n4 4\\n5 1\\n\") == \"3\\n2\\n0\\n1\\n2\\n3\\n4\\n5\\n\"\nassert solution(\"5 5\\n0 1\\n1 0\\n2 3\\n3 2\\n4 4\\n5 2\\n\") == \"3\\n2\\n0\\n1\\n2\\n3\\n4\\n5\\n\"\nassert solution(\"5 5\\n0 1\\n1 0\\n2 3\\n3 2\\n4 4\\n5 3\\n\") == \"3\\n2\\n0\\n1\\n2\\n3\\n4\\n5\\n\"\nassert solution(\"5 5\\n0 1\\n1 0\\n2 3\\n3 2\\n4 4\\n5 4\\n\") == \"3\\n2\\n0\\n1\\n2\\n3\\n4\\n5\\n\"\nassert solution(\"5 5\\n0 1\\n1 0\\n2 3\\n3 2\\n4 4\\n5 5\\n\") == \"3\\n2\\n0\\n1\\n2\\n3\\n4\\n5\\n\"\nassert solution(\"5 5\\n0 1\\n1 0\\n2 3\\n3 2\\n4 4\\n5 6\\n\") == \"3\\n2\\n0\\n1\\n2\\n3\\n4\\n5\\n\"\nassert solution(\"5 5\\n0 1\\n1 0\\n2 3\\n3 2\\n4 4\\n5 7\\n\") == \"3\\n2\\n0\\n1\\n2\\n3\\n4\\n5\\n\"\nassert solution(\"5 5\\n0 1\\n1 0\\n2 3\\n3 2\\n4 4\\n5 8\\n\") == \"3\\n2\\n0\\"
    },
    {
        "number": 3223,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 1 2\") == \"POSSIBLE\\n1 3\\n2 3\"\nassert solution(\"2\\n1 2\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3224,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"\"\"0 0 0\n1 0 0\n0 1 0\n0 0 1\"\"\") == \"0.5 0.5 0.5\"\n\nassert solution(\"\"\"-1 0 0\n1 0 0\n0 1 0\n0 0 1\"\"\") == \"0.0 0.0 -0.0\""
    },
    {
        "number": 3225,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"10\\n3 6 2 3 2 2 2 1 5 6\") == \"2\\n3 2 2 1 5\\n3 2 2\\n6 6\"\nassert solution(\"3\\n17 17 17\") == \"0\\n17 17 17\""
    },
    {
        "number": 3226,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\\n3 2\") == \"IMPOSSIBLE\"\nassert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\\n2 3\") == \"74.6666666667\""
    },
    {
        "number": 3227,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5 6\\n1 2\\n2 3\\n3 1\\n3 4\\n1 4\\n4 5\") == \"1\\n2\\n1\\n2\\n2\\n1\"\nassert solution(\"7 7\\n1 2\\n2 3\\n3 1\\n4 5\\n5 6\\n6 7\\n7 4\") == \"0\""
    },
    {
        "number": 3228,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 10 2\\n0\\n15\\n30\\n45\") == \"10\"\nassert solution(\"4 10 3\\n0\\n15\\n30\\n45\") == \"5\""
    },
    {
        "number": 3229,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n50 50 75\\n25 25 25\") == \"2\"\nassert solution(\"5 2\\n50 50 50 50\\n25 25 25 25\") == \"1\""
    },
    {
        "number": 3230,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n.LX.\\n.X..\\n....\\n.L..\\n\") == \"1\"\nassert solution(\"4 4\\n.XLX\\n.X..\\n...L\\n.X..\\n\") == \"2\""
    },
    {
        "number": 3231,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\") == \"home\\n2\\n2 0 1\\n2 2 3\"\nassert solution(\"5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\") == \"detention\""
    },
    {
        "number": 3232,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == \"-1\""
    },
    {
        "number": 3233,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 2 3 4 5\") == \"5\"\nassert solution(\"6\\n3 2 1 6 4 5\") == \"8\""
    },
    {
        "number": 3234,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"47\") == \"1\"\nassert solution(\"523\") == \"2\""
    },
    {
        "number": 3235,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 5\\n0 1 10\\n1 2 10\\n0 3 10\\n3 2 10\\n2 0 20\") == \"0\\n\"\nassert solution(\"2 2\\n0 1 20\\n1 0 5\") == \"1\\n0 1 15\\n\""
    },
    {
        "number": 3236,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5\") == \"5\"\nassert solution(\"4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4\") == \"1\""
    },
    {
        "number": 3237,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"020302\") == \"7\"\nassert solution(\"1311\") == \"24\""
    },
    {
        "number": 3238,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"8 10\\n#.#..##..#\\n####..####\\n###.##....\\n...#..####\\n....##....\\n.#.##..##.\\n##########\\n##########\\n\") == \"3 1 3 10\\n\"\nassert solution(\"5 20\\n###########.#.#.#.#.\\n###########...#.###.\\n##########..##.#..##\\n###########..#.#.##.\\n###########.###...#.\\n\") == \"1 15 5 15\\n\""
    },
    {
        "number": 3239,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"50 0.125\") == \"16.339203308\"\nassert solution(\"201 1.000\") == \"5.000000000\""
    },
    {
        "number": 3240,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n0.5 1\") == \"2\"\nassert solution(\"4 3\\n1 11\\n0.4 1\") == \"3\""
    },
    {
        "number": 3241,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n7 1\\n3 2\\n10 0\") == \"10.5\"\nassert solution(\"3\\n2 1\\n4 0\\n0 3\") == \"-1\""
    },
    {
        "number": 3242,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 0.5\\n2 0.5\\n1 0.5\") == \"1\"\nassert solution(\"2 0.5\\n2 0.51\\n1 0.49\") == \"2\""
    },
    {
        "number": 3243,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 5 2\\n3 3 3 3\\n0 1\\n0 3\\n1 3\\n1 2\\n2 3\") == \"yes\"\nassert solution(\"5 4 4\\n1 1 2 2 2\\n0 1\\n2 3\\n3 4\\n4 2\") == \"yes\"\nassert solution(\"5 4 5\\n1 1 2 2 2\\n0 1\\n2 3\\n3 4\\n4 2\") == \"no\""
    },
    {
        "number": 3244,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n5\\n5\\n5\") == \"2\\n1\\n2\\n\"\nassert solution(\"4\\n20\\n15\\n17\\n14\") == \"5\\n8\\n2\\n7\\n\""
    },
    {
        "number": 3245,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\npython\\np^ main.py\\n^ -n 10\") == \"python\\npython main.py\\npython main.py -n 10\"\nassert solution(\"5\\npython\\njava\\n^\\n^^^\\n^^^\") == \"python\\njava\\njava\\npython\\njava\\ndef solution(stdin: str) -> str:\\n\\tpass\""
    },
    {
        "number": 3246,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\\n5\\nmakes\\nperfect\\nsense\\nsentence\\nthis\") == \"this sentence makes perfect sense\"\nassert solution(\"hitehre\\n2\\nthere\\nhello\") == \"impossible\""
    },
    {
        "number": 3247,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"4\"\nassert solution(\"2 2\") == \"16\""
    },
    {
        "number": 3248,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"6\\nabcbab\\n2\\ncb\\ncbab\") == \"2\"\nassert solution(\"4\\nabab\\n2\\nbac\\nbaba\") == \"4\""
    },
    {
        "number": 3249,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"50\\n4\\n110 10\\n80 10\\n80 0\\n110 0\") == \"6\\n85\\n90\\n95\\n100\\n105\"\nassert solution(\"24\\n3\\n10 10\\n30 10\\n20 20\") == \"4\\n17.071067\\n20\\n22.928932\""
    },
    {
        "number": 3250,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"10 11\") == \"yes\"\nassert solution(\"10 7\") == \"yes\"\nassert solution(\"10 13\") == \"no\"\nassert solution(\"10 17\") == \"no\"\nassert solution(\"10 19\") == \"no\"\nassert solution(\"10 23\") == \"no\"\nassert solution(\"10 29\") == \"no\"\nassert solution(\"10 31\") == \"no\"\nassert solution(\"10 37\") == \"no\"\nassert solution(\"10 41\") == \"no\"\nassert solution(\"10 43\") == \"no\"\nassert solution(\"10 47\") == \"no\"\nassert solution(\"10 53\") == \"no\"\nassert solution(\"10 59\") == \"no\"\nassert solution(\"10 61\") == \"no\"\nassert solution(\"10 67\") == \"no\"\nassert solution(\"10 71\") == \"no\"\nassert solution(\"10 73\") == \"no\"\nassert solution(\"10 79\") == \"no\"\nassert solution(\"10 83\") == \"no\"\nassert solution(\"10 89\") == \"no\"\nassert solution(\"10 97\") == \"no\"\nassert solution(\"10 101\") == \"no\"\nassert solution(\"10 103\") == \"no\"\nassert solution(\"10 107\") == \"no\"\nassert solution(\"10 109\") == \"no\"\nassert solution(\"10 113\") == \"no\"\nassert solution(\"10 127\") == \"no\"\nassert solution(\"10 131\") == \"no\"\nassert solution(\"10 137\") == \"no\"\nassert solution(\"10 139\") == \"no\"\nassert solution(\"10 149\") == \"no\"\nassert solution(\"10 151\") == \"no\"\nassert solution(\"10 157\") == \"no\"\nassert solution(\"10 163\") == \"no\"\nassert solution(\"10 167\") == \"no\"\nassert solution(\"10 173\") == \"no\"\nassert solution(\"10 179\") == \"no\"\nassert solution(\"10 181\") == \"no\"\nassert solution(\"10 191\") == \"no\"\nassert solution(\"10 193\") == \"no\"\nassert solution(\"10 197\") == \"no\"\nassert solution(\"10 199\") == \"no\"\nassert solution(\"10 211\") == \"no\"\nassert solution(\"10 223\") == \"no\"\nassert solution(\"10 227\") == \"no\"\nassert solution(\"10 229\") == \"no\"\nassert solution(\"10 233\") == \"no\"\nassert solution(\"10 239\") == \"no\"\nassert solution(\"10 241\") == \"no\"\nassert solution(\"10 251\") == \"no\"\nassert solution(\"10 257\") == \"no\"\nassert solution(\"10 263\") == \"no\"\nassert solution(\"10 269\") == \"no\"\nassert solution(\"10 271\") == \"no\"\nassert solution(\"10 277\") == \"no\"\nassert solution(\"10 281\") == \"no\"\nassert solution(\"10 283\") == \"no\"\nassert solution(\"10 293\") == \"no\"\nassert solution(\"10 307\") == \"no\"\nassert solution(\"10 311\") == \"no\"\nassert solution(\"10 313\") == \"no\"\nassert solution(\"10 317\") == \"no\"\nassert solution(\"10 331\") == \"no\"\nassert solution(\"10 337\") == \"no\"\nassert solution(\"10 347\") == \"no\"\nassert solution(\"10 349\") == \"no\"\nassert solution(\"10 353\") == \"no\"\nassert solution(\"10 359\") == \"no\"\nassert solution(\"10 367\") == \"no\""
    },
    {
        "number": 3251,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3 4\\n2 5\\n1 6\") == \"3\\n1 6\\n2 5\\n3 4\"\nassert solution(\"5\\n10 30\\n20 40\\n30 50\\n10 60\\n30 40\") == \"3\\n10 60\\n30 50\\n30 40\""
    },
    {
        "number": 3252,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5 1\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\") == \"5836\"\nassert solution(\"5 2\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\") == \"1828\""
    },
    {
        "number": 3253,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"\"\"3\n7 2401 3299 0\n6 2401 2399 0\n2 750 750 99\"\"\") == \"50\"\n\nassert solution(\"\"\"3\n7 100 200 200\n8 100 300 200\n9 100 400 200\"\"\") == \"impossible\""
    },
    {
        "number": 3254,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5.0\") == \"0 0 0 0 1\"\nassert solution(\"4.5\") == \"0 0 0 1 1\""
    },
    {
        "number": 3255,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"8 3 1\\n1 7 8 2 6 4 3 5\") == \"8\"\nassert solution(\"8 2 1\\n1 7 8 2 6 4 3 5\") == \"3\""
    },
    {
        "number": 3256,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n2 3 4 1\") == \"3\"\nassert solution(\"6 3\\n2 2 2 4 4 4\") == \"4\""
    },
    {
        "number": 3257,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1 1 1.732050\") == \"1.732050808\"\nassert solution(\"1 1 3.0\") == \"-1\""
    },
    {
        "number": 3258,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1\\n3 4 2\\n.75\\n\") == \"2.4999999987500003\"\nassert solution(\"2\\n0 100 10\\n0 -100 100\\n.80\\n\") == \"9.999999999000002\""
    },
    {
        "number": 3259,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"6 3\\n2 1 6\\n1 1 5 1 2\\n2 1 6\") == \"0\\n3\\n\"\nassert solution(\"4 5\\n1 1 4 3 4\\n2 1 1\\n2 2 2\\n2 3 3\\n2 4 4\") == \"3\\n2\\n1\\n0\\n\""
    },
    {
        "number": 3260,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1 7 1000000007\") == \"1\"\nassert solution(\"3 2 1000000007\") == \"4\""
    },
    {
        "number": 3261,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"10 10\\n6\") == \"5\"\nassert solution(\"3 5\\n11\") == \"8\""
    },
    {
        "number": 3262,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 2\\n1 2 1\\n3 2 1\") == \"2\"\nassert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\") == \"3\""
    },
    {
        "number": 3263,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n10 20 30\\n5 5 10\\n2 20\\n1 30\\n1 32\\n3 120\") == \"3\"\nassert solution(\"3 1\\n10\\n10\\n1 10\\n1 10\\n1 10\") == \"3\""
    },
    {
        "number": 3264,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2\\n\") == \"1\"\nassert solution(\"3\\n\") == \"5\""
    },
    {
        "number": 3265,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 1\\n0 11 9\\n1 0 10\\n0 0 0\") == \"2\"\nassert solution(\"4 3\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0\") == \"-1\""
    },
    {
        "number": 3266,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10\") == \"4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\"\nassert solution(\"2 1 0 1\\n0 1 100000\") == \"2 100000 1\\n0 1 100000\""
    },
    {
        "number": 3267,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\nSMS\\nMMS\") == \"3 5\"\nassert solution(\"2 3\\nS.M\\nM..\") == \"2 0\""
    },
    {
        "number": 3268,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n13\n0 B\n1 B\n2 E a\n2 E b\n2 S\n5 G a\n5 T a\n5 E a\n5 E b\n1 S\n10 E a\n10 G b\n1 T a\n\"\"\") == \"2\\n3 c\\n6 c\\n\"\n\nassert solution(\"\"\"\n6\n0 B\n1 B\n1 T a\n2 E a\n2 S\n5 T a\n\"\"\") == \"1\\n6 b\\n\""
    },
    {
        "number": 3269,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1 5\") == \"40\"\nassert solution(\"288 291\") == \"76\""
    },
    {
        "number": 3270,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\nCAT\\nDOG\\nCOT\\n\") == \"COG\\n3\\n\"\nassert solution(\"2\\nCAT\\nDOG\\n\") == \"0\\n-1\\n\""
    },
    {
        "number": 3271,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"10 1\") == \"9\"\nassert solution(\"4 3\") == \"6\""
    },
    {
        "number": 3272,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5 5\\n/.V.\\n./.V.\\n..#..\\n.V.#.\\n\\.V./\") == \"3\"\nassert solution(\"2 5\\nV...\\nH...V\") == \"-1\""
    },
    {
        "number": 3273,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n7\nn fox jumps ove\nuick brown f\nThe quick b\ny dog.\nrown fox\nmps over the l\nthe lazy dog\n\"\"\") == \"The quick brown fox jumps over the lazy dog.\"\n\nassert solution(\"\"\"\n4\ncdefghi\nefghijk\nefghijx\nabcdefg\n\"\"\") == \"AMBIGUOUS\""
    },
    {
        "number": 3274,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1\") == \"--+0-\"\nassert solution(\"3 2\\n1 2 1\\n-2 0 2\") == \"0+-\""
    },
    {
        "number": 3275,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n1 1\\n1 1\\n1\\n1 1 1\") == \"1\"\nassert solution(\"2 2\\n1 2\\n2 3\\n2\\n1 2 2\\n2 2 2\") == \"4\\n4\""
    },
    {
        "number": 3276,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\") == \"YES\"\nassert solution(\"3 4\\nWWRR\\nWRRR\\nWRRR\") == \"NO\""
    },
    {
        "number": 3277,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 3 5\\n1\\n2\\n3\") == \"1\"\nassert solution(\"6 3 5\\n1\\n2\\n3\\n3\\n2\\n1\") == \"3\""
    },
    {
        "number": 3278,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n0 2\\n1 2\\n3 3\") == \"3 2\"\nassert solution(\"5\\n0 2\\n1 3\\n3 3\\n7 5\\n9 5\") == \"12 3\""
    },
    {
        "number": 3279,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1\\n0\\n0\\n3\\n\") == \"100\\n000\\n01\\n01\\n01\\n\"\nassert solution(\"3\\n0\\n1 1\\n1\\n1 1\\n1\\n1\\n\") == \"0000\\n1001\\n0010\\n101\\n010\\n000\\n100\\n\""
    },
    {
        "number": 3280,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 1\\n1 2\\n2 3\\n2 3\") == \"2\"\nassert solution(\"4 1\\n1 3\\n4 6\\n7 8\\n2 5\") == \"3\""
    },
    {
        "number": 3281,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5 6 500\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\") == \"90.00000000\"\nassert solution(\"5 6 450\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\") == \"126.86989765\""
    },
    {
        "number": 3282,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"37\") == \"4\\n8 29\\n9 28\\n11 26\\n15 22\"\nassert solution(\"30014\") == \"7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225\""
    },
    {
        "number": 3283,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 3 1\") == \"3.5\"\nassert solution(\"3 3 2\") == \"4.9\""
    },
    {
        "number": 3284,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1 5 1 5\") == \"19\"\nassert solution(\"12 12 1 12\") == \"4\""
    },
    {
        "number": 3285,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1 5\") == \"4\"\nassert solution(\"1 12\") == \"4\"\nassert solution(\"1 13\") == \"5\"\nassert solution(\"1 14\") == \"5\"\nassert solution(\"1 15\") == \"5\"\nassert solution(\"1 16\") == \"6\"\nassert solution(\"1 17\") == \"6\"\nassert solution(\"1 18\") == \"6\"\nassert solution(\"1 19\") == \"6\"\nassert solution(\"1 20\") == \"7\"\nassert solution(\"1 21\") == \"7\"\nassert solution(\"1 22\") == \"7\"\nassert solution(\"1 23\") == \"7\"\nassert solution(\"1 24\") == \"8\"\nassert solution(\"1 25\") == \"8\"\nassert solution(\"1 26\") == \"8\"\nassert solution(\"1 27\") == \"8\"\nassert solution(\"1 28\") == \"8\"\nassert solution(\"1 29\") == \"8\"\nassert solution(\"1 30\") == \"9\"\nassert solution(\"1 31\") == \"9\"\nassert solution(\"1 32\") == \"9\"\nassert solution(\"1 33\") == \"9\"\nassert solution(\"1 34\") == \"9\"\nassert solution(\"1 35\") == \"9\"\nassert solution(\"1 36\") == \"10\"\nassert solution(\"1 37\") == \"10\"\nassert solution(\"1 38\") == \"10\"\nassert solution(\"1 39\") == \"10\"\nassert solution(\"1 40\") == \"10\"\nassert solution(\"1 41\") == \"10\"\nassert solution(\"1 42\") == \"10\"\nassert solution(\"1 43\") == \"10\"\nassert solution(\"1 44\") == \"11\"\nassert solution(\"1 45\") == \"11\"\nassert solution(\"1 46\") == \"11\"\nassert solution(\"1 47\") == \"11\"\nassert solution(\"1 48\") == \"11\"\nassert solution(\"1 49\") == \"11\"\nassert solution(\"1 50\") == \"11\"\nassert solution(\"1 51\") == \"11\"\nassert solution(\"1 52\") == \"11\"\nassert solution(\"1 53\") == \"11\"\nassert solution(\"1 54\") == \"11\"\nassert solution(\"1 55\") == \"11\"\nassert solution(\"1 56\") == \"11\"\nassert solution(\"1 57\") == \"11\"\nassert solution(\"1 58\") == \"11\"\nassert solution(\"1 59\") == \"11\"\nassert solution(\"1 60\") == \"12\"\nassert solution(\"1 61\") == \"12\"\nassert solution(\"1 62\") == \"12\"\nassert solution(\"1 63\") == \"12\"\nassert solution(\"1 64\") == \"12\"\nassert solution(\"1 65\") == \"12\"\nassert solution(\"1 66\") == \"12\"\nassert solution(\"1 67\") == \"12\"\nassert solution(\"1 68\") == \"12\"\nassert solution(\"1 69\") == \"12\"\nassert solution(\"1 70\") == \"12\"\nassert solution(\"1 71\") == \"12\"\nassert solution(\"1 72\") == \"12\"\nassert solution(\"1 73\") == \"12\"\nassert solution(\"1 74\") == \"12\"\nassert solution(\"1 75\") == \"12\"\nassert solution(\"1 76\") == \"12\"\nassert solution(\"1 77\") == \"12\"\nassert solution(\"1 78\") == \"12\"\nassert solution(\"1 79\") == \"12\"\nassert solution(\"1 80\") == \"12\"\nassert solution(\"1 81\") == \"12\"\nassert solution(\"1 82\") == \"12\"\nassert solution(\"1 83\") == \"12\"\nassert solution(\"1 84\") == \"12\"\nassert solution(\"1 85\") == \"12\"\nassert solution"
    },
    {
        "number": 3286,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"car\") == 1\nassert solution(\"cocar\") == 2"
    },
    {
        "number": 3287,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4\\n0 2 0 1\") == \"8\"\nassert solution(\"5\\n1000000 1 1 1 1\") == \"0\""
    },
    {
        "number": 3288,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 650\") == \"zyz\"\nassert solution(\"2 651\") == \"-1\""
    },
    {
        "number": 3289,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"6\\n0 10 0\\n10 0 1\\n12 8 1\\n5 5 0\\n11 2 1\\n11 3 0\") == \"4\"\nassert solution(\"10\\n6 1 1\\n0 2 0\\n2 1 1\\n6 1 1\\n8 2 0\\n4 4 0\\n4 0 0\\n2 3 1\\n6 1 0\\n6 3 1\") == \"8\""
    },
    {
        "number": 3290,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 4 3\\n3 4 5 7\\n1 2 10\") == \"0\"\nassert solution(\"3 5 2\\n1 4 7 9 11\\n2 3\") == \"2\""
    },
    {
        "number": 3291,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n3 2\") == \"1\\n-2 -1\"\nassert solution(\"1 2\\n3 4\") == \"3\\n-1 1\\n2 1\\n0 -2\""
    },
    {
        "number": 3292,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\nIVO\\nJASNA\\nJOSIPA\") == \"4\"\nassert solution(\"5\\nMARICA\\nMARTA\\nMATO\\nMARA\\nMARTINA\") == \"24\""
    },
    {
        "number": 3293,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1\") == \"3\"\nassert solution(\"3\\n2 2 3 8\\n3 1 5 6\\n1 9 4 7\") == \"39\""
    },
    {
        "number": 3294,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2\\n5 8 4 -2 0 0 -3 2 0 0 3\\n8 10 4 -1 -1 1 -1 1 1 -1 1\") == \"5.2696518641\"\nassert solution(\"1\\n8 9 3 -14 -14 14 -14 0 20\") == \"9\""
    },
    {
        "number": 3295,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 1 1\\n2 0 2\\n3 1 1\") == \"1\\n8\\n4\"\nassert solution(\"3\\n4 1 1\\n5 2 3\\n5 0 3\") == \"6\\n4\\n24\""
    },
    {
        "number": 3296,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"3\"\nassert solution(\"6 6\") == \"240\""
    },
    {
        "number": 3297,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"A+A=A\") == \"impossible\""
    },
    {
        "number": 3298,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4\\n0 1 2 3\") == \"14\"\nassert solution(\"5\\n1 1 2 1 1\") == \"1\""
    },
    {
        "number": 3299,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\") == \"88\"\nassert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\") == \"-1\""
    },
    {
        "number": 3300,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1 1\\n1 1\") == \"0.000\"\nassert solution(\"2\\n1 99999\\n99999 99999\") == \"9999700002.000\""
    },
    {
        "number": 3301,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"6 8 1 6\\n1 2 5\\n1 3 1\\n2 6 6\\n2 3 6\\n4 2 3\\n3 4 1\\n4 5 1\\n5 6 1\\n5\\n1 3 6 5 4\") == \"3\"\nassert solution(\"3 4 1 2\\n1 2 6\\n1 3 2\\n1 2 7\\n2 3 3\\n2\\n1 2\") == \"Infinity\""
    },
    {
        "number": 3302,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"6 1\\n6\") == \"impossible\"\nassert solution(\"3 1\\n1\") == \"000\\n001\\n011\\n010\\n110\\n111\\n101\\n100\""
    },
    {
        "number": 3303,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"10\\n99\") == \"1\"\nassert solution(\"90\\n10\") == \"10\""
    },
    {
        "number": 3304,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2 3 3\\n4 1 10\\n2 7 3\") == \"2\"\nassert solution(\"4\\n3 1 3 3\\n5 8 7 10\\n4 1 2 6\") == \"1\""
    },
    {
        "number": 3305,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"9 3\\nbeginning\\n1 5\\n4 8\\n1 9\") == \"5\\n11\\n16\"\nassert solution(\"6 1\\nvelvet\\n1 6\") == \"7\""
    },
    {
        "number": 3306,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\n3 1\\n2 2\\n1 1\") == \"2\"\nassert solution(\"2 3\\n1 23\\n2 17\") == \"23\""
    },
    {
        "number": 3307,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4\\n0 0\\n2 0\\n2 2\\n0 2\\n0 -1 0 3\") == \"0.0000000000\"\nassert solution(\"6\\n0 1\\n0 4\\n3 6\\n7 5\\n4 2\\n7 0\\n5 7 2 0\") == \"9.476048311178\""
    },
    {
        "number": 3308,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5\\n2 0\\n1 1\\n0 2\\n-2 0\\n0 -2\") == \"8.0000000000\"\nassert solution(\"5\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.20\") == \"0.0200000000\""
    },
    {
        "number": 3309,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"9 4 3\\n1 1 9 9 1 6 6 39 9\") == \"2\"\nassert solution(\"10 2 2\\n1 1 1 1 1 2 2 2 2 2\") == \"2\""
    },
    {
        "number": 3310,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 3 2\\n1 2 3\") == \"3.666666667\"\nassert solution(\"4 11 4\\n10 10 10 10\") == \"20.000000000\""
    },
    {
        "number": 3311,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 42\") == \"2\"\nassert solution(\"5 123456789\") == \"16317634\""
    },
    {
        "number": 3312,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 1 0 0 2\\n1 2 2\\n1 1 1\") == \"0\"\nassert solution(\"3 1 1 1 8\\n0 1 1\\n1 0 1\\n2 1 1\\n1 2 1\\n1 2 2\\n2 2 3\\n0 2 5\\n1 2 6\") == \"4\""
    },
    {
        "number": 3313,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5 1 10 10\\n8 8\\n5 1\\n4 6\\n4 7\\n7 9\\n\") == \"3\"\nassert solution(\"5 1 100 100\\n27 75\\n79 77\\n40 93\\n62 41\\n52 45\\n\") == \"3\""
    },
    {
        "number": 3314,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"ABC\\nABC\\nABC\") == 2\nassert solution(\"ABBBAAAA\\nBBBCCCBB\\nCCCCAAAC\") == 3\nassert solution(\"AB\\nAB\\nAB\") == -1\nassert solution(\"AB\\nAB\\nAB\\nAB\") == -1\nassert solution(\"AB\\nAB\\nAB\\nAB\\nAB\") == -1"
    },
    {
        "number": 3315,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5\\nA\\nB\\nAA\\nBBB\\nAAA\") == \"3\"\nassert solution(\"5\\nA\\nABA\\nBBB\\nABABA\\nAAAAAB\") == \"3\""
    },
    {
        "number": 3316,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"100 10 2 1\") == \"0.1\"\nassert solution(\"100 10 2 2\") == \"0.1909090909\""
    },
    {
        "number": 3317,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"\"\"ABABABcABABAbab\n3\n0 2\n1 6\n0 7\"\"\") == \"4\\n0\\n5\""
    },
    {
        "number": 3318,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n0\\n0\\n1\\n\") == \"2\"\n\nassert solution(\"5 2\\n0\\n1\\n2\\n3\\n4\\n\") == \"5\"\n\nassert solution(\"6 4\\n0\\n1\\n2\\n3\\n4\\n5\\n\") == \"5\"\n\nassert solution(\"10 5\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n\") == \"9\"\n\nassert solution(\"100000 100000\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n\") == \"99999\""
    },
    {
        "number": 3319,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\") == \"1\\nP0: 22 1 4 2 6 -1 0\"\n\nassert solution(\"3 5 5 5\\n10 0 0 0 0 0 0\\n10 1 1 1 0 0 0\\n10 2 2 2 0 0 0\") == \"2\\nP0: 20 0 0 0 0 0 0\\nP1: 20 1 1 1 0 0 0\"\n\nassert solution(\"4 3 3 3\\n10 0 0 0 0 0 0\\n10 1 1 1 0 0 0\\n10 2 2 2 0 0 0\\n10 1 2 0 0 0 0\") == \"3\\nP0: 20 0 0 0 0 0 0\\nP1: 20 1 1 1 0 0 0\\nP2: 20 1 2 0 0 0 0\"\n\nassert solution(\"5 2 2 2\\n10 0 0 0 0 0 0\\n10 1 1 1 0 0 0\\n10 2 2 2 0 0 0\\n10 1 2 0 0 0 0\\n10 0 0 1 0 0 0\") == \"4\\nP0: 20 0 0 0 0 0 0\\nP1: 20 1 1 1 0 0 0\\nP2: 20 1 2 0 0 0 0\\nP3: 20 0 0 1 0 0 0\"\n\nassert solution(\"1 1 1 1\\n10 0 0 0 0 0 0\") == \"1\\nP0: 10 0 0 0 0 0 0\""
    },
    {
        "number": 3320,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\") == \"1\\n2\\n3\""
    },
    {
        "number": 3321,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2\"\n\nThe given problem can be solved using a simple algorithm. We can start by finding the index of the first element in the starting sequence that is not in the resulting sequence. This will be the index of the frog that needs to be proclaimed. We can then count the number of leaps it takes to move the frog to the front of the resulting sequence. We can then repeat this process for each frog that needs to be proclaimed, and output the sequence of proclamations.\n\nHere's the Python code for the solution:\n\n```python\n"
    },
    {
        "number": 3322,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == \"60\"\n\nassert solution(\"3 3 3\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == \"-1\"\n\nassert solution(\"3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\\n4 10 5 20\\n5 50 6 100\\n6 20 4 80\") == \"100\"\n\nassert solution(\"3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\\n4 10 5 20\\n5 50 6 100\\n6 20 4 80\\n7 10 8 20\\n8 50 9 100\\n9 20 7 80\") == \"100\"\n\nassert solution(\"3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\\n4 10 5 20\\n5 50 6 100\\n6 20 4 80\\n7 10 8 20\\n8 50 9 100\\n9 20 7 80\\n10 10 11 20\\n11 50 12 100\\n12 20 10 80\") == \"100\""
    },
    {
        "number": 3323,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2\\n3\\n10000 0 0\\n0 10000 0\\n0 0 10000\\n3\\n5000 0 0\\n0 2000 0\\n0 0 4000\") == \"Case #1: 1\\nCase #2: 2\""
    },
    {
        "number": 3324,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0\n\"\"\") == \"6 6 6 1\"\n\nassert solution(\"\"\"\n+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n+1 1 Fe 2\n0 0\n\"\"\") == \"6 6 6 1\"\n\nassert solution(\"\"\"\n+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n+1 1 Fe 2\n+1 1 N 2\n0 0\n\"\"\") == \"6 6 6 1\"\n\nassert solution(\"\"\"\n+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n+1 1 Fe 2\n+1 1 N 2\n+1 1 Cl 2\n0 0\n\"\"\") == \"6 6 6 1\"\n\nassert solution(\"\"\"\n+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n+1 1 Fe 2\n+1 1 N 2\n+1 1 Cl 2\n+1 1 Br 2\n0 0\n\"\"\") == \"6 6 6 1\"\n\nassert solution(\"\"\"\n+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n+1 1 Fe 2\n+1 1 N 2\n+1 1 Cl 2\n+1 1 Br 2\n+1 1 I 2\n0 0\n\"\"\") == \"6 6 6 1\"\n\nassert solution(\"\"\"\n+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n+1 1 Fe 2\n+1 1 N 2\n+1 1 Cl 2\n+1 1 Br 2\n+1 1 I 2\n+1 1 S 2\n0 0\n\"\"\") == \"6 6 6 1\"\n\nassert solution(\"\"\"\n+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n+1 1 Fe 2\n+1 1 N 2\n+1 1 Cl 2\n+1 1 Br 2\n+1 1 I 2\n+1 1 S 2\n+1 1 Se 2\n0 0\n\"\"\") == \"6 6 6 1\"\n\nassert solution(\"\"\"\n+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n+1 1 Fe 2\n+1 1 N 2\n+1 1 Cl 2\n+1 1 Br 2\n+1 1 I 2\n+1 1 S 2\n+1 1 Se 2\n+1 1 Si 2\n0 0\n\"\"\") == \"6 6 6 1\"\n\nassert solution(\"\"\"\n+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n+1 1 Fe 2\n+1 1 N 2\n+1 1 Cl 2\n+1 1 Br 2\n+1 1 I 2\n+1 1 S 2\n+1 1 Se 2\n+1 1 Si 2\n+1 1 P 2\n0 0\n\"\"\") == \"6 6 6 1\"\n\nassert solution(\"\"\"\n+1"
    },
    {
        "number": 3325,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4\\n30 50\\n20 0\\n100 0\\n100 40\\n20 40\") == \"20.83\""
    },
    {
        "number": 3326,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n1 2 5\\n7 6 4\\n9 8 3\") == \"49\""
    },
    {
        "number": 3327,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1 15\\n##.........####\\n1\\nCROSSWORD\") == \"##CROSSWORD####\""
    },
    {
        "number": 3328,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 1\\n2 7 6\\n9 5 1\\n4 3 8\") == \"31\""
    },
    {
        "number": 3329,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 1\\nBBW\") == \"2\""
    },
    {
        "number": 3330,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 1\\n3 2 1\\n1 2 3\") == \"0.556\""
    },
    {
        "number": 3331,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5 4 3 2\") == \"3\"\n\nThe cows can catch the horse in 3 minutes.\n\nThe solution to this problem is to simulate the chase and keep track of the positions of the cows and the horse. We can use a simple loop to simulate the chase in 1 minute steps. At each step, we can move the cows and the horse, and check if the horse has been caught. If the horse has been caught, we can return the current minute. If not, we can continue the loop.\n\nHere's the code to solve the problem:\n\n```python\n"
    },
    {
        "number": 3332,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\") == \"13\""
    },
    {
        "number": 3333,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\") == \"3.141593\""
    },
    {
        "number": 3334,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n4 4\\n2\") == \"2.13333333333333\""
    },
    {
        "number": 3335,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"7\") == \"18\""
    },
    {
        "number": 3336,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\") == \"3\""
    },
    {
        "number": 3337,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\") == \"2\\n1\\n2\"\n\nassert solution(\"10\\na 0\\na 1\\nb 2\\nb 3\\na 4\\nb 5\\nb 6\\na 7\\nb 8\\nb 9\") == \"2\\n3\\n2\\n1\\n2\\n3\\n2\\n1\\n2\"\n\nassert solution(\"100000\\na 0\\na 1\\nb 2\\nb 3\\na 4\\nb 5\\nb 6\\na 7\\nb 8\\nb 9\\na 10\\nb 11\\nb 12\\na 13\\nb 14\\nb 15\\na 16\\nb 17\\nb 18\\na 19\\nb 20\\nb 21\\na 22\\nb 23\\nb 24\\na 25\\nb 26\\nb 27\\na 28\\nb 29\\nb 30\\na 31\\nb 32\\nb 33\\na 34\\nb 35\\nb 36\\na 37\\nb 38\\nb 39\\na 40\\nb 41\\nb 42\\na 43\\nb 44\\nb 45\\na 46\\nb 47\\nb 48\\na 49\\nb 50\\nb 51\\na 52\\nb 53\\nb 54\\na 55\\nb 56\\nb 57\\na 58\\nb 59\\nb 60\\na 61\\nb 62\\nb 63\\na 64\\nb 65\\nb 66\\na 67\\nb 68\\nb 69\\na 70\\nb 71\\nb 72\\na 73\\nb 74\\nb 75\\na 76\\nb 77\\nb 78\\na 79\\nb 80\\nb 81\\na 82\\nb 83\\nb 84\\na 85\\nb 86\\nb 87\\na 88\\nb 89\\nb 90\\na 91\\nb 92\\nb 93\\na 94\\nb 95\\nb 96\\na 97\\nb 98\\nb 99\\na 100\\nb 101\\nb 102\\na 103\\nb 104\\nb 105\\na 106\\nb 107\\nb 108\\na 109\\nb 110\\nb 111\\na 112\\nb 113\\nb 114\\na 115\\nb 116\\nb 117\\na 118\\nb 119\\nb 120\\na 121\\nb 122\\nb 123\\na 124\\nb 125\\nb 126\\na 127\\nb 128\\nb 129\\na 130\\nb 131\\nb 132\\na 133\\nb 134\\nb 135\\na 136\\nb 137\\nb 138\\na 139\\nb 140\\nb 141\\na 142\\nb 143\\nb 144\\na 145\\nb 146\\nb 147\\na 148\\nb 149\\nb 150\\na 151\\nb 152\\nb 153\\na 154\\nb 155\\nb 156\\na 157\\nb 158\\nb 159\\na 160\\nb 161\\nb 162\\na 163\\nb 164\\nb 165\\na 166\\nb 167\\nb 1"
    },
    {
        "number": 3338,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"6 1\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0\") == \"5\""
    },
    {
        "number": 3339,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\") == \"4\""
    },
    {
        "number": 3340,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\\n3 4\\n2 4\"\n\nassert solution(\"5\\n1 2\\n2 3\\n3 4\\n4 5\") == \"3\\n3 4\\n4 5\"\n\nassert solution(\"6\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\") == \"4\\n3 4\\n4 5\\n5 6\"\n\nassert solution(\"7\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\") == \"5\\n3 4\\n4 5\\n5 6\\n6 7\"\n\nassert solution(\"8\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\") == \"6\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\"\n\nassert solution(\"9\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\") == \"7\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\"\n\nassert solution(\"10\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\") == \"8\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\"\n\nassert solution(\"11\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\") == \"9\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\"\n\nassert solution(\"12\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\") == \"10\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\"\n\nassert solution(\"13\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\") == \"11\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\"\n\nassert solution(\"14\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\") == \"12\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\"\n\nassert solution(\"15\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13"
    },
    {
        "number": 3341,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n1 3\\n2 1\\n3 5\\n7 2\") == \"5\""
    },
    {
        "number": 3342,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == \"2\""
    },
    {
        "number": 3343,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n3 C\\n2 C\\n1 C\") == \"GHOST\"\n\nassert solution(\"4 3\\n3 W\\n2 W\\n1 W\") == \"SAFE\"\n\nassert solution(\"4 4\\n3 C\\n2 C\\n1 C\\n4 W\") == \"SAFE\"\n\nassert solution(\"4 4\\n3 C\\n2 C\\n1 C\\n4 C\") == \"GHOST\"\n\nassert solution(\"4 5\\n3 C\\n2 C\\n1 C\\n4 W\\n5 W\") == \"SAFE\""
    },
    {
        "number": 3344,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n0.00 2.00\") == \"2\"\n\nThe maximum speed that avoids collisions is $2$\u00a0m/s, which is the speed of the straight conveyor belt.\n\nThe code to solve the problem is:\n\n```python\n"
    },
    {
        "number": 3345,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\""
    },
    {
        "number": 3346,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 4\\n\") == \"0\""
    },
    {
        "number": 3347,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 10\") == \"3\""
    },
    {
        "number": 3348,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n10 3 3\") == \"impossible\""
    },
    {
        "number": 3349,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n\"\"\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\""
    },
    {
        "number": 3350,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"abrahellehhelleh\") == 12\nassert solution(\"rachelhellabracadabra\") == 0"
    },
    {
        "number": 3351,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"65\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"70\""
    },
    {
        "number": 3352,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\") == \"10\\n7\\n8\\n7\\n\""
    },
    {
        "number": 3353,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\") == \"6\"\n\nThe input specifies that there are two people who must cross the river, there are four boulders in the river, and there are seven logs spanning the river. The logs connect the boulders as follows:\n\n- The first log connects the left river bank to the boulder at index 0.\n- The second log connects the boulder at index 0 to the boulder at index 1.\n- The third log connects the boulder at index 1 to the boulder at index 2.\n- The fourth log connects the boulder at index 2 to the right river bank.\n- The fifth log connects the boulder at index 1 to the boulder at index 3.\n- The sixth log connects the boulder at index 3 to the boulder at index 2.\n- The seventh log connects the boulder at index 2 to the boulder at index 3.\n\nTo cross the river, Sally and her friend must first cross the left bank, then the boulder at index 0, then the boulder at index 1, then the boulder at index 2, then the boulder at index 3, and finally the right bank. Each time she crosses a plank, that plank becomes unstable and collapses into the river, so that neither Sally nor her friend can use that plank again.\n\nTherefore, the minimum total time required for all people to cross the river safely is 6 seconds."
    },
    {
        "number": 3354,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 1 4 40\") == \"3\"\n\nThe first line of the input specifies that the radius of the sandwich is 3 cm, the radius of a pickle is 1 cm, and Maj has 40% of the area of the sandwich covered by pickles. Maj has 4 pickles, which is the maximum number of pickles she can place on her sandwich while still covering at most 40% of the area of the sandwich with them."
    },
    {
        "number": 3355,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\") == \"99\\n3\"\n\nassert solution(\"2 120\\n100 120 1440\\n100 120 -1\\n0 120 120 120\\n120 0 120 120\\n120 120 0 120\\n120 120 120 0\") == \"200\\n1 2\"\n\nassert solution(\"1 120\\n100 120 1440\\n100 120 -1\\n0 120 120 120\\n120 0 120 120\\n120 120 0 120\\n120 120 120 0\") == \"100\\n1\"\n\nassert solution(\"1 120\\n100 120 1440\\n100 120 -1\\n0 120 120 120\\n120 0 120 120\\n120 120 0 120\\n120 120 120 0\") == \"100\\n1\"\n\nassert solution(\"1 120\\n100 120 1440\\n100 120 -1\\n0 120 120 120\\n120 0 120 120\\n120 120 0 120\\n120 120 120 0\") == \"100\\n1\"\n\nassert solution(\"1 120\\n100 120 1440\\n100 120 -1\\n0 120 120 120\\n120 0 120 120\\n120 120 0 120\\n120 120 120 0\") == \"100\\n1\"\n\nassert solution(\"1 120\\n100 120 1440\\n100 120 -1\\n0 120 120 120\\n120 0 120 120\\n120 120 0 120\\n120 120 120 0\") == \"100\\n1\"\n\nassert solution(\"1 120\\n100 120 1440\\n100 120 -1\\n0 120 120 120\\n120 0 120 120\\n120 120 0 120\\n120 120 120 0\") == \"100\\n1\"\n\nassert solution(\"1 120\\n100 120 1440\\n100 120 -1\\n0 120 120 120\\n120 0 120 120\\n120 120 0 120\\n120 120 120 0\") == \"100\\n1\"\n\nassert solution(\"1 120\\n100 120 1440\\n100 120 -1\\n0 120 120 120\\n120 0 120"
    },
    {
        "number": 3356,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\\n3 4\\n4 2\""
    },
    {
        "number": 3357,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 1\\n2 2\\n3 2\\n4 1\") == \"9.0000\\n12\\n12.00000\\n9.0\""
    },
    {
        "number": 3358,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\""
    },
    {
        "number": 3359,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\") == \"2\""
    },
    {
        "number": 3360,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"\"\"5\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\neven a single a or b is a palindrome\"\"\") == \"\"\"abaaba\nNONE\nabbbbbbbbbbbbbbbbba\na\"\"\""
    },
    {
        "number": 3361,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5\\n4 5 0 2\\n1 3 7\\n2 0\\n4\") == \"4\""
    },
    {
        "number": 3362,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"3 2\\n3 3\\nWBB\\nWBG\\nWGB\") == \"SUCCESS\"\nassert solution(\"2 2\\n3 3\\nWBB\\nWBG\\nWGB\") == \"NO WAY\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWGBG\") == \"NO CHANCE\""
    },
    {
        "number": 3363,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5 900\\n800 700 400 300 200\") == \"2243\""
    },
    {
        "number": 3364,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\") == \"no\\nyes\\n\""
    },
    {
        "number": 3365,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n10 5 4 8 3\") == \"2\""
    },
    {
        "number": 3366,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1 127\") == \"1083\""
    },
    {
        "number": 3367,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"\"\"4 4\nHow much is 6 times 9? 42\nHow much is 9 times 6? 42\nIs there intelligent life on Earth? Probably\nWhat is the air speed velocity of an unladen swallow? African?\"\"\") == \"2.0000000000\""
    },
    {
        "number": 3368,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\") == \"POSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\n\") == \"POSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\n\\n\") == \"POSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\n\\n\\n\") == \"POSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\n\\n\\n\\n\") == \"POSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\n\\n\\n\\n\\n\") == \"POSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\n\\n\\n\\n\\n\\n\") == \"POSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\n\\n\\n\\n\\n\\n\\n\") == \"POSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\n\\n\\n\\n\\n\\n\\n\\n\") == \"POSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\n\\n\\n\\n\\n\\n\\n\\n\\n\") == \"POSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\") == \"POSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\") == \"POSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\") == \"POSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\") == \"POSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\") == \"POSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\") == \"POSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\") == \"POSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey peng"
    },
    {
        "number": 3369,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4 4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2 0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7 2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8 8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\") == \"triple correlation 4(1)4(3)3 found\""
    },
    {
        "number": 3370,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 1\\n39\\n10\\n40\\n\") == \"40.5\""
    },
    {
        "number": 3371,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"Impossible\""
    },
    {
        "number": 3372,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 1\") == \"impossible\"\n\nassert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 0\") == \"1\"\n\nassert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 3\") == \"2\"\n\nassert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 2\") == \"1\"\n\nassert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 1\\nN 1 0\\nC 1 3\") == \"2\"\n\nassert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 1\\nN 1 0\\nC 1 2\") == \"1\"\n\nassert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 1\\nN 1 0\\nC 1 1\") == \"impossible\"\n\nassert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 1\\nN 1 0\\nC 1 0\") == \"impossible\"\n\nassert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 1\\nN 1 0\\nC 1 3\\nN 1 1\\nC 1 2\") == \"2\"\n\nassert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 1\\nN 1 0\\nC 1 3\\nN 1 1\\nC 1 3\") == \"3\"\n\nassert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 1\\nN 1 0\\nC 1 3\\nN 1 1\\nC 1 0\") == \"impossible\"\n\nassert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 1\\nN 1 0\\nC 1 3\\nN 1 1\\nC 1 1\") == \"impossible\"\n\nassert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 1\\nN 1 0\\nC 1 3\\nN 1 1\\nC 1 2\\nN 1 2\\nC 1 3\") == \"3\"\n\nassert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 1\\nN 1 0\\nC 1 3\\nN 1 1\\nC 1 2\\nN 1 2\\nC 1 0\") == \"impossible\"\n\nassert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 1\\nN 1 0\\nC 1 3\\nN 1 1\\nC 1 2\\nN 1 2\\nC 1 1\") == \"impossible\"\n\nassert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 1\\nN 1 0\\nC 1 3\\nN 1 1\\nC 1 2\\nN 1 2\\nC 1 3\\n"
    },
    {
        "number": 3373,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n())\\n((()\\n)()\") == 10"
    },
    {
        "number": 3374,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"9\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\") == \"85293\""
    },
    {
        "number": 3375,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\") == \"5\"\n\nThe first line of the input contains two integers, $V=4$ and $E=5$, representing the number of vertices and edges of the graph $G$ respectively. \n\nThe following $E=5$ lines each contains two integers $A_ i=1,2,3,1,2$ and $B_ i=2,3,3,4,4$ representing an edge $(A_ i, B_ i)$. \n\nThe graph $G$ is a simple graph, so no two pairs represent the same edge. \n\nThere are $5$ spanning unicyclic subgraphs of $G$. \n\nTherefore, the output should be $5$."
    },
    {
        "number": 3376,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n\"\"\") == \"5100\""
    },
    {
        "number": 3377,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n5\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5\n\"\"\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\"\n\nassert solution(\"\"\"\n5\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5\n\"\"\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\"\n\nassert solution(\"\"\"\n5\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5\n\"\"\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\"\n\nassert solution(\"\"\"\n5\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5\n\"\"\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\"\n\nassert solution(\"\"\"\n5\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5\n\"\"\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\"\n\nassert solution(\"\"\"\n5\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5\n\"\"\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\"\n\nassert solution(\"\"\"\n5\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5\n\"\"\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\"\n\nassert solution(\"\"\"\n5\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5\n\"\"\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\"\n\nassert solution(\"\"\"\n5\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5\n\"\"\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\"\n\nassert solution(\"\"\"\n5\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5\n\"\"\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\"\n\nassert solution(\"\"\"\n5\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5\n\"\"\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\"\n\nassert solution(\"\"\"\n5\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5\n\"\"\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\"\n\nassert solution(\"\"\"\n5\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5\n\"\"\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\"\n\nassert solution(\"\"\"\n5\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5\n\"\"\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\"\n\nassert solution(\"\"\"\n5\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5\n\"\"\") == \"6\\n1\\n2\\n3\\n1"
    },
    {
        "number": 3378,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\") == \"10\""
    },
    {
        "number": 3379,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n0 1\\n1 2\\n2 3\") == \"1\""
    },
    {
        "number": 3380,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4\") == \"0.962962962963\"\n\nThe probability that the randomly built road network with $N$ cities and $N$ roads is connected is $\\frac{N(N-1)}{2}$. We can calculate this using the formula:\n\n$P(N) = \\frac{N(N-1)}{2}$\n\nWe can use this formula to calculate the probability that the road network ends up being connected.\n\nWe can also use the formula to calculate the probability that the road network ends up being connected when $N$ is even. In this case, we have $N$ cities and $N/2$ roads. The probability that the road network ends up being connected is $\\frac{N(N/2-1)}{2}$.\n\nWe can use this formula to calculate the probability that the road network ends up being connected when $N$ is odd. In this case, we have $N$ cities and $(N-1)/2$ roads. The probability that the road network ends up being connected is $\\frac{(N-1)/2(N-1)/2}{2}$.\n\nWe can use the following Python code to calculate the probability:\n\n```python\nimport random"
    },
    {
        "number": 3381,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n\") == \"0 0\\n40000000 0\\n0 40000000\\n\""
    },
    {
        "number": 3382,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 5 5 2\") == \"1\""
    },
    {
        "number": 3383,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"2\"\n\nThe first test case is impossible to get an ice cream with positive tastiness, so the output should be \"0\".\n\nThe second test case has a single flavour with tastiness 0 and a single flavour with tastiness -10, which complement each other. Therefore, the maximum possible tastiness is 0.\n\nThe third test case has a single flavour with tastiness 30, which is the maximum possible tastiness.\n\nThe fourth test case has no flavours with positive tastiness, so the output should be \"0\".\n\nThe solution to this problem is to use dynamic programming to find the maximum possible tastiness. We can define a 2D array $dp[i][j]$ to represent the maximum possible tastiness of an ice cream with $i$ scoops of the $j$th flavour. We can then fill in the array using the following recurrence relation:\n\n$$dp[i][j] = \\max(t_j + dp[i-1][k] + u_{j,k} \\text{ for } k \\neq j)$$\n\nwhere $k$ ranges from 0 to $k-1$. This means that we can either use the $j$th flavour alone, or we can use it in combination with the $k$th flavour, where $k$ is any flavour other than the $j$th flavour.\n\nWe can then calculate the maximum possible tastiness of the ice cream by taking the maximum value in the $dp$ array. We can also calculate the cost of the ice cream by multiplying the number of scoops by the cost per scoop.\n\nThe time complexity of this solution is $O(nk^2)$, which is not efficient enough for large values of $n$. However, we can optimize the solution by using memoization to avoid recalculating the same values multiple times. We can define a 2D array $memo[i][j]$ to store the maximum possible tastiness of an ice cream with $i$ scoops of the $j$th flavour. We can then fill in the array using the following recurrence relation:\n\n$$memo[i][j] = \\max(t_j + memo[i-1][k] + u_{j,k} \\text{ for } k \\neq j)$$\n\nwhere $k$ ranges from 0 to $k-1$. This means that we can either use the $j$th flavour alone, or we can use it in combination with the $k$th flavour, where $k$ is any flavour other than the $j$th flavour.\n\nWe can then calculate the maximum possible tastiness of the ice cream by taking the maximum value in the $memo$ array. We can also calculate the cost of the ice cream by multiplying the number of scoops by the cost per scoop.\n\nThe time complexity of this optimized solution is $O(nk^2)$, which is still not efficient enough for large values of $n$. However, we can further optimize the solution by using a sparse table to calculate the maximum possible tastiness of an ice cream with $i$ scoops of the $j$th flavour. We can define a 2D array $sparse[i][j]$ to store the maximum possible tastiness of an ice cream with $i$ scoops of the $j$th flavour. We can then fill in the array using the following recurrence relation:\n\n$$sparse[i][j] = \\max(t_j + sparse[i-1][k] + u_{j,k} \\text{ for } k \\neq j)$$\n\nwhere $k$ ranges from 0 to $k-1$. This means that we can either use the $j$th flavour alone, or we can use it in combination with the $k$th flavour, where $k$ is any flavour other than the $j$th flavour.\n\nWe can then calculate the maximum possible tastiness of the ice cream by taking the maximum value in the $sparse$ array. We can also calculate the cost of the ice cream by multiplying the number of scoops by the cost per scoop.\n\nThe time complexity of this optimized solution is $O(nk \\log k)$, which is much more efficient than the previous solutions."
    },
    {
        "number": 3384,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"13\") == \"12 14\""
    },
    {
        "number": 3385,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\") == \"0\""
    },
    {
        "number": 3386,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\"\nassert solution(\"3 3\") == \"1 1\\n2 2\\n3 3\\n1 3\\n2 1\\n3 2\\n1 2\\n3 1\\n2 3\\n1 3\\n2 1\\n1 2\\n2 3\"\nassert solution(\"4 4\") == \"1 1\\n2 2\\n3 3\\n4 4\\n1 4\\n2 1\\n3 2\\n4 3\\n1 2\\n3 4\\n2 3\\n4 1\\n1 3\\n2 4\\n3 1\\n4 2\\n1 4\\n2 1\\n3 2\\n4 3\\n1 2\\n3 4\\n2 3\\n4 1\\n1 3\\n2 4\\n3 1\\n4 2\\n1 4\\n2 1\\n3 2\\n4 3\\n1 2\\n3 4\\n2 3\\n4 1\\n1 3\\n2 4\\n3 1\\n4 2\\n1 4\\n2 1\\n3 2\\n4 3\\n1 2\\n3 4\\n2 3\\n4 1\\n1 3\\n2 4\\n3 1\\n4 2\\n1 4\\n2 1\\n3 2\\n4 3\\n1 2\\n3 4\\n2 3\\n4 1\\n1 3\\n2 4\\n3 1\\n4 2\\n1 4\\n2 1\\n3 2\\n4 3\\n1 2\\n3 4\\n2 3\\n4 1\\n1 3\\n2 4\\n3 1\\n4 2\\n1 4\\n2 1\\n3 2\\n4 3\\n1 2\\n3 4\\n2 3\\n4 1\\n1 3\\n2 4\\n3 1\\n4 2\\n1 4\\n2 1\\n3 2\\n4 3\\n1 2\\n3 4\\n2 3\\n4 1\\n1 3\\n2 4\\n3 1\\n4 2\\n1 4\\n2 1\\n3 2\\n4 3\\n1 2\\n3 4\\n2 3\\n4 1\\n1 3\\n2 4\\n3 1\\n4 2\\n1 4\\n2 1\\n3 2\\n4 3\\n1 2\\n3 4\\n2 3\\n4 1\\n1 3\\n2 4\\n3 1\\n4 2\\n1 4\\n2 1\\n3 2\\n4 3\\n1 2\\n3 4\\n2 3\\n4 1\\n1 3\\n2 4\\n3 1\\n4 2\\n1 4\\n2 1\\n3 2\\n4 3\\n1 2\\n3 4\\n2 3\\n4 1\\n1 3\\n2 4\\n3 1\\n4 2\\n1 4\\n2 1\\n3 2\\n4 3\\n1 2\\n3 4\\n2 3\\n4 1\\n1 3\\n2 4\\n3 1\\n4 2\\n1 4\\n2 1\\n3 2\\n4 3\\n1 2\\n3 4\\n2 3\\n4 1\\n1 3\\n2 4\\n3 1\\n4 2\\n1 4\\n2 1\\n3 2\\n4 3\\n1 2\\n3 4\\n2 3\\n4 1\\n1 3\\"
    },
    {
        "number": 3387,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 10\\n0 10 1\\n0 10 1\\n0 10 1\") == \"3.33333333\\n3.33333333\\n3.33333333\"\n\nassert solution(\"4 10\\n0 10 1\\n0 10 1\\n0 10 1\\n0 10 1\") == \"2.5\\n2.5\\n2.5\\n2.5\"\n\nassert solution(\"4 10\\n0 10 1\\n0 10 2\\n0 10 3\\n0 10 4\") == \"1.0\\n1.0\\n1.0\\n1.0\"\n\nassert solution(\"4 10\\n0 10 1\\n0 10 2\\n0 10 3\\n0 10 5\") == \"0.6\\n0.6\\n0.6\\n0.6\"\n\nassert solution(\"4 10\\n0 10 1\\n0 10 2\\n0 10 3\\n0 10 6\") == \"0.4\\n0.4\\n0.4\\n0.4\"\n\nassert solution(\"4 10\\n0 10 1\\n0 10 2\\n0 10 3\\n0 10 7\") == \"0.3\\n0.3\\n0.3\\n0.3\"\n\nassert solution(\"4 10\\n0 10 1\\n0 10 2\\n0 10 3\\n0 10 8\") == \"0.25\\n0.25\\n0.25\\n0.25\"\n\nassert solution(\"4 10\\n0 10 1\\n0 10 2\\n0 10 3\\n0 10 9\") == \"0.2\\n0.2\\n0.2\\n0.2\"\n\nassert solution(\"4 10\\n0 10 1\\n0 10 2\\n0 10 3\\n0 10 10\") == \"0.1666666667\\n0.1666666667\\n0.1666666667\\n0.1666666667\"\n\nassert solution(\"4 10\\n0 10 1\\n0 10 2\\n0 10 3\\n0 10 11\") == \"0.1428571429\\n0.1428571429\\n0.1428571429\\n0.1428571429\"\n\nassert solution(\"4 10\\n0 10 1\\n0 10 2\\n0 10 3\\n0 10 12\") == \"0.125\\n0.125\\n0.125\\n0.125\"\n\nassert solution(\"4 10\\n0 10 1\\n0 10 2\\n0 10 3\\n0 10 13\") == \"0.1111111111\\n0.1111111111\\n0.1111111111\\n0.1111111111\"\n\nassert solution(\"4 10\\n0 10 1\\n0 10 2\\n0 10 3\\n0 10 14\") == \"0.1\\n0.1\\n0.1\\n0.1\"\n\nassert solution(\"4 10\\n0 10 1\\n0 10 2\\n0 10 3\\n0 10 15\") == \"0.0909090909\\n0.0909090909\\n0.0"
    },
    {
        "number": 3388,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3 3 2\") == \"1\""
    },
    {
        "number": 3389,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\nabba\") == \"2\""
    },
    {
        "number": 3390,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n2 4\") == \"3\""
    },
    {
        "number": 3391,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3\") == \"1\\n0\""
    },
    {
        "number": 3392,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n1 2 3\n3 2 2\n5 2 1\n3 2 1\n1 2 1\n1 2 3\n\"\"\") == \"7\""
    },
    {
        "number": 3393,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\") == \"20\""
    },
    {
        "number": 3394,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n4 4\n1 2 2\n2 3 4\n3 4 1\n4 1 2\n3\n1 4 2\n3 3 3\n4 3 6\n\"\"\") == \"6\"\n\nassert solution(\"\"\"\n5 5\n1 2 2\n2 3 4\n3 4 1\n4 5 2\n5 1 3\n3\n1 4 2\n3 3 3\n4 3 6\n\"\"\") == \"10\"\n\nassert solution(\"\"\"\n5 5\n1 2 2\n2 3 4\n3 4 1\n4 5 2\n5 1 3\n3\n1 4 2\n3 3 3\n4 3 6\n5 5 10\n\"\"\") == \"10\"\n\nassert solution(\"\"\"\n5 5\n1 2 2\n2 3 4\n3 4 1\n4 5 2\n5 1 3\n3\n1 4 2\n3 3 3\n4 3 6\n5 5 10\n6 1 1\n\"\"\") == \"11\"\n\nassert solution(\"\"\"\n5 5\n1 2 2\n2 3 4\n3 4 1\n4 5 2\n5 1 3\n3\n1 4 2\n3 3 3\n4 3 6\n5 5 10\n6 1 1\n7 2 1\n\"\"\") == \"11\""
    },
    {
        "number": 3395,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\") == \"2\"\n\nassert solution(\"5 2 2\\n2 4\\n3 5\\n1 2 3 4 5\\n2 3 4 5 6\\n3 4 5 6 7\\n4 5 6 7 8\\n5 6 7 8 9\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100\\n100 101\\n101 102\\n102 103\\n103 104\\n104 105\\n105 106\\n106 107\\n107 108\\n108 109\\n109 110\\n110 111\\n111 112\\n112 113\\n113 114\\n114 115\\n115 116\\n116 117\\n117 118\\n118 119\\n119 120\\n120 121\\n121 122\\n122 123\\n123 124\\n124 125\\n125 126\\n126 127"
    },
    {
        "number": 3396,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2\\n250 250\\n250 750\") == \"500.00\""
    },
    {
        "number": 3397,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n2 100 10\\n100 1 10\") == \"0\"\n\nThe first line of the input contains integers $N=2$ and $M=3$. The second line contains the values $t_{11}=2$, $t_{12}=100$, and $t_{13}=10$ for the first dog. The third line contains the values $t_{21}=100$, $t_{22}=1$, and $t_{23}=10$ for the second dog.\n\nThe total waiting time for the first dog is $t_{11}-t_{12}-t_{13}=2-100-10=0$, and the total waiting time for the second dog is $t_{21}-t_{22}-t_{23}=100-1-10=90$. Therefore, the minimum total waiting time is $T=0$."
    },
    {
        "number": 3398,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\") == \"2\""
    },
    {
        "number": 3399,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\n2211\\n1112\\n1112\") == \"AAAA\\n...A\\n....\\n\\nBB..\\nBBBB\\n...B\\n\\n....\\n...C\\nCCCC\"\nassert solution(\"3 4\\n1112\\n2211\\n1112\") == \"AAAA\\n...A\\n....\\n\\nBB..\\nBBBB\\n...B\\n\\n....\\n...C\\nCCCC\"\nassert solution(\"3 4\\n1112\\n1112\\n2211\") == \"AAAA\\n...A\\n....\\n\\nBB..\\nBBBB\\n...B\\n\\n....\\n...C\\nCCCC\"\nassert solution(\"3 4\\n1112\\n2112\\n1112\") == \"impossible\"\nassert solution(\"3 4\\n1112\\n1122\\n1112\") == \"impossible\"\nassert solution(\"3 4\\n1112\\n1112\\n1112\") == \"impossible\""
    },
    {
        "number": 3400,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3\") == \"9\"\n\nThe input is well-formed and the output is a valid integer. Therefore, the solution is correct."
    },
    {
        "number": 3401,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"6 2 2 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5\") == \"20.396078\""
    },
    {
        "number": 3402,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"\"\"abca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n1\n2\n1 8\"\"\") == \"b\\nc\\n\""
    },
    {
        "number": 3403,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"\"\"5\nhobotnica\nrobot\nhobi\nhobit\nrobi\n4\nrobi\nhobi\nhobit\nrakija\"\"\") == \"\"\"12\n10\n16\n7\"\"\""
    },
    {
        "number": 3404,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"14 4\\nJQ IRKEYFG EXQ\") == \"THIS IS A TEST\""
    },
    {
        "number": 3405,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2.6\") == \"135\\n270\\n135135\\n270270\"\nassert solution(\"3.14\") == \"No solution\"\nassert solution(\"10.0\") == \"100\\n1000\\n10000\\n100000\\n1000000\"\nassert solution(\"0.01\") == \"1\\n10\\n100\\n1000\\n10000\\n100000\\n1000000\"\nassert solution(\"0.001\") == \"1\\n10\\n100\\n1000\\n10000\\n100000\\n1000000\"\nassert solution(\"0.0001\") == \"1\\n10\\n100\\n1000\\n10000\\n100000\\n1000000\"\nassert solution(\"0.00001\") == \"1\\n10\\n100\\n1000\\n10000\\n100000\\n1000000\"\nassert solution(\"0.000001\") == \"1\\n10\\n100\\n1000\\n10000\\n100000\\n1000000\"\nassert solution(\"0.0000001\") == \"1\\n10\\n100\\n1000\\n10000\\n100000\\n1000000\"\nassert solution(\"0.00000001\") == \"1\\n10\\n100\\n1000\\n10000\\n100000\\n1000000\"\nassert solution(\"0.000000001\") == \"1\\n10\\n100\\n1000\\n10000\\n100000\\n1000000\"\nassert solution(\"0.0000000001\") == \"1\\n10\\n100\\n1000\\n10000\\n100000\\n1000000\"\nassert solution(\"0.00000000001\") == \"1\\n10\\n100\\n1000\\n10000\\n100000\\n1000000\"\nassert solution(\"0.000000000001\") == \"1\\n10\\n100\\n1000\\n10000\\n100000\\n1000000\"\nassert solution(\"0.0000000000001\") == \"1\\n10\\n100\\n1000\\n10000\\n100000\\n1000000\"\nassert solution(\"0.00000000000001\") == \"1\\n10\\n100\\n1000\\n10000\\n100000\\n1000000\"\nassert solution(\"0.000000000000001\") == \"1\\n10\\n100\\n1000\\n10000\\n100000\\n1000000\"\nassert solution(\"0.0000000000000001\") == \"1\\n10\\n100\\n1000\\n10000\\n100000\\n1000000\"\nassert solution(\"0.00000000000000001\") == \"1\\n10\\n100\\n1000\\n1000"
    },
    {
        "number": 3406,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n4\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n4\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n10\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n\"\"\") == \"0\""
    },
    {
        "number": 3407,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 2\\n1 3\\n1 4\\n1 5\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\""
    },
    {
        "number": 3408,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\naaa\\nabc\\naba\\na*a\\naaa*\\n*aaa\") == \"2\\n1\\n1\""
    },
    {
        "number": 3409,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\") == \"1\""
    },
    {
        "number": 3410,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4\\n2 0\\n0 2\\n-2 0\\n0 -2\") == \"16\"\n\nThe given problem can be solved using the following steps:\n\n1. Read the number of points.\n2. Read the coordinates of each point.\n3. For each point, check if it forms a valid quadrilateral with any other point.\n4. If it forms a valid quadrilateral, add the area of the quadrilateral to the score of the player who drew it.\n5. Return the sum of the scores modulo $1000003$.\n\nTo check if a point forms a valid quadrilateral, we can use the cross product of the vectors formed by the three points. If the cross product is zero, then the points are collinear. If the cross product is positive, then the points are in clockwise order. If the cross product is negative, then the points are in counterclockwise order.\n\nWe can use a set to keep track of the points that have already been used to form a quadrilateral. If we encounter a point that has already been used, then we can skip it.\n\nHere's the Python code to solve the problem:\n\n```python\n"
    },
    {
        "number": 3411,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 10 50\\n8 8 2 -2\") == \"80\"\n\nThe problem requires us to find the minimum time required to make a comment chain alternating by applying the two operations. We can solve this problem using dynamic programming. Let's define a function `dp(i, j)` as the minimum time required to make the comment chain alternating by applying the two operations starting from the `i`-th comment and ending at the `j`-th comment. We can compute `dp(i, j)` recursively as follows:\n\n1. If `i > j`, return `0`. This is because there are no comments to make the chain alternating.\n2. If `i == j`, return `0`. This is because there is only one comment in the chain.\n3. If `i == j-1`, return `0`. This is because there is only one comment in the chain.\n4. If `i == j-2`, return `0`. This is because there is only one comment in the chain.\n5. If `i == j-3`, return `0`. This is because there is only one comment in the chain.\n6. If `i == j-4`, return `0`. This is because there is only one comment in the chain.\n7. If `i < j-4`, return `INF`. This is because we need at least 5 comments to make the chain alternating.\n8. Otherwise, compute `dp(i, j)` as the minimum of the following:\n   - `dp(i+1, j) + c + r`, where `c` is the time taken to create a fake account and `r` is the time taken to report a comment.\n   - `dp(i+2, j) + c + r`, where `c` is the time taken to create a fake account and `r` is the time taken to report a comment.\n   - `dp(i+3, j) + c + r`, where `c` is the time taken to create a fake account and `r` is the time taken to report a comment.\n   - `dp(i+4, j) + c + r`, where `c` is the time taken to create a fake account and `r` is the time taken to report a comment.\n   - `dp(i+5, j) + c + r`, where `c` is the time taken to create a fake account and `r` is the time taken to report a comment.\n\nThe base cases are handled separately to avoid unnecessary computations. The time taken to create a fake account and report a comment is given in the input. We can compute the minimum time required to make the comment chain alternating by computing `dp(1, n)` for all possible values of `n`. The answer is the minimum of these values.\n\nHere's the Python code to implement this approach:\n\n```python\n"
    },
    {
        "number": 3412,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"3.000000000\"\n\nThe given problem can be solved using Dijkstra's algorithm. We can start by creating a graph where each node represents a bike station and each edge represents the distance between two stations. We can then use Dijkstra's algorithm to find the shortest path from Gladstone's current position to Daisy's position.\n\nHere's the Python code to implement this approach:\n\n```python\nimport heapq"
    },
    {
        "number": 3413,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == \"1\"\n\nThe minimum number of months required for all the state governors to be members of the same party is 1. This is because the secret committee has already determined that the two Orange governors are friends with each other and members of the same Party, so they will not be influenced by the Purple lobbyists. Therefore, the secret committee will not need to lobby for a change of party until the next month."
    },
    {
        "number": 3414,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2\") == \"6.283185\""
    },
    {
        "number": 3415,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"1 2 3\""
    },
    {
        "number": 3416,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n1 2\\n1 3\\n2 4\\n3 4\") == \"1\\n1 2 3 4\"\n\nassert solution(\"5 5\\n1 2\\n1 3\\n2 4\\n3 4\\n4 5\") == \"2\\n1 2 3 4 5\"\n\nassert solution(\"2 1\\n1 2\") == \"1\\n1 2\"\n\nassert solution(\"3 2\\n1 2\\n2 3\") == \"1\\n1 2 3\"\n\nassert solution(\"1 0\\n\") == \"0\\n\""
    },
    {
        "number": 3417,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 1\\n1 2\") == \"1\""
    },
    {
        "number": 3418,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"45\""
    },
    {
        "number": 3419,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5 20 20\\n7 11 9 12 2\") == \"4\""
    },
    {
        "number": 3420,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\") == \"2\"\n\nassert solution(\"3 3\\njohn 1 harrypotter1\\nmary 1 lordoftherings\\npeter 1 harrypotter1\\nmary 1 lordoftherings\\njohn 1 harrypotter1\\npeter 1 lordoftherings\") == \"3\"\n\nassert solution(\"1 1\\njohn 1 harrypotter1\") == \"1\"\n\nassert solution(\"1 2\\njohn 1 harrypotter1\\nmary 1 lordoftherings\") == \"2\"\n\nassert solution(\"2 1\\njohn 1 harrypotter1\\nmary 1 lordoftherings\") == \"1\""
    },
    {
        "number": 3421,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1\\n01\") == \"2 1\""
    },
    {
        "number": 3422,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"\"\"3\n4 1\n2123\n2 2\n21\n10\n2 2\n23\n12\"\"\") == \"\"\"4 3\n2123\n1012\n2123\n----\n2233\n2233\n1111\"\"\"\n\nassert solution(\"\"\"2\n2 2\n21\n2 2\n23\"\"\") == \"\"\"2 2\n21\n2 2\n23\"\"\"\n\nassert solution(\"\"\"1\n1 1\n1\"\"\") == \"\"\"1 1\n1\"\"\""
    },
    {
        "number": 3423,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n14\nlibattr\nvim-X11 vim-common gtk2 libattr\nvim-common\ngtk2 libtiff atk pango glib2\nlibtiff zlib libjpeg\natk\npango xorg-x11-libs freetype glib2\nglib2\nzlib\nlibjpeg\nxorg-x11-libs grep freetype\ngrep pcre\npcre\nfreetype\n3\nemacs xorg-x11 lisp\nxorg-x11\nlisp emacs\n0\n\"\"\") == \"\"\"\natk\nfreetype\nglib2\nlibattr\nlibjpeg\npcre\ngrep\nvim-common\nxorg-x11-libs\npango\nzlib\nlibtiff\ngtk2\nvim-X11\n\ncannot be ordered\n\"\"\""
    },
    {
        "number": 3424,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"32 20\") == \"16\""
    },
    {
        "number": 3425,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\n....\\n.#.#\\n....\") == \"5 13\""
    },
    {
        "number": 3426,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3 3\n1 2 5 1\n2 3 3 1\n3 1? 0\n\"\"\") == \"5\""
    },
    {
        "number": 3427,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\") == \"0\"\n\nassert solution(\"3 4\\n0 1\\n1 2\\n2 0\\n1 2\") == \"2\"\n\nassert solution(\"4 5\\n0 1\\n1 2\\n2 3\\n3 0\\n0 3\") == \"3\"\n\nassert solution(\"5 6\\n0 1\\n1 2\\n2 3\\n3 4\\n4 0\\n0 2\\n2 4\") == \"3\"\n\nassert solution(\"10 10\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 0\\n0 5\\n5 1\\n1 6\\n6 2\\n2 7\\n7 3\\n3 8\\n8 4\\n4 9\") == \"5\""
    },
    {
        "number": 3428,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4\\n9 6 2 4\") == \"6\""
    },
    {
        "number": 3429,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 1 1 3 2\\n2 5 1\") == \"2.000000\""
    },
    {
        "number": 3430,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 2\\n2 3\\n4\\n1 2\\n1 3\\n1 4\") == \"96\"\n\nassert solution(\"5\\n1 2\\n2 3\\n3 4\\n4 5\\n5 1\") == \"16\"\n\nassert solution(\"10\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\") == \"100\"\n\nassert solution(\"100\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100\") == \"10000\""
    },
    {
        "number": 3431,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 0\\n1 1\") == \"3\"\n\nassert solution(\"5\\n0 0\\n0 1\\n1 0\\n1 1\\n1 2\") == \"4\"\n\nassert solution(\"6\\n0 0\\n0 1\\n1 0\\n1 1\\n1 2\\n2 2\") == \"5\"\n\nassert solution(\"10\\n0 0\\n0 1\\n1 0\\n1 1\\n1 2\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\") == \"10\"\n\nassert solution(\"100000\\n0 0\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 11\\n12 12\\n13 13\\n14 14\\n15 15\\n16 16\\n17 17\\n18 18\\n19 19\\n20 20\\n21 21\\n22 22\\n23 23\\n24 24\\n25 25\\n26 26\\n27 27\\n28 28\\n29 29\\n30 30\\n31 31\\n32 32\\n33 33\\n34 34\\n35 35\\n36 36\\n37 37\\n38 38\\n39 39\\n40 40\\n41 41\\n42 42\\n43 43\\n44 44\\n45 45\\n46 46\\n47 47\\n48 48\\n49 49\\n50 50\\n51 51\\n52 52\\n53 53\\n54 54\\n55 55\\n56 56\\n57 57\\n58 58\\n59 59\\n60 60\\n61 61\\n62 62\\n63 63\\n64 64\\n65 65\\n66 66\\n67 67\\n68 68\\n69 69\\n70 70\\n71 71\\n72 72\\n73 73\\n74 74\\n75 75\\n76 76\\n77 77\\n78 78\\n79 79\\n80 80\\n81 81\\n82 82\\n83 83\\n84 84\\n85 85\\n86 86\\n87 87\\n88 88\\n89 89\\n90 90\\n91 91\\n92 92\\n93 93\\n94 94\\n95 95\\n96 96\\n97 97\\n98 98\\n99 99\") == \"100000\""
    },
    {
        "number": 3432,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2 8\\n3 1\\n1 4\") == \"10\\n10\\n9\""
    },
    {
        "number": 3433,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\") == \"3\""
    },
    {
        "number": 3434,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1 2 2\\n2\\n1 1\") == \"0.3333333333\""
    },
    {
        "number": 3435,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"10\\n1\") == \"1023\""
    },
    {
        "number": 3436,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"6\""
    },
    {
        "number": 3437,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n\") == \"2930\""
    },
    {
        "number": 3438,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3\\n0\\n0\\n1\") == \"2\""
    },
    {
        "number": 3439,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"\"\"3 3\n-5 2 -5\n-1 -2 -1\n5 4 -5\n2 2\"\"\") == \"10\"\n\nassert solution(\"\"\"5 5\n-10 -10 -10 -10 -10\n-10 -10 -10 -10 -10\n-10 -10 -10 -10 -10\n-10 -10 -10 -10 -10\n-10 -10 -10 -10 -10\n2 2\"\"\") == \"0\"\n\nassert solution(\"\"\"5 5\n-10 -10 -10 -10 -10\n-10 -10 -10 -10 -10\n-10 -10 -10 -10 -10\n-10 -10 -10 -10 -10\n-10 -10 -10 -10 -10\n1 1\"\"\") == \"1000000\"\n\nassert solution(\"\"\"5 5\n-10 -10 -10 -10 -10\n-10 -10 -10 -10 -10\n-10 -10 -10 -10 -10\n-10 -10 -10 -10 -10\n-10 -10 -10 -10 -10\n4 4\"\"\") == \"0\"\n\nassert solution(\"\"\"5 5\n-10 -10 -10 -10 -10\n-10 -10 -10 -10 -10\n-10 -10 -10 -10 -10\n-10 -10 -10 -10 -10\n-10 -10 -10 -10 -10\n3 3\"\"\") == \"1000000\""
    },
    {
        "number": 3440,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == \"3100\"\n\nThe first test case is a simple example where Frida can make all the reviews using only the flights in the list from her boss. The total cost of the flights is $1000+1000+500=2500$. The additional flights cost $300+300=600$, so the total cost is $2500+600=3100$.\n\nThe second test case is a more complex example where Frida can make all the reviews using some of the additional flights. The total cost of the flights is $1000+1000+500=2500$. The additional flights cost $300+300=600$, so the total cost is $2500+600=3100$."
    },
    {
        "number": 3441,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 1\\n0 1\") == \"0\"\n\nThe problem asks us to count the maximum number of one-way roads that can be constructed without creating any new round trips. We can solve this problem by using a graph theory approach. We can represent the roads as a graph, where each node represents a town and each edge represents a road. We can then use a depth-first search (DFS) to find all the possible paths from town $0$ to town $n-1$. If we encounter a road that has already been used, we can backtrack and try a different road. If we reach town $n-1$ without backtracking, we can add one more road to the graph and continue the DFS. We can keep track of the number of paths that end at town $n-1$ and return the maximum number of paths.\n\nHere's the Python code to implement this approach:\n\n```python\n"
    },
    {
        "number": 3442,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1 10\") == \"10\""
    },
    {
        "number": 3443,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4\\n0 0\\n1000 0\\n0 1000\\n1000 1000\") == \"0\"\n\nThe given input has no symmetry, so the output should be 0."
    },
    {
        "number": 3444,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 1\\n0 1 0.5\") == \"0.500000000 1.000000000\""
    },
    {
        "number": 3445,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\") == \"7\""
    },
    {
        "number": 3446,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n2\na b\n3-b 5-b\n6-a 2-b\n2\naba\nbba\n0\n\"\"\") == \"\"\"\n9-b\n8-a\n\"\"\"\n\nassert solution(\"\"\"\n3\na b c\n3-b 5-b 2-c\n6-a 2-b 4-c\n2\naba\nbba\n0\n\"\"\") == \"\"\"\n11-b\n10-a\n\"\"\"\n\nassert solution(\"\"\"\n3\na b c\n3-b 5-b 2-c\n6-a 2-b 4-c\n2\nabc\ncba\n0\n\"\"\") == \"\"\"\n11-b\n10-a\n\"\"\"\n\nassert solution(\"\"\"\n3\na b c\n3-b 5-b 2-c\n6-a 2-b 4-c\n2\nabc\nbca\n0\n\"\"\") == \"\"\"\n11-b\n10-a\n\"\"\"\n\nassert solution(\"\"\"\n3\na b c\n3-b 5-b 2-c\n6-a 2-b 4-c\n2\nabc\ncab\n0\n\"\"\") == \"\"\"\n11-b\n10-a\n\"\"\"\n\nassert solution(\"\"\"\n3\na b c\n3-b 5-b 2-c\n6-a 2-b 4-c\n2\nabc\nbac\n0\n\"\"\") == \"\"\"\n11-b\n10-a\n\"\"\"\n\nassert solution(\"\"\"\n3\na b c\n3-b 5-b 2-c\n6-a 2-b 4-c\n2\nabc\nacb\n0\n\"\"\") == \"\"\"\n11-b\n10-a\n\"\"\"\n\nassert solution(\"\"\"\n3\na b c\n3-b 5-b 2-c\n6-a 2-b 4-c\n2\nabc\nbac\n0\n\"\"\") == \"\"\"\n11-b\n10-a\n\"\"\"\n\nassert solution(\"\"\"\n3\na b c\n3-b 5-b 2-c\n6-a 2-b 4-c\n2\nabc\nbca\n0\n\"\"\") == \"\"\"\n11-b\n10-a\n\"\"\"\n\nassert solution(\"\"\"\n3\na b c\n3-b 5-b 2-c\n6-a 2-b 4-c\n2\nabc\ncab\n0\n\"\"\") == \"\"\"\n11-b\n10-a\n\"\"\"\n\nassert solution(\"\"\"\n3\na b c\n3-b 5-b 2-c\n6-a 2-b 4-c\n2\nabc\nacb\n0\n\"\"\") == \"\"\"\n11-b\n10-a\n\"\"\"\n\nassert solution(\"\"\"\n3\na b c\n3-b 5-b 2-c\n6-a 2-b 4-c\n2\nabc\nbac\n0\n\"\"\") == \"\"\"\n11-b\n10-a\n\"\"\"\n\nassert solution(\"\"\"\n3\na b c\n3-b 5-b 2-c\n6-a 2-b 4-c\n2\nabc\nbca\n0\n\"\"\") == \"\"\"\n11-b\n10-a\n\"\"\"\n\nassert solution(\"\"\"\n3\na b c\n3-b 5-b 2-c\n6-a 2-b 4-c\n2\nabc\ncab\n0\n\"\"\") == \"\"\"\n11-b\n10-a\n\"\"\"\n\nassert solution(\"\"\"\n3\na b c\n3-b 5-b 2-c\n6-a 2-b 4-c\n2\nabc\nacb\n0\n\"\"\") == \"\"\"\n11-b\n10-a\n\"\"\"\n\nassert solution(\"\"\"\n3\na b c\n3-b 5-b 2-c\n6-a 2-b 4-c\n2\nabc\nbac\n0\n\"\"\") == \"\"\"\n11-b\n10-a\n\"\"\"\n\nassert solution(\"\"\"\n3\na b c\n3-b 5-b 2-c\n6-a 2-b 4-c\n2\nabc\nbca\n0\n\"\"\") == \"\"\"\n11-b\n10-a\n\"\"\"\n\nassert solution(\"\"\"\n3\na b c\n3-b 5-b 2-c\n6-a 2-b 4-c\n"
    },
    {
        "number": 3447,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n1\necho\n1\nechoecho\n\"\"\") == \"3246R3246\""
    },
    {
        "number": 3448,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 1\") == \"YES\\n1 2\\n1 3\""
    },
    {
        "number": 3449,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == \"176\""
    },
    {
        "number": 3450,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"12\""
    },
    {
        "number": 3451,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 1\\n((()\\n480\\n617\\n-570\\n928\") == \"480\""
    },
    {
        "number": 3452,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\") == \"2 4\\n5 6\\n7 8 9 10 11 12 13\""
    },
    {
        "number": 3453,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2\") == \"35 39 36 27 29\""
    },
    {
        "number": 3454,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n3 2 1\") == \"0 672\""
    },
    {
        "number": 3455,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\") == \"2.500000\""
    },
    {
        "number": 3456,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n5 3 4\") == \"3\""
    },
    {
        "number": 3457,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 1 1\") == \"2\""
    },
    {
        "number": 3458,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 3 5\") == \"7\""
    },
    {
        "number": 3459,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"\"\"2\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\"\"\") == \"\"\"fred jetsons\njohn jets\nruth rockets\n\nfred jetsons\njohn jets\nruth rockets\"\"\""
    },
    {
        "number": 3460,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n4 3\\n-10 9\\n-2 3\") == \"1 2 1\""
    },
    {
        "number": 3461,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\") == \"2.125\""
    },
    {
        "number": 3462,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"*.*\\n4\\nmain.c\\na.out\\nreadme\\nyacc\") == \"main.c\\na.out\\nreadme\\nyacc\"\nassert solution(\"*.*\\n4\\nmain.c\\na.out\\nreadme\\nyacc\\n\") == \"main.c\\na.out\\nreadme\\nyacc\"\nassert solution(\"*.*\\n4\\nmain.c\\na.out\\nreadme\\nyacc\\n\\n\") == \"main.c\\na.out\\nreadme\\nyacc\"\nassert solution(\"*.*\\n4\\nmain.c\\na.out\\nreadme\\nyacc\\n\\n\\n\") == \"main.c\\na.out\\nreadme\\nyacc\"\nassert solution(\"*.*\\n4\\nmain.c\\na.out\\nreadme\\nyacc\\n\\n\\n\\n\") == \"main.c\\na.out\\nreadme\\nyacc\""
    },
    {
        "number": 3463,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1 1\\n0.500000\") == \"0.500000\""
    },
    {
        "number": 3464,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"0 49.9\") == \"0.0\"\n\nThe maximum expected profit is 0, since there is no chance of winning any bets."
    },
    {
        "number": 3465,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 1\\n4 1\") == \"4 1\\n2 1\\n3 2\\n1 3\"\n\nassert solution(\"5\\n1 2\\n2 3\\n3 4\\n4 5\\n5 1\") == \"5 1\\n2 1\\n3 2\\n4 3\\n1 4\"\n\nassert solution(\"6\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 1\") == \"6 1\\n2 1\\n3 2\\n4 3\\n5 4\\n1 5\"\n\nassert solution(\"10\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 1\") == \"10 1\\n2 1\\n3 2\\n4 3\\n5 4\\n6 5\\n7 6\\n8 7\\n9 8\\n1 9\"\n\nassert solution(\"100000\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 1\\n1 10\\n10 100000\") == \"100000 1\\n2 1\\n3 2\\n4 3\\n5 4\\n6 5\\n7 6\\n8 7\\n9 8\\n10 9\\n1 10\\n10 100000\""
    },
    {
        "number": 3466,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\"\n\nThe first test case is already balanced, so there is no need to buy any more sweets. The second test case has 5 sweets of type 1, 2 sweets of type 2, 3 sweets of type 3, 2 sweets of type 5, and 1 sweet of type 6. The set of sweets is already balanced, so there is no need to buy any more sweets. Therefore, the output is \"1\"."
    },
    {
        "number": 3467,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 1 10\\n0 1 1 2 6\") == \"3\"\n\nThe first line of the input specifies that there are two tram stops, one meeting stop, and the meeting starts at time 10 seconds from now. The second line specifies that there is one tram line that departs from stop 0, arrives at stop 1, starts its first departure at time 1 second from now, departs every 2 seconds from the first departure, and takes 6 seconds from departure to arrival.\n\nTo solve this problem, we need to find the latest time at which we can leave the hotel while arriving to the meeting on time. We can do this by considering all possible tram lines that depart from the hotel and arrive at the meeting stop. For each tram line, we can calculate the earliest time at which we can depart from the hotel and arrive at the meeting stop on time. The latest of these times is the latest time at which we can leave the hotel while arriving to the meeting on time.\n\nIn this case, there is only one tram line that departs from the hotel and arrives at the meeting stop. The earliest time at which we can depart from the hotel and arrive at the meeting stop on time is 10 + 1 = 11 seconds from now. The latest time at which we can leave the hotel while arriving to the meeting on time is 11, which is the same as the earliest time at which we can depart from the hotel and arrive at the meeting stop on time. Therefore, the output is \"3\"."
    },
    {
        "number": 3468,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 100\\n99 1\\n1 99\") == \"2\\n1 2\""
    },
    {
        "number": 3469,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"H\\nT\\n0.5\") == \"0.5\"\n\nThe probability that Gon wins is 0.5, since the game ends in a draw with equal probability for both players."
    },
    {
        "number": 3470,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"8\\n1 3 5 7 9 11 13 15\""
    },
    {
        "number": 3471,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\") == \"3\\n1\\n0\""
    },
    {
        "number": 3472,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 1\\n1 1 -2 0\") == \"0\"\n\nThe first line of input contains two positive integers $W$ and $N$, ($1 \\leq W,N \\leq 100$) denoting the number of warlords and the number of lines in the suggested division of space. This is followed by $N$ lines each containing four integers $x_1$, $y_1$, $x_2$ and $y_2$, each with an absolute value no higher than $10000$. This means that one line is intersecting the two points $(x_1,y_1)$ and $(x_2,y_2)$ on the galactic map. These two points are not be the same.\n\nIn this case, there are two warlords and one line is suggested. The line intersects the two points $(1,1)$ and $(-2,0)$. Since the line is not parallel to any other line, there is no need to add any extra lines to satisfy all warlords. Therefore, the output is \"0\"."
    },
    {
        "number": 3473,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\") == \"194\\n2019 10 25\\n2020 10 30\"\n\nassert solution(\"1\\n0\\n\") == \"0\"\n\nassert solution(\"1\\n1\\n2019 10 18\\n\") == \"1\\n2019 10 18\"\n\nassert solution(\"1\\n1\\n2019 10 18\\n2019 10 18\") == \"0\"\n\nassert solution(\"1\\n1\\n2019 10 18\\n2019 10 19\") == \"1\"\n\nassert solution(\"1\\n1\\n2019 10 18\\n2019 10 20\") == \"4\"\n\nassert solution(\"1\\n1\\n2019 10 18\\n2019 10 21\") == \"9\"\n\nassert solution(\"1\\n1\\n2019 10 18\\n2019 10 22\") == \"16\"\n\nassert solution(\"1\\n1\\n2019 10 18\\n2019 10 23\") == \"25\"\n\nassert solution(\"1\\n1\\n2019 10 18\\n2019 10 24\") == \"36\"\n\nassert solution(\"1\\n1\\n2019 10 18\\n2019 10 25\") == \"49\"\n\nassert solution(\"1\\n1\\n2019 10 18\\n2019 10 26\") == \"64\"\n\nassert solution(\"1\\n1\\n2019 10 18\\n2019 10 27\") == \"81\"\n\nassert solution(\"1\\n1\\n2019 10 18\\n2019 10 28\") == \"100\"\n\nassert solution(\"1\\n1\\n2019 10 18\\n2019 10 29\") == \"121\"\n\nassert solution(\"1\\n1\\n2019 10 18\\n2019 10 30\") == \"144\"\n\nassert solution(\"1\\n1\\n2019 10 18\\n2019 10 31\") == \"169\"\n\nassert solution(\"1\\n1\\n2019 10 18\\n2019 11 01\") == \"196\"\n\nassert solution(\"1\\n1\\n2019 10 18\\n2019 11 02\") == \"225\"\n\nassert solution(\"1\\n1\\n2019 10 18\\n2019 11 03\") == \"256\"\n\nassert solution(\"1\\n1\\n2019 10 18\\n2019 11 04\") == \"289\"\n\nassert solution(\"1\\n1\\n2019 10 18\\n2019 11 05\") == \"324\"\n\nassert solution(\"1\\n1\\n2019 10 18\\n2019 11 06\") == \"361\"\n\nassert solution(\"1\\n1\\n2019 10 18\\n2019 11 07\") == \"400\"\n\nassert solution(\"1\\n1\\n2019 10 18\\n2019 11 08\") == \"441\"\n\nassert solution(\"1"
    },
    {
        "number": 3474,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5 10 10 10 10 0\\n5 10 10 5 10 0\\n6 10 10 10 10 0\\n\") == \"negative-infinity 0\\n5 12.5\\nnegative-infinity -5\\n\""
    },
    {
        "number": 3475,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\") == \"2\"\n\nassert solution(\"2 3\\n100 0\\n200 0\\n300 0\\n100 0\\n200 0\\n300 0\") == \"IMPOSSIBLE\"\n\nassert solution(\"2 3\\n100 0\\n200 0\\n300 0\\n100 0\\n200 0\\n300 10000\") == \"1\"\n\nassert solution(\"2 3\\n100 0\\n200 0\\n300 0\\n100 0\\n200 0\\n300 -10000\") == \"1\"\n\nassert solution(\"2 3\\n100 0\\n200 0\\n300 0\\n100 0\\n200 0\\n300 20000\") == \"IMPOSSIBLE\"\n\nassert solution(\"2 3\\n100 0\\n200 0\\n300 0\\n100 0\\n200 0\\n300 -20000\") == \"IMPOSSIBLE\"\n\nassert solution(\"2 3\\n100 0\\n200 0\\n300 0\\n100 0\\n200 0\\n300 30000\") == \"IMPOSSIBLE\"\n\nassert solution(\"2 3\\n100 0\\n200 0\\n300 0\\n100 0\\n200 0\\n300 -30000\") == \"IMPOSSIBLE\"\n\nassert solution(\"2 3\\n100 0\\n200 0\\n300 0\\n100 0\\n200 0\\n300 40000\") == \"IMPOSSIBLE\"\n\nassert solution(\"2 3\\n100 0\\n200 0\\n300 0\\n100 0\\n200 0\\n300 -40000\") == \"IMPOSSIBLE\"\n\nassert solution(\"2 3\\n100 0\\n200 0\\n300 0\\n100 0\\n200 0\\n300 50000\") == \"IMPOSSIBLE\"\n\nassert solution(\"2 3\\n100 0\\n200 0\\n300 0\\n100 0\\n200 0\\n300 -50000\") == \"IMPOSSIBLE\"\n\nassert solution(\"2 3\\n100 0\\n200 0\\n300 0\\n100 0\\n200 0\\n300 60000\") == \"IMPOSSIBLE\"\n\nassert solution(\"2 3\\n100 0\\n200 0\\n300 0\\n100 0\\n200 0\\n300 -60000\") == \"IMPOSSIBLE\"\n\nassert solution(\"2 3\\n100 0\\n200 0\\n300 0\\n100 0\\n200 0\\n300 70000\") == \"IMPOSSIBLE\"\n\nassert solution(\"2 3\\n100 0\\n200 0\\n300 0\\n100 0\\n200 0\\n300 -70000\") == \"IMPOSSIBLE\"\n\nassert solution(\"2 3\\n100 0\\n200 0\\n300 0\\n100 0\\"
    },
    {
        "number": 3476,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\") == \"345 2\\nrotS 2 1\\nnegR 2\"\n\nassert solution(\"2 3\\n1 2 3\\n4 5 6\") == \"30 1\\nnegS 2\"\n\nassert solution(\"1 1\\n1000000000\") == \"1000000000 0\"\n\nassert solution(\"1 2\\n1000000000 1000000000\") == \"2000000000 1\\nnegS 1\"\n\nassert solution(\"2 2\\n1 2\\n3 4\") == \"10 1\\nnegR 1\\nnegS 1\""
    },
    {
        "number": 3477,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n3 1 1\") == \"0.5\""
    },
    {
        "number": 3478,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\") == \"1 4 5\\n2 6 7\"\n\nassert solution(\"10 10\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n1 10\") == \"impossible\"\n\nassert solution(\"10 10\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n1 10\\n1 3\\n2 4\\n3 5\\n4 6\\n5 7\\n6 8\\n7 9\\n8 10\") == \"1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\"\n\nassert solution(\"10 10\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n1 10\\n1 3\\n2 4\\n3 5\\n4 6\\n5 7\\n6 8\\n7 9\\n8 10\\n1 5\\n2 6\\n3 7\\n4 8\\n5 9\\n6 10\") == \"1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\"\n\nassert solution(\"10 10\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n1 10\\n1 3\\n2 4\\n3 5\\n4 6\\n5 7\\n6 8\\n7 9\\n8 10\\n1 5\\n2 6\\n3 7\\n4 8\\n5 9\\n6 10\\n1 4\\n2 5\\n3 6\\n4 7\\n5 8\\n6 9\\n7 10\") == \"1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\"\n\nassert solution(\"10 10\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n1 10\\n1 3\\n2 4\\n3 5\\n4 6\\n5 7\\n6 8\\n7 9\\n8 10\\n1 5\\n2 6\\n3 7\\n4 8\\n5 9\\n6 10\\n1 4\\n2 5\\n3 6\\n4 7\\n5 8\\n6 9\\n7 10\\n1 9\\n2 8\\n3 7\\n4 6\\n5 5\\n6 4\\n7 3\\n8 2\\n9 1\") == \"1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\"\n\nassert solution(\"10 10\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n1 10\\n1 3\\n2 4\\n"
    },
    {
        "number": 3479,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\") == \"13500\""
    },
    {
        "number": 3480,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"\"\"2 16\nHot cross buns! = Hot cross buns! =\n4 4 4 4 4 4 4 4\"\"\") == \"\"\"Hot_cross_buns!_=___Hot_cross_buns!_=\n____________________Hot_cross_buns!_=\"\"\"\n\nassert solution(\"\"\"2 16\nHot cross buns! = Hot cross buns! =\n4 4 4 4 4 4 4 4\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\n2 2 2 2 2 2 2 2 4 4 4 4\"\"\") == \"\"\"Hot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\n"
    },
    {
        "number": 3481,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\") == \"33\""
    },
    {
        "number": 3482,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n20 15 10\\n7 7\\n30 0\") == \"405\"\n\nThe first test case has a total of 3 days, with the first price level active for 7 days, the second price level active for 7 days, and the third price level active indefinitely. The total cost of the transit card is $20 \\times 7 + 15 \\times 7 + 10 \\times 30 = 405$."
    },
    {
        "number": 3483,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2 4 7\") == \"28 4 21 14.0\""
    },
    {
        "number": 3484,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4 \\n2 3 4 1 \\n3 4 1 2 \\n4 1 2 3\"\nassert solution(\"3 1\\n1 2 3\") == \"no\"\nassert solution(\"5 3\\n1 2 3\\n4 5 6\\n7 8 9\") == \"yes\\n1 2 3 4 5 \\n4 5 6 7 8 \\n7 8 9 1 2 \\n2 3 4 5 6 \\n5 6 7 8 9\"\nassert solution(\"10 5\\n1 2 3 4 5\\n6 7 8 9 10\\n11 12 13 14 15\\n16 17 18 19 20\\n21 22 23 24 25\") == \"yes\\n1 2 3 4 5 6 7 8 9 10 \\n6 7 8 9 10 11 12 13 14 15 \\n11 12 13 14 15 16 17 18 19 20 \\n16 17 18 19 20 21 22 23 24 25 \\n21 22 23 24 25 1 2 3 4 5 \\n2 3 4 5 6 7 8 9 10 11 \\n7 8 9 10 11 12 13 14 15 16 \\n12 13 14 15 16 17 18 19 20 21 \\n17 18 19 20 21 22 23 24 25 1 \\n3 4 5 6 7 8 9 10 11 12 \\n8 9 10 11 12 13 14 15 16 17 \\n13 14 15 16 17 18 19 20 21 22 \\n18 19 20 21 22 23 24 25 1 2 \\n4 5 6 7 8 9 10 11 12 13 \\n9 10 11 12 13 14 15 16 17 18 \\n14 15 16 17 18 19 20 21 22 23 \\n19 20 21 22 23 24 25 1 2 3\""
    },
    {
        "number": 3485,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5\\n10 10 -10 -4 10\") == \"10.000000000\""
    },
    {
        "number": 3486,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4\\n30\\n3\\n2\\n45\") == \"1\"\n\nThe first test case has only one valid arrangement, where the students hold the streamers in the order $2$, $3$, $30$, and $45$. This is the only way to satisfy the rules, since no two students share a factor other than $1$.\n\nThe second test case has no valid arrangement, since the students cannot stretch the streamers between $2$ and $3$ or between $3$ and $30$.\n\nThe third test case has no valid arrangement, since the students cannot stretch the streamers between $2$ and $30$ or between $3$ and $45$.\n\nThe fourth test case has one valid arrangement, where the students hold the streamers in the order $2$, $3$, $45$, and $30$. This is the only way to satisfy the rules, since no two students share a factor other than $1$."
    },
    {
        "number": 3487,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n\"\"\") == \"\"\"\n0.000000000 1.360000000\n0.000000000 1.000000000\n0.000000000 -1.000000000\n0.000000000 0.360000000\n0.880000000 0.000000000\n-0.880000000 -0.360000000\n1.02037965897\n\"\"\""
    },
    {
        "number": 3488,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\\n\") == \"4\"\n\nassert solution(\"5\\n0 0\\n0 1\\n1 1\\n1 0\\n0 0\\n2\\n1 1\\n2 2\\n\") == \"3\"\n\nassert solution(\"6\\n0 0\\n0 1\\n1 1\\n1 0\\n0 0\\n0 2\\n2\\n1 1\\n2 2\\n\") == \"4\"\n\nassert solution(\"7\\n0 0\\n0 1\\n1 1\\n1 0\\n0 0\\n0 2\\n2\\n1 1\\n2 2\\n3\\n1 1\\n2 2\\n3 3\\n\") == \"4\"\n\nassert solution(\"8\\n0 0\\n0 1\\n1 1\\n1 0\\n0 0\\n0 2\\n2\\n1 1\\n2 2\\n3\\n1 1\\n2 2\\n3 3\\n4\\n1 1\\n2 2\\n3 3\\n4 4\\n\") == \"5\""
    },
    {
        "number": 3489,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 0\\n0 1\\n0 2\\n0 3\") == \"2\\n3 2\\n3 1\"\n\nassert solution(\"5 0\\n0 1\\n0 2\\n0 3\\n0 4\") == \"3\\n4 3\\n4 2\\n4 1\"\n\nassert solution(\"6 0\\n0 1\\n0 2\\n0 3\\n0 4\\n0 5\") == \"4\\n5 4\\n5 3\\n5 2\\n5 1\"\n\nassert solution(\"7 0\\n0 1\\n0 2\\n0 3\\n0 4\\n0 5\\n0 6\") == \"5\\n6 5\\n6 4\\n6 3\\n6 2\\n6 1\"\n\nassert solution(\"8 0\\n0 1\\n0 2\\n0 3\\n0 4\\n0 5\\n0 6\\n0 7\") == \"6\\n7 6\\n7 5\\n7 4\\n7 3\\n7 2\\n7 1\"\n\nassert solution(\"9 0\\n0 1\\n0 2\\n0 3\\n0 4\\n0 5\\n0 6\\n0 7\\n0 8\") == \"7\\n8 7\\n8 6\\n8 5\\n8 4\\n8 3\\n8 2\\n8 1\"\n\nassert solution(\"10 0\\n0 1\\n0 2\\n0 3\\n0 4\\n0 5\\n0 6\\n0 7\\n0 8\\n0 9\") == \"8\\n9 8\\n9 7\\n9 6\\n9 5\\n9 4\\n9 3\\n9 2\\n9 1\"\n\nassert solution(\"11 0\\n0 1\\n0 2\\n0 3\\n0 4\\n0 5\\n0 6\\n0 7\\n0 8\\n0 9\\n0 10\") == \"9\\n10 9\\n10 8\\n10 7\\n10 6\\n10 5\\n10 4\\n10 3\\n10 2\\n10 1\"\n\nassert solution(\"12 0\\n0 1\\n0 2\\n0 3\\n0 4\\n0 5\\n0 6\\n0 7\\n0 8\\n0 9\\n0 10\\n0 11\") == \"10\\n11 10\\n11 9\\n11 8\\n11 7\\n11 6\\n11 5\\n11 4\\n11 3\\n11 2\\n11 1\"\n\nassert solution(\"13 0\\n0 1\\n0 2\\n0 3\\n0 4\\n0 5\\n0 6\\n0 7\\n0 8\\n0 9\\n0 10\\n0 11\\n0 12\") == \"11\\n12 11\\n12 10\\n12 9\\n12 8\\n12 7\\n12 6\\n12 5\\n12 4\\n12 3\\n12 2\\n12 1\"\n\nassert solution(\"14 0\\n0 1\\n0 2\\n0 3\\n0 4\\n0 5\\n0 6\\n0 7\\n0 8\\n0 9\\n0 10\\n0 11\\n0 12\\n0 13\") == \"12\\n13 12\\n13 11\\n13 10\\n13 9\\n13 8\\n13 7\\n13 6\\n13 5\\n13 4\\n13 3\\n13 2\\"
    },
    {
        "number": 3490,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2\\n0 0 0\\n0 1.5 0\") == \"ok\"\n\nThe first test case is a simple one where there are two witches, both at the origin, and both pointing to the right. The second test case is a more complex one where there are two witches, one at $(0,0)$ and the other at $(0,1.5)$, both pointing to the right.\n\nThe solution to this problem is to check if any two witches will crash into each other. We can do this by checking if the distance between their brooms is less than the length of their brooms. If this is the case, then the witches will crash into each other.\n\nWe can calculate the distance between two brooms using the distance formula:\n\n$d = \\sqrt{(x_2 - x_1)^2 + (y_2 - y_1)^2}$\n\nwhere $x_1, y_1$ and $x_2, y_2$ are the coordinates of the two brooms.\n\nWe can then check if the distance between any two brooms is less than the length of their brooms. If this is the case, then the witches will crash into each other.\n\nHere's the code to implement this solution:\n\n```python\nimport math"
    },
    {
        "number": 3491,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"2\\nR 0\\nG 2\"\n\nassert solution(\"10 10\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\\n3 5\\n5 9\\n6 8\\n7 9\\n8 9\\n9 0\") == \"10\\nR 0\\nG 2\\nR 3\\nG 5\\nR 6\\nG 8\\nR 9\\nG 1\\nR 2\\nG 4\"\n\nassert solution(\"10 10\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\\n3 5\\n5 9\\n6 8\\n7 9\\n8 9\\n9 0\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\\n3 5\\n5 9\\n6 8\\n7 9\\n8 9\\n9 0\") == \"20\\nR 0\\nG 2\\nR 3\\nG 5\\nR 6\\nG 8\\nR 9\\nG 1\\nR 2\\nG 4\\nR 0\\nG 2\\nR 3\\nG 5\\nR 6\\nG 8\\nR 9\\nG 1\\nR 2\\nG 4\""
    },
    {
        "number": 3492,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\") == \"2\""
    },
    {
        "number": 3493,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\nYYY\\nNYY\\nYNY\") == \"2\\n1 2 3\\n3 1 2\""
    },
    {
        "number": 3494,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\nxxx\\n...\\n...\\n3\\n1 3\\n1 1\\n3 2\") == \"4\\n0\\n5\""
    },
    {
        "number": 3495,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n5\\n3\\n4\\n5 3\") == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\\n\""
    },
    {
        "number": 3496,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\") == \"3\\n5\\n8\\n10\\n13\""
    },
    {
        "number": 3497,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 \") == \"0\""
    },
    {
        "number": 3498,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 1\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1\") == \"106\\n107\\n71\""
    },
    {
        "number": 3499,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2\\nAA\") == \"51\""
    },
    {
        "number": 3500,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"\"\"2\n3 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71\n\n14 23 39 59 63\n8 17 35 55 61\n15 26 42 53 71\n10 25 31 57 64\n6 20 44 52 68\"\"\") == \"1 2\"\n\nassert solution(\"\"\"2\n1 2 3 4 5\n6 7 8 9 10\n11 12 13 14 15\n16 17 18 19 20\n21 22 23 24 25\n\n26 27 28 29 30\n31 32 33 34 35\n36 37 38 39 40\n41 42 43 44 45\n46 47 48 49 50\"\"\") == \"no ties\"\n\nassert solution(\"\"\"2\n1 2 3 4 5\n6 7 8 9 10\n11 12 13 14 15\n16 17 18 19 20\n21 22 23 24 25\n\n26 27 28 29 30\n31 32 33 34 35\n36 37 38 39 40\n41 42 43 44 45\n46 47 48 49 50\"\"\") == \"no ties\"\n\nassert solution(\"\"\"2\n1 2 3 4 5\n6 7 8 9 10\n11 12 13 14 15\n16 17 18 19 20\n21 22 23 24 25\n\n26 27 28 29 30\n31 32 33 34 35\n36 37 38 39 40\n41 42 43 44 45\n46 47 48 49 50\"\"\") == \"no ties\"\n\nassert solution(\"\"\"2\n1 2 3 4 5\n6 7 8 9 10\n11 12 13 14 15\n16 17 18 19 20\n21 22 23 24 25\n\n26 27 28 29 30\n31 32 33 34 35\n36 37 38 39 40\n41 42 43 44 45\n46 47 48 49 50\"\"\") == \"no ties\"\n\nassert solution(\"\"\"2\n1 2 3 4 5\n6 7 8 9 10\n11 12 13 14 15\n16 17 18 19 20\n21 22 23 24 25\n\n26 27 28 29 30\n31 32 33 34 35\n36 37 38 39 40\n41 42 43 44 45\n46 47 48 49 50\"\"\") == \"no ties\"\n\nassert solution(\"\"\"2\n1 2 3 4 5\n6 7 8 9 10\n11 12 13 14 15\n16 17 18 19 20\n21 22 23 24 25\n\n26 27 28 29 30\n31 32 33 34 3"
    },
    {
        "number": 3501,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3 2 1\\n1 2 3\\n1 2 3\") == \"0\""
    },
    {
        "number": 3502,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n4\n1 2 3\n6 2 3\n10 2 3\n16 3 4\n\"\"\") == \"\"\"\n0.4\n0\n0.2\n0.171428571429\n0.228571428571\n\"\"\""
    },
    {
        "number": 3503,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 -6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\"\n\nassert solution(\"1\\n1 1\") == \"1 + 1 = 2\"\n\nassert solution(\"2\\n1 2\\n3 4\") == \"1 + 2 = 3\\n3 * 4 = 12\"\n\nassert solution(\"2\\n1 2\\n1 2\") == \"impossible\"\n\nassert solution(\"2\\n1 2\\n3 3\") == \"1 + 2 = 3\\n3 * 3 = 9\""
    },
    {
        "number": 3504,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1\") == \"4\\n1\\n4\\n6\\n0\""
    },
    {
        "number": 3505,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2 3 4\") == \"4\"\n\nThe first line of input consists of a single integer $N$ ($1 \\leq N \\leq 200000$). The next line consists of $N$ space-separated integers $a_1, a_2, \\dots, a_ N$.\n\nWe can solve this problem by using a nested loop to iterate over all possible pairs of indices $(i, j)$ and then check if $a_i + a_j = a_k$ for some $k$. We can use a set to keep track of the indices we have already used to avoid duplicates.\n\nHere's the code:\n\n```python\n"
    },
    {
        "number": 3506,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\""
    },
    {
        "number": 3507,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 2 1\") == \"3\""
    },
    {
        "number": 3508,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1341 2412 1200 3112 2391\") == \"3 1\"\n\nThe first pillar (pillar 0) can support a weight of 1341 kN, the second pillar (pillar 1) can support a weight of 2412 kN, and so on. The maximum damage that Finn can cause is when he tears down pillar 1, which can support a weight of 2412 kN. The damage is 2412/1341 = 1.88, rounded to 2.\n\nThe code to solve the problem is:\n\n```python\n"
    },
    {
        "number": 3509,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"6\""
    },
    {
        "number": 3510,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2\\n2 ab b\\n1 b\") == \"0 1\\n-1 0\""
    },
    {
        "number": 3511,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 4\\n1 1 2\\n2\\n1 1 2\\n2\") == \"1\\n3\""
    },
    {
        "number": 3512,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n0 5 2\\n5 0 4\\n2 4 0\") == \"7\""
    },
    {
        "number": 3513,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1099511627776\") == \"8\""
    },
    {
        "number": 3514,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\nx..\\n.x.\\nx.x\\n\") == \"2\""
    },
    {
        "number": 3515,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0\") == \"9\\n-1\\n5\\n6\\n\""
    },
    {
        "number": 3516,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\") == \"91\""
    },
    {
        "number": 3517,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2\\n15 20\\n0\\n1 1\") == \"15\"\n\nThe given problem can be solved using a topological sort algorithm. We can create a directed graph where each node represents a step and each edge represents a dependency between two steps. We can then perform a topological sort on this graph to find the order in which the steps need to be completed. The time taken by each step can be stored in a dictionary and the total time taken by the entire process can be calculated by summing up the times of all the steps.\n\nHere's the Python code to solve the problem:\n\n```python\n"
    },
    {
        "number": 3518,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98\") == \"impossible\""
    },
    {
        "number": 3519,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1.000000000\""
    },
    {
        "number": 3520,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\") == \"115.000000000\""
    },
    {
        "number": 3521,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2\\n100 1 1\\n100 1 1.5\") == \"199.500000\""
    },
    {
        "number": 3522,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\n\nThe problem requires us to find the smallest number $d$ such that we can allocate the batteries so that the difference of power outputs of the two chips in each machine is at most $d$. We can solve this problem by using dynamic programming.\n\nLet $dp[i][j]$ be the minimum difference of power outputs of the two chips in the $i$-th machine, where the first chip has power output $j$. We can compute $dp[i][j]$ by considering all possible values of $j$ and taking the minimum over all possible values of $j$ that satisfy the condition that the difference of power outputs is at most $d$.\n\nThe base case is when $i=0$, in which case the first chip has power output $j=p_0$, and the difference of power outputs is $p_0-p_0=0$. The answer is $dp[0][p_0]$.\n\nThe recursive case is when $i>0$, in which case we need to consider all possible values of $j$ that satisfy the condition that the difference of power outputs is at most $d$. We can compute $dp[i][j]$ by considering all possible values of $j$ that satisfy the condition that the difference of power outputs is at most $d$, and taking the minimum over all such values.\n\nThe answer is $dp[n][j]$, where $n$ is the number of machines and $j$ is the maximum power output of the batteries.\n\nThe time complexity of this algorithm is $O(nk^2)$, since we need to consider all possible values of $j$ for each machine. The space complexity is $O(nk)$, since we only need to store the values of $dp$ for each machine and each power output."
    },
    {
        "number": 3523,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"13\\n3 2 1 1\") == \"5\""
    },
    {
        "number": 3524,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"aabcad\\naba\\nacd\") == \"yes\""
    },
    {
        "number": 3525,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\\n\") == \"5\""
    },
    {
        "number": 3526,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5 2\\n2 4 same\\n3 5 same\") == \"4\""
    },
    {
        "number": 3527,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"6 4\\n0 1\\n0 2\\n3 4\\n3 5\") == \"3\""
    },
    {
        "number": 3528,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR\\n\") == \"9.0\\n6.5\\n2.5\\n\""
    },
    {
        "number": 3529,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 3 2\\nB 1 2\\nB 2 3\\nR 3 1\") == \"1\"\n\nThe given graph has 3 nodes and 3 edges. We need to find a spanning tree with exactly 2 blue edges. \n\nWe can start by selecting any node as the root of the spanning tree. We can then add the blue edges that connect the root to the remaining nodes in the graph. \n\nIn this case, we can select node 1 as the root and add the blue edges (1,2) and (2,3). This will give us a spanning tree with 2 blue edges. \n\nTherefore, the output is 1."
    },
    {
        "number": 3530,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2\\n5 0 5\\n7 0 7\\n4\\n88\\n5\\n6\\n7\") == \"88\\n5\\n5\\n7\""
    },
    {
        "number": 3531,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == \"5\"\n\nThe first test case has $n=3$, $m=3$, $k=1$, and $w=2$. The special place is $2$. The potential trails are:\n\n- $1 \\to 2$: cost $2$\n- $1 \\to 3$: cost $1$\n- $2 \\to 3$: cost $3$\n\nThe state wishes to connect $2$ with $3$ and $1$ with $2$ with a trail costing $2$, and to connect $1$ with $3$ with a trail costing $1$. The state wishes to have exactly $2$ trails connecting a special place with a regular place, so they must choose the trail $1 \\to 2$ or $1 \\to 3$. The state wishes to minimize the total cost of these trails, which is $2+1=3$. Therefore, the output is $3$."
    },
    {
        "number": 3532,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"mirkovC4nizCC44\\nC4\") == \"mirkovniz\""
    },
    {
        "number": 3533,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3 65\\n45 10\\n60 25\") == \"32\""
    },
    {
        "number": 3534,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 2 0 3 1\") == \"3\\n2\""
    },
    {
        "number": 3535,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4\") == \"2\"\n\nThe first line of the input contains the dimensions of the grid and the number of measurements. The next four lines contain the spins and coordinates of the electrons.\n\nWe can solve this problem by first creating a list of all possible states of the electrons. Each state is represented as a tuple of tuples, where the inner tuples represent the spins of the electrons in each subgrid. We can then iterate through the measurements and update the list of possible states accordingly.\n\nTo check whether a state is valid, we can count the number of positive and negative electrons in each subgrid. If the counts are equal, the state is valid.\n\nFinally, we can count the number of valid states and return the result modulo $10^9 + 7$.\n\nHere's the code:\n\n```python\n"
    },
    {
        "number": 3536,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1000000000 0\\n1000000000 1\") == \"500000004\"\n\nThe probability that the random numbers chosen cause the tree to form a Heap is $\\frac{1}{2}$, since each node has two children and the random values in each node are less than the random values in its children. Therefore, the probability can be expressed as $\\frac{1}{2}$.\n\nTo find the probability as a rational number $\\frac{P}{Q}$, we need to find $Q$, which is the product of the fixed integer values in the nodes. Since the values are fixed, we can simply multiply them together.\n\nIn this case, the fixed integer values are $1000000000$ and $1000000000$, so $Q = 1000000000 \\times 1000000000 = 1000000000000000000$.\n\nNow we need to find $P$, which is the number of nodes in the tree. In this case, there are two nodes, so $P = 2$.\n\nTherefore, the probability as a rational number $\\frac{P}{Q}$ is $\\frac{2}{1000000000000000000} = \\frac{1}{500000000}$.\n\nTo output the probability as $P{\\cdot }Q^{-1} \\bmod {10^9{+}7}$, we need to find $Q^{-1}$, which is the multiplicative inverse of $Q$ modulo $10^9{+}7$. We can use the Extended Euclidean algorithm to find $Q^{-1}$.\n\nFirst, we need to find $d$ and $r$ such that $d = \\gcd(Q, 10^9{+}7) = 1$ and $Q = dr + r'$, where $r'$ is the remainder. In this case, $d = 1$ and $r = 10^9{+}6$.\n\nTherefore, $Q^{-1} = r^{-1} \\bmod {10^9{+}7}$, where $r^{-1}$ is the inverse of $r$ modulo $10^9{+}7$.\n\nTherefore, the probability as $P{\\cdot }Q^{-1} \\bmod {10^9{+}7}$ is $\\frac{1}{500000000} \\cdot \\frac{10^9{+}6}{10^9{+}7} \\bmod {10^9{+}7} = \\frac{10^9{+}6}{500000007} \\bmod {10^9{+}7} = 200000003 \\bmod {10^9{+}7} = 200000003$.\n\nTherefore, the output is $200000003$."
    },
    {
        "number": 3537,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24\") == \"12\""
    },
    {
        "number": 3538,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 19\\n15 5 3\\n12 4 4\\n20 10 5\") == \"3\""
    },
    {
        "number": 3539,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1\\n1 1\") == \"1\""
    },
    {
        "number": 3540,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"RGGR\\nGBGB\\nBYBY\\nYRYR\") == \"3\""
    },
    {
        "number": 3541,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5\\n-2 -1 0 1 2\\n2 1 0 -1 -2\") == \"AAAAA\""
    },
    {
        "number": 3542,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"6 3\\n2 3\\n4 0\\n0 2\\n6 1\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3543,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n5 5\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx\naustria\n\"\"\") == \"\"\"\n12\n4\n11\n3\n2\n\"\"\""
    },
    {
        "number": 3544,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n0 1 1\") == \"3\""
    },
    {
        "number": 3545,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\nHFBIGEDCJA\nBIGEDCJFAH\nBIGEDCJFAH\n\"\"\") == \"\"\"\nPre Post In Post In Pre\nHFBJCDEGIA\nBIGEDCJFAH\nIGEDCJBAFH\n\"\"\"\n\nassert solution(\"\"\"\nABCDEFGHIJKLMNOPQRSTUVWXYZ\nABCDEFGHIJKLMNOPQRSTUVWXYZ\nABCDEFGHIJKLMNOPQRSTUVWXYZ\n\"\"\") == \"\"\"\nPre Pre In In Post Post\nABCDEFGHIJKLMNOPQRSTUVWXYZ\nABCDEFGHIJKLMNOPQRSTUVWXYZ\nABCDEFGHIJKLMNOPQRSTUVWXYZ\n\"\"\"\n\nassert solution(\"\"\"\nABCDEFGHIJKLMNOPQRSTUVWXYZ\nABCDEFGHIJKLMNOPQRSTUVWXYZ\nABCDEFGHIJKLMNOPQRSTUVWXYZ\n\"\"\") == \"\"\"\nPre Pre In In Post Post\nABCDEFGHIJKLMNOPQRSTUVWXYZ\nABCDEFGHIJKLMNOPQRSTUVWXYZ\nABCDEFGHIJKLMNOPQRSTUVWXYZ\n\"\"\"\n\nassert solution(\"\"\"\nABCDEFGHIJKLMNOPQRSTUVWXYZ\nABCDEFGHIJKLMNOPQRSTUVWXYZ\nABCDEFGHIJKLMNOPQRSTUVWXYZ\n\"\"\") == \"\"\"\nPre Pre In In Post Post\nABCDEFGHIJKLMNOPQRSTUVWXYZ\nABCDEFGHIJKLMNOPQRSTUVWXYZ\nABCDEFGHIJKLMNOPQRSTUVWXYZ\n\"\"\"\n\nassert solution(\"\"\"\nABCDEFGHIJKLMNOPQRSTUVWXYZ\nABCDEFGHIJKLMNOPQRSTUVWXYZ\nABCDEFGHIJKLMNOPQRSTUVWXYZ\n\"\"\") == \"\"\"\nPre Pre In In Post Post\nABCDEFGHIJKLMNOPQRSTUVWXYZ\nABCDEFGHIJKLMNOPQRSTUVWXYZ\nABCDEFGHIJKLMNOPQRSTUVWXYZ\n\"\"\"\n\nassert solution(\"\"\"\nABCDEFGHIJKLMNOPQRSTUVWXYZ\nABCDEFGHIJKLMNOPQRSTUVWXYZ\nABCDEFGHIJKLMNOPQRSTUVWXYZ\n\"\"\") == \"\"\"\nPre Pre In In Post Post\nABCDEFGHIJKLMNOPQRSTUVWXYZ\nABCDEFGHIJKLMNOPQRSTUVWXYZ\nABCDEFGHIJKLMNOPQRSTUVWXYZ\n\"\"\"\n\nassert solution(\"\"\"\nABCDEFGHIJKLMNOPQRSTUVWXYZ\nABCDEFGHIJKLMNOPQRSTUVWXYZ\nABCDEFGHIJKLMNOPQRSTUVWXYZ\n\"\"\") == \"\"\"\nPre Pre In In Post Post\nABCDEFGHIJKLMNOPQRSTUVWXYZ\nABCDEFGHIJKLMNOPQRSTUVWXYZ\nABCDEFGHIJKLMNOPQRSTUVWXYZ\n\"\"\"\n\nassert solution(\"\"\"\nABCDEFGHIJKLMNOPQRSTUVWXYZ\nABCDEFGHIJKLMNOPQRSTUVWXYZ\nABCDEFGHIJKLMNOPQRSTUVWXYZ\n\"\"\") == \"\"\"\nPre Pre In In Post Post\nABCDEFGHIJKLMNOPQRSTUVWXYZ\nABCDEFGHIJKLMNOPQRSTUVWXYZ\nABCDEFGHIJKLMNOPQRSTUVWXYZ\n\"\"\"\n\nassert solution(\"\"\"\nABCDEFGHIJKLMNOPQRSTUVWXYZ\nABCDEFGHIJKLMNOPQRSTUVWXYZ\nABCDEFGHIJKLMNOPQRSTUVWXYZ\n\"\"\") == \"\"\"\nPre Pre In In Post Post\nABCDEFGHIJKLMNOPQRSTUVWXYZ\nABCDEFGHIJKLMNOPQRSTUVWXYZ\nABCDEFGHIJKLMNOPQRSTUVWXYZ\n\"\"\"\n\nassert solution(\"\"\"\nABCDEFGHIJKLMNOPQRSTUVWXYZ\nABCDEFGHIJKLMNOPQRSTUVWXYZ\nABCDEFGHIJKLMNOPQRSTUVWXYZ\n\"\"\") == \"\"\"\nPre Pre In In Post Post\nABCDEFGHIJKLMNOPQRSTUVWXYZ\nABCDEFGHIJKLMNOPQRSTUVWXYZ\nABCDEFGHIJKLMNOPQRSTUVWXYZ\n\"\"\"\n\nassert solution(\"\"\"\nABCDEFGHIJKLMNOPQRSTUVWXYZ\nABCDEFGHIJKLMNOPQRSTUVWXYZ\nABCDEFGHIJKLMNOPQRSTUVWXYZ\n\"\"\") == \"\"\"\nPre Pre In In Post Post\nABCDEFGHIJKLMNOPQRSTUVWXYZ\nABCDEFGHIJKLMNOPQRSTUVWXYZ\nABCDEFGHIJKLMNOPQRSTUVWXYZ\n\"\"\"\n\nassert solution(\"\"\"\nABCDEFGHIJKLMNOPQRSTUVWXYZ\nABCDEFGHIJKLMNOPQRSTUVWXYZ\nABCDEFGHIJKLMNOPQRSTUVWXYZ\n\"\"\") == \"\"\"\nPre Pre In In Post Post\nABCDEFGHIJKLMNOPQRSTUVWXYZ\nABCDEFGHIJKLMNOPQ"
    },
    {
        "number": 3546,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\") == \"10\"\n\nThe shortest possible length of David's article is 10."
    },
    {
        "number": 3547,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2\\n0 0 100 100\\n30 30 60 60\") == \"10000.00\""
    },
    {
        "number": 3548,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n1 3\\n4 5\\n2 4\") == \"5\"\n\nThe first test case has $N = 5$ and $P = 3$, and the bad pairs are $(1, 3)$, $(4, 5)$, and $(2, 4)$.\n\nWe can start by considering the case where $K = 1$, $L = 1$, and $M = 0$. In this case, we can make the first drink using $1$ ingredient, and the second drink using $2$ ingredients, which are $1$ and $2$. The third drink using $3$ ingredients, which are $1$, $2$, and $3$. The fourth drink using $4$ ingredients, which are $1$, $2$, $3$, and $4$. The fifth drink using $5$ ingredients, which are $1$, $2$, $3$, $4$, and $5$.\n\nHowever, we can see that this is not a valid set of drinks, since we have used the same ingredient twice in the second drink. We can fix this by choosing $K = 2$, $L = 1$, and $M = 0$. In this case, we can make the first drink using $2$ ingredients, which are $1$ and $2$. The second drink using $2$ ingredients, which are $3$ and $4$. The third drink using $2$ ingredients, which are $5$ and $6$. The fourth drink using $2$ ingredients, which are $7$ and $8$. The fifth drink using $2$ ingredients, which are $9$ and $10$.\n\nThis set of drinks is valid, and we can continue in this way to construct a different set of drinks for each night. However, there are only $5$ nights in total, since we cannot use the same set of ingredients twice in a row. Therefore, the output is $5$."
    },
    {
        "number": 3549,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == \"2095\"\n\nThe first line of the input is \"11 13 17\", which means that the wavelengths are 11, 13, and 17. The second line is \"5 2 4\", which means that the measurements are 5, 2, and 4. The third line is \"0 0 0\", which means that the accuracies are 0, 0, and 0.\n\nTo solve this problem, we need to find the smallest nonnegative integer $z$ such that $z$ is within distance $y_ i$ from $x_ i$ modulo $m_ i$ for each $i = 1,2,3$. We can do this by considering all possible values of $z$ and checking if it satisfies the condition.\n\nLet's start by considering the first signal, which has a wavelength of 11 meters. The measurement is 5 meters, and the accuracy is 0 meters. We can see that the smallest possible distance to the lighthouse is 5 meters.\n\nNext, let's consider the second signal, which has a wavelength of 13 meters. The measurement is 2 meters, and the accuracy is 0 meters. We can see that the smallest possible distance to the lighthouse is 2 meters.\n\nFinally, let's consider the third signal, which has a wavelength of 17 meters. The measurement is 4 meters, and the accuracy is 0 meters. We can see that the smallest possible distance to the lighthouse is 4 meters.\n\nTherefore, the smallest possible distance to the lighthouse is 2 meters, which is the answer to the problem.\n\nHere's the Python code to implement this solution:\n\n```python\n"
    },
    {
        "number": 3550,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\nvar a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint c;\nprint `My name is ${b}`;\nend.\n\"\"\") == \"\"\"\nMy name is Gon\nMy name is Gon\n\"\"\""
    },
    {
        "number": 3551,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2\\n7 8\\n10\") == \"fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\"\nassert solution(\"3\\n1 2 3\\n5\") == \"impossible\"\nassert solution(\"3\\n1 2 3\\n4\") == \"fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\"\nassert solution(\"3\\n1 2 3\\n7\") == \"fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\"\nassert solution(\"3\\n1 2 3\\n8\") == \"impossible\"\nassert solution(\"3\\n1 2 3\\n9\") == \"impossible\"\nassert solution(\"3\\n1 2 3\\n10\") == \"fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\"\nassert solution(\"3\\n1 2 3\\n11\") == \"impossible\"\nassert solution(\"3\\n1 2 3\\n12\") == \"impossible\"\nassert solution(\"3\\n1 2 3\\n13\") == \"impossible\"\nassert solution(\"3\\n1 2 3\\n14\") == \"impossible\"\nassert solution(\"3\\n1 2 3\\n15\") == \"impossible\"\nassert solution(\"3\\n1 2 3\\n16\") == \"impossible\"\nassert solution(\"3\\n1 2 3\\n17\") == \"impossible\"\nassert solution(\"3\\n1 2 3\\n18\") == \"impossible\"\nassert solution(\"3\\n1 2 3\\n19\") == \"impossible\"\nassert solution(\"3\\n1 2 3\\n20\") == \"impossible\"\nassert solution(\"3\\n1 2 3\\n21\") == \"impossible\"\nassert solution(\"3\\n1 2 3\\n22\") == \"impossible\"\nassert solution(\"3\\n1 2 3\\n23\") == \"impossible\"\nassert solution(\"3\\n1 2 3\\n24\") == \"impossible\"\nassert solution(\"3\\n1 2 3\\n25\") == \"impossible\"\nassert solution(\"3\\n1 2 3\\n26\") == \"impossible\"\nassert solution(\"3\\n1 2 3\\n27\") == \"impossible\"\nassert solution(\"3\\n1 2 3\\n28\") == \"impossible\"\nassert solution(\"3\\n1 2 3\\n29\") == \"impossible\"\nassert solution(\"3\\n1 2 3\\n30\") == \"impossible\"\nassert solution(\"3\\n1 2 3\\n31\") == \"impossible\"\nassert solution(\"3\\n1 2 3\\n32\") == \"impossible\"\nassert solution(\"3\\n1 2 3\\n33\") == \"impossible\"\nassert solution(\"3\\n1 2 3\\n34\") == \"impossible\"\nassert solution(\"3\\n1"
    },
    {
        "number": 3552,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"10 4 3\") == \"27\""
    },
    {
        "number": 3553,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\") == \"3\\n-1\\n4\""
    },
    {
        "number": 3554,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1000 3000 1000\") == \"533.3333333333\"\n\nThe monkey can bring $\\frac{3000}{2} = 1500$ ml of smoothie to her family. This is the maximum she can carry, since she can only carry two containers at a time.\n\nThe monkey can walk $\\frac{1000}{\\sqrt{2} + \\pi} \\approx 533.3333333333$ meters to get to her family. This is the distance that takes the monkey to consume $\\frac{\\sqrt{2} + \\pi}{3}$ ml of smoothie.\n\nTherefore, the monkey can bring $\\frac{1500}{\\frac{\\sqrt{2} + \\pi}{3}} \\approx 533.3333333333$ ml of smoothie to her family."
    },
    {
        "number": 3555,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 0\\n10 0\\n10 10\") == \"14.14\""
    },
    {
        "number": 3556,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3 3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457\n\"\"\") == \"\"\"\n123457 0\n0 2\n123458 1\n\"\"\"\n\nassert solution(\"\"\"\n4 2\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123459 16321 1850000\n123456\n123458\n\"\"\") == \"\"\"\n123457 0\n123459 0\n\"\"\"\n\nassert solution(\"\"\"\n5 1\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123459 16321 1850000\n123460 17421 1900000\n123456\n\"\"\") == \"\"\"\n123457 0\n\"\"\""
    },
    {
        "number": 3557,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5\\n3 5 10 2 5\\n2 4 5 1 3\") == \"90\""
    },
    {
        "number": 3558,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 10\\n1 2 6\\n0 4 3\\n0 8 2\") == \"6.000000\""
    },
    {
        "number": 3559,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n2\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n1\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n3\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n4\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n5\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n6\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n7\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n8\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n9\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n10\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n11\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n12\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n13\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n14\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n15\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n16\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n17\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n18\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n19\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n20\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n21\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n22\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n23\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n24\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n25\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n26\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n27\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n28\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n"
    },
    {
        "number": 3560,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\na\\nbc\\nabc\\n3\\n1 abca\\n2 1\\n2 3\") == \"1\\n1\\n1\"\n\nassert solution(\"3\\na\\nbc\\nabc\\n3\\n1 abca\\n2 2\\n2 3\") == \"0\\n1\\n1\"\n\nassert solution(\"3\\na\\nbc\\nabc\\n3\\n1 abca\\n2 1\\n2 2\") == \"1\\n0\\n1\"\n\nassert solution(\"3\\na\\nbc\\nabc\\n3\\n1 abca\\n2 1\\n2 3\\n2 2\") == \"1\\n1\\n0\"\n\nassert solution(\"3\\na\\nbc\\nabc\\n3\\n1 abca\\n2 1\\n2 3\\n2 1\") == \"1\\n1\\n1\""
    },
    {
        "number": 3561,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1 1 1 1\") == \"YES\""
    },
    {
        "number": 3562,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 96\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\") == \"80.5696000000\""
    },
    {
        "number": 3563,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 0 0 1 1 1 0 0 1\") == \"2\""
    },
    {
        "number": 3564,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\") == \"1400\"\n\nassert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\\n\") == \"1400\"\n\nassert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\\n\\n\") == \"1400\"\n\nassert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\\n\\n\\n\") == \"1400\"\n\nassert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\\n\\n\\n\\n\") == \"1400\"\n\nassert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\\n\\n\\n\\n\\n\") == \"1400\"\n\nassert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\\n\\n\\n\\n\\n\\n\") == \"1400\"\n\nassert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\\n\\n\\n\\n\\n\\n\\n\") == \"1400\"\n\nassert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\\n\\n\\n\\n\\n\\n\\n\\n\") == \"1400\"\n\nassert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\\n\\n\\n\\n\\n\\n\\n\\n\\n\") == \"1400\"\n\nassert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\") == \"1400\"\n\nassert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\") == \"1400\"\n\nassert solution(\"3 2"
    },
    {
        "number": 3565,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n10 15\nstockholm\namsterdam\nlondon\nberlin\ncopenhagen\noslo\nhelsinki\ndublin\nreykjavik\nbrussels\noslo stockholm 415\nstockholm helsinki 396\noslo london 1153\noslo copenhagen 485\nstockholm copenhagen 522\ncopenhagen berlin 354\ncopenhagen amsterdam 622\nhelsinki berlin 1107\nlondon amsterdam 356\nberlin amsterdam 575\nlondon dublin 463\nreykjavik dublin 1498\nreykjavik oslo 1748\nlondon brussels 318\nbrussels amsterdam 173\nstockholm amsterdam\noslo london\nreykjavik dublin\nbrussels helsinki\n\"\"\") == \"3907\""
    },
    {
        "number": 3566,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\") == \"2\\n1\\n2\\n1\""
    },
    {
        "number": 3567,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 5\\n01001\\n11100\\n10111\") == \"00010\""
    },
    {
        "number": 3568,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1\\n6 2\\n0 4\\n6 12\") == \"possible\"\n\nassert solution(\"2\\n3 1\\n0 1\\n3 2\\n1 2\\n4 2\\n0 2\\n1 3\\n2 3\\n3 3\") == \"impossible\"\n\nassert solution(\"3\\n5 2\\n0 2\\n5 4\\n2 4\\n5 6\\n0 6\\n1 2\\n2 3\\n3 4\\n4 5\\n5 5\\n6 6\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n0 7\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n0 8\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n0 9\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n0 10\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n0 11\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n0 12\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n0 13\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n0 14\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n0 15\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n0 16\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n0 17\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n0 18\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7"
    },
    {
        "number": 3569,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\") == \"2\""
    },
    {
        "number": 3570,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n\"\"\") == \"\"\"\nPlot Error\n3 Just A Dream\nYes\nPlot Error\n\"\"\"\n\nassert solution(\"\"\"\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\nS 3!stuff_happens!it_goes_on_and_on\n\"\"\") == \"\"\"\nPlot Error\n3 Just A Dream\nYes\nPlot Error\n\"\"\"\n\nassert solution(\"\"\"\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\nS 3!stuff_happens!it_goes_on_and_on\nS 4!business_as_usual!bobby_dies!it_goes_on_and_on\n\"\"\") == \"\"\"\nPlot Error\n3 Just A Dream\nYes\nPlot Error\n\"\"\"\n\nassert solution(\"\"\"\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\nS 3!stuff_happens!it_goes_on_and_on\nS 4!business_as_usual!bobby_dies!it_goes_on_and_on\nS 5!business_as_usual!bobby_dies!it_goes_on_and_on!stuff_happens\n\"\"\") == \"\"\"\nPlot Error\n3 Just A Dream\nYes\nPlot Error\n\"\"\"\n\nassert solution(\"\"\"\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\nS 3!stuff_happens!it_goes_on_and_on\nS 4!business_as_usual!bobby_dies!it_goes_on_and_on\nS 5!business_as_usual!bobby_dies!it_goes_on_and_on!stuff_happens\nS 6!business_as_usual!bobby_dies!it_goes_on_and_on!stuff_happens!jr_does_bad_things\n\"\"\") == \"\"\"\nPlot Error\n3 Just A Dream\nYes\nPlot Error\n\"\"\"\n\nassert solution(\"\"\"\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\nS 3!stuff_happens!it_goes_"
    },
    {
        "number": 3571,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do\\neiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad\\nminim veniam quis nostrud exercitation ullamco laboris nisi ut\\naliquip ex ea commodo consequat Duis aute irure dolor in\\nreprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\\npariatur Excepteur sint occaecat cupidatat non proident sunt in\\nculpa qui officia deserunt mollit anim id est laborum\") == \"\"\"+------------------------+-+\n|exercitation ullamco    |^|\n|laboris nisi ut aliquip | |\n|ex ea commodo consequat |X|\n|Duis aute irure dolor in| |\n|reprehenderit in        |v|\n+------------------------+-+\"\"\""
    },
    {
        "number": 3572,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"possible\"\n\nassert solution(\"5 10\\n0 3 2 1 4\\n3 0 1 3 2\\n2 1 0 2 3\\n1 3 2 0 4\\n4 2 3 1 0\") == \"impossible\"\n\nassert solution(\"14 1000000000000000\\n0 1 2 3 4 5 6 7 8 9 10 11 12 13\\n1 0 2 3 4 5 6 7 8 9 10 11 12 13\\n2 1 0 3 4 5 6 7 8 9 10 11 12 13\\n3 2 1 0 4 5 6 7 8 9 10 11 12 13\\n4 3 2 1 0 5 6 7 8 9 10 11 12 13\\n5 4 3 2 1 0 6 7 8 9 10 11 12 13\\n6 5 4 3 2 1 0 7 8 9 10 11 12 13\\n7 6 5 4 3 2 1 0 8 9 10 11 12 13\\n8 7 6 5 4 3 2 1 0 9 10 11 12 13\\n9 8 7 6 5 4 3 2 1 0 10 11 12 13\\n10 9 8 7 6 5 4 3 2 1 0 11 12 13\\n11 10 9 8 7 6 5 4 3 2 1 0 12 13\\n12 11 10 9 8 7 6 5 4 3 2 1 0 13\\n13 12 11 10 9 8 7 6 5 4 3 2 1 0\") == \"possible\"\n\nassert solution(\"14 1000000000000001\\n0 1 2 3 4 5 6 7 8 9 10 11 12 13\\n1 0 2 3 4 5 6 7 8 9 10 11 12 13\\n2 1 0 3 4 5 6 7 8 9 10 11 12 13\\n3 2 1 0 4 5 6 7 8 9 10 11 12 13\\n4 3 2 1 0 5 6 7 8 9 10 11 12 13\\n5 4 3 2 1 0 6 7 8 9 10 11 12 13\\n6 5 4 3 2 1 0 7 8 9 10 11 12 13\\n7 6 5 4 3 2 1 0 8 9 10 11 12 13\\n8 7 6 5 4 3 2 1 0 9 10 11 12 13\\n9 8 7 6 5 4 3 2 1 0 10 11 12 13\\n10 9 8 7 6 5 4 3 2 1 0 11 12 13\\n11 10 9 8 7 6 5 4 3 2 1 0 12"
    },
    {
        "number": 3573,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 1 1\\n1\\n2\") == \"1.00000000\""
    },
    {
        "number": 3574,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5\\n5 4 3 3 2\\n3\\n1 2\\n1 1\\n2 4\") == \"2\\n1\\n3\""
    },
    {
        "number": 3575,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == \"1\"\n\nassert solution(\"4 3\\n0 1\\n1 2\\n2 3\\n0 3\\n1 3\") == \"2\"\n\nassert solution(\"5 4\\n0 1\\n1 2\\n2 3\\n3 4\\n0 2\\n1 4\\n2 4\") == \"3\"\n\nassert solution(\"6 5\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n0 2\\n1 3\\n2 4\\n3 5\") == \"4\"\n\nassert solution(\"7 6\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n0 2\\n1 3\\n2 4\\n3 5\\n4 6\") == \"5\"\n\nassert solution(\"8 7\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n0 2\\n1 3\\n2 4\\n3 5\\n4 6\\n5 7\") == \"never meet\"\n\nassert solution(\"9 8\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n0 2\\n1 3\\n2 4\\n3 5\\n4 6\\n5 7\\n6 8\") == \"never meet\"\n\nassert solution(\"10 9\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n0 2\\n1 3\\n2 4\\n3 5\\n4 6\\n5 7\\n6 8\\n7 9\") == \"never meet\"\n\nassert solution(\"11 10\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n0 2\\n1 3\\n2 4\\n3 5\\n4 6\\n5 7\\n6 8\\n7 9\\n8 10\") == \"never meet\"\n\nassert solution(\"12 11\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n0 2\\n1 3\\n2 4\\n3 5\\n4 6\\n5 7\\n6 8\\n7 9\\n8 10\\n9 11\") == \"never meet\"\n\nassert solution(\"13 12\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n0 2\\n1 3\\n2 4\\n3 5\\n4 6\\n5 7\\n6 8\\n7 9\\n8 10\\n9 11\\n10 12\") == \"never meet\"\n\nassert solution(\"14 13\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n0 2\\n1 3\\n2 4\\n3 5\\n4 6\\n5 7\\n6 8\\n7 9\\n8 10\\n9 11\\n10 12"
    },
    {
        "number": 3576,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5 4 2\") == \"14500000001\""
    },
    {
        "number": 3577,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 4\\n3 7\\n1 6\\n2 6\") == \"0\\n1\\n1\\n2\""
    },
    {
        "number": 3578,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == \"3100\"\n\nThe first test case is a simple example where Frida can make all the reviews using only the flights in the list from her boss. The total cost of the flights is $1000+1000+500=2500$.\n\nThe second test case is a more complex example where Frida can make all the reviews using some of the additional flights. The total cost of the flights is $1000+1000+500+300+300=3100$."
    },
    {
        "number": 3579,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\") == \"5.250000000\""
    },
    {
        "number": 3580,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"7\\n1 2 3 1 2 1 1\\n5\\n1 3 1 2 3\\n1 2 1 2\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2\") == \"7\\n2\\n2\\n0\\n4\\n\""
    },
    {
        "number": 3581,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4\\n40 30 30 40 20 40 50 30 30 50\\n0.0 0.0 0.45 0.45 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.2 0.2 0.2 0.2 0.2\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.8 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.8 0.0 0.0 0.0 0.2\") == \"32.6405451448\""
    },
    {
        "number": 3582,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4\\n2 1 4 3\") == \"2 3 4 1\""
    },
    {
        "number": 3583,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\") == \"7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\""
    },
    {
        "number": 3584,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == \"2\""
    },
    {
        "number": 3585,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 1\") == \"9\""
    },
    {
        "number": 3586,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5\\n2\\n3\\n5\\n7\\n12\") == \"12\""
    },
    {
        "number": 3587,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5\\n00\\n01\\n10\\n110\\n111\") == \"11\""
    },
    {
        "number": 3588,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2\\n20 100\\n100 10\\n1\\n150 50\\n1\\n150 100\") == \"100 250 320\""
    },
    {
        "number": 3589,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"50 100\") == \"3 7 4 6 5 7 2 15 2\""
    },
    {
        "number": 3590,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4\\n0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7\\n\") == \"40.0000000000\""
    },
    {
        "number": 3591,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1\\n3\\n2 1 3\") == \"1\\n1\""
    },
    {
        "number": 3592,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"725.85 1.71 2.38\") == \"199 162\""
    },
    {
        "number": 3593,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0\") == \"16\""
    },
    {
        "number": 3594,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n1\nO 4\n\"\"\") == \"2 1 4\"\n\nassert solution(\"\"\"\n2\nO 4\nE 15\n\"\"\") == \"2 1 4\"\n\nassert solution(\"\"\"\n3\nO 4\nE 15\nI 1\n\"\"\") == \"2 1 4\"\n\nassert solution(\"\"\"\n4\nO 4\nE 15\nI 1\nO 1\n\"\"\") == \"2 1 4\"\n\nassert solution(\"\"\"\n5\nO 4\nE 15\nI 1\nO 1\nE 1\n\"\"\") == \"2 1 4\"\n\nassert solution(\"\"\"\n6\nO 4\nE 15\nI 1\nO 1\nE 1\nI 2\n\"\"\") == \"2 1 4\"\n\nassert solution(\"\"\"\n7\nO 4\nE 15\nI 1\nO 1\nE 1\nI 2\nO 1\n\"\"\") == \"2 1 4\"\n\nassert solution(\"\"\"\n8\nO 4\nE 15\nI 1\nO 1\nE 1\nI 2\nO 1\nE 1\n\"\"\") == \"2 1 4\"\n\nassert solution(\"\"\"\n9\nO 4\nE 15\nI 1\nO 1\nE 1\nI 2\nO 1\nE 1\nI 1\n\"\"\") == \"2 1 4\"\n\nassert solution(\"\"\"\n10\nO 4\nE 15\nI 1\nO 1\nE 1\nI 2\nO 1\nE 1\nI 1\nO 1\n\"\"\") == \"2 1 4\"\n\nassert solution(\"\"\"\n11\nO 4\nE 15\nI 1\nO 1\nE 1\nI 2\nO 1\nE 1\nI 1\nO 1\nE 1\n\"\"\") == \"2 1 4\"\n\nassert solution(\"\"\"\n12\nO 4\nE 15\nI 1\nO 1\nE 1\nI 2\nO 1\nE 1\nI 1\nO 1\nE 1\nI 1\n\"\"\") == \"2 1 4\"\n\nassert solution(\"\"\"\n13\nO 4\nE 15\nI 1\nO 1\nE 1\nI 2\nO 1\nE 1\nI 1\nO 1\nE 1\nI 1\nO 1\n\"\"\") == \"2 1 4\"\n\nassert solution(\"\"\"\n14\nO 4\nE 15\nI 1\nO 1\nE 1\nI 2\nO 1\nE 1\nI 1\nO 1\nE 1\nI 1\nO 1\nE 1\n\"\"\") == \"2 1 4\"\n\nassert solution(\"\"\"\n15\nO 4\nE 15\nI 1\nO 1\nE 1\nI 2\nO 1\nE 1\nI 1\nO 1\nE 1\nI 1\nO 1\nE 1\nI 1\n\"\"\") == \"2 1 4\"\n\nassert solution(\"\"\"\n16\nO 4\nE 15\nI 1\nO 1\nE 1\nI 2\nO 1\nE 1\nI 1\nO 1\nE 1\nI 1\nO 1\nE 1\nI 1\nO 1\n\"\"\") == \"2 1 4\"\n\nassert solution(\"\"\"\n17\nO 4\nE 15\nI 1\nO 1\nE 1\nI 2\nO 1\nE 1\nI 1\nO 1\nE 1\nI 1\nO 1\nE 1\nI 1\nO 1\nE 1\n\"\"\") == \"2 1 4\"\n\nassert solution(\"\"\"\n18\nO 4\nE 15\nI 1\nO 1\nE 1\nI 2\nO 1\nE 1\nI 1\nO 1\nE 1\nI 1\nO 1\nE 1\nI 1\nO 1\nE 1\nI 1\n\"\"\") == \"2 1 4\"\n\nassert solution(\"\"\"\n19\nO 4"
    },
    {
        "number": 3595,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\") == \"4\""
    },
    {
        "number": 3596,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"-99.99 99.99 9999.99\\n99 9 999 9999\\n9 99 9 99 9\") == \"9.585073\""
    },
    {
        "number": 3597,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"20 30\\n2 10 20 2 24 18 28 10\") == \"12.74 127.83\""
    },
    {
        "number": 3598,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2\\n110\\n6\") == \"0116\""
    },
    {
        "number": 3599,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"8 3\\n4 4 4\") == \"0 2 4\""
    },
    {
        "number": 3600,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\") == \"impossible\""
    },
    {
        "number": 3601,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2\\n0 0\\n0 10\\n2\\n4 10\\n4 0\") == \"4.00000\""
    },
    {
        "number": 3602,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\") == \"1\"\n\nassert solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 1\") == \"0\"\n\nassert solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 3\") == \"0\"\n\nassert solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\\n2 2\") == \"0\"\n\nassert solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\\n2 3\") == \"0\"\n\nassert solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\\n2 1\") == \"0\"\n\nassert solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\\n2 2\\n2 2\") == \"0\"\n\nassert solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\\n2 2\\n2 3\") == \"0\"\n\nassert solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\\n2 2\\n2 1\") == \"0\"\n\nassert solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\\n2 2\\n2 2\\n2 2\") == \"0\"\n\nassert solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\\n2 2\\n2 2\\n2 3\") == \"0\"\n\nassert solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\\n2 2\\n2 2\\n2 1\") == \"0\"\n\nassert solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\") == \"0\"\n\nassert solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\\n2 2\\n2 2\\n2 2\\n2 3\") == \"0\"\n\nassert solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\\n2 2\\n2 2\\n2 2\\n2 1\") == \"0\"\n\nassert solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\") == \"0\"\n\nassert solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 3\") == \"0\"\n\nassert solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 1\") == \"0\"\n\nassert solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\") == \"0\"\n\nassert solution(\"3 2 5\\n1"
    },
    {
        "number": 3603,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\") == \"5 3\\n1 0\\n2 4\"\nassert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n3 4\") == \"impossible\"\nassert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n3 4\\n4 5\") == \"impossible\"\nassert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n3 4\\n4 5\\n5 0\") == \"impossible\"\nassert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n3 4\\n4 5\\n5 0\\n2 1\") == \"impossible\"\nassert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n3 4\\n4 5\\n5 0\\n2 1\\n1 2\") == \"impossible\"\nassert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n3 4\\n4 5\\n5 0\\n2 1\\n1 2\\n3 4\") == \"5 3\\n1 0\\n2 4\"\nassert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n3 4\\n4 5\\n5 0\\n2 1\\n1 2\\n3 4\\n0 1\") == \"5 3\\n1 0\\n2 4\"\nassert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n3 4\\n4 5\\n5 0\\n2 1\\n1 2\\n3 4\\n0 1\\n1 2\") == \"impossible\"\nassert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n3 4\\n4 5\\n5 0\\n2 1\\n1 2\\n3 4\\n0 1\\n1 2\\n2 3\") == \"5 3\\n1 0\\n2 4\"\nassert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n3 4\\n4 5\\n5 0\\n2 1\\n1 2\\n3 4\\n0 1\\n1 2\\n2 3\\n3 4\") == \"impossible\"\nassert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n3 4\\n4 5\\n5 0\\n2 1\\n1 2\\n3 4\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\") == \"impossible\"\nassert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n3 4\\n4 5\\n5 0\\n2 1\\n1 2\\n3 4\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 0\") == \"impossible\"\nassert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n"
    },
    {
        "number": 3604,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 1\\n0 0\\n0 1\\n1 0\\n1 1\") == \"2\\n1 2\"\n\nassert solution(\"5 2\\n0 0\\n0 1\\n1 0\\n1 1\\n2 2\") == \"3\\n1 2 3\"\n\nassert solution(\"10 3\\n0 0\\n0 1\\n1 0\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\") == \"5\\n1 2 3 4 5\"\n\nassert solution(\"10 3\\n0 0\\n0 1\\n1 0\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\") == \"6\\n1 2 3 4 5 6\"\n\nassert solution(\"10 3\\n0 0\\n0 1\\n1 0\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\") == \"7\\n1 2 3 4 5 6 7\""
    },
    {
        "number": 3605,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"10 2\\n1 3 5 7 9 11 13 15 17 16\") == \"1\""
    },
    {
        "number": 3606,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\\n10 9\\n3 7\") == \"7 4\""
    },
    {
        "number": 3607,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE\\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n\""
    },
    {
        "number": 3608,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3 0 1\\n0 1\") == \"3\""
    },
    {
        "number": 3609,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\") == \"LLRRRRLL\"\nassert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 4\") == \"impossible\""
    },
    {
        "number": 3610,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1009 2011\\n1017 2011\") == \"1\\n2011\""
    },
    {
        "number": 3611,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3\") == \"0 3\"\n\nassert solution(\"5 5\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n3 4 100\\n0 4\") == \"0 1 3 4\"\n\nassert solution(\"5 5\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n3 4 100\\n4 0 100\") == \"0 1 3 4\"\n\nassert solution(\"5 5\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n3 4 100\\n4 0 100\\n0 3\") == \"0 3\"\n\nassert solution(\"5 5\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n3 4 100\\n4 0 100\\n0 2\") == \"0 2\""
    },
    {
        "number": 3612,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\"\n\nThe first line of the input contains two floating point numbers $a$, $0.0 < a < 15.0$, and $m$, $0.1 \\leq m \\leq 60.0$, the number of seconds it takes to pass one square on the map. The second line contains four integers $W$, $H$, $X$ and $Y$ where $1 \\le W,H \\le 200$, $0 \\le X < W$ and $0 \\le Y < H$. $W$ and $H$ are the width and height of the map of the coast, $X$ and $Y$ describes the coordinate $(X, Y)$ of Charlotte\u2019s home.\n\nThen follow $H$ lines each containing $W$ space separated integers, describing the height in millimetres of each $10\\times 10$m surveyed square compared to extreme low tide. You can assume that the height of each square will be at least $0$ and at most $20000$ milimetres. The first number on the first line corresponds to coordinate $(0, 0)$. Charlotte\u2019s home will always be dry.\n\nThe tide is dangerous when walking at the beach between the sea and the cliff wall. As the water rises, you may get trapped. Therefore it is important to plan the walk according to the behaviour of the tide.\n\nOne simple way of cliff walk planning is just to start walking and turn around at low tide. The problem is that on a rocky beach, you want the rocks to dry for one hour before entering them. It could therefore actually be safe to continue the walk a bit further even after low tide. Note that the beach is mostly made of sand and the rocks have many cracks in them, so we assume that all areas are flooded or drained at the exact moment when the tide reaches their height, irrespective of the heights of the neighbouring areas.\n\nThe beach has been surveyed and a map is available where each $10\\times 10$m square has a certain height. Each square can only be entered from the four neighbouring squares to the north, south, east and west. It is only possible to pass between two squares of height $z_1, z_2$ if the absolute height difference $|z_1 - z_2|$ is at most $1$ meter. Charlotte walks in such a way that it takes a constant amount of time to pass from one square to another and during the whole time period both squares must be dry.\n\nThe tide behaves differently at different places on the Earth depending on the sea bottom, coast line etc. Charlotte knows that it is possible to approximate the tide\u2019s water level $v$ as $v = 0.5a\\cdot (\\cos (t\\frac{2\\pi }{12})+1)$, where $t$ is time in hours since the last high tide and $a$ is a number depending on the location, time of the year, etc.\n\nCharlotte will start and finish her walk at her home. She limits her time away from home to only one tide interval, so you may assume that $0.0 \\leq t \\leq 12.0$. How far from home is she able to get and still return safely back?\n\nWe can solve this problem by finding the maximum distance that Charlotte can get from home while still being safe from the tide. We can do this by considering all possible starting positions and ending positions for Charlotte\u2019s walk. For each pair of positions, we can calculate the time it takes to reach the end position from the start position and the height of the water at the end position. We can then use this information to calculate the maximum distance that Charlotte can get from home while still being safe from the tide.\n\nTo calculate the time it takes to reach the end position from the start position, we can use the formula $t = \\frac{d}{m}$, where $d$ is the Euclidean distance between the start and end positions and $m$ is the walking speed. We can then use this time to calculate the height of the water at the end position using the tide equation $v = 0.5a\\cdot (\\cos (t\\frac{2\\pi }{12})+1)$"
    },
    {
        "number": 3613,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\") == \"4\""
    },
    {
        "number": 3614,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\") == \"4\"\n\nThe solution is correct."
    },
    {
        "number": 3615,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\") == \"6\""
    },
    {
        "number": 3616,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2\\n2\\n2\") == \"5\"\n\nThe shortest possible test scheme for the given allergens is to apply allergens at 8 o\u2019clock each morning and then examine for allergic reactions at 8 o\u2019clock each evening. This scheme takes 5 days to complete."
    },
    {
        "number": 3617,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1 3\\n2 2 2 1\") == \"1 1\\ndef solution(stdin: str) -> str:\\n\\tpass\""
    },
    {
        "number": 3618,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"10\""
    },
    {
        "number": 3619,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1 2\\n1000 1 0\\n1 1000 1\") == \"0.001\""
    },
    {
        "number": 3620,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 3 2 10000\\n1 2\\n2 3\\n3 1\") == \"0\"\n\nThe given graph is a simple graph with $N=3$ nodes and $M=3$ edges. The special property of the graph states that any connected component of size $s$ contains no more than $s + 2$ edges. In this case, there is only one connected component of size $3$, so the graph satisfies this property.\n\nLet's consider the $k$-colouring of the graph. We can assign each node a colour from $1$ to $k$. We can do this in such a way that no two adjacent nodes have the same colour. This is because the graph has no self loops and no repeated edges.\n\nThere are $k$ possible colours for each node, so there are $k^N$ possible $k$-colourings of the graph. However, we need to consider only those $k$-colourings that have no more than $s + 2$ edges in any connected component.\n\nIn this case, there is only one connected component of size $3$, so the graph satisfies the property that any connected component of size $s$ contains no more than $s + 2$ edges. Therefore, there is only one $k$-colouring of the graph that satisfies this property.\n\nTherefore, the number of $k$-colourings of the given graph is $1$, modulo $10000$."
    },
    {
        "number": 3621,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4\\n0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\") == \"26\""
    },
    {
        "number": 3622,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n20 20 20 40\\nX.X\\nT.T\") == \"0.333333333\\n0.666666667\""
    },
    {
        "number": 3623,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"45 45 0 0\") == \"0.75\"\n\nThe proportion of the area of the courtyard that is watered by the sprinklers is $\\frac{\\pi r^2}{4}$, where $r$ is the length of the side of the square. We can calculate $r$ using the law of cosines:\n\n$$\n\\cos(a) = \\frac{\\text{opposite}}{\\text{hypotenuse}}\n$$\n\n$$\n\\cos(b) = \\frac{\\text{opposite}}{\\text{hypotenuse}}\n$$\n\n$$\n\\cos(c) = \\frac{\\text{opposite}}{\\text{hypotenuse}}\n$$\n\n$$\n\\cos(d) = \\frac{\\text{opposite}}{\\text{hypotenuse}}\n$$\n\n$$\n\\text{opposite} = r\\sin(a)\n$$\n\n$$\n\\text{opposite} = r\\sin(b)\n$$\n\n$$\n\\text{opposite} = r\\sin(c)\n$$\n\n$$\n\\text{opposite} = r\\sin(d)\n$$\n\n$$\n\\text{hypotenuse} = r\\sin(\\frac{a+b}{2})\n$$\n\n$$\n\\text{hypotenuse} = r\\sin(\\frac{c+d}{2})\n$$\n\n$$\nr = \\frac{\\text{hypotenuse}}{\\sin(\\frac{a+b}{2})}\n$$\n\n$$\nr = \\frac{\\text{hypotenuse}}{\\sin(\\frac{c+d}{2})}\n$$\n\nNow we can calculate the proportion of the area of the courtyard that is watered by the sprinklers:\n\n$$\n\\frac{\\pi r^2}{4} = \\frac{\\pi r^2}{\\sin(\\frac{a+b}{2}) + \\sin(\\frac{c+d}{2})}\n$$\n\n$$\n\\frac{\\pi r^2}{4} = \\frac{\\pi r^2}{\\sin(\\frac{a+b}{2}) + \\sin(\\frac{c+d}{2})}\n$$\n\n$$\n\\frac{\\pi r^2}{4} = \\frac{\\pi r^2}{\\sin(\\frac{a+b}{2}) + \\sin(\\frac{c+d}{2})}\n$$\n\n$$\n\\frac{\\pi r^2}{4} = \\frac{\\pi r^2}{\\sin(\\frac{a+b}{2}) + \\sin(\\frac{c+d}{2})}\n$$\n\n$$\n\\frac{\\pi r^2}{4} = \\frac{\\pi r^2}{\\sin(\\frac{a+b}{2}) + \\sin(\\frac{c+d}{2})}\n$$\n\n$$\n\\frac{\\pi r^2}{4} = \\frac{\\pi r^2}{\\sin(\\frac{a+b}{2}) + \\sin(\\frac{c+d}{2})}\n$$\n\n$$\n\\frac{\\pi r^2}{4} = \\frac{\\pi r^2}{\\sin(\\frac{a+b}{2}) + \\sin(\\frac{c+d}{2})}\n$$\n\n$$\n\\frac{\\pi r^2}{4} = \\frac{\\pi r^2}{\\sin(\\frac{a+b}{2}) + \\sin(\\frac{c+d}{2})}\n$$\n\n$$\n\\frac{\\pi r^2}{4} = \\frac{\\pi r^2}{\\sin(\\frac{a+b}{2}) + \\sin(\\frac{c+d}{2})}\n$$\n\n$$\n\\frac{\\pi r^2}{4} = \\frac{\\pi r^2}{\\sin(\\frac{a+b}{2}) + \\sin(\\frac{c+d}{2})}\n$$\n\n$$\n\\frac{\\pi r^2}{4} = \\frac{\\pi r^2}{\\sin(\\frac{a+b}{2}) + \\sin(\\frac{c+d}{2})}\n$$\n\n$$\n\\frac{\\pi r^2}{4} = \\frac{\\pi r^2}{\\sin(\\frac{a+b}{2}) + \\sin(\\frac{c+d}{2})}\n$$\n\n$$\n\\frac{\\pi r^2}{4} = \\frac{\\pi r^2}{\\sin(\\frac{a+b}{2}) + \\sin(\\frac{c+d}{2})}\n$$"
    },
    {
        "number": 3624,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\") == \"4\"\n\nThe first test case is a simple one where there are 5 cabins and 6 trails. Mr. Day and Dr. Knight start in cabin 0 and their destination is cabin 4. The trails are as follows:\n\n- Trail 0: cabin 0 to cabin 1 takes 2 hours\n- Trail 1: cabin 0 to cabin 3 takes 8 hours\n- Trail 2: cabin 1 to cabin 2 takes 11 hours\n- Trail 3: cabin 2 to cabin 3 takes 5 hours\n- Trail 4: cabin 2 to cabin 4 takes 2 hours\n- Trail 5: cabin 4 to cabin 3 takes 9 hours\n\nMr. Day and Dr. Knight both walk at the same pace, so they will take the same amount of time to reach their destination.\n\nThe shortest time it takes for Dr. Knight to reach the destination is 12 hours, which is the maximum time they can walk each day. Therefore, Dr. Knight needs to wait for 4 hours before Mr. Day shows up."
    },
    {
        "number": 3625,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1\\n10 10 0 5\") == \"100\""
    },
    {
        "number": 3626,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n0 0 2 2\\n1 1 3 4\\n5 7 6 8\") == \"1\"\n\nThe first rectangle is (0,0) to (2,2), the second is (1,1) to (3,4), and the third is (5,7) to (6,8).\n\nThe first rectangle contains the point (1,1), the second rectangle contains the point (2,2), and the third rectangle contains the point (5,7).\n\nTherefore, the pair (0,0) to (2,2) and (1,1) to (3,4) intersect, and the pair (0,0) to (2,2) and (5,7) to (6,8) intersect.\n\nTherefore, the output is 1."
    },
    {
        "number": 3627,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\") == \"17\""
    },
    {
        "number": 3628,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5\\n3 2 3 1 1\") == \"1 4 3 5 2\\n2 3 5 1 4\"\nassert solution(\"1\\n1\") == \"impossible\"\nassert solution(\"2\\n1 2\") == \"impossible\"\nassert solution(\"3\\n1 2 3\") == \"impossible\"\nassert solution(\"4\\n1 2 3 4\") == \"impossible\"\nassert solution(\"5\\n1 2 3 4 5\") == \"impossible\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"impossible\"\nassert solution(\"7\\n1 2 3 4 5 6 7\") == \"impossible\"\nassert solution(\"8\\n1 2 3 4 5 6 7 8\") == \"impossible\"\nassert solution(\"9\\n1 2 3 4 5 6 7 8 9\") == \"impossible\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"impossible\"\nassert solution(\"1000\\n1 2 3 4 5 6 7 8 9 10\") == \"impossible\""
    },
    {
        "number": 3629,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1\\n3 0 1\\n1 4\\n\") == \"0.76772047\"\n\nThe boar begins at $(0,0)$ and chooses a random direction at random. It will then translate in that direction for a distance of $d=1$. There is only one tree in the forest, centered at $(3,0)$ with radius $1$. The boar will hit the tree at $(3,0)$, and since the boar is a disk, it will become dazed. The probability that the boar completes its charge without hitting any tree is $\\frac{1}{2}$, since the boar can either continue its charge in the same direction or change directions. Therefore, the answer is $\\frac{1}{2}$."
    },
    {
        "number": 3630,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"hello teams\") == \"27\"\nassert solution(\"aabbcdefghijklmnopqrstuvwxyz\") == \"36\"\nassert solution(\"abcdefghijklmnopqrstuvwxyz\") == \"26\"\nassert solution(\"abcdefghijklmnopqrstuvwxyza\") == \"26\"\nassert solution(\"abcdefghijklmnopqrstuvwxyzab\") == \"26\""
    },
    {
        "number": 3631,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == \"2\""
    },
    {
        "number": 3632,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncad\") == \"26\""
    },
    {
        "number": 3633,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5 10 30\\n10 5 3 1 3\") == \"3 5 2 1 4\"\n\nassert solution(\"3 10 10\\n10 5 3\") == \"impossible\"\n\nassert solution(\"5 10 30\\n10 5 3 1 3\") == \"3 5 2 1 4\"\n\nassert solution(\"5 10 30\\n10 5 3 1 3\") == \"3 5 2 1 4\"\n\nassert solution(\"5 10 30\\n10 5 3 1 3\") == \"3 5 2 1 4\""
    },
    {
        "number": 3634,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 1\\n2 3\\n2 3\") == \"2\""
    },
    {
        "number": 3635,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2 1 2\") == \"3\"\n\nassert solution(\"6\\n1 2 3 4 5 6\") == \"4\"\n\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"5\"\n\nassert solution(\"3000\\n\" + \"1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 \" * 1500) == \"1500\"\n\nassert solution(\"3000\\n\" + \"1 2 3 4 5 6 7 8 9 10 \" * 1500) == \"1500\""
    },
    {
        "number": 3636,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 4 999999937\") == \"79\""
    },
    {
        "number": 3637,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1\\n4 +zucchini +mozzarella +mushrooms -artichoke\") == \"zucchini\\nmozzarella\\nartichoke\\nmushrooms\"\nassert solution(\"2\\n3 +banana +apple -orange\\n2 +carrot +broccoli -spinach\") == \"banana\\napple\\ncarrot\\nbroccoli\"\nassert solution(\"3\\n4 +banana +apple -orange\\n2 +carrot +broccoli -spinach\\n3 +eggs +bacon -ham\") == \"banana\\napple\\ncarrot\\nbroccoli\\neggs\\nbacon\"\nassert solution(\"4\\n4 +banana +apple -orange\\n2 +carrot +broccoli -spinach\\n3 +eggs +bacon -ham\\n2 +chicken +beef -pork\") == \"banana\\napple\\ncarrot\\nbroccoli\\nchicken\\nbeef\"\nassert solution(\"5\\n4 +banana +apple -orange\\n2 +carrot +broccoli -spinach\\n3 +eggs +bacon -ham\\n2 +chicken +beef -pork\\n3 +tomato +onion -garlic\") == \"banana\\napple\\ncarrot\\nbroccoli\\nchicken\\nbeef\\ntomato\\nonion\"\nassert solution(\"10\\n4 +banana +apple -orange\\n2 +carrot +broccoli -spinach\\n3 +eggs +bacon -ham\\n2 +chicken +beef -pork\\n3 +tomato +onion -garlic\\n4 +spinach +lettuce -tomato\\n3 +apple +orange -banana\\n2 +broccoli +carrot -spinach\\n3 +mushroom +zucchini -spinach\\n2 +artichoke +spinach -lettuce\\n3 +avocado +pear -tomato\\n2 +kiwi +pear -avocado\") == \"banana\\napple\\ncarrot\\nbroccoli\\nchicken\\nbeef\\ntomato\\nonion\\nspinach\\nlettuce\\napple\\nbroccoli\\nmushroom\\nartichoke\\npear\\nkiwi\""
    },
    {
        "number": 3638,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\nPP\\nRR\\nPS\\nSS\") == \"PS\\nPP\\nRR\\nSS\"\nassert solution(\"1 1\\nR\") == \"R\"\nassert solution(\"2 2\\nP\\nS\") == \"P\\nS\"\nassert solution(\"3 3\\nRR\\nPP\\nSS\") == \"RR\\nPP\\nSS\"\nassert solution(\"4 4\\nRRR\\nPPS\\nSSS\\nRSS\") == \"RSS\\nRRR\\nPPS\\nSSS\"\nassert solution(\"5 5\\nRRRRR\\nPPPPS\\nSSSSS\\nRRPSS\\nSSSSR\") == \"RRRRR\\nPPPPS\\nSSSSS\\nRRPSS\\nSSSSR\"\nassert solution(\"10 10\\nRRRRRRRRR\\nPPPPPPPPS\\nSSSSSSSSS\\nRRRRPSSRR\\nSSSSRRRR\\nRRRRRRRRR\\nPPPPPPPPS\\nSSSSSSSSS\\nRRRRPSSRR\\nSSSSRRRR\") == \"RRRRRRRRR\\nPPPPPPPPS\\nSSSSSSSSS\\nRRRRPSSRR\\nSSSSRRRR\\nRRRRRRRRR\\nPPPPPPPPS\\nSSSSSSSSS\\nRRRRPSSRR\\nSSSSRRRR\""
    },
    {
        "number": 3639,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n0\") == \"288\""
    },
    {
        "number": 3640,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"pastimeofwhimsy\") == 1"
    },
    {
        "number": 3641,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\n1 2 2 1\\n\") == \"YES\""
    },
    {
        "number": 3642,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1 2\\n3\\n4\") == \"3/1\""
    },
    {
        "number": 3643,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1.2 10.2\\n2.2 15.2\") == \"1.114672365\"\n\nThe code seems correct and the test case passes."
    },
    {
        "number": 3644,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4\\n0 3\\n1 1\\n2 1\\n2 0\") == \"3\\n1 2 3 2\""
    },
    {
        "number": 3645,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 2 3\") == \"1\\n2\\n3\"\nassert solution(\"3\\n1 1 2\") == \"none\"\nassert solution(\"4\\n1 2 1 3\") == \"none\""
    },
    {
        "number": 3646,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"7\\n2 1 0 1 2 3 3\") == \"5\""
    },
    {
        "number": 3647,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\") == \"-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1\""
    },
    {
        "number": 3648,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\") == \"6\"\n\nThe given input is a valid test case. The mayor wants to connect all buildings in the city with a network that satisfies the security measure. The only insecure building is building 1. The direct connections between buildings are given in the input. The cost of connecting any two buildings is 1. Therefore, the cheapest network that satisfies the security measure is a single wire telephone line connecting buildings 1, 2, and 3. The cost of this network is 6. Therefore, the output should be \"6\"."
    },
    {
        "number": 3649,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 4 2 1\") == \"01001\""
    },
    {
        "number": 3650,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\"\nassert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\"\nassert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n\\n\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\"\nassert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n\\n\\n\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\"\nassert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n\\n\\n\\n\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\"\nassert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n\\n\\n\\n\\n\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\"\nassert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n\\n\\n\\n\\n\\n\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\"\nassert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n\\n\\n\\n\\n\\n\\n\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\"\nassert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n\\n\\n\\n\\n\\n\\n\\n\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\"\nassert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n\\n\\n\\n\\n\\n\\n\\n\\n\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\"\nassert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\"\nassert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\"\nassert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\") == \"possible"
    },
    {
        "number": 3651,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\") == \"2.0\""
    },
    {
        "number": 3652,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"7\\n5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2\") == \"4\""
    },
    {
        "number": 3653,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4\\n-10 0\\n-10 10\") == \"2\""
    },
    {
        "number": 3654,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1 5\") == \"0\""
    },
    {
        "number": 3655,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"\"\"2 2\n1 0\n0 1\n3 3\n1 0 0\n0 1 0\n0 0 1\"\"\") == \"0 0\\n1 1\"\n\nassert solution(\"\"\"3 3\n1 1 1\n1 1 1\n1 1 1\n4 4\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\"\"\") == \"0 0\\n1 1\\n2 2\"\n\nassert solution(\"\"\"4 4\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n5 5\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\"\"\") == \"0 0\\n1 1\\n2 2\\n3 3\""
    },
    {
        "number": 3656,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1 2 0.950000\\n0.700000 50\") == \"44.975\"\n\nThe expected total severity of fixed bugs is $\\sum_{i=1}^B s_i \\cdot p_i$, where $s_i$ is the severity of bug $i$ and $p_i$ is the fix probability of bug $i$. We can use this formula to calculate the expected total severity of fixed bugs.\n\nTo maximize this quantity, we need to choose the bugs to work on in such a way that the fix probability of each bug is maximized. This means that we should choose the bug with the highest fix probability first, and then work on it for the entire hour. If we fail to fix the bug, we should reduce its fix probability by a factor $f$ to reflect our reduced ability to fix it.\n\nWe can use dynamic programming to calculate the expected total severity of fixed bugs. Let $dp[i][j]$ be the expected total severity of fixed bugs if we have fixed $i$ bugs so far and have worked for $j$ hours. Then we can calculate $dp[i][j]$ as follows:\n\n- If we have fixed $i$ bugs and have worked for $j$ hours, then the expected total severity of fixed bugs is $dp[i][j] = \\sum_{k=1}^i s_k \\cdot p_k$.\n- If we have not fixed $i$ bugs and have worked for $j$ hours, then the expected total severity of fixed bugs is $dp[i][j] = dp[i-1][j-1] \\cdot (1 - f) + \\sum_{k=i+1}^B s_k \\cdot p_k$.\n\nThe first term in the second line is the expected total severity of fixed bugs if we have fixed $i-1$ bugs and have worked for $j-1$ hours. The second term is the expected total severity of fixed bugs if we have not fixed $i-1$ bugs and have worked for $j-1$ hours, but we have fixed $i$ bugs and have worked for $j$ hours.\n\nThe answer is $dp[B][T]$.\n\nHere's the Python code to implement this solution:"
    },
    {
        "number": 3657,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\"\n\nassert solution(\"10 5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n10 10\\n10 5\\n5 10\\n5 5\\n3\\n1\\n2\") == \"IMPOSSIBLE\"\n\nassert solution(\"10 5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n10 10\\n10 5\\n5 10\\n5 5\\n3\\n2\\n1\") == \"1\""
    },
    {
        "number": 3658,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\") == \"4.0\""
    },
    {
        "number": 3659,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4\\n220 29\\n195 20\\n200 9\\n180 30\") == \"18000\""
    },
    {
        "number": 3660,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\") == \"28\""
    },
    {
        "number": 3661,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\") == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\""
    },
    {
        "number": 3662,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\") == \"2.4142135624\""
    },
    {
        "number": 3663,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\") == \"15\""
    },
    {
        "number": 3664,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5 5 3 3 4\") == \".....\\n..BBC\\n..A.C\\n....C\\n@DDDD\""
    },
    {
        "number": 3665,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\""
    },
    {
        "number": 3666,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\") == \"19 20\\n17 15 14 13 7 2\""
    },
    {
        "number": 3667,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\") == \"impossible\"\nassert solution(\"3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 1\") == \"possible\"\nassert solution(\"3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 2\") == \"possible\"\nassert solution(\"3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 0\") == \"possible\"\nassert solution(\"3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 4\") == \"impossible\""
    },
    {
        "number": 3668,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n2\\n2\") == \"4\""
    },
    {
        "number": 3669,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 1\\n1 2\\n1 3\") == \"Mirko\"\n\nassert solution(\"4\\n1 1\\n2 2\\n3 3\\n4 4\") == \"Slavko\"\n\nassert solution(\"5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\") == \"Slavko\"\n\nassert solution(\"6\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\") == \"Mirko\"\n\nassert solution(\"7\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\") == \"Slavko\""
    },
    {
        "number": 3670,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n6\\n34\\n38\") == \"2 4\""
    },
    {
        "number": 3671,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4\\n10000 400000 500000 900000\") == \"12\"\nassert solution(\"5\\n8 10 2 1000000 30556926000\") == \"12\""
    },
    {
        "number": 3672,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\") == \"YES\"\nassert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\\n
    },
    {
        "number": 3673,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\"\nassert solution(\"10 3\\n1 2 3 4 5 6 7 8 9 10\") == \"Impossible\"\nassert solution(\"10 10\\n1 2 3 4 5 6 7 8 9 10\") == \"1 2 3 4 5 6 7 8 9 10\"\nassert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\") == \"1 2 3 4 5 6 7 8 9 10\"\nassert solution(\"10 1\\n1 2 3 4 5 6 7 8 9 10\") == \"1 2 3 4 5 6 7 8 9 10\""
    },
    {
        "number": 3674,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5 2 8 4\") == \"20512\""
    },
    {
        "number": 3675,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\nBAC\\nABC\") == 2\nassert solution(\"3 8\\nHGBDFCAE\\nADBGHFCE\\nHCFGBDAE\") == 3"
    },
    {
        "number": 3676,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"3\""
    },
    {
        "number": 3677,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3\") == \"3\""
    },
    {
        "number": 3678,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2\\n6\\n1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3\\n1 1\\n1 2\\n2 1\\n\") == \"YES\\nNO\""
    },
    {
        "number": 3679,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"3.000000000\""
    },
    {
        "number": 3680,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1 2\\n3\") == \"1\""
    },
    {
        "number": 3681,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\\n\"\n\nassert solution(\"3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\\n\"\n\nassert solution(\"3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\\n\"\n\nassert solution(\"3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\\n\""
    },
    {
        "number": 3682,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n2\nHelloWorld.c\nint Main() {\n    printf(\"Hello %d\\n\",i);\n}\n***END***\nAdd.c\nint Main() {\n  for (int i=0; i<10; i++)\n    sum += i;\n  printf(\"SUM %d\", sum);\n}\n***END***\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n***END***\n\"\"\") == \"\"\"\n2 HelloWorld.c Add.c\n\"\"\""
    },
    {
        "number": 3683,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n2 2 2\\n4 2 1\\n4 4 1\") == \"1\\n2\\n2\""
    },
    {
        "number": 3684,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\") == \"5\""
    },
    {
        "number": 3685,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"\"\"5 5\n(2 5) (5 3)\n.....\n.#.#.\n.#.#.\n....#\n.#.##\n1\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\"\"\") == \"26\"\n\nassert solution(\"\"\"5 5\n(2 5) (5 3)\n.....\n.#.#.\n.#.#.\n....#\n.#.##\n1\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\"\"\") == \"26\"\n\nassert solution(\"\"\"5 5\n(2 5) (5 3)\n.....\n.#.#.\n.#.#.\n....#\n.#.##\n1\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\"\"\") == \"26\"\n\nassert solution(\"\"\"5 5\n(2 5) (5 3)\n.....\n.#.#.\n.#.#.\n....#\n.#.##\n1\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\"\"\") == \"26\""
    },
    {
        "number": 3686,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"6\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1\") == \"failure\"\n\nassert solution(\"6\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 1\\n1 1\") == \"success\"\n\nassert solution(\"6\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 1\\n1 2\") == \"failure\"\n\nassert solution(\"6\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 1\\n1 0\") == \"failure\"\n\nassert solution(\"6\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 1\\n1 -1\") == \"failure\""
    },
    {
        "number": 3687,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\") == \"possible\"\n\nassert solution(\"2 2 2\\n1 2\\n3 3\\n5 2 2\\n4 2 2\") == \"impossible\"\n\nassert solution(\"2 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 1\") == \"impossible\"\n\nassert solution(\"2 2 2\\n1 2\\n3 3\\n5 2 2\\n5 1 2\") == \"impossible\"\n\nassert solution(\"2 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 3688,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n1 1 2\\n1 2 1\\n-1 1 2\") == \"0\""
    },
    {
        "number": 3689,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n353\") == \"3\\n353\"\nassert solution(\"4 2\\n1234\") == \"4\\n1313\""
    },
    {
        "number": 3690,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\""
    },
    {
        "number": 3691,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1 1 2 3 1 0\\n2 4 20\") == \"3\"\nassert solution(\"1 1 2 3 1 0\\n15 27 26\") == \"2\"\nassert solution(\"1 1 2 3 1 0\\n2 2 1\") == \"0\""
    },
    {
        "number": 3692,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n0 0 1\\n2 0 1\\n4 0 1\") == \"4\"\nassert solution(\"3\\n0 0 2\\n3 0 2\\n6 0 2\") == \"6\"\nassert solution(\"3\\n0 0 2\\n2 0 2\\n1 1 2\") == \"8\""
    },
    {
        "number": 3693,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\") == \"Yes\"\nassert solution(\"0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\") == \"No\"\nassert solution(\"6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\") == \"Yes\""
    },
    {
        "number": 3694,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1\\n0\\n\") == \"cslnb\"\nassert solution(\"2\\n1 0\\n\") == \"cslnb\"\nassert solution(\"2\\n2 2\\n\") == \"sjfnb\"\nassert solution(\"3\\n2 3 1\\n\") == \"sjfnb\""
    },
    {
        "number": 3695,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 5\\n1 5 3\") == \"2\"\nassert solution(\"1 2\\n1\") == \"1\"\nassert solution(\"1 1\\n1\") == \"0\""
    },
    {
        "number": 3696,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\\n0 1\\n0\\n1\"\nassert solution(\"2\") == \"2\\n-1 0 1\\n1\\n0 1\""
    },
    {
        "number": 3697,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 1 5 4\\n1 2 1 3\") == \"1 3 3\"\nassert solution(\"3 1 5 3\\n1 3 1\") == \"2 3 2\"\nassert solution(\"3 2 5 3\\n1 3 1\") == \"1 2 2\""
    },
    {
        "number": 3698,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"110\\n2\\n\") == \"3\"\nassert solution(\"111111011\\n2\\n\") == \"169\""
    },
    {
        "number": 3699,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 1 1 2 0 0\\n3\\n1 1\\n2 1\\n2 3\") == \"11.084259940083\"\nassert solution(\"5 0 4 2 2 0\\n5\\n5 2\\n3 0\\n5 5\\n3 5\\n3 3\") == \"33.121375178000\""
    },
    {
        "number": 3700,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"8 5\") == \"2\"\nassert solution(\"8 15\") == \"1\"\nassert solution(\"7 20\") == \"0\"\nassert solution(\"1000000000000 1000000000001\") == \"500000000000\""
    },
    {
        "number": 3701,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5 1 10\\n01000\") == \"11\"\nassert solution(\"5 10 1\\n01000\") == \"2\"\nassert solution(\"7 2 3\\n1111111\") == \"0\""
    },
    {
        "number": 3702,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 1 1\") == \"2 1\"\nassert solution(\"5 1 2\") == \"19 5\""
    },
    {
        "number": 3703,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"7 1\") == \"6\"\nassert solution(\"10 2\") == \"4\""
    },
    {
        "number": 3704,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n1\n-149.154.167.99\n\"\"\") == \"1\\n0.0.0.0/0\"\n\nassert solution(\"\"\"\n4\n-149.154.167.99\n+149.154.167.100/30\n+149.154.167.128/25\n-149.154.167.120/29\n\"\"\") == \"2\\n149.154.167.99\\n149.154.167.120/29\"\n\nassert solution(\"\"\"\n5\n-127.0.0.4/31\n+127.0.0.8\n+127.0.0.0/30\n-195.82.146.208/29\n-127.0.0.6/31\n\"\"\") == \"2\\n195.0.0.0/8\\n127.0.0.4/30\"\n\nassert solution(\"\"\"\n2\n+127.0.0.1/32\n-127.0.0.1\n\"\"\") == \"-1\""
    },
    {
        "number": 3705,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"11\\n00000000008\") == \"1\"\nassert solution(\"22\\n0011223344556677889988\") == \"2\"\nassert solution(\"11\\n31415926535\") == \"0\""
    },
    {
        "number": 3706,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 5\\n2 2 2 3 2\\n0 0 0 1 0\\n1 1 1 2 1\") == \"4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\"\nassert solution(\"3 3\\n0 0 0\\n0 1 0\\n0 0 0\") == \"-1\"\nassert solution(\"3 3\\n1 1 1\\n1 1 1\\n1 1 1\") == \"3\\nrow 1\\nrow 2\\nrow 3\""
    },
    {
        "number": 3707,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\""
    },
    {
        "number": 3708,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n1 3\\n1 4\") == \"6\"\nassert solution(\"7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\") == \"12\"\nassert solution(\"2 2\\n1 2\\n2 1\") == \"-1\""
    },
    {
        "number": 3709,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n1 0 1\\n1 1 0\\n1 0 0\\n1 0 0\\n1 0 0\") == \"NO\"\nassert solution(\"3 2\\n1 0\\n1 1\\n0 1\") == \"YES\""
    },
    {
        "number": 3710,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 5\\n2 3 5 12\") == \"Yes\"\nassert solution(\"2 7\\n2 3\") == \"No\""
    },
    {
        "number": 3711,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 4 1\") == \"6\"\nassert solution(\"6 4 2\") == \"8\"\nassert solution(\"2 3 4\") == \"-1\""
    },
    {
        "number": 3712,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 2 2 4 3\") == \"2\"\nassert solution(\"3\\n4 1 1\") == \"2\"\nassert solution(\"4\\n0 3 0 4\") == \"0\""
    },
    {
        "number": 3713,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"8\\n10000011\") == \"5\"\nassert solution(\"2\\n01\") == \"2\""
    },
    {
        "number": 3714,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4\\n2 3 1 4\") == \"3\"\nassert solution(\"4\\n4 4 4 4\") == \"-1\"\nassert solution(\"4\\n2 1 4 3\") == \"1\""
    },
    {
        "number": 3715,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 3 2 0\") == \"2\"\nassert solution(\"7\\n1 3 3 2 1 2 3\") == \"0\"\nassert solution(\"2\\n2 2\") == \"1\""
    },
    {
        "number": 3716,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"9\") == \"504\"\nassert solution(\"7\") == \"210\""
    },
    {
        "number": 3717,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n0 0 1 1\\n1 1 2 2\\n3 0 4 1\") == \"1 1\"\nassert solution(\"3\\n0 0 1 1\\n0 1 1 2\\n1 0 2 1\") == \"1 1\"\nassert solution(\"4\\n0 0 5 5\\n0 0 4 4\\n1 1 4 4\\n1 1 4 4\") == \"1 1\"\nassert solution(\"5\\n0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2\") == \"3 4\""
    },
    {
        "number": 3718,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4\\n18 55 16 17\\n\") == \"YES\"\nassert solution(\"6\\n40 41 43 44 44 44\\n\") == \"NO\"\nassert solution(\"8\\n5 972 3 4 1 4 970 971\\n\") == \"YES\""
    },
    {
        "number": 3719,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 9\\n1 2 3\\n1 2 3 7 8 9 11 12 13\") == \"9\"\nassert solution(\"5 5\\n1 2 3 4 5\\n1 2 3 4 5\") == \"10\""
    },
    {
        "number": 3720,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"Vasya\"\nassert solution(\"2\") == \"Petya\"\nassert solution(\"8\") == \"Petya\""
    },
    {
        "number": 3721,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 2 3\\n1 2\\n2 2\\n2 1\") == \"0\"\nassert solution(\"1 5 3\\n1 3\\n1 1\\n1 5\") == \"2\"\nassert solution(\"4 3 6\\n1 2\\n1 3\\n2 2\\n2 3\\n3 1\\n3 3\") == \"1\""
    },
    {
        "number": 3722,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\""
    },
    {
        "number": 3723,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2 3 4\") == \"2\"\nassert solution(\"5\\n2 3 4 6 7\") == \"3\""
    },
    {
        "number": 3724,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5\\nABAAC\") == \"11\""
    },
    {
        "number": 3725,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5\\n4 2\\n1 1\\n0 1\\n2 3\\n\") == \"3\\n\"\nassert solution(\"1023\\n1 2\\n1 0\\n1 2\\n1 1\\n\") == \"-1\\n\""
    },
    {
        "number": 3726,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2\\n4 5\") == \"2\""
    },
    {
        "number": 3727,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 2 2 1\") == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"NO\""
    },
    {
        "number": 3728,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 4\\n1 3 2 4\\n1 3 4 2\") == \"YES\"\nassert solution(\"4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\") == \"NO\"\nassert solution(\"3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\") == \"YES\""
    },
    {
        "number": 3729,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1 1 1\") == \"0\"\nassert solution(\"1 2 1\") == \"666666672\""
    },
    {
        "number": 3730,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"6\\n7 2 3 1 5 6\") == \"5\""
    },
    {
        "number": 3731,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1 1 1 8\") == \"2\"\nassert solution(\"4 2 2 6\") == \"3\"\nassert solution(\"3 7 4 6\") == \"1\""
    },
    {
        "number": 3732,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1 2 5\") == \"2\"\nassert solution(\"-1 4 15\") == \"4\"\nassert solution(\"0 -1 5\") == \"-1\""
    },
    {
        "number": 3733,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"6 1\\n2 1 2 3 4 3\") == \"2\"\nassert solution(\"6 2\\n2 1 2 3 4 3\") == \"0\"\nassert solution(\"6 1\\n1 1 2 2 3 3\") == \"2\""
    },
    {
        "number": 3734,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"monday\\ntuesday\") == \"NO\"\nassert solution(\"sunday\\nsunday\") == \"YES\"\nassert solution(\"saturday\\tuesday\") == \"YES\""
    },
    {
        "number": 3735,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"35\") == \"17\"\nassert solution(\"10000000000\") == \"91\""
    },
    {
        "number": 3736,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\""
    },
    {
        "number": 3737,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1 5\") == \"0\"\nassert solution(\"3\\n1 2 5\") == \"1\""
    },
    {
        "number": 3738,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\nRU\") == \"Yes\"\nassert solution(\"1 2\\nRU\") == \"No\"\nassert solution(\"-1 1000000000\\nLRRLU\") == \"Yes\"\nassert solution(\"0 0\\nD\") == \"Yes\""
    },
    {
        "number": 3739,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"10 3 7\") == \"1\"\nassert solution(\"10   3   7\") == \"1\"\nassert solution(\"314\\n159 265\\n358\") == \"0\"\nassert solution(\"22 19 3\") == \"1\"\nassert solution(\"\\n60\\n\\n29\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n"
    },
    {
        "number": 3740,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"9\""
    },
    {
        "number": 3741,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4\\n3 6 28 9\") == \"4\"\nassert solution(\"5\\n5 12 9 16 48\") == \"3\"\nassert solution(\"4\\n1 2 4 8\") == \"-1\""
    },
    {
        "number": 3742,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5\\n0 5 0 2 3\") == \"2\"\nassert solution(\"7\\n1 0 0 5 0 0 2\") == \"1\""
    },
    {
        "number": 3743,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"5\""
    },
    {
        "number": 3744,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5 2 2\\n1 3 4 5 2\\n5 3 2 1 4\") == \"18\\n3 4\\n1 5\"\nassert solution(\"4 2 2\\n10 8 8 3\\n10 7 9 4\") == \"31\\n1 2\\n3 4\"\nassert solution(\"5 3 1\\n5 2 5 1 7\\n6 3 1 6 3\") == \"23\\n1 3 5\\n4\""
    },
    {
        "number": 3745,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 1\\n1 2\") == \"Yes\\naa\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\") == \"No\""
    },
    {
        "number": 3746,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"0 1 1\\n1 0 1\\n1 1 0\\n3\") == \"7\"\nassert solution(\"0 2 2\\n1 0 100\\n1 2 0\\n3\") == \"19\"\nassert solution(\"0 2 1\\n1 0 100\\n1 2 0\\n5\") == \"87\""
    },
    {
        "number": 3747,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"Bulbbasaur\") == 1\nassert solution(\"F\") == 0\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == 2"
    },
    {
        "number": 3748,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\narc\\nrac\\n\") == \"YES\""
    },
    {
        "number": 3749,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\""
    },
    {
        "number": 3750,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 2 3\") == \"-1\""
    },
    {
        "number": 3751,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3752,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 2 6\") == \"6.5\"\nassert solution(\"4 2 20\") == \"20.0\""
    },
    {
        "number": 3753,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n..\\n..\") == \"2\"\nassert solution(\"4 4\\n....\\n#.#.\\n....\\n.#..\\n\") == \"1\"\nassert solution(\"3 4\\n....\\n.##.\\n....\\n\") == \"2\""
    },
    {
        "number": 3754,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 1 3\") == \"6\""
    },
    {
        "number": 3755,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 4 3 7 5\") == \"11\\n3\\n1\\n4\\n2\""
    },
    {
        "number": 3756,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"6 1\\n10.245\\n\") == \"10.25\\n\"\nassert solution(\"6 2\\n10.245\\n\") == \"10.3\\n\"\nassert solution(\"3 100\\n9.2\\n\") == \"9.2\\n\""
    },
    {
        "number": 3757,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"\nassert solution(\"1 2 2 1\") == \"0110\""
    },
    {
        "number": 3758,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"7\\n*..P*P*\") == \"3\"\nassert solution(\"10\\n.**PP.*P.*\") == \"2\""
    },
    {
        "number": 3759,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1\\n\") == \"4\\n\"\nassert solution(\"2\\n\") == \"8\\n\"\nassert solution(\"3\\n\") == \"16\\n\""
    },
    {
        "number": 3760,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"9 9 5 5 2 1\") == \"1 3 9 7\"\nassert solution(\"100 100 52 50 46 56\") == \"17 8 86 92\""
    },
    {
        "number": 3761,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"FTFFTFFF\\n4 2\") == \"Yes\""
    },
    {
        "number": 3762,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1\\n\") == \"2\\n\"\nassert solution(\"2\\n\") == \"3\\n\"\nassert solution(\"3\\n\") == \"5\\n\"\nassert solution(\"4\\n\") == \"6\\n\""
    },
    {
        "number": 3763,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 2 3\\n3\") == \"1.3333333333\""
    },
    {
        "number": 3764,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5 1 2\\n9 7 11 15 5\") == \"13 7\"\nassert solution(\"2 100000 569\\n605 986\") == \"986 605\""
    },
    {
        "number": 3765,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 3 2 4 4\\n2 5 4 10\") == \"1\"\nassert solution(\"3 3 3 3 5\\n2 3 5 4 2\") == \"0\"\nassert solution(\"5 5 1 2 3\\n2 2 3\") == \"-1\"\nassert solution(\"3 4 1 1 3\\n2 3 2\") == \"3\""
    },
    {
        "number": 3766,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2\\nG3 G3\") == \"0\"\nassert solution(\"4\\nG4 R4 R3 B3\") == \"2\"\nassert solution(\"5\\nB1 Y1 W1 G1 R1\") == \"4\""
    },
    {
        "number": 3767,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4\\n3 3 4 3\\n4 7 6 5\") == \"2 6\"\nassert solution(\"2\\n1 1\\n100 100\") == \"1 1\"\nassert solution(\"5\\n10 30 5 6 24\\n10 41 7 8 24\") == \"3 11\""
    },
    {
        "number": 3768,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1 4\") == \"3B\"\nassert solution(\"2 2\") == \"Impossible\"\nassert solution(\"3 2\") == \"1A1B\""
    },
    {
        "number": 3769,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"3\"\nassert solution(\"5 4\") == \"25\""
    },
    {
        "number": 3770,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\\n\") == \"1\\n\""
    },
    {
        "number": 3771,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\nS.o\\n.o.\\no.T\\n\") == \"2\""
    },
    {
        "number": 3772,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"3\"\nassert solution(\"199 200\") == \"200\""
    },
    {
        "number": 3773,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2\\n5 2\\n3 3\") == \"Aoki\""
    },
    {
        "number": 3774,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"0\"\nassert solution(\"3 3\") == \"8\""
    },
    {
        "number": 3775,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n1 2 3 4\\n1 5 3 4\") == \"1\"\nassert solution(\"2 2\\n1 2 3 4\\n1 5 6 4\") == \"0\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 3\") == \"-1\""
    },
    {
        "number": 3776,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"24\\n17:30\") == \"17:30\"\nassert solution(\"12\\n17:30\") == \"07:30\"\nassert solution(\"24\\n99:99\") == \"09:09\""
    },
    {
        "number": 3777,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\") == \"6\""
    },
    {
        "number": 3778,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"6\\n2 0 3 0 1 1\") == \"5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"6\\n3 2 2 2 1 1\") == \"-1\""
    },
    {
        "number": 3779,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 8\\n12 20\") == \"2\\n0 4\"\nassert solution(\"3 10\\n10 20 30\") == \"1\\n0\""
    },
    {
        "number": 3780,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"0 0 5 5\\n3 2\\n-1 -1\\n-1 0\") == \"3.729935587093555327\"\nassert solution(\"0 0 0 1000\\n100 1000\\n-50 0\\n50 0\") == \"11.547005383792516398\""
    },
    {
        "number": 3781,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\") == \"Second\\nFirst\\nSecond\""
    },
    {
        "number": 3782,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5 3 2\\n4 3 1 5 2\") == \"1\""
    },
    {
        "number": 3783,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"24\""
    },
    {
        "number": 3784,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"6\"\nassert solution(\"4 4\") == \"3\"\nassert solution(\"7 3\") == \"1196\"\nassert solution(\"31 8\") == \"64921457\""
    },
    {
        "number": 3785,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 4 2\\n#..#\\n..#.\\n#...\\n\") == \"#.X#\\nX.#.\\n#...\"\nassert solution(\"5 4 5\\n#...\\n#.#.\\n.#..\\n...#\\n.#.#\\n\") == \"#XXX\\n#X#.\\nX#..\\n...#\\n.#.#\""
    },
    {
        "number": 3786,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 1\") == \"1\"\nassert solution(\"5\\n1 2 2 2\") == \"3\"\nassert solution(\"18\\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4\") == \"4\""
    },
    {
        "number": 3787,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5 3 2\") == \"2 4 1 5 3\""
    },
    {
        "number": 3788,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"6\\n3 6 9 18 36 108\") == \"Yes\"\nassert solution(\"2\\n7 17\") == \"No\"\nassert solution(\"9\\n4 8 10 12 15 18 33 44 81\") == \"Yes\""
    },
    {
        "number": 3789,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"6\\n1 2 -6 4 5 3\") == \"12\""
    },
    {
        "number": 3790,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n3 1 4 2\") == \"5\""
    },
    {
        "number": 3791,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 2 3\") == \"0 0\\n\"\nassert solution(\"3\\n2 3 1\") == \"0 1\\n\"\nassert solution(\"3\\n3 2 1\") == \"2 1\\n\""
    },
    {
        "number": 3792,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 4\\naa\\nbb\\n\") == \"6\\n\"\nassert solution(\"3 3\\naba\\nbba\\n\") == \"8\\n\"\nassert solution(\"4 5\\nabbb\\nbaaa\\n\") == \"8\\n\""
    },
    {
        "number": 3793,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\") == \"YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"NO\""
    },
    {
        "number": 3794,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4\\n2 3 6 7\") == \"YES\\n2 2 1 1\"\nassert solution(\"5\\n6 15 35 77 22\") == \"YES\\n2 1 2 1 1\"\nassert solution(\"5\\n6 10 15 1000 75\") == \"NO\""
    },
    {
        "number": 3795,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"100\\n60\\n70\\n\") == \"40\\n\"\nassert solution(\"410\\n55\\n70\\n\") == \"5\\n\"\nassert solution(\"600\\n60\\n70\\n\") == \"0\\n\""
    },
    {
        "number": 3796,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"12\\n3 1 4 1 5 9 2 6 5 3 5 8\") == \"12\\n3 4\\n1 2 3 5\\n3 1 5 4\\n5 6 8 9\"\nassert solution(\"5\\n1 1 1 1 1\") == \"1\\n1 1\\n1\""
    },
    {
        "number": 3797,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 1\\n1 3 3\") == \"6\""
    },
    {
        "number": 3798,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"87654\\n30\") == \"10\""
    },
    {
        "number": 3799,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"aba\") == \"Second\""
    },
    {
        "number": 3800,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"10\\n12345\") == \"6\"\nassert solution(\"16\\n439873893693495623498263984765\") == \"40\""
    },
    {
        "number": 3801,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 1\\n0 1\\n2 1\") == \"332748119\\n332748119\"\nassert solution(\"1 2\\n1\\n1\") == \"3\"\nassert solution(\"3 3\\n0 1 1\\n4 3 5\") == \"160955686\\n185138929\\n974061117\""
    },
    {
        "number": 3802,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"AJKEQSLOBSROFGZ\\nOVGURWZLWVLUXTH\\nOZ\") == \"ORZ\"\nassert solution(\"AA\\nA\\nA\") == \"0\""
    },
    {
        "number": 3803,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1 2 1\\n1 100 1\\n1 100 100\") == \"99\"\nassert solution(\"100 100 100\\n1 1 1\\n1 1 1\") == \"0\""
    },
    {
        "number": 3804,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"3 3\") == \"0\"\nassert solution(\"1000000000000 1048576\") == \"118606527258\""
    },
    {
        "number": 3805,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"-++-\") == \"Yes\"\nassert solution(\"+-\") == \"No\"\nassert solution(\"++\") == \"Yes\"\nassert solution(\"-\") == \"No\""
    },
    {
        "number": 3806,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 0 0\\n0 1\\n-1 2\\n1 2\") == \"12.566370614359172464\"\nassert solution(\"4 1 -1\\n0 0\\n1 2\\n2 0\\n1 1\") == \"21.991148575128551812\""
    },
    {
        "number": 3807,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"48\") == \"9 42\"\nassert solution(\"6\") == \"6 6\""
    },
    {
        "number": 3808,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2\\n)(\\n\") == \"Yes\"\nassert solution(\"3\\n(()\\n\") == \"No\"\nassert solution(\"2\\n()\\n\") == \"Yes\"\nassert solution(\"10\\n)))))(((((\\n\") == \"No\""
    },
    {
        "number": 3809,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1 50\\n50\") == \"1\\n1\"\nassert solution(\"3 100\\n50 50 100\") == \"5\\n2\"\nassert solution(\"2 50\\n50 50\") == \"-1\\n0\""
    },
    {
        "number": 3810,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2 6 8\") == \"2\"\nassert solution(\"5\\n2 3 4 9 12\") == \"4\"\nassert solution(\"4\\n5 7 2 9\") == \"1\""
    },
    {
        "number": 3811,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n17 18\\n15 24\\n12 15\") == \"6\"\nassert solution(\"2\\n10 16\\n7 17\") == \"-1\"\nassert solution(\"5\\n90 108\\n45 105\\n75 40\\n165 175\\n33 30\") == \"5\""
    },
    {
        "number": 3812,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"bab\\nbb\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bbbb\\naaa\") == \"0\""
    },
    {
        "number": 3813,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 1\\n4 3 2\") == \"POSSIBLE\""
    },
    {
        "number": 3814,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 1000000007\") == \"2\""
    },
    {
        "number": 3815,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 2 3 3\\n+-+\") == \"7\"\nassert solution(\"4 1 5 1\\n-\") == \"999999228\""
    },
    {
        "number": 3816,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1 1 1 2\") == \"4\"\nassert solution(\"1 2 3 1\") == \"2\"\nassert solution(\"10 2 1 7\") == \"0\""
    },
    {
        "number": 3817,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"6\""
    },
    {
        "number": 3818,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1 2\") == \"2\""
    },
    {
        "number": 3819,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n0 2 0\\n3 0 1\\n\") == \"2\"\nassert solution(\"3\\n0 2 0\\n1 0 3\\n\") == \"4\"\nassert solution(\"11\\n0 0 0 5 0 0 0 4 0 0 11\\n9 2 6 0 8 1 7 0 3 0 10\\n\") == \"18\""
    },
    {
        "number": 3820,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"6 10\\ncode*s\\ncodeforces\") == \"YES\"\nassert solution(\"6 5\\nvk*cup\\nvkcup\") == \"YES\"\nassert solution(\"1 1\\nv\\nk\") == \"NO\"\nassert solution(\"9 6\\ngfgf*gfgf\\ngfgfgf\") == \"NO\""
    },
    {
        "number": 3821,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4\\n0.1 0.2 0.3 0.8\") == \"0.800000000000\"\nassert solution(\"2\\n0.1 0.2\") == \"0.260000000000\""
    },
    {
        "number": 3822,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5 10 1 2 5\") == \"5.0000000000\"\nassert solution(\"3 6 1 2 1\") == \"4.7142857143\""
    },
    {
        "number": 3823,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n0.000 0.500 0.750 1.000 2.000 3.000\") == \"0.250\"\nassert solution(\"3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\") == \"0.279\""
    },
    {
        "number": 3824,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1 5\\n5 2\") == \"18\"\nassert solution(\"0 1\\n0 0\") == \"8\""
    },
    {
        "number": 3825,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"4\"\nassert solution(\"2\") == \"10\"\nassert solution(\"10\") == \"244\""
    },
    {
        "number": 3826,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 2 3\") == \"0\"\nassert solution(\"4\\n1 1 2 2\") == \"2\"\nassert solution(\"5\\n1 4 1 4 9\") == \"2\""
    },
    {
        "number": 3827,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"aaabccc\") == \"YES\"\nassert solution(\"bbacc\") == \"NO\"\nassert solution(\"aabc\") == \"YES\""
    },
    {
        "number": 3828,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5\\n4 1 2 5 3\") == \"2\"\nassert solution(\"4\\n4 1 3 2\") == \"2\""
    },
    {
        "number": 3829,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"6 1\") == \"3.500000000000\"\nassert solution(\"6 3\") == \"4.958333333333\"\nassert solution(\"2 2\") == \"1.750000000000\""
    },
    {
        "number": 3830,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4\\n4\\n-><-\") == \"3\"\nassert solution(\"5\\n>>>>>\") == \"5\"\nassert solution(\"3\\n<--\") == \"3\"\nassert solution(\"2\\n<>\") == \"0\""
    },
    {
        "number": 3831,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n4 5\\n4 5\\n4 10\\n\") == \"16\\n9 9 10\\n\"\nassert solution(\"4\\n1 100\\n100 1\\n1 100\\n100 1\\n\") == \"202\\n101 101 101 101\\n\"\nassert solution(\"3\\n1 1\\n100 100\\n1 1\\n\") == \"-1\\n\""
    },
    {
        "number": 3832,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 1 1 1 1\") == \"1 2 2\"\nassert solution(\"3\\n1 2 3\") == \"0 2\"\nassert solution(\"5\\n1 2 3 2 2\") == \"0 1 3\""
    },
    {
        "number": 3833,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"101101\\n110\") == \"110110\"\nassert solution(\"10010110\\n100011\") == \"01100011\"\nassert solution(\"10\\n11100\") == \"01\""
    },
    {
        "number": 3834,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5 5 2\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1\\n1 1 1 1 1\") == \"1\"\nassert solution(\"3 4 1\\n1 0 0 0\\n0 1 1 1\\n1 1 1 0\") == \"-1\"\nassert solution(\"3 4 1\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\") == \"0\""
    },
    {
        "number": 3835,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5\\n0 4 6 2 4\\n4 0 6 2 4\\n6 6 0 3 6\\n2 2 3 0 2\\n4 4 6 2 0\") == \"2 2 3 1 2\"\nassert solution(\"3\\n0 99990000 99970002\\n99990000 0 99980000\\n99970002 99980000 0\") == \"9999 10000 9998\""
    },
    {
        "number": 3836,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"6\\n11 6\\n10 4\\n01 3\\n00 3\\n00 7\\n00 9\\n\") == \"22\\n\"\nassert solution(\"5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1\\n\") == \"103\\n\"\nassert solution(\"6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28\\n\") == \"105\\n\"\nassert solution(\"3\\n00 5000\\n00 5000\\n00 5000\\n\") == \"0\\n\""
    },
    {
        "number": 3837,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 4 9\\n1 3 1 2\\n2 1 3\\n4 3 6\\n\") == \"YES\\n2 3 2 3\\n\"\nassert solution(\"3 4 10\\n2 3 1 2\\n2 1 3\\n4 3 6\\n\") == \"YES\\n1 3 1 3\\n\"\nassert solution(\"3 4 9\\n2 3 1 2\\n2 1 3\\n4 3 6\\n\") == \"YES\\n3 3 2 3\\n\"\nassert solution(\"3 4 5\\n1 3 1 2\\n2 1 3\\n5 3 6\\n\") == \"NO\\n\""
    },
    {
        "number": 3838,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 1\\n2 3 4 1\\n1 2 3 4\") == \"NO\"\nassert solution(\"4 1\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 3\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 2\\n4 3 1 2\\n2 1 4 3\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n2 1 4 3\") == \"NO\""
    },
    {
        "number": 3839,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4\") == \"1 1\\n3 1\\n1 5\\n4 4\"\nassert solution(\"7\") == \"2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\""
    },
    {
        "number": 3840,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1\\n1\") == \"-1\"\nassert solution(\"3\\n1 2 3\") == \"3\""
    },
    {
        "number": 3841,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"46 2\") == \"7\\n0 1 0 0 1 1 1\"\nassert solution(\"2018 214\") == \"3\\n92 205 1\""
    },
    {
        "number": 3842,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 20 20\\n6 2\\n1 3\\n2 6\") == \"5.000000000000000\"\nassert solution(\"4 1 1\\n2 3\\n3 2\\n2 3\\n3 2\") == \"0.400000000000000\""
    },
    {
        "number": 3843,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"4\"\nassert solution(\"8 2\") == \"5\""
    },
    {
        "number": 3844,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n4 5 7\") == \"Conan\"\nassert solution(\"2\\n1 1\") == \"Agasa\""
    },
    {
        "number": 3845,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"3 3\\n##.\\n..#\\n#.#\""
    },
    {
        "number": 3846,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\") == \"4\\n1 3 4 5\"\nassert solution(\"3 2\\n+ 1\\n- 2\") == \"1\\n3\"\nassert solution(\"2 4\\n+ 1\\n- 1\\n+ 2\\n- 2\") == \"0\"\nassert solution(\"5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\") == \"3\\n2 3 5\"\nassert solution(\"2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\") == \"0\""
    },
    {
        "number": 3847,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n1 2 3\\n1 2 3\\n9\") == \"4\"\nassert solution(\"5 1\\n5 4 2 4 5\\n2\\n5\") == \"1\""
    },
    {
        "number": 3848,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\ncba\") == \"NO\"\nassert solution(\"3 4\\ncba\") == \"cbd\"\nassert solution(\"4 4\\nabcd\") == \"abda\""
    },
    {
        "number": 3849,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n0101\") == \"quailty\"\nassert solution(\"6 1\\n010101\") == \"once again\"\nassert solution(\"6 5\\n010101\") == \"tokitsukaze\"\nassert solution(\"4 1\\n0011\") == \"once again\""
    },
    {
        "number": 3850,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 4 50\\n20 100\\n60 10 40 80\") == \"50\"\nassert solution(\"1 2 10\\n11\\n15 7\") == \"7\""
    },
    {
        "number": 3851,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n1 1\") == \"1 6\"\nassert solution(\"3 2\\n0 0\") == \"1 3\"\nassert solution(\"1 10\\n5 3\") == \"5 5\""
    },
    {
        "number": 3852,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n-2 5 -1\") == \"2\\n2 3\\n3 3\""
    },
    {
        "number": 3853,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2\\n0 3\\n1 5\") == \"3\"\nassert solution(\"1\\n0 4\") == \"1\"\nassert solution(\"2\\n1 10\\n2 2\") == \"3\""
    },
    {
        "number": 3854,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"6 18\\n5 6 1 10 12 2\") == \"16\\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18\"\nassert solution(\"3 50\\n25 25 50\") == \"3\\n0 25 50\""
    },
    {
        "number": 3855,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"6\") == \"3\"\nassert solution(\"2\") == \"2\""
    },
    {
        "number": 3856,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n10 1\\n20 2\\n30 3\") == \"180\"\nassert solution(\"3\\n3 1\\n2 2\\n4 3\") == \"21\"\nassert solution(\"1\\n5 10\") == \"50\""
    },
    {
        "number": 3857,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n0 0 10\") == \"2\"\nassert solution(\"5\\n0 1 2 3 4\") == \"1\"\nassert solution(\"4\\n0 0 0 0\") == \"4\"\nassert solution(\"9\\n0 1 0 2 0 1 1 2 10\") == \"3\""
    },
    {
        "number": 3858,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 0\\n1 1\") == \"5\""
    },
    {
        "number": 3859,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"4\""
    },
    {
        "number": 3860,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5\\n6\\n3\") == \"4\"\nassert solution(\"5\\n3\\n5\") == \"4\""
    },
    {
        "number": 3861,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2\\n4 2\") == \"2\"\nassert solution(\"8\\n1 2 4 8 16 32 64 576\") == \"32\""
    },
    {
        "number": 3862,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"400 4\\n100 300 450 500\") == \"2\"\nassert solution(\"50 2\\n100 25\") == \"3\""
    },
    {
        "number": 3863,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 2\") == \"6\""
    },
    {
        "number": 3864,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"499122178\\n499122178\\n499122178\""
    },
    {
        "number": 3865,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2\\n\") == \"6\\n\"\nassert solution(\"3\\n\") == \"6669\\n\"\nassert solution(\"10\\n\") == \"-1\\n\""
    },
    {
        "number": 3866,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"1 4 3 2 0\\n1 0 2 4 3\\n2 4 0 1 3\"\nassert solution(\"2\") == \"-1\""
    },
    {
        "number": 3867,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 3 4\") == \"Yes\"\nassert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 4 3\") == \"No\""
    },
    {
        "number": 3868,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 6 5\\n1 1 0 5000\\n3 2 0 5500\\n2 2 0 6000\\n15 0 2 9000\\n9 0 1 7000\\n8 0 2 6500\") == \"24500\"\nassert solution(\"2 4 5\\n1 2 0 5000\\n2 1 0 4500\\n2 1 0 3000\\n8 0 1 6000\") == \"-1\""
    },
    {
        "number": 3869,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1 1 45\") == \"0.828427125\"\nassert solution(\"6 4 30\") == \"19.668384925\""
    },
    {
        "number": 3870,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500\\n\") == \"3000\"\nassert solution(\"3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\\n\") == \"992\"\nassert solution(\"2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\") == \"1\""
    },
    {
        "number": 3871,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n1 2 3 4 5 6 7 8 9\\n\") == \"6\"\nassert solution(\"2 2\\n1 2\\n0 0\\n2 1 -100 -100\\n\") == \"2\"\nassert solution(\"5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\\n\") == \"62\""
    },
    {
        "number": 3872,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"aaba\\nabaa\") == \"YES\"\nassert solution(\"aabb\\nabab\") == \"NO\""
    },
    {
        "number": 3873,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"NO\"\nassert solution(\"1\") == \"YES\\n0 0\""
    },
    {
        "number": 3874,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\nab\\nac\\ncd\\n1 2\") == \"Yes\\na?\\n\"\nassert solution(\"5 3\\ntest\\ntezt\\ntest.\\n.est\\ntes.\\n1 4 5\") == \"Yes\\n?es?\\n\"\nassert solution(\"4 4\\na\\nb\\nc\\ndd\\n1 2 3 4\") == \"No\\n\"\nassert solution(\"6 3\\n.svn\\n.git\\n....\\n...\\.n\\n..\\.n\\n.n\\n1 2 3\") == \"Yes\\n.???\\n\""
    },
    {
        "number": 3875,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 2 3\") == \"2\""
    },
    {
        "number": 3876,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\""
    },
    {
        "number": 3877,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"7 2 5\") == \"4\"\nassert solution(\"10 3 10\") == \"5\""
    },
    {
        "number": 3878,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5 6\\n1 2\\n1 3\\n2 3\\n2 5\\n3 4\\n4 5\") == \"2\\n2 3\"\nassert solution(\"4 4\\n1 2\\n1 3\\n1 4\\n3 4\") == \"1\\n1\""
    },
    {
        "number": 3879,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4\\n75 150 75 50\") == \"Yes\"\nassert solution(\"3\\n100 150 250\") == \"No\""
    },
    {
        "number": 3880,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2\\n50 50 50\") == \"150\"\nassert solution(\"2\\n-1 -100 -1\") == \"100\""
    },
    {
        "number": 3881,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 5\\nab a\\ncc c\\nca a\\nee c\\nff d\\n\") == \"4\"\nassert solution(\"2 8\\naf e\\ndc d\\ncc f\\nbc b\\nda b\\neb a\\nbb b\\nff c\\n\") == \"1\"\nassert solution(\"6 2\\nbb a\\nba a\\n\") == \"0\""
    },
    {
        "number": 3882,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"10\""
    },
    {
        "number": 3883,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 1\") == \"1.000000000000\"\nassert solution(\"1 3\") == \"-1\"\nassert solution(\"4 1\") == \"1.250000000000\""
    },
    {
        "number": 3884,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2\\n12\\n11 8\\n7 5\") == \"10.0000000000\"\nassert solution(\"3\\n1\\n1 4 1\\n2 5 3\") == \"-1\"\nassert solution(\"6\\n2\\n4 6 3 3 5 6\\n2 6 3 6 5 3\") == \"85.4800000000\""
    },
    {
        "number": 3885,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2\\n\") == \"0\\n\"\nassert solution(\"10\\n\") == \"4\\n\""
    },
    {
        "number": 3886,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 1\\n1 2\\n1 111111111111\") == \"Wh.\"\nassert solution(\"5\\n0 69\\n1 194\\n1 139\\n0 47\\n1 66\") == \"abdef\"\nassert solution(\"10\\n4 1825\\n3 75\\n3 530\\n4 1829\\n4 1651\\n3 187\\n4 584\\n4 255\\n4 774\\n2 474\") == \"Areyoubusy\""
    },
    {
        "number": 3887,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"? +? -? +? +? = 42\") == \"Possible\\n9 + 13 - 39 + 28 + 31 = 42\"\nassert solution(\"? -? = 1\") == \"Impossible\"\nassert solution(\"? = 1000000\") == \"Possible\\n1000000 = 1000000\""
    },
    {
        "number": 3888,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2 0 2\\n0\\n0\\n0\\n\") == \"7 4 5\""
    },
    {
        "number": 3889,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"6\\naabddc\") == \"Yes\"\nassert solution(\"3\\nabc\") == \"No\"\nassert solution(\"3\\njjj\") == \"Yes\""
    },
    {
        "number": 3890,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5 2\") == \"54\"\nassert solution(\"7 4\") == \"1728\""
    },
    {
        "number": 3891,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW\") == \"2 4\"\nassert solution(\"3 3\\nWWW\\nBWW\\nWWW\") == \"2 1\""
    },
    {
        "number": 3892,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5 7\\n2 4\\n5 1\\n2 3\\n3 4\\n4 1\\n5 3\\n3 5\") == \"10 9 10 10 9\"\nassert solution(\"2 3\\n1 2\\n1 2\\n1 2\") == \"5 6\""
    },
    {
        "number": 3893,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\") == \"2\"\nassert solution(\"1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\") == \"2\""
    },
    {
        "number": 3894,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 1\\n3 4\") == \"Kevin\"\nassert solution(\"1 2\\n3\") == \"Nicky\""
    },
    {
        "number": 3895,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 2 3\") == \"3\\n1 2 3\\n1 2 3\"\nassert solution(\"3\\n2 2 2\") == \"1\\n1 1 1\\n2\"\nassert solution(\"2\\n2 1\") == \"-1\""
    },
    {
        "number": 3896,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"11\") == \"6\"\nassert solution(\"01\") == \"2\"\nassert solution(\"1\") == \"1\""
    },
    {
        "number": 3897,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1\\n15\") == \"1\"\nassert solution(\"3\\n1 1 2\") == \"3\"\nassert solution(\"2\\n5 7\") == \"4\""
    },
    {
        "number": 3898,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 0 2\\n2 0 1\") == \"YES\"\nassert solution(\"2\\n1 0\\n0 1\") == \"YES\"\nassert solution(\"4\\n1 2 3 0\\n0 3 2 1\") == \"NO\""
    },
    {
        "number": 3899,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"6\\n8 10 9 9 8 10\\n1 1 1 1 1 1\") == \"9000\"\nassert solution(\"6\\n8 10 9 9 8 10\\n1 10 5 5 1 10\") == \"1160\""
    },
    {
        "number": 3900,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n2 3\\n1 4\\n1 4\\n2 1\") == \"6\"\nassert solution(\"8 6\\n5 6\\n5 7\\n5 8\\n6 2\\n2 1\\n7 3\\n1 3\\n1 4\") == \"1\""
    },
    {
        "number": 3901,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5\\n2 2 3 4 6\") == \"5\"\nassert solution(\"4\\n2 4 6 8\") == \"-1\"\nassert solution(\"3\\n2 6 9\") == \"4\""
    },
    {
        "number": 3902,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"abacabaca\") == \"3\\naca\\nba\\nca\"\nassert solution(\"abaca\") == \"0\""
    },
    {
        "number": 3903,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 5\\n11..2\\n#..22\\n#.323\\n.#333\") == \"2\"\nassert solution(\"1 5\\n1#2#3\") == \"-1\""
    },
    {
        "number": 3904,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"8\\n))((())(\") == \"6\"\nassert solution(\"3\\n(()\") == \"-1\""
    },
    {
        "number": 3905,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 3 5\\n4 4 0\\n1 3\\n3 2\\n3 1\") == \"1\\n3\"\nassert solution(\"4 5 4\\n2 1 0 3\\n4 3\\n3 2\\n1 2\\n1 4\\n1 3\") == \"4\\n1 2 3 4\""
    },
    {
        "number": 3906,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"8\""
    },
    {
        "number": 3907,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5 2\\n1 2\\n2 3\\n\") == \"5\"\nassert solution(\"100 3\\n1 2\\n2 1\\n3 1\\n\") == \"4\"\nassert solution(\"1 2\\n1 1\\n2 100\\n\") == \"100\""
    },
    {
        "number": 3908,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"aaabb\") == 6\nassert solution(\"usaco\") == 1\nassert solution(\"lol\") == 2"
    },
    {
        "number": 3909,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"2\""
    },
    {
        "number": 3910,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 4\\n2 5\\n3 6\") == \"1 2\\n2 1\\n1 2\"\n\nassert solution(\"4\\n1 4\\n2 5\\n3 6\\n4 7\") == \"1 2\\n2 1\\n1 2\\n2 1\"\n\nassert solution(\"5\\n1 4\\n2 5\\n3 6\\n4 7\\n5 8\") == \"1 2\\n2 1\\n1 2\\n2 1\\n1 2\"\n\nassert solution(\"1\\n1 1\") == \"1 1\"\n\nassert solution(\"2\\n1 2\\n2 1\") == \"1 2\\n2 1\"\n\nassert solution(\"2\\n1 1\\n2 2\") == \"1 1\\n2 2\"\n\nassert solution(\"2\\n1 2\\n2 3\") == \"1 2\\n2 1\"\n\nassert solution(\"2\\n1 3\\n2 2\") == \"1 2\\n2 1\"\n\nassert solution(\"2\\n1 2\\n2 2\") == \"1 2\\n2 1\"\n\nassert solution(\"2\\n1 2\\n2 3\") == \"1 2\\n2 1\"\n\nassert solution(\"2\\n1 3\\n2 2\") == \"1 2\\n2 1\"\n\nassert solution(\"2\\n1 2\\n2 3\") == \"1 2\\n2 1\"\n\nassert solution(\"2\\n1 3\\n2 2\") == \"1 2\\n2 1\"\n\nassert solution(\"2\\n1 2\\n2 3\") == \"1 2\\n2 1\"\n\nassert solution(\"2\\n1 3\\n2 2\") == \"1 2\\n2 1\"\n\nassert solution(\"2\\n1 2\\n2 3\") == \"1 2\\n2 1\"\n\nassert solution(\"2\\n1 3\\n2 2\") == \"1 2\\n2 1\"\n\nassert solution(\"2\\n1 2\\n2 3\") == \"1 2\\n2 1\"\n\nassert solution(\"2\\n1 3\\n2 2\") == \"1 2\\n2 1\"\n\nassert solution(\"2\\n1 2\\n2 3\") == \"1 2\\n2 1\"\n\nassert solution(\"2\\n1 3\\n2 2\") == \"1 2\\n2 1\"\n\nassert solution(\"2\\n1 2\\n2 3\") == \"1 2\\n2 1\"\n\nassert solution(\"2\\n1 3\\n2 2\") == \"1 2\\n2 1\"\n\nassert solution(\"2\\n1 2\\n2 3\") == \"1 2\\n2 1\"\n\nassert solution(\"2\\n1 3\\n2 2\") == \"1 2\\n2 1\"\n\nassert solution(\"2\\n1 2\\n2 3\") == \"1 2\\n2 1\"\n\nassert solution(\"2\\n1 3\\n2 2\") == \"1 2\\n2 1\"\n\nassert solution(\"2\\n1 2\\n2 3\") == \"1 2\\n2 1\"\n\nassert solution(\"2\\n1 3\\n2 2\") == \"1 2\\n2 1\"\n\nassert solution(\"2\\n1 2\\n2 3\") == \"1 2\\n2 1\"\n\nassert solution(\"2\\n1 3\\n2 2\") == \"1 2\\n2 1\"\n\nassert solution(\"2\\n1 2\\n2 3\") == \"1 2\\n2 1\"\n\nassert solution(\"2\\n1 3\\n2 2\") == \"1 2\\n2 1\"\n\nassert solution(\"2\\n1 2\\n2 3\") == \"1 2\\n2 1\"\n\nassert solution(\"2\\n1 3\\n2 2\") == \"1 2\\n2 "
    },
    {
        "number": 3911,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1\\n\") == \"1\\n\"\nassert solution(\"2\\n\") == \"2\\n\"\nassert solution(\"3\\n\") == \"2 1\\n\"\nassert solution(\"8\\n\") == \"4\\n\""
    },
    {
        "number": 3912,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"6\\naabaac\") == \"2\\naba aca\"\nassert solution(\"8\\n0rTrT022\") == \"1\\n02TrrT20\"\nassert solution(\"2\\naA\") == \"2\\na A\""
    },
    {
        "number": 3913,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4\\na**d\\n2\\abcd\\nacbd\\n\") == \"2\"\nassert solution(\"5\\lo*er\\n2\\lover\\nloser\\n\") == \"0\"\nassert solution(\"3\\a*a\\n2\\aaa\\aba\\n\") == \"1\""
    },
    {
        "number": 3914,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5 1 1\\n1 0 0 0 4\") == \"1\"\nassert solution(\"6 1 2\\n3 8 0 1 0 0\") == \"2\""
    },
    {
        "number": 3915,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"40\"\nassert solution(\"1 42\") == \"1\"\nassert solution(\"6 4\") == \"172\""
    },
    {
        "number": 3916,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2 1 4\") == \"5\"\nassert solution(\"4\\n3 1 4 4\") == \"6\"\nassert solution(\"4\\n3 1 4 1\") == \"6\"\nassert solution(\"5\\n3 1 4 1 5\") == \"11\""
    },
    {
        "number": 3917,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 0 0 -1\") == \"1\"\nassert solution(\"2\\n1 -1\") == \"2\""
    },
    {
        "number": 3918,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 0 0\\n1 2\\n2 3\") == \"2\"\nassert solution(\"2 1 0\\n1 2\\n2 2\") == \"0\"\nassert solution(\"2 5 7\\n3 4\\n14 4\") == \"1\""
    },
    {
        "number": 3919,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\""
    },
    {
        "number": 3920,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1 1 1 1 1 1\") == \"6\"\nassert solution(\"1 2 1 2 1 2\") == \"13\""
    },
    {
        "number": 3921,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5\\n2 3 4 6 9\") == \"4\"\nassert solution(\"9\\n1 2 3 5 6 7 8 9 10\") == \"4\""
    },
    {
        "number": 3922,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n2\n3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n\"\"\") == \"\"\"\nSURGERY COMPLETE\nIR\nR SrS\nS rr\nI lldll\nDONE\n\"\"\"\n\nassert solution(\"\"\"\n2\n4\n1 2 3 4 5 6 7 8 E 9\n10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45\nE 5 15 25 35 45 9 19 29 39 7 17 27 37 47 6 16 26 36 46 8 18 28 38 48\n\"\"\") == \"\"\"\nSURGERY FAILED\n\"\"\""
    },
    {
        "number": 3923,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"9 2 5\") == \"6 5 8 3 4 1 9 2 7\"\nassert solution(\"3 2 1\") == \"1 2 3\"\nassert solution(\"10 1 10\") == -1"
    },
    {
        "number": 3924,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n3 2 1\") == \"3\"\nassert solution(\"5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000\") == \"5000000000\"\nassert solution(\"3 2\\n1 0 1\") == \"2\"\nassert solution(\"4 4\\n2 8 4 1\") == \"4\""
    },
    {
        "number": 3925,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"bwwwbwwbw\") == \"5\"\nassert solution(\"bwwbwwb\") == \"3\""
    },
    {
        "number": 3926,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 5\\n3 2\\n1 2\\n.....\\n.***.\\n...**\\n*....\") == \"10\"\nassert solution(\"4 4\\n2 2\\n0 1\\n....\\n..*.\\n....\\n....\") == \"7\""
    },
    {
        "number": 3927,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 4 2 2\") == \"2\"\nassert solution(\"6\\n1 2 4 4 4 9\") == \"2\""
    },
    {
        "number": 3928,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 3 1\\naba\") == \"7\"\nassert solution(\"4 1 1\\nabcd\") == \"4\"\nassert solution(\"4 10 1\\naaaa\") == \"12\""
    },
    {
        "number": 3929,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 1\") == \"1\""
    },
    {
        "number": 3930,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n2 2 2 2\") == \"8\"\nassert solution(\"4 -3\\n3 -6 -3 12\") == \"3\""
    },
    {
        "number": 3931,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 5 3 1 8\\nBerBank University\\nUniversity BerMall\\nUniversity BerBank\") == \"11\"\nassert solution(\"4 2 1 300 1000\\na A\\nA aa\\naa AA\\nAA a\") == \"5\""
    },
    {
        "number": 3932,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 1 1 4\") == \"YES\"\nassert solution(\"5\\n1 1 5 2 1\") == \"NO\""
    },
    {
        "number": 3933,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5\\n10 5 0 -5 -10\") == \"-15\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"1\\n\"\nassert solution(\"3\\n5 1 -5\") == \"-5\\n\"\nassert solution(\"2\\n900 1000\") == \"1100\\n\""
    },
    {
        "number": 3934,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1 2\") == \"YES\"\nassert solution(\"3\\n1 2\\n2 3\") == \"NO\"\nassert solution(\"5\\n1 2\\n1 3\\n1 4\\n2 5\") == \"NO\"\nassert solution(\"6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\") == \"YES\""
    },
    {
        "number": 3935,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 2 3\") == \"1\\n2\\n\"\nassert solution(\"2\\n2 6\") == \"0\\n\""
    },
    {
        "number": 3936,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\naab\\nccb\") == \"6\""
    },
    {
        "number": 3937,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"100 100 5\\n5 2 1 2 1\") == \"YES\"\nassert solution(\"100 8 5\\n5 2 1 2 1\") == \"NO\"\nassert solution(\"100 100 7\\n1 2 3 4 5 6 7\") == \"NO\""
    },
    {
        "number": 3938,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"10 2\\n4 1 5 10\\n1 4 10 5\") == \"4\"\nassert solution(\"7 6\\n2 1 2 1\\n4 2 4 3\\n2 5 2 5\\n2 3 5 3\\n1 2 1 2\\n3 2 5 3\") == \"3\""
    },
    {
        "number": 3939,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5\\n5 3\\n1 5 2 6 1\\n1 6\\n6\\n3 2\\n1 2 3\\n4 3\\n3 1 2 3\\n10 3\\n1 2 3 4 5 6 7 8 9 10\") == \"no\\nyes\\nyes\\nno\\nyes\""
    },
    {
        "number": 3940,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n1 3\\n2 5\\n4 5\\n\") == \"2\\n1 0 2 1 0\\n\"\nassert solution(\"4 2\\n1 4\\n2 4\\n\") == \"3\\n5 2 0 1\\n\""
    },
    {
        "number": 3941,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n1 0 1\\n2 1 3\\n2 1 2\\n2 2 3\") == \"NO\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n1 2\\n2 1 3\") == \"YES\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n2 1 2\\n1 3\") == \"NO\""
    },
    {
        "number": 3942,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"(((#)((#)\") == \"1\\n2\"\nassert solution(\"()((#((#(#()\") == \"2\\n2\\n1\"\nassert solution(\"#\") == \"-1\"\nassert solution(\"(#)\") == \"-1\""
    },
    {
        "number": 3943,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"-1\\nxoxox\"\nassert solution(\"4 0\") == \"16\\noooo\"\nassert solution(\"0 4\") == \"-16\\nxxxx\""
    },
    {
        "number": 3944,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1 1 1\") == \"17\""
    },
    {
        "number": 3945,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n1 2 1\\n2 1 2\") == \"2 2 2\\n2 2 2\"\nassert solution(\"2 2\\n1 2\\n3 4\") == \"2 3\\n3 2\""
    },
    {
        "number": 3946,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 1\\n0 1\\n2 1\") == \"332748119\\n332748119\"\nassert solution(\"1 2\\n1\\n1\") == \"3\"\nassert solution(\"3 3\\n0 1 1\\n4 3 5\") == \"160955686\\n185138929\\n974061117\""
    },
    {
        "number": 3947,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5\\n3 1 5 2 6\") == \"11\"\nassert solution(\"5\\n1 2 3 4 5\") == \"6\"\nassert solution(\"5\\n1 100 101 100 1\") == \"102\""
    },
    {
        "number": 3948,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"14 2\\n1 4\\n2 4\\n3 4\\n4 13\\n10 5\\n11 5\\n12 5\\n14 5\\n5 13\\n6 7\\n8 6\\n13 6\\n9 6\") == \"Yes\"\nassert solution(\"3 1\\n1 3\\n2 3\") == \"No\""
    },
    {
        "number": 3949,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"\"\"3 3\n.#.\n###\n##.\"\"\") == \"1\"\n\nassert solution(\"\"\"4 2\n##\n.#\n.#\n##\"\"\") == \"-1\"\n\nassert solution(\"\"\"4 5\n....#\n####.\n.###.\n.#...\"\"\") == \"2\"\n\nassert solution(\"\"\"2 1\n.\n"
    },
    {
        "number": 3950,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n1 0 2 3\") == \"YES\\n1 2 2 3\"\nassert solution(\"3 10\\n10 10 10\") == \"YES\\n10 10 10\"\nassert solution(\"5 6\\n6 5 6 2 2\") == \"NO\"\nassert solution(\"3 5\\n0 0 0\") == \"YES\\n5 4 2\""
    },
    {
        "number": 3951,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4\\n2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2\") == \"4 3 6 2\"\nassert solution(\"1\\n42\") == \"42\"\nassert solution(\"2\\n1 1 1 1\") == \"1 1\""
    },
    {
        "number": 3952,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 1\\n1 2\\n1 3\") == \"3\"\nassert solution(\"3\\n1 1\\n2 1\\n3 1\") == \"6\"\nassert solution(\"4\\n2 1\\n2 2\\n3 1\\n3 2\") == \"6\""
    },
    {
        "number": 3953,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n.E.\\nE.E\\n.E.\") == \"1 1\\n2 2\\n3 3\"\nassert solution(\"3\\nEEE\\nE..\\nE.E\") == \"-1\"\nassert solution(\"5\\nEE.EE\\nE.EE.\\nE...E\\n.EE.E\\nEE.EE\") == \"3 3\\n1 3\\n2 2\\n4 4\\n5 3\""
    },
    {
        "number": 3954,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"10 2\\n10 -1 2 2 2 2 2 2 -1 10\") == \"32\"\nassert solution(\"5 10\\n-1 -1 -1 -1 -1\") == \"-1\""
    },
    {
        "number": 3955,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 1 2\\n1 1 1\") == \"3\"\nassert solution(\"4 2 3\\n1 2 4 8\") == \"79\""
    },
    {
        "number": 3956,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 3\") == \"7\\n7\\n4\\n7\\n7\""
    },
    {
        "number": 3957,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"7 2\\n1 5 6 2\\n1 3\\n3 2\\n4 5\\n3 7\\n4 3\\n4 6\") == \"6\"\nassert solution(\"9 3\\n3 2 1 6 5 9\\n8 9\\n3 2\\n2 7\\n3 4\\n7 6\\n4 5\\n2 1\\n2 8\") == \"9\""
    },
    {
        "number": 3958,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"0010100\") == \"3\\n3 1 3 4\\n3 2 5 6\\n1 7\"\nassert solution(\"111\") == \"-1\""
    },
    {
        "number": 3959,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n2 1 2\\n2 2 3\") == \"1\"\nassert solution(\"1 3\\n3 1 2 3\") == \"6\"\nassert solution(\"2 4\\n2 1 2\\n3 2 3 4\") == \"2\"\nassert solution(\"2 2\\n3 2 2 1\\n2 1 2\") == \"1\"\nassert solution(\"3 7\\n2 1 2\\n2 3 4\\n3 5 6 7\") == \"24\""
    },
    {
        "number": 3960,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 4 2 3 1\") == \"3\"\nassert solution(\"4\\n1 5 4 7\") == \"6\""
    },
    {
        "number": 3961,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1 2\") == \"4\"\nassert solution(\"4\\n1 1 2 3\") == \"20\"\nassert solution(\"5\\n1 1 1 1 1\") == \"62\""
    },
    {
        "number": 3962,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 1\\n1 1\\n1 1\") == \"6\"\nassert solution(\"4\\n1 2\\n2 1\\n3 5\\n5 3\") == \"15\"\nassert solution(\"1\\n5 6\") == \"7\""
    },
    {
        "number": 3963,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1\\n4\\n2\\n\") == \"1\"\nassert solution(\"2\\n1\\n4 4\\n2\\n\") == \"3\"\nassert solution(\"3\\n3 3\\n10 10 10\\n17\\n\") == \"6\""
    },
    {
        "number": 3964,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 3 3 100\\n1 1 1\") == \"10\"\nassert solution(\"3 6 5 1000000007\\n1 2 3\") == \"0\"\nassert solution(\"3 5 6 11\\n1 2 1\") == \"0\""
    },
    {
        "number": 3965,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2 2 3\\nintel\\ncode\\nch allenge\\n\") == \"YES\"\nassert solution(\"4\\n1 2 3 1\\na\\nbcdefghi\\njklmnopqrstu\\nwvxyz\\n\") == \"NO\"\nassert solution(\"4\\n13 11 15 15\\nto be or not to be that is the question\\nwhether tis nobler in the mind to suffer\\nthe slings and arrows of outrageous fortune\\nor to take arms against a sea of troubles\\n\") == \"YES\""
    },
    {
        "number": 3966,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3 1 5\") == \"26\"\nassert solution(\"1\\n10\") == \"10\""
    },
    {
        "number": 3967,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\n1 3 5\") == \"3\"\nassert solution(\"3 40\\n10 30 50\") == \"32\""
    },
    {
        "number": 3968,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"9 1\\n1 1\\n5 10\\n1 3\\n11 14\\n5 5\\n10 10\\n3 6\\n6 12\\n7 7\\n4 11\") == \"1 4 5 6 7 8 9\"\nassert solution(\"5 1\\n1 1\\n3 3\\n2 3\\n1 2\\n3 4\\n4 5\") == \"1 2 4\"\nassert solution(\"5 1\\n1 1\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5\") == \"1 2\""
    },
    {
        "number": 3969,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n2 1\\n1 2.0\\n1 3.100\") == \"1\"\nassert solution(\"3 3\\n1 5.0\\n2 5.5\\n3 6.0\") == \"0\"\nassert solution(\"6 3\\n1 14.284235\\n2 17.921382\\n1 20.328172\\n3 20.842331\\n1 25.790145\\n1 27.204125\") == \"2\""
    },
    {
        "number": 3970,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"6 2\\n2 3 6 5 4 10\") == \"3\""
    },
    {
        "number": 3971,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1 2\") == \"2\"\nassert solution(\"3\\n1 2 3\") == \"4\"\nassert solution(\"9\\n1 2 1 3 2 2 2 2 3\") == \"10\""
    },
    {
        "number": 3972,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"4\""
    },
    {
        "number": 3973,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 6\\n1 5 1 4\") == \"5\""
    },
    {
        "number": 3974,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"+-+-+\") == \"1\"\nassert solution(\"---\") == \"3\""
    },
    {
        "number": 3975,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\\n\") == \"10110\""
    },
    {
        "number": 3976,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\") == \"2\\n1 3\"\nassert solution(\"6 3 2\\n1 3 2 2 3 1\\n1 2 3\") == \"2\\n1 2\""
    },
    {
        "number": 3977,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 1 2\\n1 3\\n1 2\") == \"2\"\nassert solution(\"3 3 1\\n2\\n1 2\\n1 3\\n2 3\") == \"0\""
    },
    {
        "number": 3978,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"6\\n10 2 3 5 4 2\") == \"3\"\nassert solution(\"4\\n100 100 100 100\") == \"1\"\nassert solution(\"8\\n7 6 5 4 3 2 2 3\") == \"4\""
    },
    {
        "number": 3979,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n1 2\\n1 1\\n3 1 3 2\\n2 1 1\") == \"Yes\\n2\\n2 3\\n\"\nassert solution(\"6 5\\n2 1 2\\n2 1 2\\n3 1 2 3\\n2 1 5\\n2 4 4\\n2 4 4\") == \"Yes\\n0\\n\"\nassert solution(\"4 3\\n4 3 2 2 1\\n3 1 1 3\\n3 2 3 3\\n2 3 1\") == \"No\\n\""
    },
    {
        "number": 3980,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4\") == \"20\\n0 2 1 4 3\""
    },
    {
        "number": 3981,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n1 1\") == \"YES\"\nassert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\") == \"NO\""
    },
    {
        "number": 3982,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1\\n1\\n1\\n\") == \"1\\n3\\n7\\n\"\nassert solution(\"5\\n1\\n0\\n1\\n0\\n1\\n\") == \"1\\n4\\n10\\n22\\n43\\n\"\nassert solution(\"9\\n1\\n1\\n0\\n0\\n0\\n1\\n1\\n0\\n1\\n\") == \"1\\n3\\n10\\n24\\n51\\n109\\n213\\n421\\n833\\n\""
    },
    {
        "number": 3983,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\\n\") == \"First\\nSecond\\nFirst\\n\""
    },
    {
        "number": 3984,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"abba\") == \"Mike\\nAnn\\nAnn\\nMike\"\nassert solution(\"cba\") == \"Mike\\nMike\\nMike\\ndef solution(stdin: str) -> str:\\n\\tpass\""
    },
    {
        "number": 3985,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n8 3 8\\n1 2\\n2 3\") == \"0\"\nassert solution(\"3 2\\n8 12 8\\n1 2\\n2 3\") == \"2\""
    },
    {
        "number": 3986,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"7 4\") == \"ababacd\"\nassert solution(\"4 7\") == \"-1\""
    },
    {
        "number": 3987,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2 1 2\") == \"4\"\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\") == \"9\""
    },
    {
        "number": 3988,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2 2 1\\n1 1 2\\n2 2 1\") == \"2\\n-\\n2\\n+\"\nassert solution(\"6 6 3\\n2 2 6\\n1 4 5\\n2 3 4\\n1 4 1\\n1 3 1\\n2 2 3\") == \"6\\n++-\\n2\\n+-+\""
    },
    {
        "number": 3989,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1689\") == \"1869\"\nassert solution(\"18906\") == \"18690\"\nassert solution(\"1234567890\") == \"0\"\nassert solution(\"12345678901234567890\") == \"0\"\nassert solution(\"12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901"
    },
    {
        "number": 3990,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n1 3\\n3 4\\n\") == \"2\"\nassert solution(\"4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n\") == \"-1\"\nassert solution(\"5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n\") == \"3\""
    },
    {
        "number": 3991,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"2\\n4 7\") == \"3\"\nassert solution(\"3\\n4 3 1\") == \"9\""
    },
    {
        "number": 3992,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n4 8 5\") == \"9\"\nassert solution(\"5\\n3 10 2 1 5\") == \"2\"\nassert solution(\"4\\n0 5 15 10\") == \"0\"\nassert solution(\"1\\n1\") == \"-1\""
    },
    {
        "number": 3993,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"10 4 5\\n3 5 7 10\") == \"3\"\nassert solution(\"13 4 5\\n7 8 9 10\") == \"1\""
    },
    {
        "number": 3994,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"3\\n101\\n3 3\\n3 2\\n3 1\") == \"2\"\nassert solution(\"4\\n1111\\n3 4\\n5 2\\n3 1\\n3 2\") == \"4\"\nassert solution(\"6\\n011100\\n5 3\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\") == \"6\""
    },
    {
        "number": 3995,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"4 4\") == \"1111\"\nassert solution(\"5 3\") == \"01010\"\nassert solution(\"7 3\") == \"1011011\""
    },
    {
        "number": 3996,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"1\\n2\") == \"1/2\"\nassert solution(\"3\\n1 1 1\") == \"0/1\""
    },
    {
        "number": 3997,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\") == \"1 0 1 0 0\\n\"\nassert solution(\"5\\n9 7 8 6 5\\n1 1\\n2 1\\n3 1\\n4 1\") == \"4 3 2 1 0\\n\""
    },
    {
        "number": 3998,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"5\\n4 5 1 7 4\") == \"1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000\"\nassert solution(\"2\\n1 2\") == \"0\\n2\\n11\\n11\"\nassert solution(\"3\\n1 1 1\") == \"1\\n0\\n11\\n11\""
    },
    {
        "number": 3999,
        "checkpoint": "15B",
        "pass": 0,
        "answer": "assert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == \"1\""
    }
]