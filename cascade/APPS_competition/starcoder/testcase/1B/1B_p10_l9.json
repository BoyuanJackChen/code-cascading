[
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n2 3\") == \"5\"\nassert solution(\"8\\n( 2 ( 2 1 ) ) 3\") == \"9\"\nassert solution(\"4\\n( 12 3 )\") == \"36\"\nassert solution(\"6\\n( 2 ) ( 3 )\") == \"5\"\nassert solution(\"6\\n( ( 2 3 ) )\") == \"5\""
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"79\", \"Output should be 79, but got {}\".format(solution())"
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n2 3\\n\") == 5\nassert solution(\"8\\n( 2 ( 2 1 ) ) 3\\n\") == 9\nassert solution(\"4\\n( 12 3 )\\n\") == 36\nassert solution(\"6\\n( 2 ) ( 3 )\\n\") == 5\nassert solution(\"6\\n( ( 2 3 ) )\\n\") == 5\n"
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input1) == \"5\", \"Test 1 failed\"\nassert solution(sample_input2) == \"9\", \"Test 2 failed\"\nassert solution(sample_input3) == \"36\", \"Test 3 failed\"\nassert solution(sample_input4) == \"5\", \"Test 4 failed\"\nassert solution(sample_input5) == \"5\", \"Test 5 failed\"\n\nfrom typing import List"
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(2) == 5\nassert solution(2, 3) == 5\nassert solution(8) == 9\nassert solution(4, 12, 3) == 36\nassert solution(6, 2, 3) == 5"
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n2 3\\n\") == \"5\\n\"\nassert solution(\"8\\n( 2 ( 2 1 ) ) 3\\n\") == \"9\\n\"\nassert solution(\"4\\n( 12 3 )\\n\") == \"36\\n\"\nassert solution(\"6\\n( 2 ) ( 3 )\\n\") == \"5\\n\"\nassert solution(\"6\\n( ( 2 3 ) )\\n\") == \"5\\n\"\n"
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"5\"\nassert solution(\"Sample Input 1:\") == \"5\"\nassert solution(\"Sample Input 2:\") == \"9\"\nassert solution(\"Sample Input 3:\") == \"36\"\nassert solution(\"Sample Input 4:\") == \"5\"\nassert solution(\"Sample Input 5:\") == \"5\""
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n2 3\") == \"5\\n\", \"Test case 1\"\nassert solution(\"8\\n( 2 ( 2 1 ) ) 3\") == \"9\\n\", \"Test case 2\"\nassert solution(\"4\\n( 12 3 )\") == \"36\\n\", \"Test case 3\"\nassert solution(\"6\\n( 2 ) ( 3 )\") == \"5\\n\", \"Test case 4\"\nassert solution(\"6\\n( ( 2 3 ) )\") == \"5\\n\", \"Test case 5\"\n\nfrom typing import List"
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n2 3\") == \"5\", \"Test 1 failed\"\nassert solution(\"8\\n( 2 ( 2 1 ) ) 3\") == \"9\", \"Test 2 failed\"\nassert solution(\"4\\n( 12 3 )\") == \"36\", \"Test 3 failed\"\nassert solution(\"6\\n( 2 ) ( 3 )\") == \"5\", \"Test 4 failed\"\nassert solution(\"6\\n( ( 2 3 ) )\") == \"5\", \"Test 5 failed\""
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, \"Test case failed.\" for input, output in zip(stdin_content, stdout_content)\n"
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"009990001\") == \"3\"\nassert solution(\"29998\") == \"5\"\nassert solution(\"610\") == \"4\"\nassert solution(\"981\") == \"2\""
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Input doesn't match output.\""
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Output\", \"Incorrect output\""
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0\") == \"0\", \"Sabotage!\"\nassert solution(\"009990001\") == \"3\", \"Vandalism, perhaps. Nothing's actually been damaged.\"\nassert solution(\"29998\") == \"5\", \"It's a palindrome.\"\nassert solution(\"610\") == \"4\", \"It takes four steps.\"\nassert solution(\"981\") == \"2\", \"No.\""
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0\") == 0\nassert solution(\"009990001\") == 3\nassert solution(\"29998\") == 5\nassert solution(\"610\") == 4\nassert solution(\"981\") == 2"
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"009990001\") == \"3\"\nassert solution(\"29998\") == \"5\"\nassert solution(\"610\") == \"4\"\nassert solution(\"981\") == \"2\""
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"The output is '{solution(input())}', but expected output is '{expected_output}'.\""
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"009990001\") == \"3\"\nassert solution(\"29998\") == \"5\"\nassert solution(\"610\") == \"4\"\nassert solution(\"981\") == \"2\""
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0\") == \"0\", \"Test case 1 failed\"\nassert solution(\"009990001\") == \"3\", \"Test case 2 failed\"\nassert solution(\"29998\") == \"5\", \"Test case 3 failed\"\nassert solution(\"610\") == \"4\", \"Test case 4 failed\"\nassert solution(\"981\") == \"2\", \"Test case 5 failed\""
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42000\\n\") == \"seems legit\"\nassert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42001\\n\") == \"insufficient service\"\nassert solution(\"2\\n2017 11 0\\n2018 1 1000\\n\") == \"tampered odometer\"\nassert solution(\"2\\n2013 1 0\\n2013 2 0\\n\") == \"seems legit\""
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42000\\n\") == \"seems legit\"\nassert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42001\\n\") == \"insufficient service\"\nassert solution(\"2\\n2017 11 0\\n2018 1 1000\\n\") == \"tampered odometer\"\nassert solution(\"2\\n2013 1 0\\n2013 2 0\\n\") == \"seems legit\""
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42000\") == \"seems legit\"\nassert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42001\") == \"insufficient service\"\nassert solution(\"2\\n2017 11 0\\n2018 1 1000\") == \"tampered odometer\"\nassert solution(\"2\\n2013 1 0\\n2013 2 0\") == \"seems legit\""
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"seems legit\"\nassert solution(2) == \"insufficient service\"\nassert solution(4) == \"tampered odometer\""
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\nassert solution(sample_input_3) == sample_output_3\nassert solution(sample_input_4) == sample_output_4"
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n2017 4 0\\n2017 8 12000\\n2018 8 42000\\n') =='seems legit'\nassert solution('3\\n2017 4 0\\n2017 8 12000\\n2018 8 42001\\n') == 'insufficient service'\nassert solution('2\\n2017 11 0\\n2018 1 1000\\n') == 'tampered odometer'\nassert solution('2\\n2013 1 0\\n2013 2 0\\n') =='seems legit'"
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2\nassert solution(sample_input_3) == expected_output_3\nassert solution(sample_input_4) == expected_output_4\n\nsample_input_1 = \"\"\"\n3\n2017 4 0\n2017 8 12000\n2018 8 42000\n\"\"\"\n\nsample_input_2 = \"\"\"\n3\n2017 4 0\n2017 8 12000\n2018 8 42001\n\"\"\"\n\nsample_input_3 = \"\"\"\n2\n2017 11 0\n2018 1 1000\n\"\"\"\n\nsample_input_4 = \"\"\"\n2\n2013 1 0\n2013 2 0\n\"\"\"\n\nexpected_output_1 = \"seems legit\"\nexpected_output_2 = \"insufficient service\"\nexpected_output_3 = \"tampered odometer\"\nexpected_output_4 = \"seems legit\""
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3\n2017 4 0\n2017 8 12000\n2018 8 42000\n\"\"\") == \"seems legit\"\n\nassert solution(\"\"\"\n3\n2017 4 0\n2017 8 12000\n2018 8 42001\n\"\"\") == \"insufficient service\"\n\nassert solution(\"\"\"\n2\n2017 11 0\n2018 1 1000\n\"\"\") == \"tampered odometer\"\n\nassert solution(\"\"\"\n2\n2013 1 0\n2013 2 0\n\"\"\") == \"seems legit\""
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42000\\n\") == \"seems legit\"\nassert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42001\\n\") == \"insufficient service\"\nassert solution(\"2\\n2017 11 0\\n2018 1 1000\\n\") == \"tampered odometer\"\nassert solution(\"2\\n2013 1 0\\n2013 2 0\\n\") == \"seems legit\""
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42000\") == \"seems legit\\n\"\nassert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42001\") == \"insufficient service\\n\"\nassert solution(\"2\\n2017 11 0\\n2018 1 1000\") == \"tampered odometer\\n\"\nassert solution(\"2\\n2013 1 0\\n2013 2 0\") == \"seems legit\\n\""
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Sample Input 1\\n4\\n1 2\\n0 2 3\\n0 1\\n1\\nSample Output 1\\n3\\n\\nSample Input 2\\n5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\nSample Output 2\\n2\\n\\nSample Input 3\\n6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\nSample Output 3\\n2\\n\\nSample Input 4\\n4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\nSample Output 4\\n4\") == \"3\\n2\\n\"\nassert solution(\"Sample Input 1\\n5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\nSample Output 2\\n2\\n\\nSample Input 3\\n6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\nSample Output 3\\n2\\n\\nSample Input 4\\n4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\nSample Output 4\\n4\") == \"2\\n\""
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1 2\\n0 2 3\\n0 1\\n1\\n2\\n\") == \"3\"\nassert solution(\"5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\n\") == \"2\"\nassert solution(\"6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\n\") == \"2\"\nassert solution(\"4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\n\") == \"4\""
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('Sample Input 1') == '3'\nassert solution('Sample Input 2') == '2'\nassert solution('Sample Input 3') == '2'\nassert solution('Sample Input 4') == '4'"
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n1 2\\n0 2 3\\n0 1\\n1\\n') == '3\\n'\nassert solution('5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\n') == '2\\n'\nassert solution('6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\n') == '2\\n'\nassert solution('4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\n') == '4\\n'"
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 2\\n0 2 3\\n0 1\\n1\\n4\\n2 3\\n2 3 4\\n0 1\\n0 1\\n0 1\\n1\\n3\\n3\\n2\\n4\\n2 3\\n2 4\\n0 1\\n0 1\\n0 1\\n1\\n3\\n2\\n4\\n2 3\\n2 4\\n0 1\\n0 1\\n0 1\\n1\\n4\\n2 3\\n2 4\\n0 1\\n0 1\\n0 1\\n1\\n3\\n2\\n4\\n2 3\\n2 4\\n0 1\\n0 1\\n0 1\\n1\\n4\") == \"3\"\nassert solution(\"5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\n1\\n3\\n2\\n4\\n2 3\\n2 4\\n0 1\\n0 1\\n0 1\\n1\\n4\\n2 3\\n2 4\\n0 1\\n0 1\\n0 1\\n1\\n3\\n2\\n4\\n2 3\\n2 4\\n0 1\\n0 1\\n0 1\\n1\\n3\\n2\\n4\\n2 3\\n2 4\\n0 1\\n0 1\\n0 1\\n1\\n4\\n2 3\\n2 4\\n0 1\\n0 1\\n0 1\\n1\\n3\\n2\\n4\\n2 3\\n2 4\\n0 1\\n0 1\\n0 1\\n1\\n4\\n2 3\\n2 4\\n0 1\\n0 1\\n0 1\\n1\\n3\\n2\\n4\\n2 3\\n2 4\\n0 1\\n0 1\\n0 1\\n1\\n4\\n2 3\\n2 4\\n0 1\\n0 1\\n0 1\\n1\\n3\\n2\\n4\\n2 3\\n2 4\\n0 1\\n0 1\\n0 1\\n1\\n4\\n2 3\\n2 4\\n0 1\\n0 1\\n0 1\\n1\\n3\\n2\\n4\\n2 3\\n2 4\\n0 1\\n0 1\\n0 1\\n1\\n4\") == \"2\"\nassert solution(\"6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\n4\\n2 3\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\n2\\n3\\"
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == sample_output, f\"Expected {sample_output}, got {solution(sample_input)}\""
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"2\"\nassert solution(4) == \"4\"\nassert solution(5) == \"2\"\nassert solution(6) == \"2\""
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\\n0 2 3\\n0 1\\n1\\n2\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\n\") == \"3\\n\"\nassert solution(\"2\\n3\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\n\") == \"2\\n\"\nassert solution(\"3\\n4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\n\") == \"2\\n\"\nassert solution(\"4\\n5\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\n1 3 5\\n2 4\\n\") == \"2\\n\""
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input1) == sample_output1, \"Test 1 failed\"\nassert solution(sample_input2) == sample_output2, \"Test 2 failed\"\nassert solution(sample_input3) == sample_output3, \"Test 3 failed\"\nassert solution(sample_input4) == sample_output4, \"Test 4 failed\""
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, but got {solution(stdin)}\"\n\nfrom typing import List"
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r').read()) == '3'"
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\nBLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000\\n\") == \"3\\n\"\nassert solution(\"4\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000\\n\") == \"IMPOSSIBLE\\n\"\nassert solution(\"2\\nBLUE 1 4000\\nRED 4002 10000\\n\") == \"IMPOSSIBLE\\n\"\nassert solution(\"1\\nRED 5001 10000\\n\") == \"2\\n\"\nassert solution(\"1\\nBLUE 1 5000\\n\") == \"2\\n\"\n"
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\nBLUE 1 5000\\nRED 5001 10000\\n\") == \"2\\n\"\nassert solution(\"3\\nBLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000\\n\") == \"3\\n\"\nassert solution(\"4\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000\\n\") == \"IMPOSSIBLE\\n\"\n"
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\nBLUE 1 5000\\nRED 5001 10000\\n\") == \"2\\n\"\nassert solution(\"3\\nBLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000\\n\") == \"3\\n\"\nassert solution(\"4\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000\\n\") == \"IMPOSSIBLE\\n\"\nassert solution(\"2\\nBLUE 1 4000\\nRED 4002 10000\\n\") == \"IMPOSSIBLE\\n\"\n"
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\nBLUE 1 5000\\nRED 5001 10000\\n\") == \"2\\n\"\nassert solution(\"3\\nBLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000\\n\") == \"3\\n\"\nassert solution(\"4\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000\\n\") == \"IMPOSSIBLE\\n\""
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\nBLUE 1 5000\\nRED 5001 10000\") == \"2\"\nassert solution(\"3\\nBLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000\") == \"3\"\nassert solution(\"4\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000\") == \"IMPOSSIBLE\"\n\nfrom typing import List"
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\nBLUE 1 5000\\nRED 5001 10000\") == \"2\\n\"\nassert solution(\"3\\nBLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000\") == \"3\\n\"\nassert solution(\"4\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000\") == \"IMPOSSIBLE\\n\"\nassert solution(\"2\\nBLUE 1 4000\\nRED 4002 10000\") == \"IMPOSSIBLE\\n\"\n"
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\nBLUE 1 5000\\nRED 5001 10000\\n\") == \"2\"\nassert solution(\"3\\nBLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000\\n\") == \"3\"\nassert solution(\"4\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000\\n\") == \"IMPOSSIBLE\"\nassert solution(\"2\\nBLUE 1 4000\\nRED 4002 10000\\n\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\nBLUE 1 5000\\nRED 5001 10000\") == \"2\\n\"\nassert solution(\"3\\nBLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000\") == \"3\\n\"\nassert solution(\"4\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000\") == \"IMPOSSIBLE\\n\"\nassert solution(\"2\\nBLUE 1 4000\\nRED 4002 10000\") == \"IMPOSSIBLE\\n\""
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Sample Input 1:\\n2\\nBLUE 1 5000\\nRED 5001 10000\\nSample Output 1:\\n2\\n\\nSample Input 2:\\n3\\nBLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000\\nSample Output 2:\\n3\\n\\nSample Input 3:\\n4\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000\\nSample Output 3:\\nIMPOSSIBLE\\n\\nSample Input 4:\\n2\\nBLUE 1 4000\\nRED 4002 10000\\nSample Output 4:\\nIMPOSSIBLE\") == \"2\\n\\n3\\nIMPOSSIBLE\""
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Output the weight of a maximal factoring of the input string.\""
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\"\nassert solution(\"GGGGGGGGG\") == \"1\"\nassert solution(\"PRIME\") == \"5\"\nassert solution(\"BABBABABBABBA\") == \"6\""
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('PRATTATTATTIC') == '6', 'Input 1 failed'\nassert solution('GGGGGGGGG') == '1', 'Input 2 failed'\nassert solution('PRIME') == '5', 'Input 3 failed'\nassert solution('BABBABABBABBA') == '6', 'Input 4 failed'"
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('PRATTATTATTIC') == '6', 'Your code is not correct. The solution should return \"6\".'\n\nassert solution('GGGGGGGGG') == '1', 'Your code is not correct. The solution should return \"1\".'\n\nassert solution('PRIME') == '5', 'Your code is not correct. The solution should return \"5\".'\n\nassert solution('BABBABABBABBA') == '6', 'Your code is not correct. The solution should return \"6\".'"
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"PRATTATTATTIC\") == 6\nassert solution(\"GGGGGGGGG\") == 1\nassert solution(\"PRIME\") == 5\nassert solution(\"BABBABABBABBA\") == 6"
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\", \"Solution 1 failed\"\nassert solution(\"GGGGGGGGG\") == \"1\", \"Solution 2 failed\"\nassert solution(\"PRIME\") == \"5\", \"Solution 3 failed\"\nassert solution(\"BABBABABBABBA\") == \"6\", \"Solution 4 failed\""
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\"\nassert solution(\"GGGGGGGGG\") == \"1\"\nassert solution(\"PRIME\") == \"5\"\nassert solution(\"BABBABABBABBA\") == \"6\""
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"PRATTATTATTIC\") == 6\nassert solution(\"GGGGGGGGG\") == 1\nassert solution(\"PRIME\") == 5\nassert solution(\"BABBABABBABBA\") == 6\n"
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\", \"Test case 1: (DOO)^2\"\nassert solution(\"GGGGGGGGG\") == \"1\", \"Test case 2: 1\"\nassert solution(\"PRIME\") == \"5\", \"Test case 3: (POP)^2\"\nassert solution(\"BABBABABBABBA\") == \"6\", \"Test case 4: (AB)^2A\""
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\", \"Test 1\"\nassert solution(\"GGGGGGGGG\") == \"1\", \"Test 2\"\nassert solution(\"PRIME\") == \"5\", \"Test 3\"\nassert solution(\"BABBABABBABBA\") == \"6\", \"Test 4\"\n"
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input1) == output1, f\"Solution does not match expected output for {input1}\"\nassert solution(input2) == output2, f\"Solution does not match expected output for {input2}\"\nassert solution(input3) == output3, f\"Solution does not match expected output for {input3}\"\nassert solution(input4) == output4, f\"Solution does not match expected output for {input4}\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\\n\") == \"0\\n\"\nassert solution(\"D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\\n\") == \"1\\n\"\nassert solution(\"I 1 X\\nD 1\\nE\\nE\\n\") == \"0\\n\"\nassert solution(\"I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\\n\") == \"0\\n\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\\n') == '0\\n', \"Test 1 failed\"\nassert solution('D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\\n') == '1\\n', \"Test 2 failed\"\nassert solution('I 1 X\\nD 1\\nE\\nE\\n') == '0\\n', \"Test 3 failed\"\nassert solution('I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\\n') == '0\\n', \"Test 4 failed\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"tests/test_cases/test_01.txt\", \"r\").read()) == \"0\"\nassert solution(open(\"tests/test_cases/test_02.txt\", \"r\").read()) == \"1\"\nassert solution(open(\"tests/test_cases/test_03.txt\", \"r\").read()) == \"0\"\nassert solution(open(\"tests/test_cases/test_04.txt\", \"r\").read()) == \"0\"\nassert solution(open(\"tests/test_cases/test_05.txt\", \"r\").read()) == \"0\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\\n') == '0\\n'\nassert solution('D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\\n') == '1\\n'\nassert solution('I 1 X\\nD 1\\nE\\nE\\n') == '0\\n'\nassert solution('I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\\n') == '0\\n'"
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\\n') == '0\\n'\nassert solution('D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\\n') == '1\\n'\nassert solution('I 1 X\\nD 1\\nE\\nE\\n') == '0\\n'\nassert solution('I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\\n') == '0\\n'"
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"0\", \"Test 1 failed.\"\nassert solution(\"D 1\") == \"0\", \"Test 2 failed.\"\nassert solution(\"D 2\\nD 1\\nE\") == \"1\", \"Test 3 failed.\"\nassert solution(\"I 1 X\\nD 1\\nE\") == \"0\", \"Test 4 failed.\"\nassert solution(\"I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\") == \"0\", \"Test 5 failed.\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\\n\") == \"0\\n\"\nassert solution(\"D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\\n\") == \"1\\n\"\nassert solution(\"I 1 X\\nD 1\\nE\\nE\\n\") == \"0\\n\"\nassert solution(\"I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\\n\") == \"0\\n\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\") == 0, \"Error: Empty input should return 0.\"\nassert solution(\"D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\\n\") == 0, \"Error: Del operation should not affect the output.\"\nassert solution(\"D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\\n\") == 1, \"Error: Del operation should affect the output.\"\nassert solution(\"I 1 X\\nD 1\\nE\\nE\\n\") == 0, \"Error: Ins operation should not affect the output.\"\nassert solution(\"I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\\n\") == 0, \"Error: Ins operation should affect the output.\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\\n') == '0\\n'\nassert solution('D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\\n') == '1\\n'\nassert solution('I 1 X\\nD 1\\nE\\nE\\n') == '0\\n'\nassert solution('I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\\n') == '0\\n'"
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 0 1 0 0 0') == '300'\nassert solution('5 0 1 0 1 0') == '1900'\nassert solution('6 0 1 1 0 0') == '2300'\nassert solution('10 399 0 0 0 0') == '399'\n"
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 0 1 0 0 0\") == \"300\"\nassert solution(\"5 0 1 0 1 0\") == \"1900\"\nassert solution(\"6 0 1 1 0 0\") == \"2300\"\nassert solution(\"10 399 0 0 0 0\") == \"399\""
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin='4 0 1 0 0 0') == '300'\nassert solution(stdin='5 0 1 0 1 0') == '1900'\nassert solution(stdin='6 0 1 1 0 0') == '2300'\nassert solution(stdin='10 399 0 0 0 0') == '399'"
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output"
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 0 1 0 0 0\") == \"300\\n\", \"Test 1 failed\"\nassert solution(\"5 0 1 0 1 0\") == \"1900\\n\", \"Test 2 failed\"\nassert solution(\"6 0 1 1 0 0\") == \"2300\\n\", \"Test 3 failed\"\nassert solution(\"10 399 0 0 0 0\") == \"399\\n\", \"Test 4 failed\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 0 1 0 0 0\") == \"300\"\nassert solution(\"5 0 1 0 1 0\") == \"1900\"\nassert solution(\"6 0 1 1 0 0\") == \"2300\"\nassert solution(\"10 399 0 0 0 0\") == \"399\""
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 0 1 0 0 0\") == \"300\"\nassert solution(\"5 0 1 0 1 0\") == \"1900\"\nassert solution(\"6 0 1 1 0 0\") == \"2300\"\nassert solution(\"10 399 0 0 0 0\") == \"399\""
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(4, 0, 1, 0, 0, 0) == 300\nassert solution(5, 0, 1, 0, 1, 0) == 1900\nassert solution(6, 0, 1, 1, 0, 0) == 2300\nassert solution(10, 399, 0, 0, 0, 0) == 399"
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 0 1 0 0 0\") == 300\nassert solution(\"5 0 1 0 1 0\") == 1900\nassert solution(\"6 0 1 1 0 0\") == 2300\nassert solution(\"10 399 0 0 0 0\") == 399"
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 0 1 0 0 0\") == 300, \"Test case 1 failed\"\nassert solution(\"5 0 1 0 1 0\") == 1900, \"Test case 2 failed\"\nassert solution(\"6 0 1 1 0 0\") == 2300, \"Test case 3 failed\"\nassert solution(\"10 399 0 0 0 0\") == 399, \"Test case 4 failed\""
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('Sample Input 1') == '2'\nassert solution('Sample Input 2') == '2'\nassert solution('Sample Input 3') == '2'\nassert solution('Sample Input 4') == '2'"
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"2\\n\"\nassert solution(open(\"input2.txt\", \"r\")) == \"2\\n\"\nassert solution(open(\"input3.txt\", \"r\")) == \"2\\n\"\nassert solution(open(\"input4.txt\", \"r\")) == \"2\\n\""
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 10\\n1 12\\n1 13\\n') == '2\\n'\nassert solution('2 10\\n1 5\\n1 12\\n') == '2\\n'\nassert solution('2 10\\n1 5\\n1 4\\n') == '2\\n'"
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 10\\n1 12\\n1 13\") == \"2\"\nassert solution(\"2 10\\n1 5\\n1 12\") == \"2\"\nassert solution(\"2 10\\n1 5\\n1 4\") == \"2\"\nassert solution(\"2 10\\n1 5\\n4 1\") == \"2\"\nassert solution(\"1 100000\\n\") == \"100000\"\n"
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 10\\n1 12\\n1 13\\n\") == \"2\\n\"\nassert solution(\"2 10\\n1 5\\n1 12\\n\") == \"2\\n\"\nassert solution(\"2 10\\n1 5\\n1 4\\n\") == \"2\\n\"\n"
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_1) == \"2\", \"Test 1 failed\"\nassert solution(input_2) == \"2\", \"Test 2 failed\"\nassert solution(input_3) == \"2\", \"Test 3 failed\"\nassert solution(input_4) == \"2\", \"Test 4 failed\""
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == \"2\\n\"\nassert solution(sample_input_2) == \"2\\n\"\nassert solution(sample_input_3) == \"2\\n\"\nassert solution(sample_input_4) == \"2\\n\"\n\nsample_input_1 = \"\"\"\n2 10\n1 12\n1 13\n\"\"\"\nsample_input_2 = \"\"\"\n2 10\n1 5\n1 12\n\"\"\"\nsample_input_3 = \"\"\"\n2 10\n1 5\n1 4\n\"\"\"\nsample_input_4 = \"\"\"\n2 10\n1 5\n4 1\n\"\"\""
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 10\\n1 12\\n1 13\") == \"2\\n\"\nassert solution(\"2 10\\n1 5\\n1 12\") == \"2\\n\"\nassert solution(\"2 10\\n1 5\\n1 4\") == \"2\\n\""
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    2 10\n    1 12\n    1 13\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    2 10\n    1 5\n    1 12\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    2 10\n    1 5\n    1 4\n    \"\"\"\n) == \"2\""
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 10\\n1 12\\n1 13\") == \"2\\n\"\nassert solution(\"2 10\\n1 5\\n1 12\") == \"2\\n\"\nassert solution(\"2 10\\n1 5\\n1 4\") == \"2\\n\""
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n10 10 5\\n10 20 5\\n20 10 5\\n20 20 5\") == \"28\"\nassert solution(\"4\\n10 10 5\\n10 20 1\\n20 10 12\\n20 20 8\") == \"36.2842712475\"\nassert solution(\"6\\n1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\") == \"28.970562748\"\nassert solution(\"8\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8\") == \"32\""
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n    4\n    10 10 5\n    10 20 5\n    20 10 5\n    20 20 5\n\"\"\") == \"28\"\n\nassert solution(\"\"\"\n    4\n    10 10 5\n    10 20 1\n    20 10 12\n    20 20 8\n\"\"\") == \"36.2842712475\"\n\nassert solution(\"\"\"\n    6\n    1 1 15\n    5 1 100\n    9 1 56\n    1 5 1\n    5 5 33\n    9 5 3\n\"\"\") == \"28.970562748\"\n\nassert solution(\"\"\"\n    8\n    4 4 1\n    4 6 1\n    4 8 1\n    6 6 14\n    8 4 1\n    8 6 1\n    8 8 1\n    99 6 -8\n\"\"\") == \"32\"\n\nassert solution(\"\"\"\n    5\n    \"\"\") == \"IMPOSSIBLE\"\n\nassert solution(\"\"\"\n    7\n    \"\"\") == \"IMPOSSIBLE\"\n\nassert solution(\"\"\"\n    0\n    \"\"\") == \"IMPOSSIBLE\"\n\nassert solution(\"\"\"\n    1\n    \"\"\") == \"IMPOSSIBLE\"\n\nassert solution(\"\"\"\n    1000\n    \"\"\") == \"IMPOSSIBLE\"\n\nassert solution(\"\"\"\n    -5\n    \"\"\") == \"IMPOSSIBLE\"\n\nassert solution(\"\"\"\n    -1000\n    \"\"\") == \"IMPOSSIBLE\"\n\nassert solution(\"\"\"\n    1 1 1\n    1 1 1\n    1 1 1\n    \"\"\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n10 10 5\\n10 20 5\\n20 10 5\\n20 20 5\\n') == '28\\n'\nassert solution('4\\n10 10 5\\n10 20 1\\n20 10 12\\n20 20 8\\n') == '36.2842712475\\n'\nassert solution('6\\n1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\\n') == '28.970562748\\n'\nassert solution('8\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8\\n') == '32\\n'\n\nimport math"
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n10 10 5\\n10 20 5\\n20 10 5\\n20 20 5\") == 28\nassert solution(\"4\\n10 10 5\\n10 20 1\\n20 10 12\\n20 20 8\") == 36.2842712475\nassert solution(\"6\\n1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\") == 28.970562748\nassert solution(\"8\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8\") == 32"
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n10 10 5\\n10 20 5\\n20 10 5\\n20 20 5\") == 28\nassert solution(\"4\\n10 10 5\\n10 20 1\\n20 10 12\\n20 20 8\") == 36.2842712475\nassert solution(\"6\\n1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\") == 28.970562748\nassert solution(\"8\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8\") == 32\n"
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n4\n10 10 5\n10 20 5\n20 10 5\n20 20 5\n\"\"\"\n) == 28\n\nassert solution(\n    \"\"\"\n4\n10 10 5\n10 20 1\n20 10 12\n20 20 8\n\"\"\"\n) == 36.2842712475\n\nassert solution(\n    \"\"\"\n6\n1 1 15\n5 1 100\n9 1 56\n1 5 1\n5 5 33\n9 5 3\n\"\"\"\n) == 28.970562748\n\nassert solution(\n    \"\"\"\n8\n4 4 1\n4 6 1\n4 8 1\n6 6 14\n8 4 1\n8 6 1\n8 8 1\n99 6 -8\n\"\"\"\n) == 32"
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n10 10 5\\n10 20 5\\n20 10 5\\n20 20 5\\n\") == \"28\"\nassert solution(\"4\\n10 10 5\\n10 20 1\\n20 10 12\\n20 20 8\\n\") == \"36.2842712475\"\nassert solution(\"6\\n1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\\n\") == \"28.970562748\"\nassert solution(\"8\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8\\n\") == \"32\""
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n10 10 5\\n10 20 5\\n20 10 5\\n20 20 5\") == \"28\"\nassert solution(\"4\\n10 10 5\\n10 20 1\\n20 10 12\\n20 20 8\") == \"36.2842712475\"\nassert solution(\"6\\n1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\") == \"28.970562748\"\nassert solution(\"8\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8\") == \"32\""
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n10 10 5\\n10 20 5\\n20 10 5\\n20 20 5\\n\") == \"28\\n\"\nassert solution(\"4\\n10 10 5\\n10 20 1\\n20 10 12\\n20 20 8\\n\") == \"36.2842712475\\n\"\nassert solution(\"6\\n1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\\n\") == \"28.970562748\\n\"\nassert solution(\"8\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8\\n\") == \"32\\n\""
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n10 10 5\\n10 20 5\\n20 10 5\\n20 20 5\") == \"28\"\nassert solution(\"4\\n10 10 5\\n10 20 1\\n20 10 12\\n20 20 8\") == \"36.2842712475\"\nassert solution(\"6\\n1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\") == \"28.970562748\"\nassert solution(\"8\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8\") == \"32\""
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 3 9 5\n2 2 6 8\n4 8 9 3\n''') == '3\\n'\n\nassert solution('''\n3\n5 2 7 10\n7 4 4 10\n2 4 10 8\n''') == '1\\n'\n\nassert solution('''\n3\n2 1 6 5\n2 5 5 4\n5 1 7 7\n''') == '1\\n'\n\nassert solution('''\n2\n-1 -2 -1 -1\n-1 2 -1 -1\n''') == '1\\n'"
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 3 9 5\\n2 2 6 8\\n4 8 9 3\") == \"3\"\nassert solution(\"3\\n5 2 7 10\\n7 4 4 10\\n2 4 10 8\") == \"1\"\nassert solution(\"3\\n2 1 6 5\\n2 5 5 4\\n5 1 7 7\") == \"1\"\nassert solution(\"2\\n-1 -2 -1 -1\\n-1 2 -1 -1\") == \"1\""
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Test Failed\""
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n1 3 9 5\\n2 2 6 8\\n4 8 9 3\\n') == '3\\n'\nassert solution('3\\n5 2 7 10\\n7 4 4 10\\n2 4 10 8\\n') == '1\\n'\nassert solution('3\\n2 1 6 5\\n2 5 5 4\\n5 1 7 7\\n') == '1\\n'\nassert solution('2\\n-1 -2 -1 -1\\n-1 2 -1 -1\\n') == '1\\n'"
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"Output the number of distinct points for which there is at least one pair of line segments that intersects or touches at this point. If there are infinitely many such points, output -1.\""
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '3'\nassert solution() == '1'\nassert solution() == '1'\nassert solution() == '1'\nassert solution() == '1'"
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"Output: 1\\n\", \"Incorrect output. Should be 1.\""
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 3 9 5\\n2 2 6 8\\n4 8 9 3\") == \"3\\n\"\nassert solution(\"3\\n5 2 7 10\\n7 4 4 10\\n2 4 10 8\") == \"1\\n\"\nassert solution(\"3\\n2 1 6 5\\n2 5 5 4\\n5 1 7 7\") == \"1\\n\"\nassert solution(\"2\\n-1 -2 -1 -1\\n-1 2 -1 -1\") == \"1\\n\"\nassert solution(\"4\\n1 2 3 4\\n-1 0 1 0\\n1 0 0 -1\\n0 -1 1 0\") == \"-1\\n\""
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"3\\n\", \"Incorrect output\""
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"Output the number of distinct points for which there is at least one pair of line segments that intersects or touches at this point. If there are infinitely many such points, output -1.\", \"The function should return the expected output.\""
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(10) == 10\nassert solution(55) == 55\nassert solution(101) == -1\nassert solution(1234321) == 94708"
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(10) == 10\nassert solution(55) == 55\nassert solution(101) == -1\nassert solution(1234321) == 94708"
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10\") == 10\nassert solution(\"55\") == 55\nassert solution(\"101\") == -1\nassert solution(\"1234321\") == 94708"
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(10) == 10\nassert solution(55) == 55\nassert solution(101) == -1\nassert solution(1234321) == 94708"
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(10) == 10\nassert solution(55) == 55\nassert solution(101) == -1\nassert solution(1234321) == 94708"
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(10) == 10, \"Invalid Output for sample input 1\"\nassert solution(55) == 55, \"Invalid Output for sample input 2\"\nassert solution(101) == -1, \"Invalid Output for sample input 3\"\nassert solution(1234321) == 94708, \"Invalid Output for sample input 4\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(10) == 10\nassert solution(55) == 55\nassert solution(101) == -1\nassert solution(1234321) == 94708"
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(10) == \"10\\n\"\nassert solution(55) == \"55\\n\"\nassert solution(101) == \"-1\\n\"\nassert solution(1234321) == \"94708\\n\""
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(10) == 10\nassert solution(55) == 55\nassert solution(101) == -1\nassert solution(1234321) == 94708"
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(10) == '10'\nassert solution(55) == '55'\nassert solution(101) == '-1'\nassert solution(1234321) == '94708'"
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3, 0, 0, 0, 3) == 6\nassert solution(1, 2, 0, 0, 5) == 2\nassert solution(1, 2, 0, 0, 4) == 4\nassert solution(1, 2, 0, 0, 6) == 0"
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n'''\n3 0 0 0 3\n1 2 0 0 5\n1 2 0 0 4\n1 2 0 0 6\n''') == '6'\n\nassert solution(\n'''\n1 2 0 0 5\n''') == '2'\n\nassert solution(\n'''\n1 2 0 0 4\n''') == '4'\n\nassert solution(\n'''\n1 2 0 0 6\n''') == '0'\n\nfrom typing import List"
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 6, \"The output is incorrect. Please fix it.\""
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3 0 0 0 3) == 6\nassert solution(1 2 0 0 5) == 2\nassert solution(1 2 0 0 4) == 4\nassert solution(1 2 0 0 6) == 0\n\nprint(solution(3 0 0 0 3))\nprint(solution(1 2 0 0 5))\nprint(solution(1 2 0 0 4))\nprint(solution(1 2 0 0 6))"
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3 0 0 0 3) == 6\nassert solution(1 2 0 0 5) == 2\nassert solution(1 2 0 0 4) == 4\nassert solution(1 2 0 0 6) == 0"
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, 0, 0, 0, 3) == 6\nassert solution(1, 2, 0, 0, 5) == 2\nassert solution(1, 2, 0, 0, 4) == 4\nassert solution(1, 2, 0, 0, 6) == 0"
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 0 0 0 3') == '6'\nassert solution('1 2 0 0 5') == '2'\nassert solution('1 2 0 0 4') == '4'\nassert solution('1 2 0 0 6') == '0'"
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 0 0 0 3\") == \"6\"\nassert solution(\"1 2 0 0 5\") == \"2\"\nassert solution(\"1 2 0 0 4\") == \"4\"\nassert solution(\"1 2 0 0 6\") == \"0\""
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 5311\nprint(\"All tests passed!\")"
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3, 0, 0, 0, 3) == 6\nassert solution(1, 2, 0, 0, 5) == 2\nassert solution(1, 2, 0, 0, 4) == 4\nassert solution(1, 2, 0, 0, 6) == 0"
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('0.5 -5.301 3.098') == '-1.26167861 3.88425357', 'Test case 1 failed'\nassert solution('0.5 8 8') == '9.21068947 2.56226688', 'Test case 2 failed'\nassert solution('1 8 8') == '6.22375968 -0.31921472', 'Test case 3 failed'\nassert solution('0.5 -8 8') == '-4.36385220 9.46891588', 'Test case 4 failed'"
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_1) == expected_output_1\nassert solution(input_2) == expected_output_2\nassert solution(input_3) == expected_output_3\nassert solution(input_4) == expected_output_4"
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0.5 -5.301 3.098\") == \"9.21068947 3.88425357\"\nassert solution(\"0.5 8 8\") == \"9.21068947 2.56226688\"\nassert solution(\"1 8 8\") == \"6.22375968 -0.31921472\"\nassert solution(\"0.5 -8 8\") == \"-4.36385220 9.46891588\""
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0.5 -5.301 3.098\") == (-1.26167861, 3.88425357)\nassert solution(\"0.5 8 8\") == (9.21068947, 2.56226688)\nassert solution(\"1 8 8\") == (6.22375968, -0.31921472)\nassert solution(\"0.5 -8 8\") == (-4.36385220, 9.46891588)"
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == output\n"
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0.5 -5.301 3.098\") == \"Output: -1.26167861 3.88425357\""
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0.5 -5.301 3.098\") == \"0.5 3.098\"\nassert solution(\"0.5 8 8\") == \"9.21068947 2.56226688\"\nassert solution(\"1 8 8\") == \"6.22375968 -0.31921472\"\nassert solution(\"0.5 -8 8\") == \"-4.36385220 9.46891588\""
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0.5 -5.301 3.098\") == \"-1.26167861 3.88425357\"\nassert solution(\"0.5 8 8\") == \"9.21068947 2.56226688\"\nassert solution(\"1 8 8\") == \"6.22375968 -0.31921472\"\nassert solution(\"0.5 -8 8\") == \"-4.36385220 9.46891588\""
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('0.5 -5.301 3.098') == '-1.26167861 3.88425357'\nassert solution('0.5 8 8') == '9.21068947 2.56226688'\nassert solution('1 8 8') == '6.22375968 -0.31921472'\nassert solution('0.5 -8 8') == '-4.36385220 9.46891588'"
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Sample Input 1\\n2 2\\n1 2\\nSample Output 1\\n1\\n2\\n\") == \"1\\n2\"\nassert solution(\"Sample Input 2\\n3 3\\n1 2\\n2 3\\n3 1\\nSample Output 2\\n1\\n1\\n\") == \"1\\n1\"\nassert solution(\"Sample Input 3\\n4 5\\n1 2\\n1 3\\n3 2\\n2 4\\n3 4\\nSample Output 3\\n0\\n\") == \"0\\n\"\nassert solution(\"Sample Input 4\\n4 5\\n1 2\\n2 3\\n2 4\\n3 1\\n4 1\\nSample Output 4\\n2\\n4\\n5\\n\") == \"2\\n4\\n5\\n\""
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n2 2\n1 2\n2 1\n''') == '1\\n2\\n'\n\nassert solution('''\n3 3\n1 2\n2 3\n3 1\n''') == '1\\n1\\n'\n\nassert solution('''\n4 5\n1 2\n1 3\n3 2\n2 4\n3 4\n''') == '0\\n2\\n4\\n'\n\nassert solution('''\n4 5\n1 2\n2 3\n2 4\n3 1\n4 1\n''') == '2\\n4\\n5\\n'"
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5\\n1 2\\n2 3\\n2 4\\n3 1\\n4 1\") == \"0\\n2\\n4\\n5\"\nassert solution(\"4 5\\n1 2\\n2 3\\n3 1\\n4 1\") == \"1\\n2\\n4\\n5\"\nassert solution(\"4 5\\n1 2\\n2 3\\n3 1\\n4 1\") == \"1\\n1\\n4\\n5\""
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1\\n2\""
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n3 2\\n2 4\\n3 4\") == [\"0\", \"2\", \"4\"]\nassert solution(\"2 2\\n1 2\\n2 1\") == [\"1\"]\nassert solution(\"3 3\\n1 2\\n2 3\\n3 1\") == [\"1\", \"1\"]\nassert solution(\"4 5\\n1 2\\n1 3\\n3 2\\n2 4\\n3 4\") == [\"0\", \"2\", \"4\"]"
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2\nassert solution(sample_input3) == sample_output3\nassert solution(sample_input4) == sample_output4\n\nsample_input1 = \"\"\"\n2 2\n1 2\n2 1\n\"\"\"\n\nsample_input2 = \"\"\"\n3 3\n1 2\n2 3\n3 1\n\"\"\"\n\nsample_input3 = \"\"\"\n4 5\n1 2\n1 3\n3 2\n2 4\n3 4\n\"\"\"\n\nsample_input4 = \"\"\"\n4 5\n1 2\n2 3\n2 4\n3 1\n4 1\n\"\"\"\n\nsample_output1 = \"\"\"\n1\n2\n\"\"\"\n\nsample_output2 = \"\"\"\n1\n1\n\"\"\"\n\nsample_output3 = \"\"\"\n0\n\"\"\"\n\nsample_output4 = \"\"\"\n2\n4\n5\n\"\"\""
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n1 2\\n2 1\\n\") == \"1\\n2\"\nassert solution(\"3 3\\n1 2\\n2 3\\n3 1\\n\") == \"1\\n1\"\nassert solution(\"4 5\\n1 2\\n1 3\\n3 2\\n2 4\\n3 4\\n\") == \"0\\n2\\n4\\n5\""
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n3 2\\n2 4\\n3 4\") == \"1\\n2\\n4\\n\""
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"0\\n2\\n4\\n5\\n\"\n"
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n1 2\\n2 1\\n3 3\\n1 2\\n2 3\\n3 1\\n4 5\\n1 2\\n1 3\\n3 2\\n2 4\\n3 4\\n5 5\\n1 2\\n2 3\\n2 4\\n3 1\\n4 1\") == \"1\\n2\"\nassert solution(\"3 3\\n1 2\\n2 3\\n3 1\\n4 5\\n1 2\\n1 3\\n3 2\\n2 4\\n3 4\\n5 5\\n1 2\\n2 3\\n2 4\\n3 1\\n4 1\") == \"1\\n1\"\nassert solution(\"4 5\\n1 2\\n1 3\\n3 2\\n2 4\\n3 4\\n5 5\\n1 2\\n2 3\\n2 4\\n3 1\\n4 1\") == \"0\\n2\\n4\\n5\""
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\") == \"11\"\nassert solution(\"5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\") == \"infinity\"\nassert solution(\"2 1 0 1\\n0 1 2\") == \"2\"\nassert solution(\"3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\") == \"infinity\""
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\") == \"11\\n\"\nassert solution(\"5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\") == \"infinity\\n\"\nassert solution(\"2 1 0 1\\n0 1 2\") == \"2\\n\"\nassert solution(\"3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\") == \"infinity\\n\""
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n    4 5 0 3\n    0 1 1\n    1 2 2\n    2 0 4\n    2 3 1\n    2 3 3\n    \"\"\") == \"11\\n\"\nassert solution(\"\"\"\n    5 5 0 4\n    0 1 1\n    1 2 1\n    2 3 1\n    3 0 1\n    2 4 1\n    \"\"\") == \"infinity\\n\"\nassert solution(\"\"\"\n    2 1 0 1\n    0 1 2\n    \"\"\") == \"2\\n\"\nassert solution(\"\"\"\n    3 3 1 2\n    0 1 1\n    1 0 1\n    1 2 1\n    \"\"\") == \"infinity\\n\"\n"
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\") == \"11\\n\"\nassert solution(\"5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\") == \"infinity\\n\"\nassert solution(\"2 1 0 1\\n0 1 2\") == \"2\\n\"\nassert solution(\"3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\") == \"infinity\\n\""
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\\n\") == \"11\"\nassert solution(\"5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\\n\") == \"infinity\"\nassert solution(\"2 1 0 1\\n0 1 2\\n\") == \"2\"\nassert solution(\"3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\\n\") == \"infinity\"\n"
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\\n') == '11\\n'\nassert solution('5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\\n') == 'infinity\\n'\nassert solution('2 1 0 1\\n0 1 2\\n') == '2\\n'\nassert solution('3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\\n') == 'infinity\\n'"
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\") == \"11\\n\"\nassert solution(\"5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\") == \"infinity\\n\"\nassert solution(\"2 1 0 1\\n0 1 2\") == \"2\\n\"\nassert solution(\"3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\") == \"infinity\\n\"\nassert solution(\"5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\") == \"infinity\\n\"\n"
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\\nSample Input 1:\\n4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\\nSample Output 1:\\n11\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\"
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '0', 'Output must be 0'\n\nSolution:\n\nWe can solve this problem using dynamic programming. We will build a 2D array dp to store the number of different ways in which we can arrange the balls, and then we will use this array to find the total number of arrangements that satisfy the given conditions.\n\nAlgorithm:\n1. Initialize a 2D array dp of size (n+1) x (k+1), where (n+1) is the maximum number of colors and (k+1) is the maximum number of possible sequences of colors. Initially, dp[i][0] and dp[i][1] will represent the number of arrangements where Timmy has no balls of i color and no sequence of colors.\n2. For i=2,3,...,n, for each color color_i, do the following:\n   a. If there are no balls of i color, set dp[i][0] to 0.\n   b. For each color j that is not equal to i, do the following:\n      i. If there are no balls of j color, set dp[i][j] to 0.\n      ii. For each sequence s_i of colors c_i, do the following:\n         i. If there are no balls of s_i color, set dp[i][j] to 0.\n         ii. For each sequence s_j of colors c_j that are not equal to s_i, do the following:\n            i. If there are no balls of s_j color, set dp[i][j] to 0.\n            ii. If there are no balls of i color that are not next to each other, and there are no balls of j color that are not next to each other, and there are no balls of s_i color that are not next to each other, and there are no balls of s_j color that are not next to each other, and there are no balls of i color that are not next to each other, and there are no balls of j color that are not next to each other, and there are no balls of s_i color that are not next to each other, and there are no balls of s_j color that are not next to each other, and there are no balls of i color that are not next to each other, and there are no balls of j color that are not next to each other, and there are no balls of s_i color that are not next to each other, and there are no balls of s_j color that are not next to each other, and there are no balls of i color that are not next to each other, and there are no balls of j color that are not next to each other, and there are no balls of s_i color that are not next to each other, and there are no balls of s_j color that are not next to each other, and there are no balls of i color that are not next to each other, and there are no balls of j color that are not next to each other, and there are no balls of s_i color that are not next to each other, and there are no balls of s_j color that are not next to each other, and there are no balls of i color that are not next to each other, and there are no balls of j color that are not next to each other, and there are no balls of s_i color that are not next to each other, and there are no balls of s_j color that are not next to each other, and there are no balls of i color that are not next to each other, and there are no balls of j color that are not next to each other, and there are no balls of s_i color that are not next to each other, and there are no balls of s_j color that are not next to each other, and there are no balls of i color that are not next to each other, and there are no balls of j color that are not next to each other, and there are no balls of s_i color that are not next to each other, and there are no balls of s_j color that are not next to each other, and there are no balls of i color that are not next to each other, and there are no balls of j color that are not next to each other, and there are no balls of s_i color that are not next to each other, and there are no balls of s_j color that are not next to each other, and there are no balls of i color that are not next to each other, and"
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2 1 2 1\\n2 1 2\\n2 3 4\") == \"6\\n\"\nassert solution(\"3 3 1 1\\n1 1\\n2 2 3\") == \"0\\n\"\nassert solution(\"3 2 2 3\\n1 1\\n2 2 3\") == \"18\\n\"\nassert solution(\"3 1 2 3\\n2 1 2\\n0\") == \"12\\n\""
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2 1 2 1\\n2 1 2\\n2 3 4\") == 6\nassert solution(\"3 3 1 1\\n1 1\\n2 2 3\") == 0\nassert solution(\"3 2 2 3\\n1 1\\n2 2 3\") == 18\nassert solution(\"3 1 2 3\\n2 1 2\\n0\") == 12"
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Test failed: expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_str) == expected_output, f\"Test case {test_case_id + 1} failed. Expected output: '{expected_output}', Received output: '{solution(input_str)}'.\"\n\ninput_str = '''4 2 1 2 1\n2 1 2\n2 3 4\n'''\n\nexpected_output = 6\nsolution(input_str)\n"
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2 1 2 1\\n2 1 2\\n2 3 4\") == \"6\"\nassert solution(\"3 3 1 1\\n1 1\\n2 2 3\") == \"0\"\nassert solution(\"3 2 2 3\\n1 1\\n2 2 3\") == \"18\"\nassert solution(\"3 1 2 3\\n2 1 2\\n0\") == \"12\""
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 2 1 2 1\\n2 1 2\\n2 3 4') == '6\\n'\nassert solution('3 3 1 1\\n1 1\\n2 2 3') == '0\\n'\nassert solution('3 2 2 3\\n1 1\\n2 2 3') == '18\\n'\nassert solution('3 1 2 3\\n2 1 2\\n0') == '12\\n'\n\nfrom typing import List"
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2 1 2 1\\n2 1 2\\n2 3 4\") == \"6\\n\"\nassert solution(\"3 3 1 1\\n1 1\\n2 2 3\") == \"0\\n\"\nassert solution(\"3 2 2 3\\n1 1\\n2 2 3\") == \"18\\n\"\nassert solution(\"3 1 2 3\\n2 1 2\\n0\") == \"12\\n\""
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2 1 2 1\\n2 1 2\\n2 3 4\") == \"6\"\nassert solution(\"3 3 1 1\\n1 1\\n2 2 3\") == \"0\"\nassert solution(\"3 2 2 3\\n1 1\\n2 2 3\") == \"18\"\nassert solution(\"3 1 2 3\\n2 1 2\\n0\") == \"12\"\n"
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2 1 2 1\\n2 1 2\\n2 3 4\\n\") == \"6\\n\"\nassert solution(\"3 3 1 1\\n1 1\\n2 2 3\\n\") == \"0\\n\"\nassert solution(\"3 2 2 3\\n1 1\\n2 2 3\\n\") == \"18\\n\"\nassert solution(\"3 1 2 3\\n2 1 2\\n0\\n\") == \"12\\n\""
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Solution incorrect! The output is {solution(input())} but the expected output is {output()}\""
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == \"468559\"\nassert solution(sample_input2) == \"49401\"\nassert solution(sample_input3) == \"20\"\nassert solution(sample_input4) == \"1\""
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1000000 1\") == \"468559\"\nassert solution(\"1000000 5\") == \"49401\"\nassert solution(\"1000000 16\") == \"20\"\nassert solution(\"9000000000000000000 62\") == \"1\""
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"Sample Input and Output do not match\"\n"
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1000000 1\") == \"468559\"\nassert solution(\"1000000 5\") == \"49401\"\nassert solution(\"1000000 16\") == \"20\"\nassert solution(\"9000000000000000000 62\") == \"1\""
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1000000 1\") == \"468559\"\nassert solution(\"1000000 5\") == \"49401\"\nassert solution(\"1000000 16\") == \"20\"\nassert solution(\"9000000000000000000 62\") == \"1\""
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(solution) == \"The solution works correctly.\""
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1000000 1\") == \"468559\"\nassert solution(\"1000000 5\") == \"49401\"\nassert solution(\"1000000 16\") == \"20\"\nassert solution(\"9000000000000000000 62\") == \"1\""
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1000000 1\") == 468559, \"Expected output 468559, got: \" + str(solution(\"1000000 1\"))\nassert solution(\"1000000 5\") == 49401, \"Expected output 49401, got: \" + str(solution(\"1000000 5\"))\nassert solution(\"1000000 16\") == 20, \"Expected output 20, got: \" + str(solution(\"1000000 16\"))\nassert solution(\"9000000000000000000 62\") == 1, \"Expected output 1, got: \" + str(solution(\"9000000000000000000 62\"))"
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1000000 1') == '468559'\nassert solution('1000000 5') == '49401'\nassert solution('1000000 16') == '20'\nassert solution('9000000000000000000 62') == '1'"
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 9\\n5 4 1\") == \"1\\n\", \"Input 1\"\nassert solution(\"4 13\\n2 2 2 2\") == \"3\\n\", \"Input 2\"\nassert solution(\"18 90\\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\") == \"12\\n\", \"Input 3\""
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 9\\n5 4 1') == '1\\n'\nassert solution('4 13\\n2 2 2 2') == '3\\n'\nassert solution('18 90\\n1 2 3 4 5 6 1 2 3 4 5 6') == '12\\n'"
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 9\\n5 4 1\") == \"1\"\nassert solution(\"4 13\\n2 2 2 2\") == \"3\"\nassert solution(\"18 90\\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\") == \"12\"\n\nfrom typing import List"
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 9\\n5 4 1') == '1\\n'\nassert solution('4 13\\n2 2 2 2') == '3\\n'\nassert solution('18 90\\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6') == '12\\n'"
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r')) == 12\nassert solution(open('input_2.txt', 'r')) == 3\nassert solution(open('input_3.txt', 'r')) == 12"
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 9\\n5 4 1\\n\") == \"1\"\nassert solution(\"4 13\\n2 2 2 2\\n\") == \"3\"\nassert solution(\"18 90\\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\\n\") == \"12\""
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"12\\n\"\nassert solution(open(\"test_input1.txt\", \"r\")) == \"1\\n\"\nassert solution(open(\"test_input2.txt\", \"r\")) == \"3\\n\"\nassert solution(open(\"test_input3.txt\", \"r\")) == \"12\\n\""
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Sample Output 1:\\n1\"\nassert solution(input()) == \"Sample Output 2:\\n3\"\nassert solution(input()) == \"Sample Output 3:\\n12\""
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3 9\n5 4 1\n\"\"\").strip() == \"1\"\nassert solution(\"\"\"\n4 13\n2 2 2 2\n\"\"\").strip() == \"3\"\nassert solution(\"\"\"\n18 90\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\n\"\"\").strip() == \"12\""
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 3"
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n1\\n\") == \"0\\n\"\nassert solution(\"3\\n4 7 8\\n\") == \"3\\n\"\nassert solution(\"5\\n2 3 4 5 8\\n\") == \"5\\n\""
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 5\nassert solution(4) == 0\nassert solution(5) == 3\nassert solution(6) == 5\nassert solution(7) == 8\nassert solution(8) == 8"
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 3\nassert solution(4) == 4\nassert solution(5) == 5\nassert solution(6) == 3"
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == 0\nassert solution(2) == 0\nassert solution(3) == 0\nassert solution(4) == 0\nassert solution(5) == 0"
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"0\""
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226"
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n1\\nSample Output 1:\\n0\\nSample Input 2:\\n3\\n4 7 8\\nSample Output 2:\\n3\\nSample Input 3:\\n5\\n2 3 4 5 8\\nSample Output 3:\\n5\") == \"0\\n\"\nassert solution(\"3\\n4 7 8\\nSample Input 2:\\n3\\n4 7 8\\nSample Output 2:\\n3\\nSample Input 3:\\n5\\n2 3 4 5 8\\nSample Output 3:\\n5\") == \"3\\n\"\nassert solution(\"5\\n2 3 4 5 8\\nSample Input 2:\\n3\\n4 7 8\\nSample Output 2:\\n3\\nSample Input 3:\\n5\\n2 3 4 5 8\\nSample Output 3:\\n5\" ) == \"5\\n\""
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 0, \"The maximum revenue you can achieve by selling all 3 pieces of data is 0.\"\nassert solution(5) == 5, \"The maximum revenue you can achieve by selling all 5 pieces of data is 5.\"\n"
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"0\""
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"149\") == \"17\"\nassert solution(\"123476544\") == \"11112\""
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(37) == 75\nassert solution(48) == 85\nassert solution(99) == 17\nassert solution(123476544) == 11112\nassert solution(10) == 1\nassert solution(123456789) == -1\n\nprint(solution(6))\nprint(solution(149))\nprint(solution(123476544))"
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"149\") == \"17\"\nassert solution(\"123476544\") == \"11112\""
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6') == '4', 'Test 1'\nassert solution('149') == '17', 'Test 2'\nassert solution('123476544') == '11112', 'Test 3'"
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(37) == 75\nassert solution(123476544) == 11112"
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('6') == '4'\nassert solution('149') == '17'\nassert solution('123476544') == '11112'"
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(6) == 4\nassert solution(149) == 17\nassert solution(123476544) == 11112"
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"149\") == \"17\"\nassert solution(\"123476544\") == \"11112\""
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\") == \"4\\n\"\nassert solution(\"149\") == \"17\\n\"\nassert solution(\"123476544\") == \"11112\\n\""
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 4\nassert solution(149) == 17\nassert solution(123476544) == 11112\n"
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r').read()) == 'adcb'\nassert solution(open('input_2.txt', 'r').read()) == 'IMPOSSIBLE'\nassert solution(open('input_3.txt', 'r').read()) == 'AMBIGUOUS'"
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected, f\"Test failed: {stdin}\\nExpected: {expected}\\nActual: {solution(stdin)}\""
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('d 4\\ncab\\ncda\\nccc\\nbadca') == 'adcb'\nassert solution('c 4\\nabc\\nbca\\ncab\\naca') == 'IMPOSSIBLE'\nassert solution('f 2\\ndea\\nfeb\\ngc') == 'AMBIGUOUS'"
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"d 4\\ncab\\ncda\\nccc\\nbadca\\n\") == \"adcb\\n\"\nassert solution(\"c 4\\nabc\\nbca\\ncab\\naca\\n\") == \"IMPOSSIBLE\\n\"\nassert solution(\"f 2\\ndea\\ncfb\\n\") == \"AMBIGUOUS\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"d 4\\ncab\\ncda\\nccc\\nbadca\") == \"adcb\\n\"\nassert solution(\"c 4\\nabc\\nbca\\ncab\\naca\") == \"IMPOSSIBLE\\n\"\nassert solution(\"f 2\\ndea\\ncfb\") == \"AMBIGUOUS\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"d 4\\ncab\\ncda\\nccc\\nbadca\") == \"adcb\\n\"\nassert solution(\"c 4\\nabc\\nbca\\ncab\\naca\") == \"IMPOSSIBLE\\n\"\nassert solution(\"f 2\\ndea\\ncfb\") == \"AMBIGUOUS\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"d 4\\ncab\\ncda\\nccc\\nbadca\") == \"adcb\"\nassert solution(\"c 4\\nabc\\nbca\\ncab\\naca\") == \"IMPOSSIBLE\"\nassert solution(\"f 2\\ndea\\ncfb\") == \"AMBIGUOUS\"\n\nfrom collections import Counter"
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"d 4\\ncab\\ncda\\nccc\\nbadca\") == \"adcb\"\nassert solution(\"c 4\\nabc\\nbca\\ncab\\naca\") == \"IMPOSSIBLE\"\nassert solution(\"f 2\\ndea\\ncfb\") == \"AMBIGUOUS\""
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('sample_input_1.txt', 'r')) == 'adcb', 'Expected \"adcb\", got \"{}\"'.format(solution(open('sample_input_1.txt', 'r')))\nassert solution(open('sample_input_2.txt', 'r')) == 'IMPOSSIBLE', 'Expected \"IMPOSSIBLE\", got \"{}\"'.format(solution(open('sample_input_2.txt', 'r')))\nassert solution(open('sample_input_3.txt', 'r')) == 'AMBIGUOUS', 'Expected \"AMBIGUOUS\", got \"{}\"'.format(solution(open('sample_input_3.txt', 'r')))"
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"IMPOSSIBLE\""
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 3 3 3\\n10 20 0 0\\n100 20 543 12\\n') == '9\\n164\\n', 'Test case 1 failed'\n\nassert solution('2 5 0 0\\n10 10 0 0\\n100 100 10 10\\n') == '9\\n180\\n', 'Test case 2 failed'\n\nassert solution('2 10 0 0\\n10 10 0 0\\n100 100 10 10\\n') == '9\\n200\\n', 'Test case 3 failed'"
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Expected: {}, Received: {}\".format(output(), solution(input()))"
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3 3 3\") == \"9\", \"The output should be '9'.\"\nassert solution(\"10 20 0 0\") == \"10\", \"The output should be '10'.\"\nassert solution(\"100 20 543 12\") == \"164\", \"The output should be '164'.\""
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input1) == output1, \"Test case 1 failed\"\nassert solution(input2) == output2, \"Test case 2 failed\"\nassert solution(input3) == output3, \"Test case 3 failed\""
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3 3 3\\n10 20 0 0\\n100 20 543 12\") == \"9\\n10\\n164\"\nassert solution(\"2 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\") == \"0\""
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3 3 3\\n10 20 0 0\\n100 20 543 12\\n\") == \"9\\n164\\n\"\nassert solution(\"2 3 3 3\\n10 20 0 0\\n100 20 543 12\\n\") == \"9\\n164\\n\"\nassert solution(\"2 3 3 3\\n10 20 0 0\\n100 20 543 12\\n\") == \"9\\n164\\n\""
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"Test failed for input: {stdin}\\nExpected output: {expected}\\nOutput: {solution(stdin)}\"\n"
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3 3 3\") == \"9\\n\"\nassert solution(\"10 20 0 0\") == \"10\\n\"\nassert solution(\"100 20 543 12\") == \"164\\n\"\n"
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"164\", \"Incorrect output. Please check the problem statement and the examples.\""
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Test failed. Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Test {test_num}: Expected output {output}, got {solution(input())}\"\ntest_num += 1"
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Test failed with input {input()}, expected output {output}\""
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n2 1 0\\n\") == \"yes\"\nassert solution(\"4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\\n\") == \"no\"\nassert solution(\"3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\\n\") == \"yes\""
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n2 1 0\") == \"yes\"\nassert solution(\"4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\") == \"no\"\nassert solution(\"3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\") == \"yes\""
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n2 1 0\") == \"yes\"\nassert solution(\"4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\") == \"no\"\nassert solution(\"3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\") == \"yes\""
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n2 1 0') == 'yes', 'The solution is not correct for the given test case'\nassert solution('4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0') == 'no', 'The solution is not correct for the given test case'\nassert solution('3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12') == 'yes', 'The solution is not correct for the given test case'"
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n2 1 0\") == \"yes\"\nassert solution(\"4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\") == \"no\"\nassert solution(\"3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\") == \"yes\""
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Expected {output}, but got {solution(input())}\""
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n2 1 0\") == \"yes\\n\"\nassert solution(\"4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\") == \"no\\n\"\nassert solution(\"3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\") == \"yes\\n\""
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n2 1 0\") == \"yes\"\nassert solution(\"4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\") == \"no\"\nassert solution(\"3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\") == \"yes\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"652526\") == \"4\"\nassert solution(\"12121131221\") == \"7\"\nassert solution(\"123456789\") == \"1\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('652526') == '4', \"Test case 1 failed\"\nassert solution('12121131221') == '7', \"Test case 2 failed\"\nassert solution('123456789') == '1', \"Test case 3 failed\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('652526') == '4'\nassert solution('12121131221') == '7'\nassert solution('123456789') == '1'"
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"652526\") == \"4\"\nassert solution(\"12121131221\") == \"7\"\nassert solution(\"123456789\") == \"1\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Expected: {output()}, Got: {solution(input())}\"\nfor input_ in [\n    (652526,),\n    (12121131221,),\n    (123456789,),\n]:\n    assert solution(str(input_)) == str(output()), f\"Expected: {output()}, Got: {solution(str(input_))}\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"652526\") == \"4\", \"Sample Input 1\"\nassert solution(\"12121131221\") == \"7\", \"Sample Input 2\"\nassert solution(\"123456789\") == \"1\", \"Sample Input 3\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('652526') == 4\nassert solution('12121131221') == 7\nassert solution('123456789') == 1"
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"652526\") == \"4\", \"Sample Input 1\"\nassert solution(\"12121131221\") == \"7\", \"Sample Input 2\"\nassert solution(\"123456789\") == \"1\", \"Sample Input 3\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"652526\") == \"4\"\nassert solution(\"12121131221\") == \"7\"\nassert solution(\"123456789\") == \"1\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"652526\") == \"4\", \"Sample Input 1: 652526\"\nassert solution(\"12121131221\") == \"7\", \"Sample Input 2: 12121131221\"\nassert solution(\"123456789\") == \"1\", \"Sample Input 3: 123456789\""
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n1\\n1 2\\n2 3\\n1 3\\n\") == \"0\"\nassert solution(\"4 4\\n24 10\\n1 3\\n2 3\\n2 4\\n1 4\\n\") == \"24\"\nassert solution(\"6 8\\n100 500 300 75\\n1 3\\n1 4\\n3 6\\n4 5\\n3 5\\n4 6\\n2 5\\n2 6\\n\") == \"800\""
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n1\\n1 2\\n2 3\\n1 3\\n\") == \"0\\n\"\nassert solution(\"4 4\\n24 10\\n1 3\\n2 3\\n2 4\\n1 4\\n\") == \"24\\n\"\nassert solution(\"6 8\\n100 500 300 75\\n1 3\\n1 4\\n3 6\\n4 5\\n3 5\\n4 6\\n2 5\\n2 6\\n\") == \"800\\n\""
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Test case {i+1} failed. Expected output: {output()}, but got: {solution(input())}\""
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n3 3\n1\n1 2\n2 3\n1 3\n''') == '0\\n'\n\nassert solution('''\n4 4\n24 10\n1 3\n2 3\n2 4\n1 4\n''') == '24\\n'\n\nassert solution('''\n6 8\n100 500 300 75\n1 3\n1 4\n3 6\n4 5\n3 5\n4 6\n2 5\n2 6\n''') == '800\\n'"
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n1\\n1 2\\n2 3\\n1 3\\nSample Input 1:3 3\\n1\\n1 2\\n2 3\\n1 3\\nSample Output 1:0\\n\\n\\n\\n\\nSample Input 2:4 4\\n24 10\\n1 3\\n2 3\\n2 4\\n1 4\\nSample Output 2:24\\n\\n\\n\\n\\n\\n\\n\\nSample Input 3:6 8\\n100 500 300 75\\n1 3\\n1 4\\n3 6\\n4 5\\n3 5\\n4 6\\n2 5\\n2 6\\nSample Output 3:800\") == \"24\""
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"3 3\n1\n1 2\n2 3\n1 3\n\"\"\") == 0\n\nassert solution(\"\"\"4 4\n24 10\n1 3\n2 3\n2 4\n1 4\n\"\"\") == 24\n\nassert solution(\"\"\"6 8\n100 500 300 75\n1 3\n1 4\n3 6\n4 5\n3 5\n4 6\n2 5\n2 6\n\"\"\") == 800"
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r').read()) == 'Output Here'"
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 3\\n1\\n1 2\\n2 3\\n1 3\\n') == '0\\n'\nassert solution('4 4\\n24 10\\n1 3\\n2 3\\n2 4\\n1 4\\n') == '24\\n'\nassert solution('6 8\\n100 500 300 75\\n1 3\\n1 4\\n3 6\\n4 5\\n3 5\\n4 6\\n2 5\\n2 6\\n') == '800\\n'\n\nsolution = '''\n"
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=open('sample_input.txt').read()) == \"0\\n\"  # sample output 1\nassert solution(stdin=open('sample_input.txt').read()) == \"24\\n\"  # sample output 2\nassert solution(stdin=open('sample_input.txt').read()) == \"800\\n\"  # sample output 3"
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    3 3\n    1\n    1 2\n    2 3\n    1 3\n    \"\"\"\n) == \"0\"\n\nassert solution(\n    \"\"\"\n    4 4\n    24 10\n    1 3\n    2 3\n    2 4\n    1 4\n    \"\"\"\n) == \"24\"\n\nassert solution(\n    \"\"\"\n    6 8\n    100 500 300 75\n    1 3\n    1 4\n    3 6\n    4 5\n    3 5\n    4 6\n    2 5\n    2 6\n    \"\"\"\n) == \"800\""
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 3 2 4\") == \"1 4\\n\", \"Test 1\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1 2 3 4 5\\n\", \"Test 2\"\nassert solution(\"4\\n2 1 4 3\") == \"-1\\n\", \"Test 3\""
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 3 2 4\") == [\"1\", \"4\"]\nassert solution(\"5\\n1 2 3 4 5\") == [\"1\", \"2\", \"3\", \"4\", \"5\"]\nassert solution(\"4\\n2 1 4 3\") == [-1]"
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 3 2 4\") == \"1 4\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1 2 3 4 5\\n\"\nassert solution(\"4\\n2 1 4 3\") == \"-1\\n\""
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n1 3 2 4\\n') == '1 4\\n', \"Sample Input 1\\nOutput 1: '1 4'\\n\"\nassert solution('5\\n1 2 3 4 5\\n') == '1 2 3 4 5\\n', \"Sample Input 2\\nOutput 2: '1 2 3 4 5'\\n\"\nassert solution('4\\n2 1 4 3\\n') == '-1\\n', \"Sample Input 3\\nOutput 3: '-1'\\n\""
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"sample_input.txt\", \"r\")) == \"1 4\\n2 3\\n\"\nassert solution(open(\"sample_input_2.txt\", \"r\")) == \"1 2 3 4 5\\n\"\nassert solution(open(\"sample_input_3.txt\", \"r\")) == \"-1\\n\""
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\nassert solution(sample_input_3) == sample_output_3"
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 3 2 4\") == \"1 4\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1 2 3 4 5\\n\"\nassert solution(\"4\\n2 1 4 3\") == \"-1\\n\""
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n1 3 2 4\\n') == ['1', '4']\nassert solution('5\\n1 2 3 4 5\\n') == ['1', '2', '3', '4', '5']\nassert solution('4\\n2 1 4 3\\n') == ['-1']"
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 3 2 4\") == \"1 4\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1 2 3 4 5\"\nassert solution(\"4\\n2 1 4 3\") == \"-1\"\n"
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 3 2 4\") == \"1 4\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1 2 3 4 5\"\nassert solution(\"4\\n2 1 4 3\") == \"-1\"\n\nfrom typing import List"
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 8\\n..#..#..\\n.######. \\n.######. \\n..#..#..\") == 8\nassert solution(\"3 3\\n... \\n.#.\\n... \\n\") == 1\nassert solution(\"2 6\\n.#####\\n#####.\\n\") == 5"
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 8, \"The solution should return 8, but it returns {}\".format(solution())"
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 8\\n..#..#..\\n.######.\\n.######.\\n..#..#..\") == 8\nassert solution(\"3 3\\n...\\n.#.\\n...\\n\") == 1\nassert solution(\"2 6\\n.#####\\n#####.\\n\") == 5"
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 8, \"Sample Output 1: The correct answer is 8, but the provided code returned {}\".format(solution())"
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 8\nassert solution() == 1\nassert solution() == 5"
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    4 8\n   ..#..#..\n   .######.\n   .######.\n   ..#..#..\n    \"\"\"\n) == 8\n\nassert solution(\n    \"\"\"\n    3 3\n   ...\n    #.#\n   ...\n    \"\"\"\n) == 1\n\nassert solution(\n    \"\"\"\n    2 6\n   .#####\n    #####.\n    \"\"\"\n) == 5\n\nfrom typing import List"
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_string) == output_string, f\"Test case {i+1} failed: solution(stdin) == output_string, expected {output_string}, actual {solution(stdin)}\""
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '8', 'Your code is not correct.'\nassert solution(input()) == '1', 'Your code is not correct.'\nassert solution(input()) == '5', 'Your code is not correct.'"
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('..#..#..') == 8\nassert solution('.######.') == 10\nassert solution('..#..#..') == 8"
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Solution is incorrect. Expected: {expected_output}, Received: {solution(input())}\""
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n4 5 5\n2 1 1 1 2\n5 3 4 4 3\n4 3 3 3 2\n3 1 3 3 1\n\"\"\"\n) == 6\n\nassert solution(\n\"\"\"\n3 3 3\n3 1 1\n1 3 2\n3 2 3\n\"\"\"\n) == 13\n\nassert solution(\n\"\"\"\n3 2 2\n1 2\n2 1\n1 2\n\"\"\"\n) == -1"
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\") == \"6\"\nassert solution(\"3 3 3\\n3 1 1\\n1 3 2\\n3 2 3\") == \"13\"\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\") == \"-1\""
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    4 5 5\n    2 1 1 1 2\n    5 3 4 4 3\n    4 3 3 3 2\n    3 1 3 3 1\n    \"\"\"\n) == \"6\\n19 12 2 18 5 5\\n\"\n\nassert solution(\n    \"\"\"\n    3 3 3\n    3 1 1\n    1 3 2\n    3 2 3\n    \"\"\"\n) == \"13\\n4 2 6 1 9 7 5 5 7 1 2 3 3\\n\"\n\nassert solution(\n    \"\"\"\n    3 2 2\n    1 2\n    2 1\n    1 2\n    \"\"\"\n) == \"-1\\n\""
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\") == \"6\\n19 12 2 18 5 5\\n\\n13\\n4 2 6 1 9 7 5 5 7 1 2 3 3\\n\\n4 2 6 1 9 7 5 5 7 1 2 3 3\"\nassert solution(\"3 3 3\\n3 1 1\\n1 3 2\\n3 2 3\") == \"13\\n4 2 6 1 9 7 5 5 7 1 2 3 3\\n\\n4 2 6 1 9 7 5 5 7 1 2 3 3\"\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\") == \"-1\"\n"
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\") == \"6\\n19 12 2 18 5 5\"\nassert solution(\"3 3 3\\n3 1 1\\n1 3 2\\n3 2 3\") == \"13\\n4 2 6 1 9 7 5 5 7 1 2 3 3\"\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\") == \"-1\""
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\") == 6\nassert solution(\"3 3 3\\n3 1 1\\n1 3 2\\n3 2 3\") == 13\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\") == -1\nassert solution(\"4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\") == 19\nassert solution(\"3 3 3\\n3 1 1\\n1 3 2\\n3 2 3\") == 4\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\") == 2\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\") == 6\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\") == 9\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\") == 5\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\") == 7\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\") == 1\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\") == 3\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\") == 3\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\") == 7\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\") == 1\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\") == 2\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\") == 3\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\") == 5\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\") == 7\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\") == 9\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\") == 1\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\") == 2\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\") == 3\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\") == 5\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\") == 7\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\") == 9\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\") == 1\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\") == 2\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\") == 3\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\") == 5\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\") == 7\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\") == 9\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\") == 1\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\") == 2\nassert solution"
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected\nprint(expected)"
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n4 5 5\n2 1 1 1 2\n5 3 4 4 3\n4 3 3 3 2\n3 1 3 3 1\n    \"\"\"\n) == \"6\\n19 12 2 18 5 5\"\n\nassert solution(\n    \"\"\"\n3 3 3\n3 1 1\n1 3 2\n3 2 3\n    \"\"\"\n) == \"13\\n4 2 6 1 9 7 5 5 7 1 2 3 3\"\n\nassert solution(\n    \"\"\"\n3 2 2\n1 2\n2 1\n1 2\n    \"\"\"\n) == \"-1\"\n\nassert solution(\n    \"\"\"\n1 2 3 4\n5 6 7 8\n9 10 11 12\n13 14 15 16\n    \"\"\"\n) == \"-1\""
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(str(3) +'' + str(3) +'' + str(3)) == '13'\nassert solution(str(3) +'' + str(2) +'' + str(1) +'' + str(2)) == '4 2 6 1 9 7 5 5 7 1 2 3 3'\nassert solution(str(4) +'' + str(5) +'' + str(5)) == '19 12 2 18 5 5'\nassert solution(str(3) +'' + str(3) +'' + str(1)) == '-1'"
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == \"5 1\"\nassert solution(2) == \"1 5\"\nassert solution(3) == \"3 2\""
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n3\\n3\\n3\\n3\\n3\\n1\\n2\\n3\\n4\\n\") == \"5 1\\n\"\n\nassert solution(\"5\\n4\\n3\\n2\\n1\\n0\\n1\\n2\\n3\\n4\\n\") == \"1 5\\n\"\n\nassert solution(\"4\\n1\\n5\\n3\\n6\\n1\\n2\\n3\\n\") == \"3 2\\n\"\n\nsolution = lambda stdin: \"5 1\\n\"\n"
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"0 0\"\nassert solution(\"0\") == \"0 0\"\nassert solution(\"0 1 2 3 4\") == \"2 3\"\n\nN = int(stdin.readline())\nlabels = list(map(int, stdin.readline().split()))\nparent = [0] * N\n\nfor i in range(1, N):\n    parent[i] = labels[i]"
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n    5\n    3\n    3\n    3\n    3\n    3\n    1\n    2\n    3\n    4\n''') == '5 1'\n\nassert solution('''\n    5\n    4\n    3\n    2\n    1\n    0\n    1\n    2\n    3\n    4\n''') == '1 5'\n\nassert solution('''\n    4\n    1\n    5\n    3\n    6\n    1\n    2\n    3\n''') == '3 2'"
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n3\\n3\\n3\\n3\\n3\\n1\\n2\\n3\\n4\\n\") == \"5 1\\n\", \"Sample Input 1\"\nassert solution(\"5\\n4\\n3\\n2\\n1\\n0\\n1\\n2\\n3\\n4\\n\") == \"1 5\\n\", \"Sample Input 2\"\nassert solution(\"4\\n1\\n5\\n3\\n6\\n1\\n2\\n3\\n\") == \"3 2\\n\", \"Sample Input 3\""
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n3\\n3\\n3\\n3\\n3\\n1\\n2\\n3\\n4\\n\\n\\n\\n\") == \"5 1\\n\"\nassert solution(\"5\\n4\\n3\\n2\\n1\\n0\\n1\\n2\\n3\\n4\\n\\n\\n\\n\") == \"1 5\\n\"\nassert solution(\"4\\n1\\n5\\n3\\n6\\n1\\n2\\n3\\n\\n\\n\\n\") == \"3 2\\n\"\n\nfrom typing import List\nfrom collections import defaultdict\nfrom bisect import bisect_left"
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2\nassert solution(input_3) == output_3"
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == [5, 1]"
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"Your solution is not correct. Expected {expected}, but got {solution(stdin)}.\"\n\nfrom typing import List"
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n3 0\\n3 1\\n3 2\\n3 3\\n3 4\\n\") == 1\nassert solution(\"5\\n4 0\\n3 1\\n2 2\\n1 3\\n0 4\\n\") == 5\nassert solution(\"6\\n3 0\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\\n\") == 5"
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for input {input()}\""
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n3 0\\n3 1\\n3 2\\n3 3\\n3 4\") == 1\nassert solution(\"5\\n4 0\\n3 1\\n2 2\\n1 3\\n0 4\") == 5\nassert solution(\"6\\n3 0\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\") == 5"
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(r\"\\n\".join([str(i) + \"\\n\" for i in range(5)])) == \"1\\n\""
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n3 0\\n3 1\\n3 2\\n3 3\\n3 4\\n') == '1\\n', \"Test Case 1 Failed\"\nassert solution('5\\n4 0\\n3 1\\n2 2\\n1 3\\n0 4\\n') == '5\\n', \"Test Case 2 Failed\"\nassert solution('6\\n3 0\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\\n') == '5\\n', \"Test Case 3 Failed\""
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n3 0\\n3 1\\n3 2\\n3 3\\n3 4\") == \"1\\n\"\nassert solution(\"5\\n4 0\\n3 1\\n2 2\\n1 3\\n0 4\") == \"5\\n\"\nassert solution(\"6\\n3 0\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\") == \"5\\n\""
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n3 0\\n3 1\\n3 2\\n3 3\\n3 4\") == \"1\\n\"\nassert solution(\"5\\n4 0\\n3 1\\n2 2\\n1 3\\n0 4\") == \"5\\n\"\nassert solution(\"6\\n3 0\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\") == \"5\\n\"\n"
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\""
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n3 0\\n3 1\\n3 2\\n3 3\\n3 4\\n') == '1\\n'\nassert solution('5\\n4 0\\n3 1\\n2 2\\n1 3\\n0 4\\n') == '5\\n'\nassert solution('6\\n3 0\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\\n') == '5\\n'"
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r').read()) == ['4\\n3\\n4\\n5\\n6\\n6', '0\\n', '5\\n1\\n2\\n3\\n6\\n7\\n']"
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8\\n1 3 1\\n2 3 1\\n3 4 3\\n4 5 4\\n5 6 3\\n6 7 2\\n6 8 2\") == \"4\\n3\\n4\\n5\\n6\"\nassert solution(\"8\\n1 2 2\\n1 3 1\\n2 4 3\\n2 7 1\\n3 5 2\\n5 6 2\\n7 8 1\") == \"0\\n\"\nassert solution(\"9\\n1 2 2\\n1 3 1\\n1 4 5\\n1 5 5\\n2 6 3\\n3 7 3\\n4 8 1\\n5 9 2\") == \"5\\n1\\n2\\n3\\n6\\n7\\n\""
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Output 1\\n4\\n3\\n4\\n5\\n6\\n\"\n"
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '''\n5\n1\n2\n3\n6\n7\n'''"
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8\\n1 3 1\\n2 3 1\\n3 4 3\\n4 5 4\\n5 6 3\\n6 7 2\\n6 8 2\") == \"4\\n3\\n4\\n5\\n6\\n\", \"Expected Output: 4\\n3\\n4\\n5\\n6\\n\"\nassert solution(\"8\\n1 2 2\\n1 3 1\\n2 4 3\\n2 7 1\\n3 5 2\\n5 6 2\\n7 8 1\") == \"0\\n\", \"Expected Output: 0\\n\"\nassert solution(\"9\\n1 2 2\\n1 3 1\\n1 4 5\\n1 5 5\\n2 6 3\\n3 7 3\\n4 8 1\\n5 9 2\") == \"5\\n1\\n2\\n3\\n6\\n7\\n\", \"Expected Output: 5\\n1\\n2\\n3\\n6\\n7\\n\""
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n1 3 1\\n2 3 1\\n3 4 3\\n4 5 4\\n5 6 3\\n6 7 2\\n6 8 2\") == \"4\\n3\\n4\\n5\\n6\\n\"\nassert solution(\"1\\n1 2 2\\n1 3 1\\n2 4 3\\n2 7 1\\n3 5 2\\n5 6 2\\n7 8 1\") == \"0\\n\"\nassert solution(\"1\\n1 2 2\\n1 3 1\\n1 4 5\\n1 5 5\\n2 6 3\\n3 7 3\\n4 8 1\\n5 9 2\") == \"5\\n1\\n2\\n3\\n6\\n7\\n\""
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution\n"
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input1) == output1, f\"Test 1 failed: {solution(input1)}\"\nassert solution(input2) == output2, f\"Test 2 failed: {solution(input2)}\"\nassert solution(input3) == output3, f\"Test 3 failed: {solution(input3)}\""
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 2\\nV1 V2 V1 V1 V2\\n') == '5\\n'\nassert solution('2 1\\nV1 V2 V1 V1 V2\\n') == '6\\n'\nassert solution('1 2\\nR10 V1 V2 V1 E\\n') == '30\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt').read()) == 'Output'"
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 2\\nV1 V2 V1 V1 V2\\n') == '5'\nassert solution('2 1\\nV1 V2 V1 V1 V2\\n') == '6'\nassert solution('1 2\\nR10 V1 V2 V1 E\\n') == '30'"
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2\\nV1 V2 V1 V1 V2\\nSample Input 1\\nSample Output 1\\n\") == \"5\"\nassert solution(\"2 1\\nV1 V2 V1 V1 V2\\nSample Input 2\\nSample Output 2\\n\") == \"6\"\nassert solution(\"1 2\\nR10 V1 V2 V1 E\\nSample Input 3\\nSample Output 3\\n\") == \"30\"\n"
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2\\nV1 V2 V1 V1 V2\\nSample Output 1: 5\\n\") == \"5\"\nassert solution(\"2 1\\nV1 V2 V1 V1 V2\\nSample Output 2: 6\\n\") == \"6\"\nassert solution(\"1 2\\nR10 V1 V2 V1 E\\nSample Output 3: 30\\n\") == \"30\"\nassert solution(\"def solution(stdin: str) -> str:\\n    pass\\n\") == \"3\""
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2\\nV1 V2 V1 V1 V2\\n\") == \"5\"\nassert solution(\"2 1\\nV1 V2 V1 V1 V2\\n\") == \"6\"\nassert solution(\"1 2\\nR10 V1 V2 V1 E\\n\") == \"30\""
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2\\nV1 V2 V1 V1 V2\\n\") == \"5\\n\"\nassert solution(\"2 1\\nV1 V2 V1 V1 V2\\n\") == \"6\\n\"\nassert solution(\"1 2\\nR10 V1 V2 V1 E\\n\") == \"30\\n\""
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 2\\nV1 V2 V1 V1 V2\\n') == '5'\nassert solution('2 1\\nV1 V2 V1 V1 V2\\n') == '6'\nassert solution('1 2\\nR10 V1 V2 V1 E\\n') == '30'"
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Output\"\n"
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == \"5\", \"Expected output: 5, but got: {}\".format(solution(sample_input_1))\nassert solution(sample_input_2) == \"6\", \"Expected output: 6, but got: {}\".format(solution(sample_input_2))\nassert solution(sample_input_3) == \"30\", \"Expected output: 30, but got: {}\".format(solution(sample_input_3))"
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 24\") == \"38\"\nassert solution(\"10 11\") == \"impossible\"\nassert solution(\"9 216\") == \"546\""
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(Input()) == Output(), \"Test failed\""
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('10 24') == '38'\nassert solution('10 11') == 'impossible'\nassert solution('9 216') == '546'"
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, \"Incorrect output\"\n"
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('10 24') == '38'\nassert solution('10 11') == 'impossible'\nassert solution('9 216') == '546'"
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input1) == expected_output1\nassert solution(sample_input2) == expected_output2\nassert solution(sample_input3) == expected_output3"
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"38\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"546\"\n\nfrom typing import List"
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 24\\n10 11\\n9 216\\n\") == \"38\\nimpossible\\n546\\n\"\nassert solution(\"10 0\\n10 10\\n100 216\\n\") == \"38\\nimpossible\\n546\\n\"\nassert solution(\"10 5000\\n10 10000\\n100 216\\n\") == \"38\\nimpossible\\n546\\n\"\nassert solution(\"10 1000000000\\n10 1000000000\\n100 216\\n\") == \"38\\nimpossible\\n546\\n\""
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 24\") == \"38\"\nassert solution(\"10 11\") == \"impossible\"\nassert solution(\"9 216\") == \"546\"\n\nfrom typing import List"
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 24\") == \"38\", \"Incorrect output for 10 24\"\nassert solution(\"10 11\") == \"impossible\", \"Incorrect output for 10 11\"\nassert solution(\"9 216\") == \"546\", \"Incorrect output for 9 216\""
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    20 60 2 1\n    5 15 0.33333 30\n    22 60 0.66666 70\n    0 10\n    \"\"\"\n) == \"466.662\"\n\nassert solution(\n    \"\"\"\n    3 4 2 1\n    1 3 0.25 8\n    2 4 0.66667 15\n    1 2\n    \"\"\"\n) == \"10.00005\"\n\nassert solution(\n    \"\"\"\n    3 4 1 0\n    0 2 0.25 8\n    \"\"\"\n) == \"2.0\""
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\").read()) == 10.00005\nassert solution(open(\"input2.txt\").read()) == 2.0\nprint(\"All test cases pass\")"
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"20 60 2 1\\n5 15 0.33333 30\\n22 60 0.66666 70\\n0 10\") == \"466.662\"\nassert solution(\"3 4 2 1\\n1 3 0.25 8\\n2 4 0.66667 15\\n1 2\") == \"10.00005\"\nassert solution(\"3 4 1 0\\n0 2 0.25 8\") == \"2.0\""
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"20 60 2 1\\n5 15 0.33333 30\\n22 60 0.66666 70\\n0 10\") == 466.662\nassert solution(\"3 4 2 1\\n1 3 0.25 8\\n2 4 0.66667 15\\n1 2\") == 10.00005"
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Test failed. Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"20 60 2 1\\n5 15 0.33333 30\\n22 60 0.66666 70\\n0 10\") == 466.662\nassert solution(\"3 4 2 1\\n1 3 0.25 8\\n2 4 0.66667 15\\n1 2\") == 10.00005\n\nfrom typing import List"
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('20 60 2 1\\n5 15 0.33333 30\\n22 60 0.66666 70\\n0 10') == '466.662'\nassert solution('3 4 2 1\\n1 3 0.25 8\\n2 4 0.66667 15\\n1 2') == '10.00005'\nassert solution('3 4 1 0\\n0 2 0.25 8') == '2.0'"
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == solution(stdin)\nassert solution(stdin) == solution(stdin)\nassert solution(stdin) == solution(stdin)\nassert solution(stdin) == solution(stdin)\nassert solution(stdin) == solution(stdin)"
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 15 0.33333 30\\n22 60 0.66666 70\\n0 10\") == 466.662\nassert solution(\"3 4 2 1\\n1 3 0.25 8\\n2 4 0.66667 15\\n1 2\") == 10.00005\nassert solution(\"3 4 1 0\\n0 2 0.25 8\") == 2.0"
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n20 60 2 1\n5 15 0.33333 30\n22 60 0.66666 70\n0 10\n''') == '466.662'\n\nassert solution('''\n3 4 2 1\n1 3 0.25 8\n2 4 0.66667 15\n1 2\n''') == '10.00005'\n\nassert solution('''\n3 4 1 0\n0 2 0.25 8\n''') == '2.0'"
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    '''\n    3\n    blue pink 1.0\n    red pink 1.5\n    blue red 1.0\n    '''\n) == '1.5000000000000000\\n'\n\nassert solution(\n    '''\n    2\n    blue red 1.0\n    red pink 1.5\n    '''\n) == '0.0000000000000000\\n'\n\nassert solution(\n    '''\n    4\n    orange pink 1.9\n    yellow orange 1.9\n    green yellow 1.9\n    blue green 1.9\n    '''\n) == '10.000000000000000\\n'"
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(r'Sample Input 1\\n3\\nblue pink 1.0\\nred pink 1.5\\nblue red 1.0\\n') == '1.500000000000000\\n'\nassert solution(r'Sample Input 2\\nblue red 1.0\\nred pink 1.5\\n') == '0.000000000000000\\n'\nassert solution(r'Sample Input 3\\noffice pink 1.6\\nyellow pink 1.2\\ngreen pink 1.5\\nblue pink 1.8\\n') == '10.000000000000000\\n'\n\nfrom typing import List"
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\nblue pink 1.0\\nred pink 1.5\\nblue red 1.0\") == \"1.500000000000000\"\nassert solution(\"2\\nblue red 1.0\\nred pink 1.5\") == \"0.000000000000000\"\nassert solution(\"4\\norange pink 1.9\\nyellow orange 1.9\\ngreen yellow 1.9\\nblue green 1.9\") == \"10.000000000000000\""
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"blue pink 1.0\\nred pink 1.5\\nblue red 1.0\\n\") == 1.500000000000000\nassert solution(\"blue pink 1.0\\nred pink 1.5\\nblue red 1.0\\norange pink 1.9\\nyellow orange 1.9\\ngreen yellow 1.9\\nblue green 1.9\\n\") == 10.000000000000000\nassert solution(\"apple 2.5\\nbanana 1.5\\npineapple 1.7\\nsweet 2.2\\nsour 2.8\\n\") == 2.500000000000000\nassert solution(\"apple 2.5\\nbanana 1.5\\npineapple 1.7\\nsweet 2.2\\nsour 2.8\\norange 3.5\\nbanana 1.7\\npineapple 2.1\\nsweet 2.8\\nsour 2.5\\nbanana 1.9\\npineapple 2.2\\nsweet 2.6\\nsour 2.4\\nbanana 1.8\\npineapple 2.3\\nsweet 2.7\\nsour 2.3\\nbanana 1.6\\npineapple 2.4\\nsweet 2.9\\nsour 2.1\\nbanana 1.4\\npineapple 2.5\\nsweet 2.8\\nsour 2.2\\nbanana 1.3\\npineapple 2.6\\nsweet 2.7\\nsour 2.0\\nbanana 1.2\\npineapple 2.7\\nsweet 2.6\\nsour 1.9\\nbanana 1.1\\npineapple 2.8\\nsweet 2.5\\nsour 1.8\\nbanana 1.0\\npineapple 2.9\\nsweet 2.4\\nsour 1.7\\nbanana 0.9\\npineapple 3.0\\nsweet 2.3\\nsour 1.6\\nbanana 0.8\\npineapple 3.1\\nsweet 2.2\\nsour 1.5\\nbanana 0.7\\npineapple 3.2\\nsweet 2.1\\nsour 1.4\\nbanana 0.6\\npineapple 3.3\\nsweet 2.0\\nsour 1.3\\nbanana 0.5\\npineapple 3.4\\nsweet 1.9\\nsour 1.2\\nbanana 0.4\\npineapple 3.5\\nsweet 1.8\\nsour 1.1\\nbanana 0.3\\npineapple 3.6\\nsweet 1.7\\nsour 1.0\\nbanana 0.2\\npineapple 3.7\\nsweet 1.6\\nsour 0.9\\nbanana 0.1\\npineapple 3.8\\nsweet 1.5\\nsour 0.8\\nbanana 0.0\\npineapple 3.9\\nsweet 1.4\\nsour 0.7\\nbanana -0.1\\npineapple 4.0\\nsweet 1.3\\nsour 0.6\\nbanana -0.2\\npineapple 4.1\\nsweet 1.2\\nsour 0.5\\nbanana -0.3\\npineapple 4.2\\nsweet 1.1\\nsour 0.4\\nbanana -0.4\\npineapple 4.3\\nsweet 1.0\\nsour 0.3\\nbanana -0.5\\npineapple 4.4\\nsweet 0.9\\nsour 0.2\\nbanana -0.6\\npineapple 4.5\\nsweet 0.8\\nsour 0.1\\nbanana -0.7\\npineapple 4.6\\nsweet 0.7\\nsour 0.0\\nbanana"
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\nblue pink 1.0\\nred pink 1.5\\nblue red 1.0\\n\") == \"1.500000000000000\\n\"\nassert solution(\"2\\nblue red 1.0\\nred pink 1.5\\n\") == \"0.000000000000000\\n\"\nassert solution(\"4\\norange pink 1.9\\nyellow orange 1.9\\ngreen yellow 1.9\\nblue green 1.9\\n\") == \"10.000000000000000\\n\""
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\nassert solution(sample_input_3) == sample_output_3"
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 1.5\nassert solution() == 0\nassert solution() == 10"
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"1.5\"\nassert solution(open(\"input1.txt\", \"r\")) == \"1.5000000000000000\"\nassert solution(open(\"input2.txt\", \"r\")) == \"0.000000000000000\"\nassert solution(open(\"input3.txt\", \"r\")) == \"10.000000000000000\"\n"
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(r\"\"\"\n3\nblue pink 1.0\nred pink 1.5\nblue red 1.0\n\"\"\") == \"1.500000000000000\"\n\nassert solution(r\"\"\"\n2\nblue red 1.0\nred pink 1.5\n\"\"\") == \"0.000000000000000\"\n\nassert solution(r\"\"\"\n4\norange pink 1.9\nyellow orange 1.9\ngreen yellow 1.9\nblue green 1.9\n\"\"\") == \"10.000000000000000\""
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\nblue pink 1.0\\nred pink 1.5\\nblue red 1.0') == '1.500000000000000'\nassert solution('2\\nblue red 1.0\\nred pink 1.5') == '0.000000000000000'\nassert solution('4\\norange pink 1.9\\nyellow orange 1.9\\ngreen yellow 1.9\\nblue green 1.9') == '10.000000000000000'"
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    6 1 1 1 0\n    2 3 1 5 3 2\n    2 1 2\n    3 3 4 5\n    1 6\n    \"\"\"\n) == \"180\"\n\nassert solution(\n    \"\"\"\n    3 2 2 1 1\n    2 3 2\n    1 1\n    1 2\n    1 2\n    1 3\n    1 1\n    2 3\n    \"\"\"\n) == \"22\"\n\nassert solution(\n    \"\"\"\n    3 1 1 1 1\n    5 5 5\n    3 1 2 3\n    3 1 2 3\n    3 1 2 3\n    2 1\n    \"\"\"\n) == \"0\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"180\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"180\"\n"
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 1 1 1 0\\n2 3 1 5 3 2\\n2 1 2\\n3 3 4 5\\n1 6\\n\") == \"180\\n\"\nassert solution(\"3 2 2 1 1\\n2 3 2\\n1 1\\n1 2\\n1 2\\n1 3\\n1 1\\n2 3\\n\") == \"22\\n\"\nassert solution(\"3 1 1 1 1\\n5 5 5\\n3 1 2 3\\n3 1 2 3\\n3 1 2 3\\n2 1\\n\") == \"0\\n\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 1 1 1 0\\n2 3 1 5 3 2\\n2 1 2\\n3 3 4 5\\n1 6\") == \"180\\n\"\nassert solution(\"3 2 2 1 1\\n2 3 2\\n1 1\\n1 2\\n1 2\\n1 3\\n1 1\\n2 3\\n\") == \"22\\n\"\nassert solution(\"3 1 1 1 1\\n5 5 5\\n3 1 2 3\\n3 1 2 3\\n3 1 2 3\\n2 1\\n\") == \"0\\n\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"6 1 1 1 0\n2 3 1 5 3 2\n2 1 2\n3 3 4 5\n1 6\"\"\") == \"180\"\n\nassert solution(\"\"\"3 2 2 1 1\n2 3 2\n1 1\n1 2\n1 2\n1 3\n1 1\n2 3\"\"\") == \"22\"\n\nassert solution(\"\"\"3 1 1 1 1\n5 5 5\n3 1 2 3\n3 1 2 3\n3 1 2 3\n2 1\"\"\") == \"0\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '180', \"Incorrect output\"\nassert solution() == '22', \"Incorrect output\"\nassert solution() == '0', \"Incorrect output\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 1 1 1 0\\n2 3 1 5 3 2\\n2 1 2\\n3 3 4 5\\n1 6\") == \"180\"\nassert solution(\"3 2 2 1 1\\n2 3 2\\n1 1\\n1 2\\n1 2\\n1 3\\n1 1\\n2 3\") == \"22\"\nassert solution(\"3 1 1 1 1\\n5 5 5\\n3 1 2 3\\n3 1 2 3\\n3 1 2 3\\n2 1\") == \"0\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"180\"\nassert solution() == \"too many\"\nassert solution() == \"22\"\nassert solution() == \"0\"\n"
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 1 1 1 0\\n2 3 1 5 3 2\\n2 1 2\\n3 3 4 5\\n1 6\") == \"180\"\nassert solution(\"3 2 2 1 1\\n2 3 2\\n1 1\\n1 2\\n1 2\\n1 3\\n1 1\\n2 3\") == \"22\"\nassert solution(\"3 1 1 1 1\\n5 5 5\\n3 1 2 3\\n3 1 2 3\\n3 1 2 3\\n2 1\") == \"0\""
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n    6 8 5\n........\n...#....\n########\n"
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == expected_output_1, \"Sample Input 1 Failed\"\nassert solution(sample_input_2) == expected_output_2, \"Sample Input 2 Failed\"\nassert solution(sample_input_3) == expected_output_3, \"Sample Input 3 Failed\""
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\") == \"20 20\"\nassert solution(\"6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\") == \"17 17\"\nassert solution(\"3 3 2\\n...\\n.#. \\n... \\nup 2\\nright 2\") == \"-1 -1\""
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n    6 8 5\n    ........\n    ........\n    ################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    ##################\n    "
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Solution is incorrect. \\nInput: {input()} \\nOutput: {output}\""
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''6 8 5\n........\n...#....\n########\n"
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n6 8 5\n........\n...#....\n########\n"
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n    6 8 5\n    ........\n    ........\n    ###.####\n"
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 1:\\n20 20\\n\\nSample Input 2:\\n6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 2:\\n17 17\\n\\nSample Input 3:\\n3 3 2\\n...\\n.#. \\n... \\nup 2\\nright 2\\nSample Output 3:\\n-1 -1\\n') == ['20 20', '17 17']"
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input1) == \"20 20\"\nassert solution(sample_input2) == \"17 17\"\nassert solution(sample_input3) == \"-1 -1\""
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"371\\n3\\n2 40 65\\n2 100 150\\n2 300 320\") == \"impossible\"\nassert solution(\"310\\n3\\n2 40 65\\n2 100 150\\n2 300 320\") == \"300\"\nassert solution(\"90\\n2\\n2 20 35\\n2 88 200\") == \"88\"\n\nsolution = lambda stdin: \"impossible\""
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 88"
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"371\\n3\\n2 40 65\\n2 100 150\\n2 300 320\") == \"impossible\"\\n\nassert solution(\"310\\n3\\n2 40 65\\n2 100 150\\n2 300 320\") == \"300\"\\n\nassert solution(\"90\\n2\\n2 20 35\\n2 88 200\") == \"88\""
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"371\\n3\\n2 40 65\\n2 100 150\\n2 300 320\\n\") == \"impossible\"\nassert solution(\"310\\n3\\n2 40 65\\n2 100 150\\n2 300 320\\n\") == \"300\"\nassert solution(\"90\\n2\\n2 20 35\\n2 88 200\\n\") == \"88\""
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(371) == \"impossible\"\nassert solution(310) == \"300\"\nassert solution(90) == \"88\""
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 88\nassert solution() == 300"
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"impossible\", \"Your solution is not correct!\""
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"impossible\", \"Your code is incorrect. Please review the problem statement and sample input/output.\""
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('371\\n3\\n2 40 65\\n2 100 150\\n2 300 320') == 'impossible'\nassert solution('310\\n3\\n2 40 65\\n2 100 150\\n2 300 320') == '300'\nassert solution('90\\n2\\n2 20 35\\n2 88 200') == '88'\n"
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 'impossible'"
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"......\\n......\\n######\\n......\\n......\\n......\\n\") == \"cannot fold\\n\"\nassert solution(\"......\\n#.....\\n####..\\n#.....\\n......\\n......\\n\") == \"can fold\\n\"\nassert solution(\"..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\\n\") == \"cannot fold\\n\""
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('......\\n......\\n######\\n......\\n......\\n......\\n') == 'cannot fold'\n\nassert solution('......\\n#.....\\n####..\\n#.....\\n......\\n......\\n......\\n') == 'can fold'\n\nassert solution('..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\\n......\\n') == 'cannot fold'"
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('......\\n......\\n######\\n......\\n......\\n......\\n......') == 'cannot fold'\nassert solution('......\\n#.....\\n####..\\n#.....\\n......\\n......\\n......\\n......') == 'can fold'\nassert solution('..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\\n......\\n......') == 'cannot fold'"
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"......\\n......\\n######\\n......\\n......\\n......\\n\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......"
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"......\\n......\\n######\\n......\\n......\\n......\\n\") == \"cannot fold\"\nassert solution(\"......\\n#.....\\n####..\\n#.....\\n......\\n......\\n\") == \"can fold\"\nassert solution(\"..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\\n\") == \"cannot fold\""
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"......\\n......\\n....#\\n......#\\n......#\\n......\\n....#\\n......#\\n......#\") == \"can fold\"\n\nassert solution(\"......\\n....#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\n......#\\"
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"......\\n......\\n######\\n......\\n......\\n......\\n\") == \"cannot fold\"\nassert solution(\"......\\n#.....\\n####..\\n#.....\\n......\\n......\\n......\\n\") == \"can fold\"\nassert solution(\"..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\\n......\\n\") == \"cannot fold\""
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"......\\n......\\n######\\n......\\n......\\n......\") == \"can fold\"\nassert solution(\"......\\n#.....\\n####..\\n#.....\\n......\\n......\") == \"cannot fold\"\nassert solution(\"..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\") == \"cannot fold\""
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"....\\n....\\n####\\n....\\n....\\n\") == \"cannot fold\"\nassert solution(\"......\\n......\\n..##..\\n...#..\\n......\\n......\\n\") == \"can fold\"\nassert solution(\"..#.#\\n..##.\\n....#\\n....#\\n....#\\n....#\\n\") == \"cannot fold\""
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input1) == output1, \"Test 1 failed\"\nassert solution(input2) == output2, \"Test 2 failed\"\nassert solution(input3) == output3, \"Test 3 failed\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('abcefgabc') == 'abc', \"Test case 1 failed\"\nassert solution('abcbabcba') == 'abcba', \"Test case 2 failed\"\nassert solution('aaaa') == 'aaa', \"Test case 3 failed\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abcefgabc\") == \"abc\", \"Solution 1 failed\"\nassert solution(\"abcbabcba\") == \"abcba\", \"Solution 2 failed\"\nassert solution(\"aaaa\") == \"aaa\", \"Solution 3 failed\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('abcefgabc') == 'abc', \"Incorrect output 1\"\nassert solution('abcbabcba') == 'abcba', \"Incorrect output 2\"\nassert solution('aaaa') == 'aaa', \"Incorrect output 3\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\""
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == '''def solution(stdin: str) -> str:\n    pass\n'''\n"
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == expected_output, f\"Expected output: {expected_output}, Received: {solution()}\""
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 4\nassert solution() == 6\nassert solution() == 4\n"
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == output, f\"The function should return {output}, but it returned {solution(stdin)}\"\n\nfor i in range(5):\n    input_data = list(map(int, input().split()))\n    assert solution(input_data) == output, f\"Test case {i+1} is incorrect.\"\n\nprint(f\"All test cases passed.\")"
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1 4\\n2 5\") == 4\nassert solution(\"2\\n1 4\\n2 10005\") == 6\nassert solution(\"3\\n1 4\\n2 10\\n0 15\") == 4"
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"4\\n\""
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input(1)) == '4'\nassert solution(sample_input(2)) == '6'\nassert solution(sample_input(3)) == '4'\n\nfrom typing import List"
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2\\n1 4\\n2 5\\n') == 4\nassert solution('2\\n1 4\\n2 10005\\n') == 6\nassert solution('3\\n1 4\\n2 10\\n0 15\\n') == 4\n\nfrom typing import List"
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=None) == '4\\n', \"Test failed\""
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\n1 4\\n2 5\\n') == 4\nassert solution('2\\n1 4\\n2 10005\\n') == 6\nassert solution('3\\n1 4\\n2 10\\n0 15\\n') == 4"
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 2, \"Output should be 2.\""
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 3\nassert solution(1) == 1\nassert solution(2) == 2\nassert solution(7) == 2\nassert solution(10) == 1\nassert solution(1000000000) == 1000000000\n"
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 3\nassert solution(5) == 0\nassert solution(7) == 2"
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7\\n2 3 4 4 8 12 24\") == \"2\\n\", \"Test 1\"\nassert solution(\"3\\n7 7 7\") == \"3\\n\", \"Test 2\"\nassert solution(\"5\\n1 2 3 2 1\") == \"0\\n\", \"Test 3\""
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7\\n2 3 4 4 8 12 24\") == \"2\\n\"\nassert solution(\"3\\n7 7 7\") == \"3\\n\"\nassert solution(\"5\\n1 2 3 2 1\") == \"0\\n\""
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 3, \"The output should be 3, but it is: \" + str(solution(3))\nassert solution(4) == 2, \"The output should be 2, but it is: \" + str(solution(4))\nassert solution(5) == 0, \"The output should be 0, but it is: \" + str(solution(5))\nassert solution(1) == 2, \"The output should be 2, but it is: \" + str(solution(1))\nassert solution(6) == 6, \"The output should be 6, but it is: \" + str(solution(6))\nassert solution(2) == 2, \"The output should be 2, but it is: \" + str(solution(2))"
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input1) == '2'\nassert solution(sample_input2) == '3'\nassert solution(sample_input3) == '0'"
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input_1) == '2'\nassert solution(sample_input_2) == '3'\nassert solution(sample_input_3) == '0'"
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\", \"Expected output: '2', got: {}\".format(solution())"
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2\nassert solution(sample_input_3) == expected_output_3"
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 5 4\\nS#.F.\\n.MFMG\") == \"3\\n\"\nassert solution(\"1 2 1\\nGS\") == \"1\\n\"\nassert solution(\"2 2 10\\nS#\") == \"-1\\n\""
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 5 4\\nS#.F.\\n.MFMG\\n\") == \"3\"\nassert solution(\"1 2 1\\nGS\\n\") == \"1\"\nassert solution(\"2 2 10\\nS#\\n#G\\n\") == \"-1\""
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 5 4\\nS#.F.\\n.MFMG\") == \"3\"\nassert solution(\"1 2 1\\nGS\") == \"1\"\nassert solution(\"2 2 10\\nS#\") == \"-1\""
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 3"
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 5 4\\nS#.F.\\n.MFMG\") == \"3\"\nassert solution(\"1 2 1\\nGS\") == \"1\"\nassert solution(\"2 2 10\\nS#\") == \"-1\""
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 5 4\\nS#.F.\\n.MFMG\\n') == '3'\nassert solution('1 2 1\\nGS\\n') == '1'\nassert solution('2 2 10\\nS#\\n#G\\n') == '-1'"
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 5 4\\nS#.F.\\n.MFMG\\n') == '3'\nassert solution('1 2 1\\nGS\\n') == '1'\nassert solution('2 2 10\\nS#\\n#G\\n') == '-1'"
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 5 4\\nS#.F.\\n.MFMG\") == \"3\"\nassert solution(\"1 2 1\\nGS\") == \"1\"\nassert solution(\"2 2 10\\nS#\") == \"-1\""
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 5 4\\nS#.F.\\n.MFMG\\nSample Output 1:3\\n\\nSample Input 2:1 2 1\\nGS\\nSample Output 2:1\\n\\nSample Input 3:2 2 10\\nS#G\\nSample Output 3:-1\\n\") == \"3\\n1\\n-1\\n\""
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\nS..\\n.#.\\n..G\\nDRRDD\\n\") == \"1\\n\"\nassert solution(\"3 7\\n.......\\n.G.#.S.\\n.......\\nLDLDLLDR\\n\") == \"1\\n\"\nassert solution(\"3 7\\n.#.....\\n.G.##S.\\n.......\\nLDLDLLDR\\n\") == \"2\\n\""
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test case {index + 1} failed\""
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1\\n\", \"Expected '1' but got '{}'\".format(solution())  # Test 1"
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\nS..\\n.#.\\n..G\\nDRRDD\") == \"1\\n\"\nassert solution(\"3 7\\n.......\\n.G.#.S.\\n.......\\nLDLDLLDR\") == \"1\\n\"\nassert solution(\"3 7\\n.#.....\\n.G.##S.\\n.......\\nLDLDLLDR\") == \"2\\n\""
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\nS..\\n.#.\\n..G\\nDRRDD\\n\") == \"1\\n\"\nassert solution(\"3 7\\n.......\\n.G.#.S.\\n.......\\nLDLDLLDR\\n\") == \"1\\n\"\nassert solution(\"3 7\\n.#.....\\n.G.##S.\\n.......\\nLDLDLLDR\\n\") == \"2\\n\""
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"1\", \"Sample Output 1: Solution should return 1, but returned: \" + solution(input())\nassert solution(input()) == \"1\", \"Sample Output 2: Solution should return 1, but returned: \" + solution(input())\nassert solution(input()) == \"2\", \"Sample Output 3: Solution should return 2, but returned: \" + solution(input())"
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\nS..\\n.#.\\n..G\\nDRRDD\\n\") == \"1\\n\"\nassert solution(\"3 7\\n.......\\n.G.#.S.\\n.......\\nLDLDLLDR\\n\") == \"1\\n\"\nassert solution(\"3 7\\n.#.....\\n.G.##S.\\n.......\\nLDLDLLDR\\n\") == \"2\\n\""
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 3\\nS..\\n.#.\\n..G\\nDRRDD') == '1\\n'\nassert solution('3 7\\n.......\\n.G.#.S.\\n.......\\nLDLDLLDR') == '1\\n'\nassert solution('3 7\\n.#.....\\n.G.##S.\\n.......\\nLDLDLLDR') == '2\\n'"
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\nS..\\n.#. \\n..G\\nDRRDD\") == \"1\\n\"\nassert solution(\"3 7\\n....... \\n.G.#.S.\\n....... \\nLDLDLLDR\") == \"1\\n\"\nassert solution(\"3 7\\n.#..... \\n.G.##S.\\n....... \\nLDLDLLDR\") == \"2\\n\""
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\nS..\\n.#.\\n..G\\nDRRDD\\n\") == \"1\\n\"\nassert solution(\"3 7\\n.......\\n.G.#.S.\\n.......\\nLDLDLLDR\\n\") == \"1\\n\"\nassert solution(\"3 7\\n.#.....\\n.G.##S.\\n.......\\nLDLDLLDR\\n\") == \"2\\n\""
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1000200 799\"\nassert solution() == \"uncertain\"\nassert solution() == \"impossible\""
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected, f\"Input: {stdin}, Expected: {expected}\""
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('999999 0 1000\\n999900 950 451\\n987654 123 13222') == '1000200 799'\nassert solution('2\\n100 0 101\\n0 200 199') == 'uncertain'\nassert solution('2\\n100 0 100\\n0 200 199') == 'impossible'"
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1000200 799\\n\" # Corrected solution\nassert solution() == \"uncertain\\n\" # Input 2\nassert solution() == \"impossible\\n\" # Input 3\nassert solution() == \"100 0 100\\n\" # Input 1"
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1000200 799\\n\"\nassert solution() == \"uncertain\\n\"\nassert solution() == \"impossible\\n\""
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n999999 0 1000\\n999900 950 451\\n987654 123 13222\") == \"1000200 799\\n\"\nassert solution(\"2\\n100 0 101\\n0 200 199\") == \"uncertain\\n\"\nassert solution(\"2\\n100 0 100\\n0 200 199\") == \"impossible\\n\""
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n999999 0 1000\\n999900 950 451\\n987654 123 13222\") == \"1000200 799\\n\"\nassert solution(\"2\\n100 0 101\\n0 200 199\") == \"uncertain\\n\"\nassert solution(\"2\\n100 0 100\\n0 200 199\") == \"impossible\\n\"\n"
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"999999 0 1000\\n999900 950 451\\n987654 123 13222\") == \"1000200 799\"\nassert solution(\"2\\n100 0 101\\n0 200 199\") == \"uncertain\"\nassert solution(\"2\\n100 0 100\\n0 200 199\") == \"impossible\""
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n999999 0 1000\\n999900 950 451\\n987654 123 13222\\n\") == \"1000200 799\\n\"\nassert solution(\"2\\n100 0 101\\n0 200 199\\n\") == \"uncertain\\n\"\nassert solution(\"2\\n100 0 100\\n0 200 199\\n\") == \"impossible\\n\""
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3\n999999 0 1000\n999900 950 451\n987654 123 13222\n\"\"\") == \"1000200 799\"\n\nassert solution(\"\"\"\n2\n100 0 101\n0 200 199\n\"\"\") == \"uncertain\"\n\nassert solution(\"\"\"\n2\n100 0 100\n0 200 199\n\"\"\") == \"impossible\""
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1\"\nassert solution() == \"2\"\nassert solution() == \"3\""
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n2\n4 7\n9 8\n14 17\n19 18\n''') == '2'\nassert solution('''\n2\n4 7\n14 17\n9 8\n19 18\n''') == '1'\nassert solution('''\n2\n4 8\n9 7\n14 18\n19 17\n''') =='syntax error'"
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"syntax error\\n\"\nassert solution() == \"1\\n2\\n\"\nassert solution() == \"2\\n1\\n\"\nassert solution() == \"1\\n2\\n\""
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n4 7\\n9 8\\n14 17\\n19 18\") == 2\nassert solution(\"2\\n4 7\\n14 17\\n9 8\\n19 18\") == 1\nassert solution(\"2\\n4 8\\n9 7\\n14 18\\n19 17\") == \"syntax error\""
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2\nassert solution(sample_input_3) == expected_output_3"
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == [\"2\", \"1\"]\nassert solution(input()) == [\"1\", \"2\"]\nassert solution(input()) == [\"syntax error\"]"
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 7\\n9 8\\n14 17\\n19 18\") == \"2\\n1\\n\"\nassert solution(\"2\\n4 7\\n14 17\\n9 8\\n19 18\") == \"1\\n2\\n\"\nassert solution(\"2\\n4 8\\n9 7\\n14 18\\n19 17\") == \"syntax error\"\n\nfrom typing import List"
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '2\\n1\\n'\nassert solution(input()) == '1\\n2\\n'"
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\"\n\nfor i in range(1, 4):\n    assert solution(f\"1 {i} _ _ _ _ _ _\") == f\"{i+1}\", f\"Expected {i+1}, got {solution(f\"1 {i} _ _ _ _ _ _\")}\"\n    assert solution(f\"2 {i} _ _ _ _ _ _\") == f\"{i+1}\", f\"Expected {i+1}, got {solution(f\"2 {i} _ _ _ _ _ _\")}\"\n\nfor i in range(1, 3):\n    assert solution(f\"3 {i} _ _ _ _ _ _\") == f\"{i+1}\", f\"Expected {i+1}, got {solution(f\"3 {i} _ _ _ _ _ _\")}\"\n    assert solution(f\"4 {i} _ _ _ _ _ _\") == f\"{i+1}\", f\"Expected {i+1}, got {solution(f\"4 {i} _ _ _ _ _ _\")}\"\n    assert solution(f\"5 {i} _ _ _ _ _ _\") == f\"{i+1}\", f\"Expected {i+1}, got {solution(f\"5 {i} _ _ _ _ _ _\")}\"\n\nassert solution(f\"6 {100} _ _ _ _ _ _\") == \"many\", f\"Expected many, got {solution(f\"6 {100} _ _ _ _ _ _\")}\"\nassert solution(f\"6 {99} _ _ _ _ _ _\") == f\"60\", f\"Expected 60, got {solution(f\"6 {99} _ _ _ _ _ _\")}\"\nassert solution(f\"6 {101} _ _ _ _ _ _\") == f\"101\", f\"Expected 101, got {solution(f\"6 {101} _ _ _ _ _ _\")}\""
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == output\n"
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"many\""
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 90 22 _ 6 _ _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _\") == \"1\"\nassert solution(\"85 55 _ 99 51 _ _ _ _ _\\n_ _ _ _ _ _ _ 85 63 153\") == \"1\"\nassert solution(\"160 _ _ 136 _ _ _ _ _ 170\\n_ _ _ _ 120 _ _ 144 _ _\") == \"8640\""
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"many\" # Please implement the solution to the problem\nassert solution() == \"one\" # Please implement the solution to the problem"
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input1) == \"1\\n\"  # Output: 1\n\nassert solution(sample_input2) == \"1\\n\"  # Output: 1\n\nassert solution(sample_input3) == \"8640\\n\"  # Output: 8640"
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n_ 90 22 _ 6 _ _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _\") == \"1\\n\"\nassert solution(\"2\\n85 55 _ 99 51 _ _ _ _ _\\n_ _ _ _ _ _ _ 85 63 153\") == \"1\\n\"\nassert solution(\"3\\n160 _ _ 136 _ _ _ _ _ 170\\n_ _ _ _ 120 _ _ 144 _ _\") == \"8640\\n\""
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n_ 90 22 _ 6 _ _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _\\n\") == \"1\"\nassert solution(\"2\\n85 55 _ 99 51 _ _ _ _ _\\n_ _ _ _ _ _ _ 85 63 153\\n\") == \"1\"\nassert solution(\"3\\n160 _ _ 136 _ _ _ _ _ 170\\n_ _ _ _ 120 _ _ 144 _ _\\n\") == \"8640\""
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"TODO\""
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input1) == expected1\nassert solution(input2) == expected2\nassert solution(input3) == expected3"
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 2\\n1 3\\n\") == \"2\\n\"\nassert solution(\"5\\n2 1\\n1 5\\n3 1\\n4 3\\n\") == \"8\\n\"\nassert solution(\"10\\n1 2\\n2 3\\n2 4\\n1 5\\n3 6\\n2 7\\n7 8\\n5 9\\n5 10\\n\") == \"24\\n\""
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(str(input())) == \"24\""
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 2\\n1 3\\n\") == \"2\"\nassert solution(\"5\\n2 1\\n1 5\\n3 1\\n4 3\\n\") == \"8\"\nassert solution(\"10\\n1 2\\n2 3\\n2 4\\n1 5\\n3 6\\n2 7\\n7 8\\n5 9\\n5 10\\n\") == \"24\""
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2\\n\""
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n1 2\\n1 3\\n') == '2\\n'\nassert solution('5\\n2 1\\n1 5\\n3 1\\n4 3\\n') == '8\\n'\nassert solution('10\\n1 2\\n2 3\\n2 4\\n1 5\\n3 6\\n2 7\\n7 8\\n5 9\\n5 10\\n') == '24\\n'\n"
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 2\\n1 3\\n\") == \"2\"\nassert solution(\"5\\n2 1\\n1 5\\n3 1\\n4 3\\n\") == \"8\"\nassert solution(\"10\\n1 2\\n2 3\\n2 4\\n1 5\\n3 6\\n2 7\\n7 8\\n5 9\\n5 10\\n\") == \"24\""
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input1) == output1, f\"Test case 1 failed. Got '{solution(input1)}', expected '{output1}'.\"\nassert solution(input2) == output2, f\"Test case 2 failed. Got '{solution(input2)}', expected '{output2}'.\"\nassert solution(input3) == output3, f\"Test case 3 failed. Got '{solution(input3)}', expected '{output3}'.\""
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 24"
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2\\n1 3\\n\") == \"2\\n\", \"Sample Input 1\"\nassert solution(\"5\\n2 1\\n1 5\\n3 1\\n4 3\\n\") == \"8\\n\", \"Sample Input 2\"\nassert solution(\"10\\n1 2\\n2 3\\n2 4\\n1 5\\n3 6\\n2 7\\n7 8\\n5 9\\n5 10\\n\") == \"24\\n\", \"Sample Input 3\""
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed: {solution(input())}, expected {expected_output}.\""
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"secretmessage\") == \"essa\", \"Error: The first message fragment should be 'essa'.\"\nassert solution(\"treetreetreetree\") == \"3\", \"Error: The second message fragment should be '3'.\"\nassert solution(\"oranges\") == \"0\", \"Error: The third message fragment should be '0'.\""
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('secretmessage') == 'essa', \"Input 1 incorrect\"\nassert solution('treetreetreetree') == '3', \"Input 2 incorrect\"\nassert solution('oranges') == '0', \"Input 3 incorrect\""
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"secretmessage\") == \"essa\"\nassert solution(\"treetreetreetree\") == \"3\"\nassert solution(\"oranges\") == \"0\""
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"secretmessage\") == \"essa\", \"Incorrect output\"\nassert solution(\"treetreetreetree\") == \"3\", \"Incorrect output\"\nassert solution(\"oranges\") == \"0\", \"Incorrect output\""
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"secretmessage\") == \"essa\"\nassert solution(\"treetreetreetree\") == \"3\"\nassert solution(\"oranges\") == \"0\""
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"secretmessage\\nboot\") == \"essa\"\nassert solution(stdin=\"treetreetreetree\\nwood\") == \"3\"\nassert solution(stdin=\"oranges\\napples\") == \"0\""
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('secretmessage') == 'essa', \"Expected 'essa', got: {}\".format(solution('secretmessage'))\nassert solution('treetreetreetree') == '3', \"Expected '3', got: {}\".format(solution('treetreetreetree'))\nassert solution('oranges') == '0', \"Expected '0', got: {}\".format(solution('oranges'))"
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\").read()) == \"def solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"secretmessage\\nboot\") == \"essa\"\nassert solution(\"treetreetreetree\\nwood\") == \"3\"\nassert solution(\"oranges\\nappl\\n\") == \"0\""
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"secretmessage\\nboot\") == \"essa\"\nassert solution(\"treetreetreetree\\nwood\") == \"3\"\nassert solution(\"oranges\\napples\") == \"0\""
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '2', \"The output should be 2\""
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n>^<^\\n######\\n#.#..#\\n#....#\\n#..R.#\\n#....#\\n######\\n\") == \"2\"\nassert solution(\"4\\nv<^>\\n####\\n#.R#\\n#..#\\n####\\n\") == \"4\"\nassert solution(\"4\\n<<<\\n####\\n#.R#\\n#..#\\n####\\n\") == \"1\""
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"4\""
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1\"\n"
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=input()) == \"1\"\nassert solution(stdin=input()) == \"4\"\nassert solution(stdin=input()) == \"1\""
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 1, \"Your solution is incorrect!\"\nassert solution(\"abc\") == 1, \"Your solution is incorrect!\"\nassert solution(\"abcd\") == 1, \"Your solution is incorrect!\"\nassert solution(\"abcde\") == 2, \"Your solution is incorrect!\"\nassert solution(\"abcdef\") == 1, \"Your solution is incorrect!\"\nassert solution(\"abcdefg\") == 1, \"Your solution is incorrect!\"\nassert solution(\"abcdefg!\") == 1, \"Your solution is incorrect!\"\nassert solution(\"abcdefg!!!\") == 1, \"Your solution is incorrect!\"\nassert solution(\"abcdefg!!!\") == 1, \"Your solution is incorrect!\"\nassert solution(\"abcdefg!!!!\") == 1, \"Your solution is incorrect!\"\nassert solution(\"abcdefg!!!!!\") == 1, \"Your solution is incorrect!\"\nassert solution(\"abcdefg!!!!!!!\") == 1, \"Your solution is incorrect!\"\nassert solution(\"abcdefg!!!!!!!!\") == 1, \"Your solution is incorrect!\""
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n>^<^\\n######\\n#.#..#\\n#....#\\n#..R.#\\n#....#\\n######\") == 2\nassert solution(\"4\\nv<^>\\n####\\n#.R#\\n#..#\\n####\") == 4\nassert solution(\"4\\n<<<\\n####\\n#.R#\\n#..#\\n####\") == 1\n"
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=open('input.txt', 'r')) == '1'\nassert solution(stdin=open('input2.txt', 'r')) == '2'\nassert solution(stdin=open('input3.txt', 'r')) == '4'"
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r')) == '2'\nassert solution(open('input_2.txt', 'r')) == '4'\nassert solution(open('input_3.txt', 'r')) == '1'\nprint(\"All test cases passed\")"
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test failed: solution({input()}) -> {solution(input())}, expected_output: {expected_output}\""
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n2 3 0 2 9 2 3 0\\n1 6 1 4 6 3 -1 -2\\n\") == \"3\\n\"\nassert solution(\"3\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\\n\") == \"6\\n\"\nassert solution(\"2\\n7 0 0 20 10 3 0 10\\n10 1 0 2 5 2 2 7\\n\") == \"11\\n\"\n"
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"3\\n\", \"Solution not correct\"\n"
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n2 3 0 2 9 2 3 0\\n1 6 1 4 6 3 -1 -2\\n\") == \"3\\n\"\nassert solution(\"3\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\\n\") == \"6\\n\"\nassert solution(\"2\\n7 0 0 20 10 3 0 10\\n10 1 0 2 5 2 2 7\\n\") == \"11\\n\""
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(solution_input) == solution_output, f\"Solution failed for the given input. Expected {solution_output}, but got {solution(solution_input)}.\""
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"3\"\nassert solution(open(\"input2.txt\", \"r\")) == \"6\"\nassert solution(open(\"input3.txt\", \"r\")) == \"11\""
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 3\nassert solution() == 6\nassert solution() == 11"
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2\\n2 3 0 2 9 2 3 0\\n1 6 1 4 6 3 -1 -2\\n') == '3\\n'\nassert solution('3\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\\n') == '6\\n'\nassert solution('2\\n7 0 0 20 10 3 0 10\\n10 1 0 2 5 2 2 7\\n') == '11\\n'"
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"The Peruvian government has delivered a model of the fogs that roll in from the sea each day. Everything in the model is positioned relative to an x-y coordinate system, with the x-axis at ground level, running roughly parallel to the coast (just a few miles inland), and the y-axis oriented straight up. According to the model, there are n originator fogs, F_1, F_2,..., F_n. When F_i rolls in for the first time on day d_i, it settles into a space that intersects the x-y plane in an axis-aligned rectangular region with left coordinate \\ell_i, right coordinate r_i, and height h_i. Because of the periodic nature of the sea currents, each originator fog F_i gives rise to m_ i fogs in total (including F_i itself), the k-th of which intersects the rectangular region \\ell_i + k\\Delta x_i, r_i + k\\Delta x_i, for 0 \\leq k < m_ i (where the \u201cchange\u201d values \\Delta x_i, \\Delta h_i, and \\Delta d_i are specific to F_i).\n\nThe nets that are erected to catch the fogs are also modelled as axis-aligned rectangular regions lying in the same x-y plane (but not necessarily with lower height 0, as is the case for the fogs). Since building a single rectangular net of sufficient length and height to catch all possible fogs would be prohibitively expensive, it was decided that for the best use of public money, the nets would be installed incrementally. Initially, there are no nets. Each day, after all the fogs have lifted, net maintainers determine how many fogs were \u201cmissed\u201d that day \u2013 that is, how many fogs corresponded to rectangles that were not completely contained in the region of the x-y plane covered by nets. The workers then add rectangular net \u201cpatches\u201d of minimum total area so that the resulting array of nets would have caught all the fogs that day. The next day, the fogs roll in again, they lift, the workers add more patches (if necessary), and the cycle continues. Note that the portion of the x-y plane covered by nets at any point in time is a union of axis-aligned rectangles, but in general does not constitute a single rectangular region.\n\nGiven a complete description of the n originator fogs, count the total number of fogs that are missed."
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\n2 3 0 2 9 2 3 0\\n1 6 1 4 6 3 -1 -2\\n') == '3\\n'\nassert solution('3\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\\n') == '6\\n'\nassert solution('2\\n7 0 0 20 10 3 0 10\\n10 1 0 2 5 2 2 7\\n') == '11\\n'"
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    '60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0') == 168.791651246\n\nassert solution(\n    '60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0') == 163.5274740179\n\nassert solution(\n    '0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0') == 3.7320508076"
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\") == \"168.7916512460\", \"The solution is incorrect\"\nassert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\") == \"163.5274740179\", \"The solution is incorrect\"\nassert solution(\"0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\") == \"3.7320508076\", \"The solution is incorrect\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\") == \"168.7916512460\", \"Expected 168.7916512460, but got: \" + solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\")\nassert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\") == \"163.5274740179\", \"Expected 163.5274740179, but got: \" + solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\")\nassert solution(\"0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\") == \"3.7320508076\", \"Expected 3.7320508076, but got: \" + solution(\"0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\")"
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n    60.0 0.0 50.0 170.0\n    3\n    40.0 0.0 0.0 0.0\n    5.0 20.0 5.0 170.0\n    95.0 0.0 95.0 80.0\n''') == '168.7916512460'\nassert solution('''\n    60.0 0.0 50.0 170.0\n    3\n    40.0 0.0 0.0 0.0\n    5.0 20.0 5.0 170.0\n    95.0 0.0 95.0 100.0\n''') == '163.5274740179'\nassert solution('''\n    0.0 1.0 4.0 1.0\n    1\n    0.0 0.0 4.0 0.0\n''') == '3.7320508076'"
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"168.7916512460\", \"168.7916512460\""
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\\n\") == \"168.7916512460\\n\", \"Test 1 failed\"\nassert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\\n\") == \"163.5274740179\\n\", \"Test 2 failed\"\nassert solution(\"0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\\n\") == \"3.7320508076\\n\", \"Test 3 failed\"\n\nfrom typing import List"
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0') == '168.7916512460'\nassert solution('60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0') == '163.5274740179'\nassert solution('0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0') == '3.7320508076'"
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\n    return \"TODO\"\\n'\n\nsolution = '''\n"
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"Input {input()} failed, expected {output()}, but got {solution(input())}\""
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\\n\") == \"168.7916512460\\n\"\nassert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\\n\") == \"163.5274740179\\n\"\nassert solution(\"0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\\n\") == \"3.7320508076\\n\""
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"rarity\""
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(6, 5, 3) == 'rarity'\nassert solution(9, 8, 1) == 'canterlot'\nassert solution(5, 3, 5) =='madam'"
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == 'rarity'\nassert solution(2) == 'canterlot'\nassert solution(3) =='madam'"
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 5 3\") == \"rarity\"\nassert solution(\"9 8 1\") == \"canterlot\"\nassert solution(\"5 3 5\") == \"madam\""
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(str(6)) == \"rarity\"\nassert solution(str(9)) == \"canterlot\"\nassert solution(str(5)) == \"madam\""
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(6, 5, 3) == \"rarity\"\nassert solution(9, 8, 1) == \"canterlot\"\nassert solution(5, 3, 5) == \"madam\"\n\nfrom typing import List"
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"rarity\"\n\nfrom typing import List"
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=sample_input_1) == 'rarity'\nassert solution(stdin=sample_input_2) == 'canterlot'\nassert solution(stdin=sample_input_3) =='madam'"
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"rarity\""
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(6, 5, 3) == \"rarity\"\nassert solution(9, 8, 1) == \"canterlot\"\nassert solution(5, 3, 5) == \"madam\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\"\nassert solution(\"International contest- motivation high Programmers have fun!.\") == \"International contest- motivation high Programmers have fun!. def solution(stdin: str) -> str: pass\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\\n\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\\n\"\nassert solution(\"International contest- motivation high Programmers have fun!. def solution(stdin: str) -> str: pass\") == \"International contest- motivation high Programmers have fun!. def solution(stdin: str) -> str: pass\\n\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road.\\nLeaves, glowing in autumn sun,\\nfall in Virginia.\\n\"\n\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\\n\"\n\nassert solution(\"International contest- motivation high Programmers have fun!\") == \"International\\ncontest- motivation high\\nProgrammers have fun!\\n\"\n\nassert solution(\"The quick brown fox jumps over the lazy dog. The dog is running.\") == \"The quick brown fox jumps over the lazy dog.\\nThe dog is running.\\n\"\n\nassert solution(\"The quick brown fox jumps over the lazy dog. The dog is running. The dog runs.\") == \"The quick brown fox jumps over the lazy dog.\\nThe dog is running.\\nThe dog runs.\\n\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.') == 'Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.'\nassert solution('Who would know if we had too few syllables?') == 'Who would know if we had too few syllables?'\nassert solution('International contest- motivation high Programmers have fun!') == 'International contest- motivation high Programmers have fun!'"
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road\\nLeaves, glowing in autumn sun,\\nfall in Virginia.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\\n\"\nassert solution(\"International contest- motivation high Programmers have fun!\") == \"International\\ncontest- motivation high\\nProgrammers have fun!\\n\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\\n\\nLeaves, glowing in autumn sun, fall in Virginia.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\\n\\nWho would know if we had too few syllables?\"\nassert solution(\"International contest- motivation high Programmers have fun!\") == \"International\\ncontest- motivation high\\nProgrammers have fun!\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road.\\nLeaves, glowing in autumn sun,\\nfall in Virginia.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\\n\"\nassert solution(\"International contest- motivation high Programmers have fun!. \") == \"International\\ncontest- motivation high\\nProgrammers have fun!\\n\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road. \\nLeaves, glowing in autumn sun, \\nfall in Virginia.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\\n\"\nassert solution(\"International contest- motivation high Programmers have fun!.\") == \"International\\ncontest- motivation high\\nProgrammers have fun!."
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\"\nassert solution(\"International contest- motivation high Programmers have fun!.def solution(stdin: str) -> str:pass\") == \"International contest- motivation high Programmers have fun!.def solution(stdin: str) -> str:pass\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road.\\nLeaves, glowing in autumn sun, \\nfall in Virginia.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\\n\"\nassert solution(\"International contest- motivation high Programmers have fun!. def solution(stdin: str) -> str: pass\") == \"International\\ncontest- motivation high\\nProgrammers have fun!. \""
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"ThoreTiemann\") == \"ThoreH\"\nassert solution(\"ThoreHusfeldt\") == \"Thore is awesome\"\nassert solution(\"ThoreHusfeldter\") == \"Thore sucks\"\n"
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\nThoreTiemann\\nThoreHusfeldt\") == \"ThoreH\"\nassert solution(\"2\\nThoreHusfeldt\\nJohanSannemo\") == \"Thore is awesome\"\nassert solution(\"2\\nThoreHusfeldter\\nThoreHusfeldt\") == \"Thore sucks\""
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"2\\nThoreHusfeldt\\nThoreHusfeldter\\n\") == \"Thore is awesome\\n\"\n\nassert solution(stdin=\"2\\nThoreHusfeldt\\nThoreHusfeldter\\n\") == \"Thore sucks\\n\""
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=open('input.txt', 'r').read()) == 'ThoreH'\n"
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1') == 'ThoreH'\nassert solution('2') == 'Thore is awesome'\nassert solution('3') == 'Thore sucks'"
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(2) == \"ThoreH\"\nassert solution(2) == \"Thore is awesome\"\nassert solution(2) == \"Thore sucks\""
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''1\nThoreTiemann\nThoreHusfeldt''') == 'ThoreH'\nassert solution('''2\nThoreHusfeldt\nJohanSannemo''') == 'Thore is awesome'\nassert solution('''2\nThoreHusfeldter\nThoreHusfeldt''') == 'Thore sucks'"
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\nThoreTiemann\\nThoreHusfeldt\\n\") == \"ThoreH\"\nassert solution(\"2\\nThoreHusfeldt\\nJohanSannemo\\n\") == \"Thore is awesome\"\nassert solution(\"2\\nThoreHusfeldter\\nThoreHusfeldt\\n\") == \"Thore sucks\"\n\nfrom typing import List"
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"ThoreHusfeldt\") == \"Thore is awesome\"\nassert solution(\"ThoreHusfeldterThoreHusfeldt\") == \"Thore sucks\"\nassert solution(\"ThoreHusfeldtThoreHusfeldt\") == \"Thore is awesome\""
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\nThoreTiemann\\nThoreHusfeldt\\n\") == \"ThoreH\"\nassert solution(\"2\\nThoreHusfeldt\\nJohanSannemo\\n\") == \"Thore is awesome\"\nassert solution(\"2\\nThoreHusfeldter\\nThoreHusfeldt\\n\") == \"Thore sucks\""
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"P*P\") == 6, \"Test failed for P*P\"\nassert solution(\"L*R\") == 25, \"Test failed for L*R\"\nassert solution(\"**\") == 33, \"Test failed for **\""
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"P*P\") == 6, \"Test failed\"\nassert solution(\"L*R\") == 25, \"Test failed\"\nassert solution(\"**\") == 33, \"Test failed\""
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"P*P\") == \"6\", \"The value of the given set of walks is not 6.\"\nassert solution(\"L*R\") == \"25\", \"The value of the given set of walks is not 25.\"\nassert solution(\"**\") == \"33\", \"The value of the given set of walks is not 33.\""
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('P*P') == 6, \"The value of the set is not 6.\"\nassert solution('L*R') == 25, \"The value of the set is not 25.\"\nassert solution('**') == 33, \"The value of the set is not 33.\""
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"P*P\") == 6, \"Incorrect output\"\nassert solution(\"L*R\") == 25, \"Incorrect output\"\nassert solution(\"**\") == 33, \"Incorrect output\""
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('P*P') == 6, \"Solution should return 6\"\nassert solution('L*R') == 25, \"Solution should return 25\"\nassert solution('**') == 33, \"Solution should return 33\""
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"P*P\") == 6\nassert solution(\"L*R\") == 25\nassert solution(\"**\") == 33"
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"P*P\") == 6\nassert solution(\"L*R\") == 25\nassert solution(\"**\") == 33"
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), \"The function should return the output.\""
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Test failed: solution(input()) = {solution(input())}, expected = {expected}\""
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\nherp is derp\\nderp is herp\\nherp is herp\\nderp is derp\\n') == 'yes'\nassert solution('3\\noskar not lukas\\noskar is poptart\\nlukas is smart\\n') == 'wait what?'\nassert solution('1\\nmoo not foo\\n') == 'yes'"
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"oskar not lukas\") == \"wait what?\"\nassert solution(\"moo not foo\") == \"yes\"\n"
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"herp is derp\") == \"yes\\n\", \"herp is derp\"\nassert solution(\"derp is herp\") == \"yes\\n\", \"derp is herp\"\nassert solution(\"herp is herp\") == \"yes\\n\", \"herp is herp\"\nassert solution(\"derp is derp\") == \"yes\\n\", \"derp is derp\""
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 'wait what?'\nassert solution(2) == 'no'\nassert solution(1) == 'yes'"
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"herp is derp\\nderp is herp\\nherp is herp\\nderp is derp\") == \"yes\"\nassert solution(\"oskar not lukas\\noskar is poptart\\nlukas is smart\") == \"wait what?\"\nassert solution(\"moo not foo\") == \"yes\""
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"wait what?\"\nassert solution(open(\"input2.txt\", \"r\")) == \"wait what?\"\nassert solution(open(\"input3.txt\", \"r\")) == \"yes\""
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    4\n        herp is derp\n        derp is herp\n        herp is herp\n        derp is derp\n    \"\"\"\n) == \"yes\"\n\nassert solution(\n    \"\"\"\n    3\n        oskar not lukas\n        oskar is poptart\n        lukas is smart\n    \"\"\"\n) == \"wait what?\"\n\nassert solution(\n    \"\"\"\n    1\n        moo not foo\n    \"\"\"\n) == \"yes\""
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"yes\"\nassert solution(open(\"input.txt\", \"r\")) == \"wait what?\""
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"4\\nherp is derp\\nderp is herp\\nherp is herp\\nderp is derp\\n\"\n) == \"yes\\n\"\n\nassert solution(\n    \"3\\noskar not lukas\\npoptart is smart\\n\"\n) == \"wait what?\\n\"\n\nassert solution(\n    \"1\\nmoo not foo\\n\"\n) == \"yes\\n\""
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"yes\""
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('sample_input.txt', 'r')) == '''\n1 4\nMM\nA\nAA\nACA\nACMAA\n'''\n\nassert solution(open('sample_input.txt', 'r')) == '''\nimpossible\n'''\n\nassert solution(open('sample_input.txt', 'r')) == '''\nimpossible\n'''"
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n    5\n    2178\n    2178\n    2178\n    2178\n    ''') == '''\n    1 4\n    2178\n    2178\n    2178\n    2178\n    '''\n\nassert solution('''\n    3\n    ACMA\n    ACM\n    ACA\n    AMA\n    ''') == '''\n    impossible\n    '''\n\nassert solution('''\n    1\n    2\n    3\n    4\n    5\n    ''') == '''\n    impossible\n    '''"
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\nAACCMMAA\\nACA\\nMM\\nACMAA\\nAA\\nA\\n\") == \"1 4\\nMM\\nA\\nAA\\nACA\\nACMAA\\n\"\nassert solution(\"3\\nACMA\\ACM\\ACA\\AMA\\n\") == \"impossible\"\nassert solution(\"1\\nAM\\nMA\\n\") == \"impossible\"\n\nprint(\"All test cases pass\")"
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\nAACCMMAA\\nACA\\nMM\\nACMAA\\nAA\\nA\\n') == '1 4\\nMM\\nA\\nAA\\nACA\\nACMAA\\n'\nassert solution('3\\nACMA\\ACM\\ACA\\AMA\\n') == 'impossible'\nassert solution('1\\nAM\\nMA\\n') == 'impossible'"
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=r\"5\\nAACCMMAA\\nACA\\nMM\\nACMAA\\nAA\\nA\\n\") == \"1 4\\nMM\\nA\\nAA\\nACA\\nACMAA\\n\"\nassert solution(stdin=r\"3\\nACMA\\ACM\\ACA\\AMA\\n\") == \"impossible\\n\"\nassert solution(stdin=r\"1\\nAM\\nMA\\n\") == \"impossible\\n\""
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == \"impossible\" # Example 1: Impossible\nassert solution(open('input2.txt', 'r')) == \"impossible\" # Example 2: Impossible\nassert solution(open('input3.txt', 'r')) == \"impossible\" # Example 3: Impossible"
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"impossible\""
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_str) == expected_output, f\"Test Failed for solution({input_str})\""
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"impossible\"\n"
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"100 111 5\\n20 0.5 10\\n80 0.5 2\\n85 0.5 2\\n90 0.5 2\\n95 0.5 2\") == \"124\"\nassert solution(\"2 4 1\\n1 0.5 5\") == \"3\"\nassert solution(\"10 20 3\\n5 0.3 8\\n6 0.8 3\\n8 0.9 3\") == \"18.9029850746\""
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    100 111 5\n    20 0.5 10\n    80 0.5 2\n    85 0.5 2\n    90 0.5 2\n    95 0.5 2\n    \"\"\"\n) == \"124\"\n\nassert solution(\n    \"\"\"\n    2 4 1\n    1 0.5 5\n    \"\"\"\n) == \"3\"\n\nassert solution(\n    \"\"\"\n    10 20 3\n    5 0.3 8\n    6 0.8 3\n    8 0.9 3\n    \"\"\"\n) == \"18.9029850746\""
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2\nassert solution(sample_input_3) == expected_output_3"
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 'example 1'"
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"100 111 5\\n20 0.5 10\\n80 0.5 2\\n85 0.5 2\\n90 0.5 2\\n95 0.5 2\") == \"124\"\nassert solution(\"2 4 1\\n1 0.5 5\\n\") == \"3\"\nassert solution(\"10 20 3\\n5 0.3 8\\n6 0.8 3\\n8 0.9 3\") == \"18.9029850746\""
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n    100 111 5\n    20 0.5 10\n    80 0.5 2\n    85 0.5 2\n    90 0.5 2\n    95 0.5 2\n    100 111 5\n    20 0.5 10\n    80 0.5 2\n    85 0.5 2\n    90 0.5 2\n    95 0.5 2\n    100 111 5\n    20 0.5 10\n    80 0.5 2\n    85 0.5 2\n    90 0.5 2\n    95 0.5 2\n    100 111 5\n    20 0.5 10\n    80 0.5 2\n    85 0.5 2\n    90 0.5 2\n    95 0.5 2\n    100 111 5\n    20 0.5 10\n    80 0.5 2\n    85 0.5 2\n    90 0.5 2\n    95 0.5 2\n    100 111 5\n    20 0.5 10\n    80 0.5 2\n    85 0.5 2\n    90 0.5 2\n    95 0.5 2\n    100 111 5\n    20 0.5 10\n    80 0.5 2\n    85 0.5 2\n    90 0.5 2\n    95 0.5 2\n    100 111 5\n    20 0.5 10\n    80 0.5 2\n    85 0.5 2\n    90 0.5 2\n    95 0.5 2\n    100 111 5\n    20 0.5 10\n    80 0.5 2\n    85 0.5 2\n    90 0.5 2\n    95 0.5 2\n    100 111 5\n    20 0.5 10\n    80 0.5 2\n    85 0.5 2\n    90 0.5 2\n    95 0.5 2\n    100 111 5\n    20 0.5 10\n    80 0.5 2\n    85 0.5 2\n    90 0.5 2\n    95 0.5 2\n    100 111 5\n    20 0.5 10\n    80 0.5 2\n    85 0.5 2\n    90 0.5 2\n    95 0.5 2\n    100 111 5\n    20 0.5 10\n    80 0.5 2\n    85 0.5 2\n    90 0.5 2\n    95 0.5 2\n    100 111 5\n    20 0.5 10\n    80 0.5 2\n    85 0.5 2\n    90 0.5 2\n    95 0.5 2\n    100 111 5\n    20 0.5 10\n    80 0.5 2\n    85 0.5 2\n    90 0.5 2\n    95 0.5 2\n    100 111 5\n    20 0.5 10\n    80 0.5 2\n    85 0.5 2\n    90 0.5 2\n    95 0.5 2\n    100 111 5\n    20 0.5 10\n    80 0.5 2\n    85 0.5 2\n    90 0.5 2\n    95 0.5 2\n    100 111 5\n    20 0.5 10\n    80 0.5 2\n    85 0.5 2\n    90 0.5 2\n    95 0.5 2\n    100 111 5\n    20 0"
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == expected_solution, f\"Solution is incorrect. Expected {expected_solution}, but got {solution}.\"\n"
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''100 111 5\n20 0.5 10\n80 0.5 2\n85 0.5 2\n90 0.5 2\n95 0.5 2''') == '124'\n\nassert solution('''2 4 1\n1 0.5 5''') == '3'\n\nassert solution('''10 20 3\n5 0.3 8\n6 0.8 3\n8 0.9 3''') == '18.9029850746'"
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_str) == expected_output, f\"Expected output: {expected_output}, got: {solution(input_str)}\""
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == expected, f\"The solution is incorrect. Expected: {expected}, Got: {solution}\"\n"
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\") == \"2 1 2\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"5 22\") == \"4 3 4 2\""
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\") == \"2 1 2\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"5 22\") == \"4 3 4 2\""
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\") == \"2 1 2\\n\"\nassert solution(\"2 1\") == \"1\\n\"\nassert solution(\"5 22\") == \"4 3 4 2\\n\""
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 3') == '2 1 2\\n'\nassert solution('2 1') == '1\\n'\nassert solution('5 22') == '4 3 4 2\\n'"
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\") == \"2 1 2\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"5 22\") == \"4 3 4 2\""
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\") == \"2 1 2\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"5 22\") == \"4 3 4 2\""
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 3') == '2 1 2'\nassert solution('2 1') == '1'\nassert solution('5 22') == '4 3 4 2'"
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin='4 3\\n2 1\\n2 1\\n5 22\\n') == '4 3 4 2'"
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input1) == output1, \"Test 1 failed\"\nassert solution(input2) == output2, \"Test 2 failed\"\nassert solution(input3) == output3, \"Test 3 failed\""
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\") == \"2 1 2\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"5 22\") == \"4 3 4 2\""
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('Input') == 'Output', 'Your solution is not correct.'\nassert solution('Sample Input 1') == 'Sample Output 1', 'Your solution is not correct.'\nassert solution('Sample Input 2') == 'Sample Output 2', 'Your solution is not correct.'\nassert solution('Sample Input 3') == 'Sample Output 3', 'Your solution is not correct.'\nprint('Test Passed!')"
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('sample_input_1.txt', 'r')) == '2\\n'\nassert solution(open('sample_input_2.txt', 'r')) == '2\\n'\nassert solution(open('sample_input_3.txt', 'r')) == '0\\n'"
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n4 4\n1 2\n1 3\n3 4\n2 4\n''') == '2'\nassert solution('''\n7 6\n1 2\n2 3\n2 5\n6 3\n7 2\n3 4\n''') == '2'\nassert solution('''\n7 5\n1 2\n2 3\n3 4\n5 6\n6 7\n''') == '0'"
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n4 4\n1 2\n1 3\n3 4\n2 4\n''') == '2\\n'\n\nassert solution('''\n7 6\n1 2\n2 3\n2 5\n6 3\n7 2\n3 4\n''') == '2\\n'\n\nassert solution('''\n7 5\n1 2\n2 3\n3 4\n5 6\n6 7\n''') == '0\\n'"
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(2) == 2\nassert solution(3) == 0\nassert solution(4) == 2"
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n4 4\n1 2\n1 3\n3 4\n2 4\n\"\"\") == \"2\\n\"\n\nassert solution(\"\"\"\n7 6\n1 2\n2 3\n2 5\n6 3\n7 2\n3 4\n\"\"\") == \"2\\n\"\n\nassert solution(\"\"\"\n7 5\n1 2\n2 3\n3 4\n5 6\n6 7\n\"\"\") == \"0\\n\""
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}, Received: {solution(stdin)}\""
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n1 2\\n1 3\\n3 4\\n2 4\\n\") == \"2\\n\"\nassert solution(\"7 6\\n1 2\\n2 3\\n2 5\\n6 3\\n7 2\\n3 4\\n\") == \"2\\n\"\nassert solution(\"7 5\\n1 2\\n2 3\\n3 4\\n5 6\\n6 7\\n\") == \"0\\n\""
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"20 0\\n1.00 0.10\") == 20.00000000, \"Test 1 failed\"\nassert solution(\"0 -10\\n10.00 1.00\") == 3.14159265, \"Test 2 failed\"\nassert solution(\"0 20\\n1.00 0.10\") == 28.26445910, \"Test 3 failed\""
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"3.14159265\\n\", \"Test case 3 failed\"\nassert solution(stdin) == \"28.26445910\\n\", \"Test case 4 failed\""
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('20 0\\n1.00 0.10') == '20.00000000'\nassert solution('-10 10\\n10.00 1.00') == '3.14159265'\nassert solution('0 20\\n1.00 0.10') == '28.26445910'"
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('20 0\\n1.00 0.10') == '20.00000000', \"Test Case 1: Invalid Input\"\nassert solution('-10 10\\n10.00 1.00') == '3.14159265', \"Test Case 2: Invalid Input\"\nassert solution('0 20\\n1.00 0.10') == '28.26445910', \"Test Case 3: Invalid Input\""
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 3.14159265, \"Test 1 failed\"\n\nassert solution() == 28.2644591, \"Test 2 failed\"\n\nassert solution() == 20.0, \"Test 3 failed\""
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"20 0\\n1.00 0.10\") == \"20.00000000\"\nassert solution(\"-10 10\\n10.00 1.00\") == \"3.14159265\"\nassert solution(\"0 20\\n1.00 0.10\") == \"28.26445910\""
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"20 0\\n1.00 0.10\") == 20.0\nassert solution(\"-10 10\\n10.00 1.00\") == 3.14159265\nassert solution(\"0 20\\n1.00 0.10\") == 28.2644591"
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == \"20.00000000\"\nassert solution(sample_input_2) == \"3.14159265\"\nassert solution(sample_input_3) == \"28.26445910\""
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"20 0\\n1.00 0.10\\n\") == \"20.00000000\"\nassert solution(stdin=\"-10 10\\n10.00 1.00\\n\") == \"3.14159265\"\nassert solution(stdin=\"0 20\\n1.00 0.10\\n\") == \"28.26445910\""
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('20 0\\n1.00 0.10\\n') == '20.00000000'\nassert solution('-10 10\\n10.00 1.00\\n') == '3.14159265'\nassert solution('0 20\\n1.00 0.10\\n') == '28.26445910'"
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n2 100\\n1 100\\n4 70\\n3 70\") == 170\nassert solution(\"3\\n2 120\\n3 50\\n2 80\") == 150"
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 170\nassert solution() == 150"
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_string) == output_string, f\"Test failed: {input_string} -> {output_string}\""
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 170, \"Expected 170, got {}\".format(solution())"
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input1) == expected_output1\nassert solution(sample_input2) == expected_output2"
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"170\\n\""
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    4\n    2 100\n    1 100\n    4 70\n    3 70\n    \"\"\"\n) == \"170\"\n\nassert solution(\n    \"\"\"\n    3\n    2 120\n    3 50\n    2 80\n    \"\"\"\n) == \"150\""
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 100\\n1 100\\n4 70\\n3 70\\n\") == \"170\\n\"\nassert solution(\"3\\n2 120\\n3 50\\n2 80\\n\") == \"150\\n\"\nassert solution(\"1\\n1 100\\n2 100\\n3 100\\n4 100\\n\") == \"2100\\n\"\nassert solution(\"5\\n1 100\\n2 100\\n3 100\\n4 100\\n5 100\\n\") == \"3100\\n\"\nassert solution(\"3\\n1 100\\n2 100\\n3 100\\n4 100\\n5 100\\n\") == \"2000\\n\"\nassert solution(\"4\\n1 100\\n2 100\\n3 100\\n4 100\\n5 100\\n\") == \"4000\\n\"\nassert solution(\"1\\n1 100\\n2 100\\n3 100\\n4 100\\n5 100\\n\") == \"3000\\n\""
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input1) == '170', 'Test case 1 failed.'\nassert solution(sample_input2) == '150', 'Test case 2 failed.'"
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"\"\"170\"\"\"\nassert solution(stdin) == \"\"\"150\"\"\""
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == '2\\n'\n"
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2\\n\", \"Testcase 1\"\n\nassert solution(stdin) == \"5\\n\", \"Testcase 2\""
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('sample_input.txt', 'r').read()) == '2'\nassert solution(open('sample_output.txt', 'r').read()) == '5'"
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(None) == \"Solution not provided\""
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n1 2\\n1 3\\n2 4\\n\") == \"2\\n\"\nassert solution(\"6 6\\n1 2\\n1 3\\n2 4\\n3 4\\n3 5\\n5 6\\n\") == \"5\\n\""
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == expected_output, f\"Expected output: {expected_output}, got: {solution}\""
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 3\\n1 2\\n1 3\\n2 4\\n') == '2\\n'\nassert solution('6 6\\n1 2\\n1 3\\n2 4\\n3 4\\n3 5\\n5 6\\n') == '5\\n'"
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''4 3\n1 2\n1 3\n2 4''') == '2'\nassert solution('''6 6\n1 2\n1 3\n2 4\n3 4\n3 5\n5 6''') == '5'"
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n1 2\\n1 3\\n2 4\\n\") == \"2\\n\"\nassert solution(\"6 6\\n1 2\\n1 3\\n2 4\\n3 4\\n3 5\\n5 6\\n\") == \"5\\n\"\nassert solution(\"4 2\\n2 3\\n3 4\\n\") == \"0\\n\"\n"
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0.5\\n\", \"The chance the captain will be able to complete his mission without being discovered by the Borg sentry should be 0.5\"\n"
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 0.5\nassert solution() == 0.0446429"
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1\\n0\\n2 1 2\\n1 0\\n1 0\\n\") == 0.5\nassert solution(\"8\\n6\\n1 0 2 3 0 1\\n7 1 2 3 4 5 6 7\\n1 0\\n2 0 3\\n2 0 2\\n1 0\\n1 0\\n1 0\\n1 0\\n\") == 0.0446429"
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1\\n0\\n2 1 2\\n1 0\\n1 0\\n\") == \"0.5\\n\"\nassert solution(\"8\\n6\\n1 0 2 3 0 1\\n7 1 2 3 4 5 6 7\\n1 0\\n2 0 3\\n2 0 2\\n1 0\\n1 0\\n1 0\\n1 0\\n\") == \"0.0446429\\n\""
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1\\n0\\n2 1 2\\n1 0\\n1 0\") == \"0.5\\n\"\nassert solution(\"8\\n6\\n1 0 2 3 0 1\\n7 1 2 3 4 5 6 7\\n1 0\\n2 0 3\\n2 0 2\\n1 0\\n1 0\\n1 0\\n1 0\") == \"0.0446429\\n\""
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"0.5\", \"Test Failed\"\n"
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"0.5\", \"Please provide the solution\""
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"0.5\", solution(stdin)"
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1\\n0\\n2 1 2\\n1 0\\n1 0\\n\") == \"0.5\"\nassert solution(\"8\\n6\\n1 0 2 3 0 1\\n7 1 2 3 4 5 6 7\\n1 0\\n2 0 3\\n2 0 2\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n\") == \"0.0446429\""
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == expected_output_1, f\"Test Case 1 failed. Expected output: {expected_output_1}, but got: {solution(sample_input_1)}\"\nassert solution(sample_input_2) == expected_output_2, f\"Test Case 2 failed. Expected output: {expected_output_2}, but got: {solution(sample_input_2)}\""
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution( \"\"\"6\n1 2 3 3 2 1\"\"\") == ['1 6 1', '2 5 2', '3 4 3']\nassert solution( \"\"\"4\n1 2 1 2\"\"\") == ['IMPOSSIBLE']\n\nfrom typing import List"
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3, 2, 3, 2, 1) == '3\\n1 6 1\\n2 5 2\\n3 4 3'\nassert solution(4, 2, 1, 2) == 'IMPOSSIBLE'\n\nfrom typing import List"
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(b'6\\n1 2 3 3 2 1\\n') == '3\\n1 6 1\\n2 5 2\\n3 4 3\\nIMPOSSIBLE'\nassert solution(b'4\\n1 2 1 2\\n') == 'IMPOSSIBLE'"
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n1 2 3 3 2 1\\n\") == \"3\\n1 6 1\\n2 5 2\\n3 4 3\\n\"\nassert solution(\"4\\n1 2 1 2\\n\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '3\\n1 6 1\\n2 5 2\\n3 4 3\\nIMPOSSIBLE'"
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n1 2 3 3 2 1\\n\") == \"3\\n1 6 1\\n2 5 2\\n3 4 3\"\nassert solution(\"4\\n1 2 1 2\\n\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '3\\n1 6 1\\n2 5 2\\n3 4 3\\n'"
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3 3 2 1\") == \"3\\n1 6 1\\n2 5 2\\n3 4 3\"\nassert solution(\"4 1 2 1 2\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin='1\\n2 3 4 5\\n6\\n7 8 9\\n10\\n11 12 13\\n14\\n') == '3\\n1 6 1\\n2 5 2\\n3 4 3\\nIMPOSSIBLE\\n'\nassert solution(stdin='1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n') == 'IMPOSSIBLE\\n'\nassert solution(stdin='1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n2 2 2 2\\n') == '3\\n1 6 1\\n2 5 2\\n3 4 3\\nIMPOSSIBLE\\n'"
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution([3, 1, 2, 1, 100, 1, 1, 2, 5, 10, 20, 30, 40, 50, 2, 28, 27]) == \"10 20 28 27 30 40 50\""
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '1 2 100'\nassert solution() == '10 20 28 27 30 40 50'"
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected_output, f\"Test case {test_case} failed: expected {expected_output}, got {solution(stdin)}\""
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('sample_input.txt', 'r')) == ['1 2 100', '1 100 1', '1 1 1']\nassert solution(open('sample_input2.txt', 'r')) == ['10 20 28 27 30 40 50']"
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 2\\n1 100\\n1 1\\n\") == \"1 2 100\"\nassert solution(\"2\\n5 10 20 30 40 50\\n2 28 27\\n\") == \"10 20 28 27 30 40 50\""
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"3\\n1 2\\n1 100\\n1 1\") == \"1 2 100\\n\"\nassert solution(stdin=\"2\\n5 10 20 30 40 50\\n2 28 27\") == \"10 20 28 27 30 40 50\\n\""
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, but got: {solution(stdin)}\""
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == expected_output, f\"Solution is incorrect. Expected output: {expected_output}, got: {solution}\""
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"\"\"\n3\n1 2\n1 100\n1 1\n\"\"\") == \"1 2 100\"\n\nassert solution(stdin=\"\"\"\n2\n5 10 20 30 40 50\n2 28 27\n\"\"\") == \"10 20 28 27 30 40 50\""
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Solution {solution(input())} is incorrect. Expected {expected}.\"\n"
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Test {index + 1} failed: expected '{expected}', got '{solution(input())}'\"\nfor index, (investigation, player_reply, expected) in enumerate(zip(input().split('\\n'), input().split('\\n'), expected.split('\\n'))):\n    investigation, player_reply, expected = investigation.strip(), player_reply.strip(), expected.strip()\n    assert solution(investigation, player_reply) == expected, f\"Test {index + 1} failed: expected '{expected}', got '{solution(investigation, player_reply)}'\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"0\\nSample Input 1:\\nSample Output 1:\\nSample Input 2:\\nSample Output 2:\\n\") == 2600, \"The solution is incorrect.\""
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 506, \"Input should be 3 investigations.\"\nassert solution(4) == 1120, \"Input should be 4 investigations.\"\nassert solution(5) == 4584, \"Input should be 5 investigations.\"\nassert solution(6) == 18000, \"Input should be 6 investigations.\""
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, but got {solution(input())}\"\n"
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2600\", \"Incorrect output\""
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, but got {solution(input())}\""
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"506\", \"Solution is incorrect\""
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0\\nSample Input 1\\nSample Output 1\\nSample Input 2\\nSample Output 2\\n\") == \"2600\\n506\""
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == \"2600\", \"Incorrect output for sample input 1\"\nassert solution(sample_input_2) == \"506\", \"Incorrect output for sample input 2\""
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('()))') == 'possible'\nassert solution('()))') == 'possible'"
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('())') == 'possible', 'Sample Input 1: )()'\nassert solution('()()') == 'possible', 'Sample Input 2: )())'\nassert solution('()))') == 'possible', 'Sample Input 3: (())'\nassert solution('()()') == 'impossible', 'Sample Input 4: )()'\nassert solution('())') == 'impossible', 'Sample Input 5: (())'"
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"(()))\"\"\") == \"possible\"\nassert solution(\"\"\"())))\"\"\") == \"impossible\""
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"()))\"\"\") == \"possible\"\nassert solution(\"\"\"())()\"\"\") == \"possible\"\nassert solution(\"\"\"(()()))\"\"\") == \"possible\"\nassert solution(\"\"\"()())\"\"\") == \"possible\"\nassert solution(\"\"\"(())()\"\"\") == \"impossible\""
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"()))\") == \"possible\"\nassert solution(\"())))\") == \"impossible\""
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"()))\" == \"possible\"\nassert solution(\")))(\") == \"impossible\""
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"()))\n\"\"\"), \"possible\"\n\nassert solution(\"\"\"())))\n\"\"\"), \"impossible\"\n\nfrom typing import List"
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"())\") == \"possible\"\nassert solution(\"()()\") == \"possible\"\nassert solution(\"(()())()\") == \"possible\"\nassert solution(\"()()()\") == \"impossible\"\nassert solution(\"(())\") == \"impossible\"\nassert solution(\"()\") == \"impossible\"\nassert solution(\"()())()()()()()\") == \"impossible\"\nassert solution(\"()(()())\") == \"impossible\"\nassert solution(\"()())()()())\") == \"impossible\"\nassert solution(\"(()()))\") == \"impossible\"\nassert solution(\"())(()\")) == \"impossible\"\nassert solution(\"(()()())\") == \"impossible\"\nassert solution(\"()()())\") == \"impossible\"\nassert solution(\"(())(())()())\") == \"impossible\""
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"()())\") == \"possible\"\nassert solution(\"(())\") == \"impossible\""
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"()))\"\"\") == \"possible\"\nassert solution(\"\"\"()))()()\"\"\") == \"possible\"\nassert solution(\"\"\"(()())()\"\"\") == \"possible\"\n\nassert solution(\"\"\"(())()()\"\"\") == \"impossible\"\nassert solution(\"\"\"(())()\"\"\") == \"impossible\"\nassert solution(\"\"\"())()\"\"\") == \"impossible\"\n\nassert solution(\"\"\"()))())))\"\"\" == \"impossible\"\nassert solution(\"\"\"(())(())(())\"\"\") == \"impossible\"\nassert solution(\"\"\"(())(())\"\"\") == \"impossible\"\n\nassert solution(\"\"\"()))()()\"\"\" == \"impossible\"\nassert solution(\"\"\"(())())()\"\"\") == \"impossible\"\nassert solution(\"\"\"(())())()\"\"\") == \"impossible\"\n\nassert solution(\"\"\"()))))))))\"\"\" == \"impossible\"\nassert solution(\"\"\"(())(())(())(())\"\"\") == \"impossible\"\nassert solution(\"\"\"(())(())(())(())\"\"\") == \"impossible\""
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == output\nfor test_case in test_cases:\n    assert solution(test_case) == test_case[1]"
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == expected_output, f\"Input {sample_input} expected output {expected_output}\""
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''2 3\n1 1800 9000 1800\n1 2000 9200 1600\n1 2200 9400 1400''') == '1800\\n'\nassert solution('''2 2\n1 1800 3600 1800\n1 1900 3600 1600''') == 'impossible\\n'"
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 3\\n1 1800 9000 1800\\n1 2000 9200 1600\\n1 2200 9400 1400') == '1800\\n'\nassert solution('2 2\\n1 1800 3600 1800\\n1 1900 3600 1600') == 'impossible\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n1 1800 9000 1800\\n1 2000 9200 1600\\n1 2200 9400 1400\") == \"1800\"\nassert solution(\"2 2\\n1 1800 3600 1800\\n1 1900 3600 1600\") == \"impossible\""
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n1 1800 9000 1800\\n1 2000 9200 1600\\n1 2200 9400 1400\") == \"1800\"\nassert solution(\"2 2\\n1 1800 3600 1800\\n1 1900 3600 1600\") == \"impossible\""
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n2 3\n1 1800 9000 1800\n1 2000 9200 1600\n1 2200 9400 1400\n''') == '''\n1800\n'''\n\nassert solution('''\n2 2\n1 1800 3600 1800\n1 1900 3600 1600\n''') == '''\nimpossible\n'''"
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n1 1800 9000 1800\\n1 2000 9200 1600\\n1 2200 9400 1400\") == \"1800\\n\"\nassert solution(\"2 2\\n1 1800 3600 1800\\n1 1900 3600 1600\") == \"impossible\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '1800'\nassert solution() == 'impossible'\n"
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n2 3\") == \"A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2\\n\""
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 2\\n2 3\\n') == ['A1-B2 B1-A2 A3-B3', 'A2-B3 B2-A3 A1-B1', 'A3-B1 B3-A1 A2-B2']\nassert solution('2 3\\n') == ['A1-B1 A2-C2 B2-C1', 'A1-C1 A2-B1 B2-C2', 'A1-B2 A2-C1 B1-C2', 'A1-C2 A2-B2 B1-C1']"
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2\\nA1-C2 B2-C1 A2-B1 B2-C2\\nA1-B1 A2-C1 B2-C2\\nA1-C1 A2-B1 B1-C2\\nA1-B2 A2-C1 B1-C2\\n\"\n"
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2\") == \"A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2\\n\"\nassert solution(\"2 3\") == \"A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2\\nA1-C2 A2-B2 B1-C1\\n\""
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 2') == ['A1-B2 B1-A2 A3-B3', 'A2-B3 B2-A3 A1-B1', 'A3-B1 B3-A1 A2-B2']"
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 2\\n2 3\\n') == 'A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2\\n'\nassert solution('2 3\\n3 2\\n') == 'A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2\\nA1-C2 A2-B2 B1-C1\\n'\nassert solution('1 2\\n2 1\\n') == 'A1-A2 B1-B2 C1-C2\\n'\nassert solution('3 4\\n4 3\\n') == 'A1-A2 A3-A4 B1-B2 B3-B4 C1-C2 C3-C4\\n'\nassert solution('2 1\\n1 2\\n') == 'A1-A2 B1-B2\\n'\nassert solution('1 1\\n1 1\\n') == 'A1-A1\\n'"
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('sample_input_1.txt', 'r')) == solution(open('sample_input_2.txt', 'r')) == '''\nA1-B2 B1-A2 A3-B3\nA2-B3 B2-A3 A1-B1\nA3-B1 B3-A1 A2-B2\n\nA1-B1 A2-C2 B2-C1\nA1-C1 A2-B1 B2-C2\nA1-B2 A2-C1 B1-C2\nA1-C2 A2-B2 B1-C1\n'''"
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\""
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 2\\n2 3\\n') == 'A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2\\n'\nassert solution('2 3\\n') == 'A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2\\nA1-C2 A2-B2 B1-C1\\n'"
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\\n2 3\\n\") == \"A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2\\nA1-C2 A2-B2 B1-C1\\n\"\nassert solution(\"2 3\\n\") == \"A1-B1 A2-C1 B2-C2\\nA1-C1 A2-B1 B2-C1\\nA1-B2 A2-C2 B1-C2\\nA1-C2 A2-B1 B2-C1\\n\"\n"
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 2\\n..\\n..') == '7\\n'\nassert solution('4 4\\nX.XX\\nX..X\\n..X.\\n..XX') == '9\\n'"
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt').read()) == '7\\n'\nassert solution(open('input2.txt').read()) == '9\\n'"
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    2 2\n   ..\n   ..\n    \"\"\"\n) == 7\n\nassert solution(\n    \"\"\"\n    4 4\n    X.XX\n    X..X\n   ..X.\n   ..XX\n    \"\"\"\n) == 9"
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\n..\\n..\") == \"7\"\nassert solution(\"4 4\\nX.XX\\nX..X\\n..X. \\n..XX\") == \"9\""
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"9\""
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n..\\n..\") == \"7\"\nassert solution(\"4 4\\nX.XX\\nX..X\\n..X.X\\n..XX\") == \"9\""
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 7, \"Incorrect output\"\n"
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\n..\\n..\") == \"7\"\nassert solution(\"4 4\\nX.XX\\nX..X\\n..X. \\n..XX\") == \"9\""
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == output"
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n3 3 2 2 100\\n1 1 1 1 500\\n\") == \"600\\n\"\nassert solution(\"2\\n2 0 2 1 100\\n6 0 8 1 1\\n\") == \"100\\n\""
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt').read()) == '600'"
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n3 3 2 2 100\\n1 1 1 1 500\\n\") == \"600\\n\"\nassert solution(\"2\\n2 0 2 1 100\\n6 0 8 1 1\\n\") == \"100\\n\"\n\nfrom typing import List\n"
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n3 3 2 2 100\\n1 1 1 1 500\\n\") == 600\nassert solution(\"2\\n2 0 2 1 100\\n6 0 8 1 1\\n\") == 100"
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n3 3 2 2 100\\n1 1 1 1 500\\n\") == \"600\"\nassert solution(\"2\\n2 0 2 1 100\\n6 0 8 1 1\\n\") == \"100\""
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin='2\\n3 3 2 2 100\\n1 1 1 1 500\\n') == '600\\n'"
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n3 3 2 2 100\\n1 1 1 1 500\\n\") == 600\nassert solution(\"2\\n2 0 2 1 100\\n6 0 8 1 1\\n\") == 100\nassert solution(\"\") == -1\n"
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"600\""
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 600, \"Your solution is incorrect\"\n\nfrom typing import List"
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 600\nassert solution() == 100"
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 3"
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test case {test_case} failed\"\n"
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n361') == '3\\n'\nassert solution('2\\n11') == '0\\n'"
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n361\\n2\\n11') == '3\\n'\nassert solution('3\\n361\\n1\\n1') == '0\\n'"
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"3\\n361\\n\""
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    '''\n    3\n    361\n    '''\n) == '3\\n'\n\nassert solution(\n    '''\n    2\n    11\n    '''\n) == '0\\n'"
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n361\") == \"3\\n\"\nassert solution(\"2\\n11\") == \"0\\n\""
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(361) == 3\nassert solution(11) == 0"
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n361\") == \"3\\n\"\nassert solution(\"2\\n11\") == \"0\\n\""
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(361) == 3\nassert solution(11) == 0"
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"cancel road trip\""
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 10\\n2 100\\n1 10\\n11 5\") == \"10\"\nassert solution(\"3 10\\n2 100\\n1 10\\n13 5\") == \"cancel road trip\""
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 10\\n2 100\\n1 10\\n11 5\") == \"10\"\nassert solution(\"3 10\\n2 100\\n1 10\\n13 5\") == \"cancel road trip\"\n"
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == \"10\"\nassert solution(sample_input2) == \"cancel road trip\""
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 10\\n2 100\\n1 10\\n11 5\\n\") == \"10\"\nassert solution(\"3 10\\n2 100\\n1 10\\n13 5\\n\") == \"cancel road trip\""
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"def solution(stdin: str) -> str: pass\""
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution, \"Function not found\"\n\nn, g = map(int, stdin.strip().split())\ngas_stations = []\nfor i in range(n):\n    d, c = map(int, stdin.strip().split())\n    gas_stations.append((d, c))\n\nmin_cost = float('inf')"
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution"
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(Sample Input 1) == Sample Output 1, \"Test failed: The solution is incorrect.\"\nassert solution(Sample Input 2) == Sample Output 2, \"Test failed: The solution is incorrect.\""
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 10\\n2 100\\n1 10\\n11 5\") == \"10\"\nassert solution(\"3 10\\n2 100\\n1 10\\n13 5\") == \"cancel road trip\""
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 9\\n2 8\\n1 1\\n3 4\\n5 100\") == \"1 8 9 9 100 101 108 109 109\"\nassert solution(\"5 7\\n2 2\\n3 8\\n2 7\\n2 4\\n3 8\") == \"0 7 8 11 15 16 19\""
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 9\\n2 8\\n1 1\\n3 4\\n5 100\\n') == '1 8 9 9 100 101 108 109 109'\nassert solution('5 7\\n2 2\\n3 8\\n2 7\\n2 4\\n3 8\\n') == '0 7 8 11 15 16 19'"
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 9\\n2 8\\n1 1\\n3 4\\n5 100') == '1 8 9 9 100 101 108 109 109'\nassert solution('5 7\\n2 2\\n3 8\\n2 7\\n2 4\\n3 8') == '0 7 8 11 15 16 19'"
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 9\\n2 8\\n1 1\\n3 4\\n5 100\") == \"1 8 9 9 100 101 108 109 109\\n\", \"The solution is incorrect.\"\nassert solution(\"5 7\\n2 2\\n3 8\\n2 7\\n2 4\\n3 8\") == \"0 7 8 11 15 16 19\\n\", \"The solution is incorrect.\""
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input1) == expected1\nassert solution(input2) == expected2"
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 9\\n2 8\\n1 1\\n3 4\\n5 100\") == [\"1 8 9 9 100 101 108 109 109\"]\nassert solution(\"5 7\\n2 2\\n3 8\\n2 7\\n2 4\\n3 8\") == [\"0 7 8 11 15 16 19\"]"
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 9\\n2 8\\n1 1\\n3 4\\n5 100\\n') == '1 8 9 9 100 101 108 109 109'\nassert solution('5 7\\n2 2\\n3 8\\n2 7\\n2 4\\n3 8\\n') == '0 7 8 11 15 16 19'"
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Expected '{output}', got '{solution(input())}'\"\n"
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '0 7 8 11 15 16 19'"
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r')) == expected_output, f\"Test failed for input '{stdin}'. Expected output: {expected_output}, Actual output: {solution(stdin)}\"\n"
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_1) == expected_output_1, f\"The solution for input 1 is {solution(input_1)}, but the expected output is {expected_output_1}\"\nassert solution(input_2) == expected_output_2, f\"The solution for input 2 is {solution(input_2)}, but the expected output is {expected_output_2}\""
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input1) == output1, f\"Test case 1 failed: expected {output1}, got {solution(input1)}\"\nassert solution(input2) == output2, f\"Test case 2 failed: expected {output2}, got {solution(input2)}\""
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == 1, \"The maximum number of enemy minions that Liam can destroy with a single attack should be 1.\"\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == 3, \"The maximum number of enemy minions that Liam can destroy with a single attack should be 3.\""
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3') == 1\nassert solution('1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3') == 3"
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3') == '1\\n'\nassert solution('1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3') == '3\\n'"
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, \"Test case failed\""
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == 1\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == 3"
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin='1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\\n') == 1\nassert solution(stdin='1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 0\\n0 3\\n') == 3"
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"1 3 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3\"\"\") == 1\n\nassert solution(\"\"\"1 5 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3\n3 4\n4 3\"\"\") == 3"
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == expected_output, f\"Error: {solution(sample_input)}!= {expected_output}\""
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"4\\n2\\n0\"\nassert solution(5) == \"2\\n0\\n0\\n2\\n0\"\nassert solution(6) == \"0\\n0\\n0\\n0\\n0\"\nassert solution(7) == \"0\\n0\\n0\\n0\\n0\"\nassert solution(8) == \"0\\n0\\n0\\n0\\n0\"\n"
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 10000\\n1\\n1\\n1\\n1\\n1\") == \"4\\n4\\n2\\n2\\n0\"\nassert solution(\"5 9\\n1\\n1\\n10\\n1\\n9\") == \"2\\n0\\n0\\n2\\n0\""
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 10000\\n1\\n1\\n1\\n1\\n1\") == \"4\\n4\\n2\\n2\\n0\\n\"\n\nassert solution(\"5 9\\n1\\n1\\n10\\n1\\n9\") == \"2\\n0\\n0\\n2\\n0\\n\"\n\nsolution(\"5 10000\\n1\\n1\\n1\\n1\\n1\")"
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Expected: {output}\\nGot: {solution(input())}\""
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 10000\\n1\\n1\\n1\\n1\\n1\") == \"4\\n4\\n2\\n2\\n0\"\nassert solution(\"5 9\\n1\\n1\\n10\\n1\\n9\") == \"2\\n0\\n0\\n2\\n0\""
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == expected_output, f\"Expected output: {expected_output}\\nActual output: {solution()}\""
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 10000\\n1\\n1\\n1\\n1\\n1') == '4\\n4\\n2\\n2\\n0\\n'\n\nassert solution('5 9\\n1\\n1\\n10\\n1\\n9') == '2\\n0\\n0\\n2\\n0\\n'"
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 'Sample Output 1\\n4\\n4\\n2\\n2\\n0\\n'"
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 10000\\n1\\n1\\n1\\n1\\n1') == '4\\n4\\n2\\n2\\n0\\n'\nassert solution('5 9\\n1\\n1\\n10\\n1\\n9') == '2\\n0\\n0\\n2\\n0\\n'"
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r')) == \"0\\n0\\n0\\n0\\n0\\n\"\nprint(\"All test cases pass\")"
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\ne\") == \"NE\", \"Incorrect output\"\nassert solution(\"4\\nkava\") == \"DA\", \"Incorrect output\""
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"NE\"\nprint(\"NE\")"
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\nne\") == \"NE\"\nassert solution(\"4\\nkava\") == \"DA\""
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('kava') == 'DA'\nassert solution('ne') == 'NE'"
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"NE\""
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\nne\\n\") == \"NE\", \"Test case 1 failed.\"\nassert solution(\"4\\nkava\\n\") == \"DA\", \"Test case 2 failed.\""
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\ne\\n') == 'NE\\nn\\n'\nassert solution('4\\nkava\\n') == 'DA\\nak\\ndef solution(stdin: str) -> str:\n    pass'"
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\nne\") == \"NE\"\nassert solution(\"4\\nkava\") == \"DA\""
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\nne\\n\") == \"NE\"\nassert solution(\"4\\nkava\\n\") == \"DA\""
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\nne') == 'NE'\nassert solution('4\\nkava') == 'DA'"
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4 4\\n1 2\\n1 3\\n2 4\\n3 4\\n1 1 4\\n2 1 4\\n1 1 3\\n2 2 3 2\") == \"2\\n0\\n2\\n1\"\nassert solution(\"8 10 4\\n1 2\\n2 3\\n1 3\\n3 6\\n6 8\\n2 4\\n2 5\\n4 7\\n5 7\\n7 8\\n2 3 4 5 6\\n2 2 6 8\\n1 1 6\\n1 1 8\") == \"0\\n0\\n3\\n2\""
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 2\nassert solution() == 0\nassert solution() == 2\nassert solution() == 1\n"
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '2\\n0\\n2\\n1\\n'\nprint(\"All tests passed\")"
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4 4\\n1 2\\n1 3\\n2 4\\n3 4\\n1 1 4\\n2 1 4\\n1 1 3\\n2 2 3 2\") == \"2\\n0\\n2\\n1\\n\", \"Test case 1 failed\"\nassert solution(\"8 10 4\\n1 2\\n2 3\\n1 3\\n3 6\\n6 8\\n2 4\\n2 5\\n4 7\\n5 7\\n7 8\\n2 3 4 5 6\\n2 2 6 8\\n1 1 6\\n1 1 8\") == \"0\\n0\\n3\\n2\\n\", \"Test case 2 failed\""
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('sample_input.txt', 'r')) == '2\\n0\\n2\\n1\\n'"
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2\\n0\\n2\\n1\\n\\n0\\n0\\n3\\n2\\n\\n0\\n0\\n2\\n1\\n\""
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == \"2\\n0\\n2\\n1\\n\", \"The solution is incorrect.\"\n\nsample_input = \"\"\"\n4 4 4\n1 2\n1 3\n2 4\n3 4\n1 1 4\n2 1 4\n1 1 3\n2 2 3 2\n\"\"\"\n\nassert solution(sample_input) == \"2\\n0\\n2\\n1\\n\", \"The solution is incorrect.\""
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4 4\\n1 2\\n1 3\\n2 4\\n3 4\\n1 1 4\\n2 1 4\\n1 1 3\\n2 2 3 2\") == \"2\\n0\\n2\\n1\\n\"\nassert solution(\"8 10 4\\n1 2\\n2 3\\n1 3\\n3 6\\n6 8\\n2 4\\n2 5\\n4 7\\n5 7\\n7 8\\n2 3 4 5 6\\n2 2 6 8\\n1 1 6\\n1 1 8\") == \"0\\n0\\n3\\n2\\n\""
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4 4\\n1 2\\n1 3\\n2 4\\n3 4\\n1 1 4\\n2 1 4\\n1 1 3\\n2 2 3 2\") == \"2\\n0\\n2\\n1\""
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 4 4\\n1 2\\n1 3\\n2 4\\n3 4\\n1 1 4\\n2 1 4\\n1 1 3\\n2 2 3 2') == '2\\n0\\n2\\n1'\nassert solution('8 10 4\\n1 2\\n2 3\\n1 3\\n3 6\\n6 8\\n2 4\\n2 5\\n4 7\\n5 7\\n7 8\\n2 3 4 5 6\\n2 2 6 8\\n1 1 6\\n1 1 8') == '0\\n0\\n3\\n2'"
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n    2 2\n    1 1\n    0 1\n    1 0\n    1 2 1\n    2 1 1\n    2 1 3\n    ''') == '2\\n'"
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2\\n\", \"Output is incorrect\" # expected output: 2\nassert solution(stdin) == \"1\\n\", \"Output is incorrect\" # expected output: 1"
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 1\\n2 1 3') == '2\\n'\nassert solution('2 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 1\\n2 1 3') == '2\\n'"
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 2, \"Expected: 2, got: {}\""
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 1\\n2 1 3\") == \"2\"\nassert solution(\"2 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 3\") == \"1\""
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input1) == 2\nassert solution(sample_input2) == 1"
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input1) == 2\nassert solution(sample_input2) == 1"
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input_1) == '2'\nassert solution(sample_input_2) == '1'"
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 2\n\nfrom typing import List"
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"test_input.txt\", \"r\")) == \"40.500000000\"\nassert solution(open(\"test_input2.txt\", \"r\")) == \"49.000000000\""
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 15\\nD 4 10 1\\nC 6 1\") == \"40.500000000\"\nassert solution(\"3 15\\nD 4 10 1\\nC 6 1\\nC 9 3\") == \"49.000000000\""
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 15\\nD 4 10 1\\nC 6 1\\n\") == \"40.500000000\\n\"\nassert solution(\"3 15\\nD 4 10 1\\nC 6 1\\nC 9 3\\n\") == \"49.000000000\\n\"\n"
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"40.500000000\", \"Output should be 40.5\"\n"
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"40.500000000\""
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 15\\nD 4 10 1\\nC 6 1\\n') == '40.500000000\\n'\nassert solution('3 15\\nD 4 10 1\\nC 6 1\\nC 9 3\\n') == '49.000000000\\n'"
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '40.500000000'\nassert solution(stdin) == '49.000000000'\n\nfrom typing import List"
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 15\\nD 4 10 1\\nC 6 1\\n') == '40.500000000\\n'\nassert solution('3 15\\nD 4 10 1\\nC 6 1\\nC 9 3\\n') == '49.000000000\\n'"
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 15\\nD 4 10 1\\nC 6 1\\n\") == \"40.500000000\\n\"\nassert solution(\"3 15\\nD 4 10 1\\nC 6 1\\nC 9 3\\n\") == \"49.000000000\\n\""
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 15\\nD 4 10 1\\nC 6 1\\n\") == \"40.500000000\"\nassert solution(\"3 15\\nD 4 10 1\\nC 6 1\\nC 9 3\\n\") == \"49.000000000\"\n"
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == sample_output, f\"Expected {sample_output}, got {solution(sample_input)}\""
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == \"5 4 9 3 1 10 7 6 2\"\nassert solution(sample_input_2) == \"fail\""
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_file) == output_file, f\"Expected {output_file}, got {solution(input_file)}\""
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"fail\""
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n    10\n        a 2 10 3\n        b 1 6\n        c 2 1 5\n        d 1 9\n        e 1 4\n        f 1 2\n        g 2 6 8\n        h 0\n        i 1 3\n        j 1 7\n    ''') == '''\n        5 4 9 3 1 10 7 6 2\n        '''"
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"fail\"\n"
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"fail\"  # Solution not provided"
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r')) == '5 4 9 3 1 10 7 6 2'"
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"5 4 9 3 1 10 7 6 2\"\n"
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('a 2 10 3\\nb 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7') == '5 4 9 3 1 10 7 6 2'\nassert solution('a 2 10 3\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7') == 'fail'"
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"00:00\\n01:01\") == \"3\\n00:00\\n01:00\\n01:01\"\nassert solution(\"00:08\\n00:00\") == \"3\\n00:08\\n00:09\\n00:00\"\n"
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == expected_output1\nassert solution(sample_input2) == expected_output2"
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"00:00\\n01:01\") == \"3\\n00:00\\n01:00\\n01:01\"\nassert solution(\"00:08\\n00:00\") == \"3\\n00:08\\n00:09\\n00:00\""
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"00:00\\n01:01\") == \"3\\n00:00\\n01:00\\n01:01\""
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"00:00\\n01:01\") == \"3\\n00:00\\n01:00\\n01:01\""
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"00:00\") == \"3\"\nassert solution(\"01:01\") == \"3\"\nassert solution(\"00:08\") == \"3\""
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"00:00\") == 1\nassert solution(\"01:01\") == 1\nassert solution(\"00:08\") == 1"
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"00:00\\n01:01\\n\") == \"3\\n00:00\\n01:00\\n01:01\\n\"\nassert solution(\"00:08\\n00:00\\n\") == \"3\\n00:08\\n00:09\\n00:00\\n\""
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('00:00\\n01:01') == '3\\n00:00\\n01:00\\n01:01'\nassert solution('00:08\\n00:00') == '3\\n00:08\\n00:09\\n00:00'"
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"(())\") == \"4,8:8,8:\"\nassert solution(\"()\") == \"4,4:\""
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"4,4:\"\nassert solution(\"(())\") == \"4,8:8,8:\"\nassert solution(\"(())\") == \"4,8:8,8:\"\nassert solution(\"(())())\") == \"4,8:8,8:4,8:8,8:\"\nassert solution(\"(())())\") == \"4,8:8,8:4,8:8,8:\"\nassert solution(\"(())()())\") == \"4,8:8,8:4,8:8,8:4,8:8,8:4,8:8,8:\"\nassert solution(\"(())(())\") == \"4,4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:4:"
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"(())\") == \"4,8:8,8:\"\nassert solution(\"()\") == \"4,4:\"\nassert solution(\"((())\")) == \"4,8:8,8:\"\nassert solution(\"(()))\") == \"4,4:\"\nassert solution(\"((()))\")) == \"4,8:8,8:\"\nassert solution(\"())()\") == \"4,8:8,8:\"\nassert solution(\"(())()\") == \"4,8:8,8:\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('(())') == '4,8:8,8:'\nassert solution('()') == '4,4:'\n"
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('(())') == '4,8:8,8:'\nassert solution('()') == '4,4:'\n"
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"(())\") == \"4,8:8,8:\"\nassert solution(\"()\") == \"4,4:\""
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''(())''') == '''4,8:8,8:'''\nassert solution('''()''') == '''4,4:'''"
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('(())') == '4,8:8,8:'\nassert solution('()') == '4,4:'\n\nsolution = '''\nfrom typing import List"
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('(())') == '4,8:8,8:'\nassert solution('()') == '4,4:'"
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"(())\") == \"4,8:8,8:\"\nassert solution(\"()\") == \"4,4:\""
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input1) == '5', \"Test 1 failed\"\nassert solution(sample_input2) == '185', \"Test 2 failed\""
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1\\n26 02 03 03 1\\n26 02 03 03 2\\n\") == \"5\\n185\\n\"\nassert solution(\"1 1\\n26 02 03 03 1\\n26 02 03 03 2\\n1 1\\n26 02 03 03 1\\n26 02 03 03 2\\n\") == \"-1\\n\"\nassert solution(\"1 1\\n26 02 03 03 1\\n26 02 03 03 2\\n1 1\\n26 02 03 03 1\\n26 02 03 03 2\\n1 1\\n26 02 03 03 1\\n26 02 03 03 2\\n\") == \"5\\n185\\n\""
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == \"5\"\nassert solution(sample_input2) == \"185\""
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1\\n26 02 03 03 1\\n\") == \"5\"\nassert solution(\"1 1\\n26 02 03 03 2\\n\") == \"185\"\nassert solution(\"1 1\\n1 2 3 4 5\\n\") == \"-1\"\nassert solution(\"1 1\\n31 12 25 28 31\\n\") == \"-1\"\nassert solution(\"1 1\\n26 02 03 03 1000\\n\") == \"5\"\nassert solution(\"1 1\\n1 2 3 4 5\\n5 6 7 8 9\\n\") == \"-1\"\nassert solution(\"1 1\\n1 1 1 1 1\\n\") == \"-1\"\nassert solution(\"1 1\\n26 02 03 03 1\\n26 02 03 03 2\\n\") == \"185\""
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input1) == output1, f\"Test case 1 failed: {solution(input1)}!= {output1}\"\nassert solution(input2) == output2, f\"Test case 2 failed: {solution(input2)}!= {output2}\""
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\\n26 02 03 03 1\\n\") == \"5\\n\"\nassert solution(\"1 1\\n26 02 03 03 2\\n\") == \"185\\n\"\nassert solution(\"1 1\\n26 02 03 03 1\\n26 02 03 03 2\\n\") == \"-1\\n\""
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1\\n26 02 03 03 1\\n\") == \"5\\n\"\nassert solution(\"1 1\\n26 02 03 03 2\\n\") == \"185\\n\"\nassert solution(\"1 1\\n26 02 03 03 3\\n\") == \"-1\\n\""
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r')) == '5'\nassert solution(open('input_2.txt', 'r')) == '185'\n"
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\\n26 02 03 03 1\\n26 02 03 03 2\\n\") == 5\nassert solution(\"1 1\\n26 02 03 03 1\\n26 02 03 03 3\\n\") == 185\nassert solution(\"1 1\\n26 02 03 03 1\\n26 02 03 03 2\\n\") == -1"
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n6 2\n3 4 5 6 1 2\n''') == '''\n5 6 1 2 3 4\n'''\n\nassert solution('''\n4 2\n3 4 1 2\n''') == '''\n2 3 4 1\n'''\n\nassert solution('''\n4 2\n1 2 3 4\n''') == '''\n4 1 2 3\n'''\n\nassert solution('''\n4 2\n1 2 3 4\n''') == '''\n2 3 4 1\n'''\n\nassert solution('''\n4 2\n1 2 3 4\n''') == '''\n4 1 2 3\n'''"
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected, f\"Test failed for input {stdin}\""
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"\"\"5 6 1 2 3 4\"\"\"\nassert solution() == \"\"\"2 3 4 1\"\"\"\nassert solution() == \"\"\"Impossible\"\"\""
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\\n\") == \"5 6 1 2 3 4\"\nassert solution(\"4 2\\n3 4 1 2\\n\") == \"2 3 4 1\""
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\\n\"\nassert solution(\"4 2\\n3 4 1 2\") == \"2 3 4 1\\n\"\n"
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\\n\") == \"5 6 1 2 3 4\\n\"\nassert solution(\"4 2\\n3 4 1 2\\n\") == \"2 3 4 1\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"5 6 1 2 3 4\\n2 3 4 1\""
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4 \"\nassert solution(\"4 2\\n3 4 1 2\") == \"2 3 4 1\""
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\"\nassert solution(\"4 2\\n3 4 1 2\") == \"2 3 4 1\""
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\\n\"\nassert solution(\"4 2\\n3 4 1 2\") == \"2 3 4 1\\n\"\nassert solution(\"3 4 1 2\") == \"3 4 1\\n\""
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"7413\"\n"
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"7413\""
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1374 2\") == \"7413\"\nassert solution(\"210 1\") == \"201\""
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1374 2\") == \"7413\"\nassert solution(\"210 1\") == \"201\""
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1374 2\") == \"7413\"\nassert solution(\"210 1\") == \"201\""
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    input=1374,\n    k=2,\n) == '7413'\n\nassert solution(\n    input=210,\n    k=1,\n) == '201'"
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()\n\nn, k = map(int, input().split())\n\nmax_num = 0\ncount = 0\nfor i in range(10):\n    for j in range(i + 1, 10):\n        if str(i) + str(j) not in ['0', '00', '000', '0000', '00000', '000000']:\n            count += 1\n            if count == k:\n                max_num = max(max_num, i * j)\n\nprint(max_num)"
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"7413\"\nassert solution() == \"201\""
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(13742) == \"7413\", \"Error: Expected '7413', but got '{}'.\".format(solution(13742))\nassert solution(2101) == \"201\", \"Error: Expected '201', but got '{}'.\".format(solution(2101))"
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 0.666666666666667, \"The solution is incorrect\"\nassert solution == 0.733333333333333, \"The solution is incorrect\""
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input1) == \"0.666666666666667\"\nassert solution(input2) == \"0.733333333333333\""
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution([3, 0, 1, 1, 2, 0]) == 0.733333333333333\nprint(solution([3, 0, 1, 1, 2, 0]))"
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 0.733333333333333\nassert solution(4) == 0.666666666666667\nprint(\"Test Passed\")"
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"0.666666666666667\""
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(str(int(input())) + '\\n') == '0.666666666666667\\n'\nassert solution(str(int(input())) + '\\n') == '0.733333333333333\\n'"
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 0\\n0 1\\n1 1\\n1 0\") == 0.666666666666667\nassert solution(\"0 0\\n1 1\\n2 0\") == 0.733333333333333\n\nsolution = input().split()\nn = int(solution[0])\npoints = []\nfor _ in range(n):\n    point = tuple(map(int, input().split()))\n    points.append(point)"
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"0.666666666666667\\n\"\nassert solution(open(\"input2.txt\", \"r\").read()) == \"0.733333333333333\\n\""
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n0 0\\n0 1\\n1 1\\n1 0') == '0.666666666666667'\nassert solution('3\\n0 0\\n1 1\\n2 0') == '0.733333333333333'"
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_data1) == output_data1\nassert solution(input_data2) == output_data2"
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3 4\\n10 1 3\\n0 1 20\\n\") == \"9\"\nassert solution(\"2 3 100\\n10 1 10\\n10 1 10\\n\") == \"21\"\n"
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3 4\\n10 1 3\\n0 1 20\") == \"9\"\nassert solution(\"2 3 100\\n10 1 10\\n10 1 10\") == \"21\"\n"
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3 4\\n10 1 3\\n0 1 20\") == \"9\"\nassert solution(\"2 3 100\\n10 1 10\\n10 1 10\") == \"21\""
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"Output the minimum total cost (in dollars) to provide a wireless network that covers every corridor.\\n\", \"Test case failed.\""
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 9, \"Your solution is incorrect. It should return 9, but it returns {}\".format(solution)"
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3 4\\n10 1 3\\n0 1 20\") == \"9\"\nassert solution(\"2 3 100\\n10 1 10\\n10 1 10\") == \"21\""
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3 4\\n10 1 3\\n0 1 20\") == \"9\"\nassert solution(\"2 3 100\\n10 1 10\\n10 1 10\") == \"21\""
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r')) == '9'\nassert solution(open('input_2.txt', 'r')) == '21'"
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == output, f\"Test failed. Expected: {output}, got: {solution(stdin=input())}\""
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(r\"2 3 4\n10 1 3\n0 1 20\") == 9\nassert solution(r\"2 3 100\n10 1 10\n10 1 10\") == 21\n"
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 2 7 -\\n1 1 1 2\\n\") == \"2\"\nassert solution(\"9 2 7 -\\n1 1 1 2\\n\") == \"4\""
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 2 7 -\\n1 1 1 2\") == \"2\"\nassert solution(\"9 2 7 -\\n1 1 1 2\") == \"4\"\n"
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 2 7 -\\n1 1 1 2\") == \"2\"\nassert solution(\"9 2 7 -\\n1 1 1 2\") == \"4\""
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('8 2 7 -\\n1 1 1 2') == '2'\nassert solution('9 2 7 -\\n1 1 1 2') == '4'"
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 2 7 -\\n1 1 1 2\") == \"2\"\nassert solution(\"9 2 7 -\\n1 1 1 2\") == \"4\""
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 2 7 -\\n1 1 1 2\\n\") == \"2\\n\"\nassert solution(\"9 2 7 -\\n1 1 1 2\\n\") == \"4\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 2 7 -\\n1 1 1 2\\n\") == \"2\\n\"\nassert solution(\"9 2 7 -\\n1 1 1 2\\n\") == \"4\\n\""
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 2 7 -\\n1 1 1 2\") == 2\nassert solution(\"9 2 7 -\\n1 1 1 2\") == 4"
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    8 2 7 -\n    1 1 1 2\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    9 2 7 -\n    1 1 1 2\n    \"\"\"\n) == \"4\""
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"3\\n4\\n3\\n2\\n1\" # expected output\n"
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n1 2 5\\n2 3 5\\n3 4 5\") == \"3\\n4\\n3\\n2\\n1\"\nassert solution(\"4 4\\n1 2 5\\n2 3 5\\n3 4 5\\n1 4 8\") == \"2\\n3\\n2\\n1\""
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"3\\n4\\n3\\n2\\n1\", \"The solution is incorrect.\""
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"Test case failed\"\n"
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('sample_input1.txt', 'r').read()) == '3\\n4\\n3\\n2\\n1\\n'\nassert solution(open('sample_input2.txt', 'r').read()) == '2\\n3\\n2\\n1\\n'"
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"3\\n4\\n3\\n2\\n1\""
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n1 2 5\\n2 3 5\\n3 4 5\") == \"3\\n4\\n3\\n2\\n1\""
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 3\\n1 2 5\\n2 3 5\\n3 4 5') == '3\\n4\\n3\\n2\\n1'"
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"\"\"\n3\n4\n3\n\"\"\"\n"
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n1 2 5\\n2 3 5\\n3 4 5\\n\") == \"3\\n4\\n3\\n2\\n1\\n\"\nassert solution(\"4 4\\n1 2 5\\n2 3 5\\n3 4 5\\n1 4 8\\n\") == \"2\\n3\\n2\\n1\\n\""
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    2 3\n    2 1\n    \"\"\"\n) == \"6\\n\"\n\nassert solution(\n    \"\"\"\n    3 4\n    2 3 1\n    \"\"\"\n) == \"24\\n\""
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 3\\n2 1') == '6'\nassert solution('3 4\\n2 3 1') == '24'\n"
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n2 1\") == \"6\\n\"\nassert solution(\"3 4\\n2 3 1\") == \"24\\n\""
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\n\nsample_input_1 = \"\"\"\n2 3\n2 1\n\"\"\"\n\nsample_output_1 = \"\"\"\n6\n\"\"\"\n\nsample_input_2 = \"\"\"\n3 4\n2 3 1\n\"\"\"\n\nsample_output_2 = \"\"\"\n24\n\"\"\""
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"6\\n24\""
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n2 1\") == \"6\"\nassert solution(\"3 4\\n2 3 1\") == \"24\""
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"24\" # expected output: 24"
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n2 1\") == \"6\\n\"\nassert solution(\"3 4\\n2 3 1\") == \"24\\n\""
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 3\\n2 1') == '6'\nassert solution('3 4\\n2 3 1') == '24'"
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == output, f\"Test failed: expected {output}, got {solution(stdin)}\""
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '2'"
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\"\nassert solution(\"5\\n3 4 5 1 2\\n\") == \"1\"\n"
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(stdin)}\""
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 2\n"
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2\\n\", \"Test case 1 failed\""
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n1 2\\n') == '2\\n'\nassert solution('5\\n3 4 5 1 2\\n') == '1\\n'\n\nfrom functools import lru_cache\n\n@lru_cache(maxsize=None)\n"
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\"\nassert solution(\"5\\n3 4 5 1 2\\n\") == \"1\\n\""
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 2"
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"Got '{solution(stdin)}', expected '{expected}'\""
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"Test case failed\"\n"
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n1 4 10\\n5 2 6\\n11 1 3\\n\") == \"9\"\nassert solution(\"3 3\\n1 3 1\\n2 1 2\\n1 1 1\\n\") == \"4\""
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_data) == output_data, \"Test Failed\"\nfor i in range(len(input_data)):\n    assert input_data[i] == output_data[i], f\"Test Failed for input {i}\""
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 3\\n1 4 10\\n5 2 6\\n11 1 3') == '9\\n'\nassert solution('3 3\\n1 3 1\\n2 1 2\\n1 1 1') == '4\\n'"
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == expected_output, \"Failed for sample input\"\n\nfrom typing import List"
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '0', 'Incorrect output' # This line should be '10'\n\nassert solution() == '10', 'Incorrect output' # This line should be '22'"
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 'Output', 'Your solution should return the correct result'"
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 3\\n1 4 10\\n5 2 6\\n11 1 3\\n') == '9\\n'\nassert solution('3 3\\n1 3 1\\n2 1 2\\n1 1 1\\n') == '4\\n'"
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 0 # Remove this line to get the correct output."
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n1 4 10\\n5 2 6\\n11 1 3\\n\") == \"9\"\nassert solution(\"3 3\\n1 3 1\\n2 1 2\\n1 1 1\\n\") == \"4\"\n"
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n3 3\n1 4 10\n5 2 6\n11 1 3\n''') == '9'\n\nassert solution('''\n3 3\n1 3 1\n2 1 2\n1 1 1\n''') == '4'"
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n2 1 3 4\\n1 2\\n1 3\\n3 4\\n') == '6\\n'\n\nassert solution('4\\n3 4 5 6\\n1 2\\n1 3\\n2 4\\n') == '3\\n'"
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n2 1 3 4\\n1 2\\n1 3\\n3 4\\n') == '6\\n'\nassert solution('4\\n3 4 5 6\\n1 2\\n1 3\\n2 4\\n') == '3\\n'"
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n2 1 3 4\\n1 2\\n1 3\\n3 4\\n') == '6\\n'\n\nassert solution('4\\n3 4 5 6\\n1 2\\n1 3\\n2 4\\n') == '3\\n'"
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n4\\n1 2\\n1 3\\n3 4') == '6'\nassert solution('4\\n3 4\\n1 2\\n1 3\\n2 4') == '3'"
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n2 1 3 4\\n1 2\\n1 3\\n3 4\\n\") == \"6\\n\""
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 6, \"Solution is incorrect\"\n"
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n4\n2 1 3 4\n1 2\n1 3\n3 4\n''') == '6'\n\nassert solution('''\n4\n3 4 5 6\n1 2\n1 3\n2 4\n''') == '3'"
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"6\"\n"
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n2 1 3 4\\n1 2\\n1 3\\n3 4\\n') == '6\\n', \"The output is incorrect.\"\nassert solution('4\\n3 4 5 6\\n1 2\\n1 3\\n2 4\\n') == '3\\n', \"The output is incorrect.\""
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input1) == '6', 'Solution should return 6'\nassert solution(sample_input2) == '3', 'Solution should return 3'"
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1, 10) == 18\nassert solution(2, 10) == 8\nassert solution(3, 10) == 265\nassert solution(4, 10) == 25\nassert solution(5, 10) == 10"
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\n1 10\\n5 8') == '18\\n8'\nassert solution('3\\n17 144\\n121 121\\n89 98') == '265\\n25\\n10'\n"
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"18\\n8\\n\"\n\nassert solution(stdin) == \"265\\n25\\n10\\n\""
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 10\\n5 8\") == \"18\\n8\"\nassert solution(\"17 144\\n121 121\\n89 98\") == \"265\\n25\\n10\"\n\nfrom typing import List"
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"TODO\""
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1 10\\n5 8\\n\") == \"18\\n8\\n\"\nassert solution(\"3\\n17 144\\n121 121\\n89 98\\n\") == \"265\\n25\\n10\\n\""
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r').read()) == \"Output Here\\n\""
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1 10\\n5 8\\n\") == \"18\\n8\\n\"\nassert solution(\"3\\n17 144\\n121 121\\n89 98\\n\") == \"265\\n25\\n10\\n\""
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1 10\\n5 8\") == \"18\\n8\"\nassert solution(\"3\\n17 144\\n121 121\\n89 98\") == \"265\\n25\\n10\""
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1 10\\n5 8\\n\") == \"18\\n8\\n\"\nassert solution(\"3\\n17 144\\n121 121\\n89 98\\n\") == \"265\\n25\\n10\\n\""
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n0 0\\n1 1\\n2 1\\n1 0\\n\") == 0.5\nassert solution(\"5 5\\n0 4\\n4 2\\n4 1\\n3 -1\\n-2 4\\n\") == 12.5"
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == 0.50000000, f\"Expected 0.50000000, got {solution(stdin)}\"\nassert solution(stdin) == 12.50000000, f\"Expected 12.50000000, got {solution(stdin)}\"\n"
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"0.50000000\", \"Alice received a cake for her birthday! Her cake can be described by a convex polygon with 4 vertices.\"\nassert solution(stdin) == \"12.50000000\", \"Alice will now choose exactly 5 random vertices (5 >= 3) from her cake and cut a piece, the shape of which is the convex polygon defined by those vertices. Compute the expected area of this piece of cake.\""
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3\\n0 0\\n1 1\\n2 1\\n1 0\\n5 5\\n0 4\\n4 2\\n4 1\\n3 -1\\n-2 4\\n\") == \"0.50000000\""
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n0 0\\n1 1\\n2 1\\n1 0\") == 0.5\nassert solution(\"5 5\\n0 4\\n4 2\\n4 1\\n3 -1\\n-2 4\") == 12.5"
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n0 0\\n1 1\\n2 1\\n1 0\") == 0.5\nassert solution(\"5 5\\n0 4\\n4 2\\n4 1\\n3 -1\\n-2 4\") == 12.5"
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == expected_output_1, \"Test case 1 failed\"\nassert solution(sample_input_2) == expected_output_2, \"Test case 2 failed\""
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n0 0\\n1 1\\n2 1\\n1 0\") == 0.5\nassert solution(\"5 5\\n0 4\\n4 2\\n4 1\\n3 -1\\n-2 4\") == 12.5"
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"The expected output is {expected_output}, but got {solution(input())}.\""
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n0 0\\n1 1\\n2 1\\n1 0\\n\") == \"0.50000000\"\nassert solution(\"5 5\\n0 4\\n4 2\\n4 1\\n3 -1\\n-2 4\\n\") == \"12.50000000\""
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input1) == \"2\", \"Test case 1 failed\"\nassert solution(sample_input2) == \"1\", \"Test case 2 failed\""
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2\\n\"\n"
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 1 3\\n0 1\\n1 2\\n2 3\\n1\") == \"2\\n\"\nassert solution(\"4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\") == \"1\\n\""
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 1 3\\n0 1\\n1 2\\n2 3\\n1\\n\") == \"2\"\nassert solution(\"4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\\n\") == \"1\""
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 1 3\\n0 1\\n1 2\\n2 3\\n1\\n') == '2\\n'\nassert solution('4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\\n') == '1\\n'"
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 1 3\\n0 1\\n1 2\\n2 3\\n1') == '2'\nassert solution('4 0 4\\n0 2\\n0 1\\n2 1\\n2 3') == '1'"
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 1 3\\n0 1\\n1 2\\n2 3\\n1\") == \"2\\n\"\nassert solution(\"4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\") == \"1\\n\""
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '2', 'Test case 1 failed'\nassert solution('4 1 3\\n0 1\\n1 2\\n2 3\\n1\\n') == '2', 'Test case 2 failed'\nassert solution('4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\\n') == '1', 'Test case 3 failed'"
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(solution_input1) == solution_output1, \"Sample Input 1 is incorrect\"\nassert solution(solution_input2) == solution_output2, \"Sample Input 2 is incorrect\""
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 1 3\\n0 1\\n1 2\\n2 3\\n1\") == \"2\\n\"\nassert solution(\"4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\") == \"1\\n\""
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 2 1') == 6\nassert solution('2 2 2') == 30"
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin: str) == 'Output the number of different possible arrangements of delivery, modulo a prime number 10^9+7. If there is no such order, output 0.'\n"
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 1\") == 6\nassert solution(\"2 2 2\") == 30"
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Test Failed: Expected output {expected}, got {solution(stdin)}\""
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"30\"\n"
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\""
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"Incorrect output. Expected {expected}, got {solution(input())}\"\n"
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), \"The output and the expected output do not match.\""
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1 2 1) == 6\nassert solution(2 2 2) == 30"
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n2020 2020 2020\\n') == '2021 2020 2020'\nassert solution('2\\n1 9999999\\n') == 'impossible'\n"
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == '2021 2020 2020', 'Solution 1'\nassert solution(2) == 'impossible', 'Solution 2'"
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\n2020 2020 2020') == '2021 2020 2020'\nassert solution('2\\n1 9999999') == 'impossible'"
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, \"Error: Solution does not match the expected output.\""
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed: {solution(input())} should be {expected_output}\""
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n2020 2020 2020\") == \"2021 2020 2020\\n\"\nassert solution(\"2\\n1 9999999\") == \"impossible\\n\""
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"impossible\""
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n2020 2020 2020\\n\") == \"2021 2020 2020\"\nassert solution(\"2\\n1 9999999\\n\") == \"impossible\""
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(data) == expected, f\"Test case {i + 1} failed: {solution(data)}!= {expected}\" for i, data, expected in enumerate(zip(stdin.split('\\n'), stdout.split('\\n')))"
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n2020 2020 2020\\n\") == \"2021 2020 2020\"\nassert solution(\"2\\n1 9999999\\n\") == \"impossible\""
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(30 70) == 11\nassert solution(66 69) == 2"
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"11\", \"Your solution is incorrect.\""
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"30 70\") == \"11\", \"The output of solution should be '11'.\"\nassert solution(\"66 69\") == \"2\", \"The output of solution should be '2'.\""
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed for the given input\\nExpected output: {expected_output}\\nActual output: {solution(stdin)}\"\n\nfor stdin, expected_output in [\n    (\"30 70\", 11),\n    (\"66 69\", 2)\n]:\n    print(f\"Solution for {stdin}:\")\n    print(solution(stdin))"
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\""
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"11\\n\""
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2\", \"Output: %s\" % solution(stdin)"
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"30 70\") == \"11\", \"The output should be 11\"\nassert solution(\"66 69\") == \"2\", \"The output should be 2\""
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"11\"\n\nimport math"
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(30, 70) == 11\nassert solution(66, 69) == 2"
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n    2 2 0\n    >@\n    >~\n''') == '2'\n\nassert solution('''\n    3 5 1\n    >>@<<\n    >~#~<\n>>>>~\n''') == '4'"
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2 0\\n>@\\n>~\") == \"2\\n\"\nassert solution(\"3 5 1\\n>>@<<\\n>~#~<\\n>>>>~\") == \"4\\n\"\nassert solution(\"3 3 1\\n>@\\n>~\") == \"1\\n\"\nassert solution(\"3 3 0\\n@<\\n>~\") == \"1\\n\"\nassert solution(\"4 4 0\\n@<\\n>~\") == \"1\\n\"\nassert solution(\"4 3 0\\n@<\\n>~\") == \"1\\n\"\nassert solution(\"5 5 0\\n@<\\n>~\") == \"1\\n\"\nassert solution(\"5 4 0\\n@<\\n>~\") == \"1\\n\"\nassert solution(\"2 2 1\\n>@\\n>~\") == \"2\\n\"\nassert solution(\"2 2 0\\n@<\\n>~\") == \"1\\n\"\nassert solution(\"2 2 1\\n>@\\n>~\") == \"2\\n\"\nassert solution(\"3 3 1\\n>@\\n>~\") == \"1\\n\"\nassert solution(\"3 3 0\\n@<\\n>~\") == \"1\\n\"\nassert solution(\"3 3 1\\n>@\\n>~\") == \"1\\n\"\nassert solution(\"3 3 0\\n@<\\n>~\") == \"1\\n\"\nassert solution(\"4 4 0\\n@<\\n>~\") == \"1\\n\"\nassert solution(\"4 3 0\\n@<\\n>~\") == \"1\\n\"\nassert solution(\"5 5 0\\n@<\\n>~\") == \"1\\n\"\nassert solution(\"5 4 0\\n@<\\n>~\") == \"1\\n\"\nassert solution(\"6 6 0\\n@<\\n>~\") == \"1\\n\"\nassert solution(\"6 5 0\\n@<\\n>~\") == \"1\\n\"\nassert solution(\"7 7 0\\n@<\\n>~\") == \"1\\n\"\nassert solution(\"7 6 0\\n@<\\n>~\") == \"1\\n\"\nassert solution(\"8 8 0\\n@<\\n>~\") == \"1\\n\"\nassert solution(\"8 7 0\\n@<\\n>~\") == \"1\\n\"\nassert solution(\"9 9 0\\n@<\\n>~\") == \"1\\n\"\nassert solution(\"9 8 0\\n@<\\n>~\") == \"1\\n\"\nassert solution(\"10 10 0\\n@<\\n>~\") == \"1\\n\"\nassert solution(\"10 9 0\\n@<\\n>~\") == \"1\\n\"\nassert solution(\"11 11 0\\n@<\\n>~\") == \"1\\n\"\nassert solution(\"11 10 0\\n@<\\n>~\") == \"1\\n\"\nassert solution(\"12 12 0\\n@<\\n>~\") == \"1\\n\"\nassert solution(\"12 11 0\\n@<\\n>~\") == \"1\\n\"\nassert solution(\"13 13 0\\n@<\\n>~\") == \"1\\n\"\nassert solution(\"13 12 0\\n@<\\n>~\") == \"1\\n\"\nassert solution(\"14 14 0\\n@<\\n>~\") == \"1\\n\"\nassert solution(\"14 13 0\\n@<\\n>~\") == \"1\\n\"\nassert solution(\"15 15 0\\n@<\\n>~\") == \"1\\n\"\nassert solution(\"15 14 0\\n@<\\n>~\") == \"1\\n\"\nassert solution(\"16 16 0\\n@<\\n>~\") == \"1\\n\"\nassert solution(\"16 15 0\\n@<\\n>~\") == \"1\\n\"\nassert solution(\"17 17 0\\n@"
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2 0\\n>@\\n>~\") == 2\nassert solution(\"3 5 1\\n>>@<<\\n>~#~<\\n>>>>~\") == 4"
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"begin repairs\"\nprint(\"begin repairs\")"
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"2 2 0\n>@\n>~\"\"\") == \"2\"\n\nassert solution(\"\"\"3 5 1\n>>@<<\n>~#~<\n>>>>~\"\"\") == \"4\""
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"begin repairs\"\nassert solution() == \"4\""
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2 0\\n>@\\n>~\") == \"2\\n\"\nassert solution(\"3 5 1\\n>>@<<\\n>~#~<\\n>>>>~\") == \"4\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    '2 2 0\\n>@\\n>~'\n) == '2\\n'\n\nassert solution(\n    '3 5 1\\n>>@<<\\n>~#\\n>>>>~'\n) == '4\\n'"
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 2 0\\n>@\\n>~') == '2\\n'\nassert solution('3 5 1\\n>>@<<\\n>~#~<\\n>>>>~') == '4\\n'\n"
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2 0\\n>@\\n>~\") == \"2\\n\"\nassert solution(\"3 5 1\\n>>@<<\\n>~#~<\\n>>>>~\") == \"4\\n\""
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\""
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\\n\", \"Test 1 Failed\"\nassert solution(\"5025=30\") == \"5+025=30\\n\", \"Test 2 Failed\""
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\""
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\""
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\""
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\""
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\\n\", \"Test 1\"\nassert solution(\"5025=30\") == \"5+025=30\\n\", \"Test 2\""
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\""
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\"\n"
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\""
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == '1 2\\n'\nassert solution(open('input_2.txt', 'r')) == '-1\\n'"
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    '''\n    8\n    1\n    3\n    2\n    4\n    1\n    5\n    2\n    4\n    '''\n) == '''\n1 2\n'''\n\nassert solution(\n    '''\n    8\n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    1\n    '''\n) == '''\n-1\n'''"
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"1 2\"\nassert solution(stdin) == \"2 1\"\nassert solution(stdin) == \"1 1\"\nassert solution(stdin) == \"2 2\"\nassert solution(stdin) == \"1 -1\"\n"
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\""
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input1) == \"1 2\"\nassert solution(sample_input2) == \"-1\""
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == \"1 2\"\nassert solution(sample_input_2) == \"-1\""
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"1 2\", \"Expected Output: 1 2, but got: {}\".format(solution())"
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''8\n1\n3\n2\n4\n1\n5\n2\n4''') == '1 2'\n\nassert solution('''8\n1\n2\n3\n4\n5\n6\n7\n1''') == '-1'"
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '1 2\\n', 'The solution is incorrect. Please check the provided code.'\n"
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8\\n1\\n3\\n2\\n4\\n1\\n5\\n2\\n4\\n\") == \"1 2\\n\"\nassert solution(\"8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n1\\n\") == \"-1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1101\") == \"1\\n\"\nassert solution(\"1\") == \"0\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1101') == '1', \"Test case 1 failed\"\nassert solution('1') == '0', \"Test case 2 failed\""
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1101\") == \"1\", \"Test 1 failed\"\nassert solution(\"1\") == \"0\", \"Test 2 failed\"\n\nfrom typing import List"
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1101\") == \"1\"\nassert solution(\"1\") == \"0\""
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1101\") == \"1\"\nassert solution(\"1\") == \"0\""
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1101\") == \"1\"\nassert solution(\"1\") == \"0\""
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"Test case {t+1} failed\" for t in range(input_count)\n"
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1101\") == \"1\\n\", \"Sample Input 1 failed.\"\nassert solution(\"1\") == \"0\\n\", \"Sample Input 2 failed.\""
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 1, \"Incorrect output.\"\nprint(\"All tests passed successfully.\")"
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1101\") == \"1\", \"Sample Input 1 failed\"\nassert solution(\"1\") == \"0\", \"Sample Input 2 failed\""
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == expected, f\"Test failed: got {solution()}, expected {expected}\""
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == expected, f\"Expected {expected}, got {solution()}\"\n"
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n3 1 3 1\\n2 2 1\\n3 3 1 3\\n1 2\\n2 3\\n3 1\") == \"1\\n0\\n2\"\nassert solution(\"2 1\\n4 1 6 3 6\\n7 3 4 2 6 5 6 1\\n1 2\\n\") == \"3\""
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n3 1 3 1\\n2 2 1\\n3 3 1 3\\n1 2\\n2 3\\n3 1\") == \"1\\n0\\n2\"\nassert solution(\"2 1\\n4 1 6 3 6\\n7 3 4 2 6 5 6 1\\n1 2\") == \"3\\n0\\n2\""
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n3 1 3 1\\n2 2 1\\n3 3 1 3\\n1 2\\n2 3\\n3 1\") == \"1\\n0\\n2\"\nassert solution(\"2 1\\n4 1 6 3 6\\n7 3 4 2 6 5 6 1\\n1 2\\nSample Output 2: \\n3\" == \"3\""
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution([3, 3, 3, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, "
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == expected_output, f\"Got '{solution(stdin=input())}' expected '{expected_output}'\""
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n3 1 3 1\\n2 2 1\\n3 3 1 3\\n1 2\\n2 3\\n3 1\") == \"1\\n0\\n2\\n\"\nassert solution(\"2 1\\n4 1 6 3 6\\n7 3 4 2 6 5 6 1\\n1 2\") == \"3\\n\"\n\nimport re"
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 1\\n1 2 3 4\\n4 2\\n2 4 3 4\") == \"4.000000\"\nassert solution(\"4 2\\n2 4 3 4\") == \"3.666666\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"3.666666\\n\", \"The correctness of the solution cannot be verified.\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == '4.000000', \"Sample Input 1\"\nassert solution(sample_input_2) == '3.666666', \"Sample Input 2\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"4 1\\n1 2 3 4\\n\") == \"4.000000\\n\"\nassert solution(stdin=\"4 2\\n2 4 3 4\\n\") == \"3.666666\\n\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 4.0"
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Test case failed. Expected output: {output()}, Received output: {solution(input())}\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 1\\n1 2 3 4\\n\") == \"4.000000\"\nassert solution(\"4 2\\n2 4 3 4\\n\") == \"3.666666\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"4.000000\\n\", \"Test failed\" # Sample Output 1\nassert solution() == \"3.666666\\n\", \"Test failed\" # Sample Output 2"
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 1\\n1 2 3 4\\n4 2\\n2 4 3 4\") == \"4.000000\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('example1.txt').read()) == '4.000000\\n'\nassert solution(open('example2.txt').read()) == '3.666666\\n'"
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.0 0.0\\n0.0 2.0\") == 0.75\nassert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0\") == 0.625"
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"0.750\"\n"
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.0 0.0\\n0.0 2.0\") == \"0.750\", \"Test case 1 failed\"\nassert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0\") == \"0.625\", \"Test case 2 failed\""
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.0 0.0\\n0.0 2.0\") == 0.75\nassert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0\") == 0.625"
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"0.750\", \"Incorrect output\""
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input1) == 0.75, \"Expected 0.75, got {0}\".format(solution(sample_input1))\nassert solution(sample_input2) == 0.625, \"Expected 0.625, got {0}\".format(solution(sample_input2))"
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.0 0.0\\n0.0 2.0\") == 0.75\nassert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0\") == 0.625"
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.0 0.0\\n0.0 2.0\\n\") == \"0.750\", \"Sample Input 1\"\nassert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0\\n\") == \"0.625\", \"Sample Input 2\""
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.0 0.0\\n0.0 2.0\") == \"0.750\"\nassert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0\") == \"0.625\""
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 3\\n1 2 4\\n0 3 6\\n4 0 3') == '2'\nassert solution('3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0') == '37'"
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input1) == '2', \"Expected '2', but got '{}'.\".format(solution(input1))\nassert solution(input2) == '37', \"Expected '37', but got '{}'.\".format(solution(input2))"
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n1 2 4\\n0 3 6\\n4 0 3\") == \"2\\n\"\nassert solution(\"3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0\") == \"37\\n\""
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n1 2 4\\n0 3 6\\n4 0 3\") == 2\nassert solution(\"3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0\") == 37"
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin='3 3\\n1 2 4\\n0 3 6\\n4 0 3') == 2\nassert solution(stdin='3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0') == 37\n"
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Test case {t+1} failed: Expected output '{expected}', got '{solution(input())}'\"\nprint(\"Test case passed\")"
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 2, \"The code is incorrect. It should return 2.\""
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n1 2 4\\n0 3 6\\n4 0 3\") == \"2\"\nassert solution(\"3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0\") == \"37\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input) == output, \"Test case failed.\"\n"
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n1 2 4\\n0 3 6\\n4 0 3\") == \"2\", \"1\"\nassert solution(\"3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0\") == \"37\", \"2\"\n"
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), \"The output is incorrect.\"\n"
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2"
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n4 3\n1234\n1 4\n1 4\n1 4\n''') == '''\n10\n14\n18\n'''\n\nassert solution('''\n4 4\n1234\n1 1\n1 2\n1 3\n1 4\n''') == '''\n1\n4\n9\n16\n'''"
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3\\n1234\\n1 4\\n1 4\\n1 4\") == \"10\\n14\\n18\\n\"\nassert solution(\"4 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\") == \"1\\n4\\n9\\n16\\n\""
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n1234\\n1 4\\n1 4\\n1 4\") == \"10\\n14\\n18\\n\", \"Luka is not paying attention in class again, while the teacher is explaining redox reactions. Instead of paying attention, he is playing with analog dials.\"\n\nassert solution(\"4 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\") == \"1\\n4\\n9\\n16\\n\", \"Luka has $N$ such dials on his desk, numbered $1$ to $N$ left to right, and two sheets of paper for him to write on. Luka's game starts with him setting the dials in some starting configuration, which he then writes onto the first sheet. Luka then does the following $M$ times:\"\n\nassert solution(\"4 5\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\") == \"0\\n\", \"Luka's game ends when all the dials between $A$ and $B$ are pressed. In this case, there is only one press on dial $4$, so the result is $0$. Therefore, the output is $0$."
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n1234\\n1 4\\n1 4\\n1 4\\n\") == \"10\\n14\\n18\\n\"\nassert solution(\"4 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\\n\") == \"1\\n4\\n9\\n16\\n\""
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == ['10', '14', '18']\nassert solution() == ['1', '4', '9', '16']"
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n1234\\n1 4\\n1 4\\n1 4\") == \"10\\n14\\n18\"\nassert solution(\"4 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\") == \"1\\n4\\n9\\n16\""
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 3\\n1234\\n1 4\\n1 4\\n1 4') == '10\\n14\\n18\\n'\n\nassert solution('4 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4') == '1\\n4\\n9\\n16\\n'"
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"The output {solution(input())} is incorrect, expected {expected_output}.\"\n"
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 2, \"Expected output: 2\\nActual output: \" + str(solution())"
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2 3\\n1 3\\n2 3\\n3 4\") == \"2\"\nassert solution(\"5 2 4\\n1 3\\n3 4\\n2 4\\n4 5\") == \"1\""
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == expected_output, f\"Test failed: expected {expected_output}, got {solution}\""
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == expected"
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2 3\\n1 3\\n2 3\\n3 4\") == 2\nassert solution(\"5 2 4\\n1 3\\n3 4\\n2 4\\n4 5\") == 1"
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n4 2 3\n1 3\n2 3\n3 4\n''') == '2\\n'\n\nassert solution('''\n5 2 4\n1 3\n3 4\n2 4\n4 5\n''') == '1\\n'"
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 2, \"Test failed\""
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 2, \"Expected output 2, but got {}\".format(solution())"
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_str) == expected_output, f\"Expected {expected_output}, got {solution(input_str)}\""
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Test {case} failed: expected {output}, got {solution(input())}\""
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0\\n\") == \"no\"\n\nassert solution(\"2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\\n\") == \"no\""
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"no\""
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 'no' # Solution for sample case 1"
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n1\n10000 0 10000 10000 0 10000\n3\n10000 0 10000 10000 5000 5000\n5000 5000 10000 10000 0 10000\n0 0 0 1000 1000 0\n\"\"\") == \"no\"\n\nassert solution(\"\"\"\n2\n9996 0 9997 0 0 1\n9999 0 10000 0 0 1\n2\n9997 0 9998 0 0 1\n9998 0 9999 0 0 1\n\"\"\") == \"no\""
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input1) == 'yes'\nassert solution(sample_input2) == 'no'"
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected, f\"Solution: {solution(stdin)}, Expected: {expected}\"\n"
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0\\n2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\") == \"no\\n\"\nassert solution(\"2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\\n\") == \"no\\n\"\nassert solution(\"1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0\\n2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\") == \"no\\n\""
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0\") == \"no\"\nassert solution(\"2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\") == \"no\"\nassert solution(\"1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0\") == \"no\"\n"
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0\\n\") == \"no\"\n\nassert solution(\"2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\\n\") == \"no\""
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input) == output, f\"Test case {i+1} failed: got '{output}', expected '{input}'\" for i, (input, output) in enumerate(zip(input_cases, output_cases)):\n    pass"
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"YES\\n1 3\\n2 1\\n3 2\""
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output\n"
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n1 2\\n2 3\\n1 3\\n\") == \"YES\\n1 3\\n2 1\\n3 2\\n\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\\n\") == \"NO\""
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 3\\n1 2\\n2 3\\n1 3\\n') == 'YES\\n1 3\\n2 1\\n3 2\\n'\nassert solution('4 3\\n1 2\\n1 3\\n1 4\\n') == 'NO'"
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"YES\\n1 3\\n2 1\\n3 2\"\nassert solution() == \"NO\\ndef solution(stdin: str) -> str:\n    pass\"\n\nprint(solution())"
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected, f\"Solution is incorrect. Expected: '{expected}', got: '{solution(stdin)}'\""
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\") == \"YES\\n1 3\\n2 1\\n3 2\\n4 1\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\") == \"NO\\n1 3\\n2 1\\n3 2\\n4 1\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\n3\\n4\\n1\\n2\\"
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input(1)) == ['YES', '1 3', '2 1', '3 2']\nassert solution(sample_input(2)) == ['NO', 'def solution(stdin: str) -> str:']"
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(r\"\"\"\n3 3\n1 2\n2 3\n1 3\n\"\"\") == \"YES\\n1 3\\n2 1\\n3 2\"\n\nassert solution(r\"\"\"\n4 3\n1 2\n1 3\n1 4\n\"\"\") == \"NO\""
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 3\\n1 2\\n2 3\\n1 3\\n') == 'YES\\n1 3\\n2 1\\n3 2\\n'\nassert solution('4 3\\n1 2\\n1 3\\n1 4\\n') == 'NO\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n0 > 1\\n1 = 2\\n0 = 2\\n\") == \"inconsistent\"\nassert solution(\"5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 > 3\\n1 > 4\\n\") == \"consistent\""
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Solution: {solution(input())}\\nExpected Output: {expected_output}\""
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 3\\n0 > 1\\n1 = 2\\n0 = 2\\n') == 'inconsistent'\nassert solution('5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 > 3\\n1 > 4\\n') == 'consistent'"
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(str(input())) == \"consistent\""
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n0 > 1\\n1 = 2\\n0 = 2\") == \"inconsistent\"\nassert solution(\"5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 > 3\\n1 > 4\") == \"consistent\""
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n0 > 1\\n1 = 2\\n0 = 2\") == \"consistent\"\nassert solution(\"5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 > 3\\n1 > 4\") == \"consistent\"\nassert solution(\"3 3\\n0 > 1\\n1 = 2\\n0 = 2\") == \"inconsistent\"\nassert solution(\"5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 > 3\\n1 > 4\") == \"inconsistent\""
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n0 > 1\\n1 = 2\\n0 = 2\\n\") == \"inconsistent\"\nassert solution(\"5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 > 3\\n1 > 4\\n\") == \"consistent\""
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"consistent\"\n"
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 'consistent'"
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == \"inconsistent\"\nassert solution(2) == \"consistent\""
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == pytest.approx(1.57079633, rel=1e-6), \"Incorrect output\""
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n4\n1 0 0\n1 1 0\n0 0 0\n0 0 1\n''') == '1.57079633'\nassert solution('''\n4\n-100 0 0\n10 0 10\n-10 -10 -10\n0 0 0\n''') == '41938.65135885'"
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 1.57079633\nassert solution() == 41938.65135885\n"
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == \"1.57079633\", \"Testcase 1 failed\"\nassert solution(sample_input2) == \"41938.65135885\", \"Testcase 2 failed\""
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 1.57079633\nassert solution() == 41938.65135885"
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Test {test_case_id + 1} failed\""
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"1.57079633\"\nassert solution() == \"41938.65135885\"\n\nfrom typing import List"
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('Input 1\\n4\\n1 0 0\\n1 1 0\\n0 0 0\\n0 0 1\\nOutput 1\\n1.57079633\\n\\nInput 2\\n4\\n-100 0 0\\n10 0 10\\n-10 -10 -10\\n0 0 0\\nOutput 2\\n41938.65135885\\n\\n') == ['1.57079633', '41938.65135885']"
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 0 0\\n1 1 0\\n0 0 0\\n0 0 1\\n\") == \"1.57079633\"\nassert solution(\"4\\n-100 0 0\\n10 0 10\\n-10 -10 -10\\n0 0 0\\n\") == \"41938.65135885\""
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('Sample Input 1') == '1.57079633', \"Vera is an astronomer studying locality of nearby star systems. The star systems can be thought of as 3D points in space. Vera would like to place a can around the stars. In other words, she would like to know what is the smallest volume cylinder that encloses the stars. The cylinder can be oriented in any direction. At least one base of the cylinder must have at least three stars.\"\n\nassert solution('Sample Input 2') == '41938.65135885', \"Vera is an astronomer studying locality of nearby star systems. The star systems can be thought of as 3D points in space. Vera would like to place a can around the stars. In other words, she would like to know what is the smallest volume cylinder that encloses the stars. The cylinder can be oriented in any direction. At least one base of the cylinder must have at least three stars.\""
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"11\\nsabcabcfabc\") == 3\nassert solution(\"18\\ntrutrutiktiktappop\") == 4"
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"11\\nsabcabcfabc\") == 3, \"Incorrect output for sample input 1\"\nassert solution(\"18\\ntrutrutiktiktappop\") == 4, \"Incorrect output for sample input 2\""
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=input()) == \"4\""
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin='Sample Input 1') == '3\\n'\nassert solution(stdin='Sample Input 2') == '4\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '3'"
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=input()) == expected_output, f\"Input {stdin} should return {expected_output}, but it returns {solution(stdin)}\""
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"11\\nsabcabcfabc\") == 3\nassert solution(\"18\\ntrutrutiktiktappop\") == 4"
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"11\\nsabcabcfabc\") == \"3\"\nassert solution(\"18\\ntrutrutiktiktappop\") == \"4\""
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input1) == 3\nassert solution(sample_input2) == 4"
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"11\\nsabcabcfabc\") == 3\nassert solution(\"18\\ntrutrutiktiktappop\") == 4\n\nfrom typing import List"
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2 3 1\\n3 1 2\") == 2\nassert solution(\"6\\n5 1 6 3 2 4\\n4 6 5 1 3 2\") == 5"
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected_output, f\"Got {solution(stdin)}, expected {expected_output}\"\n"
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n2 3 1\\n3 1 2') == 2\nassert solution('6\\n5 1 6 3 2 4\\n4 6 5 1 3 2') == 5"
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n2\\n3\\n1\\n2\\n2') == '2'\nassert solution('2\\n1\\n2\\n2\\n2\\n3\\n1\\n3\\n3') == '3'\nassert solution('4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4"
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"3\\n2 3 1\\n3 1 2\") == \"2\\n\"\nassert solution(stdin=\"6\\n5 1 6 3 2 4\\n4 6 5 1 3 2\") == \"5\\n\""
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(solution(stdin)) == '2'\nassert solution(stdin.split()) == '2'"
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n2 3 1\\n3 1 2') == '2\\n', \"The solution is incorrect\""
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n2 3 1\\n3 1 2\") == \"2\"\nassert solution(\"6\\n5 1 6 3 2 4\\n4 6 5 1 3 2\") == \"5\""
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 'abc'\n"
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r')) == '2'\nassert solution(open('input1.txt', 'r')) == '2'\nassert solution(open('input2.txt', 'r')) == '5'"
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"4\\n\", \"Expected output: 4\\n\"\n"
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == 4\nprint(\"All tests passed!\")"
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"4\"\n"
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"Output\""
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"4\\n9\"\n"
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\n"
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 4, \"Test failed\""
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1\\n0 10 20\\n0 10\\n6 1\\n0 10 20 26 40 50\\n0 40\\n\") == \"4\\n\"\nassert solution(\"6 1\\n0 10 20 26 40 50\\n0 40\\n\") == \"9\\n\"\n"
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 4\nassert solution() == 9"
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\") == \"not equal\"\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\") == \"equal\"\n"
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\\n\\nshuffle([1,2,1,2])\") == \"not equal\"\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\\n\\n[1,2,3,4,5,6]\") == \"equal\""
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\\nshuffle([1,2,1,2])\") == \"not equal\"\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\\n[1,2,3,4,5,6]\") == \"equal\""
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"not equal\", f\"Expected 'not equal', but got '{solution(input())}'\""
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\\nshuffle([1,2,1,2])\") == \"not equal\"\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\\n[1,2,3,4,5,6]\") == \"equal\""
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\\n\\nshuffle([1,2,1,2])\\n\") == \"not equal\"\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\\n\\n[1,2,3,4,5,6]\\n\") == \"equal\"\n"
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\\nshuffle([1,2,1,2])\") == \"not equal\\n\"\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\\n[1,2,3,4,5,6]\") == \"equal\\n\"\n"
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"not equal\" or solution(input()) == \"equal\"\n"
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('concat(shuffle([1,2]),shuffle([1,2]))\\nshuffle([1,2,1,2])') == 'not equal'\nassert solution('sorted(concat([3,2,1],[4,5,6]))\\n[1,2,3,4,5,6]') == 'equal'"
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\") == \"not equal\"\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\") == \"equal\"\n"
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2\\n3 2\\n1 2 1 2\\n2 3 1 2\") == \"Oh no\"\nassert solution(\"1 3\\n3 2\\n1 2 1 2\\n2 3 1 2\") == \"1\"\n\nfrom typing import List"
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2\\n3 2\\n1 2 1 2\\n2 3 1 2\") == \"Oh no\"\nassert solution(\"1 3\\n3 2\\n1 2 1 2\\n2 3 1 2\") == \"1\""
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2\\n3 2\\n1 2 1 2\\n2 3 1 2\") == \"Oh no\"\nassert solution(\"1 3\\n3 2\\n1 2 1 2\\n2 3 1 2\") == \"1\""
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n1 2\n3 2\n1 2 1 2\n2 3 1 2\n''') == 'Oh no\\n'\n\nassert solution('''\n1 3\n3 2\n1 2 1 2\n2 3 1 2\n''') == '1\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2\\n3 2\\n1 2 1 2\\n2 3 1 2\\n\") == \"Oh no\"\nassert solution(\"1 3\\n3 2\\n1 2 1 2\\n2 3 1 2\\n\") == \"1\"\n"
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == 'Oh no', 'The solution is incorrect'\nassert solution(sample_input_2) == '1', 'The solution is incorrect'"
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2\\n3 2\\n1 2 1 2\\n2 3 1 2\") == \"Oh no\""
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == 'Oh no'\nassert solution(sample_input_2) == '1'"
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 2\\n3 2\\n1 2 1 2\\n2 3 1 2') == 'Oh no'\nassert solution('1 3\\n3 2\\n1 2 1 2\\n2 3 1 2') == '1'\n"
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Oh no\", \"The output should be 'Oh no'.\"\n\ninput_str = \"\"\"\n1 3\n3 2\n1 2 1 2\n2 3 1 2\n\"\"\"\n\nassert solution(input_str) == \"1\", \"The output should be '1'.\""
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n1 2 2\\n2 3 1\\n3 4 1\\n4 1 2\\n\") == \"3\\n\"\nassert solution(\"5 5\\n1 2 1\\n2 3 1\\n2 4 1\\n2 5 1\\n4 5 1\\n\") == \"impossible\\n\""
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input1) == '3'\nassert solution(input2) == 'impossible'"
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 4\\n1 2 2\\n2 3 1\\n3 4 1\\n4 1 2') == 3\nassert solution('5 5\\n1 2 1\\n2 3 1\\n2 4 1\\n2 5 1\\n4 5 1') == 'impossible'"
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == '3'\nassert solution(sample_input_2) == 'impossible'\n\nfrom typing import List"
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '3'\n"
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(4, 4, 1, 2, 2, 1, 2, 3, 1, 4, 1, 2, 5, 1, 4, 5, 1) == 3\nassert solution(5, 5, 1, 2, 1, 1, 2, 3, 1, 2, 4, 1, 2, 5, 1, 4, 5, 1) == \"impossible\""
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\n1 2 2\\n2 3 1\\n3 4 1\\n4 1 2\") == \"3\"\nassert solution(\"5 5\\n1 2 1\\n2 3 1\\n2 4 1\\n2 5 1\\n4 5 1\") == \"impossible\""
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n1 2 2\\n2 3 1\\n3 4 1\\n4 1 2\") == \"3\\n\"\nassert solution(\"5 5\\n1 2 1\\n2 3 1\\n2 4 1\\n2 5 1\\n4 5 1\") == \"impossible\\n\""
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 5\\n1 2 1\\n2 3 1\\n2 4 1\\n2 5 1\\n4 5 1\") == \"3\\n\"\nassert solution(\"4 4\\n1 2 2\\n2 3 1\\n3 4 1\\n4 1 2\") == \"3\\n\"\nassert solution(\"5 4\\n1 2 1\\n2 3 1\\n2 4 1\\n2 5 1\\n4 5 1\") == \"impossible\\n\""
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n1 2 2\\n2 3 1\\n3 4 1\\n4 1 2\\n\") == 3\nassert solution(\"5 5\\n1 2 1\\n2 3 1\\n2 4 1\\n2 5 1\\n4 5 1\\n\") == \"impossible\""
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '2'"
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for sample input: {input()}, expected output: {expected_output}\""
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2 1 1 1 3\\n1\\n22\") == \"2\"\nassert solution(\"1\\n22\") == \"4\"\n"
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n2 1 1 1 3\\n') == '2'\nassert solution('1\\n22\\n') == '4'"
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n2 1 1 1 3\\n\") == \"2\\n\"\nassert solution(\"1\\n22\\n\") == \"4\\n\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2\", \"Output should be '2', but it is '3'\""
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n2 1 1 1 3\\n1\\n22\") == \"2\"\nassert solution(\"1\\n22\") == \"4\""
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n2 1 1 1 3\\n') == '2\\n'\nassert solution('1\\n22\\n') == '4\\n'"
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == expected_output\n\nsample_input = '5\\n2 1 1 1 3\\n'\nexpected_output = '2\\n'"
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n2 1 1 1 3\\n') == '2\\n'\nassert solution('1\\n22\\n') == '4\\n'"
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3 1 5\") == \"3\\n\"\nassert solution(\"4\\n1 2 3 4\") == \"2\\n\""
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == 3, \"Output should be 3\"\nassert solution(sample_input_2) == 2, \"Output should be 2\""
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n3 1 5\\n') == '3\\n'\nassert solution('4\\n1 2 3 4\\n') == '2\\n'"
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"3\"\n"
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == solution(stdin)\nassert solution(stdin) == solution(stdin)\nassert solution(stdin) == solution(stdin)\nassert solution(stdin) == solution(stdin)\nassert solution(stdin) == solution(stdin)"
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1 5\\n4 1 2 3 4\\n\") == \"3\\n\""
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n3 1 5') == '3\\n', 'Test case 1 failed'\nassert solution('4\\n1 2 3 4') == '2\\n', 'Test case 2 failed'\nassert solution('3\\n3 2 6') == '0\\n', 'Test case 3 failed'\nassert solution('3\\n1 2 3 4') == '3\\n', 'Test case 4 failed'\nassert solution('2\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1') == '3\\n', 'Test case 5 failed'"
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 3\nassert solution(4) == 2"
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n3 1 5\\n4\\n1 2 3 4\") == \"3\\n\"\nassert solution(\"4\\n1 2 3 4\") == \"2\\n\""
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"3\\n\"\nassert solution(stdin) == \"2\\n\""
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"a+b-c\\na-b+d-c\") == [\"- +d-\", \"<any> <empty>\"]\nassert solution(\"knuth-morris-pratt\\knuthmorrispratt\") == [\"<any> <empty>\"]\nprint(\"All tests passed!\")"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"a+b-c\\na-b+d-c\\n\") == \"\"\"- +d-\"\"\"\nassert solution(\"knuth-morris-pratt\\nknuthmorrispratt\\n\") == \"\"\"<any> <empty>\"\"\""
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('a+b-c\\na-b+d-c') == '- +d-'\nassert solution('knuth-morris-pratt\\knuthmorrispratt') == '<any> <empty>'"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, \"Incorrect solution. Expected: {}, Received: {}\".format(expected_output, solution(input()))"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('a+b-c\\na-b+d-c') == '- - +d-'\nassert solution('knuth-morris-pratt\\knuthmorrispratt') == '<empty> <empty>'"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('a+b-c\\na-b+d-c') == ['- +d-']\nassert solution('knuth-morris-pratt\\knuthmorrispratt') == ['<any> <empty>']"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"a+b-c\") == \"- -\"\nassert solution(\"a-b+d-c\") == \"+ +\"\nassert solution(\"knuth-morris-pratt\") == \"def\"\nassert solution(\"knuthmorrispratt\") == \"def\"\nassert solution(\"\") == \"<empty>\"\nassert solution(\"any\") == \"<any>\"\nassert solution(\"Corrupted\") == \"Corrupted\""
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    a+b-c\n    a-b+d-c\n    \"\"\"\n) == \"\"\"\n- +d-\n\"\"\"\n\nassert solution(\n    \"\"\"\n    knuth-morris-pratt\n    knuthmorrispratt\n    \"\"\"\n) == \"\"\"\n<any> <empty>\n\"\"\"\n\nassert solution(\n    \"\"\"\n    abc\n    \"\"\"\n) == \"\"\"\n<empty>\n<empty>\n\"\"\"\n\nassert solution(\n    \"\"\"\n    a1b2c3\n    a-b-c\n    \"\"\"\n) == \"\"\"\n<any> <empty>\n<any> <empty>\n\"\"\"\n\nassert solution(\n    \"\"\"\n    hello world\n    \"\"\"\n) == \"\"\"\n<any> <empty>\n\"\"\"\n\nassert solution(\n    \"\"\"\n    a+b-c\n    a-b+d-c\n    d-e+f\n    \"\"\"\n) == \"\"\"\n<any> +f\n<any> -e\n\"\"\"\n\nassert solution(\n    \"\"\"\n    a+b-c\n    a-b+d-c\n    \"\"\"\n) == \"\"\"\n<any> +d-\n<any> -b+\n\"\"\"\n\nassert solution(\n    \"\"\"\n    abc\n    \"\"\"\n) == \"\"\"\n<empty>\n<empty>\n\"\"\"\n\nassert solution(\n    \"\"\"\n    a1b2c3\n    a-b-c\n    \"\"\"\n) == \"\"\"\n<any> <empty>\n<any> <empty>\n\"\"\"\n\nassert solution(\n    \"\"\"\n    hello world\n    \"\"\"\n) == \"\"\"\n<any> <empty>\n\"\"\"\n\nassert solution(\n    \"\"\"\n    a+b-c\n    a-b+d-c\n    d-e+f\n    \"\"\"\n) == \"\"\"\n<any> +f\n<any> -e\n\"\"\""
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('a+b-c') == '- +d-', \"Test failed\"\nassert solution('a-b+d-c') == '+d -', \"Test failed\"\nassert solution('knuth-morris-pratt') == '<empty>', \"Test failed\"\nassert solution('knuthmorrispratt') == '<any>', \"Test failed\"\n\nclass Solution:\n    def find_valid_encoding(self, I, O):\n        if not I or not O:\n            return 'empty'\n\n        a, b = I[0], O[0]\n        if a in '+-' or b in '+-' or a == '-' or b == '-':\n            return None\n\n        if not I[1].isalpha():\n            return None\n\n        if not O[1].isalpha():\n            return None\n\n        if I[1]!= O[1]:\n            return None\n\n        for char in I[1:] + O[1:]:\n            if char in '+-' or char in '0123456789':\n                continue\n            return None\n\n        return a + b"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('a+b-c\\na-b+d-c') == ['- +d-', '<any> <empty>']\nassert solution('knuth-morris-pratt\\knuthmorrispratt') == ['<any> <empty>']"
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1\\n0\\n7\\nt 0\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\nSample Output 1: 0\\n1\\n3\\n2\\n3\\n5\\n3\\n\") == \"0\\n1\\n3\\n2\\n3\\n5\\n3\\n\"\nassert solution(\"3 0\\n2 6 6\\n10\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\nt 7\\nt 8\\nt 9\\nt 10\\nSample Output 2: 11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\\n\") == \"11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\\n\""
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1\\n0\\n7\\nt 0\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\") == \"0\\n1\\n3\\n2\\n3\\n5\\n3\\n\"\nassert solution(\"3 0\\n2 6 6\\n10\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\nt 7\\nt 8\\nt 9\\nt 10\") == \"11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\""
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(r'''\n1 1\n0\n7\nt 0\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\n''') == '0\\n1\\n3\\n2\\n3\\n5\\n3\\n'\n\nassert solution(r'''\n3 0\n2 6 6\n10\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\nt 7\nt 8\nt 9\nt 10\n''') == '11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\\n'"
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2"
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 1\\n0\\n7\\nt 0\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\n\\n3\\n\\n5\\n\\n2\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\n\\n3\\n\\n5\\"
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, \"Test failed. Your solution is incorrect. Please check your code and output.\""
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"0\\n1\\n3\\n2\\n3\\n5\\n3\\n\", \"Incorrect output\"\n"
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1\\n0\\n7\\nt 0\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\") == \"0\\n1\\n3\\n2\\n3\\n5\\n3\\n\"\nassert solution(\"3 0\\n2 6 6\\n10\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\nt 7\\nt 8\\nt 9\\nt 10\") == \"11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\\n\""
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input) == output, f\"Test failed for {input}, expected {output}, got {solution(input)}\"\n"
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"0\\n1\\n3\\n2\\n3\\n5\\n3\\n\", \"Incorrect output\""
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt').read()) == solution(open('input.txt').read())"
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected, f\"Expected output: {expected}, Received output: {solution(stdin)}\""
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '''\n2\n4 6\n'''"
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(r'''\n    7 8\n    1 2 2\n    1 3 1\n    1 4 3\n    2 6 1\n    2 7 2\n    3 5 1\n    4 7 2\n    5 7 1\n    ''') == '''\n    2\n    ''', 'Test 1 failed'"
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 8\\n1 2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1\\n\") == \"2\\n4 6\""
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n7 8\n1 2 2\n1 3 1\n1 4 3\n2 6 1\n2 7 2\n3 5 1\n4 7 2\n5 7 1\n''') == '''\n2\n4 6\n'''\n\nassert solution('''\n5 6\n1 2 2\n2 3 2\n3 5 2\n1 4 3\n4 5 3\n1 5 6\n''') == '''\n0\n'''"
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 8\\n1 2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1\") == [\"2\", \"4 6\"]\nassert solution(\"5 6\\n1 2 2\\n2 3 2\\n3 5 2\\n1 4 3\\n4 5 3\\n1 5 6\") == [\"0\"]"
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '''\n0\n'''"
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2\\n4 6\\n\""
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n1 1\\n1 2\\n1 3\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n2 6\\n\") == \"4\\n5\\n6\\n1\\n2\\n3\\n\"\nassert solution(\"2\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n\") == \"1\\n2\\n3\\n\"\nassert solution(\"3\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n\") == \"2\\n3\\n\"\n"
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == '4\\n5\\n6\\n1\\n2\\n3\\n'"
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution.__doc__ == \"\"\"\n\n\"\"\""
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"12\\n1 1\\n1 2\\n1 3\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n2 6\\n\") == \"\\n4\\n5\\n6\\n1\\n2\\n3\\n\"\nassert solution(\"6\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n\") == \"\\n1\\n2\\n3\\n\""
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"12\\n1 1\\n1 2\\n1 3\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n2 6\") == \"4\\n5\\n6\\n1\\n2\\n3\""
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == expected\n"
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"4\\n5\\n6\\n1\\n2\\n3\"\nassert solution() == \"1\\n2\\n3\""
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"\"\"\n4\n5\n6\n1\n2\n3\n\"\"\""
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Test failed. Expected: {output}, Received: {solution(input())}\""
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"CPCC\") == \"1\"\nassert solution(\"PPPPCCCC\") == \"8\""
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"CPCC\") == \"1\"\nassert solution(\"PPPPCCCC\") == \"8\""
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"CPCC\") == 1\nassert solution(\"PPPPCCCC\") == 8"
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"CPCC\") == \"1\", \"Test 1\"\nassert solution(\"PPPPCCCC\") == \"8\", \"Test 2\""
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"CPCC\") == 1\nassert solution(\"PPPPCCCC\") == 8"
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"CPCC\") == \"1\"\nassert solution(\"PPPPCCCC\") == \"8\""
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"CPCC\") == 1\nassert solution(\"PPPPCCCC\") == 8"
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"CPCC\") == 1\nassert solution(\"PPPPCCCC\") == 8"
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"CPCC\") == \"1\"\nassert solution(\"PPPPCCCC\") == \"8\""
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('CPCC') == 1\nassert solution('PPPPCCCC') == 8"
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('sample_input_1.txt', 'r')) == \"1 2 3\\n\"\nassert solution(open('sample_input_2.txt', 'r')) == \"3\\n\""
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1 2 3\", \"Test failed for solution.\"\nprint(\"Test passed for solution.\")"
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Expected {output}, but got {solution(input())}\"\n"
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"sherlock_holmes.txt\", \"r\").read()) == open(\"sherlock_holmes_output.txt\", \"r\").read().splitlines()"
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, but got {solution(input())}\"\n"
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == [3]"
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '1 2 3\\n'\n"
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"1 2 3\", \"Sample Output 1\""
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, but got {solution(input())}\"\n"
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n2 4 2 3 4\") == \"39\"\nassert solution(\"5 1\\n1 0 1 1 1\") == \"4\""
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n2 4 2 3 4\") == \"39\"\nassert solution(\"5 1\\n1 0 1 1 1\") == \"4\""
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n2 4 2 3 4\\n\") == \"39\"\nassert solution(\"5 1\\n1 0 1 1 1\\n\") == \"4\"\n"
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n2 4 2 3 4\\n\") == \"39\"\n\nassert solution(\"5 1\\n1 0 1 1 1\\n\") == \"4\""
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n2 4 2 3 4\") == \"39\", \"Please provide the correct input.\"\nassert solution(\"5 1\\n1 0 1 1 1\") == \"4\", \"Please provide the correct input.\""
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n2 4 2 3 4\") == \"39\\n\"\nassert solution(\"5 1\\n1 0 1 1 1\") == \"4\\n\""
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n2 4 2 3 4\") == \"39\"\nassert solution(\"5 1\\n1 0 1 1 1\") == \"4\""
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n    5 3\n    2 4 2 3 4\n    5 1\n    1 0 1 1 1\n    5 4\n    2 3 4 5\n    3 2\n    4 5\n    5 4\n    4 5\n    5 4\n    5 3\n    5 2\n    5 1\n    5 0\n    ''') == '39'"
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n2 4 2 3 4\\n\") == \"39\\n\"\nassert solution(\"5 1\\n1 0 1 1 1\\n\") == \"4\\n\""
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 3\\n2 4 2 3 4\\n') == '39'\nassert solution('5 1\\n1 0 1 1 1\\n') == '4'"
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(solution_input) == solution_output, f\"Test Case {test_case_number} Failed: Expected {solution_output}, got {solution(solution_input)}\""
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '1 1 2\\n2 3 1\\n'\n"
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\nxx.\\nxxx\\n...\"), \"The solution for Input 1 is incorrect.\"\nassert solution(\"4 6\\nxx....\\nxx.xxx\\n...xxx\\n...xxx\"), \"The solution for Input 2 is incorrect.\""
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2"
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\nxx.\\nxxx\\n...\") == \"1 1 2\\n2 3 1\"\nassert solution(\"4 6\\nxx....\\nx.xxx\\n...xxx\\n...xxx\") == \"1 1 2\\n2 4 3\"\n\nfrom typing import List"
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\nxx.\\nxxx\\n...\"), \"The solution is incorrect\"\nassert solution(\"4 6\\nxx....\\nxx.xxx\\n...xxx\\n...xxx\"), \"The solution is incorrect\"\nassert solution(\"3 3\\nxx.\\nxxx\\n...\\n3 3\\nxx.\\nxxx\\n...\"), \"The solution is incorrect\"\nassert solution(\"1 1 2\\n2 3 1\\n\"), \"The solution is incorrect\"\nassert solution(\"2 4 3\\n1 1 2\\n\"), \"The solution is incorrect\""
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''3 3\nxx.\nxxx\n...''') == '1 1 2\\n2 3 1'\n\nassert solution('''4 6\nxx....\nxx.xxx\n...xxx\n...xxx''') == '1 1 2\\n2 4 3\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution([3, 3, 'xx.', 'xxx', '...', 'xx....', 'xx.xxx', '...xxx', '...xxx'].split()) == '''1 1 2\n2 3 1\n'''"
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1 2\\n1 2 1\\n0 2 0\\n0 1 0\") == \"indistinguishable\"\nassert solution(\"2 0 1\\n1 1 1\\n0 0 0\") == \"0\""
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input1) == \"indistinguishable\"\nassert solution(input2) == \"0\""
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"indistinguishable\""
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"indistinguishable\"\n"
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 1 2\\n1 2 1\\n0 2 0\\n0 1 0') == 'indistinguishable'\nassert solution('2 0 1\\n1 1 1\\n0 0 0') == '0'"
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1 2\\n1 2 1\\n0 2 0\\n0 1 0\") == \"indistinguishable\"\nassert solution(\"2 0 1\\n1 1 1\\n0 0 0\") == \"0\""
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"indistinguishable\""
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"indistinguishable\" # check for correctness"
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"indistinguishable\"\nassert solution(stdin) == \"0\"\n"
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"indistinguishable\"\nassert solution(stdin) == \"indistinguishable\"\nassert solution(stdin) == \"0\""
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0110\\n1001\") == \"1111\\n0111\\n1110\\n1111\"\nassert solution(\"0\\n1\") == \"-1\""
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input1) == output1, f\"Test case 1 failed: {solution(input1)}!= {output1}\"\nassert solution(input2) == output2, f\"Test case 2 failed: {solution(input2)}!= {output2}\""
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('0110') == '1111\\n0111\\n1110\\n1111'\nassert solution('0') == '0\\n1\\n0\\n1'\nassert solution('101') == '-1'"
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('0110\\n1001\\n') == '1111\\n0111\\n1110\\n1111\\n'"
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('0110') == '1111'\nassert solution('1001') == '0111'\nassert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('01') == '11'\nassert solution('011') == '111'\nassert solution('0110100111') == '1111'\nassert solution('01100111') == '1110'\nassert solution('01101001') == '1111'\nassert solution('0111') == '1111'\nassert solution('01111111') == '1111'\nassert solution('011111111') == '1111'\nassert solution('0111111111111111') == '1111'"
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0110\") == \"1111\\n0111\\n1110\\n1111\"\nassert solution(\"0\") == \"-1\""
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0110\\n1001\") == \"1111\\n0111\\n1110\\n1111\"\nassert solution(\"0\\n1\") == \"-1\""
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('0110\\n1001') == '1111\\n0111\\n1110\\n1111\\n'\nassert solution('0\\n1') == '-1'\n"
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0110\\n1001\") == \"1111\\n0111\\n1110\\n1111\"\nassert solution(\"0\\n1\") == \"-1\"\n"
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10000\") == \"+0000\"\nassert solution(\"1111\") == \"+000-\""
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10000\") == \"+0000\", \"The output is incorrect.\"\nassert solution(\"1111\") == \"+000-\", \"The output is incorrect.\""
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10000\") == \"+0000\"\nassert solution(\"1111\") == \"+000-\"\n"
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('10000') == '+0000'\nassert solution('1111') == '+000-'\n\nfrom typing import List"
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10000\") == \"+0000\"\nassert solution(\"1111\") == \"+000-\""
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10000\") == \"+0000\"\nassert solution(\"1111\") == \"+000-\""
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10000\") == \"+0000\\n\"\nassert solution(\"1111\") == \"+000-\\n\""
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(10000) == '+0000'\nassert solution(1111) == '+000-'"
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10000\") == \"+0000\"\nassert solution(\"1111\") == \"+000-\""
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 8 3 2\\n1 2\\n7 3 4\\n5 6\\n1 3 2\\n1 4 1\\n1 5 1\\n1 6 6\\n2 3 9\\n2 4 2\\n2 6 4\\n7 6 5\") == \"9\\n\"\nassert solution(\"2 1 1 1\\n2 2\\n1\\n1\\n1 2 1\") == \"2\\n\""
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('7 8 3 2\\n1 2\\n7 3 4\\n5 6\\n1 3 2\\n1 4 1\\n1 5 1\\n1 6 6\\n2 3 9\\n2 4 2\\n2 6 4\\n7 6 5\\n') == '9'"
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('10 8 3 2\\n1 2\\n7 3 4\\n5 6\\n1 3 2\\n1 4 1\\n1 5 1\\n1 6 6\\n2 3 9\\n2 4 2\\n2 6 4\\n7 6 5\\n') == '9'\nassert solution('2 1 1 1\\n2 2\\n1\\n1\\n1 2 1\\n') == '2'"
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 8 3 2\\n1 2\\n7 3 4\\n5 6\\n1 3 2\\n1 4 1\\n1 5 1\\n1 6 6\\n2 3 9\\n2 4 2\\n2 6 4\\n7 6 5\") == \"9\\n\", \"Incorrect output\""
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"9\", \"Your solution is incorrect\""
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 8 3 2\\n1 2\\n7 3 4\\n5 6\\n1 3 2\\n1 4 1\\n1 5 1\\n1 6 6\\n2 3 9\\n2 4 2\\n2 6 4\\n7 6 5\") == \"9\"\nassert solution(\"2 1 1 1\\n2 2\\n1\\n1\\n1 2 1\") == \"2\""
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 8 3 2\\n1 2\\n7 3 4\\n5 6\\n1 3 2\\n1 4 1\\n1 5 1\\n1 6 6\\n2 3 9\\n2 4 2\\n2 6 4\\n7 6 5\\n\") == 9\nassert solution(\"2 1 1 1\\n2 2\\n1\\n1\\n1 2 1\\n\") == 2"
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 8 3 2\\n1 2\\n7 3 4\\n5 6\\n1 3 2\\n1 4 1\\n1 5 1\\n1 6 6\\n2 3 9\\n2 4 2\\n2 6 4\\n7 6 5\") == \"9\\n\"\nassert solution(\"2 1 1 1\\n2 2\\n1\\n1\\n1 2 1\") == \"2\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    7 8 3 2\n    1 2\n    7 3 4\n    5 6\n    1 3 2\n    1 4 1\n    1 5 1\n    1 6 6\n    2 3 9\n    2 4 2\n    2 6 4\n    7 6 5\n    \"\"\"\n) == \"9\\n\"\n\nassert solution(\n    \"\"\"\n    2 1 1 1\n    2 2\n    \"\"\"\n) == \"2\\n\""
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 3 1\\n2 2\\n1 1 R\\n010\\n000\\n000') == '2'\nassert solution('3 4 2\\n2 2\\n3 4 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301') == '7'\n\nprint('All test cases passed')"
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3 1\\n2 2\\n1 1 R\\n010\\n000\\n000\") == 2\nassert solution(\"3 4 2\\n2 2\\n3 4 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301\") == 7"
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3 1\\n2 2\\n1 1 R\\n010\\n000\\n000\") == 2\nassert solution(\"3 4 2\\n2 2\\n3 4 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301\") == 7"
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == \"2\"\nassert solution(sample_input2) == \"7\""
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2\""
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3 1\\n2 2\\n1 1 R\\n010\\n000\\n000\") == \"2\\n\"\nassert solution(\"3 4 2\\n2 2\\n3 4 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301\") == \"7\\n\"\nassert solution(\"3 3 2\\n2 2\\n3 4 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301\") == \"-1\\n\""
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3 1\\n2 2\\n1 1 R\\n010\\n000\\n000\") == \"2\"\nassert solution(\"3 4 2\\n2 2\\n3 4 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301\") == \"7\""
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('test_input.txt', 'r').read()) == '2\\n'\nassert solution(open('test_input2.txt', 'r').read()) == '7\\n'"
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"day2_example1.txt\", \"r\")) == \"2\"\nassert solution(open(\"day2_example2.txt\", \"r\")) == \"7\""
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input1) == 2, \"Incorrect Output 1\"\nassert solution(input2) == 7, \"Incorrect Output 2\""
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt').read()) == \"2\\n\"\nassert solution(open('input2.txt').read()) == \"4\\n\""
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_1) == output_1, f\"Test case 1 failed: {solution(input_1)}!= {output_1}\"\nassert solution(input_2) == output_2, f\"Test case 2 failed: {solution(input_2)}!= {output_2}\""
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\n2 2 1 2 3\\n') == '2\\n'\nassert solution('8\\n1 2 4 1 1 2 5 1\\n') == '4\\n'\n"
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"2\\n\", \"Sample Input 1 is incorrect\"\nassert solution(stdin) == \"4\\n\", \"Sample Input 2 is incorrect\""
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n2 2 1 2 3\") == \"2\\n\"\nassert solution(\"8\\n1 2 4 1 1 2 5 1\") == \"4\\n\"\n"
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2\\n\", \"Test case 1\"\nassert solution(input()) == \"4\\n\", \"Test case 2\""
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"4\""
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed. Expected output: {expected_output}, Actual output: {solution(input())}\""
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2 2 1 2 3\\n\") == \"2\\n\"\nassert solution(\"8\\n1 2 4 1 1 2 5 1\\n\") == \"4\\n\""
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2 1 2 3\") == \"2\", \"Sample Input 1 failed\"\nassert solution(\"8 1 2 4 1 1 2 5 1\") == \"4\", \"Sample Input 2 failed\""
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input1) == expected_output1, f\"Expected Output: {expected_output1}\\nGot Output: {solution(sample_input1)}\"\n\nassert solution(sample_input2) == expected_output2, f\"Expected Output: {expected_output2}\\nGot Output: {solution(sample_input2)}\""
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\nD 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3\\n\") == \"NE\\nNE\\nNE\\n\""
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"D 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3\") == \"NE\\nNE\\nNE\"\nassert solution(\"D 8 8\\nD 2 4\\nD 5 6\\nP 2\\nD 6 2\\nP 4\") == \"3\\n1\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"6\\nD 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3\\n\") == \"NE\\nNE\\nNE\\n3\\n1\\n\""
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == output\n"
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\nD 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3\\n\") == \"NE\\nNE\\nNE\\n3\\n1\\n\""
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Test failed for {input()}, expected {output}, got {solution(input())}\"\nfor case in range(1, T+1):\n    input_ = input()\n    output = output[case-1]\n    assert solution(input_) == output, f\"Test failed for case {case}, expected {output}, got {solution(input_)} on case {case}\""
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('6\\nD 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3\\n') == ['NE', 'NE', 'NE', '3', '1', '1']\nassert solution('6\\nD 8 8\\nD 2 4\\nD 5 6\\nP 2\\nP 4\\n') == ['3', '1', 'def solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n']"
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=input()) == 'NE\\nNE\\nNE\\n'\nassert solution(stdin=input()) == '3\\n1\\n'"
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2 1 10\\n0 0\\n1 4\\n3 2\") == 2\nassert solution(\"2 3 5 6\\n1 1\\n1 1 6\\n1 2 2\") == 5"
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=input()) == output, f\"Test case failed. Expected: {output}, Received: {solution(stdin=input())}\""
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"2 2 1 10\n0 0\n1 4\n3 2\"\"\") == 2\n\nassert solution(\"\"\"2 3 5 6\n1 1\n1 1 6\n1 2 2\"\"\") == 5"
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert \"assert solution == \" in solution"
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2 1 10\\n0 0\\n1 4\\n3 2\") == \"2\\n\"\nassert solution(\"2 3 5 6\\n1 1\\n1 1 6\\n1 2 2\") == \"5\\n\""
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n2 2 1 10\n0 0\n1 4\n3 2\n''') == '2\\n'\nassert solution('''\n2 3 5 6\n1 1\n1 1 6\n1 2 2\n''') == '5\\n'"
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2 1 10\\n0 0\\n1 4\\n3 2\") == \"2\\n\"\nassert solution(\"2 3 5 6\\n1 1\\n1 1 6\\n1 2 2\") == \"5\\n\""
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 2, \"Solution not correct\""
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2 1 10\\n0 0\\n1 4\\n3 2\") == \"2\"\nassert solution(\"2 3 5 6\\n1 1\\n1 1 6\\n1 2 2\") == \"5\""
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2 1 10\\n0 0\\n1 4\\n3 2\\n\") == \"2\"\nassert solution(\"2 3 5 6\\n1 1\\n1 1 6\\n1 2 2\\n\") == \"5\""
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1.0 0.0 1.4\\n-1.0 0.0 -1.4\\n0.0 1.0 -0.2\") == 2.0\nassert solution(\"5\\n1.4 1.0 0.0\\n-0.4 -1.0 0.0\\n-0.1 -0.25 -0.5\\n-1.2 0.0 0.9\\n0.2 0.5 0.5\") == 2.0\n"
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected_output, f\"Incorrect output: {solution(stdin)}!= {expected_output}\""
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 2.0\nassert solution(5) == 2.0"
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == '2.0000000000'\nassert solution(2) == '2.0000000000'"
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n1.0 0.0 1.4\\n-1.0 0.0 -1.4\\n0.0 1.0 -0.2') == '2.0000000000'\nassert solution('5\\n1.4 1.0 0.0\\n-0.4 -1.0 0.0\\n-0.1 -0.25 -0.5\\n-1.2 0.0 0.9\\n0.2 0.5 0.5') == '2.0000000000'"
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1.0 0.0 1.4\\n-1.0 0.0 -1.4\\n0.0 1.0 -0.2\") == \"2.0000000000\"\nassert solution(\"1.4 1.0 0.0\\n-0.4 -1.0 0.0\\n-0.1 -0.25 -0.5\\n-1.2 0.0 0.9\\n0.2 0.5 0.5\") == \"2.0000000000\""
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt').read()) == '2.0000000000\\n', \"Expected: 2.0000000000\\nActual: \" + solution(open('input.txt').read())\n"
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"2.0000000000\", \"Incorrect answer\""
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution, \"Function not defined\"\n\nfrom bisect import bisect_left"
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2.0000000000\"\n"
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 9 5') == '1\\n5\\n'\nassert solution('1 100 10') == '9\\n19\\n'"
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"1\\n5\\n\", \"Bo\u017eo is a strange little boy. Every day he tires his friends with strange questions. Today\u2019s question is: how many integers in the interval [A, B] are there such that the sum of their digits is S, and which is the smallest such number?\\n\""
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 9 5\") == \"1\\n5\"\nassert solution(\"1 100 10\") == \"9\\n19\""
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 9 5\") == \"1\\n5\\n\", \"Your solution is incorrect.\"\nassert solution(\"1 100 10\") == \"9\\n19\\n\", \"Your solution is incorrect.\""
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 9 5\") == \"1\\n5\"\nassert solution(\"1 100 10\") == \"9\\n19\""
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 9 5\") == \"1\\n5\", \"Solution 1\"\nassert solution(\"1 100 10\") == \"9\\n19\", \"Solution 2\""
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 9 5\") == \"1\\n5\\n\", \"Test 1 failed\"\nassert solution(\"1 100 10\") == \"9\\n19\\n\", \"Test 2 failed\""
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 9 5\\n1 100 10\") == \"1\\n9\\n19\""
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 9 5\") == \"1\\n5\"\nassert solution(\"1 100 10\") == \"9\\n19\""
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 9 5\\n1 100 10\") == \"1\\n9\\n19\"\nassert solution(\"2 2 2\\n3 3 3\") == \"2\\n2\"\nassert solution(\"1 2 3\\n2 4 5\") == \"2\\n3\"\nassert solution(\"5 100 10\\n2 2 2\") == \"2\\n3\"\nassert solution(\"100 100 100\") == \"99\"\nassert solution(\"1 1 1\\n1 1 1\") == \"1\\n1\""
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 1\\n1\\n1\\n') == '1\\n1\\n'\nassert solution('4 5\\n4 1 2 4 4\\n4 3 2 1\\n') == '7\\n4 4 2 4 4 1 4\\n'"
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1\\n1\\n1\\n\") == \"1\\n1\\n\"\nassert solution(\"4 5\\n4 1 2 4 4\\n4 3 2 1\\n\") == \"7\\n4 4 2 4 4 1 4\""
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''1 1\n1\n1''') == '1\\n1'\nassert solution('''4 5\n4 1 2 4 4\n4 3 2 1''') == '7\\n4 4 2 4 4 1 4'"
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1\\n1\\n1\\n\") == \"1\\n1 \"\nassert solution(\"4 5\\n4 1 2 4 4\\n4 3 2 1\\n\") == \"7\\n4 4 2 4 4 1 4\""
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1\\n1\\n1\") == \"1\\n1\"\nassert solution(\"4 5\\n4 1 2 4 4\\n4 3 2 1\") == \"7\\n4 4 2 4 4 1 4\""
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 1\\n1\\n1\\n') == '1\\n1\\n'\nassert solution('4 5\\n4 1 2 4 4\\n4 3 2 1\\n') == '7\\n4 4 2 4 4 1 4\\n'"
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '1\\n1\\n1'\nassert solution(stdin) == '7\\n4 4 2 4 4 1 4'"
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 1\\n1\\n1') == '1\\n1\\n'\nassert solution('4 5\\n4 1 2 4 4\\n4 3 2 1') == '7\\n4 4 2 4 4 1 4\\n'\nassert solution('1 1\\n1\\n2') == '1\\n1\\n'\nassert solution('4 5\\n4 1 2 4 4\\n4 3 2 1\\n5 3 4 5') == '7\\n4 4 2 4 4 1 4\\n5 5 1 5 5\\n'"
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\\n1\\n1\\n\") == \"1\\n1 \"\nassert solution(\"4 5\\n4 1 2 4 4\\n4 3 2 1\\n\") == \"7\\n4 4 2 4 4 1 4\""
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 10 3 2\\n') == '4\\n'\nassert solution('10 10 5 0\\n') == '10\\n'\n"
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == output, \"The output does not match the expected output.\\nExpected output: {}\\nGot output: {}\\n\".format(output, solution(stdin))"
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 10 3 2\\n10 10 5 0\") == \"4\\n\"\nassert solution(\"2 20 5 0\") == \"0\\n\"\nassert solution(\"10 10 5 0\") == \"10\\n\"\n"
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected, f\"The function should return {expected}, but it returned {solution(stdin)}\"\nfor stdin, expected in test_data:\n    assert solution(stdin) == expected, f\"Test case {stdin} should return {expected}, but it returned {solution(stdin)}\"\n"
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\"\n"
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == output, f\"Test case {test_case} failed: Expected output: {output}, but got: {solution(stdin)}\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 10 3 2\\n10 10 5 0') == '4\\n'\nassert solution('10 10 5 0') == '10\\n'"
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r')) == expected\n"
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=None) == 'Output', 'Your solution is incorrect.'"
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 10  # sample output"
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 1 20\\n0123456789') == 10\nassert solution('6 100 9294\\n23689') == 111"
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1 20\") == \"10\", \"Test 1 failed\"\nassert solution(\"6 100 9294\") == \"111\", \"Test 2 failed\""
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1 20\\n0123456789\") == \"10\"\nassert solution(\"6 100 9294\\n23689\") == \"111\"\n\nfrom typing import List"
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1 20\\n0123456789\") == 10\nassert solution(\"6 100 9294\\n23689\") == 111"
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"10\""
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 1 20\\n0123456789\\n') == '10'\nassert solution('6 100 9294\\n23689\\n') == '111'"
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1 20\\n0123456789\") == \"10\\n\"\nassert solution(\"6 100 9294\\n23689\") == \"111\\n\""
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1 20\\n0123456789\") == \"10\"\nassert solution(\"6 100 9294\\n23689\") == \"111\"\n"
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1 20\\n0123456789\\n\") == \"10\"\nassert solution(\"6 100 9294\\n23689\\n\") == \"111\""
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1.500000 2.666667\"\nassert solution() == \"1.500000 3.666667\""
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\\n\") == \"1.500000 2.666667\\n\"\nassert solution(\"5 2\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\\n\") == \"1.500000 3.666667\\n\""
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\") == \"1.5 2.67\""
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Test case {t + 1} failed: {solution(stdin)}!= {expected}\" for t, (stdin, expected) in enumerate(tests)"
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 1.500000, \"The correct answer is: 1.500000\""
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\\n\") == \"1.500000 2.666667\\n\"\nassert solution(\"5 2\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\\n\") == \"1.500000 3.666667\\n\""
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1.500000 2.666667\""
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\") == \"1.5 2.6\"\nassert solution(\"5 2\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\") == \"1.5 3.6\""
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"sample_input.txt\", \"r\").read()) == \"1.500000 2.666667\"\nassert solution(open(\"sample_input.txt\", \"r\").read()) == \"1.500000 3.666667\""
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 6\\n101010\\n111001\\n101001\") == 3\nassert solution(\"4 5\\n10010\\n01010\\n10101\\n01001\") == 3"
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Incorrect output for example 1. Expected: {expected}, Received: {solution(input())}\"\nassert solution(input()) == expected, f\"Incorrect output for example 2. Expected: {expected}, Received: {solution(input())}\""
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input_sample_1.txt\", \"r\").read()) == \"3\\n\"\nassert solution(open(\"input_sample_2.txt\", \"r\").read()) == \"3\\n\""
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 6\\n101010\\n111001\\n101001\\n\") == \"3\"\nassert solution(\"4 5\\n10010\\n01010\\n10101\\n01001\\n\") == \"3\"\nassert solution(\"1 2 3\\n0\\n0\\n1\\n\") == \"-1\"\nassert solution(\"1 0 0\\n0 0 1\\n1 0 0\\n\") == \"-1\"\nassert solution(\"1 0\\n0 1\\n0 1\\n\") == \"-1\"\nassert solution(\"1 0\\n1 1\\n1 1\\n\") == \"-1\"\nassert solution(\"1 0\\n1 1\\n0 0\\n1 1\\n\") == \"-1\""
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''3 6\n101010\n111001\n101001\n''') == 3\n\nassert solution('''4 5\n10010\n01010\n10101\n01001\n''') == 3\n\nassert solution('''3 6\n
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 6\\n101010\\n111001\\n101001\\n\") == \"3\"\nassert solution(\"4 5\\n10010\\n01010\\n10101\\n01001\\n\") == \"3\""
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '3', 'The solution is not correct'\nprint(\"The solution is correct\")"
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 6\\n101010\\n111001\\n101001\\n') == '3\\n'\nassert solution('4 5\\n10010\\n01010\\n10101\\n01001\\n') == '3\\n'\nassert solution('') == '-1\\n'"
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input) == output, f\"Test case failed: {input}!= {output}\"\n"
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n0 0\\n0 1\\n1 0\\n0 -1\\n-1 0\") == '-3 -1\\n3 1'"
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"Output\\n3 -1\\n3 4\\n\", \"Test case 1 failed\""
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '3 4', \"Expected output '3 4', got: \" + solution(input())\nassert solution(input()) == '3 -1', \"Expected output '3 -1', got: \" + solution(input())"
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '3 -1\\n3 1', \"Incorrect output for solution 1\"\n\nassert solution() == '-3 -1\\n-3 1', \"Incorrect output for solution 2\""
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n0 0\\n0 1\\n1 0\\n0 -1\\n-1 0\") == \"-3 -1\\n3 1\\n\"\nassert solution(\"4\\n2 4\\n6 -1\\n3 5\\n-1 -1\") == \"3 4\\n3 -1\\n\"\n"
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('test_case1.txt', 'r')) == '-3 -1\\n3 1'\nassert solution(open('test_case2.txt', 'r')) == '3 4\\n3 -1'"
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n2 4\\n6 -1\\n3 5\\n-1 -1') == '-3 -1\\n3 4\\n3 -1'\nassert solution('5\\n0 0\\n0 1\\n1 0\\n0 -1\\n-1 0') == '-3 -1\\n3 4\\n3 -1'\nassert solution('4\\n0 0\\n0 1\\n1 0\\n0 -1\\n-1 0') == '0 0\\n1 1\\n1 0'\nassert solution('5\\n0 0\\n0 1\\n1 0\\n0 -1\\n-1 0') == '0 0\\n1 1\\n1 0'"
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n0 0\\n0 1\\n1 0\\n0 -1\\n-1 0\") == \"-3 -1\\n3 1\"\nassert solution(\"4\\n2 4\\n6 -1\\n3 5\\n-1 -1\") == \"3 4\\n3 -1\""
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"3 4\\n3 -1\\n\"\n"
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''5\n0 0\n0 1\n1 0\n0 -1\n-1 0''') == '-3 -1\\n3 1\\n'\n\nassert solution('''4\n2 4\n6 -1\n3 5\n-1 -1''') == '3 4\\n3 -1\\n'"
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 6 5 45 20\\n0 0\\n2 0\\n1 1.5\") == \"2 5.086781\"\nassert solution(\"3 0.25 2 45 20\\n0 0\\n2 0\\n1 1.5\") == \"1 12.715255\""
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 6 5 45 20\\n0 0\\n2 0\\n1 1.5\\n\") == \"2 5.086781\"\nassert solution(\"3 0.25 2 45 20\\n0 0\\n2 0\\n1 1.5\\n\") == \"1 12.715255\""
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()\nprint(\"Test Passed\")"
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 6 5 45 20\\n0 0\\n2 0\\n1 1.5\\n') == '2 5.086781'\nassert solution('3 0.25 2 45 20\\n0 0\\n2 0\\n1 1.5\\n') == '1 12.715255'"
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 6 5 45 20\\n0 0\\n2 0\\n1 1.5\\n\") == \"2 5.086781\"\nassert solution(\"3 0.25 2 45 20\\n0 0\\n2 0\\n1 1.5\\n\") == \"1 12.715255\""
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_str) == output_str, \"Test Case Failed\""
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 6 5 45 20\\n0 0\\n2 0\\n1 1.5\") == \"2 5.086781\"\nassert solution(\"3 0.25 2 45 20\\n0 0\\n2 0\\n1 1.5\") == \"1 12.715255\""
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 6 5 45 20\\n0 0\\n2 0\\n1 1.5\\n\") == \"2 5.086781\\n\"\nassert solution(\"3 0.25 2 45 20\\n0 0\\n2 0\\n1 1.5\\n\") == \"1 12.715255\\n\"\nassert solution(\"1 1.5\\n\") == \"1 1.5\\n\"\nassert solution(\"\") == \"\"\nassert solution(\"3 6 5 45 20\\n0 0\\n2 0\\n1 1.5\\n\\n1 1.5\\n\\n\") == \"2 5.086781\\n1 12.715255\\n\""
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 6 5 45 20\\n0 0\\n2 0\\n1 1.5') == '2 5.086781'\nassert solution('3 0.25 2 45 20\\n0 0\\n2 0\\n1 1.5') == '1 12.715255'"
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\") == 8, \"Test 1 failed\"\nassert solution(\"0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\") == 1, \"Test 2 failed\""
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"8\\n\""
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\\n') == '8'\nassert solution('0\\n1\\n2\\n3\\n4\\n') == '1'"
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\\n') == 8\nassert solution('0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\\n') == 1\n\nfrom typing import List"
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=sample_input_1) == 8\nassert solution(stdin=sample_input_2) == 1"
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\") == 8\n\nassert solution(\"4\\n5 1 7 1\\n1 1 5 1\\n4 0 4 4\\n7 0 3 4\") == 1"
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input1) == output1, \"Test 1 failed\"\nassert solution(input2) == output2, \"Test 2 failed\""
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test {i+1} failed!\"\n"
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\\n\") == \"8\"\nassert solution(\"0\\n5 1 7 1\\n1 1 5 1\\n4 0 4 4\\n7 0 3 4\\n8 0 2 3\\n\") == \"1\""
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''6\n0 0 1 0\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1''') == 8\n\nassert solution('''4\n5 1 7 1\n1 1 5 1\n4 0 4 4\n7 0 3 4''') == 1"
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(7) == '4 3'\nassert solution(10) == 'impossible'"
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"impossible\"\nassert solution(stdin='10') == \"impossible\"\nassert solution(stdin='7') == \"4 3\""
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(7) == (4, 3)\nassert solution(10) == (\"impossible\", )"
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"4 3\\n\", \"Please provide two non-negative integers m and k in the format of m m. If there is only one valid solution, print it as output.\"\n\nimport math"
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=input()) == expected, f\"Test failed: expected '{expected}', got '{solution(stdin=input())}'\"\n"
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(5) == (4, 3)\nassert solution(10) == \"impossible\""
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output() for input_, output in [\n    ([7], '4 3'),\n    ([10], 'impossible'),\n]"
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\") == \"4 3\"\nassert solution(\"10\") == \"impossible\""
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == \"4 3\"\nassert solution(7) == \"4 3\"\nassert solution(10) == \"impossible\""
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7\") == \"4 3\"\nassert solution(\"10\") == \"impossible\""
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin='2\\n1\\n3\\n2\\n4\\n1\\n4') == '16', \"Mirko got an array of integers for his birthday from his grandmother Norma. As any other kid, he was hoping for some money, but got an array. Luckily, in his town there is a pawn shop that buys up arrays. The cost of an array of integers is $\\min \\cdot \\max \\cdot L$ kunas, where $\\min $ is the minimal integer in the array, $\\max $ is the maximal and $L$ is the array length. Mirko is going to sell a subsequence of consecutive numbers from his array. He calculated the average price of all such subsequences. Mirko wants to sell the last 9 digits of the sum of all prices.\"\n\nassert solution(stdin='4\\n2\\n4\\n1\\n4') == '109', \"Mirko got an array of integers for his birthday from his grandmother Norma. As any other kid, he was hoping for some money, but got an array. Luckily, in his town there is a pawn shop that buys up arrays. The cost of an array of integers is $\\min \\cdot \\max \\cdot L$ kunas, where $\\min $ is the minimal integer in the array, $\\max $ is the maximal and $L$ is the array length. Mirko is going to sell a subsequence of consecutive numbers from his array. He calculated the average price of all such subsequences. Mirko wants to sell the last 9 digits of the sum of all prices.\""
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"16\""
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"16\\n\""
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"109\""
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected_output, f\"Solution does not match the expected output. Expected: {expected_output}, Received: {solution(stdin)}\""
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 109"
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"109\", \"Incorrect output\"\n"
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution([2,1,3]) == \"16\"\nassert solution([4,2,4,1]) == \"109\""
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"109\", \"Test Failed\" # Expected Output: 109"
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '109\\n'"
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n5 3\\n1 3\\n2 3\\n4 1\\n\") == \"5\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1\\n3 1 0\"\nassert solution(\"5 3\\n5 3\\n1 2\\n1 2\\n1 2\\n\") == \"5\\n1 2 1\\n1 2 2\\n1 2 2\\n\"\nassert solution(\"5 3\\n5 3\\n1 1\\n1 2\\n2 2\\n\") == \"5\\n1 1 1\\n2 2 2\\n2 2 2\\n\"\nassert solution(\"5 3\\n5 3\\n1 2\\n2 2\\n3 2\\n\") == \"5\\n1 2 1\\n2 2 2\\n3 2 1\\n\"\nassert solution(\"5 3\\n5 3\\n1 3\\n2 3\\n4 3\\n\") == \"5\\n1 3 1\\n2 3 2\\n4 3 1\\n2 4 1\\n3 3 1\\n\"\nassert solution(\"5 3\\n5 3\\n1 4\\n2 4\\n3 4\\n4 4\\n\") == \"5\\n1 4 1\\n2 4 2\\n3 4 1\\n4 4 1\\n2 3 1\\n3 4 1\\n\""
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == \"3\\n1 2 1\\n1 2 2\\n1 2 2\"\nassert solution(2) == \"5\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1\\n3 1 0\""
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"3\"\n"
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\n5 1\\n1 2\\n1 2\\n1 2\") == \"3\\n1 2 1\\n1 2 2\\n1 2 2\"\nassert solution(\"4 3\\n5 3 1 1\\n1 3\\n2 3\\n4 1\") == \"5\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1\\n3 1 0\"\n"
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(solution_input) == solution_output, f\"Solution ({solution_input}) should be {solution_output}, but got {solution(solution_input)}\""
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input) == expected, f\"Test failed for {solution(input)}\"\nprint(f\"Test passed for {solution(input)}\")"
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Input:\\n{input()}\\nOutput:\\n{output()}\""
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"2 3\\n5 1\\n1 2\\n1 2\\n1 2\"\n) == \"3\\n1 2 1\\n1 2 2\\n1 2 2\"\n\nassert solution(\n    \"4 3\\n5 3 1 1\\n1 3\\n2 3\\n4 1\"\n) == \"5\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1\\n3 1 0\""
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"3\\n1 2 1\\n1 2 2\\n1 2 2\"\n"
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 3\\n5 1\\n1 2\\n1 2\\n1 2\\n') == '3\\n1 2 1\\n1 2 2\\n1 2 2'\nassert solution('4 3\\n5 3 1 1\\n1 3\\n2 3\\n4 1\\n') == '5\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1\\n3 1 0'\n"
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, but got {solution(stdin)}\""
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n6 7\\n0 1 1\\n0 2 2\\n1 1 3\\n2 1 2\\n2 2 1\\n3 2 3\\n4 2 1\") == \"1 2\"\nassert solution(\"2 1\\n20 3\\n0 1 1\\n10 1 0\\n10 2 1\") == \"impossible\""
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"impossible\"\n"
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    '''\n    2 3\n    6 7\n    0 1 1\n    0 2 2\n    1 1 3\n    2 1 2\n    2 2 1\n    3 2 3\n    4 2 1\n    '''\n) == '1 2'\n\nassert solution(\n    '''\n    2 1\n    20 3\n    0 1 1\n    10 1 0\n    10 2 1\n    '''\n) == 'impossible'"
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 3\\n6 7\\n0 1 1\\n0 2 2\\n1 1 3\\n2 1 2\\n2 2 1\\n3 2 3\\n4 2 1') == ['1 2']\nassert solution('2 1\\n20 3\\n0 1 1\\n10 1 0\\n10 2 1') == ['impossible']"
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input1) == expected_output1\nassert solution(sample_input2) == expected_output2"
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\").read()) == \"1 2\\nimpossible\\n\"\nassert solution(open(\"test_input_1.txt\").read()) == \"1 2\\n\"\nassert solution(open(\"test_input_2.txt\").read()) == \"1 2\\nimpossible\\n\"\n"
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '1 2\\n'"
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 1234567890, \"Your solution is wrong.\""
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n6 7\\n0 1 1\\n0 2 2\\n1 1 3\\n2 1 2\\n2 2 1\\n3 2 3\\n4 2 1\\n\") == \"1 2\\n\"\nassert solution(\"2 1\\n20 3\\n0 1 1\\n10 1 0\\n10 2 1\\n\") == \"impossible\\n\""
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(10) == (5, 2)\nassert solution(2020) == (2020, 1)"
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(10) == (5, 2), \"Incorrect output for example 1\"\nassert solution(2020) == (2020, 1), \"Incorrect output for example 2\""
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(10) == \"5 2\"\nassert solution(2020) == \"2020 1\""
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(10) == [5, 2]\nassert solution(2020) == [2020, 1]"
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(10) == \"5 2\", \"Test case 1 failed\"\nassert solution(2020) == \"2020 1\", \"Test case 2 failed\"\n\nfrom typing import List"
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(10) == \"5 2\", \"The solution is incorrect.\"\nassert solution(2020) == \"2020 1\", \"The solution is incorrect.\"\n\nfrom typing import List"
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(10) == \"5 2\"\nassert solution(2020) == \"2020 1\""
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(10) == [5, 2]\nassert solution(2020) == [2020, 1]"
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == [5, 2]\nassert solution(100) == [2020, 1]"
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == 5, \"1\"\nassert solution(2) == 2, \"2\"\nassert solution(10) == 5, \"10\"\nassert solution(2020) == 2020, \"2020\""
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\\n\") == \"impossible\"\nassert solution(\"3\\n4\\n0 chocolate\\n1 icecream\\n2 cookies\\n2 chocolate\\n3\\nchocolate\\nicecream\\ncookies\\n\") == \"unique\"\nassert solution(\"3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\\n\") == \"impossible\"\n"
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\\nSample Output 1: impossible') == 'impossible'\nassert solution('3\\n4\\n0 chocolate\\n1 icecream\\n2 cookies\\n2 chocolate\\n3\\nchocolate\\nicecream\\ncookies\\nSample Output 2: unique') == 'unique'"
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\") == \"impossible\"\nassert solution(\"3\\n4\\n0 chocolate\\n1 icecream\\n2 cookies\\n2 chocolate\\n3\\nchocolate\\nicecream\") == \"unique\""
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\\n\") == \"impossible\"\nassert solution(\"3\\n4\\n0 chocolate\\n1 icecream\\n2 cookies\\n2 chocolate\\n3\\nchocolate\\nicecream\\ncookies\\n\") == \"unique\"\nassert solution(\"3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\\n\") == \"ambiguous\""
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n    3\n    3\n    0 chocolate\n    1 icecream\n    2 cookies\n    3\n    chocolate\n    cookies\n    icecream\n''') == 'unique'"
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output, f\"Test case {i+1} failed. Expected output: {expected_output}, actual output: {solution(stdin)}\""
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\\nSample Output 1: impossible\\n\\nSample Input 2:3\\n4\\n0 chocolate\\n1 icecream\\n2 cookies\\n2 chocolate\\n3\\nchocolate\\nicecream\\ncookies\\nSample Output 2: unique\\ndef solution(stdin: str) -> str:\n    pass') == 'impossible\\n\\nunique\\ndef solution(stdin: str) -> str:\n    pass'"
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"impossible\""
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input) == output"
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"impossible\"\n"
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Test failed for {input()}, expected {output}, got {solution(input())}\""
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output\nprint(\"OK\")"
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 0 10\") == \"0\"\nassert solution(\"1 2 10\") == \"1\""
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Test Failed: Expected {output}, but got {solution(input())}\""
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Output\""
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input(\"Enter the value of N, K, and M: \")) == output(\"The required number is:\", N, \"/\", K, \"(%)\", M), f\"The output is incorrect: {solution(input('Enter the value of N, K, and M: '))}\""
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Test failed. Expected output: {output()}, but got: {solution(input())}\""
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 0 10\") == 0\nassert solution(\"1 2 10\") == 1"
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"The solution {solution(input())} is incorrect. The expected output is {output}.\""
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 0 10\") == \"0\\n\"\nassert solution(\"1 2 10\") == \"1\\n\""
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == \"1 pan\", \"The solution should output '1 pan', but got: {}\".format(solution(sample_input_1))\n\nassert solution(sample_input_2) == \"3 zoom out\", \"The solution should output '3 zoom out', but got: {}\".format(solution(sample_input_2))"
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n............................................................\n............................................................\n....XXXX....................................................\n....XXXX..................................XXXX..............\n....XXXX...................................XXX..............\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n\"\"\") == \"1 pan\"\n\nassert solution(\"\"\"\n............................................................\n............................................................\n...............................................XX...........\n.....................................XXX......XXXX..........\n....................................XXXX........X...........\n........XXX....XXX....................X.....................\n.........XXX...XX...........................................\n............................................................\n............XX..............................................\n...........XXX..............................................\n............................................................\n............................................XX..............\n...........................................XXXX.............\n.............................................XX.............\n............................................................\n\"\"\") == \"3 zoom out\""
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r').read()) == '1 pan\\n3 zoom out\\n'"
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Input 1\"), \"Sample Input 1\"\nassert solution(\"Input 2\"), \"Sample Input 2\"\n"
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"..............\\n..............\\n....XX...........\\n....XX...........\\n....XX...........\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n..............\\n"
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"....XXXX....................................................\n....XXXX....................................................\n....XXXX..................................XXXX..............\n....XXXX...................................XXX..............\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX....................................................\n....XXXX"
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('............................................................\\n............................................................\\n....XXXX....................................................\\n....XXXX..................................XXXX..............\\n....XXXX...................................XXX..............\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\"
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('sample_input1.txt', 'r').read()) == \"1 pan\\n\"\nassert solution(open('sample_input2.txt', 'r').read()) == \"3 zoom out\\n\""
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('............................................................\\n............................................................\\n....XXXX....................................................\\n....XXXX..................................XXXX..............\\n....XXXX...................................XXX..............\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\"
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 20\\napples are great!\\n++++++++++++++++++++\\n+ oranges are\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++\\n check out our\\nfresh apples!\\n\") == \" apples are great!\\n check out our\\nfresh apples!\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"+++++++\\n\"\nassert solution(\"3 3\\n111\\n222\\n333\\n444\\n555\\n666\\n777\\n888\\n999\\n1010\\n\") == \"111\\n1010\\n999\\n999\\n888\\n888\\n777\\n777\\n666\\n666\\n555\\n555\\n444\\n444\\n333\\n333\\n222\\n222\\n111\\n111\\n\""
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n8 20\napples are great!  \n++++++++++++++++++++\n+ oranges are +\n+ way better! +\n+ #oranges>apples +\n++++++++++++++++++++\ncheck out our fresh apples!\n''') == '''\napples are great!  \n                    \n                    \n                    \n                    \n                    \n check out our fresh apples!    \n'''\n\nassert solution('''\n7 7\n+++++++\n+  =  +\n+ +++ +\n+ + + +\n+ +++ +\n+     +\n+++++++\n''') == '''\n       \n       \n       \n       \n       \n       \n       \n'''\n\nassert solution('''\n1 1\na b c d e f g h i j k l m n o p q r s t u v w x y z 0 1 2 3 4 5 6 7 8 9 \n''') == '''\na b c d e f g h i j k l m n o p q r s t u v w x y z 0 1 2 3 4 5 6 7 8 9 \n'''"
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('8 20\\n apples are great!\\n++++++++++++++++++++\\n+ oranges are    +\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++\\n check out our\\nfresh apples!\\n') =='apples are great!\\n'\nassert solution('7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n') == '+++++++\\n'"
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 20\\napples are great!\\n++++++++++++++++++++\\n+ oranges are    +\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++\\n check out our\\nfresh apples!\\n\") == \" apples are great!\\n fresh apples!\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \" = +\\n+++++\\n+  +\\n+++++\\n+++++\\n+++++\\n+++++\\n+++++\\n\"\n\nassert solution(\"8 20\\napples are great!\\n++++++++++++++++++++\\n+ oranges are    +\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++\\n check out our\\nfresh apples!\\n\") == \" apples are great!\\n fresh apples!\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \" = +\\n+++++\\n+  +\\n+++++\\n+++++\\n+++++\\n+++++\\n+++++\\n+++++\\n\"\n\nassert solution(\"8 20\\napples are great!\\n++++++++++++++++++++\\n+ oranges are    +\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++\\n check out our\\nfresh apples!\\n\") == \" apples are great!\\n fresh apples!\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \" = +\\n+++++\\n+  +\\n+++++\\n+++++\\n+++++\\n+++++\\n+++++\\n+++++\\n\""
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 20\\napples are great!\\n++++++++++++++++++++\\n+ oranges are\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++\\n check out our\\nfresh apples!\\n\") == \" apples are great!\\n check out our\\nfresh apples!\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"  \\n\""
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 20\\napples are great!\\n++++++++++++++++++++\\n+ oranges are    +\\n+ way better!\\n+ #oranges>apples    \\n++++++++++++++++++++\\n check out our    \\n fresh apples!\\n\") == \" apples are great!\\n check out our     fresh apples!\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"    \\n    \\n    \\n    \\n\"\n\nprint(\"All test cases pass\")"
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 20\\napples are great!\\n++++++++++++++++++++\\n+ oranges are +\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++\\n check out our\\nfresh apples!\\n\") == \" apples are great!\\n fresh apples!\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"+++++++\\n  =  +\\n  +++\\n  + +\\n  +++\\n  +    \\n+++++++\\n\"\nassert solution(\"8 20\\napples are great!\\n++++++++++++++++++++\\n+ oranges are +\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++\\n check out our\\nfresh apples!\\n\") == \" apples are great!\\n fresh apples!\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"+++++++\\n  =  +\\n  +++\\n  + +\\n  +++\\n  +    \\n+++++++\\n\""
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 20\\napplres are great!\\n++++++++++++++++++++\\n+ oranges are +\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++\\n check out our fresh apples!\\nSample Output 1:\\n apples are great!\\n                    \n                    \n                    \n                    \n                    \n                    \n check out our fresh apples!\\n\") == \" apples are great!\\n\""
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('8 20\\n apples are great!\\n++++++++++++++++++++\\n+ oranges are\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++\\n check out our\\n fresh apples!\\n\\nSample Input 1:\\n8 20\\n apples are great!\\n++++++++++++++++++++\\n+ oranges are\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++\\n check out our\\n fresh apples!\\n\\nSample Output 1:\\n apples are great!\\n\\nSample Input 2:\\n7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\\nSample Output 2:\\n\\n') == 'apples are great!\\n check out our\\n fresh apples!\\n\\n'\n"
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(b'8 20\\napples are great!\\n++++++++++++++++++++\\n+ oranges are\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++\\n check out our\\nfresh apples!\\n') == b' apples are great!\\nfresh apples!\\n'\nassert solution(b'7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n') == b'+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n'"
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"1.5\"\nprint(\"Correct\")"
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"HH\") == 2.0\nassert solution(\"H?\") == 1.5"
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Output does not match the expected output: {expected_output}, got: {solution(input())}\""
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"HH\") == 2.0, \"The result should be 2.0\"\nassert solution(\"H?\") == 1.5, \"The result should be 1.5\""
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"HH\") == \"2.0\", \"The output should be 2.0\"\nassert solution(\"H?\") == \"1.5\", \"The output should be 1.5\"\n"
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"HH\") == \"2.0\", \"The output is incorrect\"\nassert solution(\"H?\") == \"1.5\", \"The output is incorrect\""
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('HH') == '2.0', 'First test case failed'\nassert solution('H?') == '1.5', 'Second test case failed'\n\nimport math"
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"HH\") == \"2.0\", \"The first sample is incorrect.\"\nassert solution(\"H?\") == \"1.5\", \"The second sample is incorrect.\""
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('HH') == 2.0, \"Incorrect output: Expected 2.0, got {}.\".format(solution('HH'))\nassert solution('H?') == 1.5, \"Incorrect output: Expected 1.5, got {}.\".format(solution('H?'))"
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n0001\\n0001\\n0011\\n1110\") == \"1\\n0001\\n0001\\n0011\\n1111\"\nassert solution(\"4\\n1111\\n1111\\n1111\\n1111\") == \"6\\n0011\\n0011\\n0111\\n1101\"\n\nfrom typing import List"
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"The output is incorrect.\"\n"
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_data) == expected_output, f\"Test {test_case} failed. Expected output: {expected_output}, Received output: {solution(input_data)}\""
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n0001\\n0001\\n0011\\n1110\") == \"1\\n0001\\n0001\\n0011\\n1111\\n\"\nassert solution(\"4\\n1111\\n1111\\n1111\\n1111\") == \"6\\n0011\\n0011\\n0111\\n1101\\n\""
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"The output is {solution(input())}, but it should be {expected_output}\"\n"
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n0001\\n0001\\n0011\\n1110') == '1\\n0001\\n0001\\n0011\\n1111'\nassert solution('4\\n1111\\n1111\\n1111\\n1111') == '6\\n0011\\n0011\\n0111\\n1101'"
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n0001\\n0001\\n0011\\n1110\") == \"1\\n0001\\n0001\\n0011\\n1111\\n\"\nassert solution(\"4\\n1111\\n1111\\n1111\\n1111\") == \"6\\n0011\\n0011\\n0111\\n1101\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n0001\\n0001\\n0011\\n1110') == '1\\n0001\\n0001\\n0011\\n1111\\n'\nassert solution('4\\n1111\\n1111\\n1111\\n1111') == '6\\n0011\\n0011\\n0111\\n1101\\n'"
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n0001\\n0001\\n0011\\n1110\") == \"1\\n0001\\n0001\\n0011\\n1111\"\nassert solution(\"4\\n1111\\n1111\\n1111\\n1111\") == \"6\\n0011\\n0011\\n0111\\n1101\""
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Test failed: {solution(input())}!= {expected_output}\"\n"
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == '''\n2\n4\n'''"
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('h 1 4 1\\nv 2 4 2\\nh 10 2 2\\nv 11 2 3') == '2', 'Incorrect output 1'\nassert solution('h 1 10 1\\nh 5 10 2\\nv 1 10 1\\nv 5 10 3') == '4', 'Incorrect output 2'"
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\nh 1 4 1\\nv 2 4 2\\nh 10 2 2\\nv 11 2 3\") == \"2\\n\"\nassert solution(\"4\\nh 1 10 1\\nh 5 10 2\\nv 1 10 1\\nv 5 10 3\") == \"4\\n\"\nassert solution(\"4\\nh 1 4 1\\nh 2 4 2\\nh 3 4 3\\nh 10 4 4\\nh 11 4 5\\nh 12 4 6\\nh 13 4 7\\nh 14 4 8\\nh 15 4 9\\nh 16 4 10\\nh 17 4 11\\nh 18 4 12\\nh 19 4 13\\nh 20 4 14\\nh 21 4 15\\nh 22 4 16\\nh 23 4 17\\nh 24 4 18\\nh 25 4 19\\nh 26 4 20\\nh 27 4 21\\nh 28 4 22\\nh 29 4 23\\nh 30 4 24\\nh 31 4 25\\nh 32 4 26\\nh 33 4 27\\nh 34 4 28\\nh 35 4 29\\nh 36 4 30\\nh 37 4 31\\nh 38 4 32\\nh 39 4 33\\nh 40 4 34\\nh 41 4 35\\nh 42 4 36\\nh 43 4 37\\nh 44 4 38\\nh 45 4 39\\nh 46 4 40\\nh 47 4 41\\nh 48 4 42\\nh 49 4 43\\nh 50 4 44\\nh 51 4 45\\nh 52 4 46\\nh 53 4 47\\nh 54 4 48\\nh 55 4 49\\nh 56 4 50\\nh 57 4 51\\nh 58 4 52\\nh 59 4 53\\nh 60 4 54\\nh 61 4 55\\nh 62 4 56\\nh 63 4 57\\nh 64 4 58\\nh 65 4 59\\nh 66 4 60\\nh 67 4 61\\nh 68 4 62\\nh 69 4 63\\nh 70 4 64\\nh 71 4 65\\nh 72 4 66\\nh 73 4 67\\nh 74 4 68\\nh 75 4 69\\nh 76 4 70\\nh 77 4 71\\nh 78 4 72\\nh 79 4 73\\nh 80 4 74\\nh 81 4 75\\nh 82 4 76\\nh 83 4 77\\nh 84 4 78\\nh 85 4 79\\nh 86 4 80\\nh 87 4 81\\nh 88 4 82\\nh 89 4 83\\nh 90 4 84\\nh 91 4 85\\nh 92 4 86\\nh 93 4 87\\nh 94 4 88\\nh 95 4 89\\nh 96 4 90\\nh 97 4 91\\nh 98 4 92\\nh 99 4 93\\nh 100 4 9"
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == expected, f\"Your solution is incorrect. Expected: {expected}, Received: {solution}\""
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\nh 1 4 1\\nv 2 4 2\\nh 10 2 2\\nv 11 2 3\") == \"2\"\nassert solution(\"4\\nh 1 10 1\\nh 5 10 2\\nv 1 10 1\\nv 5 10 3\") == \"4\"\n"
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_data) == output_data, f\"Test case failed. Expected output: {output_data}, Received output: {solution(input_data)}\""
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\nh 1 4 1\\nv 2 4 2\\nh 10 2 2\\nv 11 2 3\") == \"2\"\nassert solution(\"4\\nh 1 10 1\\nh 5 10 2\\nv 1 10 1\\nv 5 10 3\") == \"4\""
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"h 1 4 1\\nv 2 4 2\\nh 10 2 2\\nv 11 2 3\") == \"2\\n\"\nassert solution(\"h 1 10 1\\nh 5 10 2\\nv 1 10 1\\nv 5 10 3\") == \"4\\n\""
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n4\nh 1 4 1\nv 2 4 2\nh 10 2 2\nv 11 2 3\n\"\"\") == 2\n\nassert solution(\"\"\"\n4\nh 1 10 1\nh 5 10 2\nv 1 10 1\nv 5 10 3\n\"\"\") == 4"
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"h 1 4 1\\nv 2 4 2\\nh 10 2 2\\nv 11 2 3\") == \"2\\n\"\n\nassert solution(\"h 1 10 1\\nh 5 10 2\\nv 1 10 1\\nv 5 10 3\") == \"4\\n\""
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5\\n') == '2\\n'\nassert solution('3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8\\n') == '4\\n'"
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2\\n\"\n"
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2\\n\"\nassert solution() == \"4\\n\""
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5\") == \"2\\n\"\nassert solution(\"3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8\") == \"4\\n\""
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5\") == \"2\\n\"\nassert solution(\"3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8\") == \"4\\n\""
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 2"
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5\") == \"2\\n\"\nassert solution(\"3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8\") == \"4\\n\""
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5\") == \"2\\n\"\nassert solution(\"3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8\") == \"4\\n\"\n"
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2\", \"Test failed for solution 1\"\n\nassert solution(\"3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8\") == \"4\", \"Test failed for solution 2\""
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2\\n\" # Test 1"
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6\\n1 2 3 3 4 2\\n8\\n1 2 1 3 1 3 1 2') == '2\\n'"
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=str(input())) == \"Output the length of the longest sub-array so that each element in the sub-array appears exactly twice.\\n\", \"Test failed\""
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n1 2 3 3 4 2\") == \"2\\n\", \"The given code is not correct\"\nassert solution(\"8\\n1 2 1 3 1 3 1 2\") == \"4\\n\", \"The given code is not correct\""
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n1 2 3 3 4 2\") == \"2\\n\", \"Solution 1 incorrect\"\nassert solution(\"8\\n1 2 1 3 1 3 1 2\") == \"4\\n\", \"Solution 2 incorrect\""
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('6\\n1 2 3 3 4 2\\n') == '2'"
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n1 2 3 3 4 2\") == 2\nassert solution(\"8\\n1 2 1 3 1 3 1 2\") == 4"
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 2\n"
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 'Output the length of the longest sub-array so that each element in the sub-array appears exactly twice.'"
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n1 2 3 3 4 2\\n\") == \"2\\n\"\nassert solution(\"8\\n1 2 1 3 1 3 1 2\\n\") == \"4\\n\""
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n1 2 3 3 4 2\") == 2\nassert solution(\"8\\n1 2 1 3 1 3 1 2\") == 4"
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt').read()) == '4\\n0\\n'\n"
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2 2\\n1 1 1\\n2 2 1\\n2 2 2 1\\n1 1 1 2\") == \"4\\n0\\n\"\nassert solution(\"2 2 2\\n1 1 1\\n2 2 2\\n2 2 2 1\\n1 1 1 2\") == \"4\\n2\\n\""
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2 2\\n1 1 1\\n2 2 1\\n2 2 2 1\\n1 1 1 2\\n\") == \"4\\n0\\n\"\nassert solution(\"2 2 2\\n1 1 1\\n2 2 2\\n2 2 2 1\\n1 1 1 2\\n\") == \"4\\n2\\n\""
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Solution does not match expected output. Expected: {expected_output}, Received: {solution(input())}\""
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2 2\\n1 1 1\\n2 2 1\\n2 2 2 1\\n1 1 1 2\") == \"4\\n0\\n\"\nassert solution(\"2 2 2\\n1 1 1\\n2 2 2\\n2 2 2 1\\n1 1 1 2\") == \"4\\n2\\n\""
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2 2\\n1 1 1\\n2 2 1\\n2 2 2 1\\n1 1 1 2\\n\") == \"4\\n0\\n\"\nassert solution(\"2 2 2\\n1 1 1\\n2 2 2\\n2 2 2 1\\n1 1 1 2\\n\") == \"4\\n2\\n\""
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2 2\\n1 1 1\\n2 2 1\\n2 2 2 1\\n1 1 1 2\") == \"4\\n0\\n\""
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2 2\\n1 1 1\\n2 2 1\\n2 2 2 1\\n1 1 1 2\") == \"4\\n0\\n\"\nassert solution(\"2 2 2\\n1 1 1\\n2 2 2\\n2 2 2 1\\n1 1 1 2\") == \"4\\n2\\n\""
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2 2\\n1 1 1\\n2 2 1\\n2 2 2 1\\n1 1 1 2\\n\") == \"4\\n0\\n\"\nassert solution(\"2 2 2\\n1 1 1\\n2 2 2\\n2 2 2 1\\n1 1 1 2\\n\") == \"4\\n2\\n\"\nassert solution(\"3 3 3\\n1 1 1\\n2 2 2\\n2 2 2\\n2 2 2\\n\") == \"0\\n0\\n\""
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"\n"
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1\\n\""
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(300) == \"1\\n\"\nassert solution(1000) == \"1\\n\"\nassert solution(2000) == \"impossible\\n\""
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"1\\n\"\nassert solution(open(\"sample_input1.txt\", \"r\").read()) == \"1\\n\"\nassert solution(open(\"sample_input2.txt\", \"r\").read()) == \"impossible\\n\""
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == expected, f\"Expected solution: {expected}, Received: {solution}\""
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"1\\n\"\nassert solution(stdin) == \"impossible\\n\"\n"
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == expected, f\"Your solution is different from the expected output.\\nExpected: {expected}\\nGot: {solution}\""
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input) == output, f\"Testcase {i+1} failed: {solution(input)}!= {output}\" for i, (input, output) in enumerate(zip(input_data, output_data))"
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2\") == 1\nassert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n1 2\") == \"impossible\"\n"
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution, \"No solution found\""
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for sample input {input()}, expected output {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('10 4\\n1 1 2 1\\n3\\n0 9\\n2 6\\n7 7\\n').strip() == '35\\n18\\n3\\n'\nassert solution('11 3\\n3 7 10\\n3\\n0 10\\n2 6\\n7 7\\n').strip() == '8\\n2\\n1\\n'"
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('10 4\\n1 1 2 1\\n3\\n0 9\\n2 6\\n7 7\\n') == '35\\n18\\n3\\n'\nassert solution('11 3\\n3 7 10\\n3\\n0 10\\n2 6\\n7 7\\n') == '8\\n2\\n1\\n'"
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"abc\""
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 4\\n1 1 2 1\\n3\\n0 9\\n2 6\\n7 7\") == \"35\\n18\\n3\\n8\\n2\\n1\\n\", \"Sample Input 1\"\nassert solution(\"11 3\\n3 7 10\\n3\\n0 10\\n2 6\\n7 7\") == \"8\\n2\\n1\\n\", \"Sample Input 2\""
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"35\\n18\\n3\\n\\n8\\n2\\n1\", \"The output is incorrect.\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 4\\n1 1 2 1\\n3\\n0 9\\n2 6\\n7 7\\n\") == \"35\\n18\\n3\\n\""
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input1) == output1\n\nassert solution(input2) == output2"
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin: str) == \"35\\n18\\n3\\n8\\n2\\n1\\n\"\nassert solution(stdin: str) == \"35\\n18\\n3\\n8\\n2\\n1\\n\""
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('mirko_debugging.in').read()) == expected_output, f\"Expected output: {expected_output}, Got: {solution(open('mirko_debugging.in').read())}\""
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1\\n2\\n3\\n4\\n\") == \"0\\n1\\n3\\n6\\n\", \"Test 1\"\nassert solution(\"5\\n3\\n2\\n4\\n1\\n5\\n\") == \"0\\n1\\n2\\n4\\n6\\n\", \"Test 2\"\n\nfrom typing import List\n\nclass TreeNode:\n    def __init__(self, val=0, left=None, right=None):\n        self.val = val\n        self.left = left\n        self.right = right"
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed with input: {input()}, expected output: {expected_output}\""
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '''0\n1\n3\n6'''"
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1\\n2\\n3\\n4\\n\") == \"0\\n1\\n3\\n6\\n\", \"Test 1 failed\"\nassert solution(\"5\\n3\\n2\\n4\\n1\\n5\\n\") == \"0\\n1\\n2\\n4\\n6\\n\", \"Test 2 failed\""
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1\\n2\\n3\\n4\\n5\\n3\\n2\\n4\\n1\\n5\\n\") == \"0\\n1\\n3\\n6\\n\", \"Output 1 is incorrect.\"\nassert solution(\"5\\n3\\n2\\n4\\n1\\n5\\n\") == \"0\\n1\\n2\\n4\\n6\\n\", \"Output 2 is incorrect.\""
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"0\\n1\\n3\\n6\\n\""
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Expected: {output}\\nGot: {solution(input())}\""
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1\\n2\\n3\\n4\\n\") == \"0\\n1\\n3\\n6\\n\"\nassert solution(\"5\\n3\\n2\\n4\\n1\\n5\\n\") == \"0\\n1\\n2\\n4\\n6\\n\""
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n1 3 2 2\\n1 1 3 2\\n2 4 7 3\\n3 3 5 3') == '2 4 1 3\\n4 3 1 2'"
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}\\nGot: {solution(stdin)}\""
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '2 4 1 3\\n4 3 1 2'"
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2 4 1 3\\n4 3 1 2\""
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 3 2 2\\n1 1 3 2\\n2 4 7 3\\n3 3 5 3\\n\") == \"2 4 1 3\"\nassert solution(\"4\\n0 0 1 1\\n1 2 0 3\\n2 2 3 3\\n4 0 3 1\\n\") == \"4 3 1 2\""
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2 4 1 3\""
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '2 4 1 3', \"Expected: '2 4 1 3', but got: '{}'.\".format(solution())"
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution([4, 1, 3, 2, 1, 1, 3, 2, 2, 4, 7, 3, 3, 5, 3]) == ['2 4 1 3', '4 3 1 2']"
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Expected output {output}, got {solution(input())}\"\n\nfrom typing import List"
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output() for input, output in zip(sample_input, sample_output)"
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\"\nassert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\")!= \"Theta loses\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\")!= \"Theta loses\""
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\""
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\n    89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\"\"\"\n) == \"Theta wins\"\n"
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\""
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_str) == output_str, \"The solution provided is incorrect.\" for input_str, output_str in test_cases:\n    assert solution(input_str) == output_str, f\"Solution for input {input_str} and expected output {output_str} is incorrect.\""
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\""
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\""
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\""
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\", \"The expected output is not obtained.\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\", \"The expected output is not obtained.\""
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\""
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2\\n1 charlatan 1\\n1 not charlatan 1\") == \"charlatan\\n\"\nassert solution(\"2 1\\n1 and fabulist 1 fabulist 2\") == \"fabulist\\ntruther\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n1 2\n1 charlatan 1\n1 not charlatan 1\n\"\"\"\n) == \"charlatan\\n\"\n\nassert solution(\n\"\"\"\n2 1\n1 and fabulist 1 fabulist 2\n\"\"\"\n) == \"fabulist\\ntruther\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 2\\n1 charlatan 1\\n1 not charlatan 1') == 'charlatan\\n'\nassert solution('2 1\\n1 and fabulist 1 fabulist 2') == 'fabulist\\ntruther\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2\\n1 charlatan 1\\n1 not charlatan 1\\n\") == \"charlatan\\n\"\nassert solution(\"2 1\\n1 and fabulist 1 fabulist 2\\n\") == \"fabulist\\ntruther\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_example_1) == ['charlatan']\nassert solution(input_example_2) == ['fabulist', 'truther']"
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\nr\"\"\"\n1 2\n1 charlatan 1\n1 not charlatan 1\n\"\"\"\n) == \"\"\"\ncharlatan\n\"\"\"\n\nassert solution(\nr\"\"\"\n2 1\n1 and fabulist 1 fabulist 2\n\"\"\"\n) == \"\"\"\nfabulist\ntruther\n\"\"\""
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2\\n1 charlatan 1\\n1 not charlatan 1\\n\") == [\"charlatan\"]\nassert solution(\"2 1\\n1 and fabulist 1 fabulist 2\\n\") == [\"fabulist\", \"truther\"]\n"
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 2\\n1 charlatan 1\\n1 not charlatan 1\\n') == ['charlatan']\nassert solution('2 1\\n1 and fabulist 1 fabulist 2\\n') == ['fabulist']\nassert solution('1 1\\n1 xor truther 1 truther 2\\n1 xor truther 1 truther 2\\n') == ['truther']\n\nprint('All tests passed!')"
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"charlatan\\n\"\nprint(\"Test passed\")"
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2\\n1 charlatan 1\\n1 not charlatan 1\\n\") == \"charlatan\\n\"\nassert solution(\"2 1\\n1 and fabulist 1 fabulist 2\\n\") == \"fabulist\\ntruther\\ndef solution(stdin: str) -> str:    \\n    pass\""
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input1) == '4'\nassert solution(input2) == '3'\n"
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1.00 5.00\\n3.00 3.00\\n4.00 2.00\\n6.00 4.50\\n7.00 1.00\\n\") == \"4\"\nassert solution(\"3\\n-1.50 -1.00\\n1.50 -1.00\\n0.00 1.00\\n\") == \"3\""
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\n1.00 5.00\\n3.00 3.00\\n4.00 2.00\\n6.00 4.50\\n7.00 1.00') == '4\\n'\nassert solution('3\\n-1.50 -1.00\\n1.50 -1.00\\n0.00 1.00') == '3\\n'"
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n1.00 5.00\\n3.00 3.00\\n4.00 2.00\\n6.00 4.50\\n7.00 1.00') == 4\nassert solution('3\\n-1.50 -1.00\\n1.50 -1.00\\n0.00 1.00') == 3"
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"John, a student who is taking the game development course, recently developed a mobile game called Fruit Slicer for his coursework. In the game the player slices fruits that are throw into the air by swiping the touch screen. However the game is quite simple because John was not able to write code for the geometry required for a more complex version. In the game each slice is a straight line of infinite length, and all fruits have the same shape of a circle with unit radius. The figure shows a cool snapshot of John\u2019s game. \n\nJohn introduces his game to his best friend Sean, who soon gets bored of playing the simple game. But as a teaching assistant of the algorithm course, Sean decides to turn the game into a homework assignment. He asks the students in the algorithms course to write a program that can compute the best slice at any given moment of the game. Given the locations of the fruits, the program should determine the maximum number of fruits that can be sliced with a single straight-line swipe.\n\nAs a student in Sean\u2019s class, you are now the one who is facing this challenge."
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n5\n1.00 5.00\n3.00 3.00\n4.00 2.00\n6.00 4.50\n7.00 1.00\n\"\"\") == \"4\"\n\nassert solution(\n\"\"\"\n3\n-1.50 -1.00\n1.50 -1.00\n0.00 1.00\n\"\"\") == \"3\""
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1.00 5.00\\n3.00 3.00\\n4.00 2.00\\n6.00 4.50\\n7.00 1.00\\n\") == \"4\\n\"\nassert solution(\"3\\n-1.50 -1.00\\n1.50 -1.00\\n0.00 1.00\\n\") == \"3\\n\""
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"output\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r')) == '4\\n'\nassert solution(open('input2.txt', 'r')) == '3\\n'"
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=sample_input) == expected_output, f\"Expected {expected_output}, got {solution(stdin=sample_input)}\"\n\nsample_input = \"\"\"\n2 5 2\nR..?.\n.X...\n100 100 7 100 8\n\"\"\"\n\nexpected_output = \"16\"\n\nsolution(stdin=sample_input)"
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 5 2\\nR..?\\n.X...\\n100 100 7 100 8\\n') == '16'\nassert solution('2 3 1\\nX..\\n.?.\\n10 1000 1\\n') == '10'"
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input1) == \"16\"\nassert solution(input2) == \"10\""
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 16"
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 5 2\\nR..?.\\n.X...\\n100 100 7 100 8\") == \"16\""
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == '16'\n"
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 5 2\\nR..?\\n.X...\\n100 100 7 100 8') == '16'\nassert solution('2 3 1\\nX..\\n.?.\\n10 1000 1') == '10'"
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 5 2\\nR..?.\\n.X...\\n100 100 7 100 8') == '16\\n', \"The output is incorrect.\""
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 5 2\\nR..?.\\n.X...\\n100 100 7 100 8\\n') == '16'"
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 5 2\\nR..?.\\n.X...\\n100 100 7 100 8\") == \"16\\n\"\nassert solution(\"2 3 1\\nX..\\n.?.\\n10 1000 1\") == \"10\\n\"\n"
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n0 4 4\\n1 5 1\\n2 6 1\\n\") == \"1.414\"\nassert solution(\"6 11\\n0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10\\n\") == \"5.657\""
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n0 4 4\\n1 5 1\\n2 6 1\") == \"1.414\"\nassert solution(\"6 11\\n0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10\") == \"5.657\""
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"1.414\"\nassert solution(open(\"input2.txt\", \"r\").read()) == \"5.657\""
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n0 4 4\\n1 5 1\\n2 6 1\") == \"1.414\"\nassert solution(\"6 11\\n0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10\") == \"5.657\""
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n0 4 4\\n1 5 1\\n2 6 1\") == \"1.414\"\nassert solution(\"6 11\\n0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10\") == \"5.657\""
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''3 3\n0 4 4\n1 5 1\n2 6 1''') == '1.414'\nassert solution('''6 11\n0 0 1\n0 1 2\n1 0 3\n1 1 4\n5 5 1\n20 20 10''') == '5.657'"
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"1.414\"\n"
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n0 4 4\\n1 5 1\\n2 6 1\") == \"1.414\"\nassert solution(\"6 11\\n0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10\") == \"5.657\"\n"
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1.414\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '1.414'\nassert solution() == '5.657'\n"
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1 1 1 1\\n3 1 1 1\\n4 1 1 1 1\\n5 1 1 1 1\\n6 1 1 1\\n7 1 1 1 1\\n8 1 1 1 1\\n9 1 1 1 1\\n10 1 1 1 1\\n11 1 1 1 1\\n12 1 1 1 1\\n13 1 1 1 1\\n14 1 1 1 1\\n15 1 1 1 1\\n16 1 1 1 1\\n17 1 1 1 1\\n18 1 1 1 1\\n19 1 1 1 1\\n20 1 1 1 1\\n21 1 1 1 1\\n22 1 1 1 1\\n23 1 1 1 1\\n24 1 1 1 1\\n25 1 1 1 1\\n26 1 1 1 1\\n27 1 1 1 1\\n28 1 1 1 1\\n29 1 1 1 1\\n30 1 1 1 1\\n31 1 1 1 1\\n32 1 1 1 1\\n33 1 1 1 1\\n34 1 1 1 1\\n35 1 1 1 1\\n36 1 1 1 1\\n37 1 1 1 1\\n38 1 1 1 1\\n39 1 1 1 1\\n40 1 1 1 1\\n41 1 1 1 1\\n42 1 1 1 1\\n43 1 1 1 1\\n44 1 1 1 1\\n45 1 1 1 1\\n46 1 1 1 1\\n47 1 1 1 1\\n48 1 1 1 1\\n49 1 1 1 1\\n50 1 1 1 1\\n51 1 1 1 1\\n52 1 1 1 1\\n53 1 1 1 1\\n54 1 1 1 1\\n55 1 1 1 1\\n56 1 1 1 1\\n57 1 1 1 1\\n58 1 1 1 1\\n59 1 1 1 1\\n60 1 1 1 1\\n61 1 1 1 1\\n62 1 1 1 1\\n63 1 1 1 1\\n64 1 1 1 1\\n65 1 1 1 1\\n66 1 1 1 1\\n67 1 1 1 1\\n68 1 1 1 1\\n69 1 1 1 1\\n70 1 1 1 1\\n71 1 1 1 1\\n72 1 1 1 1\\n73 1 1 1 1\\n74 1 1 1 1\\n75 1 1 1 1\\n76 1 1 1 1\\n77 1 1 1 1\\n78 1 1 1 1\\n79 1 1 1 1\\n80 1 1 1 1\\n81 1 1 1 1\\n82 1 1 1 1\\n83 1 1 1 1\\n84 1 1 1 1\\n85 1 1 1 1\\n86 1 1 1 1\\n87 1 1 1 1\\n88 "
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 1 1 1 1\\n3 1 1 1\\n0\\n\") == \"1.0\\n\"\nassert solution(\"3 1 1 1\\n1 1 1\\n1\\n\") == \"0.433\\n\"\nassert solution(\"2 1 1 1\\n1 1 1\\n1 1\\n\") == \"0.433\\n\"\nassert solution(\"2 1\\n1 1\\n1\\n\") == \"0.433\\n\"\nassert solution(\"1 1 1 1\\n1\\n1\\n\") == \"0.433\\n\"\nassert solution(\"1 1\\n1\\n1\\n\") == \"0.433\\n\"\nassert solution(\"0\\n1 1\\n1\\n\") == \"0.433\\n\"\nassert solution(\"0 1\\n1\\n1\\n\") == \"0.433\\n\"\nassert solution(\"0\\n1\\n1\\n\") == \"0.433\\n\"\n"
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 1 1 1 1\\n3 1 1 1') == '1.0'\nassert solution('3 1 1 1') == '0.433'"
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Error: {output}!= {solution(input())}\"\nfor _ in range(test_cases):\n    n, *lengths = map(int, stdin.strip().split())\n    poly = Polygon([Point(x, y) for x, y in zip(lengths, lengths[1:])])\n    area = poly.area\n    print(f\"{area:.5f}\")\n"
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1.0\""
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 1 1 1 1\") == \"1.0\"\nassert solution(\"3 1 1 1\") == \"0.433\""
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 1.0\n\nassert solution == 0.433"
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '1.0\\n', \"Test 1 failed\"\nassert solution() == '0.433\\n', \"Test 2 failed\""
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"0.433\", \"Output should be 0.433\""
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Test case {i+1} failed: expected {output}, got {solution(input())}\" for i, (input, output) in enumerate(zip(stdin.split(), stdout.split()))"
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6 5\\n1 1 5\\n2 1 5\\n1 2 4\\n2 3 5\\n3 2 30\\n3 3 5') == '5\\n4\\n1 1\\n2 1\\n2 3\\n3 3'\nassert solution('8 10\\n1 1 15\\n2 2 30\\n1 2 8\\n2 1 7\\n3 2 8\\n2 3 7\\n4 2 100\\n3 3 15') == '36\\n5\\n1 1\\n1 2\\n2 2\\n3 2\\n3 3'"
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == '''\n5\n4\n1 1\n2 1\n2 3\n3 3\n'''\n\nassert solution == '''\n36\n5\n1 1\n1 2\n2 2\n3 2\n3 3\n'''"
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == '''\n5\n4\n1 1\n2 1\n2 3\n3 3\n'''"
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == expected_output\n\nfrom typing import List"
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 5\\n1 1 5\\n2 1 5\\n1 2 4\\n2 3 5\\n3 2 30\\n3 3 5\") == \"5\\n4\\n1 1\\n2 1\\n2 3\\n3 3\"\nassert solution(\"8 10\\n1 1 15\\n2 2 30\\n1 2 8\\n2 1 7\\n3 2 8\\n2 3 7\\n4 2 100\\n3 3 15\") == \"36\\n5\\n1 1\\n1 2\\n2 2\\n3 2\\n3 3\""
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    6 5\n    1 1 5\n    2 1 5\n    1 2 4\n    2 3 5\n    3 2 30\n    3 3 5\n    \"\"\"\n) == \"\"\"\n5\n4\n1 1\n2 1\n2 3\n3 3\n\"\"\"\n\nassert solution(\n    \"\"\"\n    8 10\n    1 1 15\n    2 2 30\n    1 2 8\n    2 1 7\n    3 2 8\n    2 3 7\n    4 2 100\n    3 3 15\n    \"\"\"\n) == \"\"\"\n36\n5\n1 1\n1 2\n2 2\n3 2\n3 3\n\"\"\""
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 5\\n1 1 5\\n2 1 5\\n1 2 4\\n2 3 5\\n3 2 30\\n3 3 5\") == \"5\\n4\\n1 1\\n2 1\\n2 3\\n3 3\""
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 'Output the final energy level on the first line. Output an integer L, the number of plants Barica should travel, including plants 1 and N. On the following L lines, output the sequence of plants Barica should travel.\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216"
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '5\\n4\\n1 1\\n2 1\\n2 3\\n3 3\\n', 'Test case 1'\n\nassert solution() == '36\\n5\\n1 1\\n1 2\\n2 2\\n3 2\\n3 3\\n', 'Test case 2'"
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"Output: 12\\n1 1\\n2 1\\n2 3\\n3 3\\n\", \"Solution should return 'Output: 12\\n1 1\\n2 1\\n2 3\\n'\"\nassert solution(\"Sample Input 1\\n6 5\\n1 1 5\\n2 1 5\\n1 2 4\\n2 3 5\\n3 2 30\\n3 3 5\\n\") == \"Output: 5\\n4\\n1 1\\n2 1\\n2 3\\n3 3\\n\", \"Solution should return 'Output: 5\\n4\\n1 1\\n2 1\\n2 3\\n3 3\\n'\"\nassert solution(\"Sample Input 2\\n8 10\\n1 1 15\\n2 2 30\\n1 2 8\\n2 1 7\\n3 2 8\\n2 3 7\\n4 2 100\\n3 3 15\\n\") == \"Output: 36\\n5\\n1 1\\n1 2\\n2 2\\n3 2\\n3 3\\n\", \"Solution should return 'Output: 36\\n5\\n1 1\\n1 2\\n2 2\\n3 2\\n3 3\\n'\"\n"
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for the given input. Expected output: {expected_output}, Actual output: {solution(input())}\""
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"2 1\\n2 1\\n1 2\\n\"\n) == \"1\\n\"\n\nassert solution(\n    \"3 2\\n2 1 3\\n1 3\\n2 3\\n\"\n) == \"3\\n\""
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(r'''\n    2 1\n    2 1\n    1 2\n''') == '1'\n\nassert solution(r'''\n    3 2\n    2 1 3\n    1 3\n''') == '3'\n\nassert solution(r'''\n    4 3\n    2 1 3 4\n    1 3 4\n''') == '4'\n\nassert solution(r'''\n    6 5\n    1 2 3 4 5\n    3 4 5\n''') == '6'\n\nassert solution(r'''\n    8 7\n    1 2 3 4 5 6\n    4 5 6\n''') == '8'\n\nassert solution(r'''\n    10 9\n    1 2 3 4 5 6 7\n    5 6 7\n''') == '9'\n\nassert solution(r'''\n    12 11\n    1 2 3 4 5 6 7 8\n    6 7 8\n''') == '12'"
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, \"The function is not correct\""
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"Output the minimum possible number of swaps to transform the permutation to N.\"\nassert solution(input()) == \"Output the minimum possible number of swaps to transform the permutation to N.\"\nassert solution(input()) == \"Output the minimum possible number of swaps to transform the permutation to N.\"\nassert solution(input()) == \"Output the minimum possible number of swaps to transform the permutation to N.\"\nassert solution(input()) == \"Output the minimum possible number of swaps to transform the permutation to N.\""
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Arrange\\n2 1\\n2 1\\n1 2\\nArrange\\n2 1\\n2 1\\n1 2\\nArrange\\n2 1\\n2 1\\n1 2\") == \"1\"\nassert solution(\"Arrange\\n3 2\\n2 1 3\\n1 3\\n2 3\\nArrange\\n2 1\\n2 1\\n1 2\") == \"3\"\n"
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1\\n2 1\\n1 2\\n\") == \"1\\n\"\nassert solution(\"3 2\\n2 1 3\\n1 3\\n2 3\\n\") == \"3\\n\"\n"
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1\", \"The solution should be 1\"\n"
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1\\n2 1\\n1 2\\n\") == \"1\\n\"\nassert solution(\"3 2\\n2 1 3\\n1 3\\n2 3\\n\") == \"3\\n\""
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 8\\n1 4\\n4 5\\n1 5\\n1 2\\n1 3\\n2 3\\n3 5\\n2 5\") == -1\n\nassert solution(\"6 5\\n2 4\\n3 5\\n1 5\\n3 6\\n1 6\") == 5"
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 8\\n1 4\\n4 5\\n1 5\\n1 2\\n1 3\\n2 3\\n3 5\\n2 5\") == -1\n\nassert solution(\"6 5\\n2 4\\n3 5\\n1 5\\n3 6\\n1 6\") == 5"
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 8\\n1 4\\n4 5\\n1 5\\n1 2\\n1 3\\n2 3\\n3 5\\n2 5\\n\") == -1\nassert solution(\"6 5\\n2 4\\n3 5\\n1 5\\n3 6\\n1 6\\n\") == 5"
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 8\\n1 4\\n4 5\\n1 5\\n1 2\\n1 3\\n2 3\\n3 5\\n2 5\\n\") == -1, \"Solution should return -1\"\nassert solution(\"6 5\\n2 4\\n3 5\\n1 5\\n3 6\\n1 6\\n\") == 5, \"Solution should return 5\""
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, but got {solution(stdin)}\"\nfor i, test_case in enumerate(tests):\n    assert solution(test_case) == test_case[1], f\"Test Case {i+1} failed\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n5 8\n1 4\n4 5\n1 5\n1 2\n1 3\n2 3\n3 5\n2 5\n''') == -1\n\nassert solution('''\n6 5\n2 4\n3 5\n1 5\n3 6\n1 6\n''') == 5"
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 8\\n1 4\\n4 5\\n1 5\\n1 2\\n1 3\\n2 3\\n3 5\\n2 5\\n\") == -1, \"Test Case 1 Failed\"\nassert solution(\"6 5\\n2 4\\n3 5\\n1 5\\n3 6\\n1 6\\n\") == 5, \"Test Case 2 Failed\""
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == -1, \"Test failed\""
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n5 8\n1 4\n4 5\n1 5\n1 2\n1 3\n2 3\n3 5\n2 5\n''') == -1\n\nassert solution('''\n6 5\n2 4\n3 5\n1 5\n3 6\n1 6\n''') == 5"
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 8\\n1 4\\n4 5\\n1 5\\n1 2\\n1 3\\n2 3\\n3 5\\n2 5\") == -1, \"Incorrect output for test case 1\"\nassert solution(\"6 5\\n2 4\\n3 5\\n1 5\\n3 6\\n1 6\") == 5, \"Incorrect output for test case 2\""
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 1\\n1 1\\n5 1\\n5 5\\n4 2\") == 4.0\nassert solution(\"6 3\\n-8 -8\\n0 -1\\n8 -8\\n1 0\\n0 10\\n-1 0\") == 9.0\n\nfrom typing import List"
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == \"4.00\", \"Your solution is incorrect\"\nassert solution(sample_input_2) == \"9.00\", \"Your solution is incorrect\""
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 1\\n1 1\\n5 1\\n5 5\\n4 2\\n\") == 4.0, \"Incorrect output\"\nassert solution(\"6 3\\n-8 -8\\n0 -1\\n8 -8\\n1 0\\n0 10\\n-1 0\\n\") == 9.0, \"Incorrect output\""
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 1\\n1 1\\n5 1\\n5 5\\n4 2') == 4.0, \"Expected output: 4.00, got: {}\".format(solution('4 1\\n1 1\\n5 1\\n5 5\\n4 2'))\nassert solution('6 3\\n-8 -8\\n0 -1\\n8 -8\\n1 0\\n0 10\\n-1 0') == 9.0, \"Expected output: 9.00, got: {}\".format(solution('6 3\\n-8 -8\\n0 -1\\n8 -8\\n1 0\\n0 10\\n-1 0'))"
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 4.0\nassert solution() == 9.0"
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 4.00\nassert solution() == 9.00"
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 4.0\nassert solution() == 9.0"
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 1\\n1 1\\n5 1\\n5 5\\n4 2\") == 4.0\nassert solution(\"6 3\\n-8 -8\\n0 -1\\n8 -8\\n1 0\\n0 10\\n-1 0\") == 9.0\n"
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 1\\n1 1\\n5 1\\n5 5\\n4 2\\n\") == 4.0\nassert solution(\"6 3\\n-8 -8\\n0 -1\\n8 -8\\n1 0\\n0 10\\n-1 0\\n\") == 9.0"
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(solution_input1) == \"4.00\"\nassert solution(solution_input2) == \"9.00\""
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, got: {solution(stdin)}\""
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3 2\\nPAINT 2 0 0 3 3\\nPAINT 3 0 3 3 3\\n\") == \"2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\\n\"\nassert solution(\"3 3 4\\nPAINT 3 0 0 1 1\\nSAVE\\nPAINT 2 1 1 2 2\\nLOAD 1\\n\") == \"3 1 1\\n1 3 1\\n1 1 1\\n\""
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"\"\"2 1 2 3\n1 2 1 2\n2 1 2 3\n1 2 1 2\"\"\""
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin.read()) == expected, f\"Test case {i + 1} failed. Expected: {expected}, Got: {solution(stdin.read())}\""
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '''2 1 2 3\n1 2 1 2\n2 1 2 3\n1 2 1 2'''"
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Incorrect output. Expected: {output()}, Received: {solution(input())}\""
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input) == expected, f\"Test failed. Expected: {expected}, got: {solution(input)}\""
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed. Expected output: {expected_output}, got: {solution(input())}\""
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3 2\\nPAINT 2 0 0 3 3\\nPAINT 3 0 3 3 3\\n\") == \"2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\\n\"\nassert solution(\"3 3 4\\nPAINT 3 0 0 1 1\\nSAVE\\nPAINT 2 1 1 2 2\\nLOAD 1\\n\") == \"3 1 1\\n1 3 1\\n1 1 1\\n\""
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"4 3\\n5 1\\n\") == \"1 4 2 3\"\nassert solution(stdin=\"4 3\\n5 2\\n\") == \"-1\""
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 3') == '1 4 2 3'\nassert solution('5 1') == '-1'"
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n5 1\\n\") == \"1 4 2 3\"\nassert solution(\"3 2\\n4 1\\n\") == \"-1\""
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=input()) == expected\nassert solution(stdin='5 1') == '-1'"
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '1 4 2 3\\n-1'\nassert solution(stdin) == '4 1\\n3'\nassert solution(stdin) == '3 1\\n2'\nassert solution(stdin) == '2 1\\n1'\nassert solution(stdin) == '1 1\\n'"
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"4 3\\n\") == \"1 4 2 3\\n\"\nassert solution(stdin=\"5 1\\n\") == \"-1\\n\""
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\") == \"1 4 2 3\"\nassert solution(\"5 1\") == \"-1\""
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3\") == \"1 4 2 3\"\nassert solution(\"5 1\") == \"-1\"\n"
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(Sample Input 1) == Sample Output 1\nassert solution(Sample Input 2) == Sample Output 2"
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\") == [\"1 4 2 3\"]\nassert solution(\"5 1\") == [\"-1\"]"
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1\\n\""
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt').read()) == 'Output\\n1'\nassert solution(open('input.txt').read()) == 'Output\\n0'"
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 1, \"Test 1 failed.\"\n\nassert solution() == 0, \"Test 2 failed.\"\n\nfrom typing import List"
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1\\n\", \"Output should be 1\""
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"3\\n4 2\\n2 1\\n1 3\\n\") == \"1\"\n\nassert solution(stdin=\"4\\n5 0\\n2 6\\n8 6\\n5 7\\n\") == \"0\""
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n4 2\\n2 1\\n1 3\\n\") == 1\nassert solution(\"4\\n5 0\\n2 6\\n8 6\\n5 7\\n\") == 0"
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == output, f\"Solution {solution(stdin)} does not match the expected output.\\nExpected: {output}\\nActual: {solution(stdin)}\""
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input1) == sample_output1, \"Test 1 Failed\"\nassert solution(sample_input2) == sample_output2, \"Test 2 Failed\""
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 1\nassert solution(4) == 0\nassert solution(5) == 0\nassert solution(6) == 0\nassert solution(7) == 0\nassert solution(8) == 0"
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n2 1\\n1 3\") == 1\nassert solution(\"4\\n5 0\\n2 6\\n8 6\\n5 7\") == 0"
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10\") == \"4 140\"\nassert solution(\"2 1 0 1\\n0 1 1000 100\") == \"1000 100000\"\n"
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10\\n\") == \"4 140\\n\"\nassert solution(\"2 1 0 1\\n0 1 1000 100\\n\") == \"1000 100000\\n\""
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10\\n\") == \"4 140\\n\"\nassert solution(\"2 1 0 1\\n0 1 1000 100\\n\") == \"1000 100000\\n\""
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10\\n') == '4 140\\n'\nassert solution('2 1 0 1\\n0 1 1000 100\\n') == '1000 100000\\n'"
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10\") == \"4 140\\n\", \"Test 1 failed.\"\n\nassert solution(\"2 1 0 1\\n0 1 1000 100\") == \"1000 100000\\n\", \"Test 2 failed.\""
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"0 0\\n0 0\\n0 0\\n0 0\\n\"\nassert solution(\"4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10\\n\") == \"4 140\\n1000 100000\\n\""
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10\") == \"4 140\\n\", \"Incorrect output\"\nassert solution(\"2 1 0 1\\n0 1 1000 100\") == \"1000 100000\\n\", \"Incorrect output\""
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\").read()) == \"4 140\\n1000 100000\\n\""
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10\") == \"4 140\\n\", \"Test 1\"\n\nassert solution(\"2 1 0 1\\n0 1 1000 100\") == \"1000 100000\\n\", \"Test 2\"\n\nassert solution(\"\") == \"\", \"Test 3\"\n\nassert solution(\"2 2 0 1\\n0 1 1 1\") == \"2 1\\n\", \"Test 4\"\n\nassert solution(\"2 2 1 1\\n0 1 1 1\") == \"1 2\\n\", \"Test 5\""
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2"
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\\n\"\nassert solution(stdin) == \"impossible\\n\""
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"100 7\\n1 50\\n50 70\\n70 90\\n90 40\\n20 60\\n60 80\\n80 20\") == \"3\""
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(read_input_from_file()) == \"3\\n\""
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"100 7\\n1 50\\n50 70\\n70 90\\n90 40\\n20 60\\n60 80\\n80 20\") == \"3\\n\"\nassert solution(\"8 2\\n8 3\\n5 7\") == \"impossible\\n\"\nassert solution(\"\") == \"impossible\\n\""
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"impossible\""
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"impossible\""
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"100 7\\n1 50\\n50 70\\n70 90\\n90 40\\n20 60\\n60 80\\n80 20\") == \"3\\nimpossible\\n\"\n\nassert solution(stdin=\"8 2\\n8 3\\n5 7\") == \"impossible\\n\""
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input1) == \"3\"\nassert solution(sample_input2) == \"impossible\""
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '3'"
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"3\""
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(120) == 5\nassert solution(51090942171709440000) == 21\n"
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(120) == 5, \"Test 1 Failed\"\nassert solution(51090942171709440000) == 21, \"Test 2 Failed\""
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(120) == 5, \"Incorrect Output: 120! = 1 * 2 * 3 * \\ldots * 120 = 51090942171709440000\"\nassert solution(51090942171709440000) == 21, \"Incorrect Output
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(120) == 5, \"Expected Output: 5, Actual Output: \" + str(solution(120))\nassert solution(51090942171709440000) == 21, \"Expected Output: 21, Actual Output: \" + str(solution(51090942171709440000))"
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"120\") == \"5\", \"Test Case 1 failed\"\nassert solution(\"51090942171709440000\") == \"21\", \"Test Case 2 failed\""
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(120) == 5\nassert solution(51090942171709440000) == 21"
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"120\") == \"5\", \"Test 1 failed\"\nassert solution(\"51090942171709440000\") == \"21\", \"Test 2 failed\""
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(120) == 5, \"Test 1\"\nassert solution(51090942171709440000) == 21, \"Test 2\"\n\nfrom typing import List"
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"120\") == \"5\"\nassert solution(\"51090942171709440000\") == \"21\""
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(120) == 5, \"Your solution is incorrect. The factorial of 120 is 120! and your function should return 5.\"\nassert solution(51090942171709440000) == 21, \"Your solution is incorrect. The factorial of 51090942171709440000 is 51090942171709440000! and your function should return 21.\""
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 1 2\") == \"45\"\nassert solution(\"3 3 3\") == \"10\""
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"45\""
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"45\""
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 1 2\") == \"45\"\nassert solution(\"3 3 3\") == \"10\""
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 1 2\") == 45, \"Output not as expected\"\nassert solution(\"3 3 3\") == 10, \"Output not as expected\""
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Test failed: {input()}!= {output}\""
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 1 2\") == 45\nassert solution(\"3 3 3\") == 10\n"
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('10 1 2') == 45\nassert solution('3 3 3') == 10"
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 1 2\") == 45\nassert solution(\"3 3 3\") == 10\n"
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution\nassert solution() == 45\n\nsolution = lambda N, M, K: sum(binomial(N, k) for k in range(1, K+1))\n\nassert solution(10, 1, 2) == 45\nassert solution(3, 3, 3) == 10\n\nfrom typing import List"
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\") == \"18\\n\"\nassert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\") == \"20\\n\""
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"impossible\""
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5') == '20'"
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n\") == \"20\""
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n') == 'impossible\\n'"
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n\") == \"impossible\""
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n\") == \"18\"\nassert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n\") == \"20\"\nassert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n\") == \"impossible\""
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"impossible\\n\"\n"
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"impossible\""
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"impossible\""
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"3\\n\"\nassert solution() == \"11\\n\"\n"
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"\"\"\n"
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(example_input1) == \"3\"\nassert solution(example_input2) == \"11\"\n\nfrom typing import List"
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 5 10\\n7 8 2\\n\") == \"3\\n\"\nassert solution(\"3\\n-1 -1 -1\\n5 5 5\\n10 10 10\\n\") == \"11\\n\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"sample_input.txt\").read()) == \"3\\n\"\n"
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n    2\n    1 5 10\n    7 8 2\n    ''') == '3\\n'\n\nassert solution('''\n    3\n    1 -1 -1\n    5 5 5\n    10 10 10\n    ''') == '11\\n'"
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n1 5 10\\n7 8 2\") == \"3\\n\"\nassert solution(\"3\\n-1 -1 -1\\n5 5 5\\n10 10 10\") == \"11\\n\""
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1 5 10\\n7 8 2\") == \"3\\n\"\nassert solution(\"3\\n-1 -1 -1\\n5 5 5\\n10 10 10\") == \"11\\n\""
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 5 10\\n7 8 2\") == \"3\"\nassert solution(\"3\\n-1 -1 -1\\n5 5 5\") == \"11\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"3\\n11\\n\"\n"
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == f\"2\"\nprint(\"All test cases passed successfully!\")"
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\"\n"
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1\\n110\\n011\\n4 2\\n1000\\n1000\\n0000\\n0010\") == \"2\\n\""
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1\\n110\\n011\") == \"2\"\nassert solution(\"4 2\\n1000\\n1000\\n0000\\n0010\") == \"0\""
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 0, \"Please implement the solution in a function named solution.\""
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1\\n110\\n011\\n4 2\\n1000\\n1000\\n0000\\n0010\\n\") == \"2\""
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"0\", \"Your solution is incorrect\""
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input1) == output1, f\"Input {input1}, Output {output1}\"\nassert solution(input2) == output2, f\"Input {input2}, Output {output2}\""
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n2\\n\") == \"1\\n\"\nassert solution(\"3\\n1 3 2\\n2\\n\") == \"5\\n\""
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input1) == \"1\"\nassert solution(input2) == \"5\""
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\").read()) == \"1\\n\"\nassert solution(open(\"input_2.txt\").read()) == \"5\\n\""
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Your solution is incorrect. Expected output: {expected_output}, but got: {solution(input())}\""
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n2\\n\") == \"1\"\nassert solution(\"3\\n1 3 2\\n2\\n\") == \"5\""
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n1 2 3\\n3\\n1 3 2\\n2\\n') == '1\\n','sample output 1'\nassert solution('3\\n1 3 2\\n2\\n') == '5\\n','sample output 2'"
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1\""
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), \"Incorrect output\""
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n2\\n1 3 2\\n2\") == 1"
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"1 100 20\") == \"0\"\nassert solution(stdin=\"10 10 1\") == \"19\""
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"0\""
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin.readline().strip()) == '0', \"Expected 0, got %s\" % solution(stdin.readline().strip())\n\nimport time\nstart_time = time.time()"
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"1 100 20\") == \"0\""
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=input()) == '0'"
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=input()) == '0'\n"
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin: str) == \"0\", \"No output expected.\"\n"
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Output the worst-case time to find the crashing line when using an optimal strategy.\""
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == \"The program crashed at the line number 0.\""
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abc\\ndef\\nghi\\n\") == \"abc\\ndef\\n\"\nassert solution(\"abc\\ndef\\nghi\\nx\") == \"abc\\ndef\\nghi\"\nassert solution(\"abc\\ndef\\nghi\\nx\\n\") == \"abc\\ndef\\nghi\\nx\"\nassert solution(\"abc\\ndef\\nghi\\nx\\nx\\n\") == \"abc\\ndef\\nghi\\nx\"\nassert solution(\"abc\\ndef\\nghi\\nx\\nx\\nx\\n\") == \"abc\\ndef\\nghi\\nx\\nx\"\nassert solution(\"abc\\ndef\\nghi\\nx\\nx\\nx\\nx\\n\") == \"abc\\ndef\\nghi\\nx\\nx\\nx\"\nassert solution(\"abc\\ndef\\nghi\\nx\\nx\\nx\\nx\\nx\\n\") == \"abc\\ndef\\nghi\\nx\\nx\\nx\\nx\"\nassert solution(\"abc\\ndef\\nghi\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\n\") == \"abc\\ndef\\nghi\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\n\"\nassert solution(\"abc\\ndef\\nghi\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx\\nx"
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"classa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0\") == \"c\"\n\nassert solution(\"a b c d\\na 1\\nimport d, b, c\\nb 2\\nimport d\\nimport c\\nc 1\\nimport c\\nd 0\") == \"c\"\n\nassert solution(\"1 2 3 4 5\\n1 1\\nimport 1, 2, 3, 4, 5\") == \"SHIP IT\"\n\nassert solution(\"1\\n1\\n1\") == \"SHIP IT\"\n\nassert solution(\"import a, b, c, d, e, f\\nimport a\\nimport b\\nimport c\\nimport d\\nimport e\\nimport f\\n\") == \"SHIP IT\"\n\nassert solution(\"import a, b, c, d, e\\nimport a\\nimport b\\nimport c\\nimport d\\nimport e\\n\") == \"SHIP IT\"\n\nassert solution(\"import a\\nimport b\\nimport c\\nimport d\\nimport e\\nimport f\\nimport g\\nimport h\\nimport i\\n\") == \"SHIP IT\"\n\nassert solution(\"import a\\nimport b\\nimport c\\nimport d\\nimport e\\nimport f\\nimport g\\nimport h\\nimport i, j\\n\") == \"SHIP IT\"\n\nassert solution(\"import a\\nimport b\\nimport c\\nimport d\\nimport e\\nimport f\\nimport g\\nimport h\\nimport i, j, k\\n\") == \"SHIP IT\"\n\nassert solution(\"import a, b, c, d, e, f\\nimport a, b, c\\nimport d, e, f\\nimport g, h, i, j\\n\") == \"SHIP IT\"\n\nassert solution(\"import a, b, c, d, e, f, g, h, i, j, k\\nimport a, b, c, d, e, f, g, h, i, j, k\\n\") == \"SHIP IT\"\n\nassert solution(\"import a, b, c, d, e, f, g, h, i, j, k, l\\nimport a, b, c, d, e, f, g, h, i, j, k, l\\n\") == \"SHIP IT\"\n\nassert solution(\"import a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z\\nimport a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z\\n\") == \"SHIP IT\""
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"classa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0\") == \"c\", \"Test 1 Failed\"\nassert solution(\"classa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0\") == \"SHIP IT\", \"Test 2 Failed\"\n\nclass Solution:\n    def shortest_cycle(self, import_lines: List[str]) -> str:\n        import_names = set(line.split(\", \")[0] for line in import_lines)\n        visited = set()\n        visited.add(\"start\")\n        cycle = []\n        stack = []\n\n        def dfs(name):\n            nonlocal cycle, visited, stack\n            visited.add(name)\n            if name not in visited:\n                stack.append(name)\n                while stack:\n                    current = stack.pop()\n                    if current in import_names:\n                        return current, stack\n                    cycle.append(current)\n                    for import_name in import_lines:\n                        if import_name.startswith(current + \", \"):\n                            dfs(import_name.split(\", \")[0])\n                            return current, stack\n                stack.pop()\n                cycle.append(current)\n                return current, stack\n\n        def find_cycle(start):\n            nonlocal cycle\n            visited = set()\n            visited.add(start)\n            while stack:\n                current = stack.pop()\n                if current == \"start\":\n                    return cycle\n                visited.add(current)\n                for import_name in import_lines:\n                    if import_name.startswith(current + \", \"):\n                        stack.append(import_name.split(\", \")[0])\n            return cycle\n\n        for line in import_lines:\n            if line.startswith(\"import\"):\n                line_names = line.split(\", \")[0].split()\n                for name in line_names:\n                    dfs(name)\n\n        if \"start\" in visited:\n            return \"SHIP IT\"\n        return \" \".join(cycle)"
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"SHIP IT\"\nprint(\"OK\")"
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"SHIP IT\"\n"
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"SHIP IT\"\nassert solution(stdin) == \"c\""
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == \"SHIP IT\"\nassert solution(sample_input_2) == \"c\""
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"c\"\n"
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('a b c d') == 'c'\nassert solution('a 1\\nimport d, b, c\\nb 2\\nimport d\\nimport c\\nc 1\\nimport c\\nd 0') == 'SHIP IT'\nassert solution('classa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0') == 'SHIP IT'"
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\na b c d\\na 1\\nimport d, b, c\\nb 2\\nimport d\\nimport c\\nc 1\\nimport c\\nd 0') == ['c']"
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"5+3+x\\n9 10\"\n) == \"1\", \"Incorrect output\"\n\nassert solution(\n    \"20+3+x\\n0 5\"\n) == \"2\", \"Incorrect output\""
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5+3+x\\n9 10\") == \"1\"\nassert solution(\"20+3+x\\n0 5\") == \"2\""
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5+3+x\\n9 10\") == \"1\"\nassert solution(\"20+3+x\\n0 5\") == \"2\""
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5+3+x\") == \"1\", \"Solution for 5+3+x must be 1\"\nassert solution(\"9 10\") == \"1\", \"Solution for 9 10 must be 1\"\nassert solution(\"20+3+x\") == \"2\", \"Solution for 20+3+x must be 2\""
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5+3+x\\n9 10\") == \"1\\n\"\nassert solution(\"20+3+x\\n0 5\") == \"2\\n\"\n"
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input(\"5+3+x\\n9 10\\n\")) == \"1\\n\"\nassert solution(input(\"20+3+x\\n0 5\\n\")) == \"2\\n\"\nassert solution(input(\"5+3+x\\n-5\\n\")) == \"Error: The expression is invalid.\\n\""
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5+3+x\\n9 10\") == \"1\", \"Incorrect output for sample input 1\"\nassert solution(\"20+3+x\\n0 5\") == \"2\", \"Incorrect output for sample input 2\""
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5+3+x\\n9 10\") == \"1\"\nassert solution(\"20+3+x\\n0 5\") == \"2\""
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"5+3+x\n9 10\n\"\"\") == \"1\\n\"\n\nassert solution(\n\"\"\"20+3+x\n0 5\n\"\"\") == \"2\\n\""
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5+3+x\\n9 10\") == \"1\"\nassert solution(\"20+3+x\\n0 5\") == \"2\"\n"
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 10\\n0 15\\n5 20\") == \"yes\"\nassert solution(\"2 10\\n1 15\\n0 20\") == \"no\""
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 10\\n0 15\\n5 20\\n\") == \"yes\\n\"\nassert solution(\"2 10\\n1 15\\n0 20\\n\") == \"no\\n\""
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == \"yes\"\nassert solution(sample_input_2) == \"no\""
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 10\\n0 15\\n5 20\") == \"yes\"\nassert solution(\"2 10\\n1 15\\n0 20\") == \"no\""
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 15\\n1 15\\n0 20\") == \"yes\"\nassert solution(\"10 15\\n1 15\\n0 20\") == \"no\""
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 'yes'"
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 10\\n0 15\\n5 20\") == \"yes\"\nassert solution(\"2 10\\n1 15\\n0 20\") == \"no\""
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"yes\""
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 10\\n0 15\\n5 20\\n') == 'yes\\n'\nassert solution('2 10\\n1 15\\n0 20\\n') == 'no\\n'"
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 10\\n0 15\\n5 20\\n') == 'yes\\n'\nassert solution('2 10\\n1 15\\n0 20\\n') == 'no\\n'"
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"0.25\"\nassert solution() == \"0\""
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == expected_output, f\"Solution is incorrect. Expected {expected_output}, but got {solution}\""
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"0.25\\n\", \"Solution not correct!\""
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '0.25'\nassert solution(solution=lambda: input().strip()) == '0'"
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 4 4\\n3\\n2 green\\n18 yellow\\n34 red\\n5 green') == '0.25\\n'"
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input1) == output1, \"Test case 1 failed\"\nassert solution(input2) == output2, \"Test case 2 failed\"\n\ninput1 = \"\"\"\n4 4 4\n3\n2 green\n18 yellow\n34 red\n5 green\n\"\"\"\n\ninput2 = \"\"\"\n4 4 4\n4\n2 green\n6 yellow\n10 red\n14 green\n4 red\n\"\"\"\n\noutput1 = \"0.25\"\noutput2 = \"0\""
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input1) == sample_output1, \"sample_input1 is not correct.\"\nassert solution(sample_input2) == sample_output2, \"sample_input2 is not correct.\"\n\nsample_input1 = '''\n4 4 4\n3\n2 green\n18 yellow\n34 red\n5 green\n'''\n\nsample_output1 = '''\n0.25\n'''\n\nsample_input2 = '''\n4 4 4\n4\n2 green\n6 yellow\n10 red\n14 green\n4 red\n'''\n\nsample_output2 = '''\n0\n'''"
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4 4\\n3\\n2 green\\n18 yellow\\n34 red\\n5 green\") == \"0.25\"\nassert solution(\"4 4 4\\n4\\n2 green\\n6 yellow\\n10 red\\n14 green\\n4 red\") == \"0\""
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 4 4\\n3\\n2 green\\n18 yellow\\n34 red\\n5 green\\n') == '0.25\\n'\nassert solution('4 4 4\\n4\\n2 green\\n6 yellow\\n10 red\\n14 green\\n4 red\\n') == '0\\n'"
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected, f\"Test Case {t+1} failed: expected {expected}, got {solution(stdin)}\""
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 1, \"The solution is incorrect!\""
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Input:\\n{input()}\\n\\nOutput:\\n{output()}\""
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 7\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\") == \"3\"\nassert solution(\"6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\") == \"inf\"\n"
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 7\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\") == \"3\"\nassert solution(\"6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\\n4 3\") == \"inf\""
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"123456789\\n123456789\\n\") == 3\nassert solution(\"987654321\\n987654321\\n\") == 3\nassert solution(\"123456789\\n987654321\\n\") == 3\nassert solution(\"123456789\\n123456789\\n\") == 0\nassert solution(\"123456789\\n123456789\\n123456789\\n\") == 0\nassert solution(\"123456789\\n123456789\\n123456789\\n123456789\\n\") == 0"
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input1) == \"3\", \"Incorrect output for sample input 1\"\nassert solution(sample_input2) == \"inf\", \"Incorrect output for sample input 2\""
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 7\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\\n\") == \"3\""
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 7\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\") == 3\nassert solution(\"6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\") == \"inf\""
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 7\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\\n\") == \"3\"\nassert solution(\"6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\\n\") == \"inf\""
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output() for input, output in zip(sample_inputs, sample_outputs)"
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"The output {solution(input())} does not match the expected output {output}\""
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"The maximum number of participants that can join the excursion is 2.\""
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"4\"\nassert solution(stdin) == \"2\"\n\nfrom typing import List"
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\nfor i in range(int(stdin.readline())):\n    a = list(map(int, stdin.readline().split()))\n    b = list(map(int, stdin.readline().split()))\n    assert solution(a, b) == expected[i]\n"
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"4\\n\", \"Sample Input 1\"\nassert solution(stdin) == \"2\\n\", \"Sample Input 2\""
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n1 2 3 4\\n\") == 4\nassert solution(\"12 3\\n2 3 4 5 6 7 4 7 8 8 12 12\\n\") == 2"
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\n1 2 3 4\\n\") == \"4\\n\"\nassert solution(\"12 3\\n2 3 4 5 6 7 4 7 8 8 12 12\\n\") == \"2\\n\""
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 4\\n1 2 3 4') == '4\\n'\nassert solution('12 3\\n2 3 4 5 6 7 4 7 8 8 12 12') == '2\\n'"
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r')) == '4\\n'\nassert solution(open('example1.txt', 'r')) == '4\\n'\nassert solution(open('example2.txt', 'r')) == '2\\n'"
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n1 2 3 4\\n\") == \"4\\n\"\nassert solution(\"12 3\\n2 3 4 5 6 7 4 7 8 8 12 12\\n\") == \"2\\n\""
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\nhoose\\nhose\\nnose\\nnoises\\nnoise\\n') == 'hoose\\nnoises\\nnoise\\n'\nassert solution('4\\nhose\\nhoose\\oose\\n') == 'hoose\\nmoose\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == [\"hoose\", \"noises\", \"noise\"]"
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2"
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output, f\"Solution does not match expected output. Input:\\n{stdin}\\nExpected Output:\\n{expected_output}\\nGot Output:\\n{solution(stdin)}\""
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\nhoose\\nhose\\nose\\noises\\noise\\n\") == [\"hoose\", \"noises\", \"noise\"]\nassert solution(\"4\\nhose\\nhoose\\oose\\moose\\n\") == [\"hoose\", \"moose\", \"def\"]"
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\nhoose\\nhose\\nnose\\nnoises\\nnoise\\n\") == [\"hoose\", \"noises\", \"noise\"]\nassert solution(\"4\\nhose\\nhoose\\oose\\moose\\n\") == [\"hoose\", \"moose\"]\n\nfrom typing import List"
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 'hoose\\nnoises\\nnoise'\nassert solution() == 'hoose\\nmoose\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"hoose\\nnoises\\nnoise\\n\""
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input(1)) == expected_output(1)\nassert solution(sample_input(2)) == expected_output(2)"
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\nhoose\\n\\nhose\\n\\nnose\\n\\nnoises\\n\\nnoise\\n\") == [\"hoose\", \"noises\", \"noise\"]\nassert solution(\"4\\nhose\\n\\nhoose\\n\\nose\\n\\n\") == [\"hose\", \"nose\", \"ose\"]\nassert solution(\"3\\nnose\\n\\nnoises\\n\\nnoise\\n\") == []\nassert solution(\"5\\nhoose\\nhose\\nnose\\nnoises\\nnoise\\n\") == [\"hoose\", \"noises\", \"noise\"]\nassert solution(\"4\\nhose\\nhoose\\nose\\nmoose\\n\") == [\"hose\", \"nose\", \"ose\"]\nassert solution(\"3\\nnose\\nnoises\\nnoise\\n\") == [\"noses\", \"noise\"]\nassert solution(\"5\\nhoose\\nhose\\nnose\\nnoises\\nnoise\\n\") == [\"hoose\", \"noises\", \"noise\"]\nassert solution(\"4\\nhose\\nhoose\\nose\\nmoose\\n\") == [\"hose\", \"nose\", \"ose\"]\nassert solution(\"3\\nnose\\nnoises\\nnoise\\n\") == [\"noses\", \"noise\"]"
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 1\\n3\\n2 3\\n4') == '2\\n2\\n5\\n'"
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1\\n3\\n\") == \"2\\n2\\n5\\n\", \"Sample Input 1\"\nassert solution(\"2 3\\n4\\n\") == \"0\\n16\\n8\\n\", \"Sample Input 2\"\n"
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1\\n3\") == \"2\\n2\\n5\\n\"\nassert solution(\"2 3\\n4\") == \"0\\n16\\n8\\n\""
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2"
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Output: {solution(input())}, Expected: {expected}\""
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\\n3\\n\") == \"2\\n2\\n5\\n\"\nassert solution(\"2 3\\n4\\n\") == \"0\\n16\\n8\\n\""
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1\\n3\\nSample Input 1\\nSample Output 1\\n2\\n2\\n5\\n\") == \"2\\n2\\n5\\n\"\nassert solution(\"2 3\\n4\\nSample Input 2\\nSample Output 2\\n0\\n16\\n8\\n\") == \"0\\n16\\n8\\n\""
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\\n2\\n5\""
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1\\n3\\n\") == \"2\\n2\\n5\\n\"\nassert solution(\"2 3\\n4\\n\") == \"0\\n16\\n8\\n\""
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\\n3\") == \"2\\n2\\n5\"\nassert solution(\"2 3\\n4\") == \"0\\n16\\n8\"\n"
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Sample Input 1\") == \"44.72135955\"\nassert solution(\"Sample Input 2\") == \"68.52419365\"\n\nfrom typing import List"
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 68.52419365, \"Incorrect result\""
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1\\n50 45 45\\n55 40 30') == '44.72135955'\nassert solution('2\\n50 45 45\\n55 40 30') == '68.52419365'"
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == f'{output}', f'Expected {output}, got {solution(stdin)}'\n"
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"Output the minimum time required to reach the end of the road.\\nMinimum time: 68.52419365\""
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"Output the minimum time required to reach the end of the road.\""
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\nSample Output 1\\n2\\n50 45 45\\nSample Output 2\\n1\\n\") == \"44.72135955\\n68.52419365\\n\"\nassert solution(\"2\\nSample Output 1\\n2\\n50 45 45\\nSample Output 2\\n1\\n\") == \"68.52419365\\n\"\nassert solution(\"3\\nSample Output 1\\n1 2 3\\nSample Output 2\\n1\\n\") == \"44.72135955\\n\"\nassert solution(\"4\\nSample Output 1\\n1 2 3 4\\nSample Output 2\\n1\\n\") == \"44.72135955\\n\""
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"68.52419365\", \"Testcase not passed\""
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"Test failed for sample input {stdin}\"\nfor test_case in range(int(input()), int(input()) + 1):\n    n = int(input())\n    schedule = list(map(int, input().split()))\n\n    start_time = 0\n    time_taken = 0\n\n    # Iterate through the schedule\n    for i, (t, g, r) in enumerate(schedule):\n        # Calculate the time taken to switch the lights\n        if i > 0 and t - r < schedule[i-1][1] and t - r < schedule[i-1][1] - schedule[i-2][1]:\n            time_taken += schedule[i-2][1]\n\n        # Update the start time if the current light is green\n        if t - r >= schedule[i-1][1] - schedule[i-2][1]:\n            start_time = max(start_time, t)\n\n    print(round(time_taken, 6))"
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n\") == \"44.72135955\"\nassert solution(\"2\\n50 45 45\") == \"68.52419365\""
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3 1 5\\n1 2\\n\") == \"1\\n3\\n2\\n\"\nassert solution(\"3 4 2 3\\n1 3 1\\n\") == \"1\\n1\\n0\\n2\\n\""
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3 1 5\\n1 2\\n3 1\") == \"1\\n3\\n2\"\nassert solution(\"3 4 2 3\\n1 3 1\\n\") == \"1\\n1\\n0\\n2\""
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_1) == \"1\\n3\\n2\\n\", \"The correct solution is not provided for the given example 1.\"\nassert solution(input_2) == \"1\\n1\\n0\\n2\\n\", \"The correct solution is not provided for the given example 2.\""
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output, f\"Solution {solution(stdin)} does not match expected output {expected_output}\""
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    2 3 1 5\n    1 2\n    \"\"\"\n) == '1\\n3\\n2\\n'\n\nassert solution(\n    \"\"\"\n    3 4 2 3\n    1 3 1\n    \"\"\"\n) == '1\\n1\\n0\\n2\\n'"
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1\\n3\\n2\\n\"\n\nsolution = \"\"\"\nimport math"
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 3 1 5\\n1 2\\n') == '1\\n3\\n2\\n'\nassert solution('3 4 2 3\\n1 3 1\\n') == '1\\n1\\n0\\n2\\n'"
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3 1 5\\n1 2\\n\") == \"1\\n3\\n2\\n\"\nassert solution(\"3 4 2 3\\n1 3 1\\n\") == \"1\\n1\\n0\\n2\\n\""
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('Input\\n2 3 1 5\\n1 2\\nOutput\\n1\\n3\\n2\\n') == 'Output\\n1\\n3\\n2\\n'"
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Your code is incorrect. Please see the examples provided in the problem statement.\"\n"
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 5\\n1 1\") == \"3\"\nassert solution(\"5 3\\n2 2 3 2 2\") == \"2\""
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution"
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 5\\n1 1\\n\") == \"3\\n\"\nassert solution(\"5 3\\n2 2 3 2 2\\n\") == \"2\\n\""
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 5\\n1 1\\nSample Output 1:3\\n\\nSample Input 2:5 3\\n2 2 3 2 2\\nSample Output 2:2') == '3\\n'\n\nfrom typing import List"
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"3\\n\", \"Test case 1 failed\"\nassert solution() == \"2\\n\", \"Test case 2 failed\""
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin='Sample Input 1') == '3\\n'\nassert solution(stdin='Sample Input 2') == '2\\n'"
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 5\\n1 1\\n\") == \"3\\n\"\nassert solution(\"5 3\\n2 2 3 2 2\\n\") == \"2\\n\""
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(solution_input1) == \"3\\n\"\nassert solution(solution_input2) == \"2\\n\""
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 5\\n1 1\\n\") == \"3\\n\"\nassert solution(\"5 3\\n2 2 3 2 2\\n\") == \"2\\n\""
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n100 100\\n50 50\\n\") == \"50\"\nassert solution(\"2\\n0 50\\n50 0\\n\") == \"25\""
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(str(input())) == \"50\""
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"50\"\n"
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Solution: {solution(input())}, Expected Output: {output()}\""
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"50\"\n\nfrom typing import List"
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n    2\n    100 100\n    50 50\n    ''') == '50'\n\nassert solution('''\n    2\n    0 50\n    50 0\n    ''') == '25'"
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(solution) == 50"
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n100 100\\n50 50\") == \"50\\n\"\nassert solution(\"2\\n0 50\\n50 0\") == \"25\\n\""
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input1) == \"50\"\nassert solution(sample_input2) == \"25\""
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution([2, 100, 200, 2010]) == \"160\\n\""
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n100\\n200\") == \"160\"\nassert solution(\"2\\n100\\n200\\n2010\") == \"250\""
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n100\\n200\\n3\\n100\\n200\\n2010\") == \"250\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\") == \"145\\n\""
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == output\n"
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n100\\n200\\n3\\n100\\n200\\n2010\") == \"160\""
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\nfor i, expected in enumerate(test_cases):\n    assert solution(stdin) == expected, f\"Test case {i+1} failed.\""
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '250', 'Expected output: 250, got:'+ solution()\n"
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected_output, f\"For the given input, the output is '{solution(stdin)}', but expected output is '{expected_output}'.\""
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n100\\n200\\n2010\") == \"250\""
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Input\") == \"Output\""
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n0 1 1\\n2 3 1\\n\") == \"2\\n\"\nassert solution(\"5 5\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n\") == \"0\\n\""
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\n0 1 1\\n2 3 1\\n\") == \"2\\n\"\nassert solution(\"5 5\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n\") == \"0\\n\""
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 2\\n0 1 1\\n2 3 1\\n') == '2\\n'\nassert solution('5 5\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n') == '0\\n'"
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n0 1 1\\n2 3 1\\n\\n5 5\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n\\n\") == \"2\"\nassert solution(\"4 3\\n1 2 1\\n2 3 2\\n3 4 1\\n4 0 2\\n\\n\") == \"0\"\nassert solution(\"4 5\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n\") == \"0\""
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n0 1 1\\n2 3 1\\n\\n5 5\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n\\n\") == \"2\"\n\nassert solution(\"5 5\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n\\n\") == \"0\""
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\n0 1 1\\n2 3 1\\n\") == \"2\"\nassert solution(\"5 5\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n\") == \"0\""
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 2\\n0 1 1\\n2 3 1') == '2\\n'\nassert solution('5 5\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3') == '0\\n'"
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\""
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 0"
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n0 1 1\\n2 3 1\\n\") == 2\nassert solution(\"5 5\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n\") == 0"
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 3\\n3 3 2 1\\n3 3 3\\nSample Input 1:\\n4 3\\n3 3 2 1\\n3 3 3\\nSample Output 1:\\n1 1\\n1 2\\n2 3 4\\n\\nSample Input 2:\\n4 2\\n3 3 2 2\\n6 3\\nSample Output 2:\\n-1\\ndef solution(stdin: str) -> str:\\n    pass\\n') == '1 1\\n1 2\\n2 3 4\\n-1\\n'\nassert solution('4 2\\n3 3 2 2\\n6 3\\nSample Input 2:\\n4 2\\n3 3 2 2\\n6 3\\nSample Output 2:\\n-1\\ndef solution(stdin: str) -> str:\\n    pass\\n') == '-1\\n'\n"
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 3\\n3 3 2 1\\n3 3 3\\n') == '1 1\\n1 2\\n2 3 4\\n'\nassert solution('4 2\\n3 3 2 2\\n6 3\\n') == '-1'\nassert solution('4 4\\n6 4 1 1\\n6 2\\n3 2 3\\n') == '1 1\\n1 2\\n2 3\\n'\n"
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n3 3 2 1\\n3 3 3\\n\") == \"1 1\\n1 2\\n2 3 4\\n\"\nassert solution(\"4 2\\n3 3 2 2\\n6 3\\n\") == \"-1\\n\""
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == expected\n"
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1 1\\n1 2\\n2 3 4\"\nassert solution() == \"2\\n4 1\"\nassert solution() == \"2\\n3 1\"\nassert solution() == \"-1\""
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '1 1\\n1 2\\n2 3 4\\n'\nassert solution() == '1\\n'\nassert solution() == '1\\n2\\n'\nassert solution() == '1\\n2\\n3\\n4\\n'\nassert solution() == '-1\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"\"\"1 1\n1 2\n2 3 4\n\"\"\"\n\nassert solution(stdin) == \"\"\"-1\n"
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1 1\\n1 2\\n2 3 4\""
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n3 3 2 1\\n3 3 3\\n\") == \"1 1\\n1 2\\n2 3 4\\n\"\nassert solution(\"4 2\\n3 3 2 2\\n6 3\\n\") == \"-1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3 10\\n0 0 D\\n10 1 L\\n\") == \"10.0\\n10.0\\n0.0\\n\"\nassert solution(\"4 3 7\\n1 0 D\\n3 0 D\\n4 1 L\\n6 2 D\\n\") == \"10.0\\n4.0\\n1.0\\n\""
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"The solution is incorrect. Expected output: {expected_output}, but got: {solution(input())}\""
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"10.0\\n10.0\\n0.0\""
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_data) == expected_output, f\"Test case {index+1} failed. Expected output: {expected_output}, got {solution(input_data)}\"\nfor index, input_data in enumerate(test_cases):\n    expected_output = output_data[index]\n    if index == 0:\n        solution(input_data)\n        assert solution(input_data) == expected_output, f\"Test case {index+1} failed. Expected output: {expected_output}, got {solution(input_data)}\"\n    else:\n        assert solution(input_data) == expected_output, f\"Test case {index+1} failed. Expected output: {expected_output}, got {solution(input_data)}\""
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3 10\\n0 0 D\\n10 1 L\") == \"10.0\\n10.0\\n0.0\"\nassert solution(\"4 3 7\\n1 0 D\\n3 0 D\\n4 1 L\\n6 2 D\") == \"10.0\\n4.0\\n1.0\""
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 3 10\\n0 0 D\\n10 1 L\\n') == '10.0\\n10.0\\n0.0\\n'\nassert solution('4 3 7\\n1 0 D\\n3 0 D\\n4 1 L\\n6 2 D\\n') == '10.0\\n4.0\\n1.0\\n'"
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3 10\\n0 0 D\\n10 1 L\\n\") == \"10.0\\n10.0\\n0.0\\n\"\nassert solution(\"4 3 7\\n1 0 D\\n3 0 D\\n4 1 L\\n6 2 D\\n\") == \"10.0\\n4.0\\n1.0\\n\""
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2"
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3 10\\n0 0 D\\n10 1 L\") == \"10.0\\n10.0\\n0.0\\n\"\nassert solution(\"4 3 7\\n1 0 D\\n3 0 D\\n4 1 L\\n6 2 D\") == \"10.0\\n4.0\\n1.0\\n\""
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3 10\\n0 0 D\\n10 1 L\") == \"10.0\\n10.0\\n0.0\\n\"\nassert solution(\"4 3 7\\n1 0 D\\n3 0 D\\n4 1 L\\n6 2 D\") == \"10.0\\n4.0\\n1.0\\n\""
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\""
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\"\n"
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\""
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\""
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\""
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('ex eoii jpxbmx cvz uxju sjzzcn jzz') == 'we will avenge our dead parrot arr'\nassert solution('wl jkd') == 'Impossible'"
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\""
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\"\n\nfrom typing import List"
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\""
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\"\n"
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('Hamburg Bremen\\n3\\nHamburg Bremen 15 68 10 5\\nHamburg Bremen 46 55 50 60\\nBremen Frankfurt 14 226 10 120') == 68.3\nassert solution('Amsterdam Rotterdam\\n1\\nAmsterdam Utrecht 10 22 5 10') == 'IMPOSSIBLE'"
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Hamburg Bremen\\n3\\nHamburg Bremen 15 68 10 5\\nHamburg Bremen 46 55 50 60\\nBremen Frankfurt 14 226 10 120\") == 68.3, \"Invalid output\"\nassert solution(\"Amsterdam Rotterdam\\n1\\nAmsterdam Utrecht 10 22 5 10\") == \"IMPOSSIBLE\", \"Invalid output\""
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed. Expected output: {expected_output}, but got {solution(input())}.\""
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Hamburg Bremen\\n3\\nHamburg Bremen 15 68 10 5\\nHamburg Bremen 46 55 50 60\\nBremen Frankfurt 14 226 10 120\") == 68.3"
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Hamburg Bremen\\n3\\nHamburg Bremen 15 68 10 5\\nHamburg Bremen 46 55 50 60\\nBremen Frankfurt 14 226 10 120\\n\", ) == 68.3\nassert solution(\"Amsterdam Rotterdam\\n1\\nAmsterdam Utrecht 10 22 5 10\\n\", ) == \"IMPOSSIBLE\""
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Hamburg Bremen\\n3\\nHamburg Bremen 15 68 10 5\\nHamburg Bremen 46 55 50 60\\nBremen Frankfurt 14 226 10 120\") == 68.3\nassert solution(\"Amsterdam Rotterdam\\n1\\nAmsterdam Utrecht 10 22 5 10\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Hamburg Bremen\") == 68.3\nassert solution(\"Amsterdam Rotterdam\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == # your code here"
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Hamburg Bremen\\n3\\nHamburg Bremen 15 68 10 5\\nHamburg Bremen 46 55 50 60\\nBremen Frankfurt 14 226 10 120\") == 68.3\nassert solution(\"Amsterdam Rotterdam\\n1\\nAmsterdam Utrecht 10 22 5 10\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('Hamburg Bremen\\n3\\nHamburg Bremen 15 68 10 5\\nHamburg Bremen 46 55 50 60\\nBremen Frankfurt 14 226 10 120') == '68.3'\nassert solution('Amsterdam Rotterdam\\n1\\nAmsterdam Utrecht 10 22 5 10') == 'IMPOSSIBLE'"
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n*-*.*\\n|.|.|\\n*.*-*\\n|...|\\n*.*.*\") == 3\nassert solution(\"2\\n*.*\\n...\\n*.*\") == 4"
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '3'"
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == 'Output goes here'"
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n*-*.*\\n|.|.|\\n*.*-*\\n|...|\\n*.*.*\\n') == '3\\n'\nassert solution('2\\n*.*\\n...\\n*.*\\n') == '4\\n'"
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\n*-*.*\n|.|.|\n*.*-*\n|...|\n*.*.*') == 3\n\nassert solution('2\n*.*\n...\n*.*') == 4"
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n*-*.*\\n|.|.|\\n*.*-*\\n|...|\\n*.*.*\\n\") == \"3\"\nassert solution(\"2\\n*.*\\n...\\n*.*\\n\") == \"4\"\n\nfrom typing import List"
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Test case {index+1} failed.\""
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution( \"\"\"\n3\n*-*.*\n|.|.|\n*.*-*\n|...|\n*.*.*\n\"\"\") == \"3\"\n\nassert solution( \"\"\"\n2\n*.*\n...\n*.*\n\"\"\") == \"4\""
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n*-*.*\\n|.|.|\\n*.*-*\\n|...|\\n*.*.*\") == \"3\\n\", \"Incorrect output for sample input 1\"\nassert solution(\"2\\n*.*\\n...\\n*.*\") == \"4\\n\", \"Incorrect output for sample input 2\""
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"3\", \"Output is incorrect\""
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Sample Input 1:\\n8\\n12210020\\nSample Output 1:\\n4\\n\\nSample Input 2:\\n4\\n1111\\nSample Output 2:\\nimpossible\") == \"4\\n\"\nassert solution(\"Sample Input 1:\\n8\\n12210020\\nSample Output 1:\\n4\\n\\nSample Input 2:\\n4\\n1111\\nSample Output 2:\\nimpossible\") == \"4\\n\""
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('8\\n12210020\\n') == '4\\n'\nassert solution('4\\n1111\\n') == 'impossible\\n'"
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8\\n12210020\\n\") == \"4\\n\", \"The expected output is incorrect. Please check your code.\"\nassert solution(\"4\\n1111\\n\") == \"impossible\\n\", \"The expected output is incorrect. Please check your code.\""
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"The output is '{output}', but you provided the input '{input()}' as the test case.\""
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8\\n12210020\\n\") == \"4\"\nassert solution(\"4\\n1111\\n\") == \"impossible\""
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('8\\n12210020\\n4\\n1111') == '4\\n'"
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"4\\n\", \"Output should be '4', not '{}'.\".format(solution(stdin))"
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8\\n12210020\") == \"4\\n\"\nassert solution(\"4\\n1111\") == \"impossible\\n\""
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"4\\n\"\nassert solution(\"8\\n12210020\\nSample Output 1: 4\\n\\n8\\n1111\\nSample Output 2: impossible\\n\") == \"4\\n\"\nassert solution(\"4\\n1111\\n\") == \"impossible\\n\"\n"
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8\\n12210020\\n4\\n1111\\n\") == \"4\\n\"\nassert solution(\"4\\n1111\\n\") == \"impossible\\n\"\n"
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n500 500 499\\n0 0 999\\n1000 1000 200\") == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\\n\"\nassert solution(\"4\\n250 250 300\\n750 250 300\\n250 750 300\\n750 750 300\") == \"Bill will be bitten.\\n\"\n"
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''3\n500 500 499\n0 0 999\n1000 1000 200''') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\\n'\n\nassert solution('''4\n250 250 300\n750 250 300\n250 750 300\n750 750 300''') == 'Bill will be bitten.\\n'"
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\"\nassert solution(input()) == \"Bill will be bitten.\"\n"
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    3\n    500 500 499\n    0 0 999\n    1000 1000 200\n    \"\"\"\n) == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\\n\"\n\nassert solution(\n    \"\"\"\n    4\n    250 250 300\n    750 250 300\n    250 750 300\n    750 750 300\n    \"\"\"\n) == \"Bill will be bitten.\\n\""
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n500 500 499\\n0 0 999\\n1000 1000 200') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\\n'\nassert solution('4\\n250 250 300\\n750 250 300\\n250 750 300\\n750 750 300') == 'Bill will be bitten.\\n'"
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\nr'''\n3\n500 500 499\n0 0 999\n1000 1000 200\n4\n250 250 300\n750 250 300\n250 750 300\n750 750 300\n'''\n) == 'Bill will be bitten.'\n\nassert solution(\nr'''\n3\n500 500 499\n0 0 999\n1000 1000 200\n4\n250 250 300\n750 250 300\n250 750 300\n750 750 300\n'''\n) == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).'\n\nassert solution(\nr'''\n3\n500 500 499\n0 0 999\n1000 1000 200\n4\n250 250 300\n750 250 300\n250 750 300\n750 750 300\n'''\n) == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).'"
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''3\n500 500 499\n0 0 999\n1000 1000 200''') == '''Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).'''\n\nassert solution('''4\n250 250 300\n750 250 300\n250 750 300\n750 750 300''') == '''Bill will be bitten.'''"
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n500 500 499\\n0 0 999\\n1000 1000 200\\n\") == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\"\nassert solution(\"4\\n250 250 300\\n750 250 300\\n250 750 300\\n750 750 300\\n\") == \"Bill will be bitten.\""
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n500 500 499\\n0 0 999\\n1000 1000 200\\n\") == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\"\n\nassert solution(\"4\\n250 250 300\\n750 250 300\\n250 750 300\\n750 750 300\\n\") == \"Bill will be bitten.\""
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n500 500 499\\n0 0 999\\n1000 1000 200\") == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\\n\"\nassert solution(\"4\\n250 250 300\\n750 250 300\\n250 750 300\\n750 750 300\") == \"Bill will be bitten.\\n\""
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('8 3\\n++xx+x++') == '++xx+o++'\nassert solution('8 3\\nxxxxxxxx') == 'xxoooooo'\n"
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('8 3\\n++xx+x++') == '++xx+o++'"
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('8 3\\n++xx+x++') == '++xx+o++'\nassert solution('8 3\\nxxxxxxxx') == 'xxoooooo'"
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 3\\n++xx+x++\") == \"+oo\\n\"\nassert solution(\"8 3\\nxxxxxxxx\") == \"xxooo\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('8 3\\n++xx+x++') == '++xx+o++'\nassert solution('8 3\\nxxxxxxxx') == 'xxoooooo'\n\nfrom typing import List"
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"xxoooooo\""
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 3\\n++xx+x++\\n\") == \"++xx+o++\\n\"\nassert solution(\"8 3\\nxxxxxxxx\\n\") == \"xxoooooo\\ndef solution(stdin: str) -> str: pass\""
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 3\\n++xx+x++\") == \"++xx+o++\"\nassert solution(\"8 3\\nxxxxxxxx\") == \"xxoooooo\"\n"
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == '''++xx+o++'''"
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 3\\n++xx+x++\") == \"++xx+o++\"\nassert solution(\"8 3\\nxxxxxxxx\") == \"xxoooooo\""
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Lost is Close to Lose\") == \"close: lose\\nhe: the\\nin: inc is\\inc: in\\nis: in\\nlose: close lost\\nlost: lose\\nthe: he\\n\""
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Lost is Close to Lose\") == \"close: lose\\nhe: the\\nin: inc is\\inc: in\\nis: in\\nlose: close lost\\nlost: lose\\nthe: he\\n\"\n\nassert solution(\"The fox said, \\\"When?\\\"\") == \"clock: oclock\\nhe: hen the\\nen: it\\nis: it\\nwhen: hen\\nwill: till\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\"The quick brown fox jumped over the lazy dog\") == \"over: lazy dog\\nquick: brown fox\\nthe: the\\nup: up the\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Lost is Close to Lose\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\"
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == sample_output_1, \"Incorrect output 1\"\nassert solution(sample_input_2) == sample_output_2, \"Incorrect output 2\""
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}\\nActual output: {solution(input())}\""
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('sample_input_1.txt', 'r')) == \"close: lose\\nhe: the\\nin: inc is\\ninc: in\\nis: in\\nlose: close lost\\nlost: lose\\nthe: he\\n\"\n\nassert solution(open('sample_input_2.txt', 'r')) == \"clock: oclock\\nhe: hen the\\nen: he when\\ns: it\\nt: is\\noclock: clock\\nthe: he\\nwill: till\\nwill: till\\n\""
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}\\nGot: {solution(stdin)}\"\n"
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"Lost is Close to Lose\\n\"\n    \"Better Documents Inc. wants to add Typo Checking in to the\\n\"\n    \"next generation of word processors,\\n\"\n    \"he said.\\n\"\n    \"***\\n\"\n    \"Sample Input 1:\\n\"\n    \"Lost is Close to Lose\\n\"\n    \"***\\n\"\n    \"Sample Output 1:\\n\"\n    \"close: lose\\n\"\n    \"he: the\\n\"\n    \"in: inc is\\n\"\n    \"inc: in\\n\"\n    \"is: in\\n\"\n    \"lose: close lost\\n\"\n    \"lost: lose\\n\"\n    \"the: he\\n\"\n) == \"close: lose\\nhe: the\\ninc: in\\nis: in\\nlose: close lost\\nlost: lose\\nthe: he\\n\"\n\nassert solution(\n    \"The fox said, \\\"When?\\\"\\n\"\n    \"\\\"Not till 12 o'clock\\\", replied the hen.\\n\"\n    \"\\\"That clock is stopped, it will never strike.\\\",\\n\"\n    \"he said.\\n\"\n    \"***\\n\"\n    \"Sample Input 2:\\n\"\n    \"The fox said, \\\"When?\\\"\\n\"\n    \"\\\"Not till 12 o'clock\\\", replied the hen.\\n\"\n    \"\\\"That clock is stopped, it will never strike.\\\",\\n\"\n    \"he said.\\n\"\n    \"***\\n\"\n    \"Sample Output 2:\\n\"\n    \"clock: oclock\\nhe: hen the\\nhen: he when\\nis: it\\nit: is\\noclock: clock\\nthe: he\\ntill: will\\nwhen: hen\\nwill: till\\ndef solution(stdin: str) -> str:\\n    pass\"\n) == \"clock: oclock\\nhe: hen the\\nhen: he when\\nis: it\\nit: is\\noclock: clock\\nthe: he\\ntill: will\\nwhen: hen\\nwill: till\\ndef solution(stdin: str) -> str:\\n    pass\"\n\nassert solution(\n    \"The quick brown fox jumps over the lazy dog. The dog is golden.\\n\"\n    \"The dog is more expensive than the shark. The shark is fat.\\n\"\n    \"The quick brown fox jumps over the lazy dog. The dog is golden.\\n\"\n    \"The dog is more expensive than the shark. The shark is fat.\\n\"\n    \"The quick brown fox jumps over the lazy dog. The dog is golden.\\n\"\n    \"The dog is more expensive than the shark. The shark is fat.\\n\"\n    \"The quick brown fox jumps over the lazy dog. The dog is golden.\\n\"\n    \"The dog is more expensive than the shark. The shark is fat.\\n\"\n    \"The quick brown fox jumps over the lazy dog. The dog is golden.\\n\"\n    \"The dog is more expensive than the shark. The shark is fat.\\n\"\n    \"The quick brown fox jumps over the lazy dog. The dog is golden.\\n\"\n    \"The dog is more expensive than the shark. The shark is fat.\\n\"\n    \"The quick brown fox jumps over the lazy dog. The dog is golden.\\n\"\n    \"The dog is more expensive than the shark. The shark is fat.\\n\"\n    \"The quick brown fox jumps over the lazy dog. The dog is golden.\\n\"\n    \"The dog is more expensive than the shark. The shark is fat.\\n\"\n    \"The quick brown fox jumps over the lazy dog. The dog is golden.\\n\"\n    \"The dog is more expensive than the shark. The shark is fat.\\n\"\n    \"The quick brown fox jumps over the lazy dog. The dog is golden.\\n\"\n    \"The dog is more expensive than the shark. The shark is fat.\\n\"\n    \"The quick brown fox jumps over the lazy dog. The dog is golden.\\n\"\n    \"The dog is more expensive than the shark. The shark is fat.\\n\"\n    \"The quick brown fox jumps over the lazy dog. The dog is golden.\\n\"\n    \"The dog is more expensive than the shark. The shark is fat.\\n\"\n    \"The quick brown fox jumps over the lazy dog. The dog is golden.\\n\"\n    \"The dog is more expensive than the shark. The shark is fat.\\n\"\n    \"The quick brown fox jumps over"
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\nLost is Close to Lose\nBetter Documents Inc. wants to add Typo Checking in to the\nnext generation of word processors,\nhe said.\n''') == '''\nclose: lose\nhe: the\nin: inc is\ninc: in\nis: in\nlose: close lost\nlost: lose\nthe: he\n'''\n\nassert solution('''\nThe fox said, \"When?\"\n\"Not till 12 o'clock\", replied the hen.\n\"That clock is stopped, it will never strike.\"\n''') == '''\nclock: oclock\nhe: hen the\nhen: he when\nis: it\nit: is\noclock: clock\nthe: he\ntill: will\nwhen: hen\nwill: till\n'''"
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\\n1 2 7 3 8 9 4 5 10 6\") == \"1\"\nassert solution(\"10\\n3 8 1 9 4 5 2 7 10 6\") == \"2\""
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected, f\"Your code does not return the expected output.\\nExpected: {expected}\\nReceived: {solution(stdin)}\""
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10\\n1 2 7 3 8 9 4 5 10 6\") == \"1\"\nassert solution(\"10\\n3 8 1 9 4 5 2 7 10 6\") == \"2\""
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('10\\n1 2 7 3 8 9 4 5 10 6') == '1\\n'\nassert solution('10\\n3 8 1 9 4 5 2 7 10 6') == '2\\n'"
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10\\n1 2 7 3 8 9 4 5 10 6\") == \"1\\n\", \"Test 1 failed\"\nassert solution(\"10\\n3 8 1 9 4 5 2 7 10 6\") == \"2\\n\", \"Test 2 failed\""
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == sample_output, f\"Test case {test_case} has incorrect output. Expected: {sample_output}, got: {solution(sample_input)}\""
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10\\n1 2 7 3 8 9 4 5 10 6\") == \"1\", \"Test 1\"\nassert solution(\"10\\n3 8 1 9 4 5 2 7 10 6\") == \"2\", \"Test 2\""
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1\"\nassert solution() == \"2\"\n"
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('10\\n1 2 7 3 8 9 4 5 10 6') == '1', \"The correct answer for sample input 1 is '1'.\"\nassert solution('10\\n3 8 1 9 4 5 2 7 10 6') == '2', \"The correct answer for sample input 2 is '2'.\""
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n\"0.142857 6\"\n) == \"1/7\", \"Expected 1/7, got {}\".format(solution(\"0.142857 6\"))\n\nassert solution(\n\"1.6 1\"\n) == \"5/3\", \"Expected 5/3, got {}\".format(solution(\"1.6 1\"))"
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0.142857 6\") == \"1/7\", \"Test 1 failed.\"\nassert solution(\"1.6 1\") == \"5/3\", \"Test 2 failed.\""
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0.142857 6\") == \"1/7\", \"Test 1\"\nassert solution(\"1.6 1\") == \"5/3\", \"Test 2\""
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0.142857 6\") == \"1/7\"\nassert solution(\"1.6 1\") == \"5/3\""
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0.142857 6\") == \"1/7\"\nassert solution(\"1.6 1\") == \"5/3\""
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0.142857 6\") == 1/7\nassert solution(\"1.6 1\") == 5/3"
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0.142857 6\") == \"1/7\", \"Test failed for 0.142857 6\"\nassert solution(\"1.6 1\") == \"5/3\", \"Test failed for 1.6 1\""
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2\n\ninput1 = \"0.142857 6\"\ninput2 = \"1.6 1\"\n\noutput1 = \"1/7\"\noutput2 = \"5/3\""
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    0.142857 6\n    \"\"\"\n) == \"1/7\"\n\nassert solution(\n    \"\"\"\n    1.6 1\n    \"\"\"\n) == \"5/3\""
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 6\nassert solution(4) == 10"
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n0 0 0\\n2\\n0 0 1\\n\") == \"6\\n\"\nassert solution(\"2\\n0 0 0\\n0 0 1\\n\") == \"10\\n\""
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r')) == 'def solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == \"6\\n\", \"Sample Input 1 failed\"\nassert solution(sample_input2) == \"10\\n\", \"Sample Input 2 failed\""
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == 6\nassert solution(sample_input_2) == 10"
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n0 0 0\\n\") == \"6\\n\", \"Sample Output 1 incorrect\"\nassert solution(\"2\\n0 0 0\\n0 0 1\\n\") == \"10\\n\", \"Sample Output 2 incorrect\""
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n1\n0 0 0\n''') == '6'\n\nassert solution('''\n2\n0 0 0\n0 0 1\n''') == '10'"
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == '6', 'Sample Input 1: Expected 6, but got {}'.format(solution(sample_input_1))\nassert solution(sample_input_2) == '10', 'Sample Input 2: Expected 10, but got {}'.format(solution(sample_input_2))"
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input1) == '6', \"Test case 1 failed\"\nassert solution(sample_input2) == '10', \"Test case 2 failed\""
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n0 0 0\\n2\\n0 0 1\\n\") == \"6\\n\"\nassert solution(\"2\\n0 0 0\\n0 0 1\\n\") == \"10\\n\"\nassert solution(\"3\\n0 0 0\\n0 0 2\\n\") == \"0\\n\"\nassert solution(\"4\\n0 0 0\\n0 0 3\\n\") == \"0\\n\"\nassert solution(\"5\\n0 0 0\\n0 0 4\\n\") == \"0\\n\"\nassert solution(\"6\\n0 0 0\\n0 0 5\\n\") == \"0\\n\"\nassert solution(\"7\\n0 0 0\\n0 0 6\\n\") == \"0\\n\"\nassert solution(\"8\\n0 0 0\\n0 0 7\\n\") == \"0\\n\"\nassert solution(\"9\\n0 0 0\\n0 0 8\\n\") == \"0\\n\"\nassert solution(\"10\\n0 0 0\\n0 0 9\\n\") == \"0\\n\"\nassert solution(\"11\\n0 0 0\\n0 0 10\\n\") == \"0\\n\"\nassert solution(\"12\\n0 0 0\\n0 0 11\\n\") == \"0\\n\"\nassert solution(\"13\\n0 0 0\\n0 0 12\\n\") == \"0\\n\"\nassert solution(\"14\\n0 0 0\\n0 0 13\\n\") == \"0\\n\"\nassert solution(\"15\\n0 0 0\\n0 0 14\\n\") == \"0\\n\"\nassert solution(\"16\\n0 0 0\\n0 0 15\\n\") == \"0\\n\"\nassert solution(\"17\\n0 0 0\\n0 0 16\\n\") == \"0\\n\"\nassert solution(\"18\\n0 0 0\\n0 0 17\\n\") == \"0\\n\"\nassert solution(\"19\\n0 0 0\\n0 0 18\\n\") == \"0\\n\"\nassert solution(\"20\\n0 0 0\\n0 0 19\\n\") == \"0\\n\"\nassert solution(\"21\\n0 0 0\\n0 0 20\\n\") == \"0\\n\"\nassert solution(\"22\\n0 0 0\\n0 0 21\\n\") == \"0\\n\"\nassert solution(\"23\\n0 0 0\\n0 0 22\\n\") == \"0\\n\"\nassert solution(\"24\\n0 0 0\\n0 0 23\\n\") == \"0\\n\"\nassert solution(\"25\\n0 0 0\\n0 0 24\\n\") == \"0\\n\"\nassert solution(\"26\\n0 0 0\\n0 0 25\\n\") == \"0\\n\"\nassert solution(\"27\\n0 0 0\\n0 0 26\\n\") == \"0\\n\"\nassert solution(\"28\\n0 0 0\\n0 0 27\\n\") == \"0\\n\"\nassert solution(\"29\\n0 0 0\\n0 0 28\\n\") == \"0\\n\"\nassert solution(\"30\\n0 0 0\\n0 0 29\\n\") == \"0\\n\"\nassert solution(\"31\\n0 0 0\\n0 0 30\\n\") == \"0\\n\"\nassert solution(\"32\\n0 0 0\\n0 0 31\\n\") == \"0\\n\"\nassert solution(\"33\\n0 0 0\\n0 0 32\\n\") == \"0\\n\"\nassert solution(\"34\\n0 0 0\\n0 0 33\\n\") == \"0\\n\"\nassert solution(\"35\\n0 0 0\\n0 0 34\\"
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n-1 2 -1\\n2 2\\n1 -1 1\") == \"1\\n\"\nassert solution(\"7\\n-1 4 5 1 0 -1 -1\\n-1 3 2 0 0 1\\n-1 4 -1 1 0 -1 -1\\n1 3 4 2 2 4\\n0 2 3 -1 4 4 2\\n-1 4 4 3 3 2\\n1 -1 -1 -1 4 2 -1\") == \"1\\n\""
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1\", \"The number of valid colorings should be 1.\""
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"1\\n\", \"Sample Output 1\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"1\\n\", \"Sample Output 2\""
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1\\n\", \"The solution should return 1, but it returned {}\".format(solution())"
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Incorrect output: {solution(input())}!= {output}\""
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n-1 2 -1\\n2 2\\n1 -1 1\") == \"1\"\nassert solution(\"7\\n-1 4 5 1 0 -1 -1\\n-1 3 2 0 0 1\\n-1 4 -1 1 0 -1 -1\\n1 3 4 2 2 4\\n0 2 3 -1 4 4 2\\n-1 4 4 3 3 2\\n1 -1 -1 -1 4 2 -1\") == \"1\"\n"
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '1\\n', \"Invalid solution. Please check the input.\""
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1\", \"Invalid output. Please check the function and ensure that the conditions are met.\""
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n-1 2 -1\\n2 2\\n1 -1 1\\n') == 1, 'The output is not as expected.'\nassert solution('7\\n-1 4 5 1 0 -1 -1\\n-1 3 2 0 0 1\\n-1 4 -1 1 0 -1 -1\\n1 3 4 2 2 4\\n0 2 3 -1 4 4 2\\n-1 4 4 3 3 2\\n1 -1 -1 -1 4 2 -1\\n') == 1, 'The output is not as expected.'"
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n-1 2 -1\\n2 2\\n1 -1 1') == '1'\nassert solution('7\\n-1 4 5 1 0 -1 -1\\n-1 3 2 0 0 1\\n-1 4 -1 1 0 -1 -1\\n1 3 4 2 2 4\\n0 2 3 -1 4 4 2\\n-1 4 4 3 3 2\\n1 -1 -1 -1 4 2 -1') == '1'\nassert solution('3\\n-1 2 -1\\n2 2\\n1 -1 1') == '1'\nassert solution('7\\n-1 4 5 1 0 -1 -1\\n-1 3 2 0 0 1\\n-1 4 -1 1 0 -1 -1\\n1 3 4 2 2 4\\n0 2 3 -1 4 4 2\\n-1 4 4 3 3 2\\n1 -1 -1 -1 4 2 -1') == '1'"
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1001\") == \"3\"\nassert solution(\"1111\") == \"1\""
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1001\") == \"3\"\nassert solution(\"1111\") == \"1\""
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1001\") == \"3\", \"1001 is not a valid input.\"\nassert solution(\"1111\") == \"1\", \"1111 is not a valid input.\""
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1001') == '3', \"Incorrect output for sample input 1\"\nassert solution('1111') == '1', \"Incorrect output for sample input 2\""
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1001\") == \"3\"\nassert solution(\"1111\") == \"1\""
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 'Output a line giving the number of different binary representations of N that also use 2 as a digit. Since this number might be big, output the remainder modulo 1000000009.'\n"
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1001\") == \"3\"\nassert solution(\"1111\") == \"1\""
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1001') == '3\\n'\nassert solution('1111') == '1\\n'"
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1001') == 3, 'The output is not as expected.'\nassert solution('1111') == 1, 'The output is not as expected.'"
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1001\") == \"3\", \"Your solution is incorrect.\"\n\nfrom functools import lru_cache\n\n@lru_cache(maxsize=None)\n"
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin='3\\n1 1 1\\n') == 'LLL\\n'\nassert solution(stdin='5\\n1 2 2 1 2\\n') == 'LLRLR\\n'"
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"LLL\", \"The correct solution is not found.\"\nassert solution() == \"RLR\", \"The correct solution is not found.\"\nassert solution() == \"RLL\", \"The correct solution is not found.\""
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n1 1 1') == 'LLL'\nassert solution('5\\n1 2 2 1 2') == 'LLRLR'"
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n1 1 1\\n') == 'LLL'\nassert solution('5\\n1 2 2 1 2\\n') == 'LLRLR'"
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n1 1 1\\n') == 'LLL\\n'\nassert solution('5\\n1 2 2 1 2\\n') == 'LLRLR\\n'\n\nfrom typing import List"
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, 1, 1, 1, 1, 1, 1, 1, 1) == \"LLL\"\nassert solution(5, 1, 2, 2, 1, 2, 1, 2, 1) == \"LLRLR\""
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"LLL\\n\" # placeholder"
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n1 1 1\\n') == 'LLL\\n'\nassert solution('5\\n1 2 2 1 2\\n') == 'LLRLR\\n'"
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n1 1 1\\n') == 'LLL\\n'\nassert solution('5\\n1 2 2 1 2\\n') == 'LLRLR\\n'"
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 'LLL'\nassert solution(input()) == 'LLRLR'"
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()\nfor input_, output_ in zip(input().split('\\n'), output().split('\\n')):\n    assert input_.strip() == output_.strip()"
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 7 10\\n1 2 1000000\\n2 3 2000000\\n3 4 3000000\\n4 5 4000000\\n5 6 5000000\\n6 7 6000000\\n7 1 7000000\\n\") == 49000000000070"
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"49000000000070\", \"The minimum amount of energy is not correct\""
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''7 7 10\n1 2 1000000\n2 3 2000000\n3 4 3000000\n4 5 4000000\n5 6 5000000\n6 7 6000000\n7 1 7000000''') == '''49000000000070'''\n\nassert solution('''6 6 7\n1 3 1000000\n3 5 3000000\n5 1 5000000\n2 4 2000000\n4 6 4000000\n6 2 6000000''') == '''25000000000021'''"
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 7 10\\n1 2 1000000\\n2 3 2000000\\n3 4 3000000\\n4 5 4000000\\n5 6 5000000\\n6 7 6000000\\n7 1 7000000\\n\") == \"49000000000070\"\nassert solution(\"6 6 7\\n1 3 1000000\\n3 5 3000000\\n5 1 5000000\\n2 4 2000000\\n4 6 4000000\\n6 2 6000000\\n\") == \"25000000000021\"\n"
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 7 10\\n1 2 1000000\\n2 3 2000000\\n3 4 3000000\\n4 5 4000000\\n5 6 5000000\\n6 7 6000000\\n7 1 7000000\") == \"49000000000070\"\nassert solution(\"6 6 7\\n1 3 1000000\\n3 5 3000000\\n5 1 5000000\\n2 4 2000000\\n4 6 4000000\\n6 2 6000000\\n\") == \"25000000000021\""
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n7 7 10\n1 2 1000000\n2 3 2000000\n3 4 3000000\n4 5 4000000\n5 6 5000000\n6 7 6000000\n7 1 7000000\n''') == '49000000000070'\nassert solution('''\n6 6 7\n1 3 1000000\n3 5 3000000\n5 1 5000000\n2 4 2000000\n4 6 4000000\n6 2 6000000\n''') == '25000000000021'"
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 49000000000070, \"Expected 49000000000070 but got {}\".format(solution())"
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '49000000000070'\n"
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 2\") == \"2\\n2\\n0\\n1\\n2\\n2\\n3\\n\\nYeah!\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 3\") == \"Yeah!\\n\"\nassert solution(\"5 4\\n0 1\\n1 0\\n2 3\\n3 2\\n2 1\\n3 0\\n1 3\\n3 1\\n1 2\\n0 2\\n2 0\\n0 3\\n3 0\\n\") == \"2\\n2\\n0\\n1\\n2\\n2\\n3\\n\\nYeah!\\n\"\nassert solution(\"5 4\\n0 1\\n1 0\\n2 3\\n3 3\\n1 1\\n1 0\\n3 2\\n0 2\\n1 3\\n0 3\\n2 0\\n3 1\\n3 0\\n\") == \"Yeah!\\n\""
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 2\") == \"2\\n2\\n0\\n1\\n2\\n2\\n3\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 3\") == \"Yeah!\""
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 2\") == \"2\\n2\\n0\\n1\\n2\\n2\\n3\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 3\") == \"Yeah!\""
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"Yeah!\""
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt').read()) == 'Yeah!\\n\\n2\\n2\\n0\\n1\\n2\\n2\\n3'"
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 2\") == \"2\\n2\\n0\\n1\\n2\\n2\\n3\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 3\") == \"Yeah!\\n\""
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_str) == output_str, f\"Your solution is incorrect. Please check the examples and the problem statement.\"\n\ninput_str = \"\"\"4 4\n0 1\n1 0\n2 3\n3 2\n\"\"\"\n\noutput_str = \"\"\"2\n2\n0\n1\n2\n2\n3\n\"\"\""
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input_1) == sample_output_1, \"Test case 1 failed\"\nassert solution(sample_input_2) == sample_output_2, \"Test case 2 failed\"\n\nsample_input_1 = \"4 4\\n0 1\\n1 0\\n2 3\\n3 2\"\nsample_input_2 = \"4 4\\n0 1\\n1 0\\n2 3\\n3 3\"\n\nsample_output_1 = \"2\\n2\\n0\\n1\\n2\\n2\\n3\"\nsample_output_2 = \"Yeah!\""
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input1) == output1, f\"Test 1 failed: {solution(input1)}\"\nassert solution(input2) == output2, f\"Test 2 failed: {solution(input2)}\""
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == 'POSSIBLE\\n1 3\\n2 3', 'The solution is incorrect.'"
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"POSSIBLE\\n1 3\\n2 3\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"POSSIBLE\\n1 3\\n2 3\""
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 1 2\\n2 3\") == \"POSSIBLE\\n1 3\\n2 3\"\nassert solution(\"2\\n1 2\\n1 3\") == \"POSSIBLE\\n1 3\"\nassert solution(\"3\\n1 1 2\\n2 3\\n3 1\") == \"POSSIBLE\\n1 3\\n2 3\\n3 1\"\nassert solution(\"2\\n1 2\\n1 3\\n2 3\") == \"POSSIBLE\\n1 3\\n2 3\"\nassert solution(\"3\\n1 1 2\\n2 3\\n3 1\\n4 2\") == \"POSSIBLE\\n1 3\\n2 3\\n3 1\\n4 2\"\nassert solution(\"2\\n1 2\\n1 3\\n2 3\\n4 1\") == \"POSSIBLE\\n1 3\\n2 3\\n4 1\"\nassert solution(\"3\\n1 1 2\\n2 3\\n3 1\\n4 2\\n5 2\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"POSSIBLE\\n1 3\\n2 3\""
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == 'IMPOSSIBLE', \"Test case failed: IMPOSSIBLE\""
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 1 2\\n2 3\\n\") == \"POSSIBLE\\n1 3\\n2 3\\n\"\nassert solution(\"2\\n1 2\\n\") == \"IMPOSSIBLE\\ndef solution(stdin: str) -> str:pass\\n\"\n"
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 1 2\\n2 3\\n\") == \"POSSIBLE\\n1 3\\n2 3\\n\"\nassert solution(\"2\\n1 2\\n\") == \"IMPOSSIBLE\\n\""
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed: {solution(input())}!= {expected_output}\"\n"
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('0 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n') == '0.5 0.5 0.5\\n'\nassert solution('0 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n') == '0.0 0.0 -0.0\\n'"
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution([\n    '0 0 0',\n    '1 0 0',\n    '0 1 0',\n    '0 0 1'\n]) == '0.5 0.5 0.5'\n\nassert solution([\n    '-1 0 0',\n    '1 0 0',\n    '0 1 0',\n    '0 0 1'\n]) == '0.0 0.0 -0.0'"
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"\"\"0.5 0.5 0.5\n\"\"\""
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(r'1 0 0\\n0 1 0\\n0 0 1\\n-1 0 0') == '0.5 0.5 0.5\\n'"
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"0 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n\") == \"0.5 0.5 0.5\\n\"\nassert solution(stdin=\"-1 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n\") == \"0.0 0.0 -0.0\\n\""
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 0 0\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0.5 0.5 0.5\"\nassert solution(\"-1 0 0\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0.0 0.0 -0.0\""
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '0.5 0.5 0.5'\nassert solution() == '0.0 0.0 -0.0'"
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 0 0\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0.5 0.5 0.5\\n\"\nassert solution(\"-1 0 0\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0.0 0.0 -0.0\\n\""
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('0 0 0\\n1 0 0\\n0 1 0\\n0 0 1') == '0.5 0.5 0.5\\n'\nassert solution('-1 0 0\\n1 0 0\\n0 1 0\\n0 0 1') == '0.0 0.0 -0.0\\n'"
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('0 0 0\\n1 0 0\\n0 1 0\\n0 0 1') == '0.5 0.5 0.5'\nassert solution('-1 0 0\\n1 0 0\\n0 1 0\\n0 0 1') == '0.0 0.0 -0.0'"
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == expected\n"
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"123456\""
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(None) == \"Test Failed\"  # Test case 1\nassert solution(\"10\\n3 6 2 3 2 2 2 1 5 6\") == \"2\\n3 2 2 1 5\\n3 2 2\\n6 6\"  # Test case 2\nassert solution(\"3\\n17 17 17\") == \"0\\n17 17 17\"  # Test case 3"
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(10) == 2, \"Sample Input 1\"\nassert solution(3) == 3, \"Sample Input 2\"\n\nfrom typing import List"
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '''2\n3 2 2 1 5\n3 2 2\n6 6'''\n\nassert solution(stdin) == '''0\n17 17 17'''"
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected, f\"Expected '{expected}', got '{solution(stdin)}'\"\n"
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"10\\n3 6 2 3 2 2 2 1 5 6\") == '2\\n3 2 2 1 5\\n3 2 2'\nassert solution(stdin=\"3\\n17 17 17\") == '0\\n17 17 17'"
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10\\n3 6 2 3 2 2 2 1 5 6\") == \"2\\n3 2 2 1 5\\n3 2 2\"\nassert solution(\"3\\n17 17 17\") == \"0\\n17 17 17\""
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected, f\"Your solution is incorrect. Expected: {expected}, Received: {solution(stdin)}\""
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test failed: {solution(input())}!= {expected_output}\""
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2\n\nfrom typing import List"
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"IMPOSSIBLE\" # your code here"
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 'IMPOSSIBLE'"
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n3 2 1\n1 2 7\n2 3 8\n1\n3 2\n''') == 'IMPOSSIBLE'\n\nassert solution('''\n3 2 1\n1 2 7\n2 3 8\n1\n2 3\n''') == '74.6666666667'"
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r').read()) == \"IMPOSSIBLE\\n\"\n"
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 'IMPOSSIBLE'"
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\\n3 2\\n\") == \"IMPOSSIBLE\"\n\nassert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\\n2 3\\n\") == \"74.6666666667\""
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}\\nActual output: {solution(input())}\""
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 6\\n1 2\\n2 3\\n3 1\\n3 4\\n1 4\\n4 5\\n7 7\\n1 2\\n2 3\\n3 1\\n4 5\\n5 6\\n6 7\\n7 4\") == \"1\\n2\\n1\\n2\\n2\\n1\\n\"\nassert solution(\"7 7\\n1 2\\n2 3\\n3 1\\n4 5\\n5 6\\n6 7\\n7 4\") == \"0\""
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 6\\n1 2\\n2 3\\n3 1\\n3 4\\n1 4\\n4 5\\n\") == \"1\\n2\\n1\\n2\\n2\\n1\\n\"\n\nassert solution(\"7 7\\n1 2\\n2 3\\n3 1\\n4 5\\n5 6\\n6 7\\n7 4\\n\") == \"0\\n\""
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 6\\n1 2\\n2 3\\n3 1\\n3 4\\n1 4\\n4 5\\n\") == \"1\\n2\\n1\\n2\\n2\\n1\\n\"\nassert solution(\"7 7\\n1 2\\n2 3\\n3 1\\n4 5\\n5 6\\n6 7\\n7 4\\n\") == \"0\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution\n\nfrom typing import List"
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for input: {input()}\\nExpected output: {expected_output}\\nGot output: {solution(input())}\""
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == expected_output, f\"The solution is {solution} but the expected output is {expected_output}\""
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Expected output: {expected}\\nGot: {solution(input())}\""
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output"
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"4 10 2\\n0\\n15\\n30\\n45\") == \"10\\n\"\nassert solution(stdin=\"4 10 3\\n0\\n15\\n30\\n45\") == \"5\\n\""
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 10 2\\n0\\n15\\n30\\n45\") == \"10\\n\", \"Test 1 failed.\"\nassert solution(\"4 10 3\\n0\\n15\\n30\\n45\") == \"5\\n\", \"Test 2 failed.\""
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == expected, f\"Test failed for solution {solution}.\""
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 10 2\\n0\\n15\\n30\\n45\\n\") == \"10\"\nassert solution(\"4 10 3\\n0\\n15\\n30\\n45\\n\") == \"5\""
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == expected_output, f\"Solution is incorrect. Expected: {expected_output}, got: {solution}\""
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 10, \"Incorrect output\"\nassert solution() == 5, \"Incorrect output\""
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == '10'\nassert solution(sample_input_2) == '5'"
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n4 10 2\n0\n15\n30\n45\n\"\"\") == \"10\\n\"\nassert solution(\n\"\"\"\n4 10 3\n0\n15\n30\n45\n\"\"\") == \"5\\n\""
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input1) == output1, \"The code is not correct. Please check the sample inputs and outputs.\""
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"10\""
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(solution) == expected_output\n"
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\n50 50 75\\n25 25 25\") == \"2\"\nassert solution(\"5 2\\n50 50 50 50\\n25 25 25 25\") == \"1\""
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\n50 50 75\\n25 25 25\") == \"2\"\nassert solution(\"5 2\\n50 50 50 50\\n25 25 25 25\") == \"1\""
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 2\\n50 50 75\\n25 25 25\\n') == '2'\nassert solution('5 2\\n50 50 50 50\\n25 25 25 25\\n') == '1'"
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2\", \"Incorrect output\""
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n50 50 75\\n25 25 25\\n\") == 2\nassert solution(\"5 2\\n50 50 50 50\\n25 25 25 25\\n\") == 1\n\nfrom typing import List\n"
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == expected, f\"Expected solution: {expected}, Actual solution: {solution}\""
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    4 2\n    50 50 75\n    25 25 25\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    5 2\n    50 50 50 50\n    25 25 25 25\n    \"\"\"\n) == \"1\""
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 2\\n50 50 75\\n25 25 25') == '2'\nassert solution('5 2\\n50 50 50 50\\n25 25 25 25') == '1'"
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output\nprint(\"pass\")"
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Test case {case} failed: Expected output {output}, but got {solution(input())}\""
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4\\n.LX.\\n.X..\\n....\\n.L..\\n\") == \"1\"\nassert solution(\"4 4\\n.XLX\\n.X..\\n...L\\n.X..\\n\") == \"2\""
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1\\n\", \"Expected Output 1: 1\"\nassert solution() == \"2\\n\", \"Expected Output 2: 2\""
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '1\\n'"
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n4 4\n.LX.\n.X..\n....\n.L..\n''') == '1\\n'\n\nassert solution('''\n4 4\n.XLX\n.X..\n...L\n.X..\n''') == '2\\n'"
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 4\\n.LX.\\n.X..\\n....\\n.L..\\n') == '1\\n'\nassert solution('4 4\\n.XLX\\n.X..\\n...L\\n.X..\\n') == '2\\n'"
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n.LX.\\n.X..\\n....\\n.L..\\n\") == \"1\"\nassert solution(\"4 4\\n.XLX\\n.X..\\n...L\\n.X..\\n\") == \"2\""
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\n.LX.\\n.X..\\n....\\n.L..\\n\") == \"1\"\nassert solution(\"4 4\\n.XLX\\n.X..\\n...L\\n.X..\") == \"2\""
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n.LX.\\n.X..\\n....\\n.L..\") == \"1\\n\"\nassert solution(\"4 4\\n.XLX\\n.X..\\n...L\\n.X..\") == \"2\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\\n\") == \"home\\n2\\n2 0 1\\n2 2 3\\n\"\nassert solution(\"5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n\") == \"detention\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == \"home\"\nassert solution(sample_input2) == \"detention\""
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == \"home\"\nassert solution(sample_input_2) == \"detention\""
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\\n\") == \"detention\\n2\\n2 0 1\\n2 2 3\\n\"\nassert solution(\"5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n\") == \"home\\n2\\n2 0 1\\n2 2 3\\n\""
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\\n5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3') == 'home\\n2\\n2 0 1\\n2 2 3\\n'\n"
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r')) == 'detention\\n2'\n"
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\") == \"detention\"\nassert solution(\"5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\") == \"detention\"\nassert solution(\"4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\") == \"home\"\nassert solution(\"5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\") == \"home\""
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n4 2 1\n1 1\n2 0 2\n2 1 3\n1 2\n\"\"\") == \"home\\n2\\n2 0 1\\n2 2 3\"\n\nassert solution(\"\"\"\n5 2 1\n1 1\n2 0 2\n2 1 3\n2 2 4\n1 3\n\"\"\") == \"detention\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\\n5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\") == \"home\\n2\\n2 0 1\\n2 2 3\\n\"\nassert solution(\"5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n\") == \"detention\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"detention\", \"Your solution is incorrect\""
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"tralalal\") == \"allatral\", \"Sample Input 1: tralalal\"\nassert solution(\"zzzz\") == \"-1\", \"Sample Input 2: zzzz\""
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == -1"
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('tralalal') == 'allatral'\nassert solution('zzzz') == '-1'"
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == -1"
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == \"-1\""
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == \"-1\"\n\nfrom typing import List"
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == \"-1\""
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"allatral\"\nassert solution(input()) == \"def solution(stdin: str) -> str:pass\"\nassert solution(input()) == \"-1\""
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == \"-1\""
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == -1\n"
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"Output one integer representing the number of scary subarrays.\""
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == '5\\n'\nassert solution(open('input.txt', 'r').read()) == '5\\n'\n\nsolution(open('input.txt', 'r'))"
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == expected_output_1, \\\nf\"Expected output: {expected_output_1}\\nActual output: {solution(sample_input_1)}\"\n\nassert solution(sample_input_2) == expected_output_2, \\\nf\"Expected output: {expected_output_2}\\nActual output: {solution(sample_input_2)}\""
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected, f\"Test Case Failed: {stdin}\" for stdin, expected in [\n    (\n        \"\"\"5\n1 2 3 4 5\n\"\"\",\n        \"\"\"5\n\"\"\",\n    ),\n    (\n        \"\"\"6\n3 2 1 6 4 5\n\"\"\",\n        \"\"\"8\n\"\"\",\n    ),\n]"
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3 4 5\") == 5, \"Output 1 should be 5\"\nassert solution(\"1 2 3 4 5 6\") == 8, \"Output 2 should be 8\"\nassert solution(\"2 3 1 6 4 5\") == 8, \"Output 2 should be 8\""
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"Output one integer representing the number of scary subarrays.\""
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == output, f\"Solution does not match expected output. Expected: {output}, got: {solution(stdin)}\""
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"Output one integer representing the number of scary subarrays.\\n\"\n"
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '5\\n'\nassert solution(stdin) == '8\\n'"
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n1 2 3 4 5') == '5\\n'\nassert solution('6\\n3 2 1 6 4 5') == '8\\n'"
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\n\nfrom typing import List"
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"47\") == 1\nassert solution(\"523\") == 2"
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(47) == 1\nassert solution(523) == 2"
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected, f\"Test failed for function solution. Expected: {expected}, Received: {solution(stdin)}\"\n"
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '1'\n"
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(523) == 2\n"
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == 1\nassert solution(10) == 1\nassert solution(100) == 1\nassert solution(1000) == 1\nassert solution(10000) == 1"
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test failed: expected {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(47) == 1\nassert solution(523) == 2"
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(47) == 1, \"Expected: 1, but got: {}\".format(solution(47))\nassert solution(523) == 2, \"Expected: 2, but got: {}\".format(solution(523))"
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"0\\n1\\n0 1 15\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 5\\n0 1 10\\n1 2 10\\n0 3 10\\n3 2 10\\n2 0 20') == '0\\n\\n1\\n0 1 15'\nassert solution('2 2\\n0 1 20\\n1 0 5') == '1\\n0 1 15'\n"
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == '''\n0\n1 1 15\n'''"
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('0') == '0\\n'\nassert solution('4 5\\n0 1 10\\n1 2 10\\n0 3 10\\n3 2 10\\n2 0 20\\n') == '0\\n'\nassert solution('2 2\\n0 1 20\\n1 0 5\\n') == '1\\n0 1 15\\n'"
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"Solution not provided\""
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == solution, \"Solution is not correct.\""
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5\\n0 1 10\\n1 2 10\\n0 3 10\\n3 2 10\\n2 0 20\") == \"0\\n1\\n0 1 15\"\nassert solution(\"2 2\\n0 1 20\\n1 0 5\") == \"1\\n0 1 15\"\n\nfrom typing import List"
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 5\\n0 1 10\\n1 2 10\\n0 3 10\\n3 2 10\\n2 0 20') == '0\\n1\\n0 1 15\\n'"
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0\\n1 10\\n1 2 10\\n0 3 10\\n3 2 10\\n2 0 20\\n\") == \"0\\n\"\nassert solution(\"2\\n0 1 20\\n1 0 5\\n\") == \"1\\n0 1 15\\n\"\nassert solution(\"3\\n0 0 10\\n1 1 10\\n2 2 20\\n3 0 15\\n4 1 10\\n\") == \"1\\n2\\n3\\n\""
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n'''\n4 5\n0 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 20\n''') == '0\\n'\n\nassert solution(\n'''\n2 2\n0 1 20\n1 0 5\n''') == '1\\n0 1 15\\n'"
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2"
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5\") == \"5\\n\"\nassert solution(\"4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4\") == \"1\\n\""
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5') == 5\n\nassert solution('4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4') == 1"
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(str(input())) == \"5\\n\""
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 5\n\nassert solution == 1"
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5') == '5\\n'\nassert solution('4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4') == '1\\n'"
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5\") == 5\nassert solution(\"4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4\") == 1"
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5\\n\") == \"5\\n\"\nassert solution(\"4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4\\n\") == \"1\\n\""
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5\") == 5\nassert solution(\"4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4\") == 1"
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5\") == \"5\", \"The output should be '5'.\"\n\nassert solution(\"4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4\") == \"1\", \"The output should be '1'.\""
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"020302\") == \"7\"\nassert solution(\"1311\") == \"24\""
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('020302') == 7\nassert solution('1311') == 24"
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"020302\") == \"7\"\nassert solution(\"1311\") == \"24\""
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"7\"\nassert solution(stdin) == \"24\""
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"020302\") == \"7\"\nassert solution(\"1311\") == \"24\"\n\nfrom functools import reduce\n"
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"020302\") == \"7\"\nassert solution(\"1311\") == \"24\""
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"020302\") == \"7\"\nassert solution(\"1311\") == \"24\"\n"
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"020302\") == \"7\"\nassert solution(\"1311\") == \"24\"\n\nfrom math import gcd"
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"020302\") == \"7\", \"The solution should return the correct output for the sample input 1.\"\nassert solution(\"1311\") == \"24\", \"The solution should return the correct output for the sample input 2.\""
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"020302\") == \"7\"\nassert solution(\"1311\") == \"24\""
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 10\\n#.#..##..#\\n####..####\\n###.##....\\n...#..####\\n....##....\\n.#.##..##. \\n##########\\n##########\\n\") == \"3 1 3 10\\n\"\nassert solution(\"5 20\\n###########.#.#.#.#. \\n###########...#.###. \\n##########..##.#..## \\n###########..#.#.##. \\n###########.###...#. \\n\") == \"1 15 5 15\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == '3 1 3 10'\nassert solution(sample_input2) == '1 15 5 15'"
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('8 10\\n#.#..##..#\\n####..####\\n###.##....\\n...#..####\\n....##....\\n.#.##..##.\\n##########\\n##########\\n') == '3 1 3 10\\n'\n\nassert solution('5 20\\n###########.#.#.#.#. \\n###########...#.###. \\n##########..##.#..##\\n###########..#.#.##. \\n###########.###...#. \\n') == '1 15 5 15\\n'"
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n8 10\n"
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''8 10\n"
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 10\\n#.#..##..#\\n####..####\\n###.##....\\n...#..####\\n....##....\\n.#.##..##. #\\n########## #\\n########## #\\n\") == \"3 1 3 10\\n\"\nassert solution(\"5 20\\n###########.#.#.#.#. #\\n###########...#.###. #\\n##########..##.#..## #\\n###########..#.#.##. #\\n###########.###...#. #\\n\") == \"1 15 5 15\\ndef solution(stdin: str) -> str:\\n    pass\"\n\nHere's the code for the solution:"
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''8 10\n"
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n8 10\n"
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"3 1 3 10\"\nassert solution() == \"1 15 5 15\""
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"8 10\n"
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"50 0.125\") == \"16.339203308\", \"Test 1\"\nassert solution(\"201 1.000\") == \"5.000000000\", \"Test 2\""
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=input()) == \"16.339203308\""
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"50 0.125\") == 16.339203308\nassert solution(\"201 1.000\") == 5.000000000"
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '16.34', \"The expected output is 16.34, but the output is {}\".format(solution(stdin))"
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"50 0.125\") == \"16.339203308\"  # example 1\nassert solution(\"201 1.000\") == \"5.000000000\"  # example 2"
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_string) == output_string, f\"Test failed. Got {solution(input_string)}, expected {output_string}\""
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"16.339203308\"\n\nSolution:\n\nTo solve this problem, we need to calculate the expected amount of money Zapray would spend on Pokeballs given the number of Pokemons encountered in the next few days.\n\nZapray uses Pokeballs to catch and evolve Pokemons. He keeps throwing Pokeballs until he either catches the Pokemon or runs out of Pokeballs. At each throw, Zapray keeps track of the number of pokemons caught and the total number of Pokeballs thrown. When Zapray successfully catches a Pokemon, he refills his Pokeballs and continues to throw Pokeballs until he reaches the maximum number of pokemons allowed.\n\nTo calculate the expected amount of money Zapray would spend on Pokeballs, we need to consider the following factors:\n\n1. The number of Pokemons encountered in the next few days.\n2. The probability of catching a Pokemon with a constant probability $P$.\n3. The number of Pokeballs thrown by Zapray in each throw.\n\nWe can calculate the expected number of Pokeballs thrown in each throw using the following formula:\n\n$P$ * $N$\n\nSo, to calculate the expected number of Pokeballs thrown in each throw, we can use the following formula:\n\n$P$ * $N$\n\nNow, let's calculate the expected amount of money Zapray would spend on Pokeballs.\n\nTo calculate the expected number of Pokeballs thrown in each throw, we need to divide the total number of Pokeballs thrown by the number of Pokemons encountered in the next few days.\n\nTo calculate the total number of Pokeballs thrown, we can use the following formula:\n\n$N$ * $P$\n\nNow, we can calculate the expected amount of money Zapray would spend on Pokeballs by multiplying the expected number of Pokeballs thrown in each throw by the expected amount of money Zapray would earn on catching a new Pokemon.\n\nFinally, we can round the expected amount to 6 decimal places and return the result.\n\nHere's the Python code:\n\n```python\n"
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '16.339203308'"
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('50 0.125') == '16.339203308\\n', \"Expected output: '16.339203308\\n', but got: \" + solution('50 0.125')"
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2\\n0.5 1\\n2 1\\n0.5 1\\n1 1\\n0.5 1\\n2 1\\n0.5 1\\n1 1\\n0.5 1\\n2 1\\n0.5 1\\n1 1\\n0.5 1\\n2 1\\n0.5 1\\n1 1\\n0.5 1\\n2 1\\n0.5 1\\n1 1\\n0.5 1\\n2 1\\n0.5 1\\n1 1\\n0.5 1\\n2 1\\n0.5 1\\n1 1\\n0.5 1\\n2 1\\n0.5 1\\n1 1\\n0.5 1\\n2 1\\n0.5 1\\n1 1\\n0.5 1\\n2 1\\n0.5 1\\n1 1\\n0.5 1\\n2 1\\n0.5 1\\n1 1\\n0.5 1\\n2 1\\n0.5 1\\n1 1\\n0.5 1\\n2 1\\n0.5 1\\n1 1\\n0.5 1\\n2 1\\n0.5 1\\n1 1\\n0.5 1\\n2 1\\n0.5 1\\n1 1\\n0.5 1\\n2 1\\n0.5 1\\n1 1\\n0.5 1\\n2 1\\n0.5 1\\n1 1\\n0.5 1\\n2 1\\n0.5 1\\n1 1\\n0.5 1\\n2 1\\n0.5 1\\n1 1\\n0.5 1\\n2 1\\n0.5 1\\n1 1\\n0.5 1\\n2 1\\n0.5 1\\n1 1\\n0.5 1\\n2 1\\n0.5 1\\n1 1\\n0.5 1\\n2 1\\n0.5 1\\n1 1\\n0.5 1\\n2 1\\n0.5 1\\n1 1\\n0.5 1\\n2 1\\n0.5 1\\n1 1\\n0.5 1\\n2 1\\n0.5 1\\n1 1\\n0.5 1\\n2 1\\n0.5 1\\n1 1\\n0.5 1\\n2 1\\n0.5 1\\n1 1\\n0.5 1\\n2 1\\n0.5 1\\n1 1\\n0.5 1\\n2 1\\n0.5 1\\n1 1\\n0.5 1\\n2 1\\n0.5 1\\n1 1\\n0.5 1\\n2 1\\n0.5 1\\n1 1\\n0.5 1\\n2 1\\n0.5 1\\n1 1\\n0.5 1\\n2 1\\n0.5 1\\n1 1\\n0.5 1\\n2 1\\n0.5 1\\n1 1\\n0.5 1\\n2 1\\n0.5 1\\n1 1\\n0.5 1\\n2 1\\n0.5 1\\n1 1\\n0.5 1\\n2 1\\n0.5 1\\n1 1\\n0.5 1\\n2 1\\n0.5 1\\n1 1\\n0.5 1\\n2 1\\n0.5 1\\n1 1\\n0.5 1\\n2 1\\n0.5 1\\n1 1\\n0.5 1\\n2 1\\n0.5 1\\n1 1\\n0.5 1\\n2 1"
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\n0.5 1\\n\") == \"2\\n\"\nassert solution(\"4 3\\n1 11\\n0.4 1\\n\") == \"3\\n\""
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\n0.5 1\\n\") == \"2\\n\"\nassert solution(\"4 3\\n1 11\\n0.4 1\\n\") == \"3\\n\""
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\n0.5 1\\n\") == \"2\\n\"\nassert solution(\"4 3\\n1 11\\n0.4 1\\n\") == \"3\\n\"\n"
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"2 2\n0.5 1\"\"\") == \"2\"\nassert solution(\"\"\"4 3\n1 11\n0.4 1\"\"\") == \"3\""
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Test {test_case_id+1} failed. Expected: {output()}, Received: {solution(input())}\"\nprint(\"Test\", test_case_id+1, \"passed\")\ntest_case_id += 1"
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n2 2\n0.5 1\n''') == '2\\n'\n\nassert solution('''\n4 3\n1 11\n0.4 1\n''') == '3\\n'"
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n2 2\n0.5 1\n\"\"\"\n) == \"2\\n\"\n\nassert solution(\n    \"\"\"\n4 3\n1 11\n0.4 1\n\"\"\"\n) == \"3\\n\""
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"2\\n\"\n"
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\\n\", \"Expected: 2\\nActual: {}\".format(solution())"
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n7 1\\n3 2\\n10 0\") == \"10.5\"\nassert solution(\"3\\n2 1\\n4 0\\n0 3\") == \"-1\""
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n7 1\\n3 2\\n10 0') == '10.5'\nassert solution('3\\n2 1\\n4 0\\n0 3') == '-1'"
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n7 1\\n3 2\\n10 0') == '10.5'\nassert solution('3\\n2 1\\n4 0\\n0 3') == '-1'"
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n7 1\\n3 2\\n10 0\") == \"10.5\"\nassert solution(\"3\\n2 1\\n4 0\\n0 3\") == \"-1\""
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 10.5, \"Incorrect output.\""
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == sample_output_1, \"Test 1\"\nassert solution(sample_input_2) == sample_output_2, \"Test 2\""
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input1) == \"10.5\"\nassert solution(sample_input2) == \"-1\"\n\nfrom typing import List"
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n7 1\\n3 2\\n10 0\\n') == '10.5\\n'\nassert solution('3\\n2 1\\n4 0\\n0 3\\n') == '-1\\n'"
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Sample Input 1\") == \"10.5\"\nassert solution(\"Sample Input 2\") == \"-1\""
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"10.5\""
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    2 0.5\n    2 0.5\n    1 0.5\n    \"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n    2 0.5\n    2 0.51\n    1 0.49\n    \"\"\"\n) == \"2\\n\""
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 0.5\\n2 0.5\\n1 0.5\\n') == '1\\n'\nassert solution('2 0.5\\n2 0.51\\n1 0.49\\n') == '2\\n'"
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"2 0.5\\n2 0.5\\n1 0.5\"\n) == \"1\\n\"\n\nassert solution(\n    \"2 0.5\\n2 0.51\\n1 0.49\"\n) == \"2\\n\""
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 0.5\\n2 0.5\\n1 0.5\\n\") == \"1\"\nassert solution(\"2 0.5\\n2 0.51\\n1 0.49\\n\") == \"2\""
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1\\n\", \"Solution is incorrect\""
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Your solution is wrong!\"\n"
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 0.5\\n2 0.5\\n1 0.5\\n\") == \"1\"\nassert solution(\"2 0.5\\n2 0.51\\n1 0.49\\n\") == \"2\""
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 0.5\\n2 0.5\\n1 0.5\\n\") == \"1\\n\"\nassert solution(\"2 0.5\\n2 0.51\\n1 0.49\\n\") == \"2\\n\""
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Test failed: Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 0.5\\n2 0.5\\n1 0.5\\n\") == \"1\"\nassert solution(\"2 0.5\\n2 0.51\\n1 0.49\\n\") == \"2\""
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"yes\""
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"yes\""
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5 2\\n3 3 3 3\\n0 1\\n0 3\\n1 3\\n1 2\\n2 3\") == \"yes\\n\"\nassert solution(\"5 4 4\\n1 1 2 2 2\\n0 1\\n2 3\\n3 4\\n4 2\") == \"yes\\n\""
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == \"yes\"\nassert solution(sample_input2) == \"no\""
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5 2\\n3 3 3 3\\n0 1\\n0 3\\n1 3\\n1 2\\n2 3\\n\") == \"yes\\n\"\nassert solution(\"5 4 4\\n1 1 2 2 2\\n0 1\\n2 3\\n3 4\\n4 2\\n\") == \"yes\\n\""
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == sample_output"
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"yes\"\n"
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"yes\"\nassert solution(input()) == \"no\""
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"yes\""
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5 2\\n3 3 3 3\\n0 1\\n0 3\\n1 3\\n1 2\\n2 3\\n\") == \"yes\\n\"\nassert solution(\"5 4 4\\n1 1 2 2 2\\n0 1\\n2 3\\n3 4\\n4 2\\n\") == \"yes\\n\"\n"
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2\\n1\\n2\\n\""
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\"\n\nfrom typing import List"
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n5\\n5\\n5\\n\") == \"2\\n1\\n2\\n\"\nassert solution(\"4\\n20\\n15\\n17\\n14\\n\") == \"5\\n8\\n2\\n7\\n\"\nassert solution(\"3\\n6\\n12\\n18\\n\") == \"2\\n4\\n6\\n8\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n\") == \"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n\""
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2\\n1\\n2\\n\"\nassert solution() == \"5\\n8\\n2\\n7\\n\""
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n5\\n5\\n5\\n\") == [\"2\", \"1\", \"2\"]\nassert solution(\"4\\n20\\n15\\n17\\n14\\n\") == [\"5\", \"8\", \"2\", \"7\"]\nassert solution(\"3\\n6\\n2\\n8\\n5\\n\") == [\"2\", \"1\", \"4\"]"
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"Output the original ring on 3 lines.\\n2\\n1\\n2\""
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Testcase {i+1} failed. Expected output: {expected_output}, Actual output: {solution(input())}\" for i, (input_, expected_output) in enumerate(zip(input_list, expected_output_list))"
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output"
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == expected_output, \"Test failed\""
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\npython\\np^ main.py\\np^ -n 10\") == \"python\\npython main.py\\npython main.py -n 10\"\nassert solution(\"5\\npython\\njava\\np^\") == \"python\\njava\\njava\\npython\\njava\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"python\" + \" java\" + \" python main.py\" + \"java\" + \"def solution(stdin: str) -> str:\\n    pass\"\nassert solution(input()) == \"python\" + \"java\" + \"python main.py\" + \"java\" + \"def solution(stdin: str) -> str:\\n    pass\"\nassert solution(input()) == \"python\" + \"java\" + \"python main.py\" + \"java\" + \"def solution(stdin: str) -> str:\\n    pass\"\nassert solution(input()) == \"python\" + \"java\" + \"python main.py\" + \"java\" + \"def solution(stdin: str) -> str:\\n    pass\"\nassert solution(input()) == \"python\" + \"java\" + \"python main.py\" + \"java\" + \"def solution(stdin: str) -> str:\\n    pass\"\nassert solution(input()) == \"python\" + \"java\" + \"python main.py\" + \"java\" + \"def solution(stdin: str) -> str:\\n    pass\"\nassert solution(input()) == \"python\" + \"java\" + \"python main.py\" + \"java\" + \"def solution(stdin: str) -> str:\\n    pass\"\nassert solution(input()) == \"python\" + \"java\" + \"python main.py\" + \"java\" + \"def solution(stdin: str) -> str:\\n    pass\"\nassert solution(input()) == \"python\" + \"java\" + \"python main.py\" + \"java\" + \"def solution(stdin: str) -> str:\\n    pass\"\nassert solution(input()) == \"python\" + \"java\" + \"python main.py\" + \"java\" + \"def solution(stdin: str) -> str:\\n    pass\"\nassert solution(input()) == \"python\" + \"java\" + \"python main.py\" + \"java\" + \"def solution(stdin: str) -> str:\\n    pass\"\nassert solution(input()) == \"python\" + \"java\" + \"python main.py\" + \"java\" + \"def solution(stdin: str) -> str:\\n    pass\"\nassert solution(input()) == \"python\" + \"java\" + \"python main.py\" + \"java\" + \"def solution(stdin: str) -> str:\\n    pass\"\nassert solution(input()) == \"python\" + \"java\" + \"python main.py\" + \"java\" + \"def solution(stdin: str) -> str:\\n    pass\"\nassert solution(input()) == \"python\" + \"java\" + \"python main.py\" + \"java\" + \"def solution(stdin: str) -> str:\\n    pass\"\nassert solution(input()) == \"python\" + \"java\" + \"python main.py\" + \"java\" + \"def solution(stdin: str) -> str:\\n    pass\"\nassert solution(input()) == \"python\" + \"java\" + \"python main.py\" + \"java\" + \"def solution(stdin: str) -> str:\\n    pass\"\nassert solution(input()) == \"python\" + \"java\" + \"python main.py\" + \"java\" + \"def solution(stdin: str) -> str:\\n    pass\"\nassert solution(input()) == \"python\" + \"java\" + \"python main.py\" + \"java\" + \"def solution(stdin: str) -> str:\\n    pass\"\nassert solution(input()) == \"python\" + \"java\" + \"python main.py\" + \"java\" + \"def solution(stdin: str) -> str:\\n    pass\"\nassert solution(input()) == \"python\" + \"java\" + \"python main.py\" + \"java\" + \"def solution(stdin: str) -> str:\\n    pass\"\nassert solution(input()) == \"python\" + \"java\" + \"python main.py\" + \"java\" + \"def solution(stdin: str) -> str:\\n    pass\"\nassert solution(input()) == \"python\" + \"java\" + \"python main.py\" + \"java\" + \"def solution(stdin: str) -> str:\\n    pass\"\nassert solution(input()) == \"python\" + \"java\" + \"python main.py\" + \"java\" + \"def solution(stdin: str) -> str:\\n    pass\"\nassert solution(input()) == \"python\" + \"java\" + \"python main.py\" + \"java\" + \"def solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Expected output: '{expected_output}', but got: '{solution(input())}'.\""
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input(\"Enter input: \")) == \"python\\njava\\njava\\npython\\njava\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"python\\npython main.py\\npython main.py -n 10\\njava\\njava\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nopen(\"input.txt\", \"w\").write(\"3\\npython\\np^ main.py\\n^ -n 10\\n\")"
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"python\") == \"python\\npython main.py\\npython main.py -n 10\"\nassert solution(\"java\") == \"java\\njava\\njava\\npython\\njava\\ndef solution(stdin: str) -> str:\\npass\"\nassert solution(\"abc\") == \"abc\\nabc\\ndef solution(stdin: str) -> str:\\npass\""
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}\\nOutput: {output()}\\nSolution: {solution(input())}\\n\""
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\npython\\np^ main.py\\n^ -n 10\\n') == ['python', 'python main.py', 'python main.py -n 10']\n\nassert solution('5\\npython\\njava\\n^\\n^^^\\n^^^\\n') == ['python', 'java', 'java', 'python', 'java', 'def solution(stdin: str) -> str:']\n\nassert solution('3\\npython\\np^ main.py\\n^ -n 10\\n') == ['python', 'python main.py', 'python main.py -n 10']\n\nassert solution('5\\npython\\njava\\n^\\n^^^\\n^^^\\n') == ['python', 'java', 'java', 'python', 'java', 'def solution(stdin: str) -> str:']"
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\", \"The input should be empty.\"\nassert solution(\"python\\n\") == \"python\\n\", \"The input should be a single line.\"\nassert solution(\"python\\nmain.py\\n\") == \"python\\nmain.py\\n\", \"The input should be a single line.\"\n\nfor _ in range(int(input())):\n    command = input().strip()\n    if command:\n        history = []\n        line = \"\"\n        for c in command:\n            if c == \"^\":\n                if not history:\n                    history.append(line)\n                    line = \"\"\n                    continue\n                if len(history[-1]) > 1:\n                    line = history[-1]\n                    history.pop()\n                else:\n                    line = history.pop()\n            else:\n                if c == \" \":\n                    if line:\n                        history.append(line)\n                        line = \"\"\n                else:\n                    line += c\n        if line:\n            history.append(line)\n\nfor command in history:\n    print(command)"
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"python\\njava\\np\\njava\\n^\") == \"python\\njava\\njava\\npython\\njava\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"python\\njava\\np\\njava\\n^main.py\") == \"python\\njava\\njava\\npython\\njava\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"python\\njava\\np\\njava\\n^-n 10\") == \"python\\njava\\njava\\npython\\njava\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"python\\njava\\np\\njava\\n^main.py\\n^\") == \"python\\njava\\njava\\npython\\njava\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"python\\njava\\np\\njava\\n^main.py\\n^main.py\\n^\") == \"python\\njava\\njava\\npython\\njava\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == 'this sentence makes perfect sense', \"Incorrect solution for the first test case.\"\n\nassert solution(stdin) == 'impossible', \"Incorrect solution for the second test case.\""
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=sample_input_1) == \"this sentence makes perfect sense\", \"Test 1 failed\"\nassert solution(stdin=sample_input_2) == \"impossible\", \"Test 2 failed\""
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('tihssnetnceemkaesprfecetsesne', 5, ['makes', 'perfect','sense','sentence', 'this']) == 'this sentence makes perfect sense'"
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\", 5, \"makes\", \"perfect\", \"sense\", \"sentence\", \"this\") == \"this sentence makes perfect sense\"\nassert solution(\"hitehre\", 2, \"there\", \"hello\") == \"impossible\""
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\") == \"this sentence makes perfect sense\"\nassert solution(\"hitehre\") == \"impossible\"\n\nfrom typing import List"
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('tihssnetnceemkaesprfecetsesne\\n5\\nmakes\\nperfect\\nsense\\nsentence\\nthis') == 'this sentence makes perfect sense'\nassert solution('hitehre\\n2\\nthere\\nhello') == 'impossible'"
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('tihssnetnceemkaesprfecetsesne\\n5\\nmakes\\nperfect\\nsense\\nsentence\\nthis') == 'this sentence makes perfect sense'\nassert solution('hitehre\\n2\\nthere\\nhello') == 'impossible'"
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\", 5, \"makes\", \"perfect\", \"sense\", \"sentence\", \"this\") == \"this sentence makes perfect sense\"\nassert solution(\"hitehre\", 2, \"there\", \"hello\") == \"impossible\""
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\\n5\\nmakes\\nperfect\\nsense\\nsentence\\nthis\") == \"this sentence makes perfect sense\"\nassert solution(\"hitehre\\n2\\there\\hello\") == \"impossible\"\n"
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\", 5, \"makes\", \"perfect\", \"sense\", \"sentence\", \"this\") == \"this sentence makes perfect sense\"\nassert solution(\"hitehre\", 2, \"there\", \"hello\") == \"impossible\""
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2\\n2 2\\n\") == \"4\\n\"\nassert solution(\"2 2\\n\") == \"16\\n\""
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2\\n2 2\\n\") == \"4\\n\"\nassert solution(\"2 2\\n\") == \"16\\n\"\n"
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Test case failed\"\n"
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=input()) == expected_output, f\"The output is incorrect. Expected: {expected_output}, Received: {solution(stdin=input())}\"\n"
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"1 2\n    \"\"\"\n) == \"4\"\n\nassert solution(\n    \"\"\"2 2\n    \"\"\"\n) == \"16\""
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Test failed: solution({input()})!= {output}\"\nfor _ in range(1000):\n    n, m = map(int, input().split())\n    result = solution(input())\n    if result == output:\n        break\nprint(result)"
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2\") == \"4\"\nassert solution(\"2 2\") == \"16\""
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input1) == \"4\"\nassert solution(sample_input2) == \"16\""
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"4\\n\"\nassert solution(open(\"sample_input1.txt\", \"r\").read()) == \"4\\n\"\nassert solution(open(\"sample_input2.txt\", \"r\").read()) == \"16\\n\""
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '2' # correct solution\n\nfrom typing import List"
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2"
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Sample Input 1\", \"abcbab\", \"2\", \"cb\", \"cbab\") == 2, \"Incorrect output for sample input 1\"\nassert solution(\"Sample Input 2\", \"abab\", \"2\", \"bac\", \"baba\") == 4, \"Incorrect output for sample input 2\""
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\nababab\\n2\\nbac\\nbaba') == '4'\nprint(\"PASSED\")"
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Incorrect output: {solution(input())}, expected {expected_output}\""
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2\"\nprint(\"Success!\")"
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin.read()) == \"2\", \"The correct number of untileable cells is not obtained.\""
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\nabcbab\\n2\\ncb\\ncbab\") == \"2\\n\""
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2\\n\"\nassert solution(stdin) == \"4\\n\""
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('6\\nabcbab\\n2\\ncb\\ncbab') == '2\\n'\nassert solution('4\\nababa\\n2\\nbac\\nbaba') == '4\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n"
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected"
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Expected output '{output}', but got '{solution(input())}'\""
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n24\\n10 10\\n30 10\\n20 20\") == \"4\\n17.071067\\n20\\n22.928932\\n\""
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"50\\n4\\n110 10\\n80 10\\n80 0\\n110 0\") == \"6\\n85\\n90\\n95\\n100\\n105\"\nassert solution(\"24\\n3\\n10 10\\n30 10\\n20 20\") == \"4\\n17.071067\\n20\\n22.928932\""
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(110 10\n80 10\n80 0\n110 0) == 6\nassert solution(24 3\n10 10\n30 10\n20 20) == 4\n"
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"50\\n4\\n110 10\\n80 10\\n80 0\\n110 0\\n\") == \"6\\n85\\n90\\n95\\n100\\n105\\n\"\nassert solution(\"24\\n3\\n10 10\\n30 10\\n20 20\\n\") == \"4\\n17.071067\\n20\\n22.928932\\n\"\n"
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_1) == \"6\\n85\\n90\\n95\\n100\\n105\"\nassert solution(input_2) == \"4\\n17.071067\\n20\\n22.928932\""
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"1 1 1\""
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == 'Output', solution(input())"
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r')) == '''6\n85\n90\n95\n100\n105'''\n\nfrom typing import List"
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 11\") == \"yes\"\nassert solution(\"10 7\") == \"yes\""
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 11\") == \"yes\"\nassert solution(\"10 7\") == \"yes\""
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 11\") == \"yes\"\nassert solution(\"10 7\") == \"yes\""
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 11\") == \"yes\""
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 11\") == \"yes\"\nassert solution(\"10 7\") == \"yes\""
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 11\") == \"yes\"\nassert solution(\"10 7\") == \"yes\""
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input1) == \"yes\"\nassert solution(sample_input2) == \"yes\""
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 11\") == \"yes\"\nassert solution(\"10 7\") == \"yes\""
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('10 11') == 'yes'\nassert solution('10 7') == 'yes'\n"
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 11\") == \"yes\"\nassert solution(\"10 7\") == \"yes\"\nassert solution(\"100 100\") == \"yes\"\nassert solution(\"100 7\") == \"no\"\nassert solution(\"900 100\") == \"no\"\nassert solution(\"900 1000\") == \"no\"\nassert solution(\"1000 1000\") == \"no\"\n"
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3 4\\n2 5\\n1 6\") == \"3\\n1 6\\n2 5\\n3 4\\n\""
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n10 30\\n20 40\\n30 50\\n10 60\\n30 40\") == \"3\\n10 60\\n30 50\\n30 40\"\nassert solution(\"3\\n3 4\\n2 5\\n1 6\") == \"3\\n1 6\"\nassert solution(\"3\\n2 5\\n1 6\\n3 4\") == \"3\\n1 6\"\nassert solution(\"5\\n3 4\\n2 5\\n1 6\") == \"3\\n1 6\"\nassert solution(\"3\\n1 6\\n2 5\\n3 4\") == \"3\\n1 6\"\n"
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n3 4\\n2 5\\n1 6\") == \"3\\n1 6\\n2 5\\n3 4\"\nassert solution(\"5\\n10 30\\n20 40\\n30 50\\n10 60\\n30 40\") == \"3\\n10 60\\n30 50\\n30 40\""
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, \"Expected output: {}\\nActual output: {}\".format(expected_output, solution(input()))"
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '''\n3\n1 6\n2 5\n3 4\n'''"
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r')) == \"3\\n1 6\\n2 5\\n3 4\\n\"\nassert solution(open('input1.txt', 'r')) == \"3\\n1 6\\n2 5\\n3 4\\n\"\nassert solution(open('input2.txt', 'r')) == \"3\\n10 60\\n30 50\\n30 40\\n\""
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n3 4\\n2 5\\n1 6\\n\") == \"3\\n1 6\\n2 5\\n3 4\\n\"\nassert solution(\"5\\n10 30\\n20 40\\n30 50\\n10 60\\n30 40\\n\") == \"3\\n10 60\\n30 50\\n30 40\\n\""
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Output the length K of the longest sequence on the first line.\\nEach of the following K lines should contain one element of the sequence, an interval in the same format it was given in the input.\""
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"3\\n1 6\\n2 5\\n3 4\""
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"3\\n1 6\\n2 5\\n3 4\\n\", \"The output is incorrect.\""
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"your_output_here\", \"Your solution is incorrect!\""
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected, f\"Test case failed: {stdin}\\nExpected output: {expected}\\nGot output: {solution(stdin)}\""
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Your solution is incorrect. Expected {expected_output}, but got {solution(input())}.\""
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 1\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\") == \"5836\\n\", \"Test case 1 failed.\"\n\nassert solution(\"5 2\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\") == \"1828\\n\", \"Test case 2 failed.\""
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input1) == \"5836\", \"Test case 1 failed\"\nassert solution(sample_input2) == \"1828\", \"Test case 2 failed\""
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 1\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\") == 5836\nassert solution(\"5 2\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\") == 1828\n"
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt').read()) == 'Output 1\\n', 'Output is wrong.'"
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 1\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\\n\") == \"5836\\n\", \"Test case 1 failed\"\n\nassert solution(\"5 2\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\\n\") == \"1828\\n\", \"Test case 2 failed\""
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 1\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\") == \"5836\"\nassert solution(\"5 2\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\") == \"1828\""
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n5 1\n10 10 5\n9 8 10\n4 12 20\n12 4 8\n2 3 16\n''') == '5836\\n'\n\nassert solution('''\n5 2\n10 10 5\n9 8 10\n4 12 20\n12 4 8\n2 3 16\n''') == '1828\\n'\n\nassert solution('''\n5 1\n10 10 5\n9 8 10\n4 12 20\n12 4 8\n2 3 16\n''') == '5836\\n'\n\nassert solution('''\n5 2\n10 10 5\n9 8 10\n4 12 20\n12 4 8\n2 3 16\n''') == '1828\\n'\n\nassert solution('''\n5 1\n10 10 5\n9 8 10\n4 12 20\n12 4 8\n2 3 16\n''') == '5836\\n'\n\nassert solution('''\n5 2\n10 10 5\n9 8 10\n4 12 20\n12 4 8\n2 3 16\n''') == '1828\\n'"
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == \"50\"\nassert solution(sample_input_2) == \"impossible\"\n\nfrom typing import List"
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    '''\n    3\n    7 2401 3299 0\n    6 2401 2399 0\n    2 750 750 99\n    '''\n) == '50'\n\nassert solution(\n    '''\n    3\n    7 100 200 200\n    8 100 300 200\n    9 100 400 200\n    '''\n) == 'impossible'"
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n7 2401 3299 0\\n6 2401 2399 0\\n2 750 750 99') == '50\\n'\nassert solution('3\\n7 100 200 200\\n8 100 300 200\\n9 100 400 200') == 'impossible\\n'"
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n7 2401 3299 0\\n6 2401 2399 0\\n2 750 750 99\") == \"50\\n\"\nassert solution(\"3\\n7 100 200 200\\n8 100 300 200\\n9 100 400 200\") == \"impossible\\n\""
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"50\", \"Incorrect Output\""
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n7 2401 3299 0\\n6 2401 2399 0\\n2 750 750 99\\n\") == 50\nassert solution(\"3\\n7 100 200 200\\n8 100 300 200\\n9 100 400 200\\n\") == \"impossible\""
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"50\\n\"\n"
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n7 2401 3299 0\\n6 2401 2399 0\\n2 750 750 99\") == 50\nassert solution(\"3\\n7 100 200 200\\n8 100 300 200\\n9 100 400 200\") == \"impossible\""
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"50\\n\", \"Incorrect output\"\nassert solution(open(\"input.txt\", \"r\")) == \"50\\n\", \"Incorrect output\""
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n7 2401 3299 0\\n6 2401 2399 0\\n2 750 750 99\") == \"50\\n\"\nassert solution(\"3\\n7 100 200 200\\n8 100 300 200\\n9 100 400 200\") == \"impossible\\n\""
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin='5.0') == '0 0 0 0 1\\n'\n\nassert solution(stdin='4.5') == '0 0 0 1 1\\n'"
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5.0\") == \"0 0 0 0 1\"\nassert solution(\"4.5\") == \"0 0 0 1 1\""
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5.0\") == \"0 0 0 0 1\"\nassert solution(\"4.5\") == \"0 0 0 1 1\""
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5.0\") == \"0 0 0 0 1\\n\"\nassert solution(\"4.5\") == \"0 0 0 1 1\\n\""
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5.0') == '0 0 0 0 1'\nassert solution('4.5') == '0 0 0 1 1'"
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input(\"Enter P: \")) == \"0 0 0 0 1\""
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"5.0\") == \"0 0 0 0 1\", \"Output 1 is incorrect\"\nassert solution(stdin=\"4.5\") == \"0 0 0 1 1\", \"Output 2 is incorrect\""
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5.0) == \"0 0 0 0 1\"\nassert solution(4.5) == \"0 0 0 1 1\""
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}, got: {solution(stdin)}\""
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"3\", \"The output should be 3, but it is %s\" % solution()"
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 3 1\\n1 7 8 2 6 4 3 5\") == \"8\"\nassert solution(\"8 2 1\\n1 7 8 2 6 4 3 5\") == \"3\""
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 3 1\\n1 7 8 2 6 4 3 5\") == \"8\"\nassert solution(\"8 2 1\\n1 7 8 2 6 4 3 5\") == \"3\""
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 3 1\\n1 7 8 2 6 4 3 5\") == \"8\"\nassert solution(\"8 2 1\\n1 7 8 2 6 4 3 5\") == \"3\""
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"3\"\n"
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    8 3 1\n    1 7 8 2 6 4 3 5\n    \"\"\"\n) == \"8\"\n\nassert solution(\n    \"\"\"\n    8 2 1\n    1 7 8 2 6 4 3 5\n    \"\"\"\n) == \"3\""
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Error: solution({input()})!= output\\nInput: {input()}\\nOutput: {output}\""
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 3 1\\n1 7 8 2 6 4 3 5\\n\") == \"8\\n\"\nassert solution(\"8 2 1\\n1 7 8 2 6 4 3 5\\n\") == \"3\\n\""
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 3 1\\n1 7 8 2 6 4 3 5\") == \"8\"\nassert solution(\"8 2 1\\n1 7 8 2 6 4 3 5\") == \"3\"\n"
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('8 3 1\\n1 7 8 2 6 4 3 5') == '8\\n'\nassert solution('8 2 1\\n1 7 8 2 6 4 3 5') == '3\\n'"
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n2 3 4 1\\n\") == 3\nassert solution(\"6 3\\n2 2 2 4 4 4\\n\") == 4"
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\n2 3 4 1\\n6 3\\n2 2 2 4 4 4\") == \"3\"\nassert solution(\"4 2\\n2 3 4 1\\n6 3\\n2 2 2 4 4 4\") == \"3\"\nassert solution(\"4 2\\n2 3 4 1\\n6 3\\n2 2 2 4 4 4\") == \"3\"\n\nfrom typing import List"
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 3, \"Please implement the solution function\""
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n2 3 4 1\\n\") == \"3\\n\"\nassert solution(\"6 3\\n2 2 2 4 4 4\\n\") == \"4\\n\""
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"Solution for Testing\""
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 2\\n2 3 4 1\\n') == '3\\n'\nassert solution('6 3\\n2 2 2 4 4 4\\n') == '4\\n'"
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"3\", \"Expected output: 3, but got: \" + solution(stdin)"
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n2 3 4 1\") == \"3\"\nassert solution(\"6 3\\n2 2 2 4 4 4\") == \"4\""
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n2 3 4 1\") == 3\nassert solution(\"6 3\\n2 2 2 4 4 4\") == 4"
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n2 3 4 1\\n6 3\\n2 2 2 4 4 4\") == \"3\""
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 1 1.732050') == '1.732050808'\nassert solution('1 1 3.0') == '-1'"
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1 1.732050\\n1 1 3.0\\n\") == \"1.732050808\"\nassert solution(\"1 1 3.0\\n1 1 1.732050\\n\") == \"-1\"\n"
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == \"1.732050808\"\nassert solution(sample_input2) == \"-1\""
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\"\nfor _ in range(test_cases):\n    a, b, c = map(float, input().split())\n    assert 0 <= a <= 100 and 0 <= b <= 100 and 0 <= c <= 100\n    print(solution(f\"{a:.3f} {b:.3f} {c:.3f}\"))"
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''1 1 1.732050''') == '1.732050808'\nassert solution('''1 1 3.0''') == '-1'"
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 1 1.732050') == '1.732050808'\nassert solution('1 1 3.0') == '-1'\n\nfrom typing import List"
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1 1.732050\") == \"1.732050808\"\nassert solution(\"1 1 3.0\") == -1"
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(str(1.732050)) == \"1.732050808\", \"1.732050\"\nassert solution(str(1.0)) == \"1.0\", \"1.0\"\nassert solution(str(3.0)) == \"-1\", \"3.0\"\n\nfrom typing import List"
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '1.732050808', 'Solution does not match'\nprint('Success')"
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, \"Test case failed.\"\n"
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2.4999999987500003\""
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"2.4999999987500003\""
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n3 4 2\\n.75\\n\") == \"2.4999999987500003\"\nassert solution(\"2\\n0 100 10\\n0 -100 100\\n.80\\n\") == \"9.999999999000002\""
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n3 4 2\\n.75\\n\") == \"2.4999999987500003\"\nassert solution(\"2\\n0 100 10\\n0 -100 100\\n.80\\n\") == \"9.999999999000002\""
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == expected_output, f\"Solution: {solution}, Expected Output: {expected_output}\"\n"
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n3 4 2\\n.75\\n\") == \"2.4999999987500003\\n\"\nassert solution(\"2\\n0 100 10\\n0 -100 100\\n.80\\n\") == \"9.999999999000002\\n\""
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n3 4 2\\n.75\") == \"2.4999999987500003\\n\", \"Your solution is incorrect.\"\nassert solution(\"2\\n0 100 10\\n0 -100 100\\n.80\") == \"9.999999999000002\\n\", \"Your solution is incorrect.\""
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n3 4 2\\n.75\\n\") == \"2.4999999987500003\"\nassert solution(\"2\\n0 100 10\\n0 -100 100\\n.80\\n\") == \"9.999999999000002\""
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n3 4 2\\n.75\\n\") == \"2.4999999987500003\"\nassert solution(\"2\\n0 100 10\\n0 -100 100\\n.80\\n\") == \"9.999999999000002\""
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2.4999999987500003\", \"The solution is incorrect.\""
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"your_output\", \"Your solution should return 'your_output'.\"\n"
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 3\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n\") == \"0\\n3\\n\"\nassert solution(\"4 5\\n1 1 4 3 4\\n2 1 1\\n2 2 2\\n2 3 3\\n2 4 4\\n\") == \"3\\n2\\n1\\n0\\n\""
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1 5 1 2\") == \"0\\n3\"\nassert solution(\"2 1 6\") == \"0\\n3\"\nassert solution(\"4 5\") == \"3\\n2\"\nassert solution(\"6 3\") == \"3\\n2\""
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Output does not match expected output\\nInput: {stdin}\\nExpected Output: {expected_output}\"\n\nstdin = \"6 3\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n\"\nexpected_output = \"0\\n3\\n\"\nassert solution(stdin) == expected_output, f\"Output does not match expected output\\nInput: {stdin}\\nExpected Output: {expected_output}\"\n\nstdin = \"4 5\\n1 1 4 3 4\\n2 1 1\\n2 2 2\\n2 3 3\\n2 4 4\\n\"\nexpected_output = \"3\\n2\\n1\\n0\\n\"\nassert solution(stdin) == expected_output, f\"Output does not match expected output\\nInput: {stdin}\\nExpected Output: {expected_output}\""
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 6 2 1 6\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n\") == \"0\\n3\\n\"\nassert solution(\"4 5\\n1 1 4 3 4\\n2 1 1\\n2 2 2\\n2 3 3\\n2 4 4\\n\") == \"3\\n2\\n1\\n0\\n\""
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}\\nGot: {solution(stdin)}\""
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1 4 3 4\\n2 1 1\\n2 2 2\\n2 3 3\\n2 4 4\\n\") == \"3\\n2\\n1\\n0\""
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(r'6 3\\n2 1 6\\n1 1 5 1 2\\n2 1 6') == '0\\n3\\n'\nassert solution(r'4 5\\n1 1 4 3 4\\n2 1 1\\n2 2 2\\n2 3 3\\n2 4 4') == '3\\n2\\n1\\n0\\n'"
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"Test failed: {output()}!= {solution(input())}\"\n\nN, Q = map(int, input().split())\nboxes = list(map(int, input().split()))\n\nfor _ in range(Q):\n    line = input()\n    if line.startswith('1'):\n        L, R, A, B = map(int, line.split())\n        A = A % B\n        boxes[L:R+1] = [0] * A\n        for i in range(R-L+1):\n            boxes[R+1+i] = boxes[R+1+i] ^ boxes[L+1+i]\n        print(sum(boxes[L:R+1]))\n    elif line.startswith('2'):\n        L, R = map(int, line.split())\n        print(sum(boxes[L:R+1]))\n    else:\n        pass"
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 3\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n\") == \"0\\n3\\n\"\nassert solution(\"4 5\\n1 1 4 3 4\\n2 1 1\\n2 2 2\\n2 3 3\\n2 4 4\\n\") == \"3\\n2\\n1\\n0\\n\""
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 7 1000000007\") == \"1\\n\", \"Your solution is incorrect. Please check the code.\""
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output\nprint(\"ok\")"
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 7 1000000007\") == \"1\"\nassert solution(\"3 2 1000000007\") == \"4\""
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 7 1000000007\") == \"1\"\nassert solution(\"3 2 1000000007\") == \"4\""
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 7 1000000007\") == \"1\"\nassert solution(\"3 2 1000000007\") == \"4\""
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 7 1000000007') == '1\\n'\nassert solution('3 2 1000000007') == '4\\n'"
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 7 1000000007\") == \"1\\n\"\nassert solution(\"3 2 1000000007\") == \"4\\n\""
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '1\\n', 'Test case 1 failed'"
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 10\\n6\") == 5\nassert solution(\"3 5\\n11\") == 8"
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r').read()) == 'Output'"
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, but got {solution(input())}\""
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"The provided code is incorrect.\""
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 10\\n6\") == \"5\"\nassert solution(\"3 5\\n11\") == \"8\""
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 10\\n6\") == \"5\"\nassert solution(\"3 5\\n11\") == \"8\""
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Your code does not pass the test case. Please check the following:\\n{input()}\\n{output()}\\n\""
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Solution does not match the expected output.\\nInput: {input()}\\nOutput: {output}\\n\""
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Test failed: {solution(input())}!= {expected}\""
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"Output the number of grey cells the hedgehog visits.\\n\", \"Test failed\""
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 2, \"Invalid output\""
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == expected_output\n"
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 2\\n1 2 1\\n3 2 1\\n\") == 2\nassert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\\n\") == 3"
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2\"\nprint(\"Test Passed\")\n"
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\") == \"2\"\nassert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\\n4 4 4\") == \"3\""
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 2\\n1 2 1\\n3 2 1\\n\") == \"2\\n\"\nassert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\\n\") == \"3\\n\""
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 2\\n1 2 1\\n3 2 1\\n\") == \"2\""
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\\n\") == \"2\"\nassert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\\n\") == \"3\""
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2\"\n\nassert solution() == \"3\""
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == solution(stdin)"
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '3'\n"
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"\"\"3\"\"\""
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input1) == output1, f\"Expected output {output1}, but got {solution(input1)}\"\nassert solution(input2) == output2, f\"Expected output {output2}, but got {solution(input2)}\""
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input) == output"
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 3"
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\\\n    pass\\\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\\\n    pass\\\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\\\n    pass\\\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\\\n    pass\\\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\\\n    pass\\\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\\\n    pass\\\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\\\n    pass\\\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\\\n    pass\\\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\\\n    pass\\\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\\\n    pass\\\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\\\n    pass\\\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\\\n    pass\\\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\\\n    pass\\\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\\\n    pass\\\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\\\n    pass\\\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\\\n    pass\\\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\\\n    pass\\\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\\\n    pass\\\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\\\n    pass\\\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\\\n    pass\\\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\\\n    pass\\\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\\\n    pass\\\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\\\n    pass\\\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\\\n    pass\\\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\\\n    pass\\\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\\\n    pass\\\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\\\n    pass\\\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\\\n    pass\\\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\\\n    pass\\\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\\\n    pass\\\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\\\n    pass\\\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\\\n    pass\\\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\\\n    pass\\\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\\\n    pass\\\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\\\n    pass\\\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\\\n    pass\\\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\\\n    pass\\\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\\\n    pass\\\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\\\n    pass\\\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\\\n    pass\\\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\\\n    pass\\\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\\\n    pass\\\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\\\n    pass\\\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\\\n    pass\\\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\\\n    pass\\\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\\\n    pass\\\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\\\n    pass\\\\n\\nassert solution == \\\"def solution(stdin: str) -> str:\\\\n    pass\\\\"
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n10 20 30\\n5 5 10\\n2 20\\n1 30\\n1 32\\n3 120\") == \"3\\n\"\nassert solution(\"3 1\\n10\\n10\\n1 10\\n1 10\\n1 10\") == \"3\\n\"\n"
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '3'"
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3, 1, 1, 1, 1, 1) == 3\nassert solution(3, 2, 2, 2, 2, 2) == 3\nassert solution(3, 3, 3, 3, 3, 3) == 3\nassert solution
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2\\n') == '1\\n'\nassert solution('3\\n') == '5\\n'"
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2') == '1\\n'\nassert solution('3') == '5\\n'"
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 1\n"
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1\", \"Your solution is incorrect\" # correct solution\n"
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(2) == 1, \"Sample Input 1: Expected output 1, but got: {}\".format(solution(2))\nassert solution(3) == 5, \"Sample Input 2: Expected output 5, but got: {}\".format(solution(3))"
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"5\"\nassert solution(5) == \"1\"\nassert solution(20) == \"1\""
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 5\n\nfor i in range(1, 21):\n    if (i & 1) == 0:\n        continue\n    N = i\n    print(N)\n    set_count = 0\n    pairs_count = 0\n    for j in range(2, N):\n        if (i * j) % N == 0:\n            set_count += 1\n            pairs_count += (i + j - 1) // 2\n    if set_count == 0 and pairs_count > 0:\n        set_count = 1\n    print(set_count)\n    print(pairs_count)\n    if set_count == 0:\n        break"
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(2) == \"1\\n\"\nassert solution(3) == \"5\\n\""
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 1"
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1\\n0 11 9\\n1 0 10\\n0 0 0\") == \"2\"\nassert solution(\"4 3\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0\") == \"-1\"\n"
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2\n"
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\\n0 11 9\\n1 0 10\\n0 0 0\") == \"2\"\nassert solution(\"4 3\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0\") == \"-1\""
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 1\\n0 11 9\\n1 0 10\\n0 0 0') == 2\nassert solution('4 3\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0') == -1\nassert solution('5 10\\n0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '2\\n'\nassert solution(stdin) == '2\\n'\nassert solution(stdin) == '2\\n'\nassert solution(stdin) == '2\\n'\nassert solution(stdin) == '-1\\n'\nassert solution(stdin) == '-1\\n'\nassert solution(stdin) == '-1\\n'\nassert solution(stdin) == '-1\\n'\nassert solution(stdin) == '-1\\n'\n"
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1\\n0 11 9\\n1 0 10\\n0 0 0\") == \"2\\n\"\nassert solution(\"4 3\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0\") == \"-1\\n\""
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1\\n0 11 9\\n1 0 10\\n0 0 0\") == \"2\\n\"\nassert solution(\"4 3\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0\") == \"-1\\n\""
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"0 11 9\\n1 0 10\\n0 0 0\") == \"2\\n\"\nassert solution(stdin=\"4 3\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0\") == \"-1\\n\""
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1\\n0 11 9\\n1 0 10\\n0 0 0\") == 2\nassert solution(\"4 3\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0\") == -1"
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2\\n\"\nassert solution(stdin) == \"2\\n\"\nassert solution(stdin) == \"2\\n\"\nassert solution(stdin) == \"2\\n\"\nassert solution(stdin) == \"-1\\n\""
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10\\n\") == \"4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\\n\"\n\nassert solution(\"2 1 0 1\\n0 1 100000\\n\") == \"2 100000 1\\n0 1 100000\\n\"\n\nassert solution(\"3 4 1 1\\n0 1 1\\n1 2 1\\n0 2 1\\n2 3 1\\n1 3 1\\n0 3 1\\n\") == \"3 2 3\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 1\\n\""
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10\\n\") == \"4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\\n\"\nassert solution(\"2 1 0 1\\n0 1 100000\\n\") == \"2 100000 1\\n0 1 100000\\n\""
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10\\n\") == \"4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\\n\"\nassert solution(\"2 1 0 1\\n0 1 100000\\n\") == \"2 100000 1\\n0 1 100000\\n\""
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10\\n\") == \"4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\\n\"\nassert solution(\"2 1 0 1\\n0 1 100000\\n\") == \"2 100000 1\\n0 1 100000\\n\""
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10\") == \"4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\"\nassert solution(\"2 1 0 1\\n0 1 100000\") == \"2 100000 1\\n0 1 100000\"\n"
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10\\n\") == \"4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\\n\"\n\nassert solution(\n    \"2 1 0 1\\n0 1 100000\\n\") == \"2 100000 1\\n0 1 100000\\n\""
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10\") == \"4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\"\nassert solution(\"2 1 0 1\\n0 1 100000\") == \"2 100000 1\\n0 1 100000\""
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10\\n\") == \"4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\"\nassert solution(\"2 1 0 1\\n0 1 100000\\n\") == \"2 100000 1\\n0 1 100000\""
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10\") == \"4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\"\n\nassert solution(\"2 1 0 1\\n0 1 100000\") == \"2 100000 1\\n0 1 100000\""
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10\\n\") == \"4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\""
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\nSMS\\nMMS\\n\") == \"3 5\"\nassert solution(\"2 3\\nS.M\\nM..\") == \"2 0\"\n"
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 3\\nSMS\\nMMS') == '3 5\\n'\nassert solution('2 3\\nS.M\\nM..') == '2 0\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"3 5\\n2 0\\n\"\nassert solution(stdin) == \"2 0\\n2 5\\n\""
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\nSMS\\nMMS\\n\") == \"3 5\\n\"\nassert solution(\"2 3\\nS.M\\nM..\") == \"2 0\\n\"\nassert solution(\"2 3\\nMMS\\nSMS\\n\") == \"3 5\\n\"\nassert solution(\"2 3\\nS..M\\nMMS\\n\") == \"2 0\\n\""
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"example1.txt\").read()) == \"3 5\\n\", \"Expected Output: 3 5\\n\"\nassert solution(open(\"example2.txt\").read()) == \"2 0\\n\", \"Expected Output: 2 0\\n\""
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r')) == '3 5\\n2 0'"
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\nSMS\\nMMS\") == \"3 5\\n\"\nassert solution(\"2 3\\nS.M\\nM..\") == \"2 0\\n\""
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\nSMS\\nMMS\") == \"3 5\\n\"\nassert solution(\"2 3\\nS.M\\nM..\") == \"2 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 3\\nSMS\\nMMS\\n2 3\\nS.M\\nM..') == '3 5\\n'\nassert solution('2 3\\nS.M\\nM..') == '2 0\\n'"
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\nSMS\\nMMS\") == \"3 5\"\nassert solution(\"2 3\\nS.M\\nM..\") == \"2 0\""
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\n# Example usage\\nprint(solution(\"0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a\"))\\n\\n# Example usage\\nprint(solution(\"0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\nSample Output 2: 1\\n6 b\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Example usage\\nprint(solution(\"0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\nSample Output 2: 1\\n6 b\\n\\n# Example usage\\nprint(solution(\"0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\nSample Output 2: 1\\n6 b\\n\\n# Example usage\\nprint(solution(\"0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\nSample Output 2: 1\\n6 b\\n\\n# Example usage\\nprint(solution(\"0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\nSample Output 2: 1\\n6 b\\n\\n# Example usage\\nprint(solution(\"0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\nSample Output 2: 1\\n6 b\\n\\n# Example usage\\nprint(solution(\"0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\nSample Output 2: 1\\n6 b\\n\\n# Example usage\\nprint(solution(\"0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\nSample Output 2: 1\\n6 b\\n\\n# Example usage\\nprint(solution(\"0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\nSample Output 2: 1\\n6 b\\n\\n# Example usage\\nprint(solution(\"0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\nSample Output 2: 1\\n6 b\\n\\n# Example usage\\nprint(solution(\"0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\nSample Output 2: 1\\n6 b\\n\\n# Example usage\\nprint(solution(\"0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\nSample Output 2: 1\\n6 b\\n\\n# Example usage\\nprint(solution(\"0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\nSample Output 2: 1\\n6 b\\n\\n# Example usage\\nprint(solution(\"0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\nSample Output 2: 1\\n6 b\\n\\n# Example usage\\nprint(solution(\"0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\nSample Output 2: 1\\n6 b\\n\\n# Example usage\\nprint(solution(\"0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\nSample Output 2: 1\\n6 b\\n\\n# Example usage\\nprint(solution(\"0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\nSample Output 2: 1\\n6 b\\n\\n# Example usage\\nprint(solution(\"0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\nSample Output 2: 1\\n6 b\\"
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('13\\n0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a') == ['2']\nassert solution('6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a') == ['1']\nassert solution('6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a') == ['1']"
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"13\\n0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a\") == \"2\\n3 c\\n6 c\\n\"\nassert solution(\"6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\") == \"1\\n6 b\\n\"\nassert solution(\"6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n1 S\\n10 E a\\n10 G b\\n1 T a\\n10 G a\\n10 E a\\n10 E b\\n1 T a\\n10 T a\\n\") == \"1\\n6 b\\n\""
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"2\\n3 c\\n6 c\\n\"\nassert solution(open(\"example1.txt\", \"r\")) == \"2\\n3 c\\n6 c\\n\"\nassert solution(open(\"example2.txt\", \"r\")) == \"1\\n6 b\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nprint(solution(open(\\\"example1.txt\\\", \\\"r\\\")))\\nprint(solution(open(\\\"example2.txt\\\", \\\"r\\\")))\\n\""
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('13\\n0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a\\n') == ['2', '3 c', '6 c']\nassert solution('6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n') == ['1', '6 b']"
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '2\\n3 c\\n6 c\\n'"
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}\\nActual output: {solution(input())}\"\n\nsolution = '''\n"
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('13\\n0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a') == '2\\n3 c\\n6 c\\n'\nassert solution('6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n') == '1\\n6 b\\n'\nassert solution('') == '1\\n6 b\\n'"
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"13\\n0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a\") == \"2\\n3 c\\n6 c\\n\"\nassert solution(\"6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n\") == \"1\\n6 b\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Expected '{expected}', but got '{solution(input())}'\""
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '40\\n'\nassert solution(input()) == '76\\n'"
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 5\\n288 291\\n') == '40\\n76\\n'"
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Test case failed: {solution(input())}!= {output}\"\n"
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output\nprint(output)"
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 40\nprint(\"All tests passed successfully!\")"
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 5\\n288 291\") == \"40\\n76\\n\"\n"
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 5\\n288 291\\n\") == \"40\\n76\\n\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 40\nassert solution() == 76"
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 5\") == \"40\"\nassert solution(\"288 291\") == \"76\""
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"COG\"\nassert solution(2) == 0\nassert solution(1) == 0"
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"COG\", \"The solution should be COG\"\nassert solution(stdin=\"2\\nCAT\\nDOG\\n\") == \"0\\n-1\\ndef solution(stdin: str) -> str:\\n    pass\", \"The solution should be 0 and -1\""
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\nCAT\\nDOG\\nCOT\\n\") == \"COG\"\nassert solution(\"2\\nCAT\\nDOG\\n\") == \"0\"\nassert solution(\"3\\nATTACK\\nGOAL\\nBOMB\\n\") == \"0\""
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    '''\n    3\n    CAT\n    DOG\n    COT\n    '''\n) == 'COG\\n3'\n\nassert solution(\n    '''\n    2\n    CAT\n    DOG\n    '''\n) == '0\\n-1'"
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"3\\nCAT\\nDOG\\nCOT\") == \"COG\\n3\\n\"\nassert solution(stdin=\"2\\nCAT\\nDOG\") == \"0\\n-1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"COG\", \"Your code is not correct!\"\nassert solution(stdin) == \"COG\", \"Your code is not correct!\"\nassert solution(stdin) == \"COG\", \"Your code is not correct!\"\nassert solution(stdin) == \"COG\", \"Your code is not correct!\"\nassert solution(stdin) == \"COG\", \"Your code is not correct!\"\nassert solution(stdin) == \"COG\", \"Your code is not correct!\"\nassert solution(stdin) == \"COG\", \"Your code is not correct!\"\nassert solution(stdin) == \"COG\", \"Your code is not correct!\"\nassert solution(stdin) == \"COG\", \"Your code is not correct!\"\nassert solution(stdin) == \"COG\", \"Your code is not correct!\"\nassert solution(stdin) == \"COG\", \"Your code is not correct!\"\nassert solution(stdin) == \"COG\", \"Your code is not correct!\"\nassert solution(stdin) == \"COG\", \"Your code is not correct!\"\nassert solution(stdin) == \"COG\", \"Your code is not correct!\"\nassert solution(stdin) == \"COG\", \"Your code is not correct!\"\nassert solution(stdin) == \"COG\", \"Your code is not correct!\"\nassert solution(stdin) == \"COG\", \"Your code is not correct!\"\nassert solution(stdin) == \"COG\", \"Your code is not correct!\"\nassert solution(stdin) == \"COG\", \"Your code is not correct!\"\nassert solution(stdin) == \"COG\", \"Your code is not correct!\"\nassert solution(stdin) == \"COG\", \"Your code is not correct!\"\nassert solution(stdin) == \"COG\", \"Your code is not correct!\"\nassert solution(stdin) == \"COG\", \"Your code is not correct!\"\nassert solution(stdin) == \"COG\", \"Your code is not correct!\"\nassert solution(stdin) == \"COG\", \"Your code is not correct!\"\nassert solution(stdin) == \"COG\", \"Your code is not correct!\"\nassert solution(stdin) == \"COG\", \"Your code is not correct!\"\nassert solution(stdin) == \"COG\", \"Your code is not correct!\"\nassert solution(stdin) == \"COG\", \"Your code is not correct!\"\nassert solution(stdin) == \"COG\", \"Your code is not correct!\"\nassert solution(stdin) == \"COG\", \"Your code is not correct!\"\nassert solution(stdin) == \"COG\", \"Your code is not correct!\"\nassert solution(stdin) == \"COG\", \"Your code is not correct!\"\nassert solution(stdin) == \"COG\", \"Your code is not correct!\"\nassert solution(stdin) == \"COG\", \"Your code is not correct!\"\nassert solution(stdin) == \"COG\", \"Your code is not correct!\"\nassert solution(stdin) == \"COG\", \"Your code is not correct!\"\nassert solution(stdin) == \"COG\", \"Your code is not correct!\"\nassert solution(stdin) == \"COG\", \"Your code is not correct!\"\nassert solution(stdin) == \"COG\", \"Your code is not correct!\"\nassert solution(stdin) == \"COG\", \"Your code is not correct!\"\nassert solution(stdin) == \"COG\", \"Your code is not correct!\"\nassert solution(stdin) == \"COG\", \"Your code is not correct!\"\nassert solution(stdin) == \"COG\", \"Your code is not correct!\"\nassert solution(stdin) == \"COG\", \"Your code is not correct!\"\nassert solution(stdin) == \"COG\", \"Your code is not correct!\"\nassert solution(stdin) == \"COG\", \"Your code is not correct!\"\nassert solution(stdin) == \"COG\", \"Your code is not correct!\"\nassert solution(stdin) == \"COG\", \"Your code is not correct!\"\nassert solution(stdin) == \"COG\", \"Your code is not correct!\"\nassert solution(stdin) == \"COG\", \"Your code is not correct!\"\nassert solution(stdin) == \"COG\", \"Your code is not correct!\"\nassert solution(stdin) == \"COG\", \"Your code is not correct!\"\nassert solution(stdin) == \"COG\", \"Your code is not correct!\"\nassert solution(stdin) == \"COG\", \"Your code is not correct!\"\nassert solution(stdin) == \"COG\", \"Your code is not correct!\"\nassert solution(stdin) == \"COG\", \"Your code is not correct!\"\n"
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\nCAT\\nDOG\\nCOT\\n\") == \"COG\", \"Output is incorrect\"\nassert solution(\"2\\nCAT\\nDOG\\n\") == \"0\", \"Output is incorrect\"\nassert solution(\"1\\nWILDCARD\\n\") == \"WILDCARD\", \"Output is incorrect\"\nassert solution(\"1\\n\") == \"0\", \"Output is incorrect\""
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"3\\nCAT\\nDOG\\nCOT\\n\") == \"COG\\n3\\n\", \"The output should be 'COG\\n3\\n'.\"\nassert solution(stdin=\"2\\nCAT\\nDOG\\n\") == \"0\\n-1\\ndef solution(stdin: str) -> str: pass\\n\", \"The output should be '0\\n-1\\ndef solution(stdin: str) -> str: pass\\n'.\"\nassert solution(stdin=\"2\\nCAT\\nDOG\\n\") == \"0\\n-1\\ndef solution(stdin: str) -> str: pass\\n\", \"The output should be '0\\n-1\\ndef solution(stdin: str) -> str: pass\\n'.\"\nassert solution(stdin=\"1\\n\") == \"0\\n-1\\ndef solution(stdin: str) -> str: pass\\n\", \"The output should be '0\\n-1\\ndef solution(stdin: str) -> str: pass\\n'.\""
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"Input {input()} and output {output()} are not matching.\""
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == ['COG']\nassert solution(stdin) == [0, -1]"
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3, 1) == 9\nassert solution(4, 3) == 6"
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"Output the number of sequences modulo 1000000007.\\n\""
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Test {i+1} failed\"\nprint(f\"Test {i+1} passed\")"
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('10 1') == '9'\nassert solution('4 3') == '6'"
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == output\nfor i in range(2, len(stdin) + 1):\n    assert i % 2 == 0, \"Input should be odd.\"\n    assert (1 <= int(stdin[i-1]) <= int(stdin[i])) or (int(stdin[i-1]) == int(stdin[i-2]), int(stdin[i-1])!= int(stdin[i])), \"Confusion should be between 1 and N.\"\nprint(output)"
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(10, 1) == 9\nassert solution(4, 3) == 6"
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input1) == \"9\", \"Sample Output 1: Incorrect output\"\nassert solution(sample_input2) == \"6\", \"Sample Output 2: Incorrect output\""
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected, f\"Test failed. Expected: {expected}, Got: {solution(stdin)}\""
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"9\\n\", \"Test failed for input: 10 1\\n\"\nassert solution(stdin) == \"6\\n\", \"Test failed for input: 4 3\\n\""
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 1\") == 9\nassert solution(\"4 3\") == 6"
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 5\\n/.V.\\n./.V.\\n..#..\\n.V.#.\\n\\.V./\") == 3, \"Expected output: 3, actual output: {}\".format(solution(\"5 5\\n/.V.\\n./.V.\\n..#..\\n.V.#.\\n\\.V./\"))\nassert solution(\"2 5\\nV...\\nH...V\") == -1, \"Expected output: -1, actual output: {}\".format(solution(\"2 5\\nV...\\nH...V\"))"
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == expected_output1\nassert solution(sample_input2) == expected_output2\n\nsample_input1 = \"\"\"5 5\n/.V.\\\n./.V.\n..#..\n.V.#.\n\\.V./\"\"\"\nsample_input2 = \"\"\"2 5\nV...\\\nH...V\"\"\"\n\nexpected_output1 = 3\nexpected_output2 = -1"
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 5\\n/.V.\\n./.V...#\\n.V.#.\\n\\.V./\\n\") == 3\nassert solution(\"2 5\\nV...\\nH...V\\n\") == -1"
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    5 5\n    /.V.\\\n   ./.V.\n   ..#..\n   .V.#.\n    \\.V./\n    \"\"\"\n) == 3\n\nassert solution(\n    \"\"\"\n    2 5\n    V...\\\n    H...V\n    \"\"\"\n) == -1"
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"The solution is {expected}, but got {solution(input())}\""
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == sample_output_1, \"Sample Input 1\"\nassert solution(sample_input_2) == sample_output_2, \"Sample Input 2\""
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('sample_input.txt')) == 3\nassert solution(open('sample_input.txt', 'r')) == 3\nassert solution(open('sample_output.txt')) == -1"
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 3, \"Your solution should output 3.\""
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"5 5\n/.V.\\\n./.V.\n..#..\n.V.#.\n\\.V./\n\"\"\") == 3\nassert solution(\"\"\"2 5\nV...\\\nH...V\n\"\"\") == -1"
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 5\\n/.V.\\n./.V.\n..#..\n.V.#.\n\\.V./\\n5 5\\nV...\\nH...V\\n2 5\\nV...\\nH...V\\nSample Output 2: -1\") == \"3\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"The quick brown fox jumps over the lazy dog.\"\n\nfrom typing import List"
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"The quick brown fox jumps over the lazy dog.\"\nassert solution(input()) == \"AMBIGUOUS\""
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"The quick brown fox jumps over the lazy dog.\""
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('7\\nn fox jumps ove\\nuick brown f\\ny dog.\\nrown fox\\nmps over the l\\nthe lazy dog') == 'The quick brown fox jumps over the lazy dog.'\nassert solution('4\\ncdefghi\\nelmnoij\\nqprsuvw\\nxyz\\nAMBIGUOUS') == 'AMBIGUOUS'"
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Output {solution(input())} is not equal to the expected output {expected_output}\""
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"The quick brown fox jumps over the lazy dog.\""
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input1) == 'The quick brown fox jumps over the lazy dog.'\nassert solution(sample_input2) == 'AMBIGUOUS'"
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"n fox jumps ove\\nuick brown f\\nThe quick b\\ny dog.\") == \"The quick brown fox jumps over the lazy dog.\"\nassert solution(\"cdefghi\\nefgijk\\nefgijx\\nabcdefg\") == \"AMBIGUOUS\""
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == 'The quick brown fox jumps over the lazy dog.'"
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('7\\nn fox jumps ove\\nuick brown f\\nthe quick b\\ny dog.\\nrown fox\\nmps over the l\\nthe lazy dog') == 'The quick brown fox jumps over the lazy dog.'\nassert solution('4\\ncdefghi\\nefgijk\\nefgijx\\nabcdefg') == 'AMBIGUOUS'"
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"---\""
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"impossible\""
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n    5 6\n    \n-3 -2 3\n-2 -2 4\n2 3 3\n-1 1 2\n0 1 4\n2 5 1\n''') == '''\n--+0-\n'''\n\nassert solution('''\n    3 2\n    \n-1 2 1\n-2 0 2\n''') == '''\n0+-\n'''"
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1') == '--+0-'\nassert solution('3 2\\n1 2 1\\n-2 0 2') == '0+-'\nassert solution('') == 'impossible'\nassert solution('5 0\\n1 1 0\\n2 2 0\\n3 3 0\\n4 4 0\\n5 5 0') == '--+0-'"
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1\") == \"impossible\""
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1\") == \"--+0-\"\nassert solution(\"3 2\\n1 2 1\\n-2 0 2\") == \"0+-\"\nassert solution(\"10 10\\n0 1 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 1 0 0 "
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'def solution(stdin: str) -> str:\\n    pass\\n\\n'"
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef main():\\n    pass\\n\\nif __name__ == '__main__':\\n    main()\\n\\n# Test cases\\nassert solution('5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1') == 'def solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef main():\\n    pass\\n\\nif __name__ == '__main__':\\n    main()\\n\\n# Test cases\\nassert solution('5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1') == 'def solution(stdin: str) -> str:\\n    pass\\n\\n\\ndef main():\\n    pass\\n\\nif __name__ == '__name__':\\n    main()\\n\\n# Test cases\\nassert solution('3 2\\n1 2 1\\n-2 0 2') == '0+-\\n\\n# Test cases\\nassert solution('3 2\\n1 2 1\\n-2 0 2') == '0+-\\n\\n# Test cases\\nassert solution('3 2\\n1 2 1\\n-2 0 2') == '0+-\\n\\n# Test cases\\nassert solution('3 2\\n1 2 1\\n-2 0 2') == '0+-\\n\\n# Test cases\\nassert solution('3 2\\n1 2 1\\n-2 0 2') == '0+-\\n\\n# Test cases\\nassert solution('3 2\\n1 2 1\\n-2 0 2') == '0+-\\n\\n# Test cases\\nassert solution('3 2\\n1 2 1\\n-2 0 2') == '0+-\\n\\n# Test cases\\nassert solution('3 2\\n1 2 1\\n-2 0 2') == '0+-\\n\\n# Test cases\\nassert solution('3 2\\n1 2 1\\n-2 0 2') == '0+-\\n\\n# Test cases\\nassert solution('3 2\\n1 2 1\\n-2 0 2') == '0+-\\n\\n# Test cases\\nassert solution('3 2\\n1 2 1\\n-2 0 2') == '0+-\\n\\n# Test cases\\nassert solution('3 2\\n1 2 1\\n-2 0 2') == '0+-\\n\\n# Test cases\\nassert solution('3 2\\n1 2 1\\n-2 0 2') == '0+-\\n\\n# Test cases\\nassert solution('3 2\\n1 2 1\\n-2 0 2') == '0+-\\n\\n# Test cases\\nassert solution('3 2\\n1 2 1\\n-2 0 2') == '0+-\\n\\n# Test cases\\nassert solution('3 2\\n1 2 1\\n-2 0 2') == '0+-\\n\\n# Test cases\\nassert solution('3 2\\n1 2 1\\n-2 0 2') == '0+-\\n\\n# Test cases\\nassert solution('3 2\\n1 2 1\\n-2 0 2') == '0+-\\n\\n# Test cases\\nassert solution('3 2\\n1 2 1\\n-2 0 2') == '0+-\\n\\n# Test cases\\nassert solution('3 2\\n1 2 1\\n-2 0 2') == '0+-\\n\\n# Test cases\\nassert solution('3 2\\n1 2 1\\n-2 0 2') == '0+-\\n\\n# Test cases\\nassert solution('3 2\\n1 2 1\\n-2 0 2') == '0+-"
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1\") == \"--+0-\"\n\nassert solution(\"3 2\\n1 2 1\\n-2 0 2\") == \"0+-\""
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1\") == \"--+0-\"\nassert solution(\"3 2\\n1 2 1\\n-2 0 2\") == \"0+-\""
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == expected"
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\n1 1\\n1 1\\n1\\n1 1 1\") == \"1\\n\"\nassert solution(\"2 2\\n1 2\\n2 3\\n2\\n1 2 2\\n2 2 2\") == \"4\\n4\\n\""
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"Sample Output 1:\\n1\\n\""
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"young_luka.in\").read()) == \"1\\n\"\n"
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\n1 1\\n1 1\\n1\\n1 1 1\") == \"1\\n\"\nassert solution(\"2 2\\n1 2\\n2 3\\n2\\n1 2 2\\n2 2 2\") == \"4\\n4\\n\""
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"1\\n\""
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == \"1\\n\"\nassert solution(sample_input_2) == \"4\\n4\\n\"\n\nsample_input_1 = \"\"\"\n2 2\n1 1\n1 1\n1\n1 1 1\n\"\"\"\n\nsample_input_2 = \"\"\"\n2 2\n1 2\n2 3\n2\n1 2 2\n2 2 2\n\"\"\""
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\n1 1\\n1 1\\n1\\n1 1 1\") == \"1\\n\"\nassert solution(\"2 2\\n1 2\\n2 3\\n2\\n1 2 2\\n2 2 2\") == \"4\\n4\\n\"\n\nfrom collections import defaultdict"
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('sample_input.txt', 'r')) == '1\\n'"
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\\n') == 'YES'\nassert solution('3 4\\nWWRR\\nWRRR\\nWRRR\\n') == 'NO'"
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(str(5) + '\\n' + 'WRRRG\\nWRRRG\\nWRRRG\\nWBBBB' + '\\n') == \"YES\""
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\") == \"YES\"\nassert solution(\"3 4\\nWWRR\\nWRRR\\nWRRR\") == \"NO\""
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\") == \"YES\"\nassert solution(\"3 4\\nWWRR\\nWRRR\\nWRRR\") == \"NO\""
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\") == \"YES\"\nassert solution(\"3 4\\nWWRR\\nWRRR\\nWRRR\") == \"NO\""
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB') == 'YES'\nassert solution('3 4\\nWWRR\\nWRRR\\nWRRR') == 'NO'"
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\\n\") == \"YES\"\nassert solution(\"3 4\\nWWRR\\nWRRR\\nWRRR\\n\") == \"NO\""
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\\n\") == \"YES\"\nassert solution(\"3 4\\nWWRR\\nWRRR\\nWRRR\\n\") == \"NO\"\n"
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\\n\") == \"YES\\n\"\nassert solution(\"3 4\\nWWRR\\nWRRR\\nWRRR\\n\") == \"NO\\n\""
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\""
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3 5\\n1\\n2\\n3\") == \"1\"\nassert solution(\"6 3 5\\n1\\n2\\n3\\n3\\n2\\n1\") == \"3\"\n"
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 3"
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3 5\\n1\\n2\\n3\\n\") == \"1\\n\"\nassert solution(\"6 3 5\\n1\\n2\\n3\\n3\\n2\\n1\\n\") == \"3\\n\""
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 1"
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output, f\"Test case failed: {stdin}\"\n"
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3 5\\n1\\n2\\n3\") == \"1\"\nassert solution(\"6 3 5\\n1\\n2\\n3\\n3\\n2\\n1\") == \"3\""
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected_output, f\"Test case {test_case_number} failed: {solution(stdin)}\""
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, \"Test case failed\"\n"
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Test {i+1} failed. Expected: {expected}, got: {solution(input())}\" for i, (N, K, S, expected) in enumerate(tests)\n\ntests = [\n    ([3, 3, 5], 1, 2, 1),\n    ([6, 3, 5], 1, 2, 3),\n    ([1, 2, 3], 1, 2, 0),\n    ([1, 2, 3], 2, 2, 1),\n    ([1, 2, 3], 3, 2, 2),\n]"
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n    3\n    0 2\n    1 2\n    3 3\n''') == '''\n    3 2\n'''\n\nassert solution('''\n    5\n    0 2\n    1 3\n    3 3\n    7 5\n    9 5\n''') == '''\n    12 3\n'''"
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"3 2\\n12 3\", \"Expected output: 3 2\\nGot: \" + solution(stdin)"
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input) == output, f\"Expected {output}, got {solution(input)}\""
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"3 2\\n12 3\\n\", \"The given input is incorrect\""
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n0 2\\n1 2\\n3 3\\n\") == \"3 2\\n\"\nassert solution(\"5\\n0 2\\n1 3\\n3 3\\n7 5\\n9 5\\n\") == \"12 3\\n\""
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n0 2\\n1 2\\n3 3\\n5\\n0 2\\n1 3\\n3 3\\n7 5\\n9 5\\n\") == \"3 2\\n\""
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n0 2\\n1 2\\n3 3\\n5\\n0 2\\n1 3\\n3 3\\n7 5\\n9 5\\n\") == \"3 2\\n12 3\"\nassert solution(\"4\\n1 2\\n3 3\\n5 4\\n7 6\\n9 8\\n\") == \"3 3\\n5 4\"\nassert solution(\"6\\n0 2\\n1 3\\n3 3\\n5 4\\n7 6\\n9 8\\n11 10\\n\") == \"7 6\\n10 11\""
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"3 2\\n12 3\\n\", \"Expected Output\""
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('0 2\\n1 2\\n3 3\\n') == '3 2\\n'\nassert solution('5\\n0 2\\n1 3\\n3 3\\n7 5\\n9 5\\n') == '12 3\\n'"
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n0 2\\n1 2\\n3 3\\n\") == \"3 2\\n\", \"Test case 1\"\nassert solution(\"5\\n0 2\\n1 3\\n3 3\\n7 5\\n9 5\\n\") == \"12 3\\n\", \"Test case 2\""
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '100\\n000\\n01\\n01\\n01\\n'"
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1\\n0\\n0\\n3\") == \"100\\n000\\n01\\n01\\n01\\n\"\nassert solution(\"3\\n0\\n1 1\\n1\\n1 1\\n1\\n1\\n\") == \"0000\\n1001\\n0010\\n101\\n010\\n000\\n100\\n\""
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('sample_input.txt', 'r').read()) == '1000010\\n0000010\\n0100010\\n0100010\\n0100010'\nassert solution(open('sample_input.txt', 'r').read()) == '0000000\\n1001000\\n0010000\\n1000100\\n0100010\\n0000010\\n1000010\\n0000010\\n1000010\\n0000010\\n0000010'\nassert solution(open('sample_input.txt', 'r').read()) == '0000000\\n1001000\\n0010000\\n1000100\\n0100010\\n0000010\\n1000010\\n0000010\\n1000010\\n0000010\\n0000010'"
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1\\n0\\n0\\n3\\n\") == \"100\\n000\\n01\\n01\\n01\\n\""
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1\\n0\\n0\\n3\\n\") == \"100\\n000\\n01\\n01\\n01\\n\"\nassert solution(\"3\\n0\\n1 1\\n1\\n1 1\\n1\\n1\\n1\\n\") == \"0000\\n1001\\n0010\\n101\\n010\\n000\\n100\\n\""
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1\\n0\\n0\\n3\\n\") == \"100\\n000\\n01\\n01\\n01\\n\"\nassert solution(\"3\\n0\\n1 1\\n1\\n1 1\\n1\\n1\\n\") == \"0000\\n1001\\n0010\\n101\\n010\\n000\\n100\\n\""
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1\\n0\\n0\\n3\\n\") == \"100\\n000\\n01\\n01\\n01\\n\"\n\nassert solution(\"3\\n0\\n1 1\\n1\\n1 1\\n1\\n1\\n\") == \"0000\\n1001\\n0010\\n101\\n010\\n000\\n100\\n\""
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, \"Test case failed. Expected output: {}\\nGot: {}\".format(expected_output, solution(input()))\n\nsolution = '''\n"
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '100000000000\\n000001000000\\n010010010001\\n010010010001\\n010010010001'\n\nsolution = '''\n"
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1\\n0\\n0\\n3\") == \"100\\n000\\n01\\n01\\n01\\n\", \"Test case 1 failed\"\nassert solution(\"3\\n0\\n1 1\\n1\\n1 1\\n1\\n1\") == \"0000\\n1001\\n0010\\n101\\n010\\n000\\n100\", \"Test case 2 failed\"\n\nfrom typing import List"
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1\\n1 2\\n2 3\\n2 3\") == \"2\\n\"\nassert solution(\"4 1\\n1 3\\n4 6\\n7 8\\n2 5\") == \"3\\n\""
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == expected, f\"Your solution is incorrect. Expected {expected}, but got {solution}.\"\n"
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\\n1 2\\n2 3\\n2 3\\n\") == \"2\\n\"\nassert solution(\"4 1\\n1 3\\n4 6\\n7 8\\n2 5\\n\") == \"3\\n\""
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1\\n1 2\\n2 3\\n2 3\") == \"2\"\nassert solution(\"4 1\\n1 3\\n4 6\\n7 8\\n2 5\") == \"3\"\nassert solution(\"3 1\\n1 2\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\"
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2\", \"The output is incorrect.\""
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin='1\\n1\\n1\\n1\\n1') == '1\\n'\nassert solution(stdin='2\\n2\\n2\\n2') == '2\\n'\nassert solution(stdin='3\\n1\\n1\\n1\\n1') == '2\\n'\nassert solution(stdin='4\\n1\\n1\\n1\\n1') == '3\\n'"
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1\\n1 2\\n2 3\\n2 3\\n\") == \"2\"\nassert solution(\"4 1\\n1 3\\n4 6\\n7 8\\n2 5\\n\") == \"3\"\nassert solution(\"3 1\\n1 2\\n2 3\\n2 3\\n\") == \"2\"\nassert solution(\"4 1\\n1 3\\n4 6\\n7 8\\n2 5\\n\") == \"3\""
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input1) == output1, f\"Test 1 failed. Got: {solution(input1)}, Expected: {output1}\"\nassert solution(input2) == output2, f\"Test 2 failed. Got: {solution(input2)}, Expected: {output2}\"\n\ninput1 = \"\"\"\n3 1\n1 2\n2 3\n2 3\n\"\"\"\n\ninput2 = \"\"\"\n4 1\n1 3\n4 6\n7 8\n2 5\n\"\"\"\n\noutput1 = \"2\"\noutput2 = \"3\""
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1\\n1 2\\n2 3\\n2 3\\n\") == \"2\"\nassert solution(\"4 1\\n1 3\\n4 6\\n7 8\\n2 5\\n\") == \"3\"\n"
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_output, f\"Solution for test case {test_case} is incorrect. Expected: {expected_output}, Received: {solution(stdin)}\"\n"
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), \"Test case not passed\"\n"
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"90.00000000\\n\", \"Sample Output 1\"\nassert solution(stdin) == \"126.86989765\\n\", \"Sample Output 2\"\n"
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 6 500\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\\n\") == \"90.00000000\"\nassert solution(\"5 6 450\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\\n\") == \"126.86989765\"\n"
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(solution1) == \"90.00000000\"\nassert solution(solution2) == \"126.86989765\"\n"
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 6 500\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\\n\") == \"90.00000000\"\nassert solution(\"5 6 450\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\\n\") == \"126.86989765\""
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 6 500\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\") == \"90.00000000\\n\"\nassert solution(\"5 6 450\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\") == \"126.86989765\\n\""
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 6 500\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\\n\") == \"90.00000000\\n\"\nassert solution(\"5 6 450\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\\n\") == \"126.86989765\\n\""
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n    5 6 500\n    -100 0\n    -100 100\n    0 200\n    100 100\n    100 0\n    1 2\n    1 3\n    2 3\n    3 4\n    3 5\n    4 5\n    \"\"\"), \"Sample Input 1\"\n\nassert solution(\"\"\"\n    5 6 450\n    -100 0\n    -100 100\n    0 200\n    100 100\n    100 0\n    1 2\n    1 3\n    2 3\n    3 4\n    3 5\n    4 5\n    \"\"\"), \"Sample Input 2\""
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n    5 6 500\n    -100 0\n    -100 100\n    0 200\n    100 100\n    100 0\n    1 2\n    1 3\n    2 3\n    3 4\n    3 5\n    4 5\n    ''') == '90.00000000'\n\nassert solution('''\n    5 6 450\n    -100 0\n    -100 100\n    0 200\n    100 100\n    100 0\n    1 2\n    1 3\n    2 3\n    3 4\n    3 5\n    4 5\n    ''') == '126.86989765'"
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"126.86989765\"\nassert solution == \"90.00000000\"\n"
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(37) == \"4\\n8 29\\n9 28\\n11 26\\n15 22\"\nassert solution(30014) == \"7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225\""
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"37\") == \"4\"\nassert solution(\"30014\") == \"7\"\n\nfor _ in range(5):\n    n = int(input())\n    if n < 10000:\n        print(n)\n    else:\n        for i in range(1, 10001):\n            if i * i <= n:\n                print(i, i * i)\n                break\n            elif n % i == 0:\n                print(n // i + 1, i, i * i)\n                break\n            else:\n                print(n // i + 1, i, i * i)\n                break"
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"37\") == \"4\\n8 29\\n9 28\\n11 26\\n15 22\"\nassert solution(\"30014\") == \"7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225\""
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(37) == \"4\\n8 29\\n9 28\\n11 26\\n15 22\"\nassert solution(30014) == \"7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225\""
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"4\\n8 29\\n9 28\\n11 26\\n15 22\\n\""
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(37) == \"4\\n8 29\\n9 28\\n11 26\\n15 22\"\nassert solution(30014) == \"7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225\"\nassert solution(42) == \"1\\n3 42\\n4 41\\n6 38\\n7 37\"\nassert solution(10) == \"1\\n5 10\\n10 9\\n15 6\\n20 5\"\nassert solution(5) == \"1\\n1 5\\n3 4\\n5 3\\n7 2\"\nassert solution(15) == \"1\\n2 15\\n4 12\\n6 7\\n8 6\"\nassert solution(100) == \"1\\n10 100\\n100 90\\n1000 60\\n10000 50\"\nassert solution(20) == \"1\\n2 20\\n4 15\\n6 10\\n8 5\"\nassert solution(1000) == \"1\\n100 1000\\n1000 900\\n10000 600\\n100000 500\"\nassert solution(10000) == \"1\\n1000 10000\\n10000 9000\\n100000 6000\\n1000000 5000\""
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"37\") == \"4\\n8 29\\n9 28\\n11 26\\n15 22\"\nassert solution(\"30014\") == \"7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225\""
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"37\") == \"4\\n8 29\\n9 28\\n11 26\\n15 22\"\nassert solution(\"30014\") == \"7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225\""
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('37') == '4\\n8 29\\n9 28\\n11 26\\n15 22'\nassert solution('30014') == '7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225'"
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(37) == \"4\\n8 29\\n9 28\\n11 26\\n15 22\"\nassert solution(30014) == \"7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225\""
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3 1\") == \"3.5\"\nassert solution(\"3 3 2\") == \"4.9\"\n\nfrom typing import List"
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"The output is {solution(input())}, but it should be {expected_output}.\""
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected_output, f\"Test case failed: {stdin} should produce {expected_output}\"\n"
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 3 1') == '3.5\\n'\nassert solution('3 3 2') == '4.9\\n'"
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"3.5\", \"Expected output: 3.5, got: \" + solution(stdin)\nassert solution(stdin) == \"4.9\", \"Expected output: 4.9, got: \" + solution(stdin)"
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"Output here\", \"Test failed.\"\n"
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"3.5\\n\", solution(stdin)"
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3 1\") == \"3.5\"\nassert solution(\"3 3 2\") == \"4.9\""
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3 1\") == \"3.5\"\nassert solution(\"3 3 2\") == \"4.9\""
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == output, f\"Expected {output}, but got {solution(stdin)}\""
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 5 1 5\\n12 12 1 12\") == \"19\"\nassert solution(\"11 14 2 22\") == \"4\""
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 5 1 5\") == \"19\\n\"\nassert solution(\"12 12 1 12\") == \"4\\n\""
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 5 1 5') == '19'\nassert solution('12 12 1 12') == '4'"
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 5 1 5\") == \"19\"\nassert solution(\"12 12 1 12\") == \"4\""
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 5 1 5\") == \"19\\n\"\nassert solution(\"12 12 1 12\") == \"4\\n\""
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 5 1 5\") == \"19\\n\", \"Test case 1 failed\"\nassert solution(\"12 12 1 12\") == \"4\\n\", \"Test case 2 failed\""
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n1 5 1 5\n''') == '19\\n'\n\nassert solution('''\n12 12 1 12\n''') == '4\\n'"
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input1) == \"19\"\nassert solution(sample_input2) == \"4\""
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 5 1 5\") == \"19\"\nassert solution(\"12 12 1 12\") == \"4\""
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 5') == '4'\nassert solution('1 12') == '4'"
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 5\") == \"4\", \"Test 1 failed\"\nassert solution(\"1 12\") == \"4\", \"Test 2 failed\"\nassert solution(\"1 6\") == \"0\", \"Test 3 failed\"\nassert solution(\"1 2\") == \"1\", \"Test 4 failed\"\nassert solution(\"10 12\") == \"12\", \"Test 5 failed\""
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 5\\n1 12\") == \"4\""
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == output\n"
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Output {solution(input())} does not match expected output {expected_output}\""
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 5\") == \"4\", \"Test 1 failed\"\nassert solution(\"1 12\") == \"4\", \"Test 2 failed\""
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 5\") == \"4\", \"Expected 4, got {}\".format(solution(\"1 5\"))\nassert solution(\"1 12\") == \"4\", \"Expected 4, got {}\".format(solution(\"1 12\"))"
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 5\") == \"4\\n\", \"Test 1 failed\"\nassert solution(\"1 12\") == \"4\\n\", \"Test 2 failed\"\n"
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 5\\n1 12\") == \"4\""
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Test failed for input '{stdin}', output '{output}'.\""
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"car\") == 1\nassert solution(\"cocar\") == 2"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"car\") == 1\nassert solution(\"cocaror\") == 2"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('car') == 1\nassert solution('cocar') == 2"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('car') == 1\nassert solution('cocar') == 2"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"car\") == \"1\"\nassert solution(\"cocar\") == \"2\""
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('car') == 1\nassert solution('cocar') == 2"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"car\") == 1\nassert solution(\"cocaror\") == 2"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"car\") == 1\nassert solution(\"cocar\") == 2"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('car') == 1\nassert solution('cocar') == 2"
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"0\" # Correct output for sample 2\nassert solution() == \"8\" # Correct output for sample 1"
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(b'4\\n0 2 0 1\\n') == '8\\n'\nassert solution(b'5\\n1000000 1 1 1 1\\n') == '0\\n'"
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n0 2 0 1\") == \"8\"\nassert solution(\"5\\n1000000 1 1 1 1\") == \"0\""
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"0\""
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '0\\n', \"Expected '0', got '{}'\".format(solution(stdin))\n\nprint(solution(stdin))"
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '0'"
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n0 2 0 1\\n') == '8\\n'\nassert solution('5\\n1000000 1 1 1 1\\n') == '0\\n'"
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(str(4)) == 8\nassert solution(str(5)) == 0"
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed. Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"The given solution is incorrect\""
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Test Case {i+1} Failed: Output {solution(input())} does not match expected output {output}.\""
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 650\") == \"zyz\", \"Expected output: zyz, but got: {}.\".format(solution(\"2 650\"))\nassert solution(\"2 651\") == \"-1\", \"Expected output: -1, but got: {}.\".format(solution(\"2 651\"))"
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 650\") == \"zyz\"\nassert solution(\"2 651\") == \"-1\""
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 650\") == \"zyz\"\nassert solution(\"2 651\") == \"-1\""
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input1) == 'zyz', \"Expected output 'zyz', got {}\".format(solution(sample_input1))\nassert solution(sample_input2) == -1, \"Expected output -1, got {}\".format(solution(sample_input2))"
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(2, 650) == 'zyz'\nassert solution(2, 651) == '-1'"
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, but got {solution(input())}\"\n"
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 650\") == \"zyz\"\nassert solution(\"2 651\") == \"-1\""
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n0 10 0\\n10 0 1\\n12 8 1\\n5 5 0\\n11 2 1\\n11 3 0\\n\") == \"4\\n\"\nassert solution(\"10\\n6 1 1\\n0 2 0\\n2 1 1\\n6 1 1\\n8 2 0\\n4 4 0\\n4 0 0\\n2 3 1\\n6 1 0\\n6 3 1\\n\") == \"8\\n\""
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''6\n0 10 0\n10 0 1\n12 8 1\n5 5 0\n11 2 1\n11 3 0''') == '4\\n'\n\nassert solution('''10\n6 1 1\n0 2 0\n2 1 1\n6 1 1\n8 2 0\n4 4 0\n4 0 0\n2 3 1\n6 1 0\n6 3 1''') == '8\\n'"
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n0 10 0\\n10 0 1\\n12 8 1\\n5 5 0\\n11 2 1\\n11 3 0\\n\") == \"4\\n\"\nassert solution(\"10\\n6 1 1\\n0 2 0\\n2 1 1\\n6 1 1\\n8 2 0\\n4 4 0\\n4 0 0\\n2 3 1\\n6 1 0\\n6 3 1\\n\") == \"8\\n\""
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r').read()) == 'Output 1\\n4\\n'\nassert solution(open('sample_input_1.txt', 'r').read()) == 'Output 1\\n4\\n'\nassert solution(open('sample_input_2.txt', 'r').read()) == 'Output 2\\n8\\n'"
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"Output\""
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n0 10 0\\n10 0 1\\n12 8 1\\n5 5 0\\n11 2 1\\n11 3 0\") == \"4\", \"The output is incorrect.\"\nassert solution(\"10\\n6 1 1\\n0 2 0\\n2 1 1\\n6 1 1\\n8 2 0\\n4 4 0\\n4 0 0\\n2 3 1\\n6 1 0\\n6 3 1\") == \"8\", \"The output is incorrect.\"\n"
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '8', 'Expected output: 8'\n"
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 10 0\\n10 0 1\\n12 8 1\\n5 5 0\\n11 2 1\\n11 3 0\") == \"4\\n\", \"Incorrect output.\"\nassert solution(\"10\\n6 1 1\\n0 2 0\\n2 1 1\\n6 1 1\\n8 2 0\\n4 4 0\\n4 0 0\\n2 3 1\\n6 1 0\\n6 3 1\") == \"8\\n\", \"Incorrect output.\""
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n0 10 0\\n10 0 1\\n12 8 1\\n5 5 0\\n11 2 1\\n11 3 0\\n\") == \"4\"\nassert solution(\"10\\n6 1 1\\n0 2 0\\n2 1 1\\n6 1 1\\n8 2 0\\n4 4 0\\n4 0 0\\n2 3 1\\n6 1 0\\n6 3 1\\n\") == \"8\""
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"4\\n\""
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n2 4 3\n3 4 5 7\n1 2 10\n''') == '0\\n'\n\nassert solution('''\n3 5 2\n1 4 7 9 11\n2 3\n''') == '2\\n'"
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 4 3\\n3 4 5 7\\n1 2 10\") == \"0\\n\"\nassert solution(\"3 5 2\\n1 4 7 9 11\\n2 3\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 0, \"Test case 1 failed\"\nassert solution(1) == 0, \"Test case 2 failed\"\nassert solution(1) == 1, \"Test case 3 failed\"\nassert solution(2) == 1, \"Test case 4 failed\"\nassert solution(2) == 2, \"Test case 5 failed\""
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 4 3\\n3 4 5 7\\n1 2 10\") == \"0\\n\"\nassert solution(\"3 5 2\\n1 4 7 9 11\\n2 3\") == \"2\\ndef solution(stdin: str) -> str:\n    pass\""
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    2 4 3\n    3 4 5 7\n    1 2 10\n    \"\"\"\n) == 0\n\nassert solution(\n    \"\"\"\n    3 5 2\n    1 4 7 9 11\n    2 3\n    \"\"\"\n) == 2\n\nassert solution(\n    \"\"\"\n    2 4 3\n    3 4 5 7\n    1 2 10\n    1 2 10\n    1 2 10\n    \"\"\"\n) == -1\n\nassert solution(\n    \"\"\"\n    2 4 3\n    3 4 5 7\n    1 2 10\n    1 2 10\n    2 2 2\n    \"\"\"\n) == 0"
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input1) == expected_output1\nassert solution(sample_input2) == expected_output2"
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 4 3\\n3 4 5 7\\n1 2 10\") == \"0\\n\"\nassert solution(\"3 5 2\\n1 4 7 9 11\\n2 3\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == expected_solution, f\"Solution is incorrect. Expected: {expected_solution}, Actual: {solution}\"\n"
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(r'''\n2 4 3\n3 4 5 7\n1 2 10\n''') == '0\\n'\n\nassert solution(r'''\n3 5 2\n1 4 7 9 11\n2 3\n''') == '2\\n'\n\nassert solution(r'''\n2 2 1\n1 1\n''') == '-1\\n'\n\nassert solution(r'''\n1 1 1\n2 2 2\n3 3 3\n4 4 4\n5 5 5\n6 6 6\n''') == '0\\n'\n\nassert solution(r'''\n1 1 1\n2 2 2\n3 3 3\n4 4 4\n5 5 5\n6 6 6\n7 7 7\n8 8 8\n9 9 9\n10 10 10\n11 11 11\n''') == '2\\n'"
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Test case {index + 1} failed: got '{solution(input())}', expected '{expected}'\""
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 3\\n3 2') == '1\\n-2 -1\\n\\n3\\n-1 1\\n2 1\\n0 -2'\nassert solution('1 2\\n3 4') == '3\\n-1 1\\n2 1\\n0 -2'"
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"\"\"1\n-2 -1\"\"\""
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n3 2\\n\") == \"1\\n-2 -1\\n\"\nassert solution(\"1 2\\n3 4\\n\") == \"3\\n-1 1\\n2 1\\n0 -2\\n\""
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 3\\n3 2') == '1\\n-2 -1\\n'\nassert solution('1 2\\n3 4') == '3\\n-1 1\\n2 1\\n0 -2\\n'"
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input1) == output1, f\"Error in solution1. Expected: '{output1}', got: '{solution(input1)}' \"\nassert solution(input2) == output2, f\"Error in solution2. Expected: '{output2}', got: '{solution(input2)}' \""
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 3\\n3 2\\n1 2\\n3 4\\n') == '1\\n-2 -1\\n3\\n-1 1\\n2 1\\n0 -2\\n'"
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n2 3\n3 2\n''') == '''\n1\n-2 -1\n'''\n\nassert solution('''\n1 2\n3 4\n''') == '''\n3\n-1 1\n2 1\n0 -2\n'''\n\nassert solution('''\n1 1\n1 1\n''') == '''\n2\n0\n1\n'''\n\nassert solution('''\n1 1\n1 1\n''') == '''\n1\n'''\n\nassert solution('''\n1 2\n1 2\n''') == '''\n2\n'''\n\nassert solution('''\n1 1\n1 2\n''') == '''\n0\n'''\n\nassert solution('''\n1 1\n2 1\n''') == '''\n1\n'''\n\nassert solution('''\n1 1\n1 1\n''') == '''\n0\n'''\n\nassert solution('''\n1 1\n1 1\n''') == '''\n0\n'''\n\nassert solution('''\n1 2\n1 1\n''') == '''\n0\n'''\n\nassert solution('''\n1 1\n1 1\n''') == '''\n0\n'''"
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n3 2\") == \"1\\n-2 -1\"\nassert solution(\"1 2\\n3 4\") == \"3\\n-1 1\\n2 1\\n0 -2\""
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\nIVO\\nJASNA\\nJOSIPA') == '4'\nassert solution('5\\nMARICA\\nMARTA\\nMATO\\nMARA\\nMARTINA') == '24'\n\nsolution = '''\n"
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected, f\"Test {test_case} failed. Expected: {expected}, but got: {solution(stdin)}\"\n\ntest_case = 1\nstdin = \"\"\"\n3\nIVO\nJASNA\nJOSIPA\n\"\"\"\nexpected = \"\"\"\n4\n\"\"\"\n\ntest_case = 2\nstdin = \"\"\"\n5\nMARICA\nMARTA\nMATO\nMARA\nMARTINA\n\"\"\"\nexpected = \"\"\"\n24\n\"\"\""
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected, f\"Test failed: expected {expected}, got {solution(stdin)}\""
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r')) == 4\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\nIVO\\nJASNA\\nJOSIPA\\n\") == \"4\\n\"\nassert solution(\"5\\nMARICA\\nMARTA\\nMATO\\nMARA\\nMARTINA\\n\") == \"24\\n\""
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed: {solution(input())}!= {expected_output}\""
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\nIVO\\nJASNA\\nJOSIPA\\n\") == \"4\\n\", \"Test 1 failed\"\nassert solution(\"5\\nMARICA\\nMARTA\\nMATO\\nMARA\\nMARTINA\\n\") == \"24\\n\", \"Test 2 failed\""
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\nIVO\\n2\\nJASNA\\n3\\nJOSIPA\") == \"4\"\nassert solution(\"2\\nMARICA\\n3\\nMARTA\\n4\\nMATO\\n5\\nMARA\\n6\\nMARTINA\") == \"24\""
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\nIVO\\nJASNA\\nJOSIPA\\n\") == \"4\"\nassert solution(\"5\\nMARICA\\nMARTA\\nMATO\\nMARA\\nMARTINA\\n\") == \"24\""
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 4\nassert solution() == 24"
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 3\nassert solution() == 39\n"
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1\") == \"3\\n\", \"Test 1 failed\"\nassert solution(\"3\\n2 2 3 8\\n3 1 5 6\\n1 9 4 7\") == \"39\\n\", \"Test 2 failed\""
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1') == 3\nassert solution('3\\n2 2 3 8\\n3 1 5 6\\n1 9 4 7') == 39"
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 2 3 1\\n2 3 4 1\\n3 4 5 1') == 3, \"Output: 3\"\nassert solution('1 2 3 1\\n2 3 4 1\\n3 4 5 1\\n2 2 3 8\\n3 1 5 6\\n1 9 4 7') == 39, \"Output: 39\"\n"
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '3', \"Your solution is incorrect. The output should be '3', but it's actually '\"+str(solution())+\"' instead.\""
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"3\", \"Sample Output 1 not correct\"\nassert solution(input()) == \"39\", \"Sample Output 2 not correct\"\n"
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"3\\n\"\nassert solution(open(\"input2.txt\", \"r\").read()) == \"39\\n\""
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input_1.txt\", \"r\")) == \"3\\n\", \"Input 1\"\nassert solution(open(\"input_2.txt\", \"r\")) == \"39\\n\", \"Input 2\""
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '3\\n'\nassert solution() == '39\\n'"
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3\n1 2 3 1\n2 3 4 1\n3 4 5 1\n\"\"\") == \"3\\n\"\n\nassert solution(\"\"\"\n3\n2 2 3 8\n3 1 5 6\n1 9 4 7\n\"\"\") == \"39\\n\"\n\nassert solution(\"\"\"\n1\n
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n8 9 3 -14 -14 14 -14 0 20\") == 9.0\nassert solution(\"2\\n5 8 4 -2 0 0 -3 2 0 0 3\\n8 10 4 -1 -1 1 -1 1 1 -1 1\") == 5.2696518641\n"
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n5 8 4 -2 0 0 -3 2 0 0 3\\n8 10 4 -1 -1 1 -1 1 1 -1 1\\n\") == 5.2696518641\nassert solution(\"1\\n8 9 3 -14 -14 14 -14 0 20\\n\") == 9"
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n5 8 4 -2 0 0 -3 2 0 0 3\\n8 10 4 -1 -1 1 -1 1 1 -1 1\") == 5.2696518641, \"Test case 1 failed.\"\nassert solution(\"1\\n8 9 3 -14 -14 14 -14 0 20\") == 9, \"Test case 2 failed.\""
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 5.2696518641, \"Solution does not work as expected.\""
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2\\n5 8 4 -2 0 0 -3 2 0 0 3\\n8 10 4 -1 -1 1 -1 1 1 -1 1\\n') == '5.2696518641\\n'\nassert solution('1\\n8 9 3 -14 -14 14 -14 0 20\\n') == '9\\n'"
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(solution) == \"5.2696518641\"\nassert solution(solution1) == \"9\"\n"
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n5 8 4 -2 0 0 -3 2 0 0 3\\n8 10 4 -1 -1 1 -1 1 1 -1 1\") == 5.2696518641, \"Error: 5.2696518641!= 5.2696518641\"\nassert solution(\"1\\n8 9 3 -14 -14 14 -14 0 20\") == 9, \"Error: 9!= 9\""
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n5 8 4 -2 0 0 -3 2 0 0 3\\n8 10 4 -1 -1 1 -1 1 1 -1 1\") == \"5.2696518641\"\nassert solution(\"1\\n8 9 3 -14 -14 14 -14 0 20\") == \"9\""
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 5.2696518641, \"Your solution is incorrect.\"\n"
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 8 4 -2 0 0 -3 2 0 0 3\\n8 10 4 -1 -1 1 -1 1 1 -1 1\") == \"5.2696518641\"\nassert solution(\"1\\n8 9 3 -14 -14 14 -14 0 20\") == \"9\""
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '1\\n8\\n4\\n'"
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n    3\n    1 1 1\n    2 0 2\n    3 1 1\n    \"\"\") == \"1\\n8\\n4\"\nassert solution(\"\"\"\n    3\n    4 1 1\n    5 2 3\n    5 0 3\n    \"\"\") == \"6\\n4\\n24\"\nassert solution(\"\"\"\n    3\n    1 1 1\n    2 1 1\n    3 1 1\n    \"\"\") == \"-1\"\nassert solution(\"\"\"\n    3\n    4 1 1\n    5 2 3\n    6 0 3\n    \"\"\") == \"-1\""
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected_output, f\"Solution is incorrect. Expected {expected_output}, got {solution(stdin)}\"\n"
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Test failed for solution({input()}). Expected: {expected}, got: {solution(input())}\""
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 1 1\\n2 0 2\\n3 1 1\") == 1\nassert solution(\"3\\n4 1 1\\n5 2 3\\n5 0 3\") == 6\nassert solution(\"1\\n1\\n1\") == -1"
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 1 1\\n2 0 2\\n3 1 1\\n') == '1\\n8\\n4'\nassert solution('1 2 1\\n2 0 2\\n3 1 1\\n') == '1\\n8\\n4'\nassert solution('1 1 2\\n2 0 2\\n3 1 1\\n') == '-1\\n'\nassert solution('1 2 3\\n2 0 2\\n3 1 1\\n') == '1\\n8\\n4'\nassert solution('1 1 1\\n2 0 2\\n3 1 1\\n') == '1\\n8\\n4'\nassert solution('1 1 2\\n2 0 2\\n3 1 1\\n') == '1\\n8\\n4'\nassert solution('1 2 3\\n2 0 2\\n3 1 1\\n') == '1\\n8\\n4'\nassert solution('1 1 1\\n2 0 2\\n3 1 1\\n') == '1\\n8\\n4'\nassert solution('1 1 2\\n2 0 2\\n3 1 1\\n') == '1\\n8\\n4'\nassert solution('1 2 3\\n2 0 2\\n3 1 1\\n') == '1\\n8\\n4'\nassert solution('1 1 1\\n2 0 2\\n3 1 1\\n') == '1\\n8\\n4'\nassert solution('1 1 2\\n2 0 2\\n3 1 1\\n') == '1\\n8\\n4'\nassert solution('1 2 3\\n2 0 2\\n3 1 1\\n') == '1\\n8\\n4'\nassert solution('1 1 1\\n2 0 2\\n3 1 1\\n') == '1\\n8\\n4'\nassert solution('1 1 2\\n2 0 2\\n3 1 1\\n') == '1\\n8\\n4'\nassert solution('1 2 3\\n2 0 2\\n3 1 1\\n') == '1\\n8\\n4'\nassert solution('1 1 1\\n2 0 2\\n3 1 1\\n') == '1\\n8\\n4'\nassert solution('1 1 2\\n2 0 2\\n3 1 1\\n') == '1\\n8\\n4'\nassert solution('1 2 3\\n2 0 2\\n3 1 1\\n') == '1\\n8\\n4'"
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected, f\"Test case {i+1} failed. Expected: '{expected}', got: '{solution(stdin)}'\""
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1 1\\n2 0 2\\n3 1 1\\n\") == \"1\\n8\\n4\\n\"\nassert solution(\"1 1 1\\n1 1 1\\n1 1 1\\n\") == \"1\\n8\\n4\\n\"\nassert solution(\"1 1 1\\n1 1 1\\n1 1 1\\n\") == \"1\\n8\\n4\\n\"\nassert solution(\"1 1 1\\n1 1 1\\n1 1 1\\n\") == \"1\\n8\\n4\\n\"\nassert solution(\"1 1 1\\n1 1 1\\n1 1 1\\n\") == \"1\\n8\\n4\\n\"\nassert solution(\"1 1 1\\n1 1 1\\n1 1 1\\n\") == \"1\\n8\\n4\\n\"\nassert solution(\"1 1 1\\n1 1 1\\n1 1 1\\n\") == \"1\\n8\\n4\\n\"\nassert solution(\"1 1 1\\n1 1 1\\n1 1 1\\n\") == \"1\\n8\\n4\\n\"\nassert solution(\"1 1 1\\n1 1 1\\n1 1 1\\n\") == \"1\\n8\\n4\\n\"\nassert solution(\"1 1 1\\n1 1 1\\n1 1 1\\n\") == \"1\\n8\\n4\\n\"\nassert solution(\"1 1 1\\n1 1 1\\n1 1 1\\n\") == \"1\\n8\\n4\\n\"\nassert solution(\"1 1 1\\n1 1 1\\n1 1 1\\n\") == \"1\\n8\\n4\\n\"\nassert solution(\"1 1 1\\n1 1 1\\n1 1 1\\n\") == \"1\\n8\\n4\\n\"\nassert solution(\"1 1 1\\n1 1 1\\n1 1 1\\n\") == \"1\\n8\\n4\\n\"\nassert solution(\"1 1 1\\n1 1 1\\n1 1 1\\n\") == \"1\\n8\\n4\\n\"\nassert solution(\"1 1 1\\n1 1 1\\n1 1 1\\n\") == \"1\\n8\\n4\\n\"\nassert solution(\"1 1 1\\n1 1 1\\n1 1 1\\n\") == \"1\\n8\\n4\\n\"\nassert solution(\"1 1 1\\n1 1 1\\n1 1 1\\n\") == \"1\\n8\\n4\\n\"\nassert solution(\"1 1 1\\n1 1 1\\n1 1 1\\n\") == \"1\\n8\\n4\\n\"\nassert solution(\"1 1 1\\n1 1 1\\n1 1 1\\n\") == \"1\\n8\\n4\\n\"\nassert solution(\"1 1 1\\n1 1 1\\n1 1 1\\n\") == \"1\\n8\\n4\\n\"\nassert solution(\"1 1 1\\n1 1 1\\n1 1 1\\n\") == \"1\\n8\\n4\\n\"\nassert solution(\"1 1 1\\n1 1 1\\n1 1 1\\n\") == \"1\\n8\\n4\\n\"\nassert solution(\"1 1 1\\n1 1 1\\n1 1 1\\n\") == \"1\\n8\\n4\\n\"\nassert solution(\"1 1 1\\n1 1 1\\n1 1 1\\n\") == \"1\\n8\\n4\\n\"\nassert solution(\"1 1 1\\n1 1 1\\n1 1 1\\n\") == \"1\\n8\\n4\\n\"\nassert solution(\"1 1 1\\n1 1 1\\n1 1 1\\n\") == \"1\\n8\\n4\\n\"\n"
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n1 1 1\\n2 0 2\\n3 1 1\\n') == '1\\n8\\n4\\n'\nassert solution('3\\n4 1 1\\n5 2 3\\n5 0 3\\n') == '6\\n4\\n24\\n'\nassert solution('2\\n1 2\\n1 2\\n') == '-1\\n'\nassert solution('2\\n1 1\\n3 2\\n4 3\\n') == '-1\\n'\nassert solution('3\\n1 1\\n2 1\\n3 1\\n') == '-1\\n'\nassert solution('3\\n1 1\\n2 1\\n3 2\\n') == '-1\\n'\nassert solution('3\\n1 1\\n2 1\\n3 3\\n') == '-1\\n'"
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 1 1\\n2 0 2\\n3 1 1\") == \"1\\n8\\n4\"\nassert solution(\"3\\n4 1 1\\n5 2 3\\n5 0 3\") == \"6\\n4\\n24\"\nassert solution(\"3\\n1 1 1\\n2 1 2\\n3 1 1\") == \"-1\""
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"3\"\nassert solution(\"6 6\") == \"240\""
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 3\nassert solution(6) == 240"
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3, 2) == 3\nassert solution(6, 6) == 240"
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3, 2) == 3\nassert solution(6, 6) == 240"
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"3\", \"Your solution is not correct\" # expected output: 3"
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"3\"\nassert solution() == \"240\""
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 3, \"Expected output 3 but got {}\".format(solution(3))  # Test case 1\nassert solution(6) == 240, \"Expected output 240 but got {}\".format(solution(6))  # Test case 2"
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3, 2) == 3\nassert solution(6, 6) == 240\n"
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3, 2) == 3\nassert solution(6, 6) == 240\n"
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3, 2) == 3\nassert solution(6, 6) == 240"
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\", \"Solution not correct\"\nassert solution(\"A+A=A\") == \"impossible\", \"Solution not correct\""
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\", \"Test 1 failed\"\nassert solution(\"A+A=A\") == \"impossible\", \"Test 2 failed\""
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == 'impossible'\n"
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"A+A=A\") == \"impossible\""
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"A+A=A\") == \"impossible\""
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\", \"Test 1\"\nassert solution(\"A+A=A\") == \"impossible\", \"Test 2\""
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"A+A=A\") == \"impossible\""
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('SEND+MORE=MONEY') == '9567+1085=10652'\nassert solution('A+A=A') == 'impossible'"
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"A+A=A\") == \"impossible\"\n\nfrom typing import List"
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\", \"Incorrect solution\"\nassert solution(\"A+A=A\") == \"impossible\", \"Incorrect solution\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == 14"
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(10) == \"14\"\nassert solution(20) == \"1\"\n\nfrom itertools import permutations"
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(4, \"0 1 2 3\") == 14\nassert solution(5, \"1 1 2 1 1\") == 1"
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"1\\n\"\nassert solution(open(\"input2.txt\", \"r\")) == \"1\\n\""
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n0 1 2 3\") == \"14\\n\"\nassert solution(\"5\\n1 1 2 1 1\") == \"1\\n\""
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected, f\"Expected '{expected}', got '{solution(stdin)}'\""
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, \"Output does not match the expected output.\"\nfor i in range(1, 10**9 + 9):\n    if solution(i) % (10**9 + 9) == 0:\n        print(i)\n        break\nelse:\n    print(\"Failed to find a solution for the given input.\")"
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"14\", \"Expected output: 14\""
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input_1) == \"14\"\nassert solution(sample_input_2) == \"1\"\n\nfrom itertools import permutations"
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(4, 4) == 88\nassert solution(4, 5) == 88\nassert solution(4, 6) == 88\nassert solution(4, 7) == 88\nassert solution(4, 8) == 88\nassert solution(4, 9) == 88\nassert solution(4, 10) == 88\nassert solution(4, 11) == 88\nassert solution(4, 12) == 88\nassert solution(4, 13) == 88\nassert solution(4, 14) == 88\nassert solution(4, 15) == 88\nassert solution(4, 16) == 88\nassert solution(4, 17) == 88\nassert solution(4, 18) == 88\nassert solution(4, 19) == 88\nassert solution(4, 20) == 88\nassert solution(4, 21) == 88\nassert solution(4, 22) == 88\nassert solution(4, 23) == 88\nassert solution(4, 24) == 88\nassert solution(4, 25) == 88\nassert solution(4, 26) == 88\nassert solution(4, 27) == 88\nassert solution(4, 28) == 88\nassert solution(4, 29) == 88\nassert solution(4, 30) == 88\nassert solution(4, 31) == 88\nassert solution(4, 32) == 88\nassert solution(4, 33) == 88\nassert solution(4, 34) == 88\nassert solution(4, 35) == 88\nassert solution(4, 36) == 88\nassert solution(4, 37) == 88\nassert solution(4, 38) == 88\nassert solution(4, 39) == 88\nassert solution(4, 40) == 88\nassert solution(4, 41) == 88\nassert solution(4, 42) == 88\nassert solution(4, 43) == 88\nassert solution(4, 44) == 88\nassert solution(4, 45) == 88\nassert solution(4, 46) == 88\nassert solution(4, 47) == 88\nassert solution(4, 48) == 88\nassert solution(4, 49) == 88\nassert solution(4, 50) == 88\nassert solution(4, 51) == 88\nassert solution(4, 52) == 88\nassert solution(4, 53) == 88\nassert solution(4, 54) == 88\nassert solution(4, 55) == 88\nassert solution(4, 56) == 88\nassert solution(4, 57) == 88\nassert solution(4, 58) == 88\nassert solution(4, 59) == 88\nassert solution(4, 60) == 88\nassert solution(4, 61) == 88\nassert solution(4, 62) == 88\nassert solution(4, 63) == 88\nassert solution(4, 64) == 88\nassert solution(4, 65) == 88\nassert solution(4, 66) == 88\nassert solution(4, 67) == 88\nassert solution(4, 68) == 88\nassert solution(4, 69) == 88\nassert solution(4, 70) == 88\nassert solution(4, 71) == 88\nassert solution(4, 72) == 88\nassert solution(4, 73) == 88\nassert solution(4, 74) == 88\nassert solution(4, 75) == 88\nassert solution(4, 76) == 88\nassert solution(4, 77) =="
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    4 4\n    1 2 3 0\n    0 0 5 6\n    0 0 7 8\n    7 0 0 10\n    \"\"\"\n) == 88\n\nassert solution(\n    \"\"\"\n    4 4\n    1 2 3 0\n    0 0 5 6\n    0 4 7 8\n    7 0 0 10\n    \"\"\"\n) == -1"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"sample_input.txt\", \"r\")) == 88\nassert solution(open(\"sample_input_2.txt\", \"r\")) == -1"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\\n\") == \"88\\n\"\nassert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n\") == \"-1\\n\"\n"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\").read().strip()) == \"Output the minimum sum possible by replacing 0 cells with positive integers to form a valid Magic Checkerboard.\\n-1\""
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}, Received: {solution(stdin)}\""
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\").read()) == 88\nassert solution(open(\"input2.txt\").read()) == -1"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\") == 88\nassert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\") == -1"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == 88\nassert solution(open(\"invalid.txt\", \"r\")) == -1"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 88\nassert solution() == -1"
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1 1\\n1 1\\n\") == \"0.000\\n\"\nassert solution(\"2\\n1 99999\\n99999 99999\\n\") == \"9999700002.000\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Expected output: {output}, got: {solution(input())}\""
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\n1 1\\n1 1') == '0.000\\n'\nassert solution('2\\n1 99999\\n99999 99999') == '9999700002.000\\n'"
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1 1\\n1 1\\n\") == \"0.000\\n9999700002.000\\n\""
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"0.000\\n\"\nassert solution() == \"9999700002.000\\n\""
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=None) == \"0.000\"\nassert solution(stdin=\"2\\n1 1\\n1 1\\n\") == \"0.000\\n9999700002.000\""
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"0.000\\n\", \"Sample Output 1: 0.000\"\nassert solution(stdin) == \"9999700002.000\\n\", \"Sample Output 2: 9999700002.000\""
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2\\n1 1\\n1 1\\n') == '0.000\\n'\nassert solution('2\\n1 99999\\n99999 99999\\n') == '9999700002.000\\n'"
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2\\n1 1\\n1 1') == 0.000, \"Incorrect output\"\n\nassert solution('2\\n1 99999\\n99999 99999') == 9999700002.000, \"Incorrect output\""
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Sample Input 1\", \"Sample Output 1\") == \"0.000\\n\"\nassert solution(\"Sample Input 2\", \"Sample Output 2\") == \"9999700002.000\\n\""
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 3, \"Incorrect solution\""
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2"
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input) == output, f\"Your solution is incorrect. Expected output: {output}, but got {solution(input)}\"\nfor input in [\"\", \"1\", \"2\", \"3\", \"4\", \"5\"]:\n    for output in [3, 19, 4, 19, 4, 19, 20]:\n        assert solution(input) == output, f\"Your solution is incorrect. Expected output: {output}, but got {solution(input)}\""
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"Impossible\" # expected output: \"Impossible\""
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"3\", \"Expected '3', but got '{}'\".format(solution(stdin))"
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 8 1 6\\n1 2 5\\n1 3 1\\n2 6 6\\n2 3 6\\n4 2 3\\n3 4 1\\n4 5 1\\n5 6 1\\n5\\n1 3 6 5 4\") == \"3\\n\"\nassert solution(\"3 4 1 2\\n1 2 6\\n1 3 2\\n1 2 7\\n2 3 3\\n2\\n1 2\") == \"Infinity\\n\"\nassert solution(\"6 8 1 6\\n1 2 5\\n1 3 1\\n2 6 6\\n2 3 6\\n4 2 3\\n3 4 1\\n4 5 1\\n5 6 1\\n5\\n1 3 6 5 4\") == \"3\\n\"\nassert solution(\"3 4 1 2\\n1 2 6\\n1 3 2\\n1 2 7\\n2 3 3\\n2\\n1 2\") == \"Infinity\\n\"\n"
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 8 1 6\\n1 2 5\\n1 3 1\\n2 6 6\\n2 3 6\\n4 2 3\\n3 4 1\\n4 5 1\\n5 6 1\\n5\\n1 3 6 5 4\") == \"3\\n\", \"Expected output: 3\\nActual output: \" + solution(\"6 8 1 6\\n1 2 5\\n1 3 1\\n2 6 6\\n2 3 6\\n4 2 3\\n3 4 1\\n4 5 1\\n5 6 1\\n5\\n1 3 6 5 4\")"
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"3\\n\"\nassert solution(stdin) == \"Infinity\\n\"\n\nsolution(stdin)"
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('gray_code.in', 'r')) == '000\\n001\\n011\\n010\\n110\\n111\\n101\\n100'"
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"impossible\\n\", \"Test case 1 failed\""
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 1\\n6\\n\") == \"impossible\\n\"\nassert solution(\"3 1\\n1\\n\") == \"000\\n001\\n011\\n010\\n110\\n111\\n101\\n100\\n\""
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for input {input()} and expected output {expected_output}\""
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('6 1\\n6\\nSample Input 2: 3 1\\n1\\nSample Output 2: 000\\n001\\n011\\n010\\n110\\n111\\n101\\n100\\n\\nimpossible\\n\\n') == '000\\n001\\n011\\n010\\n110\\n111\\n101\\n100\\nimpossible\\n'\nassert solution('6 1\\n6\\nSample Input 2: 4 2\\n2 4\\nSample Output 2: impossible\\n\\n') == 'impossible\\n'\n"
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 1\\n6\\n\") == \"impossible\\n\"\nassert solution(\"3 1\\n1\\n\") == \"000\\n001\\n011\\n010\\n110\\n111\\n101\\n100\\n\"\nassert solution(\"4 2\\n2\\n\") == \"0111\\n0110\\n0101\\n0100\\n1001\\n1000\\n0011\\n0010\\n1111\\n1110\\n1101\\n1100\\n1011\\n1010\\n1001\\n1000\\n1101\\n1100\\n1011\\n1010\\n1001\\n1000\\n0111\\n0110\\n0101\\n0100\\n1001\\n1000\\n0011\\n0010\\n1111\\n1110\\n1101\\n1100\\n1011\\n1010\\n1001\\n1000\\n0111\\n0110\\n0101\\n0100\\n1001\\n1000\\n0011\\n0010\\n1111\\n1110\\n1101\\n1100\\n1011\\n1010\\n1001\\n1000\\n0111\\n0110\\n0101\\n0100\\n1001\\n1000\\n0011\\n0010\\n1111\\n1110\\n1101\\n1100\\n1011\\n1010\\n1001\\n1000\\n0111\\n0110\\n0101\\n0100\\n1001\\n1000\\n0011\\n0010\\n1111\\n1110\\n1101\\n1100\\n1011\\n1010\\n1001\\n1000\\n0111\\n0110\\n0101\\n0100\\n1001\\n1000\\n0011\\n0010\\n1111\\n1110\\n1101\\n1100\\n1011\\n1010\\n1001\\n1000\\n0111\\n0110\\n0101\\n0100\\n1001\\n1000\\n0011\\n0010\\n1111\\n1110\\n1101\\n1100\\n1011\\n1010\\n1001\\n1000\\n0111\\n0110\\n0101\\n0100\\n1001\\n1000\\n0011\\n0010\\n1111\\n1110\\n1101\\n1100\\n1011\\n1010\\n1001\\n1000\\n0111\\n0110\\n0101\\n0100\\n1001\\n1000\\n0011\\n0010\\n1111\\n1110\\n1101\\n1100\\n1011\\n1010\\n1001\\n1000\\n0111\\n0110\\n0101\\n0100\\n1001\\n1000\\n"
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == output\n"
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1, 1) == 'impossible'\nassert solution(2, 2) == '000'\nassert solution(3, 1) == '000'\nassert solution(4, 2) == '000'\nassert solution(5, 3) == '000'\nassert solution(6, 1) == '000'\nassert solution(6, 3) == '000'\nassert solution(7, 1) == '000'\nassert solution(7, 2) == '001'\nassert solution(7, 3) == '011'\nassert solution(8, 1) == '000'\nassert solution(8, 3) == '000'\nassert solution(9, 1) == '000'\nassert solution(9, 2) == '000'\nassert solution(10, 1) == '000'\nassert solution(10, 3) == '000'\nassert solution(11, 1) == '000'\nassert solution(11, 2) == '000'\nassert solution(11, 3) == '011'\nassert solution(12, 1) == '000'\nassert solution(12, 2) == '000'\nassert solution(12, 3) == '011'\nassert solution(13, 1) == '000'\nassert solution(13, 2) == '000'\nassert solution(13, 3) == '011'\nassert solution(14, 1) == '000'\nassert solution(14, 2) == '000'\nassert solution(14, 3) == '011'\nassert solution(15, 1) == '000'\nassert solution(15, 2) == '000'\nassert solution(15, 3) == '011'\nassert solution(16, 1) == '000'\nassert solution(16, 2) == '000'\nassert solution(16, 3) == '011'\nassert solution(17, 1) == '000'\nassert solution(17, 2) == '000'\nassert solution(17, 3) == '011'\nassert solution(18, 1) == '000'\nassert solution(18, 2) == '000'\nassert solution(18, 3) == '011'\nassert solution(19, 1) == '000'\nassert solution(19, 2) == '000'\nassert solution(19, 3) == '011'\nassert solution(20, 1) == '000'\nassert solution(20, 2) == '000'\nassert solution(20, 3) == '011'\nassert solution(21, 1) == '000'\nassert solution(21, 2) == '000'\nassert solution(21, 3) == '011'\nassert solution(22, 1) == '000'\nassert solution(22, 2) == '000'\nassert solution(22, 3) == '011'\nassert solution(23, 1) == '000'\nassert solution(23, 2) == '000'\nassert solution(23, 3) == '011'\nassert solution(24, 1) == '000'\nassert solution(24, 2) == '000'\nassert solution(24, 3) == '011'\nassert solution(25, 1) == '000'\nassert solution(25, 2) == '000'\nassert solution(25, 3) == '011'\nassert solution(26, 1) == '000'\nassert solution(26, 2) == '000'\nassert solution(26, 3) == '011'\nassert solution(27, 1) == '000'\n"
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('6 1\\n6\\n1') == 'impossible\\n'\nassert solution('3 1\\n1\\n') == '000\\n001\\n011\\n010\\n110\\n111\\n101\\n100\\n'\n"
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\\n99\") == \"1\"\nassert solution(\"90\\n10\") == \"10\""
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, \"Error in solution!\"\n"
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=input()) == output, f\"Solution: {solution(stdin=input())}, Output: {output}\""
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10\\n99\") == \"1\\n\", \"Invalid output for sample 1\"\nassert solution(\"90\\n10\") == \"10\\n\", \"Invalid output for sample 2\"\n"
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10\\n99\") == \"1\\n\", \"100% pass\"\nassert solution(\"90\\n10\") == \"10\\n\", \"100% pass\""
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10\") == \"1\\n\", \"Test case 1 failed\"\nassert solution(\"99\") == \"1\\n\", \"Test case 2 failed\""
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10\\n99\") == \"1\\n\"\nassert solution(\"90\\n10\") == \"10\\n\""
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10\\n99\") == \"1\"\nassert solution(\"90\\n10\") == \"10\""
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i + 1} failed: expected output {expected_output}, but got {solution(input())}\""
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(10) == 1\nassert solution(99) == 1"
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2 3 3\\n4 1 10\\n2 7 3\") == \"2\\n\"\nassert solution(\"4\\n3 1 3 3\\n5 8 7 10\\n4 1 2 6\") == \"1\\n\""
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n2 3 3\\n4 1 10\\n2 7 3') == '2\\n'\nassert solution('4\\n3 1 3 3\\n5 8 7 10\\n4 1 2 6') == '1\\n'"
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 2, \"Sample Input 1: 2\"\nassert solution() == 1, \"Sample Input 2: 1\""
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n2 3 3\\n4 1 10\\n2 7 3\") == \"2\\n\"\nassert solution(\"4\\n3 1 3 3\\n5 8 7 10\\n4 1 2 6\") == \"1\\n\""
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2\\n\", \"Your solution is incorrect.\"\nassert solution() == \"1\\n\", \"Your solution is incorrect.\""
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n2 3 3\\n4 1 10\\n2 7 3\") == \"2\\n\"\nassert solution(\"4\\n3 1 3 3\\n5 8 7 10\\n4 1 2 6\") == \"1\\n\""
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n2 3 3\\n4 1 10\\n2 7 3\\n\") == \"2\\n\"\nassert solution(\"4\\n3 1 3 3\\n5 8 7 10\\n4 1 2 6\\n\") == \"1\\n\""
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2\", \"Expected output: 2\\nReceived: {}\".format(solution(input()))"
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n2 3 3\\n4 1 10\\n2 7 3\\n\") == \"2\\n\"\nassert solution(\"4\\n3 1 3 3\\n5 8 7 10\\n4 1 2 6\\n\") == \"1\\n\""
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"beginngin\") == 5\nassert solution(\"velvet\") == 7\n"
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"Never attribute to malice that which is adequately explained by stupidity.\"\nassert solution == \"The ICPC made a good faith effort to produce the required string.\"\nassert solution == \"One could hope for a better solution.\"\nassert solution == \"I can't believe you didn't write this code.\"\nassert solution == \"The team is heading towards a better solution.\""
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"5\"\nassert solution(input()) == \"11\"\nassert solution(input()) == \"16\""
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"beginning\") == 5, \"Solution should return 5.\"\nassert solution(\"1 5\") == 11, \"Solution should return 11.\"\nassert solution(\"4 8\") == 16, \"Solution should return 16.\"\n\nfrom typing import List"
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('beginning') == 5\nassert solution('1 5 4 8 1 9') == 5\nassert solution('velvet') == 7"
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"beginning\") == 5\nassert solution(\"1 5\\n4 8\\n1 9\") == 11\nassert solution(\"velvet\\n1 6\") == 7\nassert solution(\"9 3\\n1 4\\n2 5\\n3 6\\n4 7\\n5 8\\n6 9\") == 16"
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"beginning\") == \"5\"\nassert solution(\"1 5 4 8 1 9\") == \"11 16\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"beginning\") == \"11\"\nassert solution(\"1 5\") == \"16\"\nassert solution(\"velvet\") == \"7\""
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1, 5) == 5\nassert solution(2, 3) == 5\nassert solution(1, 1) == 1\nassert solution(1, 9) == 11\nassert solution(1, 6) == 7"
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"beginning\") == 5\nassert solution(\"1 5\\n4 8\\n1 9\") == 11\nassert solution(\"velvet\") == 7\n"
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3, 4, [3, 1], [2, 2], [1, 1]) == 2\nassert solution(2, 3, [1, 23], [2, 17]) == 23\n"
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2\"\nassert solution() == \"23\""
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 'your_answer'"
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 2"
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"Solution: {solution(input())}, Expected: {expected}\""
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\n3 1\\n2 2\\n1 1\\n\") == \"2\\n\"\nassert solution(\"2 3\\n1 23\\n2 17\\n\") == \"23\\n\""
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Test failed: Expected output {expected_output}, but got {solution(input())}.\""
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4\\n3 1\\n2 2\\n1 1\\n\") == \"2\"\nassert solution(\"2 3\\n1 23\\n2 17\\n\") == \"23\""
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 0.0000000000\nassert solution() == 9.476048311178"
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"0.0000000000\", \"Test case 1: Empty input\"\nassert solution(\"2\") == \"0.0000000000\", \"Test case 2: One vertex input\"\nassert solution(\"3\") == \"0.0000000000\", \"Test case 3: Two vertices input\"\nassert solution(\"6\") == \"0.0000000000\", \"Test case 4: Three vertices input\"\nassert solution(\"7\") == \"0.0000000000\", \"Test case 5: Four vertices input\"\nassert solution(\"8\") == \"0.0000000000\", \"Test case 6: Five vertices input\"\n\nsolution = \"\"\"\nimport math"
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n0 0\\n2 0\\n2 2\\n0 2\\n0 -1 0 3\") == \"0.0000000000\"\nassert solution(\"6\\n0 1\\n0 4\\n3 6\\n7 5\\n4 2\\n7 0\\n5 7 2 0\") == \"9.476048311178\""
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input) == output, f\"Test failed with input {input}, expected output {output}\""
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n0 0\\n2 0\\n2 2\\n0 2\\n0 -1 0 3\") == \"0.0000000000\"\nassert solution(\"6\\n0 1\\n0 4\\n3 6\\n7 5\\n4 2\\n7 0\\n5 7 2 0\") == \"9.476048311178\""
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n0 0\\n2 0\\n2 2\\n0 2\\n0 -1 0 3\") == 0.0000000000\nassert solution(\"6\\n0 1\\n0 4\\n3 6\\n7 5\\n4 2\\n7 0\\n5 7 2 0\") == 9.476048311178"
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 0.0000000000\n"
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"9.476048311178\\n\""
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\nr'''\n4\n0 0\n2 0\n2 2\n0 2\n0 -1 0 3\n'''\n) == '0.0000000000'\n\nassert solution(\nr'''\n6\n0 1\n0 4\n3 6\n7 5\n4 2\n7 0\n5 7 2 0\n'''\n) == '9.476048311178'"
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin='5\\n2 0\\n1 1\\n0 2\\n-2 0\\n0 -2\\n') == '8.0000000000'\nassert solution(stdin='5\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.20\\n') == '0.0200000000'"
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == output, f\"The output is incorrect. Expected: {output}, Received: {solution(stdin)}\"\n"
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"8.0000000000\"\nassert solution() == \"0.0200000000\""
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"8.0000000000\\n\", solution(stdin)"
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n2 0\\n1 1\\n0 2\\n-2 0\\n0 -2\\n') == '8.0000000000\\n'\nassert solution('5\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.20\\n') == '0.0200000000\\n'"
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    5\n    2 0\n    1 1\n    0 2\n    -2 0\n    0 -2\n    \"\"\"\n) == \"8.0000000000\"\n\nassert solution(\n    \"\"\"\n    5\n    0.2 0.00\n    0 -0.2\n    0.0 0\n    0.2 0\n    0 0.20\n    \"\"\"\n) == \"0.0200000000\""
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 0, \"Your solution is incorrect\""
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2 0\\n1 1\\n0 2\\n-2 0\\n0 -2\") == \"8.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2 0\\n1 1\\n0 2\\n-2 0\\n0 -2\") == \"8.0000000000\"\nassert solution(\"5\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.20\") == \"0.0200000000\""
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2 0\\n1 1\\n0 2\\n-2 0\\n0 -2\") == \"8.0000000000\"\nassert solution(\"5\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.20\") == \"0.0200000000\""
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '2'\n"
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('9 4 3\\n1 1 9 9 1 6 6 39 9\\n10 2 2\\n1 1 1 1 1 2 2 2 2 2') == 2\nassert solution('10 2 2\\n1 1 1 1 1 2 2 2 2 2') == 2\nprint('All tests passed.')"
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"9 4 3\\n1 1 9 9 1 6 6 39 9\\n\") == \"2\\n\"\nassert solution(\"10 2 2\\n1 1 1 1 1 2 2 2 2 2\\n\") == \"2\\n\""
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"9 4 3\\n1 1 9 9 1 6 6 39 9\\n\") == \"2\\n\"\nassert solution(\"10 2 2\\n1 1 1 1 1 2 2 2 2 2\\n\") == \"2\\n\"\n\nassert solution(\"9 4 3\\n1 1 9 9 1 6 6 39 9\\n\") == \"2\\n\"\nassert solution(\"10 2 2\\n1 1 1 1 1 2 2 2 2 2\\n\") == \"2\\n\""
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"9 4 3\\n1 1 9 9 1 6 6 39 9\\n\") == \"2\\n\"\nassert solution(\"10 2 2\\n1 1 1 1 1 2 2 2 2 2\\n\") == \"2\\n\""
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2\\n\", \"Test case failed.\""
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\\n\", \"Test Case 1 failed\"\nassert solution(stdin) == \"2\\n\", \"Test Case 2 failed\"\nassert solution(stdin) == \"2\\n\", \"Test Case 3 failed\"\nassert solution(stdin) == \"2\\n\", \"Test Case 4 failed\"\nassert solution(stdin) == \"2\\n\", \"Test Case 5 failed\""
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"9 4 3\\n1 1 9 9 1 6 6 39 9\\n\") == \"2\"\nassert solution(\"10 2 2\\n1 1 1 1 1 2 2 2 2 2\\n\") == \"2\""
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 20.0, \"The expected output is incorrect.\""
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '3.666666667'\nassert solution(input()) == '20.000000000'"
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 3 2\\n1 2 3') == '3.666666667'\nassert solution('4 11 4\\n10 10 10 10') == '20.000000000'"
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Your solution is incorrect. Please check the given example inputs and expected outputs.\""
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 3 2\\n1 2 3\\n') == '3.666666667'\nassert solution('4 11 4\\n10 10 10 10\\n') == '20.000000000'"
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3 2\\n1 2 3\\n\") == \"3.666666667\"\nassert solution(\"4 11 4\\n10 10 10 10\\n\") == \"20.000000000\""
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3 2\\n1 2 3\") == \"3.666666667\"\nassert solution(\"4 11 4\\n10 10 10 10\") == \"20.000000000\""
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3 2\\n1 2 3\\n\") == \"3.666666667\"\nassert solution(\"4 11 4\\n10 10 10 10\\n\") == \"20.000000000\""
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3 2\\n1 2 3\") == \"3.666666667\\n\"\nassert solution(\"4 11 4\\n10 10 10 10\") == \"20.000000000\\n\""
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=input()) == '3.666666667\\n'  # Test 1\nassert solution(stdin=input()) == '20.000000000\\n'  # Test 2"
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 42\") == \"2\"\nassert solution(\"5 123456789\") == \"16317634\"\n\nfrom functools import reduce"
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"The output of the program is incorrect. Please check the examples and the problem statement.\""
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input1) == 2, \"Expected output 2, got {}\".format(solution(input1))\nassert solution(input2) == 16317634, \"Expected output 16317634, got {}\".format(solution(input2))"
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin='2 42') == '2'\nassert solution(stdin='5 123456789') == '16317634'\n\nfrom functools import reduce"
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), \"Incorrect output\"\nprint(\"Correct\")"
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 42\") == \"2\"\nassert solution(\"5 123456789\") == \"16317634\"\n\nfrom functools import reduce"
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == output, f\"The solution for the given input should be {output}, but it is {solution(stdin)}.\"\n"
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input1) == sample_output1, \"Test 1 failed.\"\nassert solution(sample_input2) == sample_output2, \"Test 2 failed.\""
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin='2 42\\n5 123456789\\n') == '2\\n16317634\\n'"
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 42\") == 2\nassert solution(\"5 123456789\") == 16317634"
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 1 0 0 2\\n1 2 2\\n1 1 1\\n') == '0\\n'\nassert solution('3 1 1 1 8\\n0 1 1\\n1 0 1\\n2 1 1\\n1 2 1\\n1 2 2\\n2 2 3\\n0 2 5\\n1 2 6\\n') == '4\\n'"
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Your solution is incorrect. Please see the provided example.\""
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1 0 0 2\\n1 2 2\\n1 1 1\") == \"0\\n\"\nassert solution(\"3 1 1 1 8\\n0 1 1\\n1 0 1\\n2 1 1\\n1 2 1\\n1 2 2\\n2 2 3\\n0 2 5\\n1 2 6\") == \"4\\n\"\n"
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == output, f\"Expected output: {output}, got: {solution(stdin)}\""
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 1 0 0 2\\n1 2 2\\n1 1 1') == '0\\n', 'Sample Input 1'\nassert solution('3 1 1 1 8\\n0 1 1\\n1 0 1\\n2 1 1\\n1 2 1\\n1 2 2\\n2 2 3\\n0 2 5\\n1 2 6') == '4\\n', 'Sample Input 2'"
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '0'\n"
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 4, \"Incorrect output\""
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1 0 0 2\\n1 2 2\\n1 1 1\\n\") == \"0\\n\"\nassert solution(\"3 1 1 1 8\\n0 1 1\\n1 0 1\\n2 1 1\\n1 2 1\\n1 2 2\\n2 2 3\\n0 2 5\\n1 2 6\\n\") == \"4\\n\""
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1 0 0 2\\n1 2 2\\n1 1 1\\n\") == \"0\\n\"\nassert solution(\"3 1 1 1 8\\n0 1 1\\n1 0 1\\n2 1 1\\n1 2 1\\n1 2 2\\n2 2 3\\n0 2 5\\n1 2 6\\n\") == \"4\\n\""
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1 0 0 2\\n1 2 2\\n1 1 1\") == 0\nassert solution(\"3 1 1 1 8\\n0 1 1\\n1 0 1\\n2 1 1\\n1 2 1\\n1 2 2\\n2 2 3\\n0 2 5\\n1 2 6\") == 4"
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 3, \"The solution provided is incorrect\""
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"3\"\n"
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution"
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected_output, f\"Test case {test_case} failed: {solution(stdin)!= expected_output}\""
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 1 10 10\\n8 8\\n5 1\\n4 6\\n4 7\\n7 9\") == \"3\\n\"\nassert solution(\"5 1 100 100\\n27 75\\n79 77\\n40 93\\n62 41\\n52 45\") == \"3\\n\""
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 1 10 10\\n8 8\\n5 1\\n4 6\\n4 7\\n7 9\\n') == '3'"
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 1 10 10\\n8 8\\n5 1\\n4 6\\n4 7\\n7 9') == '3'"
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 1 10 10\\n8 8\\n5 1\\n4 6\\n4 7\\n7 9\") == \"3\"\nassert solution(\"5 1 100 100\\n27 75\\n79 77\\n40 93\\n62 41\\n52 45\") == \"3\""
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == expected, f\"Expected {expected}, got {solution}\"\n"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == 3"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('ABC') == 2\nassert solution('ABBBAAAA') == 3"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == 3"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == 3"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == 3"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('ABC') == 2\nassert solution('ABBBAAAA') == 3\n"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == 3"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"ABC\") == 2, \"Sample Input 1: ABC\"\nassert solution(\"ABBBAAAA\") == 3, \"Sample Input 2: ABBBAAAA\""
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('ABC') == 2\nassert solution('ABBBAAAA') == 3"
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\nA\\nB\\nAA\\nBBB\\nA\\n\") == \"3\", \"Sample Output 1\"\nassert solution(\"5\\nA\\nABA\\nBBB\\nABABA\\nAAAAAB\\n\") == \"3\", \"Sample Output 2\""
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == '3\\n'"
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\nA\\nB\\nAA\\nBBB\\nAAA\") == \"3\"\n\nThe given problem can be solved using dynamic programming. We can use the following approach:\n\n- We will define a list `dp` of size `N+1` where `dp[i]` stores the number of teleportations Lodas can make to strings of length `i` in the input data.\n- We will initialize `dp[0] = 1` and `dp[1] = 2` since there is no Loda can make a string of length 0 or 1.\n- We will then iterate over the input data from `2` to `N` and fill `dp` as follows:\n  - `dp[i]` = `dp[i-1] + dp[i-2] + 1` if the i-th string is not equal to the previous string or if the i-th string is equal to the previous string.\n  - `dp[i]` = `dp[i-1] + 1` if the i-th string is equal to the previous string.\n- Finally, we will return `dp[N]`.\n\nLet's implement the solution. We will first test our solution with the given examples."
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\nA\\nB\\nA\\nB\\nA\") == \"3\""
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"3\", \"Input and Output do not match.\""
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input(\"N: \")) == '3', \"Expected 3, got {}\".format(solution(input(\"N: \"))))"
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\nA\\nB\\nAA\\nBBB\\nA\\n\") == \"3\\n\", \"Sample Input 1\"\nassert solution(\"5\\nA\\nABA\\nBBB\\nABABA\\nAAAAAB\\n\") == \"3\\n\", \"Sample Input 2\""
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"3\\n\", \"Incorrect output\""
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\nA\\nB\\nA\\nB\\nA\\nA\\nB\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA"
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\nA\\nB\\nA\\n\") == \"3\\n\"\nassert solution(\"5\\nA\\nABA\\nBBB\\nABABA\\nAAAAAB\") == \"3\\n\"\n"
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"0.1\\n\", \"There is a problem with the solution\"\n"
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"100 10 2 1\\n100 10 2 2\\n\") == \"0.1\"\nassert solution(\"100 10 2 1\\n100 10 1 2\\n\") == \"0.2\"\nassert solution(\"100 10 1 2 1\\n100 10 1 1 2\\n\") == \"0.3\"\nassert solution(\"100 10 1 1 2\\n100 10 2 1 1\\n\") == \"0.4\"\nassert solution(\"100 10 2 1 1\\n100 10 2 2 1\\n\") == \"0.5\"\nassert solution(\"100 10 2 1 2\\n100 10 1 1 1\\n\") == \"0.6\"\nassert solution(\"100 10 1 2 1\\n100 10 1 2 2\\n\") == \"0.7\"\nassert solution(\"100 10 2 1 1\\n100 10 1 1 1\\n\") == \"0.8\"\nassert solution(\"100 10 2 2 1\\n100 10 1 1 2\\n\") == \"0.9\"\nassert solution(\"100 10 1 2 2\\n100 10 1 1 1\\n\") == \"1\""
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"100 10 2 1\\n\"\n    \"100 10 2 2\\n\"\n) == \"0.1909090909\""
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Solution {solution(stdin)} is incorrect. Expected: {expected}, actual: {solution(stdin)}\"\n"
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input1) == output1, f\"Solution for example 1 is incorrect. Expected {output1}, got {solution(input1)}\"\nassert solution(input2) == output2, f\"Solution for example 2 is incorrect. Expected {output2}, got {solution(input2)}\"\n\nfrom typing import List"
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"100 10 2 1\\n\") == \"0.1\"\nassert solution(\"100 10 2 2\\n\") == \"0.1909090909\""
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 0.1909090909  # expected output\nassert solution() == 0.1825651316  # expected output\nassert solution() == 0.1825651316  # expected output\nassert solution() == 0.1825651316  # expected output\nassert solution() == 0.1825651316  # expected output\n"
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"100 10 2 1\\n\") == \"0.1\\n\"\nassert solution(\"100 10 2 2\\n\") == \"0.1909090909\\n\""
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"100 10 2 1\") == \"0.1\"\nassert solution(\"100 10 2 2\") == \"0.1909090909\""
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == \"4\"\nassert solution(\"ABABABcABABAbAba\") == \"0\"\nassert solution(\"ABABABcABABAbAbb\") == \"5\""
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('ABABABcABABAbAbab') == 4\nassert solution('ABABABcABABAbAbac') == 5"
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == \"4\"\nassert solution(\"AABABAB\") == \"0\"\nassert solution(\"ABABAB\") == \"0\"\nassert solution(\"ABABAB\") == \"0\"\nassert solution(\"ABABAB\") == \"0\""
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == \"0\"\nassert solution(\"ABABABcABABAbAbab\") == \"5\""
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r')) == '4\\n0\\n5\\n'\n"
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '4\\n0\\n5'"
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\").read()) == \"12\""
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == \"4\"\nassert solution(\"123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345"
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == \"0\"\nassert solution(\"ABABABcABABAbAbab\") == \"5\"\nassert solution(\"ABABABcABABAbAbab\") == \"0\"\nassert solution(\"ABABABcABABAbAbab\") == \"5\"\nassert solution(\"ABABABcABABAbAbab\") == \"0\"\nassert solution(\"ABABABcABABAbAbab\") == \"5\"\nassert solution(\"ABABABcABABAbAbab\") == \"0\"\nassert solution(\"ABABABcABABAbAbab\") == \"5\"\nassert solution(\"ABABABcABABAbAbab\") == \"0\"\nassert solution(\"ABABABcABABAbAbab\") == \"5\"\nassert solution(\"ABABABcABABAbAbab\") == \"0\"\nassert solution(\"ABABABcABABAbAbab\") == \"5\"\nassert solution(\"ABABABcABABAbAbab\") == \"0\"\nassert solution(\"ABABABcABABAbAbab\") == \"5\"\nassert solution(\"ABABABcABABAbAbab\") == \"0\"\nassert solution(\"ABABABcABABAbAbab\") == \"5\"\nassert solution(\"ABABABcABABAbAbab\") == \"0\"\nassert solution(\"ABABABcABABAbAbab\") == \"5\"\nassert solution(\"ABABABcABABAbAbab\") == \"0\"\nassert solution(\"ABABABcABABAbAbab\") == \"5\"\nassert solution(\"ABABABcABABAbAbab\") == \"0\"\nassert solution(\"ABABABcABABAbAbab\") == \"5\"\nassert solution(\"ABABABcABABAbAbab\") == \"0\"\nassert solution(\"ABABABcABABAbAbab\") == \"5\"\nassert solution(\"ABABABcABABAbAbab\") == \"0\"\nassert solution(\"ABABABcABABAbAbab\") == \"5\"\nassert solution(\"ABABABcABABAbAbab\") == \"0\"\nassert solution(\"ABABABcABABAbAbab\") == \"5\"\nassert solution(\"ABABABcABABAbAbab\") == \"0\"\nassert solution(\"ABABABcABABAbAbab\") == \"5\"\nassert solution(\"ABABABcABABAbAbab\") == \"0\"\nassert solution(\"ABABABcABABAbAbab\") == \"5\"\nassert solution(\"ABABABcABABAbAbab\") == \"0\"\nassert solution(\"ABABABcABABAbAbab\") == \"5\"\nassert solution(\"ABABABcABABAbAbab\") == \"0\"\nassert solution(\"ABABABcABABAbAbab\") == \"5\"\nassert solution(\"ABABABcABABAbAbab\") == \"0\"\nassert solution(\"ABABABcABABAbAbab\") == \"5\"\nassert solution(\"ABABABcABABAbAbab\") == \"0\"\nassert solution(\"ABABABcABABAbAbab\") == \"5\"\nassert solution(\"ABABABcABABAbAbab\") == \"0\"\nassert solution(\"ABABABcABABAbAbab\") == \"5\"\nassert solution(\"ABABABcABABAbAbab\") == \"0\"\nassert solution(\"ABABABcABABAbAbab\") == \"5\"\nassert solution(\"ABABABcABABAbAbab\") == \"0\"\nassert solution(\"ABABABcABABAbAbab\") == \"5\"\nassert solution(\"ABABABcABABAbAbab\") == \"0\"\nassert solution(\"ABABABcABABAbAbab\") == \"5\"\nassert solution(\"ABABABcABABAbAbab\") == \"0\"\nassert solution(\"ABABABcABABAbAbab\") == \"5\"\nassert solution(\"ABABABcABABAbAbab\") == \"0\"\nassert solution(\"ABABABcABABAbAbab\") == \"5\"\nassert solution(\"ABABABcABABAbAbab\") == \"0\"\nassert solution(\"ABABABcABABAbAbab\") == \"5\"\nassert solution(\"ABABABcABABAbAbab\") == \"0\"\nassert solution(\"ABABABcABABAbAbab\") == \"5\"\nassert solution(\"ABABABcABABAbAbab\") == \"0\"\n"
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == \"0\"\nassert solution(\"ABABABcABABAbAbab\") == \"5\""
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 3\\n0\\n0\\n1\\n') == '2\\n'\nprint(\"All tests passed.\")"
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == 2"
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n0\\n0\\n1\") == \"2\", \"Incorrect output\"\nassert solution(\"4 5\\n0\\n0\\n1\") == \"3\", \"Incorrect output\"\nassert solution(\"4 3\\n1 2\\n1 4\\n2 3\") == \"3\", \"Incorrect output\"\nassert solution(\"4 3\\n1 2\\n1 4\\n2 5\") == \"4\", \"Incorrect output\"\nassert solution(\"4 3\\n1 2\\n1 4\\n2 3\") == \"3\", \"Incorrect output\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == \"2\", \"Test case 1\""
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n0\\n0\\n1\") == \"2\\n\"\n\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n0\\n0\\n1\") == \"2\", \"Your code is not correct\""
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n0\\n0\\n1\") == \"2\\n\"\nassert solution(\"4 5\\n1\\n1\\n2\\n2\") == \"3\\n\"\nassert solution(\"4 7\\n1\\n2\\n3\\n4\\n5\") == \"4\\n\"\nassert solution(\"4 9\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\") == \"5\\n\""
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n0\\n0\\n1\") == \"2\"\nassert solution(\"4 3\\n0\\n0\\n1\\n2\") == \"4\""
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('sample_input.txt', 'r').read()) == '2'"
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n0\\n0\\n1\\n\") == \"2\\n\""
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_str) == output_str, f\"Test failed for input {input_str}, expected {output_str}, got {solution(input_str)}\""
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\") == \"1\\nP0: 22 1 4 2 6 -1 0\""
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\") == \"1\\nP0: 22 1 4 2 6 -1 0\"\nassert solution(\"2 10 10 10\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\") == \"1\\nP0: 22 1 4 2 6 -1 0\"\nassert solution(\"2 10 10 10\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\") == \"1\\nP0: 22 1 4 2 6 -1 0\"\nassert solution(\"2 10 10 10\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\") == \"1\\nP0: 22 1 4 2 6 -1 0\"\nassert solution(\"2 10 10 10\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\") == \"1\\nP0: 22 1 4 2 6 -1 0\""
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1') == '1\\nP0: 22 1 4 2 6 -1 0'\n"
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1') == 1\nassert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 2') == 1\nassert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1') == 1\nassert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1') == 1\nassert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1') == 1\nassert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1') == 1\nassert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1') == 1\nassert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1') == 1\nassert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1') == 1\nassert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1') == 1\nassert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1') == 1\nassert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1') == 1\nassert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1') == 1\nassert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1') == 1\nassert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1') == 1\nassert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1') == 1\nassert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1') == 1\nassert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1') == 1\nassert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1') == 1\nassert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1') == 1\nassert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1') == 1\nassert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -"
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n2 8 8 8\n12 4 1 4 5 3 -2\n10 1 2 1 8 -6 1\n\"\"\") == 1\nassert solution(\n\"\"\"\n2 8 8 8\n12 4 1 4 5 3 -2\n10 1 2 1 8 -6 1\n\"\"\") == 1"
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == sample_output, f\"Your implementation of the solution is incorrect. Please check the implementation and update it.\""
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1') == '1\\nP0: 22 1 4 2 6 -1 0\\n'\nassert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1') == '1\\nP0: 22 1 4 2 6 -1 0\\n'\nassert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1') == '1\\nP0: 22 1 4 2 6 -1 0\\n'"
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\") == 1\nassert solution(\"5 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\") == 0\nassert solution(\"5 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 2\") == 2\nassert solution(\"2 4 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\") == 0\nassert solution(\"2 4 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 2\") == 1\nassert solution(\"1 3 4 5\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\") == 2\nassert solution(\"5 4 4 5\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\") == 1\nassert solution(\"5 4 4 5\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 2\") == 2\nassert solution(\"1 1 1 1\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\") == 1\nassert solution(\"1 1 1 1\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 2\") == 2\nassert solution(\"1 1 1 1\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\") == 1\nassert solution(\"1 1 1 1\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 2\") == 2"
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\") == 1\nassert solution(\"1 1 1 1\\n2 2 2 2\") == 2\nassert solution(\"1 2 3 4\\n5 6 7 8\") == 4\nassert solution(\"5 4 3 2\\n1 1 1 1\") == 8\n"
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin: str) == solution(stdin: str)"
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"The output is wrong. Expected: {output}, got: {solution(input())}\""
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(4, 7) == \"1\\n2\\n3\\n\"\nassert solution(1, 2, 1) == \"1\\n\"\nassert solution(1, 2, 3) == \"1\\n\"\nassert solution(1, 3, 2) == \"1\\n\"\nassert solution(1, 4, 1) == \"1\\n\"\nassert solution(2, 3, 4) == \"1\\n\"\nassert solution(2, 4, 4) == \"1\\n\"\nassert solution(3, 4, 4) == \"1\\n\"\nassert solution(3) == \"1\\n\"\nassert solution(1, 2) == \"1\\n\"\nassert solution(1, 3) == \"1\\n\"\nassert solution(3, 4) == \"1\\n\""
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(None) == \"Error: Function not defined\"\n"
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\\n\") == \"1\\n2\\n3\\n\""
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\") == \"1\\n2\\n3\\n\""
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 1\nassert solution() == 2\nassert solution() == 3\n"
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1\\n2\\n3\\n\"\n"
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '1\\n2\\n3\\n' # Test case 1\nassert solution() == '1\\n2\\n3\\n' # Test case 2\nassert solution() == '1\\n2\\n3\\n' # Test case 3\nassert solution() == '1\\n2\\n3\\n' # Test case 4\nassert solution() == '1\\n2\\n3\\n' # Test case 5\nassert solution() == '1\\n2\\n3\\n' # Test case 6\nassert solution() == '1\\n2\\n3\\n' # Test case 7\nassert solution() == '1\\n2\\n3\\n' # Test case 8\nassert solution() == '1\\n2\\n3\\n' # Test case 9\nassert solution() == '1\\n2\\n3\\n' # Test case 10\nassert solution() == '1\\n2\\n3\\n' # Test case 11\nassert solution() == '1\\n2\\n3\\n' # Test case 12\nassert solution() == '1\\n2\\n3\\n' # Test case 13\nassert solution() == '1\\n2\\n3\\n' # Test case 14\nassert solution() == '1\\n2\\n3\\n' # Test case 15\nassert solution() == '1\\n2\\n3\\n' # Test case 16\nassert solution() == '1\\n2\\n3\\n' # Test case 17\nassert solution() == '1\\n2\\n3\\n' # Test case 18\nassert solution() == '1\\n2\\n3\\n' # Test case 19\nassert solution() == '1\\n2\\n3\\n' # Test case 20\nassert solution() == '1\\n2\\n3\\n' # Test case 21\nassert solution() == '1\\n2\\n3\\n' # Test case 22\nassert solution() == '1\\n2\\n3\\n' # Test case 23\nassert solution() == '1\\n2\\n3\\n' # Test case 24\nassert solution() == '1\\n2\\n3\\n' # Test case 25\nassert solution() == '1\\n2\\n3\\n' # Test case 26\nassert solution() == '1\\n2\\n3\\n' # Test case 27\nassert solution() == '1\\n2\\n3\\n' # Test case 28\nassert solution() == '1\\n2\\n3\\n' # Test case 29\nassert solution() == '1\\n2\\n3\\n' # Test case 30\nassert solution() == '1\\n2\\n3\\n' # Test case 31\nassert solution() == '1\\n2\\n3\\n' # Test case 32\nassert solution() == '1\\n2\\n3\\n' # Test case 33\nassert solution() == '1\\n2\\n3\\n' # Test case 34\nassert solution() == '1\\n2\\n3\\n' # Test case 35\nassert solution() == '1\\n2\\n3\\n' # Test case 36\nassert solution() == '1\\n2\\n3\\n' # Test case 37\nassert solution() == '1\\n2\\n3\\n' # Test case 38\nassert solution() == '1\\n2\\n3\\n' # Test case 39\nassert solution() == '1\\n2\\n3\\n' # Test case 40\nassert solution() == '1\\n2\\n3\\n' # Test case 41\nassert solution() == '1\\n2\\n3\\n' # Test case 42\nassert solution() == '1\\n2\\n3\\n' # Test case 43\nassert solution() == '1\\n2\\n3\\n' # Test case 44\nassert solution() == '1\\n2\\n3\\n' # Test case 45\nassert solution() == '1\\n2\\n3\\n' # Test case 46\nassert solution() == '1\\n2\\n3\\n' # Test case 47\n"
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"\"\"\n1\n2\n3\n\"\"\""
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2\\n2\""
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == \"2\""
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2\""
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('6\\n1 5 4 3 2 6\\n1 2 5 4 3 6') == '2\\n2\\n4\\n1\\n3'\nassert solution('5\\n1 5 4 3 2 6\\n1 2 5 4 3 6') == '4\\n4\\n1\\n3\\n2'\nassert solution('8\\n1 5 4 3 2 6\\n1 2 5 4 3 6\\n1 2 5 4 3 6\\n1 2 5 4 3 6') == '4\\n4\\n1\\n3\\n2\\n1\\n3'\nassert solution('9\\n1 5 4 3 2 6\\n1 2 5 4 3 6\\n1 2 5 4 3 6\\n1 2 5 4 3 6\\n1 2 5 4 3 6\\n1 2 5 4 3 6\\n1 2 5 4 3 6\\n1 2 5 4 3 6\\n1 2 5 4 3 6\\n1 2 5 4 3 6\\n1 2 5 4 3 6') == '4\\n4\\n1\\n3\\n2\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1"
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\\n\") == \"2\"\n"
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2\\n\"\nassert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\\n2 1 3 5 4 2\\n1 6 2 4 5 3\") == \"2\\n1\\n\"\nassert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\\n2 1 3 5 4 2\\n1 6 2 4 5 3\\n3 4 2 6 5 1\\n2 5 1 4 6 3\\n2 1 3 5 4 6\\n3 4 1 2 6 5\\n6 5 1 2 3 4\\n1 2 3 4 5 6\\n5 1 4 6 3 2\\n2 4 5 6 3 1\\n3 5 1 2 6 4\\n6 1 2 5 4 3\\n1 4 2 6 5 3\\n2 5 3 1 6 4\\n4 6 2 5 1 3\\n5 3 1 2 4 6\\n3 2 4 6 5 1\\n6 2 3 1 5 4\\n4 1 2 5 6 3\\n5 4 3 2 1 6\\n6 3 1 4 2 5\\n1 6 2 5 4 3\\n2 3 4 1 5 6\\n3 4 5 2 1 6\\n5 6 1 2 3 4\\n6 2 5 3 1 4\\n1 2 3 6 5 4\\n3 5 6 2 1 4\\n4 2 1 3 6 5\\n5 6 3 2 1 1\\n6 1 5 3 2 4\\n1 5 6 4 2 3\\n2 4 1 6 3 5\\n3 6 2 1 4 5\\n4 5 1 3 2 6\\n5 4 3 1 2 6\\n6 3 2 4 1 5\\n1 6 5 2 3 4\\n2 3 1 4 5 6\\n3 5 4 1 2 6\\n4 2 6 5 1 3\\n5 1 3 4 6 2\\n6 4 1 2 3 5\\n1 4 2 5 6 3\\n2 1 4 6 3 5\\n3 2 5 1 4 6\\n4 1 5 2 3 6\\n5 3 2 1 4 6\\n6 2 3 4 1 5\\n1 5 2 6 3 4\\n2 4 6 1 3 5\\n3 1 5 2 6 4\\n4 2 1 5 3 6\\n5 3 6 1 2 4\\n6 4 2 5 1 3\\n1 2 3 6 5 4\\n3 1 5 6 4 2\\n4 5 6 2 1 3\\n5 2 1 3 4 6\\n6 3 4 5 1 2\\n1 4 2 5 6 3\\n2 5 1 4 3 6\\n3 6 5 1 2 4\\n4 1 3 2 5 6\\n5 6 2 3 1 4\\n6 1 2 5 4 3\\n1 6 2 5 4 3\\n2 5 3 1 6 4\\n3 4 5"
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2\\n1 2 5 4 3 6\"\nassert solution(\"12\\n1 2 3 4 5 6 7 8 9 10\\n2 3 4 5 6 7 8 9 10 11\") == \"3\\n1 2 3 10 9 8 7 6 5 4\"\n"
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == 60, \"The expected output is not correct.\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\\n') == 60"
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n3 3 2\n1 30 2 50\n2 70 3 10\n3 20 1 80\n''') == 60\n\nassert solution('''\n3 4 2\n1 30 2 50\n2 70 3 10\n3 20 1 80\n''') == -1\n\nassert solution('''\n3 3 2\n1 30 2 50\n2 70 3 10\n3 20 4 10\n''') == 60\n\nassert solution('''\n3 4 2\n1 30 2 50\n2 70 3 10\n3 20 4 10\n''') == -1\n\nassert solution('''\n3 3 2\n1 30 2 50\n2 70 3 11\n3 20 1 80\n''') == 60\n\nassert solution('''\n3 4 2\n1 30 2 50\n2 70 3 11\n3 20 4 10\n''') == -1\n\nassert solution('''\n3 3 2\n1 30 2 50\n2 70 3 10\n3 20 1 81\n''') == 60\n\nassert solution('''\n3 4 2\n1 30 2 50\n2 70 3 10\n3 20 4 11\n''') == -1\n\nassert solution('''\n3 3 2\n1 30 2 50\n2 70 3 10\n3 20 1 80\n''') == 60\n\nassert solution('''\n3 4 2\n1 30 2 50\n2 70 3 10\n3 20 4 10\n''') == -1\n\nassert solution('''\n3 3 2\n1 30 2 50\n2 70 3 10\n3 20 1 81\n''') == 60\n\nassert solution('''\n3 4 2\n1 30 2 50\n2 70 3 10\n3 20 4 11\n''') == -1\n\nassert solution('''\n3 3 2\n1 30 2 50\n2 70 3 10\n3 20 1 80\n''') == 60\n\nassert solution('''\n3 4 2\n1 30 2 50\n2 70 3 10\n3 20 4 11\n''') == -1\n\nassert solution('''\n3 3 2\n1 30 2 50\n2 70 3 10\n3 20 1 81\n''') == 60\n\nassert solution('''\n3 4 2\n1 30 2 50\n2 70 3 10\n3 20 4 11\n''') == -1"
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"60\\n\", \"The minimum cost is not as expected.\""
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == \"60\""
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 60"
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == 60\nassert solution(\"3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\\n3 2 50 1000\") == -1"
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == \"60\"\nassert solution(\"1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == \"60\"\nassert solution(\"3 1 1 50\\n2 70 3 10\\n3 20 1 80\") == \"-1\"\nassert solution(\"3 1 1 50\\n1 30 2 50\\n2 70 3 10\") == \"-1\"\nassert solution(\"3 1 1 50\\n1 30 2 50\\n3 20 1 80\") == \"-1\""
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n    3 3 2\n    1 30 2 50\n    2 70 3 10\n    3 20 1 80\n\"\"\") == \"60\\n\""
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == expected_output, f\"Expected output: {expected_output}, Received: {solution}\""
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n3\\n10000 0 0\\n0 10000 0\\n0 0 10000\\n3\\n5000 0 0\\n0 2000 0\\n0 0 4000\\n\") == \"Case #1: 1\\nCase #2: 2\\n\"\n"
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n5000 0 0\\n0 2000 0\\n0 0 4000\") == \"Case #1: 1\\nCase #2: 2\\n\""
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '''Case #1: 1\nCase #2: 2'''"
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n3\\n10000 0 0\\n0 10000 0\\n0 0 10000\\n3\\n5000 0 0\\n0 2000 0\\n0 0 4000\\n\") == \"Case #1: 1\\nCase #2: 2\""
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"Case #1: 1\\nCase #2: 2\"\n"
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n3\\n10000 0 0\\n0 10000 0\\n0 0 10000\\n3\\n5000 0 0\\n0 2000 0\\n0 0 4000\") == \"Case #1: 1\\nCase #2: 2\"\n"
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Test case {i+1} failed. Expected output: {output}, but got: {solution(input())}\" for i, (input, output) in enumerate(zip(input_data, output_data))"
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n5000 0 0\\n0 2000 0\\n0 0 4000') == 'Case #1: 1\\nCase #2: 2'"
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == output\n"
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == ['6 6 6 1']"
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 H 2 O 1\\n1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\") == \"6 6 6 1\"\n"
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('+1 2 H 2 O 1' == '6 6 6 1') == True, \"Test Case 1 failed.\"\nassert solution('+1 2 C 1 O 2' == '6 6 6 1') == True, \"Test Case 2 failed.\"\nassert solution('-1 1 O 2' == '6 6 6 1') == True, \"Test Case 3 failed.\"\nassert solution('-1 3 C 6 H 12 O 6' == '6 6 6 1') == True, \"Test Case 4 failed.\"\nassert solution('0 0' == '6 6 6 1') == True, \"Test Case 5 failed.\""
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0''') == ['6 6 6 1']"
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('+1 2 H 2 O 1') == '6 6 6 1', 'Your solution should be `6 6 6 1`'\nassert solution('+1 2 C 1 O 2') == '11 10 9 8', 'Your solution should be `11 10 9 8`'\nassert solution('-1 1 O 2') == '3 4 5', 'Your solution should be `3 4 5`'\nassert solution('-1 3 C 6 H 12 O 6') == '25 24 23 22', 'Your solution should be `25 24 23 22`'\nassert solution('0 0') == '6 6 6 1', 'Your solution should be `6 6 6 1`'"
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 0\") == \"6 6 6 1\""
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\") == \"6 6 6 1\", \"Your solution is incorrect.\"\nassert solution(\"+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 1\") == \"6 6 6 1\", \"Your solution is incorrect.\"\nassert solution(\"+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 2\") == \"6 6 6 1\", \"Your solution is incorrect.\"\nassert solution(\"+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 3\") == \"6 6 6 1\", \"Your solution is incorrect.\"\nassert solution(\"+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 4\") == \"6 6 6 1\", \"Your solution is incorrect.\"\nassert solution(\"+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 5\") == \"6 6 6 1\", \"Your solution is incorrect.\"\nassert solution(\"+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 6\") == \"6 6 6 1\", \"Your solution is incorrect.\"\nassert solution(\"+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 7\") == \"6 6 6 1\", \"Your solution is incorrect.\"\nassert solution(\"+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 8\") == \"6 6 6 1\", \"Your solution is incorrect.\"\nassert solution(\"+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 9\") == \"6 6 6 1\", \"Your solution is incorrect.\"\nassert solution(\"+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 10\") == \"6 6 6 1\", \"Your solution is incorrect.\"\nassert solution(\"+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 11\") == \"6 6 6 1\", \"Your solution is incorrect.\"\nassert solution(\"+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 12\") == \"6 6 6 1\", \"Your solution is incorrect.\"\nassert solution(\"+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 13\") == \"6 6 6 1\", \"Your solution is incorrect.\"\nassert solution(\"+1 2 H 2 O 1\\n"
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0\n''') == '''\n6 6 6 1\n'''\n\nassert solution('''\n+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n''') == '''\n6 6 6 1\n'''\n\nassert solution('''\n+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0\n''') == '''\n6 6 6 1\n'''\n\nassert solution('''\n+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0\n''') == '''\n6 6 6 1\n'''\n\nassert solution('''\n+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0\n''') == '''\n6 6 6 1\n'''\n\nassert solution('''\n+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0\n''') == '''\n6 6 6 1\n'''\n\nassert solution('''\n+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0\n''') == '''\n6 6 6 1\n'''\n\nassert solution('''\n+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0\n''') == '''\n6 6 6 1\n'''\n\nassert solution('''\n+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0\n''') == '''\n6 6 6 1\n'''\n\nassert solution('''\n+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0\n''') == '''\n6 6 6 1\n'''\n\nassert solution('''\n+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0\n''') == '''\n6 6 6 1\n'''\n\nassert solution('''\n+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0\n''') == '''\n6 6 6 1\n'''\n\nassert solution('''\n+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0\n''') == '''\n6 6 6 1\n'''\n\nassert solution('''\n+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0\n''') == '''\n6 6 6 1\n'''\n\nassert solution('''\n+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0\n''') == '''\n6 6 6 "
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 0\\n+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\") == [\"6\", \"6\", \"6\", \"1\"], \"Test case 1 failed\"\nassert solution(\"0 0\\n+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\") == [\"6\", \"6\", \"6\", \"1\"], \"Test case 2 failed\"\nassert solution(\"0 0\\n+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n\") == [\"6\", \"6\", \"6\", \"1\"], \"Test case 3 failed\"\nassert solution(\"0 0\\n+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n\") == [\"6\", \"6\", \"6\", \"1\"], \"Test case 4 failed\"\nassert solution(\"0 0\\n+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 1"
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(example_input) == expected_output, f\"Input: {example_input}, Output: {solution(example_input)}\""
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"20.83\\n\""
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"The input consists of a single test case.\\n2\\n30 50\\n20 0\\n100 0\\n100 40\\n20 40\\n\") == \"20.83\\n\""
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n30 50\\n20 0\\n100 0\\n100 40\\n20 40') == '20.83'"
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"20.83\"\nprint(\"All test cases passed successfully!\")"
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"The input consists of a single test case.\\nThe first line contains an integer N(4 <= N <= 100).\\nThe next line contains two integers D and L, where 1 <= D <= 1000 is the depth of the aquarium tank and 0 <= L <= 2000 is the number of litres of water to pour into the tank.\\nThe next N lines each contain two integers, giving the (x,y) coordinates of the vertices of the convex polygon in counterclockwise order. The absolute values of x and y are at most 1000.\\nThe tank has a positive capacity, and you never pour more water than the tank can hold.\\n\\n-----Input-----\\nThe input consists of a single test case.\\nThe first line contains an integer N(4 <= N <= 100).\\nThe next line contains two integers D and L, where 1 <= D <= 1000 is the depth of the aquarium tank and 0 <= L <= 2000 is the number of litres of water to pour into the tank.\\nThe next N lines each contain two integers, giving the (x,y) coordinates of the vertices of the convex polygon in counterclockwise order. The absolute values of x and y are at most 1000.\\nThe tank has a positive capacity, and you never pour more water than the tank can hold.\\n\\n-----Output-----\\nPrint the height of the water (in centimetres) in the aquarium tank on a line to 2 decimal places.\\n\\n-----Examples-----\\nSample Input:\\n4\\n30 50\\n20 0\\n100 0\\n100 40\\n20 40\\n\\nSample Output:\\n20.83\\n\") == \"20.83\""
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n30 50\\n20 0\\n100 0\\n100 40\\n20 40\") == \"20.83\""
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n30 50\\n20 0\\n100 0\\n100 40\\n20 40\\n\") == \"20.83\""
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n30 50\\n20 0\\n100 0\\n100 40\\n20 40\") == \"20.83\\n\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n30 50\\n20 0\\n100 0\\n100 40\\n20 40') == '20.83\\n'\nassert solution('6\\n30 50\\n20 0\\n100 0\\n100 40\\n20 40\\n100 60') == '130.29\\n'"
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n30 50\\n20 0\\n100 0\\n100 40\\n20 40') == '20.83', \"The given solution is incorrect.\""
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 3\\n1 2 5\\n7 6 4\\n9 8 3') == '49'"
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"49\\n\""
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, \"The output is not correct\""
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n1 2 5\\n7 6 4\\n9 8 3\") == 49\nprint(\"All tests passed\")"
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    input_str=\"3 3\\n1 2 5\\n7 6 4\\n9 8 3\"\n) == \"49\""
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"49\""
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n1 2 5\\n7 6 4\\n9 8 3\") == 49\nassert solution(\"4 4\\n1 2 3 4 5 6\") == 27"
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3, 3) == 49, \"Incorrect solution\"\nprint(\"Test passed\")"
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 3\\n1 2 5\\n7 6 4\\n9 8 3') == 49\nprint(\"All tests passed!\")"
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 3\\n1 2 5\\n7 6 4\\n9 8 3') == '49'\n"
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 15\\n#.........####\\n1\\nCROSSWORD\") == \"##CROSSWORD####\""
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 15\\n##.........####\\n1\\nCROSSWORD') == '\\n##CROSSWORD####\\n'"
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 15\\n##.........####\\n1\\nCROSSWORD\\n') == '\\nCROSSWORD####\\n'\n\nassert solution('1 15\\n##.........####\\n1\\nCROSSWORD\\n2\\n') == '\\nCROSSWORD####\\n'\n\nassert solution('1 15\\n##.........####\\n1\\nCROSSWORD\\n3\\n') == '\\nCROSSWORD####\\n'\n\nassert solution('1 15\\n##.........####\\n1\\nCROSSWORD\\n4\\n') == '\\nCROSSWORD####\\n'\n\nassert solution('1 15\\n##.........####\\n1\\nCROSSWORD\\n5\\n') == '\\nCROSSWORD####\\n'\n\nassert solution('1 15\\n##.........####\\n1\\nCROSSWORD\\n6\\n') == '\\nCROSSWORD####\\n'\n\nassert solution('1 15\\n##.........####\\n1\\nCROSSWORD\\n7\\n') == '\\nCROSSWORD####\\n'\n\nassert solution('1 15\\n##.........####\\n1\\nCROSSWORD\\n8\\n') == '\\nCROSSWORD####\\n'\n\nassert solution('1 15\\n##.........####\\n1\\nCROSSWORD\\n9\\n') == '\\nCROSSWORD####\\n'\n\nassert solution('1 15\\n##.........####\\n1\\nCROSSWORD\\n10\\n') == '\\nCROSSWORD####\\n'\n\nassert solution('1 15\\n##.........####\\n1\\nCROSSWORD\\n11\\n') == '\\nCROSSWORD####\\n'\n\nassert solution('1 15\\n##.........####\\n1\\nCROSSWORD\\n12\\n') == '\\nCROSSWORD####\\n'\n\nassert solution('1 15\\n##.........####\\n1\\nCROSSWORD\\n13\\n') == '\\nCROSSWORD####\\n'\n\nassert solution('1 15\\n##.........####\\n1\\nCROSSWORD\\n14\\n') == '\\nCROSSWORD####\\n'\n\nassert solution('1 15\\n##.........####\\n1\\nCROSSWORD\\n15\\n') == '\\nCROSSWORD####\\n'"
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 15\\n##.........####\\n1\\nCROSSWORD\") == \"##CROSSWORD####\\n\"\nassert solution(\"1 15\\n##.........####\\n1\\n##.........##\\n#.....##\\n#.....##\\n\") == \"##CROSSWORD####\\n\""
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 15\\n##.........####\\n1\\nCROSSWORD\") == \"##CROSSWORD####\""
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"##CROSSWORD####\", \"Expected output '##CROSSWORD####', got: {}\".format(solution(input()))"
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"def solution(stdin: str) -> str:\\npass\\n\""
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 15\\n##.........####\\n1\\nCROSSWORD\") == \"##CROSSWORD####\"\n"
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 15\\n##.........####\\n1\\nCROSSWORD\") == \"##CROSSWORD####\"\n\nfor R in range(1, 21):\n    for C in range(1, R+1):\n        assert \"#\" in input().upper()\n        assert \".\" in input().upper()\n        assert 1 <= R <= 20 and 1 <= C <= R\n        assert 1 <= len(input().upper()) <= 2\n        assert any(c in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" for c in input().upper())\n\nfor N in range(1, 201):\n    word = input().upper()\n    for i in range(len(word)):\n        if word[i] not in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\":\n            word = word[:i] + word[i+1:]\n            break\n    if word == input().upper():\n        print(word)\n        break"
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 15\\n##.........####\\n1\\nCROSSWORD\\n\") == \"##CROSSWORD####\"\n"
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1\\n2 7 6\\n9 5 1\\n4 3 8\") == \"31\"\nassert solution(\"3 2\\n1 9 8\") == \"23\"\nassert solution(\"3 3\\n7 4 6\\n8 3 2\") == \"20\"\nassert solution(\"2 3\\n2 3 4\") == \"2\"\nassert solution(\"3 4\\n1 1 1\") == \"1\""
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\\n2 7 6\\n9 5 1\\n4 3 8\\n\") == \"31\""
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == sample_output, f\"Test Case {sample_case} failed.\""
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1\\n2 7 6\\n9 5 1\\n4 3 8\\n\") == \"31\"\n"
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"3 1\n2 7 6\n9 5 1\n4 3 8\"\"\"\n) == \"31\"\n\nassert solution(\n    \"\"\"3 3\n1 1 1\n1 1 1\n1 1 1\"\"\"\n) == \"12\"\n\nassert solution(\n    \"\"\"3 2\n1 2 3\n2 3 4\n1 1 2\"\"\"\n) == \"25\"\n\nassert solution(\n    \"\"\"2 2\n1 2 1\n2 3 2\"\"\"\n) == \"21\"\n\nassert solution(\n    \"\"\"5 4\n1 1 2 1 1\n2 2 3 1 3\n1 3 4 5 2\n3 4 1 2 5\"\"\"\n) == \"220\""
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1\\n2 7 6\\n9 5 1\\n4 3 8\") == \"31\""
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"31\\n\""
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1\\n2 7 6\\n9 5 1\\n4 3 8\\n\") == \"31\\n\""
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1\\n2 7 6\\n9 5 1\\n4 3 8\") == \"31\\n\""
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 1\\n2 7 6\\n9 5 1\\n4 3 8') == '31'"
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2\\n\"\n"
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\\nBBW\") == \"2\\n\"\nassert solution(\"3 2\\nBBWW\") == \"2\\n\"\nassert solution(\"3 3\\nWBBW\") == \"1\\n\"\nassert solution(\"3 4\\nBBWWW\") == \"3\\n\"\nassert solution(\"5 1\\nBBW\") == \"6\\n\""
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Test case {i+1} failed: expected '{output()}', got '{solution(input())}'\" for i, (input_, output_) in enumerate(zip(input_data, expected_output)):\n    assert solution(input_) == output_, f\"Test case {i+1} failed: expected '{output_}', got '{solution(input_)}'\""
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1\\nBBW\\n\") == \"2\\n\"\nassert solution(\"5 2\\nBWW\\n\") == \"5\\n\""
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1\\nBBW\") == \"2\\n\"\nassert solution(\"4 2\\nWWBBWB\\nWWWBBWW\") == \"2\\n3\\n\"\nassert solution(\"5 3\\nBWWWWW\\nBWWWBBW\\nBWWBBBW\\nBWWBBBW\\nBWWBBBW\\nWBBBBB\\nWBBBWW\\nWBBWBB\\nWBBBWBW\\nWBBBBB\\nWBBBBB\\n\") == \"5\\n\""
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2\\n\", \"Output should be 2, not {}.\".format(solution(stdin))"
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == expected, f\"Expected {expected}, got {solution}\""
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '2', 'Expected \"2\", but got \"{}\"'.format(solution(input()))"
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1\\nBBW\") == \"2\\n\"\n"
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1\\nBBW\") == \"2\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1\\n3 2 1\\n1 2 3\") == \"0.556\\n\"\n"
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    3 1\n    3 2 1\n    1 2 3\n    \"\"\"\n) == \"0.556\""
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\\n3 2 1\\n1 2 3\") == 0.556\nprint(\"All test cases pass\")"
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"0.556\", \"The solution should return '0.556'.\""
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1\\n3 2 1\\n1 2 3\") == \"0.556\""
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"0.556\"\n"
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"0.556\"\n"
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"0.556\"\n"
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 1\\n3 2 1\\n1 2 3') == 0.556\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1\\n3 2 1\\n1 2 3\") == \"0.556\\n\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 4 3 2\") == \"3\\n\""
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 4 3 2\") == 3"
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 4 3 2\") == \"3\""
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(100) == \"3\\n\""
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 4 3 2\") == \"3\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 4 3 2\") == \"3\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 4 3 2\") == \"3\"\nassert solution(\"1000 0 0 0\") == \"1000\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4 5 6 7 8\") == \"3600\""
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 4 3 2\") == \"3\""
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 4 3 2') == '3'"
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\") == \"13\\n\"\nassert solution(\"1 3 6\\n2 5 8\\n3 3 5\\n5 4 6\") == \"6\\n\"\nassert solution(\"1 3 6\\n2 5 8\\n3 3 5\\n5 3 7\") == \"16\\n\"\nassert solution(\"1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\") == \"13\\n\"\nassert solution(\"1 3 6\\n2 5 8\\n3 3 5\\n5 4 6\") == \"6\\n\"\nassert solution(\"1 3 6\\n2 5 8\\n3 3 5\\n5 3 7\") == \"16\\n\"\nassert solution(\"1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\") == \"13\\n\"\nassert solution(\"1 3 6\\n2 5 8\\n3 3 5\\n5 4 6\") == \"6\\n\"\nassert solution(\"1 3 6\\n2 5 8\\n3 3 5\\n5 3 7\") == \"16\\n\"\nassert solution(\"1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\") == \"13\\n\"\nassert solution(\"1 3 6\\n2 5 8\\n3 3 5\\n5 4 6\") == \"6\\n\"\nassert solution(\"1 3 6\\n2 5 8\\n3 3 5\\n5 3 7\") == \"16\\n\"\nassert solution(\"1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\") == \"13\\n\"\nassert solution(\"1 3 6\\n2 5 8\\n3 3 5\\n5 4 6\") == \"6\\n\"\nassert solution(\"1 3 6\\n2 5 8\\n3 3 5\\n5 3 7\") == \"16\\n\"\nassert solution(\"1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\") == \"13\\n\"\nassert solution(\"1 3 6\\n2 5 8\\n3 3 5\\n5 4 6\") == \"6\\n\"\nassert solution(\"1 3 6\\n2 5 8\\n3 3 5\\n5 3 7\") == \"16\\n\"\nassert solution(\"1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\") == \"13\\n\"\nassert solution(\"1 3 6\\n2 5 8\\n3 3 5\\n5 4 6\") == \"6\\n\"\nassert solution(\"1 3 6\\n2 5 8\\n3 3 5\\n5 3 7\") == \"16\\n\"\nassert solution(\"1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\") == \"13\\n\"\nassert solution(\"1 3 6\\n2 5 8\\n3 3 5\\n5 4 6\") == \"6\\n\"\nassert solution(\"1 3 6\\n2 5 8\\n3 3 5\\n5 3 7\") == \"16\\n\"\nassert solution(\"1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\") == \"13\\n\"\nassert solution(\"1 3 6\\n2 5 8\\n3 3 5\\n5 4 6\") == \"6\\n\"\nassert solution(\"1 3 6\\n2 5 8\\n3 3 5\\n5 3 7\") == \"16\\n\"\nassert solution(\"1 3 6\\"
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"13\""
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 3 6\\n2 5 8\\n3 3 5\\n5 3 6') == '13'\nassert solution('1 2 5\\n2 4 3\\n3 1 4\\n4 3 6\\n5 5 8\\n6 2 9') == '15'"
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\\n') == '13\\n'\nassert solution('5\\n5 4 1\\n2 3 5\\n1 4 5\\n') == '5\\n'\nassert solution('3\\n1 2 3\\n5 6 7\\n') == '12\\n'\nassert solution('1\\n1 2 3 4 5\\n6 7 8 9 10\\n') == '11\\n'\nassert solution('2\\n2 4 8\\n3 6 9\\n4 5 7\\n') == '6\\n'"
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '13\\n'\n\nfrom typing import List"
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"13\\n\"\n"
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"13\\n\"\n"
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"13\"\n"
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"13\""
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\") == \"13\"\nassert solution(\"1 3 6\\n2 5 8\\n3 3 5\\n5 4 6\") == \"12\"\nassert solution(\"1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\") == \"13\"\nassert solution(\"1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\") == \"13\"\nassert solution(\"1 3 6\\n2 5 8\\n3 3 5\\n5 4 6\") == \"12\""
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\\n\") == 3.141593\nassert solution(\"1.000000 2.000000\\n2\\n2.000000 2.000000\\n\") == 1.0\nassert solution(\"1.000000 2.000000\\n2\\n2.000000 2.000000\\n\") == 1.0\nassert solution(\"1.000000 2.000000\\n2\\n2.000000 2.000000\\n\") == 1.0\nassert solution(\"1.000000 2.000000\\n2\\n2.000000 2.000000\\n\") == 1.0\nassert solution(\"1.000000 2.000000\\n2\\n2.000000 2.000000\\n\") == 1.0"
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\") == 3.141593, \"Wrong output\""
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\") == \"3.141593\"\nassert solution(\"10.000000 20.123456\\n2\") == \"Error: Too many hiding spots.\"\nassert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.12"
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}\\nGot output: {solution(input())}\""
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\") == \"3.141593\"\n"
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('10.000000 20.123456\\n1\\n13.141593 20.123456') == '3.141593'\nassert solution('10.000000 20.123456\\n2\\n5.0 12.345678 20.123456\\n3\\n0.5 7.890123 20.123456\\n4\\n1.5 9.876543 20.123456\\n5\\n4.0 12.345678 20.123456') == '2.0'\nassert solution('10.000000 20.123456\\n2\\n5.0 12.345678 20.123456\\n3\\n0.5 7.890123 20.123456\\n4\\n1.5 9.876543 20.123456\\n5\\n4.0 12.345678 20.123456\\n6\\n1.5 9.876543 20.123456\\n7\\n4.0 12.345678 20.123456\\n8\\n0.5 7.890123 20.123456\\n9\\n5.0 12.345678 20.123456\\n10\\n3.141593 20.123456\\n11\\n5.0 12.345678 20.123456\\n12\\n1.5 9.876543 20.123456') == '0.0'\nassert solution('10.000000 20.123456\\n2\\n5.0 12.345678 20.123456\\n3\\n0.5 7.890123 20.123456\\n4\\n1.5 9.876543 20.123456\\n5\\n4.0 12.345678 20.123456\\n6\\n1.5 9.876543 20.123456\\n7\\n4.0 12.345678 20.123456\\n8\\n0.5 7.890123 20.123456\\n9\\n5.0 12.345678 20.123456\\n10\\n3.141593 20.123456\\n11\\n5.0 12.345678 20.123456\\n12\\n1.5 9.876543 20.123456\\n13\\n4.0 12.345678 20.123456\\n14\\n1.5 9.876543 20.123456\\n15\\n5.0 12.345678 20.123456\\n16\\n0.5 7.890123 20.123456\\n17\\n1.5 9.876543 20.123456\\n18\\n4.0 12.345678 20.123456\\n"
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('10.000000 20.123456\\n1\\n13.141593 20.123456\\n') == '3.141593\\n'\nassert solution('10.000000 20.123456\\n2\\n13.141593 20.123456\\n3\\n10.000000 20.123456\\n4\\n13.141593 20.123456\\n5\\n10.000000 20.123456\\n') == '3.141593\\n'\nassert solution('10.000000 20.123456\\n3\\n10.000000 20.123456\\n4\\n10.000000 20.123456\\n5\\n10.000000 20.123456\\n') == '3.141593\\n'\nassert solution('10.000000 20.123456\\n6\\n13.141593 20.123456\\n') == '3.141593\\n'\nassert solution('10.000000 20.123456\\n7\\n13.141593 20.123456\\n8\\n13.141593 20.123456\\n9\\n13.141593 20.123456\\n') == '3.141593\\n'\nassert solution('10.000000 20.123456\\n10\\n13.141593 20.123456\\n') == '3.141593\\n'"
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\\n\") == \"3.141593\""
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n10.000000 20.123456\n1\n13.141593 20.123456\n\"\"\"\n) == 3.141593"
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\\n\") == \"3.141593\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2.13333333333333\\n\", \"Incorrect output\""
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Test failed: solution(input())!= output\"\n"
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '2.13333333333333'\n"
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n4 4\\n2\") == \"2.13333333333333\""
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n    3\n    4 4\n    2\n    \"\"\"), \"Incorrect output\"\n\nprint(\"Correct output\")"
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n2\\nSample Input:\\n3\\n4 4\\n2\\nSample Output:\\n2.13333333333333\\ndef solution(stdin: str) -> str:\\npass\\n\") == \"2.13333333333333\""
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2.13333333333333\\nimpossible\\n\", \"The solution is incorrect.\"\n"
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_data) == output_data, f\"Test failed. Output: {output_data}, Expected: {output_data}\""
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n4 4\\n2\") == \"2.13333333333333\\nimpossible\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n4 4\\n2\\n') == '2.13333333333333\\n'\nassert solution('2\\n1\\n1\\n') == 'impossible\\n'\nassert solution('3\\n4 4\\n2\\n1\\n5\\n3\\n2\\n5\\n') == '2.66666666666667\\n'"
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(7) == \"18\"\n"
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7\") == \"18\""
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Test failed\""
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7\") == \"18\""
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(7) == \"18\\n\"\n"
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(10) == \"18\""
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, got: {solution(input())}\""
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(7) == \"18\""
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(10) == \"18\"\nassert solution(100) == \"477\"\nassert solution(1000) == \"3865\"\nassert solution(10000) == \"126332\"\nassert solution(100000) == \"213330697\"\nassert solution(1000000) == \"456753204321\"\n"
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(7) == \"18\""
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\\n\") == \"3\"\nassert solution(\"1\\n1000 M male\\n1000 F female\\n\") == \"1\"\nassert solution(\"1\\n1000 M male\\n1000 F female\\n2\\n1001 M male\\n1001 F female\\n\") == \"2\"\nassert solution(\"1\\n1000 M male\\n1000 F female\\n3\\n1002 M male\\n1002 F female\\n\") == \"3\""
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer') == '3'\n"
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r').read()) == '3\\n'"
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer') == '3'"
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"3\""
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\") == 3\nprint(\"All tests passed!\")"
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\\n\") == \"3\"\nprint(\"All tests passed successfully!\")"
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\\n\") == \"3\"\nprint(\"All Tests Passed\")"
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"3\""
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\") == \"3\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"a 0\\na 1\\nb 2\\nc 2 3\\nb 4\") == \"2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\") == [\"2\", \"1\", \"2\", \"def\"]"
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\\n') == '2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n    pass'\n\nassert solution('3\\na 1\\na 2\\na 3\\na 4\\n') == '3\\n2\\n2\\ndef solution(stdin: str) -> str:\\n    pass'\n\nassert solution('5\\na 0\\nb 1\\nb 2\\nc 0 1\\nc 2 3\\nd 4 5\\ne 6 7\\nf 8 9\\ng 10 11\\nh 12 13\\ni 14 15\\nj 16 17\\nk 18 19\\nl 20 21\\nm 22 23\\nn 24 25\\no 26 27\\np 28 29\\nq 30 31\\nr 32 33\\ns 34 35\\nt 36 37\\nu 38 39\\nv 40 41\\nw 42 43\\nx 44 45\\ny 46 47\\nz 48 49\\n') == '2\\n1\\n2\\n3\\n2\\n2\\n4\\n'"
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_file) == expected_output, f\"Test failed: {solution(input_file)}!= {expected_output}\"\nfor i, step in enumerate(input_file):\n    line = step.strip()\n    if line.startswith(\"a\"):\n        assert line.split()[0].isdigit(), f\"Test failed: {line}\"\n        assert int(line.split()[1]) <= i, f\"Test failed: {line}\"\n        continue\n    elif line.startswith(\"b\"):\n        assert len(line.split()[1:]) == 2, f\"Test failed: {line}\"\n        assert int(line.split()[1]) <= i, f\"Test failed: {line}\"\n        continue\n    elif line.startswith(\"c\"):\n        assert len(line.split()[1:]) == 3, f\"Test failed: {line}\"\n        assert int(line.split()[1]) <= i, f\"Test failed: {line}\"\n        continue\n    else:\n        assert False, f\"Test failed: {line}\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Solution should return '{expected_output}', but returned '{solution(input())}'\""
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\") == \"2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(5) == \"2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"The solution {solution(input())} does not match the expected output {output}\""
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\\n\") == \"2\\n1\\n2\\ndef solution(stdin: str) -> str:\\npass\\n\"\n"
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == \"1\\n\"\nassert solution(2) == \"2\\n1\\n\"\nassert solution(3) == \"2\\n1\\n2\\n\"\nassert solution(4) == \"2\\n1\\n2\\n\"\nassert solution(5) == \"2\\n1\\n2\\n\""
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 1\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0\\n\") == \"5\\ndef solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '5'\n"
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 1\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0\") == \"5\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"5\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"5\\n\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    6 1\n    78 61 88 71\n    80 80 90 90\n    70 90 80 100\n    90 70 0 0\n    80 67 0 0\n    90 63 0 0\n    \"\"\"\n) == \"5\""
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '5\\n'\n"
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"5\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 1\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0\") == \"5\""
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"5\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n4 5\n1 2\n1 3\n1 4\n2 3\n2 4\n''') == '4'"
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"4\\n\"\n"
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\") == 4\nassert solution(\"2 4\\n3 2\\n1 1\\n3 3\") == 1\nassert solution(\"1 1\\n1 2\\n1 3\") == 3\nassert solution(\"4 3\\n1 2\\n2 3\\n1 4\\n3 1\\n2 4\\n3 2\\n4 1\\n4 3\\n4 4\") == 6\n\nfrom functools import reduce"
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(r'4 5\n1 2\n1 3\n1 4\n2 3\n2 4') == 4, \"Expected 4, got {}\".format(solution(r'4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4'))\n\nassert solution(r'5 6\n1 2\n1 3\n1 4\n1 5\n2 3\n2 4\n2 5\n3 4\n3 5\n4 5') == 10, \"Expected 10, got {}\".format(solution(r'5 6\\n1 2\\n1 3\\n1 4\\n1 5\\n2 3\\n2 4\\n2 5\\n3 4\\n3 5\\n4 5'))\n\nassert solution(r'6 7\n1 2\n1 3\n1 4\n1 5\n1 6\n2 3\n2 4\n2 5\n2 6\n3 4\n3 5\n3 6\n4 5\n4 6\n5 6') == 17, \"Expected 17, got {}\".format(solution(r'6 7\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n2 3\\n2 4\\n2 5\\n2 6\\n3 4\\n3 5\\n3 6\\n4 5\\n4 6\\n5 6'))\n\nassert solution(r'7 8\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n3 6\n3 7\n4 5\n4 6\n4 7\n5 6\n5 7\n6 7') == 24, \"Expected 24, got {}\".format(solution(r'7 8\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n2 3\\n2 4\\n2 5\\n2 6\\n2 7\\n3 4\\n3 5\\n3 6\\n3 7\\n4 5\\n4 6\\n4 7\\n5 6\\n5 7\\n6 7'))"
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n\") == \"4\\n\"\n"
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"4\"\n\nfrom typing import List"
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\") == 4\nassert solution(\"4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\") == 6\nassert solution(\"4 5\\n1 2\\n1 4\\n2 3\\n2 4\\n3 4\") == 1"
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\") == \"4\\n\"\nassert solution(\"5 6\\n1 2\\n1 3\\n2 3\\n3 4\") == \"2\\n\"\nassert solution(\"5 7\\n1 2\\n1 3\\n2 4\\n3 4\") == \"1\\n\"\nassert solution(\"5 8\\n1 2\\n1 3\\n2 3\\n3 4\\n4 5\") == \"0\\n\""
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n\") == \"4\""
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '2\\n3 4\\n2 4'\n"
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n4\n1 2\n2 3\n3 4\n\"\"\") == \"\"\"\n2\n3 4\n2 4\n\"\"\"\n\nassert solution(\"\"\"\n4\n1 2\n3 4\n4 2\n\"\"\") == \"\"\"\n3\n2 4\n2 3\n\"\"\"\n\nassert solution(\"\"\"\n4\n1 2\n2 3\n3 4\n5 3\n\"\"\") == \"\"\"\n2\n2 3\n3 4\n\"\"\"\n\nassert solution(\"\"\"\n4\n1 2\n2 3\n3 4\n2 1\n\"\"\") == \"\"\"\n3\n3 4\n3 1\n\"\"\"\n\nassert solution(\"\"\"\n4\n1 2\n2 3\n4 2\n3 1\n\"\"\") == \"\"\"\n2\n4 3\n3 2\n\"\"\"\n\nassert solution(\"\"\"\n4\n1 2\n2 3\n3 4\n1 3\n\"\"\") == \"\"\"\n4\n3 4\n2 3\n\"\"\"\n\nassert solution(\"\"\"\n4\n1 2\n2 3\n3 4\n1 4\n\"\"\") == \"\"\"\n4\n3 4\n3 2\n\"\"\""
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n1 2\\n2 3\\n3 4\\n') == '2\\n3 4\\n2 4'\nassert solution('5\\n1 2\\n2 3\\n3 4\\n5 6\\n2 3\\n') == '1\\n3 4\\n2 4\\n1 6'\nassert solution('10\\n1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n2 6\\n2 7\\n2 8\\n2 9\\n3 1\\n3 2\\n3 3\\n3 4\\n3 5\\n3 6\\n3 7\\n3 8\\n3 9\\n4 1\\n4 2\\n4 3\\n4 4\\n4 5\\n4 6\\n4 7\\n4 8\\n4 9\\n5 1\\n5 2\\n5 3\\n5 4\\n5 5\\n5 6\\n5 7\\n5 8\\n5 9\\n6 1\\n6 2\\n6 3\\n6 4\\n6 5\\n6 6\\n6 7\\n6 8\\n6 9\\n7 1\\n7 2\\n7 3\\n7 4\\n7 5\\n7 6\\n7 7\\n7 8\\n7 9\\n8 1\\n8 2\\n8 3\\n8 4\\n8 5\\n8 6\\n8 7\\n8 8\\n8 9\\n9 1\\n9 2\\n9 3\\n9 4\\n9 5\\n9 6\\n9 7\\n9 8\\n9 9\\n') == '1\\n3 4\\n2 4\\n1 6'"
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\\n3 4\\n2 4\""
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\\n3 4\\n2 4\""
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\\n\") == \"2\\n3 4\\n2 4\"\n"
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\\n3 4\"\nassert solution(\"5\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 1\\n1 7\\n7 8\\n8 1\") == \"2\\n3 4\"\nassert solution(\"5\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 1\\n1 7\\n7 8\\n8 1\\n1 6\") == \"2\\n3 4\""
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\\n3 4\\n2 4\""
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n4\n1 2\n2 3\n3 4\n\"\"\") == \"\"\"\n2\n3 4\n2 4\n\"\"\"\n\nassert solution(\"\"\"\n4\n1 2\n2 3\n3 4\n5\n1 5\n2 4\n\"\"\") == \"\"\"\n2\n1 5\n3 4\n2 4\n\"\"\"\n\nassert solution(\"\"\"\n4\n1 2\n2 3\n3 4\n\"\"\") == \"\"\"\n2\n3 4\n2 4\n\"\"\"\n\nassert solution(\"\"\"\n5\n1 5\n2 4\n\"\"\") == \"\"\"\n1\n2 4\n\"\"\""
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\\n3 4\\n2 4\"\nassert solution(\"6\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 1\") == \"3\\n5 6\\n1 6\"\nassert solution(\"2\\n1 2\\n2 1\") == \"1\""
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n1 3\\n2 1\\n3 5\\n7 2\") == 5\nassert solution(\"2 2\\n2 1\\n3 5\\n7 2\\n1 3\\n2 1\\n3 5\") == 5\nassert solution(\"2 2\\n2 1\\n3 5\\n7 2\\n1 3\\n2 1\\n3 5\\n7 2\") == 0\nprint(\"All test cases pass\")"
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\n1 3\\n2 1\\n3 5\\n7 2\") == 5"
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\n1 3\\n2 1\\n3 5\\n7 2\") == 5"
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == expected_output, f\"The function should return {expected_output}, but it returns {solution} instead.\""
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '5', \"The output of solution function should be 5, but it's {}\".format(solution(stdin))"
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"5\\n\""
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n1 3\\n2 1\\n3 5\\n7 2\") == \"5\"\nassert solution(\"3 2\\n5 1\\n1 4\\n2 3\\n4 6\") == \"6\"\nassert solution(\"1 1\\n1 1\\n1 1\\n1 1\\n1 1\") == \"1\"\nassert solution(\"2 2\\n1 3\\n2 1\\n3 5\\n7 2\\n10 3\") == \"0\""
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"5\\n\""
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\n1 3\\n2 1\\n3 5\\n7 2\\n\") == 5"
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 2\\n1 3\\n2 1\\n3 5\\n7 2') == 5\nprint('Test passed')"
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"test_input.txt\", \"r\")) == \"2\"\nassert solution(open(\"test_input.txt\", \"r\").read()) == \"2\""
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == 2"
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n\") == 2\n"
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input) == output, f\"Input {input} does not match the expected output {output}\"\nfor _ in range(test_cases):\n    stdin = input()\n    input = list(map(int, stdin.split()))\n    output = solution(stdin)\n    print(output)"
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 2, \"Test failed\"\n"
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2\nprint(\"All tests passed!\")"
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2, \"The correct answer is 2.\""
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}, Received: {solution(stdin)}\""
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 2\n"
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n    3 5 3\n    1 1\n    2 2\n    1 3\n    0 0\n    0 3\n    1 4\n    3 3\n    3 0\n    ''') == '2'"
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 3\\n3 C\\n2 C\\n1 C') == 'GHOST'\nassert solution('5 4\\n5 C\\n4 W\\n3 C') == 'SAFE'\nassert solution('1 1\\n0 W\\n1 W\\n0 W') == 'SAFE'\nassert solution('4 4\\n2 C\\n0 W\\n3 C') == 'SAFE'"
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n3 C\\n2 C\\n1 C\") == \"GHOST\"\nassert solution(\"4 3\\n3 W\\n2 W\\n1 W\") == \"SAFE\""
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(4, 3) == \"GHOST\"\nassert solution(2, 3) == \"SAFE\""
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3\\n3 C\\n2 C\\n1 C\\n\") == \"GHOST\"\nassert solution(\"5 3\\n4 W\\n2 C\\n1 C\\n\") == \"SAFE\"\nassert solution(\"4 3\\n3 C\\n2 W\\n1 C\\n\") == \"SAFE\"\nassert solution(\"4 3\\n3 W\\n2 C\\n1 C\\n\") == \"GHOST\""
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n3 C\\n2 C\\n1 C\") == \"GHOST\"\nassert solution(\"5 3\\n3 C\\n2 C\\n1 C\") == \"SAFE\"\nassert solution(\"3 2\\nW\\nW\\nW\") == \"GHOST\"\nassert solution(\"3 2\\nW\\nC\\nW\") == \"SAFE\"\nassert solution(\"5 3\\n3 W\\n2 C\\n1 C\") == \"SAFE\""
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"GHOST\"\nassert solution(input()) == \"SAFE\""
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(4, 3) == \"GHOST\"\nassert solution(4, 2) == \"SAFE\"\nassert solution(4, 1) == \"SAFE\"\nassert solution(100000000, 1000) == \"SAFE\""
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n3 C\\n2 C\\n1 C\") == \"GHOST\"\nassert solution(\"4 5\\n3 C\\n2 C\\n1 W\") == \"SAFE\""
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"\n"
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n3 C\\n2 C\\n1 C\\n\") == \"GHOST\"\nassert solution(\"5 3\\n3 C\\n2 C\\n1 C\\n\") == \"SAFE\"\nassert solution(\"6 3\\n3 C\\n2 C\\n1 C\\n\") == \"SAFE\"\nassert solution(\"7 3\\n3 C\\n2 C\\n1 C\\n\") == \"SAFE\"\nassert solution(\"8 3\\n3 C\\n2 C\\n1 C\\n\") == \"SAFE\"\nassert solution(\"9 3\\n3 C\\n2 C\\n1 C\\n\") == \"SAFE\"\n"
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"2 3\\n0.00 2.00\") == \"2\"\nassert solution(stdin=\"2 3\\n0.10 2.10\") == \"2\"\nassert solution(stdin=\"2 3\\n0.20 2.20\") == \"2\"\nassert solution(stdin=\"2 3\\n0.30 2.30\") == \"2\"\nassert solution(stdin=\"2 3\\n0.40 2.40\") == \"2\"\nassert solution(stdin=\"2 3\\n0.50 2.50\") == \"2\"\nassert solution(stdin=\"2 3\\n0.60 2.60\") == \"2\"\nassert solution(stdin=\"2 3\\n0.70 2.70\") == \"2\"\nassert solution(stdin=\"2 3\\n0.80 2.80\") == \"2\"\nassert solution(stdin=\"2 3\\n0.90 2.90\") == \"2\"\nassert solution(stdin=\"2 3\\n1.00 3.00\") == \"2\"\nassert solution(stdin=\"2 3\\n1.10 3.10\") == \"2\"\nassert solution(stdin=\"2 3\\n1.20 3.20\") == \"2\"\nassert solution(stdin=\"2 3\\n1.30 3.30\") == \"2\"\nassert solution(stdin=\"2 3\\n1.40 3.40\") == \"2\"\nassert solution(stdin=\"2 3\\n1.50 3.50\") == \"2\"\nassert solution(stdin=\"2 3\\n1.60 3.60\") == \"2\"\nassert solution(stdin=\"2 3\\n1.70 3.70\") == \"2\"\nassert solution(stdin=\"2 3\\n1.80 3.80\") == \"2\"\nassert solution(stdin=\"2 3\\n1.90 3.90\") == \"2\"\nassert solution(stdin=\"2 3\\n2.00 4.00\") == \"2\"\nassert solution(stdin=\"2 3\\n2.10 4.10\") == \"2\"\nassert solution(stdin=\"2 3\\n2.20 4.20\") == \"2\"\nassert solution(stdin=\"2 3\\n2.30 4.30\") == \"2\"\nassert solution(stdin=\"2 3\\n2.40 4.40\") == \"2\"\nassert solution(stdin=\"2 3\\n2.50 4.50\") == \"2\"\nassert solution(stdin=\"2 3\\n2.60 4.60\") == \"2\"\nassert solution(stdin=\"2 3\\n2.70 4.70\") == \"2\"\nassert solution(stdin=\"2 3\\n2.80 4.80\") == \"2\"\nassert solution(stdin=\"2 3\\n2.90 4.90\") == \"2\"\nassert solution(stdin=\"2 3\\n3.00 5.00\") == \"2\"\nassert solution(stdin=\"2 3\\n3.10 5.10\") == \"2\"\nassert solution(stdin=\"2 3\\n3.20 5.20\") == \"2\"\nassert solution(stdin=\"2 3\\n3.30 5.30\") == \"2\"\nassert solution(stdin=\"2 3\\n3.40 5.40\") == \"2\"\nassert solution(stdin=\"2 3\\n3.50 5.50\") == \"2\"\nassert solution(stdin=\"2 3\\n3.60 5.60\") == \"2\"\nassert solution(stdin=\"2 3\\n3.70 5.70\") == \"2\"\nassert solution(stdin=\"2 3\\n3.80 5.80\") == \"2\"\nassert solution(stdin=\"2 3\\n3.90 5.90\") == \"2\"\nassert solution(stdin=\"2 3\\n4.00 6.00\") == \"2\"\n"
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n0.00 2.00\") == \"2\"\n"
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(None) == \"no fika\"\nassert solution(\"3\\n0.00\\n0.01\\n0.02\\n0.03\\n0.04\\n0.05\\n0.06\\n0.07\\n0.08\\n0.09\\n0.10\\n0.11\\n0.12\\n0.13\\n0.14\\n0.15\\n0.16\\n0.17\\n0.18\\n0.19\\n0.20\\n0.21\\n0.22\\n0.23\\n0.24\\n0.25\\n0.26\\n0.27\\n0.28\\n0.29\\n0.30\\n0.31\\n0.32\\n0.33\\n0.34\\n0.35\\n0.36\\n0.37\\n0.38\\n0.39\\n0.40\\n0.41\\n0.42\\n0.43\\n0.44\\n0.45\\n0.46\\n0.47\\n0.48\\n0.49\\n0.50\\n0.51\\n0.52\\n0.53\\n0.54\\n0.55\\n0.56\\n0.57\\n0.58\\n0.59\\n0.60\\n0.61\\n0.62\\n0.63\\n0.64\\n0.65\\n0.66\\n0.67\\n0.68\\n0.69\\n0.70\\n0.71\\n0.72\\n0.73\\n0.74\\n0.75\\n0.76\\n0.77\\n0.78\\n0.79\\n0.80\\n0.81\\n0.82\\n0.83\\n0.84\\n0.85\\n0.86\\n0.87\\n0.88\\n0.89\\n0.90\\n0.91\\n0.92\\n0.93\\n0.94\\n0.95\\n0.96\\n0.97\\n0.98\\n0.99\\n1.00\\n1.01\\n1.02\\n1.03\\n1.04\\n1.05\\n1.06\\n1.07\\n1.08\\n1.09\\n1.10\\n1.11\\n1.12\\n1.13\\n1.14\\n1.15\\n1.16\\n1.17\\n1.18\\n1.19\\n1.20\\n1.21\\n1.22\\n1.23\\n1.24\\n1.25\\n1.26\\n1.27\\n1.28\\n1.29\\n1.30\\n1.31\\n1.32\\n1.33\\n1.34\\n1.35\\n1.36\\n1.37\\n1.38\\n1.39\\n1.40\\n1.41\\n1.42\\n1.43\\n1.44\\n1.45\\n1.46\\n1.47\\n1.48\\n1.49\\n1.50\\n1.51\\n1.52\\n1.53\\n1.54\\n1.55\\n1.56\\n1.57\\n1.58\\n1.59\\n1.60\\n1.61\\n1.62\\n1.63\\n1.64\\n1.65\\n1.66\\n1.67\\n"
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\n0.00 2.00\") == 2"
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 3\\n0.00 2.00') == '2\\n'"
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2\"\n"
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 3\\n0.00 2.00') == '2'\nassert solution('3 2\\n0.00 2.00') == '2'\nassert solution('3 2\\n0.01 2.00') == 'no fika'\nassert solution('2 4\\n0.00 1.00\\n0.00 2.00\\n0.00 3.00') == '2'\nassert solution('2 4\\n0.00 1.00\\n0.00 2.00\\n0.00 3.00\\n0.00 1.50') == '2'\nassert solution('2 4\\n0.00 1.00\\n0.00 2.00\\n0.00 3.00\\n0.00 1.50\\n0.00 1.00') == '2'\nassert solution('2 4\\n0.00 1.00\\n0.00 2.00\\n0.00 3.00\\n0.00 1.50\\n0.00 1.00\\n0.00 1.00') == '2'\nassert solution('3 2\\n0.00 2.00\\n0.00 1.00\\n0.00 3.00\\n0.00 1.00\\n0.00 2.00') == '2'\nassert solution('3 2\\n0.00 2.00\\n0.00 1.00\\n0.00 3.00\\n0.00 1.00\\n0.00 2.00\\n0.00 1.00') == '2'\nassert solution('3 2\\n0.00 2.00\\n0.00 1.00\\n0.00 3.00\\n0.00 1.00\\n0.00 2.00\\n0.00 1.00\\n0.00 1.00') == '2'\nassert solution('3 2\\n0.00 2.00\\n0.00 1.00\\n0.00 3.00\\n0.00 1.00\\n0.00 2.00\\n0.00 1.00\\n0.00 1.00\\n0.00 1.00') == '2'\nassert solution('3 2\\n0.00 2.00\\n0.00 1.00\\n0.00 3.00\\n0.00 1.00\\n0.00 2.00\\n0.00 1.00\\n0.00 1.00\\n0.00 1.00\\n0.00 1.00') == '2'\nassert solution('3 2\\n0.00 2.00\\n0.00 1.00\\n0.00 3.00\\n0.00 1.00\\n0.00 2.00\\n0.00 1.00\\n0.00 1.00\\n0.00 1.00\\n0.00 1.00\\n0.00 1.00') == '2'\nassert solution('3 2\\n0.00 2.00\\n0.00 1.00\\n0.00 3.00\\n0.00 1.00\\n0.00 2.00\\n0.00 1.00\\n0.00 1.00\\n0.00 1.00\\n0.00 1.00\\n0.00 1.00\\n0.00 1.00') == '2'\nassert solution('3 2\\n0"
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\", \"Incorrect Output\"\n"
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 3\\n0.00 2.00') == '2\\n'\nassert solution('2 1\\n0.00 0.00') == 'no fika\\n'\nassert solution('1 2\\n0.00 0.00') == 'no fika\\n'\nassert solution('2 3\\n0.00 1.00') == 'no fika\\n'\nassert solution('2 3\\n0.00 3.00') == 'no fika\\n'\nassert solution('2 3\\n0.00 5.00') == 'no fika\\n'"
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2\\n\", \"The output is incorrect.\""
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == sample_output, \"The solution is incorrect.\""
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\n0 0\\n10 0\\n2\\n30 0\\n15 0') == '10'\n"
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\\n\") == 10"
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('0 0\\n10 0\\n2\\n30 0\\n15 0') == '10'\nassert solution('2\\n0 0\\n10 0\\n30 0\\n15 0') == '10'\nassert solution('1\\n0 0\\n10 0\\n30 0\\n15 0') == '10'\nassert solution('0 0\\n10 0\\n2\\n30 0\\n15 0') == '10'\nassert solution('0 0\\n10 0\\n2\\n30 0\\n15 0\\n1\\n0 0\\n10 0\\n2\\n30 0\\n15 0') == '10'"
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"10\"\n"
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\nassert solution(\"5\\n10 0\\n20 0\\n25 0\\n50 0\\n100 0\") == \"10\"\nassert solution(\"10\\n10 0\\n20 0\\n25 0\\n50 0\\n100 0\\n200 0\") == \"20\"\nassert solution(\"1\\n10 100\\n20 200\\n30 300\\n40 400\\n50 500\\n60 600\\n70 700\\n80 800\\n90 900\\n100 1000\") == \"50\"\nassert solution(\"5\\n1 1\\n10 0\\n20 0\\n25 0\\n50 0\\n100 0\") == \"25\"\nassert solution(\"5\\n1 1\\n10 0\\n20 0\\n25 0\\n50 0\\n100 0\") == \"25\""
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\nassert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\\n2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\""
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == output, f\"Test failed for input '{stdin}'. Expected output '{output}', got '{solution(stdin)}'.\"\n"
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2\\n0 0\\n10 0\\n2\\n30 0\\n15 0') == '10\\n'\nassert solution('4\\n0 0\\n10 0\\n2\\n30 0\\n15 0') == '4\\n'\nassert solution('10\\n0 0\\n10 0\\n2\\n30 0\\n15 0') == '10\\n'"
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(None) == \"Output not provided.\"\n\nclass Node:\n    def __init__(self, x, y, parent=None):\n        self.x = x\n        self.y = y\n        self.parent = parent\n        self.left = self.right = None\n\nclass Solution:\n    def __init__(self, nodes):\n        self.nodes = nodes\n\n    def distance(self, node1, node2):\n        return abs(node1.x - node2.x) + abs(node1.y - node2.y)\n\n    def find_node(self, x, y):\n        for node in self.nodes:\n            if node.x == x and node.y == y:\n                return node\n        return None\n\n    def find_parent(self, node):\n        if node.parent is None:\n            return None\n        return self.find_node(node.parent.x, node.parent.y)\n\n    def add_node(self, node):\n        self.nodes.append(node)\n\n    def parent_distance(self, node1, node2):\n        parent1 = self.find_parent(node1)\n        parent2 = self.find_parent(node2)\n\n        if parent1 is not None and parent2 is not None:\n            return self.distance(parent1, parent2)\n        else:\n            return float('inf')\n\n    def distance(self, node1, node2):\n        return abs(node1.x - node2.x) + abs(node1.y - node2.y)\n\n    def minimum_distance(self):\n        min_distance = float('inf')\n        for i in range(len(self.nodes)):\n            for j in range(i+1, len(self.nodes)):\n                node1 = self.nodes[i]\n                node2 = self.nodes[j]\n                distance = self.distance(node1, node2)\n                if distance < min_distance:\n                    min_distance = distance\n        return min_distance\n\n    def solution(self, stdin: str) -> str:\n        n = int(stdin.strip())\n        walks = []\n        for _ in range(n):\n            x1, y1 = map(int, stdin.strip().split())\n            x2, y2 = map(int, stdin.strip().split())\n            walks.append((x1, y1, x2, y2))\n\n        m = int(stdin.strip())\n        dogs = []\n        for _ in range(m):\n            x1, y1 = map(int, stdin.strip().split())\n            x2, y2 = map(int, stdin.strip().split())\n            dogs.append((x1, y1, x2, y2))\n\n        if n == 2:\n            return str(self.minimum_distance())\n        else:\n            nodes = []\n            parent = None\n            for x, y in walks:\n                node = Node(x, y, parent)\n                nodes.append(node)\n                parent = node\n            node = self.find_node(dogs[0][0], dogs[0][1])\n            node.distance = 0\n            node.parent = None\n            for i in range(1, len(dogs)):\n                parent = node\n                node = self.find_node(dogs[i][0], dogs[i][1])\n                node.distance = self.distance(node, parent)\n                parent.left = node\n                node.right = parent\n                parent = node\n            distance = self.distance(node, dogs[-1])\n            self.add_node(node)\n            return str(distance)"
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"0\\n\""
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\nW 10 0\\nW 10 3\\nE 17 4\") == \"0\\n\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"0\\n\", solution(stdin)"
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 4\") == \"0\\n\""
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"0\""
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 3\\nW 10 0\\nW 10 3\\nE 17 4') == '0'\n\nassert solution('8 3\\nW 10 0\\nW 10 3\\nE 17 4') == '0'\n\nassert solution('8 3\\nW 10 0\\nW 10 3\\nE 17 4\\nW 10 0\\nW 10 3\\nW 10 0\\nW 10 3\\nW 10 0\\nW 10 3\\nW 10 0\\nW 10 3\\nW 10 0\\nW 10 3\\nW 10 0\\nW 10 3\\nW 10 0\\nW 10 3\\nW 10 0\\nW 10 3\\nW 10 0\\nW 10 3\\nW 10 0\\nW 10 3\\nW 10 0\\nW 10 3\\nW 10 0\\nW 10 3\\nW 10 0\\nW 10 3\\nW 10 0\\nW 10 3\\nW 10 0\\nW 10 3\\nW 10 0\\nW 10 3\\nW 10 0\\nW 10 3\\nW 10 0\\nW 10 3\\nW 10 0\\nW 10 3\\nW 10 0\\nW 10 3\\nW 10 0\\nW 10 3\\nW 10 0\\nW 10 3\\nW 10 0\\nW 10 3\\nW 10 0\\nW 10 3\\nW 10 0\\nW 10 3\\nW 10 0\\nW 10 3\\nW 10 0\\nW 10 3\\nW 10 0\\nW 10 3\\nW 10 0\\nW 10 3\\nW 10 0\\nW 10 3\\nW 10 0\\nW 10 3\\nW 10 0\\nW 10 3\\nW 10 0\\nW 10 3\\nW 10 0\\nW 10 3\\nW 10 0\\nW 10 3\\nW 10 0\\nW 10 3\\nW 10 0\\nW 10 3\\nW 10 0\\nW 10 3\\nW 10 0\\nW 10 3\\nW 10 0\\nW 10 3\\nW 10 0\\nW 10 3\\nW 10 0\\nW 10 3\\nW 10 0\\nW 10 3\\nW 10 0\\nW 10 3\\nW 10 0\\nW 10 3\\nW 10 0\\nW 10 3\\nW 10 0\\nW 10 3\\nW 10 0\\nW 10 3\\nW 10 0\\nW 10 3\\nW 10 0\\nW 10 3\\nW 10 0\\nW 10 3\\nW 10 0\\nW 10 3\\nW 10 0\\nW 10 3\\nW 10 0\\nW 10 3\\nW 10 0\\nW 10 3\\nW 10 0\\nW 10 3\\nW 10 0\\nW 10 3\\nW 10 0\\n"
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    W 10 0\n    W 10 3\n    E 17 4\n    \"\"\"\n) == \"0\\n\"\n"
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 4\") == \"0\\n\"\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nW 17 4\") == \"1\\n\"\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 4\") == \"2\\n\"\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nW 18 4\") == \"3\\n\"\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 19 4\") == \"3\\n\"\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nW 20 4\") == \"4\\n\"\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nW 20 4\") == \"4\\n\"\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nW 20 4\") == \"5\\n\"\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nW 20 4\") == \"5\\n\"\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nW 20 4\") == \"5\\n\"\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nW 20 4\") == \"5\\n\"\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nW 20 4\") == \"6\\n\"\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nW 20 4\") == \"6\\n\"\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nW 20 4\") == \"6\\n\"\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nW 20 4\") == \"6\\n\"\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nW 20 4\") == \"6\\n\"\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nW 20 4\") == \"6\\n\"\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nW 20 4\") == \"6\\n\"\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nW 20 4\") == \"6\\n\"\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nW 20 4\") == \"6\\n\"\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nW 20 4\") == \"6\\n\"\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nW 20 4\") == \"6\\n\"\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nW 20 4\") == \"6\\n\"\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nW 20 4\") == \"6\\n\"\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nW 20 4\") == \"6\\n\"\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nW 20 4\") == \"6\\n\"\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nW 20 4\") == \"6\\n\"\n"
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 0, \"Your code is not correct\"\n"
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('W 10 0\\nW 10 3\\nE 17 4') == '0\\n'"
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    5\n    5 8\n    5 6\n    3 4\n    5 13\n    6 10\n    \"\"\"\n) == \"3\"\n\nassert solution(\n    \"\"\"\n    5\n    5 8\n    5 6\n    3 4\n    5 13\n    6 10\n    10 11\n    10 12\n    10 13\n    \"\"\"\n) == \"3\"\n\nassert solution(\n    \"\"\"\n    5\n    5 8\n    5 6\n    3 4\n    5 13\n    6 10\n    10 11\n    10 12\n    10 13\n    10 14\n    10 15\n    10 16\n    10 17\n    10 18\n    10 19\n    10 20\n    10 21\n    10 22\n    10 23\n    10 24\n    10 25\n    10 26\n    10 27\n    10 28\n    10 29\n    10 30\n    10 31\n    10 32\n    10 33\n    10 34\n    10 35\n    10 36\n    10 37\n    10 38\n    10 39\n    10 40\n    10 41\n    10 42\n    10 43\n    10 44\n    10 45\n    10 46\n    10 47\n    10 48\n    10 49\n    10 50\n    10 51\n    10 52\n    10 53\n    10 54\n    10 55\n    10 56\n    10 57\n    10 58\n    10 59\n    10 60\n    10 61\n    10 62\n    10 63\n    10 64\n    10 65\n    10 66\n    10 67\n    10 68\n    10 69\n    10 70\n    10 71\n    10 72\n    10 73\n    10 74\n    10 75\n    10 76\n    10 77\n    10 78\n    10 79\n    10 80\n    10 81\n    10 82\n    10 83\n    10 84\n    10 85\n    10 86\n    10 87\n    10 88\n    10 89\n    10 90\n    10 91\n    10 92\n    10 93\n    10 94\n    10 95\n    10 96\n    10 97\n    10 98\n    10 99\n    10 100\n    10 101\n    10 102\n    10 103\n    10 104\n    10 105\n    10 106\n    10 107\n    10 108\n    10 109\n    10 110\n    10 111\n    10 112\n    10 113\n    10 114\n    10 115\n    10 116\n    10 117\n    10 118\n    10 119\n    10 120\n    10 121\n    10 122\n    10 123\n    10 124\n    10 125\n    10 126\n    10 127\n    10 128\n    10 129\n    10 130\n    10 131\n    10 132\n    10 133\n    10 134\n    10 135\n    10 136\n    10 137\n    10 138\n    10 139\n    10 140\n    10 141\n    10 142\n    10 143\n    10 144\n    10 145\n    10 146\n    10 147\n    10 148\n    10 149\n    10 150\n    10 151\n    10"
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"3\"\n"
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Test Case {test_case_id} failed. Expected output: {expected_output}, Received output: {solution(input())}\"\n\ntest_case_id = 1\ninput_data = \"\"\"\n5\n5 8\n5 6\n3 4\n5 13\n6 10\n\"\"\"\noutput_data = \"\"\"\n3\n\"\"\"\nexpected_output = 3\n\ntest_case_id = 2\ninput_data = \"\"\"\n5\n100 0\n5 6\n3 4\n5 13\n6 10\n\"\"\"\noutput_data = \"\"\"\n2\n\"\"\"\nexpected_output = 2\n\ntest_case_id = 3\ninput_data = \"\"\"\n5\n100 1\n5 6\n3 4\n5 13\n6 10\n\"\"\"\noutput_data = \"\"\"\n4\n\"\"\"\nexpected_output = 4\n\ntest_case_id = 4\ninput_data = \"\"\"\n5\n100 2\n5 6\n3 4\n5 13\n6 10\n\"\"\"\noutput_data = \"\"\"\n10\n\"\"\"\nexpected_output = 10\n\ntest_case_id = 5\ninput_data = \"\"\"\n5\n100 3\n5 6\n3 4\n5 13\n6 10\n\"\"\"\noutput_data = \"\"\"\n20\n\"\"\"\nexpected_output = 20"
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"3\", \"Please implement the solution.\""
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 10\") == 3\n"
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '3'\n"
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"3\\n\"\n"
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\npass\""
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 10\") == \"3\""
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 10\") == \"3\\n\"\n"
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"impossible\""
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\n10 3 3\") == \"impossible\"\nassert solution(\"4 4\\n5 1 1\") == \"impossible\"\nassert solution(\"4 4\\n5 1 2\") == \"impossible\"\nassert solution(\"4 4\\n10 3 3\") == \"3\\nA\\nB\\nC\\nimpossible\"\nassert solution(\"4 4\\n10 3 3\") == \"10\\nA\\nB\\nC\\nimpossible\"\nassert solution(\"4 4\\n10 3 3\") == \"10\\nA\\nB\\nC\\nimpossible\"\nassert solution(\"4 4\\n10 3 3\") == \"10\\nA\\nB\\nC\\nimpossible\"\nassert solution(\"4 4\\n10 3 3\") == \"10\\nA\\nB\\nC\\nimpossible\"\nassert solution(\"4 4\\n10 3 3\") == \"10\\nA\\nB\\nC\\nimpossible\"\nassert solution(\"4 4\\n10 3 3\") == \"10\\nA\\nB\\nC\\nimpossible\"\nassert solution(\"4 4\\n10 3 3\") == \"10\\nA\\nB\\nC\\nimpossible\"\nassert solution(\"4 4\\n10 3 3\") == \"10\\nA\\nB\\nC\\nimpossible\"\nassert solution(\"4 4\\n10 3 3\") == \"10\\nA\\nB\\nC\\nimpossible\""
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 4\\n10 3 3\\n') == 'impossible'\nassert solution('5 4\\n5 2 2\\n') == '1A2B3'\nassert solution('3 3\\n2 1 1\\n') == '3A2B1'\nassert solution('4 4\\n1 2 3\\n') == '3B2A1'"
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\n10 3 3\") == \"impossible\""
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == sample_output, \"Your implementation is not correct.\"\n\nfrom typing import List"
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n10 3 3\") == \"impossible\"\n"
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\n10 3 3\\n\") == \"impossible\"\nassert solution(\"4 4\\n10 2 3\\n\") == \"A B C\\nBC A A\\nABC B C\\n\"\nassert solution(\"5 5\\n2 2 2\\n\") == \"impossible\"\nassert solution(\"5 5\\n2 3 3\\n\") == \"A B C\\nBC A A\\nABC B C\\n\""
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input) == expected, f\"Test case failed. Expected: '{expected}', but got: '{solution(input)}'.\""
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 'impossible'"
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == '''def solution(stdin: str) -> str:\n    pass\n'''"
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"11\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\\n
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    11\n    BETWEEN\n    SUBTLE\n    SHADING\n    AND\n    THE\n    ABSENCE\n    OF\n    LIGHT\n    LIES\n    NUANCE\n    IQLUSION\n    BTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n    \"\"\"\n) == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\""
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"11\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution(\"5\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution(\"11\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution(\"11\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef main():\\n    print(solution(stdin))\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nprint(\"All test cases pass\")"
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\""
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN''') == '''BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'''\nassert solution('''11\na\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN''') == '''BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'''\nassert solution('''11\nBETWEEN SUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN''') == '''BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'''\nassert solution('''11\nBETWEEN SUBTLE SHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN''') == '''BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'''\nassert solution('''11\nBETWEEN SUBTLE SHADING AND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN''') == '''BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'''\nassert solution('''11\nBETWEEN SUBTLE SHADING AND THE ABSENCE OF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN''') == '''BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'''\nassert solution('''11\nBETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES\nTHE\nNUANCE\nOF\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN''') == '''BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'''\nassert solution('''11\nBETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE\nOF IQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN''') == '''BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'''\nassert solution('''11\nBETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN''') == '''BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'''"
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"11\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\\n\") == [\"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT\", \"LIES THE NUANCE OF IQLUSION\"]\nassert solution(\"11\\nBETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\\n\") == [\"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT\", \"LIES THE NUANCE OF IQLUSION\"]\nassert solution(\"11\\nBetween Subtle Shading And The Absence Of Light Lies The Nuance Of Iqlusion\\n\") == [\"Between Subtle Shading And The Absence Of Light\", \"Lies The Nuance Of Iqlusion\"]\nassert solution(\"11\\nBetween subtle shading and the absence of light lies the nuance of iqlusion\\n\") == [\"Between subtle shading and the absence of light\", \"lies the nuance of iqlusion\"]\nassert solution(\"11\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\\n\") == [\"BTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\"]\nassert solution(\"11\\nBTWNS BTLSHD NGNDTHBSNCFLGHTLSTHNNCFQLSN\\n\") == [\"BTWNS BTLSHD NGNDTHBSNCFLGHTLSTHNNCFQLSN\"]\nassert solution(\"11\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\\n\") == [\"BTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\"]\nassert solution(\"11\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQL\\n\") == [\"BTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\"]\nassert solution(\"11\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLS\\n\") == [\"BTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\"]\nassert solution(\"11\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\\n\") == [\"BTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\"]\nassert solution(\"11\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLS\\n\") == [\"BTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\"]\nassert solution(\"11\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLS\\n\") == [\"BTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\"]\nassert solution(\"11\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLS\\n\") == [\"BTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\"]\nassert solution(\"11\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLS\\n\") == [\"BTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\"]\nassert solution(\"11\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLS\\n\") == [\"BTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\"]\nassert solution(\"11\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLS\\n\") == [\"BTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\"]\nassert solution(\"11\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLS\\n\") == [\"BTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\"]\nassert solution(\"11\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLS"
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(11) == [\"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT\", \"LIES THE NUANCE OF IQLUSION\"]\nassert solution(12) == [\"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT\", \"LIES THE NUANCE OF IQLUSION\"]\nassert solution(13) == [\"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT\", \"LIES THE NUANCE OF IQLUSION\"]\nassert solution(14) == [\"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT\", \"LIES THE NUANCE OF IQLUSION\"]\nassert solution(15) == [\"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT\", \"LIES THE NUANCE OF IQLUSION\"]\nassert solution(16) == [\"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT\", \"LIES THE NUANCE OF IQLUSION\"]\nassert solution(17) == [\"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT\", \"LIES THE NUANCE OF IQLUSION\"]\nassert solution(18) == [\"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT\", \"LIES THE NUANCE OF IQLUSION\"]\nassert solution(19) == [\"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT\", \"LIES THE NUANCE OF IQLUSION\"]\nassert solution(20) == [\"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT\", \"LIES THE NUANCE OF IQLUSION\"]\nassert solution(21) == [\"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT\", \"LIES THE NUANCE OF IQLUSION\"]\nassert solution(22) == [\"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT\", \"LIES THE NUANCE OF IQLUSION\"]\nassert solution(23) == [\"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT\", \"LIES THE NUANCE OF IQLUSION\"]\nassert solution(24) == [\"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT\", \"LIES THE NUANCE OF IQLUSION\"]\nassert solution(25) == [\"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT\", \"LIES THE NUANCE OF IQLUSION\"]\nassert solution(26) == [\"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT\", \"LIES THE NUANCE OF IQLUSION\"]\nassert solution(27) == [\"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT\", \"LIES THE NUANCE OF IQLUSION\"]\nassert solution(28) == [\"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT\", \"LIES THE NUANCE OF IQLUSION\"]\nassert solution(29) == [\"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT\", \"LIES THE NUANCE OF IQLUSION\"]\nassert solution(30) == [\"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT\", \"LIES THE NUANCE OF IQLUSION\"]\nassert solution(31) == [\"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT\", \"LIES THE NUANCE OF IQLUSION\"]\nassert solution(32) == [\"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT\", \"LIES THE NUANCE OF IQLUSION\"]\nassert solution(33) == [\"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT\", \"LIES THE NUANCE OF IQLUSION\"]\nassert solution(34) == [\"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT\", \"LIES THE NUANCE OF IQLUSION\"]\nassert solution(35) == [\"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT\", \"LIES THE NUANCE OF IQLUSION\"]\nassert solution(36) == [\"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT\", \"LIES THE NUANCE OF IQLUSION\"]\nassert solution(37) == [\"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT\", \"LIES THE NUANCE OF IQLUSION\"]\nassert solution(38) == [\"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT\", \"LIES THE NUANCE OF IQLUSION\"]\nassert solution(39) == [\"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT\", \"LIES THE NUANCE OF IQLUSION\"]\nassert solution(40) == [\"BETWEEN SUB"
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"11\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\\n\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\n"
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('11\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN') == ['BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT', 'LIES THE NUANCE OF IQLUSION']"
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"11\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution(\"11\\nWELCOME\\nHI\\nHELLO\\nWORLD\\nPRESS\\nNOW\\nBY\\nPHONE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\") == \"WELCOME HI HELLO PRESS NOW BY PHONE IQLUSION\"\nassert solution(\"11\\nHELLO\\nWORLD\\nPRESS\\nNOW\\nBY\\nPHONE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\") == \"HELLO WORLD PRESS NOW BY PHONE IQLUSION\"\nassert solution(\"11\\nHELLO\\nWORLD\\nPRESS\\nNOW\\nBY\\nPHONE\\nIQLUSION\\nHELLO\\nWELCOME\\nHI\\nHELLO\\nWORLD\\nPRESS\\nNOW\\nBY\\nPHONE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\") == \"HELLO WORLD PRESS NOW BY PHONE IQLUSION\"\nassert solution(\"11\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\\nIQLUSION\\nWELCOME\\nHI\\nHELLO\\nWORLD\\nPRESS\\nNOW\\nBY\\nPHONE\\nIQLUSION\\nHELLO\\nWELCOME\\nHI\\nHELLO\\nWORLD\\nPRESS\\nNOW\\nBY\\nPHONE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\\nHELLO\\nWELCOME\\nHI\\nHELLO\\nWORLD\\nPRESS\\nNOW\\nBY\\nPHONE\\nIQLUSION\\nHELLO\\nWELCOME\\nHI\\nHELLO\\nWORLD\\nPRESS\\nNOW\\nBY\\nPHONE\\nIQLUSION\\nHELLO\\nWELCOME\\nHI\\nHELLO\\nWORLD\\nPRESS\\nNOW\\nBY\\nPHONE\\nIQLUSION\\nHELLO\\nWELCOME\\nHI\\nHELLO\\nWORLD\\nPRESS\\nNOW\\nBY\\nPHONE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\\nHELLO\\nWELCOME\\nHI\\nHELLO\\nWORLD\\nPRESS\\nNOW\\nBY\\nPHONE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\\nHELLO\\nWELCOME\\nHI\\nHELLO\\nWORLD\\nPRESS\\nNOW\\nBY\\nPHONE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\""
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abrahellehhelleh\") == 12, \"Test failed\""
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abrahellehhelleh\") == 12, \"The output is incorrect.\""
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abrahellehhelleh\") == 12, \"The output should be 12, but it is: \" + str(solution(\"abrahellehhelleh\"))\n"
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abrahellehhelleh\") == 12, \"Error: expected 12, got {}\".format(solution(\"abrahellehhelleh\"))"
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abrahellehhelleh\") == 12\n"
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abrahellehhelleh\") == 12\n\nThe problem asks us to find the power of a word. We can find the power of a word by counting the number of subwords and checking if the subword ending with the word is present in the word itself. If there is no such subword, we return 0.\n\nTo solve this problem, we can use the following steps:\n\n1. Convert the input word to a list of characters.\n2. Remove the last character of the word.\n3. Iterate over all possible subwords of length $4$ in the list.\n4. Check if the last character of the subword matches the first character of the word.\n5. If there is no such subword, return 0.\n6. If there is a subword ending with the word, return its power.\n\nHere's the Python code that implements the above steps:\n\n```python\n"
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('abrahellehhelleh') == 12, \"Your solution is incorrect.\""
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abrahellehhelleh\") == \"12\""
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abrahellehhelleh\") == 12"
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"abrahellehhelleh\") == \"12\"\nassert solution(stdin=\"rachelhellabracadabra\") == \"0\""
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"70\""
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(11) == 70, \"Expected 70, got {}\".format(solution(11))\n"
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == expected, f\"Expected solution to be '{expected}', but got '{solution}'\"\n"
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"70\"\nassert solution(stdin=\"65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 "
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1') == '70'\n"
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '70'\n"
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"70\\n\""
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"70\\n\"\nassert solution(\"1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"10\\n\"\nassert solution(\"65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"240\\n\"\nassert solution(\"1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"70\""
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"The solution is {solution(input())}, but the expected output is {expected}\""
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n') == '10\\n7\\n8\\n7'"
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"10\\n7\\n8\\n7\\n\"\nassert solution() == \"10\\n7\\n8\\n7\\n\""
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"10\\n7\\n8\\n7\\n\""
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n\") == \"10\\n7\\n8\\n7\\n\"\nassert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n\") == \"10\\n7\\n8\\n7\\n\""
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n\") == \"10\\n7\\n8\\n7\\n\""
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"10\\n7\\n8\\n7\\n\""
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9') == '10\\n7\\n8\\n7'\nassert solution('10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9') == '10\\n7\\n8\\n7'"
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4') == '10\\n7\\n8\\n7'"
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n') == '10\\n7\\n8\\n7\\n'"
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\") == \"10\\n7\\n8\\n7\""
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n2 4 7\n-2 0\n0 -1\n-2 1\n1 0\n2 1\n2 3\n3 -1\n''') == '6'"
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"6\", \"The function should return the expected output.\""
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\") == \"6\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"6\\n\"\n"
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\") == \"6\"\nprint(\"All tests passed\")\n"
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"6\"\nassert solution() == \"2\""
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\") == 6, \"The output is incorrect. Please fix the code or contact the problem author for more information.\""
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '6'"
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\") == 6\nassert solution(\"1 2\\n-1 2\\n3 0\\n-2 1\\n2 1\\n1 1\\n0 1\\n1 3\\n0 3\\n1 3\") == 3\nassert solution(\"1 2\\n-1 2\\n3 0\\n-2 1\\n2 1\\n1 1\\n0 1\\n1 3\\n0 3\\n1 3\\n-1 3\") == 2\nassert solution(\"2 3\\n0 2\\n2 1\\n0 1\\n-1 2\\n1 2\\n1 1\\n0 1\\n2 3\\n3 2\\n0 2\\n1 2\\n2 2\\n2 1\\n1 1\\n2 2\\n1 2\\n1 2\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n"
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1 4 40\\n\") == \"3\""
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1 4 40\") == \"3\\n\"\nassert solution(\"4 1 4 50\") == \"2\\n\"\nassert solution(\"3 1 4 30\") == \"3\\n\"\nassert solution(\"5 1 4 30\") == \"2\\n\"\nassert solution(\"3 1 4 60\") == \"4\\n\""
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 1 4 40') == '3\\n', 'Solution should be 3.'"
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1 4 40\") == \"3\\n\""
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1 4 40\") == \"3\\n\"\n"
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"3\\n\"\nassert solution(\"3 1 4 40\") == \"3\\n\"\n"
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"3\\n\"\nassert solution(input()) == \"2\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"30\\n\"\nassert solution(input()) == \"25\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"30\\n\"\nassert solution(input()) == \"25\\n\""
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1 4 40\") == \"3\"\n\nSolution:"
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1 4 40\") == \"3\\n\"\n\nsolution(\"5 1 4 40\") # Output: \"15\""
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1 4 40\") == \"3\\n\"\n"
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == '''\n"
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    3 352\n    93 82 444\n    92 76 436\n    99 62 -1\n    0 70 66 71 97\n    76 0 87 66 74\n    62 90 0 60 94\n    60 68 68 0 69\n    83 78 83 73 0\n    \"\"\"\n) == \"99\\n3\"\n\nassert solution(\n    \"\"\"\n    3 352\n    93 82 444\n    92 76 436\n    99 62 -1\n    0 70 66 71 97\n    76 0 87 66 74\n    62 90 0 60 94\n    60 68 68 0 69\n    83 78 83 73 0\n    \"\"\"\n) == \"3\\n\"\n\nassert solution(\n    \"\"\"\n    3 352\n    93 82 444\n    92 76 436\n    99 62 -1\n    0 70 66 71 97\n    76 0 87 66 74\n    62 90 0 60 94\n    60 68 68 0 69\n    83 78 83 73 0\n    \"\"\"\n) == \"0\\n\""
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0\n\"\"\") == \"99\\n3\"\n\nassert solution(\"\"\"\n3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0\n\"\"\") == \"0\\n\""
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input) == output, \"Test failed for input: {}, output: {}\".format(input, output)"
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\") == \"99\\n3\\n\"\nassert solution(\"1 1 0\\n2 2 0\\n3 3 0\\n4 4 0\\n5 5 0\") == \"0\\n\"\nassert solution(\"5 360\\n180 180 0\\n0 180 180\\n0 0 180\\n180 0 180\\n180 180 0\") == \"0\\n\"\nassert solution(\"5 360\\n180 180 0\\n0 180 180\\n0 0 180\\n180 0 180\\n180 180 0\") == \"0\\n\""
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\") == \"99\\n3\\n76\\n71\\n\"\nassert solution(\"10 0\\n1 2 3 4 5\\n\") == \"0\"\nassert solution(\"5 0\\n1 1 2 2 3\\n\") == \"0\"\nassert solution(\"5 30\\n1 1 2 2 3\\n\") == \"0\"\nassert solution(\"5 10\\n1 1 2 2 3\\n\") == \"0\"\nassert solution(\"5 10\\n1 1 2 2 3\\n1 1 2 2 3\\n\") == \"0\"\nassert solution(\"5 10\\n1 1 2 2 3\\n1 1 2 2 3\\n1 1 2 2 3\\n\") == \"0\"\nassert solution(\"10 15\\n1 1 2 2 3\\n1 1 2 2 3\\n1 1 2 2 3\\n1 1 2 2 3\\n1 1 2 2 3\\n1 1 2 2 3\\n1 1 2 2 3\\n1 1 2 2 3\\n1 1 2 2 3\\n1 1 2 2 3\\n1 1 2 2 3\\n1 1 2 2 3\\n1 1 2 2 3\\n1 1 2 2 3\\n1 1 2 2 3\\n1 1 2 2 3\\n1 1 2 2 3\\n1 1 2 2 3\\n1 1 2 2 3\\n1 1 2 2 3\\n1 1 2 2 3\\n1 1 2 2 3\\n1 1 2 2 3\\n1 1 2 2 3\\n1 1 2 2 3\\n1 1 2 2 3\\n1 1 2 2 3\\n1 1 2 2 3\\n1 1 2 2 3\\n1 1 2 2 3\\n1 1 2 2 3\\n1 1 2 2 3\\n1 1 2 2 3\\n1 1 2 2 3\\n1 1 2 2 3\\n1 1 2 2 3\\n1 1 2 2 3\\n1 1 2 2 3\\n1 1 2 2 3\\n1 1 2 2 3\\n1 1 2 2 3\\n1 1 2 2 3\\n1 1 2 2 3\\n1 1 2 2 3\\n1 1 2 2 3\\n1 1 2 2 3\\n1 1 2 2 3\\n1 1 2 2 3\\n1 1 2 2 3\\n1 1 2 2 3\\n1 1 2 2 3\\n1 1 2 2 3\\n1 1 2 2 3\\n1 1 2 2 3\\n1 1 2 2 3\\n1 1 2 2 3\\n1 1 2 2 3\\n1 1 2 2 3\\n1 1 2 2 3\\n1 1 2 2 3\\n1 1 2 2 3\\n1 1 2 2 3\\n1 1 2 2 3\\n1"
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    '''\n3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0\n'''\n) == '99\\n3\\n'\n\nassert solution(\n    '''\n3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0\n'''\n) == '99\\n3\\n'\n\nassert solution(\n    '''\n3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0\n'''\n) == '99\\n3\\n'\n\nassert solution(\n    '''\n3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0\n'''\n) == '99\\n3\\n'\n\nassert solution(\n    '''\n3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0\n'''\n) == '0\\n'\n\nassert solution(\n    '''\n3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0\n'''\n) == '0\\n'\n\nassert solution(\n    '''\n3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0\n'''\n) == '99\\n3\\n'\n\nassert solution(\n    '''\n3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0\n'''\n) == '99\\n3\\n'\n\nassert solution(\n    '''\n3 352\n93 82 444\n92 "
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\\n\") == \"99\\n3\\n\"\nassert solution(\"0 360\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 "
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\\n\") == \"99\\n3\\n76 0 87 66 74\\n76 0 87 66 74\\n62 90 0 60 94\\n62 90 0 60 94\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\\n\"\n\nassert solution(\"3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\\n\") == \"99\\n3\\n76 0 87 66 74\\n76 0 87 66 74\\n62 90 0 60 94\\n62 90 0 60 94\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\\n\"\n\nassert solution(\"3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\\n\") == \"99\\n3\\n76 0 87 66 7"
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\") == \"99\\n3\\n76\\n60\\n83\""
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Moles are tidy and hard-working animals.\\nOur mole likes to keep its underground residence in utmost order, so that everyone living there knows where to find things.\\nTo achieve this, the mole connected rooms with tunnels so that there is a single unique way to get from one room to any other room.\\nDespite all the effort, some of the mole\u2019s guests are complaining that it takes too long to walk between certain pairs of rooms.\\nThe mole decided to reconstruct her residence, closing one tunnel and opening a new one, so that the distance between the farthest two rooms is the smallest possible, but so that it is still possible to reach every room from every other room.\\n\\nWrite a program which determines the distance between the farthest two rooms after reconstruction, which tunnel to close and which to open. It is allowed to reopen the same tunnel that is closed, if this results in the minimum farthest distance.\\n\\n-----Input-----\\nThe first line contains an integer $N$ ($2 \\le N \\le 300000$), the number of rooms. The rooms are numbered $1$ to $N$.\\n\\nEach of the next $N-1$ lines contains two integers, the numbers of rooms a tunnel connects.\\n\\n-----Output-----\\nOutput on separate lines, in order:\\n - The distance between the two farthest rooms after reconstruction.\\n - A pair of integers representing a previously existing tunnel, which should be closed.\\n - A pair of integers, the rooms between which a new tunnel should be opened.\\n\\nNote: The solution will not necessarily be unique. Output any reconstruction plan which achieves the smallest distance between the farthest two rooms.\") == \"2\\n3 4\\n4 2\""
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '2'"
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == sample_output, f\"Test failed for sample input {sample_input}, expected output {sample_output}\""
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n\") == \"2\\n3 4\\n4 2\""
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2\\n3 4\\n4 2\"\n"
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2\\n3 4\\n4 2\""
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2\\n2 3\\n3 4\") == \"2\\n3 4\\n4 2\"\nassert solution(\"1 1\\n2 2\\n3 3\\n4 4\") == \"2\\n3 3\\n4 3\"\nassert solution(\"1 1\\n2 2\\n3 3\\n4 4\") == \"2\\n3 3\\n4 3\""
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"2\\n3 4\\n4 2\""
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), \"Input and output do not match\""
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Moles are tidy and hard-working animals. Our mole likes to keep its underground residence in utmost order, so that everyone living there knows where to find things.\") == \"2\\n3 4\\n4 2\"\nassert solution(\"1 2\\n2 3\\n3 4\") == \"2\"\nassert solution(\"1 2\\n2 3\\n3 4\\n1 5\\n5 3\\n4 1\") == \"3 4\"\nassert solution(\"1 2\\n2 3\\n3 4\\n1 5\\n5 3\\n4 1\\n1 6\\n6 3\\n4 1\") == \"4 2\"\nassert solution(\"1 2\\n2 3\\n3 4\\n1 5\\n5 3\\n4 1\\n1 6\\n6 3\\n4 1\\n1 7\\n7 3\\n4 1\") == \"4 2\"\nassert solution(\"1 2\\n2 3\\n3 4\\n1 5\\n5 3\\n4 1\\n1 6\\n6 3\\n4 1\\n1 7\\n7 3\\n4 1\\n1 8\\n8 3\\n4 1\") == \"4 2\""
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"9.0000\"\nassert solution() == \"12\"\nassert solution() == \"12.00000\"\nassert solution() == \"9.0\""
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected_output, f\"The provided code is incorrect. Please check the sample input and expected output.\""
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r')) == '9.0000\\n12\\n12.00000\\n9.0'\n"
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == output, \"Test Failed\""
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"4\\n1 1\\n2 2\\n3 2\\n4 1\\n\") == \"9.0000\\n12\\n12.00000\\n9.0\\n\"\nassert solution(stdin=\"4\\n1 1\\n2 2\\n3 2\\n4 1\\n\") == \"9.0000\\n12\\n12.00000\\n9.0\\n\""
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 1\\n2 2\\n3 2\\n4 1\") == \"9.0000\\n12\\n12.00000\\n9.0\\n\"\nassert solution(\"4\\n1 1\\n2 2\\n3 2\\n4 1\\n\") == \"9.0000\\n12\\n12.00000\\n9.0\\n\"\nassert solution(\"5\\n1 1\\n2 2\\n3 2\\n4 1\\n5 1\\n\") == \"10.0000\\n13\\n13.00000\\n10.0\\n\"\nassert solution(\"5\\n1 1\\n2 2\\n3 2\\n4 1\\n5 1\\n6 1\\n\") == \"11.0000\\n13\\n13.00000\\n11.0\\n\"\nassert solution(\"5\\n1 1\\n2 2\\n3 2\\n4 1\\n5 1\\n6 1\\n7 1\\n\") == \"12.0000\\n13\\n13.00000\\n12.0\\n\""
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input) == output, f\"Test failed. Expected: {output}, got: {solution(input)}\""
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1\\n2 2\\n3 2\\n4 1\") == \"9.0000\\n12\\n12.00000\\n9.0\"\n"
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == sample_output, f\"The given solution is incorrect. Please see the sample input and output below:\\n\\n{sample_input}\\n\\nOutput: {solution(sample_input)}\\n\\n{sample_output}\""
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"9.0000\\n12\\n12.00000\\n9.0\""
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(2) == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\""
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}, Received: {solution(input())}\""
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\"\n"
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(2) == 'ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n'\nprint('Sample Output:')\nprint(solution(2))\n"
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(2) == 'ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n'\nassert solution(16) == 'ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n'\nassert solution(42) == 'ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n'"
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\", \"Solution is incorrect.\"\n"
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(2) == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(2) == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2') == 'ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n'"
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"DI Y\\n\", \"Output incorrect\"\n"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\") == 2, \"The output is not as expected.\""
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n1 5 6\n0000 FFFF 0000 0000 0000 0000\nFFFF FFFF 0000 FFFF FFFF 0000\n0000 0000 0000 FFFF 0000 0000\n0000 FFFF FFFF FFFF FFFF 0000\n0000 0000 0000 0000 0000 0000\n\"\"\") == \"2\""
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n1 5 6\n0000 FFFF 0000 0000 0000 0000\nFFFF FFFF 0000 FFFF FFFF 0000\n0000 0000 0000 FFFF 0000 0000\n0000 FFFF FFFF FFFF FFFF 0000\n0000 0000 0000 0000 0000 0000\n''') == 2, \"Incorrect output: 2\"\n\nassert solution('''\n1 5 6\n0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000\n''') == 0, \"Incorrect output: 0\"\n\nassert solution('''\n1 5 6\n0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000 0000\n''') == 1, \"Incorrect output: 1\""
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n    1 5 6\n    0000 FFFF 0000 0000 0000 0000\n    0000 0000 0000 FFFF 0000 0000\n    0000 0000 0000 0000 0000 0000\n    0000 0000 0000 0000 0000 0000\n''') == 2"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000') == 2, \"Solution should return 2.\"\nassert solution('1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000') == 0, \"Solution should return 0.\""
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\\n') == '2\\n'\n\nassert solution('1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\\n') == '2\\n'"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\") == 2\n"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(f\"1 {5} {6}\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\\n\") == 2, \"Test case 1 failed.\"\n\nassert solution(f\"1 {5} {6}\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\\n\") == 1, \"Test case 2 failed.\"\n\nassert solution(f\"1 {5} {6}\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\\n\") == 0, \"Test case 3 failed.\"\n\nassert solution(f\"1 {5} {6}\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\\n\") == 0, \"Test case 4 failed.\"\n\nassert solution(f\"1 {5} {6}\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\\n\") == 0, \"Test case 5 failed.\""
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(b'1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\\n') == '2'"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\") == 2"
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=input()) == expected_output, f\"Expected Output: {expected_output}, Actual Output: {solution(stdin=input())}\""
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"abaaba\", \"Your solution is incorrect\""
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"abaaba\"\nassert solution(stdin) == \"NONE\"\nassert solution(stdin) == \"abbbbbbbbbbbbbbbbba\"\nassert solution(stdin) == \"a\"\n\nfrom typing import List"
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\nA -> B\\nB -> C\\nC -> D\\nD -> E\\nE -> A\\nA -> E\\n\") == \"ababcdefg\\nNONE\"\nassert solution(\"5\\nA -> B\\nB -> C\\nC -> D\\nD -> E\\nE -> F\\nF -> G\\nG -> H\\nH -> A\\nA -> E\\n\") == \"ababcdefg\\nNONE\"\nassert solution(\"5\\nA -> B\\nB -> C\\nC -> D\\nD -> E\\nE -> F\\nF -> G\\nG -> H\\nH -> A\\nA -> E\\n\") == \"ababcdefg\\nNONE\"\nassert solution(\"5\\nA -> B\\nB -> C\\nC -> D\\nD -> E\\nE -> F\\nF -> G\\nG -> H\\nH -> A\\nA -> E\\n\") == \"ababcdefg\\nNONE\"\nassert solution(\"5\\nA -> B\\nB -> C\\nC -> D\\nD -> E\\nE -> F\\nF -> G\\nG -> H\\nH -> A\\nA -> E\\n\") == \"ababcdefg\\nNONE\"\nassert solution(\"5\\nA -> B\\nB -> C\\nC -> D\\nD -> E\\nE -> F\\nF -> G\\nG -> H\\nH -> A\\nA -> E\\n\") == \"ababcdefg\\nNONE\"\nassert solution(\"5\\nA -> B\\nB -> C\\nC -> D\\nD -> E\\nE -> F\\nF -> G\\nG -> H\\nH -> A\\nA -> E\\n\") == \"ababcdefg\\nNONE\"\nassert solution(\"5\\nA -> B\\nB -> C\\nC -> D\\nD -> E\\nE -> F\\nF -> G\\nG -> H\\nH -> A\\nA -> E\\n\") == \"ababcdefg\\nNONE\"\nassert solution(\"5\\nA -> B\\nB -> C\\nC -> D\\nD -> E\\nE -> F\\nF -> G\\nG -> H\\nH -> A\\nA -> E\\n\") == \"ababcdefg\\nNONE\"\nassert solution(\"5\\nA -> B\\nB -> C\\nC -> D\\nD -> E\\nE -> F\\nF -> G\\nG -> H\\nH -> A\\nA -> E\\n\") == \"ababcdefg\\nNONE\"\nassert solution(\"5\\nA -> B\\nB -> C\\nC -> D\\nD -> E\\nE -> F\\nF -> G\\nG -> H\\nH -> A\\nA -> E\\n\") == \"ababcdefg\\nNONE\"\nassert solution(\"5\\nA -> B\\nB -> C\\nC -> D\\nD -> E\\nE -> F\\nF -> G\\nG -> H\\nH -> A\\nA -> E\\n\") == \"ababcdefg\\nNONE\"\nassert solution(\"5\\nA -> B\\nB -> C\\nC -> D\\nD -> E\\nE -> F\\nF -> G\\nG -> H\\nH -> A\\nA -> E\\n\") == \"ababcdefg\\nNONE\"\nassert solution(\"5\\nA -> B\\nB -> C\\nC -> D\\nD -> E\\nE -> F\\nF -> G\\nG -> H\\nH -> A\\nA -> E\\n\") == \"ababcdefg\\nNONE\"\nassert solution(\"5\\nA -> B\\nB -> C\\nC -> D\\nD -> E\\nE -> F\\nF -> G\\nG -> H\\nH -> A\\nA -> E\\n\") == \"ababcdefg\\nNONE\"\nassert solution(\"5\\nA -> B\\nB -> C\\nC -> D\\nD -> E\\nE -> F\\nF -> G\\nG -> H\\nH -> A\\nA -> E\\n\") == \"ababcdefg\\nNONE\"\nassert solution(\"5\\nA -> B\\nB -> C\\nC -> D\\nD -> E\\nE -> F\\nF -> G\\nG -> H\\nH -> A\\nA -> E\\n\") == \"ababcdefg\\nNONE\"\nassert solution(\"5\\nA -> B\\nB -> C\\nC -> D\\nD ->"
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"abaaba\" and solution == \"NONE\" and solution == \"abbbbbbbbbbbbbbbbba\" and solution == \"a\""
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\nA -> aSa\\nA -> bSb\\nA -> a\\nA -> b\\nA ->\\nwhere are the abaaba palindromes on this line\\none on this line\\how about this aaaaaaabbbbbbbbbbbbbbbbba\\neven a single a or b is a palindrome\\n\") == \"abaaba\\nNONE\\nabbbbbbbbbbbbbbbbba\\nNONE\\n\""
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"abaaba\", \"The solution is incorrect\"\n"
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"abaaba\""
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(r\"S -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \") == \"abaaba\\nNONE\"\nassert solution(r\"S -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \") == \"abbbbbbbbbbbbbbbbba\\na\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(solution_input) == solution_output, \"Incorrect solution\""
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\\n\""
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"Output:\\n4\\n\""
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n4 5 0 2\\n1 3 7\\n2 0\\n4\") == \"4\"\n"
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1\\n3\\n2\\n4\") == \"4\"\nassert solution(\"5\\n1\\n3\\n2\\n4\") == \"4\"\nassert solution(\"10\\n1\\n3\\n2\\n4\") == \"0\"\nassert solution(\"5\\n1\\n3\\n2\\n4\\n1\\n5\\n2\\n6\\n3\\n7\") == \"1\""
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 3 7\\n2 0\\n4\") == \"4\\n\"\nassert solution(\"5\\n4 5 0 2\\n1 3 7\\n2 0\") == \"4\\n\""
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n4 5 0 2\\n1 3 7\\n2 0\\n4\") == 4\nassert solution(\"5\\n4 5 0 2\\n1 3 7\\n2 0\\n5\") == 5\nassert solution(\"5\\n4 5 0 2\\n1 3 7\\n2 0\\n4 1 2\") == 6"
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\npass\""
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n4 5 0 2\\n1 3 7\\n2 0\\n4\") == \"4\\n4\"\n"
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, but got {solution(stdin)}\""
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"4\\n\"\nassert solution(stdin) == \"4\\n\"\nassert solution(stdin) == \"4\\n\"\nassert solution(stdin) == \"4\\n\"\nassert solution(stdin) == \"4\\n\""
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"GO FOR IT\""
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"2 4\\n1 2\\nSWSW\\nSWSW\\nGSBB\\nGSBB\") == \"GO FOR IT\"\nassert solution(\"2 5\\n2 3\\nWWSW\\nWSWW\\nBWWW\\nWWSW\\nBWWW\") == \"NO CHANCE\"\nassert solution(\"2 3\\n4 5\\nWWSW\\nWSWW\\nBWWW\\nWWSW\\nBWWW\") == \"NO WAY\""
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input) == output, f\"The given input is incorrect. \\nExpected: '{output}'\\nGot: '{solution(input)}'\""
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG') == 'GO FOR IT'\nassert solution('1 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG') == 'NO WAY'\nassert solution('2 3\\n3 3\\nWWWW\\nWSBB\\nWWWW\\nWBWG') == 'SUCCESS'\nassert solution('2 3\\n1 3\\nWWWW\\nWSBB\\nWWWW\\nWBWG') == 'GO FOR IT'\nassert solution('2 3\\n2 3\\nWWWW\\nWSBB\\nWWWW\\nWBWG') == 'GO FOR IT'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBGW') == 'SUCCESS'\nassert solution('2 3\\n3 3\\nWWWW\\nWSBB\\nWWWW\\nWBGW') == 'SUCCESS'\nassert solution('2 3\\n1 3\\nWWWW\\nWSBB\\nWWWW\\nWBGW') == 'GO FOR IT'\nassert solution('2 3\\n2 3\\nWWWW\\nWSBB\\nWWWW\\nWBGW') == 'GO FOR IT'"
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nS\\nS\\nS\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nWSBB\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\n"
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"1 1\\n1 1\\nS\\nG\\nS\") == \"NO WAY\"\nassert solution(\"1 1\\n1 1\\nS\\nS\\nG\") == \"NO WAY\"\nassert solution(\"1 1\\n1 1\\nS\\nS\\nG\") == \"NO WAY\"\nassert solution(\"1 1\\n1 1\\nS\\nG\\nS\") == \"NO WAY\"\nassert solution(\"1 1\\n1 1\\nS\\nS\\nS\") == \"NO WAY\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"1 1\\n1 1\\nS\\nG\\nS\") == \"GO FOR IT\"\nassert solution(\"1 1\\n1 1\\nS\\nS\\nG\") == \"GO FOR IT\"\nassert solution(\"1 1\\n1 1\\nS\\nS\\nG\") == \"GO FOR IT\"\nassert solution(\"1 1\\n1 1\\nS\\nG\\nS\") == \"GO FOR IT\"\nassert solution(\"1 1\\n1 1\\nS\\nS\\nS\") == \"GO FOR IT\""
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n\") == \"GO FOR IT\"\nassert solution(\"3 1\\n2 3\\nGBGB\\nWSBB\\nWWWW\\nWBWG\\n\") == \"GO FOR IT\"\nassert solution(\"1 1\\n2 2\\nWBWG\\nWSBB\\nGGGB\\n\") == \"SUCCESS\"\nassert solution(\"1 1\\n2 2\\nWBWG\\nWSBB\\nGGGB\\n2 2\\n\") == \"SUCCESS\"\nassert solution(\"1 1\\n2 2\\nWBWG\\nWSBB\\nGGGB\\n3 2\\n\") == \"SUCCESS\"\nassert solution(\"1 1\\n2 2\\nWBWG\\nWSBB\\nGGGB\\n4 2\\n\") == \"SUCCESS\"\nassert solution(\"1 1\\n2 2\\nWBWG\\nWSBB\\nGGGB\\n5 2\\n\") == \"SUCCESS\"\nassert solution(\"1 1\\n2 2\\nWBWG\\nWSBB\\nGGGB\\n6 2\\n\") == \"SUCCESS\"\nassert solution(\"1 1\\n2 2\\nWBWG\\nWSBB\\nGGGB\\n7 2\\n\") == \"SUCCESS\"\nassert solution(\"1 1\\n2 2\\nWBWG\\nWSBB\\nGGGB\\n8 2\\n\") == \"SUCCESS\"\nassert solution(\"1 1\\n2 2\\nWBWG\\nWSBB\\nGGGB\\n9 2\\n\") == \"SUCCESS\"\nassert solution(\"1 1\\n2 2\\nWBWG\\nWSBB\\nGGGB\\n10 2\\n\") == \"SUCCESS\"\nassert solution(\"1 1\\n2 2\\nWBWG\\nWSBB\\nGGGB\\n11 2\\n\") == \"SUCCESS\"\nassert solution(\"1 1\\n2 2\\nWBWG\\nWSBB\\nGGGB\\n12 2\\n\") == \"SUCCESS\"\nassert solution(\"1 1\\n2 2\\nWBWG\\nWSBB\\nGGGB\\n13 2\\n\") == \"SUCCESS\"\nassert solution(\"1 1\\n2 2\\nWBWG\\nWSBB\\nGGGB\\n14 2\\n\") == \"SUCCESS\"\nassert solution(\"1 1\\n2 2\\nWBWG\\nWSBB\\nGGGB\\n15 2\\n\") == \"SUCCESS\"\nassert solution(\"1 1\\n2 2\\nWBWG\\nWSBB\\nGGGB\\n16 2\\n\") == \"SUCCESS\"\nassert solution(\"1 1\\n2 2\\nWBWG\\nWSBB\\nGGGB\\n17 2\\n\") == \"SUCCESS\"\nassert solution(\"1 1\\n2 2\\nWBWG\\nWSBB\\nGGGB\\n18 2\\n\") == \"SUCCESS\"\nassert solution(\"1 1\\n2 2\\nWBWG\\nWSBB\\nGGGB\\n19 2\\n\") == \"SUCCESS\"\nassert solution(\"1 1\\n2 2\\nWBWG\\nWSBB\\nGGGB\\n20 2\\n\") == \"SUCCESS\"\nassert solution(\"1 1\\n2 2\\nWBWG\\nWSBB\\nGGGB\\n21 2\\n\") == \"SUCCESS\"\nassert solution(\"1 1\\n2 2\\nWBWG\\nWSBB\\nGGGB\\n22 2\\n\") == \"SUCCESS\"\nassert solution(\"1 1\\n2 2\\nWBWG\\nWSBB\\nGGGB\\n23 2\\n\") == \"SUCCESS\"\nassert solution(\"1 1\\n2 2\\nWBWG\\nWSBB\\nGGGB\\n24 2\\n\") == \"SUCCESS\"\nassert solution(\"1 1\\n2 2\\nWBWG\\nWSBB\\nGGGB\\n25 2\\n\") == \"SUCCESS\"\nassert solution(\"1 1\\n2 2\\nWBWG\\nWSBB\\nGGGB\\n26 2\\n\") == \"SUCCESS\"\nassert solution(\"1"
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWWWW\") == \"NO WAY\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB\") == \"NO WAY\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWWWW\\nWWWW\") == \"NO WAY\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWWWW\\nWSBB\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWSBB\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWSBB\\nWSBB\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\nWSBB\\"
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    2 3\n    4 4\n    WWWW\n    WSBB\n    WWWW\n    BWGW\n    \"\"\"\n) == \"GO FOR IT\\n\"\n\nassert solution(\n    \"\"\"\n    10 10\n    10 10\n    WWWWWWWWWWW\n    WWWWWWWWWWW\n    BBWBBBWBBW\n    \"\"\"\n) == \"SUCCESS\\n\"\n\nassert solution(\n    \"\"\"\n    5 5\n    5 5\n    WWWWWWWWWWW\n    WWWWWWWWWWW\n    BBWBBBWBBW\n    \"\"\"\n) == \"NO WAY\\n\""
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"1 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"NO CHANCE\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n\") == \"NO WAY\"\nassert solution(\"1 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n\") == \"NO WAY\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n\\n\") == \"GO FOR IT\"\nassert solution(\"1 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n\\n\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n\\n\\n\") == \"GO FOR IT\"\nassert solution(\"1 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n\\n\\n\") == \"GO FOR IT\""
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '2243'\n"
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 900\\n800 700 400 300 200\") == \"2243\\n\"\n"
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2243\", \"Test Case 1 failed.\""
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n    5 900\n    800 700 400 300 200\n    \"\"\") == \"2243\\n\"\nassert solution(\"\"\"\n    5 1200\n    400 200 100 50 25\n    \"\"\") == \"1900\\n\"\nassert solution(\"\"\"\n    5 2400\n    100 50 100 50 25\n    \"\"\") == \"2125\\n\"\nassert solution(\"\"\"\n    3 1000\n    100 200 100 200 500\n    \"\"\") == \"1000\\n\"\nassert solution(\"\"\"\n    5 2500\n    400 100 200 100 50\n    \"\"\") == \"2250\\n\"\nassert solution(\"\"\"\n    5 1500\n    100 25 100 25 50\n    \"\"\") == \"1500\\n\""
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 900\\n800 700 400 300 200') == '2243\\n'"
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_data) == output_data, f\"Test case failed: {test_case_id}\" for test_case_id, input_data, output_data in [\n    (\"1 2\", \"1\", \"1\"),\n    (\"2 1\", \"2\", \"1\"),\n    (\"5 100\", \"5\", \"100\"),\n    (\"3 100\", \"3\", \"100\"),\n    (\"5 500\", \"5\", \"500\"),\n    (\"1 3\", \"1\", \"1\"),\n    (\"5 100\", \"5\", \"100\"),\n    (\"5 2000\", \"5\", \"2000\"),\n    (\"5 100\", \"5\", \"100\"),\n]"
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    5 900\n    800 700 400 300 200\n    \"\"\"\n) == \"2243\\n\"\n\nassert solution(\n    \"\"\"\n    5 800\n    700 400 300 200\n    \"\"\"\n) == \"1900\\n\"\n\nassert solution(\n    \"\"\"\n    5 600\n    500 200 100 50\n    \"\"\"\n) == \"2000\\n\""
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 900\\n800 700 400 300 200') == '2243\\n'\n"
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 900\\n800 700 400 300 200\") == \"2243\""
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 900\\n800 700 400 300 200\") == \"2243\\n\""
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\") == \"no\\nyes\\ndef solution(stdin: str) -> str:\\npass\\n\""
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\\n\") == \"no\\nno\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\") == \"no\\nno\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\\n\") == \"no\\nno\\n\"\n"
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\\n\") == \"no\\nno\\n\"\n"
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\\n\") == \"no\\nyes\\n\"\n"
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    10 4\n    =? 1 3\n    =? 3 8\n    =? 1 3\n    \"\"\"\n) == \"no\\nyes\\n\"\n\nassert solution(\n    \"\"\"\n    10 4\n    =? 1 3\n    =? 3 8\n    =? 1 3\n    \"\"\"\n) == \"no\\nyes\\n\"\n\nassert solution(\n    \"\"\"\n    10 4\n    =? 1 3\n    =? 3 8\n    =? 1 3\n    \"\"\"\n) == \"no\\nyes\\n\"\n\nassert solution(\n    \"\"\"\n    10 4\n    =? 1 3\n    =? 3 8\n    =? 1 3\n    \"\"\"\n) == \"no\\nyes\\n\""
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\") == \"no\\nyes\\n\"\nassert solution(\"10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\\n? 1 3\") == \"no\\nno\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\\n\") == \"no\\nyes\\n\"\nassert solution(\"10 4\\n? 2 3\\n= 1 8\\n= 3 8\\n? 1 3\\n\") == \"yes\\nno\\n\"\n\nassert solution(\"10 4\\n? 1 3\\n? 2 3\\n= 1 8\\n= 3 8\\n= 2 6\\n= 4 6\\n? 1 3\\n? 2 3\\n= 2 6\\n= 4 6\\n? 1 3\\n\") == \"no\\nno\\nno\\nno\\n\"\n\nassert solution(\"10 4\\n? 1 3\\n? 2 3\\n= 1 8\\n= 3 8\\n= 2 6\\n= 4 6\\n? 1 3\\n= 2 6\\n= 4 6\\n? 1 3\\n= 2 6\\n= 4 6\\n\") == \"no\\nno\\nno\\nno\\n\""
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\") == \"no\\nyes\"\n"
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == sample_output, f\"Test {test_case} failed\""
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=input()) == \"2\"\n"
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"5 3\\n10 5 4 8 3\") == \"2\\n\"\nassert solution(stdin=\"4 6\\n10 5 4 8 3\") == \"2\\n\"\nassert solution(stdin=\"5 5\\n10 5 4 8 3\") == \"2\\n\"\nassert solution(stdin=\"6 7\\n10 5 4 8 3\") == \"3\\n\"\nassert solution(stdin=\"7 8\\n10 5 4 8 3\") == \"3\\n\""
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 2, \"The function should return 2, but it returned {}\".format(solution())"
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2\", \"Incorrect solution\""
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n10 5 4 8 3\") == 2\n"
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 3\\n10 5 4 8 3') == '2\\n'\n"
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n10 5 4 8 3\\n\") == \"2\\n\"\n"
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 2\nassert solution(10) == 2\nassert solution(5) == 0\nassert solution(1) == 0"
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n10 5 4 8 3\") == \"2\"\nassert solution(\"7 6\\n10 8 5 3 9 6\") == \"3\"\nassert solution(\"8 7\\n6 5 2 9 8 3\") == \"2\"\nassert solution(\"9 8\\n8 7 6 5 4 3\") == \"3\"\nassert solution(\"10 9\\n8 7 6 5 4 3\") == \"2\"\nassert solution(\"11 10\\n9 8 7 6 5 4 3\") == \"3\"\nassert solution(\"12 11\\n8 7 6 5 4 3\") == \"2\"\nassert solution(\"13 12\\n7 6 5 4 3 2 1\") == \"3\"\nassert solution(\"14 13\\n6 5 4 3 2 1 0\") == \"2\"\nassert solution(\"15 14\\n5 4 3 2 1 0 0\") == \"3\"\nassert solution(\"16 15\\n4 3 2 1 0 0 0\") == \"2\"\nassert solution(\"17 16\\n3 2 1 0 0 0 0\") == \"3\"\nassert solution(\"18 17\\n2 1 0 0 0 0 0\") == \"2\"\nassert solution(\"19 18\\n1 0 0 0 0 0 0\") == \"3\"\nassert solution(\"20 19\\n0 0 0 0 0 0 0\") == \"2\"\nassert solution(\"21 20\\n0 0 0 0 0 0 0\") == \"3\"\nassert solution(\"22 21\\n0 0 0 0 0 0 0\") == \"2\"\nassert solution(\"23 22\\n0 0 0 0 0 0 0\") == \"3\"\nassert solution(\"24 23\\n0 0 0 0 0 0 0\") == \"2\"\nassert solution(\"25 24\\n0 0 0 0 0 0 0\") == \"3\"\nassert solution(\"26 25\\n0 0 0 0 0 0 0\") == \"2\"\nassert solution(\"27 26\\n0 0 0 0 0 0 0\") == \"3\"\nassert solution(\"28 27\\n0 0 0 0 0 0 0\") == \"2\"\nassert solution(\"29 28\\n0 0 0 0 0 0 0\") == \"3\"\nassert solution(\"30 29\\n0 0 0 0 0 0 0\") == \"2\"\nassert solution(\"31 30\\n0 0 0 0 0 0 0\") == \"3\"\nassert solution(\"32 31\\n0 0 0 0 0 0 0\") == \"2\"\nassert solution(\"33 32\\n0 0 0 0 0 0 0\") == \"3\"\nassert solution(\"34 33\\n0 0 0 0 0 0 0\") == \"2\"\nassert solution(\"35 34\\n0 0 0 0 0 0 0\") == \"3\"\nassert solution(\"36 35\\n0 0 0 0 0 0 0\") == \"2\"\nassert solution(\"37 36\\n0 0 0 0 0 0 0\") == \"3\"\nassert solution(\"38 37\\n0 0 0 0 0 0 0\") == \"2\"\nassert solution(\"39 38\\n0 0 0 0 0 0 0\") == \"3\"\nassert solution(\"40 39\\n0 0 0 0 0 0 0\") == \"2\"\nassert solution(\"41 40\\n0 0 0 0 0 0 0\") == \"3\"\nassert solution(\""
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 127\") == \"1083\""
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 127\") == \"1083\""
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin='1 127') == '1083'"
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 127\") == \"1083\\n\""
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '1083'"
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 1083\nprint(\"All tests passed\")"
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 127') == '1083'"
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(f(1)) == 1083, \"The function should terminate for positive integer X.\""
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 127') == '1083'"
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 127\") == \"1083\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2.0000000000\\n\", \"Test Case 1\"\n\nassert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\\n\", \"Test Case 2\"\n\nassert solution(stdin) == \"3.0000000000\\n\", \"Test Case 3\"\n\nassert solution(stdin) == \"2.0000000000\\n\", \"Test Case 4\"\n\nassert solution(stdin) == \"2.0000000000\\n\", \"Test Case 5\""
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Test failed: {solution(input())}!= {output}\""
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt')) == '2.0000000000', 'Test case 1'\nassert solution(open('input.txt')) == '4.0000000000', 'Test case 2'\nassert solution(open('input.txt')) == '2.0000000000', 'Test case 3'"
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2.0000000000\""
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\") == 2.0, \"The solution is not correct\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\") == 2.0, \"The solution is incorrect.\""
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2.0000000000\\n\""
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin='4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?') == '2.0000000000\\ndef solution(stdin: str) -> str:\\n    pass\\n', 'Test 1'\n\nassert solution(stdin='4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?') == '2.0000000000\\ndef solution(stdin: str) -> str:\\n    pass\\n', 'Test 2'\n\nassert solution(stdin='4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?') == '2.0000000000\\ndef solution(stdin: str) -> str:\\n    pass\\n', 'Test 3'\n\nassert solution(stdin='4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?') == '2.0000000000\\ndef solution(stdin: str) -> str:\\n    pass\\n', 'Test 4'\n\nassert solution(stdin='4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?') == '2.0000000000\\ndef solution(stdin: str) -> str:\\n    pass\\n', 'Test 5'\n\nassert solution(stdin='4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?') == '1.0000000000\\ndef solution(stdin: str) -> str:\\n    pass\\n', 'Test 6'"
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"monstermind.in\", \"r\")) == \"2.0000000000\\n\"\nassert solution(open(\"monstermind.in\", \"r\")) == \"2.0000000000\\n\""
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"POSSIBLE\""
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\n\") == \"POSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 4 monkey penguin lion\\npenguin 1 monkey\\n\") == \"POSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\n\") == \"FALSE ALARM\""
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\") == \"POSSIBLE\"\nassert solution(\"2 1\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\nmonkey 1 lion\") == \"IMPOSSIBLE\"\nassert solution(\"1 1\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\nmonkey 1 lion\") == \"FALSE ALARM\""
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"POSSIBLE\"\n\nclass Solution:\n    def restoreAnimals(self, enclosures: List[str]) -> str:\n        n = len(enclosures)\n        visited = [False] * n\n        result = []\n\n        for i, enclosure in enumerate(enclosures):\n            for j, animal in enumerate(enclosure.split()):\n                if animal == \"empty\":\n                    visited[i] = True\n                    break\n\n        for i in range(n):\n            if not visited[i]:\n                result.append(\"empty\")\n\n        return \" \".join(result)\n\nassert Solution().restoreAnimals([\"monkey 2 lion penguin\", \"lion 3 monkey penguin lion\", \"penguin 1 monkey\"]) == \"FALSE ALARM\""
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey') == 'POSSIBLE'"
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 'POSSIBLE'\n"
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == sample_output, f\"Test case {sample_case_num} failed: {sample_output}!= {sample_output}\""
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"POSSIBLE\", \"Test Failed\"\n"
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\n\") == \"POSSIBLE\"\nassert solution(\"10 7\\ncat 2 duck\\nzebra 3 bear\\nhippo 4 elephant\\n\") == \"IMPOSSIBLE\"\nassert solution(\"5 5\\nmonkey 1 lion\\nzebra 1 bear\\nhippo 1 elephant\\n\") == \"FALSE ALARM\""
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\n') == 'POSSIBLE'"
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"triple correlation 4(1)4(3)3 found\""
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\") == \"triple correlation 4(1)4(3)3 found\"\nassert solution(\"100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n4 7 5 2 3 9 7 1 6 8 0 5 8 6 7 4 1 4 9 0\") == \"random sequence\""
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n\") == \"triple correlation 4(1)4(3)3 found\"\nassert solution(\"50\\n3 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n\") == \"random sequence\"\nassert solution(\"100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n\") == \"random sequence\"\nassert solution(\"50\\n3 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n\") == \"triple correlation 4(1)4(3)3 found\"\nassert solution(\"50\\n3 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2"
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == sample_output, f\"Test case failed: {sample_input} expected {sample_output} but got {solution(sample_input)}\""
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\") == \"triple correlation 4(1)4(3)3 found\\n\"\nassert solution(\"100\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2 0\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7 2\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\") == \"random sequence\\n\"\nassert solution(\"100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4 4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2 0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7 2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8 8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\") == \"triple correlation 4(1)4(3)3 found\\n\"\nassert solution(\"100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4 4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2 0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7 2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8 8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\") == \"triple correlation 4(1)4(3)3 found\\n\"\nassert solution(\"100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4 4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2 0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7 2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8 8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2 0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 "
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(solution(stdin: str)) == 'triple correlation 4(1)4(3)3 found'"
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input) == expected_output, f\"Expected output: {expected_output}\\nGot output: {solution(input)}\""
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\").read()) == \"triple correlation 4(1)4(3)3 found\"\nprint(solution(open(\"input.txt\").read()))"
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\") == \"triple correlation 4(1)4(3)3 found\"\nassert solution(\"100\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\") == \"triple correlation 2(1)3(1)3 found\"\nassert solution(\"100\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7 2\") == \"random sequence\""
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4 4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2 0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7 2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8 8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9) == \"triple correlation 4(1)4(3)3 found\""
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '40.5'"
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"40.5\\n\"\n"
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\\n39\\n10\\n40\") == \"40.5\"\nassert solution(\"3 1\\n39\\n10\\n40.1\") == \"40.5\"\nassert solution(\"3 1\\n39\\n10\\n39.9\") == \"39.9\"\nassert solution(\"3 1\\n39\\n10\\n40\") == \"40.5\"\nassert solution(\"3 1\\n39\\n10\\n40.1\") == \"40.5\"\nassert solution(\"3 1\\n39\\n10\\n39.9\") == \"39.9\""
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"3 1\\n39\\n10\\n40\\n\") == \"40.5\\n\""
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"3 1\\n39\\n10\\n40\\n\") == \"40.5\\n\"\nassert solution(stdin=\"2 2\\n15\\n20\\n\") == \"25.0\\n\"\nassert solution(stdin=\"5 3\\n15\\n20\\n\") == \"35.656565656565655\\n\"\nassert solution(stdin=\"3 2\\n20\\n10\\n\") == \"20.0\\n\"\nassert solution(stdin=\"4 1\\n20\\n\") == \"20.0\\n\"\nassert solution(stdin=\"2 1\\n10\\n\") == \"10.0\\n\""
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, 1) == 40.5"
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n    3 1\n    39\n    10\n    40\n''') == '40.5\\n'"
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 40.5, \"Test failed\""
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1\\n39\\n10\\n40\") == \"40.5\""
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Error: Input: {input()}, Output: {output()}\""
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"Impossible\"\nassert solution(\"6 4\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"Impossible\"\nassert solution(\"4 4\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"Impossible\"\nassert solution(\"4 2\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"Impossible\""
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"Impossible\""
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987') == 'Impossible'"
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(None) == \"Impossible\""
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987') == 'Impossible'\nassert solution('4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987') == '2019'"
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987') == 'Impossible'\nassert solution('4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n4 3 1987\\n1 1 1988\\n1 4 1988\\n2 4 1988\\n3 4 1988\\n') == 'Impossible'\nassert solution('4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n4 3 1987\\n1 1 1988\\n1 4 1988\\n2 4 1988\\n3 4 1988\\n4 5 1988\\n1 5 1988\\n2 5 1988\\n3 5 1988\\n4 5 1988\\n') == 'Impossible'\nassert solution('4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n4 3 1987\\n1 1 1988\\n1 4 1988\\n2 4 1988\\n3 4 1988\\n4 5 1988\\n1 5 1988\\n2 5 1988\\n3 5 1988\\n4 5 1988\\n5 4 1988\\n1 4 1988\\n2 4 1988\\n3 4 1988\\n4 5 1988\\n5 4 1988\\n') == 'Impossible'\nassert solution('4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n4 3 1987\\n1 1 1988\\n1 4 1988\\n2 4 1988\\n3 4 1988\\n4 5 1988\\n1 5 1988\\n2 5 1988\\n3 5 1988\\n4 5 1988\\n5 4 1988\\n1 4 1988\\n2 4 1988\\n3 4 1988\\n4 5 1988\\n5 4 1988\\n5 5 1988\\n1 5 1988\\n2 5 1988\\n3 5 1988\\n4 5 1988\\n5 5 1988\\n') == '1988'"
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution(stdin) == 'Impossible'\nassert solution("
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin='4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987') == 'Impossible\\n'\nassert solution(stdin='4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987') == '1987\\n'\nassert solution(stdin='4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987') == '1988\\n'\nassert solution(stdin='4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987') == '2008\\n'"
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"Impossible\""
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(None) == 'Impossible'"
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 1\") == \"impossible\""
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 'impossible'"
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 1\") == \"impossible\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 1\") == \"impossible\"\n"
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"impossible\""
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 1\") == \"impossible\"\nprint(\"All tests passed successfully\")"
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 1\") == \"impossible\"\nassert solution(\"1 2\\n3 1\\n2 0\") == 3\nassert solution(\"1 1\\n2 2\\n3 3\") == 4\n"
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 1\") == \"impossible\""
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 1\") == \"impossible\\n\""
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('(()') == 10) # Test 1\nassert solution('(())') == 0 # Test 2\nassert solution('(())') == 0 # Test 3\nassert solution('()()') == 10 # Test 4\nassert solution('(())') == 0 # Test 5\nassert solution('(())') == 0 # Test 6"
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('()') == 10\nassert solution('(())') == 20\nassert solution('()()') == 10\nassert solution('((())') == 10\nassert solution('((()))') == 20\nassert solution('())(())') == 20\nassert solution('(()())') == 20\nassert solution('(()))') == 20\nassert solution('())') == 20"
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 10, \"Expected: 10, got: {}\".format(solution(3))"
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"())\\n((()\\n())()\\n\") == 10, \"Expected 10, got {} instead.\".format(solution(\"())\\n((()\\n())()\\n\"))\nassert solution(\"())\\n((()\\n)()\\n\") == 10, \"Expected 10, got {} instead.\".format(solution(\"())\\n((()\\n)()\\n\"))\nassert solution(\"())\\n((()\\n)()\\n\") == 10, \"Expected 10, got {} instead.\".format(solution(\"())\\n((()\\n)()\\n\"))\nassert solution(\"())\\n((()\\n)()\\n\") == 10, \"Expected 10, got {} instead.\".format(solution(\"())\\n((()\\n)()\\n\"))\nassert solution(\"())\\n((()\\n)()\\n\") == 10, \"Expected 10, got {} instead.\".format(solution(\"())\\n((()\\n)()\\n\"))"
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 10, \"Incorrect output\""
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 10, \"Expected result: 10\""
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n())\\n((()()\\n)()\") == 10, \"The length of the longest string of balanced parentheses is not correct.\""
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"()\") == \"()\"\nassert solution(\"(())\") == \"(()\"\nassert solution(\"((()))\") == \"(()\"\nassert solution(\"()((())\")) == \"()(()\"\nassert solution
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n())\\n((()\\n)()\") == 10\n"
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 10\nassert solution(4) == 17\nassert solution(1) == 1\nassert solution(5) == 25\nassert solution(6) == 25\nassert solution(7) == 30\nassert solution(8) == 30"
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"9\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\\n\") == 85293\n"
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"9\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\") == \"85293\"\n"
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"9\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\\n\") == \"85293\""
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"85293\""
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"9\\na\\n455 h\\na\\n211 a\\na\\n134 a\\n46 h\\na\\n111 h\\n213 h\\na\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\\n\") == \"85293\""
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('9\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8') == '85293'"
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n9\n377 a\n455 h\n180 a\n211 a\n134 a\n46 h\n111 h\n213 h\n17 a\n15\n1 2\n1 4\n1 6\n2 3\n2 4\n2 5\n3 5\n4 6\n4 7\n4 9\n5 7\n5 8\n6 9\n7 9\n7 8\n''') == '85293'\n"
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '85293'"
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('9\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\\n') == '85293'"
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"9\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\\n\") == \"85293\""
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\") == 5\nprint(\"All tests passed!\")"
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n') == '5'\nassert solution('3 2\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n') == '2'\nassert solution('5 3\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n') == '5'\nassert solution('5 2\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n') == '5'\nassert solution('2 3\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n') == '3'\nassert solution('4 10\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n') == '1'\nassert solution('5 1\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n') == '1'\nassert solution('3 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n') == '0'\nassert solution('2 2\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n') == '0'\nassert solution('3 3\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n') == '0'\nassert solution('4 4\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n') == '0'\nassert solution('4 6\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n') == '0'\nassert solution('3 7\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n') == '0'\nassert solution('4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n') == '0'\nassert solution('4 7\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n') == '0'\nassert solution('5 6\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n') == '0'\nassert solution('5 7\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n') == '0'\nassert solution('6 7\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n') == '0'\nassert solution('4 8\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n') == '0'\nassert solution('5 8\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n') == '0'\nassert solution('6 8\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n') == '0'\nassert solution('7 9\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n') == '0'\nassert solution('6 10\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n') == '0'\nassert solution('7 11\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n') == '0'\nassert solution('8 12\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n') == '0'\nassert solution('7 13\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n') == '0'\nassert solution('9 14"
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''4 5\n1 2\n1 3\n2 3\n1 4\n2 4''') == '5\\n'\n\nassert solution('''4 5\n1 2\n1 3\n2 3\n1 4\n2 4''') == '5\\n'\n\nassert solution('''4 5\n1 2\n1 3\n2 3\n1 4\n2 4''') == '5\\n'\n\nassert solution('''4 5\n1 2\n1 3\n2 3\n1 4\n2 4''') == '5\\n'\n\nassert solution('''4 5\n1 2\n1 3\n2 3\n1 4\n2 4''') == '5\\n'"
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\") == 5\n"
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4') == '5\\n'\nassert solution('3 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4') == '5\\n'\nassert solution('3 7\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4') == '12\\n'\nassert solution('5 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4') == '0\\n'\nassert solution('7 8\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4') == '0\\n'\nassert solution('4 7\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4') == '0\\n'"
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\") == \"5\\n\"\nassert solution(\"1 2\\n1 3\\n2 3\\n1 4\\n2 4\") == \"5\\n\"\nassert solution(\"5 0\\n1 2\\n3 4\\n5 6\\n7 8\") == \"2\\n\"\nassert solution(\"3 1\\n1 3\\n2 3\\n2 5\\n3 7\\n4 5\\n5 6\\n6 8\") == \"11\\n\"\nassert solution(\"4 7\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n1 3\\n2 4\\n3 5\\n4 6\\n5 7\\n6 8\\n7 9\") == \"23\\n\""
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('sample_input.txt', 'r').read()) == '5\\n'\n"
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n\") == \"5\\n\""
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n') == 5, \"Output: 5, but should be 5\""
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n3 caterpillar 3 pupa 7 butterfly\\n3 dove 3 pigeon 7 aaabaaajss\\n3 mouse 1 electromouse 5 rat\\n7\\n0 electromouse\\n500 electromouse\\n1000 electromouse\\n1500 rat\\n2000 aaabaaajss\\n2500 pigeon\\n3000 butterfly') == 5100, \"Invalid output\""
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3 caterpillar 3 pupa 7 butterfly\\n3 dove 3 pigeon 7 aaabaaajss\\n3 mouse 1 electromouse 5 rat\\n7\\n0 electromouse\\n500 electromouse\\n1000 electromouse\\n1500 rat\\n2000 aaabaaajss\\n2500 pigeon\\n3000 butterfly\") == 5100\n"
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n3 caterpillar 3 pupa 7 butterfly\\n3 dove 3 pigeon 7 aaabaaajss\\n3 mouse 1 electromouse 5 rat\\n7\\n0 electromouse\\n500 electromouse\\n1000 electromouse\\n1500 rat\\n2000 aaabaaajss\\n2500 pigeon\\n3000 butterfly') == '5100\\n'\nprint(\"All tests passed\")"
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n3 caterpillar 3 pupa 7 butterfly\\n3 dove 3 pigeon 7 aaabaaajss\\n3 mouse 1 electromouse 5 rat\\n7\\n0 electromouse\\n500 electromouse\\n1000 electromouse\\n1500 rat\\n2000 aaabaaajss\\n2500 pigeon\\n3000 butterfly\") == \"5100\""
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n3 caterpillar 3 pupa 7 butterfly\\n3 dove 3 pigeon 7 aaabaaajss\\n3 mouse 1 electromouse 5 rat\\n7\\n0 electromouse\\n500 electromouse\\n1000 electromouse\\n1500 rat\\n2000 aaabaaajss\\n2500 pigeon\\n3000 butterfly') == '5100\\n'"
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '5100'\n"
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n3 caterpillar 3 pupa 7 butterfly\\n3 dove 3 pigeon 7 aaabaaajss\\n3 mouse 1 electromouse 5 rat\\n7\\n0 electromouse\\n500 electromouse\\n1000 electromouse\\n1500 rat\\n2000 aaabaaajss\\n2500 pigeon\\n3000 butterfly\") == \"5100\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n3 caterpillar 3 pupa 7 butterfly\\n3 dove 3 pigeon 7 aaabaaajss\\n3 mouse 1 electromouse 5 rat\\n7\\n0 electromouse\\n500 electromouse\\n1000 electromouse\\n1500 rat\\n2000 aaabaaajss\\n2500 pigeon\\n3000 butterfly') == '5100'"
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly''') == '5100'"
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"5100\""
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n    5\n    0\n    1 1\n    1 1\n    2 2 3\n    1 4\n    8\n    1\n    2\n    3\n    1\n    4\n    2\n    3\n    5\n    ''') == '6\\n1\\n2\\n3\\n1\\n4\\n5\\n'\n\nassert solution('''\n    10\n    0\n    1 1\n    1 1\n    2 2 3\n    1 4\n    8\n    1\n    2\n    3\n    1\n    4\n    2\n    3\n    5\n    ''') == '-1\\n'\n\nassert solution('''\n    10\n    0\n    1 1\n    1 1\n    2 2 3\n    1 4\n    8\n    1\n    2\n    3\n    1\n    4\n    2\n    3\n    5\n    ''') == '-1\\n'"
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\""
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n5\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5\n''') == '6\\n1\\n2\\n3\\n1\\n4\\n5\\n'\n\nassert solution('''\n10\n1\n2\n3\n1\n4\n2\n3\n5\n6\n7\n8\n9\n10\n''') == '6\\n2\\n3\\n1\\n4\\n5\\n'\n\nassert solution('''\n1\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5\n''') == '-1\\n'\n\nassert solution('''\n1\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == '6\\n2\\n3\\n1\\n4\\n5\\n'"
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\""
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_data) == output_data, f\"Test failed for input {input_data}, expected output {output_data}\""
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5') == '6\\n1\\n2\\n3\\n1\\n4\\n5'"
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n    5\n    0\n    1 1\n    1 1\n    2 2 3\n    1 4\n    8\n    1\n    2\n    3\n    1\n    4\n    2\n    3\n    5\n    ''') == '''\n    6\n    1\n    2\n    3\n    1\n    4\n    5\n    '''\n\nassert solution('''\n    5\n    0\n    1 1\n    1 1\n    2 2 3\n    1 4\n    8\n    1\n    2\n    3\n    1\n    4\n    2\n    3\n    5\n    ''') == '''\n    6\n    1\n    2\n    3\n    1\n    4\n    5\n    '''\n\nassert solution('''\n    5\n    0\n    1 1\n    1 1\n    2 2 3\n    1 4\n    8\n    1\n    2\n    3\n    1\n    4\n    2\n    3\n    5\n    ''') == '''\n    6\n    1\n    2\n    3\n    1\n    4\n    5\n    '''\n\nassert solution('''\n    5\n    0\n    1 1\n    1 1\n    2 2 3\n    1 4\n    8\n    1\n    2\n    3\n    1\n    4\n    2\n    3\n    5\n    ''') == '''\n    6\n    1\n    2\n    3\n    1\n    4\n    5\n    '''\n\nassert solution('''\n    5\n    0\n    1 1\n    1 1\n    2 2 3\n    1 4\n    8\n    1\n    2\n    3\n    1\n    4\n    2\n    3\n    5\n    ''') == '''\n    6\n    1\n    2\n    3\n    1\n    4\n    5\n    '''"
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n    5\n    0\n    1 1\n    1 1\n    2 2 3\n    1 4\n    8\n    1\n    2\n    3\n    1\n    4\n    2\n    3\n    5\n''') == '''\n6\n1\n2\n3\n1\n4\n5\n'''"
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\\n') == '10\\n'"
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n2 5\n1 2 1 2 1\n4\n1 2 R 6\n1 2 O 3\n2 1 O 3\n1 2 R 5\n''') == 10"
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n2 5\n1 2 1 2 1\n4\n1 2 R 6\n1 2 O 3\n2 1 O 3\n1 2 R 5\n''') == '10'\n\nassert solution('''\n5 3\n1 2 3\n1 3 4\n2 3 1\n3 3 2\n4 3 1\n''') == '10'\n\nassert solution('''\n3 4\n1 2 3\n2 3 4\n3 4 1\n4 4 2\n''') == '10'\n\nassert solution('''\n2 2\n1 2\n2 2\n''') == '10'\n\nassert solution('''\n5 5\n1 2 3 4 5\n1 2 3 5 4\n2 2 3 4 5\n3 3 3 4 5\n4 4 4 4 5\n''') == '10'\n\nassert solution('''\n6 6\n1 2 3 4 5 6\n1 2 3 5 6 4\n2 2 3 4 5 6\n3 3 3 4 5 6\n4 4 4 4 5 6\n5 5 5 5 5 6\n''') == '10'\n\nassert solution('''\n7 7\n1 2 3 4 5 6 7\n1 2 3 5 6 7 4\n2 2 3 4 5 6 7\n3 3 3 4 5 6 7\n4 4 4 4 5 6 7\n5 5 5 5 5 6 7\n6 6 6 6 6 7 4\n''') == '10'"
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\\n\") == \"10\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\\n') == '10\\n'"
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\") == \"10\\n\""
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Solution failed. Expected output: {output}, got: {solution(input())}\""
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Test Case {t} Failed. Expected: {output()}, Got: {solution(input())}\"\n"
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\\n') == '10'"
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\") == \"10\\n\"\nassert solution(\"2 3\\n1 2 1\\n1 3 1\") == \"1\\n\""
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 3\\n0 1\\n1 2\\n2 3\\n') == '1\\n'"
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n0 1\\n1 2\\n2 3\") == 1, \"The output is incorrect.\""
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n'\n"
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n4 3\n0 1\n1 2\n2 3\n\"\"\"\n) == \"1\\n\""
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 3\\n0 1\\n1 2\\n2 3') == '1\\n'\nassert solution('5 3\\n0 1\\n1 2\\n2 3\\n4 5\\n5 4') == '1\\n'"
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 3\\n0 1\\n1 2\\n2 3') == '1\\n'\nassert solution('5 5\\n0 1\\n1 2\\n2 3\\n0 4\\n4 0') == '1\\n'\nassert solution('6 7\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7') == '1\\n'\nassert solution('7 6\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 5') == '1\\n'\n"
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n4 3\n0 1\n1 2\n2 3\n''') == '1\\n'"
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 1\n"
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 1"
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"1\\n\""
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 0.962962962963\n"
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == '0.962962962963'"
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == 0.962962962963\nassert solution(2) == 0.037037037037\nassert solution(3) == 0.002311127473\nassert solution(4) == 0.000038891799\nassert solution(5) == 0.000002358934\nassert solution(6) == 0.000000000422\nassert solution(7) == 0.000000000000\nassert solution(8) == 0.000000000000\nassert solution(9) == 0.000000000000\nassert solution(10) == 0.000000000000\nassert solution(11) == 0.000000000000\nassert solution(12) == 0.000000000000\nassert solution(13) == 0.000000000000\nassert solution(14) == 0.000000000000\nassert solution(15) == 0.000000000000\nassert solution(16) == 0.000000000000\nassert solution(17) == 0.000000000000\nassert solution(18) == 0.000000000000\nassert solution(19) == 0.000000000000\nassert solution(20) == 0.000000000000\nassert solution(21) == 0.000000000000\nassert solution(22) == 0.000000000000\nassert solution(23) == 0.000000000000\nassert solution(24) == 0.000000000000\nassert solution(25) == 0.000000000000\nassert solution(26) == 0.000000000000\nassert solution(27) == 0.000000000000\nassert solution(28) == 0.000000000000\nassert solution(29) == 0.000000000000\nassert solution(30) == 0.000000000000\nassert solution(31) == 0.000000000000\nassert solution(32) == 0.000000000000\nassert solution(33) == 0.000000000000\nassert solution(34) == 0.000000000000\nassert solution(35) == 0.000000000000\nassert solution(36) == 0.000000000000\nassert solution(37) == 0.000000000000\nassert solution(38) == 0.000000000000\nassert solution(39) == 0.000000000000\nassert solution(40) == 0.000000000000\nassert solution(41) == 0.000000000000\nassert solution(42) == 0.000000000000\nassert solution(43) == 0.000000000000\nassert solution(44) == 0.000000000000\nassert solution(45) == 0.000000000000\n"
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 0.962962962963, \"Incorrect output\"\nprint(f\"Correct output: {0.962962962963}\")"
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    4\n    \"\"\"\n) == \"\"\"\n0.962962962963\n\"\"\""
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"0.962962962963\", \"Incorrect output. Expected '0.962962962963', got '{}'.\".format(solution(stdin))"
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '0.962962962963', \"The expected output is not obtained.\""
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 0.962962962963, \"The probability that the randomly built road network with 4 cities and 4 roads is connected is incorrect.\""
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n\") == \"0.962962962963\\n\", \"The expected output is incorrect.\""
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(4) == \"0.962962962963\", \"Incorrect output\""
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"0 0\\n40000000 0\\n0 40000000\"\nassert solution(4) == \"0 0\\n40000000 0\\n40000000 40000000\"\nassert solution(5) == \"0 0\\n40000000 0\\n40000000 40000000\\n0 40000000\""
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"0 0\\n40000000 0\\n0 40000000\"\nprint(solution(3))"
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"0 0\\n40000000 0\\n0 40000000\"\n"
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"The output is {output}, but your code is {solution(input())}\""
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"\"\"\n0 0\n40000000 0\n0 40000000\n\"\"\""
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n\") == \"0 0\\n40000000 0\\n0 40000000\\n\"\nassert solution(\"4\\n\") == \"0 0\\n40000000 0\\n0 40000000\\n\"\nassert solution(\"12\\n\") == \"0 0\\n40000000 0\\n0 40000000\\n\"\nassert solution(\"13\\n\") == \"0 0\\n40000000 0\\n0 40000000\\n\"\nassert solution(\"14\\n\") == \"0 0\\n40000000 0\\n0 40000000\\n\""
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"0 0\\n40000000 0\\n0 40000000\""
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == ['0 0', '40000000 0', '0 40000000']"
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n') == '0 0\\n40000000 0\\n0 40000000\\n'\n"
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '0 0\\n40000000 0\\n0 40000000\\n'\n"
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, \"Your solution is incorrect. Please check the problem statement and examples provided.\""
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"3 5 5 2\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"0\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"impossible\"\n"
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 5 5 2') == '1', \"The first expression should result in the value 24.\"\n"
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '1\\n'\n"
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 5 5 2\") == \"1\""
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 5 5 2') == '1\\n'\nassert solution('2 3 4 9') == 'impossible\\n'\n"
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 5 5 2') == '1'\nassert solution('2 3 4 9') == 'impossible'\nassert solution('5 6 7 8 9') == 'impossible'"
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 5 5 2') == '1\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1\"\nprint(\"PASS\")"
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0') == '2'\n"
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == sample_output, \"Your solution is incorrect. Please see the example provided for the correct format.\""
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"2\"\nassert solution(\"10 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"0\"\nassert solution(\"10 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n20 0 0\") == \"0\"\nassert solution(\"10 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n20 0 0\") == \"0\"\nassert solution(\"10 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n10 0 0\") == \"0\"\nassert solution(\"10 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n10 0 0\") == \"0\"\nassert solution(\"10 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n10 0 0\") == \"0\""
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n20 3 5 5\n0 0 0\n0 -10 0\n30 0 0\n0 0 0\n\"\"\"\n) == \"2\\n\"\n"
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2\\n\"\nassert solution() == \"0\\n\""
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"2\"\nassert solution(\"3 1 0 0\\n-1 2 3 4\\n-10 20 30\\n50 50 50\\n50 50 50\") == \"15\"\n"
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"2\"\n"
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"Output is {output()}, but should be {output()}\""
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"2\"\n"
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(13) == \"12 14\""
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(13) == '12 14', 'Test failed'"
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(13) == \"12 14\""
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"13\") == \"12 14\\n\", \"Solution should work correctly\""
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(13) == '12 14', \"Solution is incorrect\"\n"
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Solution is incorrect. Expected: {expected}, Received: {solution(input())}\""
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(13) == \"12 14\\n\""
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('13') == '12 14', 'Test failed'\n"
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"12 14\"\nassert solution(\"13\") == \"12 14\"\nassert solution(\"15\") == \"12 15\"\nassert solution(\"1234\") == \"12 13\"\nassert solution(\"1523\") == \"12 15\"\n"
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('13') == '12 14'"
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1') == '0'"
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1') == 0, \"Solution is incorrect.\"\nprint(solution('5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1'))"
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\") == 0\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n\") == 0\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n0\\n\") == 0\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n0\\n1\\n1\\n0\\n\") == 1\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n0\\n1\\n1\\n0\\n0\\n\") == 1\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n0\\n1\\n1\\n0\\n0\\n0\\n\") == 1\n"
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"0\"\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\") == \"0\"\nassert solution(\"5\\n1 1 1\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\") == \"3\"\nassert solution(\"5\\n1 0 1\\n1 0 0\\n3 0 1\\n3 0 0\\n3 0 1\") == \"0\"\nassert solution(\"5\\n1 0 1\\n1 1 1\\n3 0 1\\n3 0 0\\n3 0 1\") == \"2\""
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"0\\n\", solution(stdin)"
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\") == \"0\\n0\"\n"
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 0, \"Solution should be 0\"\nassert solution() == 0, \"Solution should be 0\""
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('halloween.txt').read()) == '0'\n"
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"0\\n\"  # 0"
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 0, \"The solution is not correct.\""
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n\", \"Please implement the solution function and test it.\""
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\"\nassert solution(\"6 7\") == \"-1\"\nassert solution(\"1 1\") == \"1 1\"\nassert solution(\"3 4\") == \"-1\"\nassert solution(\"1 1 2 3 4\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\""
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 3') == '1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3'"
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n\"\n"
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n2 3\n\"\"\") == \"\"\"\n1 1\n2 2\n1 3\n2 1\n1 2\n2 3\n\"\"\".strip()\n\nassert solution(\"\"\"\n3 3\n\"\"\") == \"\"\"\n1 1\n2 2\n3 3\n\"\"\".strip()\n\nassert solution(\"\"\"\n4 5\n\"\"\") == \"\"\"\n1 1\n2 2\n3 3\n4 4\n5 5\n\"\"\".strip()\n\nassert solution(\"\"\"\n6 6\n\"\"\") == \"\"\"\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n\"\"\".strip()\n\nassert solution(\"\"\"\n7 7\n\"\"\") == \"\"\"\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n\"\"\".strip()\n\nassert solution(\"\"\"\n8 8\n\"\"\") == \"\"\"\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n\"\"\".strip()\n\nassert solution(\"\"\"\n9 9\n\"\"\") == \"\"\"\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n\"\"\".strip()\n\nassert solution(\"\"\"\n10 10\n\"\"\") == \"\"\"\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n\"\"\".strip()\n\nassert solution(\"\"\"\n11 11\n\"\"\") == \"\"\"\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n11 11\n\"\"\".strip()\n\nassert solution(\"\"\"\n12 12\n\"\"\") == \"\"\"\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n11 11\n12 12\n\"\"\".strip()\n\nassert solution(\"\"\"\n13 13\n\"\"\") == \"\"\"\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n11 11\n12 12\n13 13\n\"\"\".strip()\n\nassert solution(\"\"\"\n14 14\n\"\"\") == \"\"\"\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n11 11\n12 12\n13 13\n14 14\n\"\"\".strip()\n\nassert solution(\"\"\"\n15 15\n\"\"\") == \"\"\"\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n11 11\n12 12\n13 13\n14 14\n15 15\n\"\"\".strip()\n\nassert solution(\"\"\"\n16 16\n\"\"\") == \"\"\"\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n11 11\n12 12\n13 13\n14 14\n15 15\n16 16\n\"\"\".strip()\n\nassert solution(\"\"\"\n17 17\n\"\"\") == \"\"\"\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n11 11\n12 12\n13 13\n14 14\n15 15\n16 16\n17 17\n\"\"\".strip()\n\nassert solution(\"\"\"\n18 18\n\"\"\") == \"\"\"\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n11 11\n12 12\n13 13\n1"
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 3\\n') == '1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n'\nassert solution('4 5\\n') == '-1\\n'\nassert solution('1 1\\n') == '1 1\\n'\nassert solution('2 2\\n') == '2 1\\n1 3\\n2 2\\n1 1\\n'\nassert solution('5 5\\n') == '1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n'\nassert solution('1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n') == '1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n'"
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == '1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3'"
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"Test Failed\"\nelse:\n    print(\"Test Passed\")"
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(b'2 3\\n') == '1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n'\n"
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\""
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\n\\n# assert solution(open('input.txt', 'r')) == ['3.33333333', '3.33333333', '3.33333333']\\n# assert solution(open('input2.txt', 'r')) == ['3.33333333', '3.33333333', '3.33333333']\\n# assert solution(open('input3.txt', 'r')) == ['3.33333333', '3.33333333', '3.33333333']\"\nassert len(solution.split('\\n')) == 5\nassert all(map(lambda x: x.strip() == 'def solution(stdin: str) -> str:', solution.split('\\n')))\nassert all(map(lambda x: x.strip() == '# Test cases', solution.split('\\n')))\nassert all(map(lambda x: x.strip() == 'assert solution(open(\\'input.txt\\', \\'r\\')) == [' +''.join(map(str, ['3.33333333'])) + ']', solution.split('\\n')[1:]))\nassert all(map(lambda x: x.strip() == 'assert solution(open(\\'input2.txt\\', \\'r\\')) == [' +''.join(map(str, ['3.33333333'])) + ']', solution.split('\\n')[1:]))\nassert all(map(lambda x: x.strip() == 'assert solution(open(\\'input3.txt\\', \\'r\\')) == [' +''.join(map(str, ['3.33333333'])) + ']', solution.split('\\n')[1:]))"
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 10\\n0 10 1\\n0 10 1\\n0 10 1\") == \"3.33333333\\n3.33333333\\n3.33333333\"\nassert solution(\"3 10\\n0 10 1\\n0 10 1\\n0 10 1\\n2 8 1\") == \"3.33333333\\n3.33333333\\n3.33333333\\n6.66666667\\n6.66666667\""
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 10\\n0 10 1\\n0 10 1\\n0 10 1\") == \"3.33333333\\n3.33333333\\n3.33333333\"\nassert solution(\"3 10\\n1 10 1\\n1 10 1\\n1 10 1\") == \"3.33333333\\n3.33333333\\n3.33333333\"\nassert solution(\"3 10\\n0 10 1\\n0 10 1\\n0 10 1\") == \"3.33333333\\n3.33333333\\n3.33333333\""
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"3.33333333\\n3.33333333\\n3.33333333\""
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 10\\n0 10 1\\n0 10 1\\n0 10 1\") == \"3.33333333\\n3.33333333\\n3.33333333\""
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == ['3.33333333', '3.33333333', '3.33333333']\n"
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"3.33333333\\n3.33333333\\n3.33333333\""
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 10\\n0 10 1\\n0 10 1\\n0 10 1\\n') == '3.33333333\\n3.33333333\\n3.33333333\\n'"
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 10\\n0 10 1\\n0 10 1\\n0 10 1') == '3.33333333'\nassert solution('2 1\\n0 1 1\\n0 1 1') == '1.66666667'\nassert solution('1 1 2\\n0 1 1\\n0 1 1') == '1.66666667'"
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(4) == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(5) == \"1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin: str) == \"1\\n\""
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin: str) == \"1\\n\"\nassert solution(stdin: str) == \"1\\n\"\nassert solution(stdin: str) == \"1\\n\""
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '1\\n1\\n'  # Sample Output"
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 1\n\nimport sys"
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"1\\n\""
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"1\\ndef solution(stdin: str) -> str:\n    n = int(stdin.readline())\n    p = list(map(int, stdin.readline().split()))\n    max_points = max(p)\n    matched_teams = set()\n\n    for i in range(n):\n        for j in range(i+1, n):\n            if p[i] + p[j] == max_points:\n                matched_teams.add((i+1, j+1))\n\n    return str(len(matched_teams))"
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"sample_input.txt\", \"r\").read()) == \"1\\n1\\n1\\n\"\nassert solution(open(\"sample_input_1.txt\", \"r\").read()) == \"1\\n3\\n2\\n\"\nassert solution(open(\"sample_input_2.txt\", \"r\").read()) == \"2\\n3\\n1\\n\"\nassert solution(open(\"sample_input_3.txt\", \"r\").read()) == \"1\\n2\\n2\\n\"\nassert solution(open(\"sample_input_4.txt\", \"r\").read()) == \"2\\n2\\n1\\n\"\nassert solution(open(\"sample_input_5.txt\", \"r\").read()) == \"3\\n3\\n1\\n\""
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n3 3 2\") == \"1\"\nassert solution(\"4\\n5 4 3\\n5 3 4\") == \"1\"\nassert solution(\"5\\n3 6 2\\n5 2 3\\n4 4 2\") == \"2\"\nassert solution(\"6\\n4 7 1\\n3 6 3\\n5 3 4\\n4 5 2\") == \"2\"\nassert solution(\"7\\n5 8 1\\n4 7 2\\n3 6 3\\n5 4 4\\n4 6 2\") == \"2\"\nassert solution(\"8\\n6 9 1\\n5 8 2\\n4 7 3\\n5 5 4\\n4 7 2\") == \"3\"\nassert solution(\"9\\n7 10 1\\n6 9 2\\n5 8 3\\n6 5 4\\n5 7 2\") == \"3\"\nassert solution(\"10\\n8 11 1\\n7 10 2\\n6 9 3\\n7 5 4\\n6 7 2\") == \"4\"\n"
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"1\\n\"\n"
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\nabba\") == 2, \"Testcase 1 failed.\"\nassert solution(\"4 2\\nabbac\") == 3, \"Testcase 2 failed.\"\nassert solution(\"4 2\\nabcab\") == 4, \"Testcase 3 failed.\"\nassert solution(\"4 2\\nababb\") == 5, \"Testcase 4 failed.\"\nassert solution(\"4 2\\nababba\") == 6, \"Testcase 5 failed.\""
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '2\\n'"
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\nabba\\n\") == \"2\"\nassert solution(\"4 2\\nabc\\n\") == \"1\"\nassert solution(\"4 2\\nacd\\n\") == \"2\"\nassert solution(\"4 2\\nabcde\\n\") == \"4\"\nassert solution(\"4 2\\nabcdefghijklmnopqrstuvwxyz\\n\") == \"4\""
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\nabba\\n\") == \"2\\n\", \"The solution is incorrect.\""
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, \"The output is incorrect.\""
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Test Failed: Output {output} does not match expected output {output}\"\n\nfor i in range(input()):\n    n, k = map(int, input().split())\n    watch_later = list(map(str.lower, input().split()))\n    result = solution(watch_later)\n    print(result)"
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 2\\nabba') == '2'\nassert solution('4 3\\nabba\\nde\\nce') == '2'\nassert solution('4 3\\nbe\\nde\\nce') == '3'\nassert solution('4 3\\nbe\\na\\nde\\nce') == '4'\n"
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\nabba\\n\") == \"2\"\nassert solution(\"4 3\\ncba\\nxyz\\n\") == \"2\"\nassert solution(\"4 1\\nbab\\nxyz\\n\") == \"2\"\nassert solution(\"4 2\\nabba\\nxyz\\n\") == \"2\"\nassert solution(\"4 3\\nbad\\ncba\\nxyz\\n\") == \"2\"\nassert solution(\"4 1\\nabc\\nbab\\nxyz\\n\") == \"2\"\nassert solution(\"4 2\\nabba\\nxyz\\nabc\\n\") == \"2\"\nassert solution(\"4 3\\nbad\\ncba\\nxyz\\nabc\\n\") == \"2\"\nassert solution(\"4 1\\nabc\\nbab\\nxyz\\nabc\\n\") == \"2\""
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n2 4\") == 3"
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n4 3\n1 2\n2 3\n2 4\n''') == '3'\n\nassert solution('''\n4 3\n1 2\n2 3\n1 1\n''') == '0'\n\nassert solution('''\n4 3\n1 2\n2 3\n3 3\n''') == '2'\n\nassert solution('''\n4 3\n1 2\n2 3\n1 1\n3 1\n''') == '0'\n\nassert solution('''\n4 3\n1 2\n2 3\n3 3\n1 2\n''') == '3'"
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n2 4\") == \"3\"\nassert solution(\"5 3\\n1 2\\n2 3\\n2 4\\n2 5\") == \"5\""
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 3\\n1 2\\n2 3\\n2 4') == 3\nprint('All tests passed!')"
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n2 4\") == 3\nassert solution(\"4 3\\n1 2\\n2 3\\n2 4\\n2 5\\n1 5\") == 6\nassert solution(\"10 10\\n2 3\\n1 2\\n3 4\\n4 5\\n5 6\") == 12\nassert solution(\"10 10\\n2 3\\n1 2\\n3 4\\n4 5\\n5 6\\n1 7\\n3 8\\n4 9\\n5 10\") == 32"
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('example.in').read()) == '3\\n'\n"
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n2 4\") == 3\nprint(\"All test cases pass\")"
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 3\\n1 2\\n2 3\\n2 4') == '3'\nassert solution('6 3\\n1 2\\n3 2\\n4 3') == '4'\nassert solution('3 3\\n1 2\\n3 2\\n4 3') == '3'"
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == \"3\\n\""
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3\") == \"1\\n0\"\nassert solution(\"3 2\\n1 0\\n0 1\\n1000 1\\n1 1\\n2 3\\n2 4\") == \"1\\n0\"\nassert solution(\"3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3\\n2 4\") == \"1\\n1\"\nassert solution(\"3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3\\n2 4\\n3 1\\n4 1\\n4 3\") == \"1\\n0\"\nassert solution(\"3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3\\n2 4\\n3 1\\n4 1\\n4 3\\n3 5\\n4 5\\n4 7\") == \"1\\n0\"\nassert solution(\"3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3\\n2 4\\n3 1\\n4 1\\n4 3\\n3 5\\n4 5\\n4 7\\n3 5\\n4 5\\n4 7\\n3 5\\n4 5\\n4 7\\n3 5\\n4 5\\n4 7\\n3 5\\n4 5\\n4 7\\n3 5\\n4 5\\n4 7\\n3 5\\n4 5\\n4 7\\n3 5\\n4 5\\n4 7\\n3 5\\n4 5\\n4 7\\n3 5\\n4 5\\n4 7\\n3 5\\n4 5\\n4 7\\n3 5\\n4 5\\n4 7\\n3 5\\n4 5\\n4 7\\n3 5\\n4 5\\n4 7\\n3 5\\n4 5\\n4 7\\n3 5\\n4 5\\n4 7\\n3 5\\n4 5\\n4 7\\n3 5\\n4 5\\n4 7\\n3 5\\n4 5\\n4 7\\n3 5\\n4 5\\n4 7\\n3 5\\n4 5\\n4 7\\n3 5\\n4 5\\n4 7\\n3 5\\n4 5\\n4 7\\n3 5\\n4 5\\n4 7\\n3 5\\n4 5\\n4 7\\n3 5\\n4 5\\n4 7\\n3 5\\n4 5\\n4 7\\n3 5\\n4 5\\n4 7\\n3 5\\n4 5\\n4 7\\n3 5\\n4 5\\n4 7\\n3 5\\n4 5\\n4 7\\n3 5\\n4 5\\n4 7\\n3 5\\n4 5\\n4 7\\n3 5\\n4 5\\n4 7\\n3 5\\n4 5\\n4 7\\n3 5\\n4 5\\n4 7\\n3 5\\n4 5\\n4 7\\n3 5\\n4 5\\n4 7\\n3 5\\n4 5\\n4 7\\n3 5\\n4 5\\n4 7\\n3 5\\n4 5\\n4 7\\n3 5\\n4 5\\n4 7\\n3 5\\n4 5\\n4 7\\n3 5\\n4 5\\n4 7\\n3 5\\n4 5\\n4 7\\n3 5\\n4 5\\n4 7\\n"
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output\n"
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3\") == \"1\\n0\"\nassert solution(\"4 2\\n1 2\\n3 1\\n1000 1\\n2 3\") == \"3\""
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == sample_output, f\"Expected '{sample_output}', got '{solution(sample_input)}'.\""
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3\") == \"1\\n0\\n\\n\"  # Test case 1\nassert solution(\"3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 4\") == \"1\\n0\\n\\n\"  # Test case 2\nassert solution(\"3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 4\") == \"1\\n0\\n\\n\"  # Test case 3\nassert solution(\"3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 4\") == \"1\\n0\\n\\n\"  # Test case 4\nassert solution(\"3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 4\") == \"1\\n0\\n\\n\"  # Test case 5"
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3\") == \"1\\n0\"\nassert solution(\"3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 5\") == \"0\\n1\""
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    3 2\n    1 0\n    0 1\n    1000 1\n    1 3\n    2 3\n    \"\"\"\n) == \"1\\n0\\n\"\n\nassert solution(\n    \"\"\"\n    3 2\n    1 0\n    0 1\n    1000 1\n    2 3\n    3 4\n    \"\"\"\n) == \"1\\n1\\n\"\n\nassert solution(\n    \"\"\"\n    3 2\n    1 0\n    0 1\n    1000 1\n    1 3\n    2 3\n    3 2\n    \"\"\"\n) == \"1\\n1\\n\"\n\nassert solution(\n    \"\"\"\n    3 2\n    1 0\n    0 1\n    1000 1\n    1 3\n    2 3\n    3 4\n    \"\"\"\n) == \"1\\n1\\n\"\n\nassert solution(\n    \"\"\"\n    3 2\n    1 0\n    0 1\n    1000 1\n    1 3\n    2 3\n    3 2\n    \"\"\"\n) == \"1\\n1\\n\"\n\nassert solution(\n    \"\"\"\n    3 2\n    1 0\n    0 1\n    1000 1\n    1 3\n    2 3\n    3 2\n    \"\"\"\n) == \"1\\n1\\n\"\n\nassert solution(\n    \"\"\"\n    3 2\n    1 0\n    0 1\n    1000 1\n    1 3\n    2 3\n    3 2\n    \"\"\"\n) == \"1\\n1\\n\"\n\nassert solution(\n    \"\"\"\n    3 2\n    1 0\n    0 1\n    1000 1\n    1 3\n    2 3\n    3 2\n    \"\"\"\n) == \"1\\n1\\n\"\n\nassert solution(\n    \"\"\"\n    3 2\n    1 0\n    0 1\n    1000 1\n    1 3\n    2 3\n    3 2\n    \"\"\"\n) == \"1\\n1\\n\"\n\nassert solution(\n    \"\"\"\n    3 2\n    1 0\n    0 1\n    1000 1\n    1 3\n    2 3\n    3 2\n    \"\"\"\n) == \"1\\n1\\n\""
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3\") == \"1\\n0\\n\"\nassert solution(\"3 1\\n1 0\\n2 1\\n0 2\\n2 1\\n1 2\") == \"1\\n1\\n\"\nassert solution(\"1 1\\n1 1\") == \"1\\n1\\n\"\nassert solution(\"4 5\\n2 3\\n1 4\\n3 5\\n4 6\") == \"2\\n1\\n\"\nassert solution(\"1 0\\n3 2\\n2 2\\n1 3\\n2 2\\n3 1\\n4 3\\n5 3\\n6 4\") == \"2\\n1\\n\"\nassert solution(\"1 0\\n1 1\\n2 2\\n3 3\\n3 4\\n4 5\\n5 6\") == \"2\\n1\\n\""
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(str(input())) == \"1\\n0\\n\"\nassert solution(str(input())) == \"0\\n1\\n\"\nassert solution(str(input())) == \"1\\n1\\n\"\nassert solution(str(input())) == \"0\\n0\\n\"\nassert solution(str(input())) == \"0\\n0\\n\""
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3\\n') == '\\n1\\n0\\n\\n'"
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 7, \"Expected 7, got {}\".format(solution())\nprint(7)"
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"7\\n\"\nassert solution(4) == \"12\\n\"\nassert solution(5) == \"23\\n\"\nassert solution(6) == \"47\\n\""
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution([3, 2, 3, 1, 2, 1]) == '7\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 7, \"The expected output is not obtained.\""
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 2 3\\n3 2 2\\n5 2 1\\n3 2 1\\n1 2 1\") == \"7\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == 7, \"The expected output is not found.\"\n"
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '7\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test case 1\\nstdin = \"1 2 3\\n3 2 2\\n5 2 1\\n3 2 1\\n1 2 1\\n1 2 3\"'"
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 7, \"The function is not correct.\"\nassert solution(1) == 1, \"The function is not correct.\""
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"7\"\nassert solution(1) == \"7\"\nassert solution(4) == \"7\"\nassert solution(5) == \"7\"\nassert solution(6) == \"7\"\nassert solution(7) == \"7\"\nassert solution(8) == \"7\""
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == '20\\n'\n"
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\") == 20\n"
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 20, \"The expected output is not correct.\""
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100') == 20\n\nfrom typing import List"
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100') == '20'\n"
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\") == \"20\\n\"\nassert solution(\"1 3\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\") == \"20\\n\"\nassert solution(\"2 4\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\") == \"20\\n\"\nassert solution(\"4 1\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\") == \"20\\n\""
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"linearalgebra 10\") == \"20\"\nassert solution(\"calculus1 10\") == \"20\"\nassert solution(\"calculus2 20\") == \"40\"\nassert solution(\"honorsanalysis1 50\") == \"100\"\nassert solution(\"honorsanalysis2 100\") == \"200\"\n\nfrom typing import List"
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100') == 20"
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\") == \"20\""
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r')) == '20\\n'"
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n1 2 2\\n2 3 4\\n3 4 1\\n4 1 2\\n3\\n1 4 2\\n3 3 3\\n4 3 6\\n\") == 6\nprint(\"Test Passed\")"
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\n1 2 2\\n2 3 4\\n3 4 1\\n4 1 2\\n3\\n1 4 2\\n3 3 3\\n4 3 6\\n\") == 6\n"
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4\\n1 2 2\\n2 3 4\\n3 4 1\\n4 1 2\\n3\\n1 4 2\\n3 3 3\\n4 3 6\") == \"6\"\n"
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    4 4\n    1 2 2\n    2 3 4\n    3 4 1\n    4 1 2\n    3\n    1 4 2\n    3 3 3\n    4 3 6\n    \"\"\"\n) == \"6\\n\""
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 6, \"Incorrect output\""
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Test failed with input: {input()}, output: {output}\""
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\n1 2 2\\n2 3 4\\n3 4 1\\n4 1 2\\n3\\n1 4 2\\n3 3 3\\n4 3 6\") == 6, \"Solution should return 6, but it returned {}\".format(solution(\"4 4\\n1 2 2\\n2 3 4\\n3 4 1\\n4 1 2\\n3\\n1 4 2\\n3 3 3\\n4 3 6\"))"
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 4\\n1 2 2\\n2 3 4\\n3 4 1\\n4 1 2\\n3\\n1 4 2\\n3 3 3\\n4 3 6') == 6, \"Incorrect Output\""
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input) == output, f\"Test failed for input {input}, expected output {output}, got {solution(input)}\""
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 4\\n1 2 2\\n2 3 4\\n3 4 1\\n4 1 2\\n3\\n1 4 2\\n3 3 3\\n4 3 6') == 6, \"Test case 1 failed.\""
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\\n\") == \"2\"\nassert solution(\"3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\\n3 2 2\\n\") == \"impossible\"\nassert solution(\"3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\\n\") == \"2\"\nassert solution(\"3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\\n3 2 2\\n\") == \"impossible\""
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"The solution is incorrect. Expected {expected_output}, but got {solution(input())}.\"\n"
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == sample_output, 'Test case 1 failed'"
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1') == 2\nassert solution('4 2 2\\n1 3\\n2 3\\n3 4\\n4 1 2\\n2 1\\n3 4\\n4 3 1\\n1 1 1 2 3') == 2\nassert solution('1 1\\n1 1\\n1 1') == 2\nassert solution('1 1\\n1 1\\n1 1\\n1 1') == 2\nassert solution('3 1 1\\n3 2 1\\n3 2 1\\n3 2 1') == 2\nassert solution('1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1') == 1\nassert solution('3 1 1\\n3 2 1\\n3 2 1\\n3 2 1\\n3 2 1\\n3 2 1\\n3 2 1\\n3 2 1\\n3 2 1\\n3 2 1\\n3 2 1') == 2\nassert solution('3 1 1\\n3 2 1\\n3 2 1\\n3 2 1\\n3 2 1\\n3 2 1\\n3 2 1\\n3 2 1\\n3 2 1\\n3 2 1\\n3 2 1\\n3 2 1\\n3 2 1\\n3 2 1\\n3 2 1') == 2\nassert solution('3 1 1\\n3 2 1\\n3 2 1\\n3 2 1\\n3 2 1\\n3 2 1\\n3 2 1\\n3 2 1\\n3 2 1\\n3 2 1\\n3 2 1\\n3 2 1\\n3 2 1\\n3 2 1\\n3 2 1\\n3 2 1\\n3 2 1\\n3 2 1') == 2"
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input) == expected_output, f\"Test failed for input: {input}, expected output: {expected_output}\"\nfor input, expected_output in zip(test_cases, [\"impossible\", \"2\", \"3\", \"1 2\", \"2 3 1\", \"1 1\"]):\n    assert solution(input) == expected_output, f\"Test failed for input: {input}, expected output: {expected_output}\""
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r').read()) == '2\\n'"
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1') == '2'\nassert solution('3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\\n2 2 2\\n2 3 3') == '2'\nassert solution('3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\\n2 2 2\\n2 3 3\\n1 1 1\\n1 2 1') == 'impossible'\nassert solution('3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\\n2 2 2\\n2 3 3\\n1 1 1\\n1 2 2') == 'impossible'\nassert solution('3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\\n2 2 2\\n2 3 3\\n1 1 1\\n1 2 2\\n1 1 1\\n1 2 1') == 'impossible'\nassert solution('3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\\n2 2 2\\n2 3 3\\n1 1 1\\n1 2 2\\n1 1 1\\n1 2 1\\n1 1 1\\n1 2 1') == 'impossible'"
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\""
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n250 250\\n250 750\") == \"500.00\"\n"
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == 500.00\n"
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(None) == \"Test Case 1 Failed\"\nsolution(5)  # Test Case 1\nsolution(3)  # Test Case 2\nsolution(1)  # Test Case 3\nsolution(2)  # Test Case 4\nsolution(501)  # Test Case 5"
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2\\n250 250\\n250 750') == '500.00'"
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n2\n250 250\n250 750\n''') == '500.00'\nassert solution('''\n3\n100 100\n300 750\n200 250\n''') == '1600.00'\nassert solution('''\n1\n100 100\n200 250\n''') == '0.00'\nassert solution('''\n1\n100 100\n200 250\n500 750\n''') == '2250.00'\nassert solution('''\n2\n100 100\n200 250\n500 750\n''') == '2250.00'\nassert solution('''\n2\n100 100\n200 250\n500 750\n1000 1200\n''') == '2250.00'"
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n250 250\\n250 750\") == \"500.00\""
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n250 250\\n250 750\\n\") == 500.00, \"Expected 500.00, got {}\".format(solution(\"2\\n250 250\\n250 750\\n\"))"
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n250 250\\n250 750\") == 500.00, \"The output is incorrect.\""
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == 500.00, \"The output is incorrect.\""
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == 0\nassert solution(2) == 0\nassert solution(3) == 0\nassert solution(4) == 0\nassert solution(5) == 0\nassert solution(6) == 0\nassert solution(7) == 0\nassert solution(8) == 0\nassert solution(9) == 0\nassert solution(10) == 0\nassert solution(11) == 0\nassert solution(12) == 0\nassert solution(13) == 0\nassert solution(14) == 0\nassert solution(15) == 0\nassert solution(16) == 0\nassert solution(17) == 0\nassert solution(18) == 0\nassert solution(19) == 0\nassert solution(20) == 0\nassert solution(21) == 0\nassert solution(22) == 0\nassert solution(23) == 0\nassert solution(24) == 0\nassert solution(25) == 0\nassert solution(26) == 0\nassert solution(27) == 0\nassert solution(28) == 0\nassert solution(29) == 0\nassert solution(30) == 0\nassert solution(31) == 0\nassert solution(32) == 0\nassert solution(33) == 0\nassert solution(34) == 0\nassert solution(35) == 0\nassert solution(36) == 0\nassert solution(37) == 0\nassert solution(38) == 0\nassert solution(39) == 0\nassert solution(40) == 0\nassert solution(41) == 0\nassert solution(42) == 0\nassert solution(43) == 0\nassert solution(44) == 0\nassert solution(45) == 0\nassert solution(46) == 0\nassert solution(47) == 0\nassert solution(48) == 0\nassert solution(49) == 0\nassert solution(50) == 0\nassert solution(51) == 0\nassert solution(52) == 0\nassert solution(53) == 0\nassert solution(54) == 0\nassert solution(55) == 0\nassert solution(56) == 0\nassert solution(57) == 0\nassert solution(58) == 0\nassert solution(59) == 0\nassert solution(60) == 0\nassert solution(61) == 0\nassert solution(62) == 0\nassert solution(63) == 0\nassert solution(64) == 0\nassert solution(65) == 0\nassert solution(66) == 0\nassert solution(67) == 0\nassert solution(68) == 0\nassert solution(69) == 0\nassert solution(70) == 0\nassert solution(71) == 0\nassert solution(72) == 0\nassert solution(73) == 0\nassert solution(74) == 0\nassert solution(75) == 0\nassert solution(76) == 0\nassert solution(77) == 0\nassert solution(78) == 0\nassert solution(79) == 0\nassert solution(80) == 0\nassert solution(81) == 0\nassert solution(82) == 0\nassert solution(83) == 0\nassert solution(84) == 0\nassert solution(85) == 0\nassert solution(86) == 0\nassert solution(87) == 0\nassert solution(88) == 0\nassert solution(89) == 0\nassert solution(90) == 0\nassert solution(91) == 0\nassert solution(92) == 0\nassert solution(93) == 0\nassert solution(94) == 0\nassert solution(95) == 0\nassert solution(96) == 0\nassert solution(97) == 0\nassert solution(98) == 0\nassert solution(99) == 0\nassert solution(100) == 0\nassert solution(101) == 0\nassert solution(102) == 0\nassert solution(103) == 0\n"
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"0\\n\", \"The output of the solution should be '0'.\""
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    2 3\n    2 100 10\n    100 1 10\n    \"\"\"\n) == \"0\"\n\nassert solution(\n    \"\"\"\n    5 3\n    20 100 100 100 100\n    100 100 100 100 100\n    \"\"\"\n) == \"10\"\n\nassert solution(\n    \"\"\"\n    5 3\n    10000 100 100\n    100 100 100\n    \"\"\"\n) == \"100\"\n\nassert solution(\n    \"\"\"\n    3 4\n    100 100 100\n    1000 1000 1000\n    \"\"\"\n) == \"1000\""
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 3\\n2 100 10\\n100 1 10') == '0\\n'\nprint(\"Test Passed\")"
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r')) == '0'\nprint(\"All test cases passed\")"
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    2 3\n    2 100 10\n    100 1 10\n    \"\"\"\n) == \"0\\n\"\n\nassert solution(\n    \"\"\"\n    3 4\n    2 100 10\n    100 1 10\n    \"\"\"\n) == \"0\\n\"\n\nassert solution(\n    \"\"\"\n    4 6\n    2 100 10\n    100 1 10\n    \"\"\"\n) == \"100\\n\"\n\nassert solution(\n    \"\"\"\n    4 6\n    2 100 10\n    100 1 10\n    100 1 10\n    \"\"\"\n) == \"100\\n\"\n\nassert solution(\n    \"\"\"\n    4 6\n    2 100 10\n    100 1 10\n    100 1 10\n    100 1 10\n    \"\"\"\n) == \"100\\n\"\n\nassert solution(\n    \"\"\"\n    4 6\n    2 100 10\n    100 1 10\n    100 1 10\n    100 1 10\n    100 1 10\n    \"\"\"\n) == \"100\\n\""
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('sample_input.txt', 'r')) == '0\\n'\n\nfrom typing import List"
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 3\\n2 100 10\\n100 1 10') == '0'"
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Your code is not correct. Please check the sample input and output.\""
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('sample.in', 'r')) == '0\\n'\nassert solution(open('sample.in', 'r')) == '100\\n'"
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\") == \"2\"\nassert solution(\"80 50 2 2\\n75 5 25 20 50 35\\n50 5 25 35\") == \"3\"\nassert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n60 5 25 35\") == \"5\"\nassert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n60 5 25 35\\n75 5 25 35\\n60 5 25 35\") == \"6\"\nassert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n60 5 25 35\\n75 5 25 35\\n60 5 25 35\\n80 50 3 2\") == \"7\""
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\") == \"2\\n\""
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\"\n\nfrom typing import List"
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Output\\n2\"\nassert solution(input()) == \"Output\\n2\"\nassert solution(input()) == \"Output\\n2\"\n"
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\") == 2\n\nfrom typing import List"
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\") == \"2\"\nassert solution(\"10 10 20 20 30 30\\n100 200 300 400 500 600\\n150 200 250 300 350 400\") == \"4\"\nassert solution(\"10 10 20 20 30 30\\n100 200 300 400 500 600\\n150 200 250 300 350 400\\n75 25 25 25 25 25\\n125 250 250 250 250 250\") == \"3\""
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\") == \"2\"\nassert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n80 50 3 2\\n75 5 25 20 50 35\\n50 "
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\") == \"2\\n\""
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == 'AAAA\\n...A\\n....\\n\\nBB..\\nBBBB\\n...B\\n....\\n\\n....\\n...C\\nCCCC'"
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == 'AAAA\\n...A\\n....\\n\\nBBBB\\n...B\\n....\\n\\n....\\n...C\\nCCCC\\ndef solution(stdin: str) -> str:\\n    n, m = map(int, stdin.strip().split())\\n    grids = []\\n    for _ in range(n):\\n        grid = []\\n        for _ in range(m):\\n            grid.append(input().strip())\\n        grids.append(grid)\\n    for i in range(n):\\n        for j in range(m):\\n            if grids[i][j] == '1112':\\n                grids[i][j] = 'B'\\n                grids[i+1][j] = 'B'\\n                grids[i][j+1] = 'B'\\n                grids[i+1][j+1] = 'B'\\n    return ''.join(grids)\\n\\nsample_input = '''3 4\n2211\n1112\n1112\n'''\nprint(solution(sample_input))"
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input(\"3 4\\n2211\\n1112\\n1112\\n\")) == \"AAAA\\n...A\\n....\\n\\nBB..\\nBBBB\\n...B\\n\\n....\\n...C\\nCCCC\\nimpossible\"\nassert solution(input(\"3 4\\n2211\\n1112\\n2222\\n\")) == \"impossible\"\nassert solution(input(\"3 4\\n2211\\n1111\\n1112\\n\")) == \"impossible\"\n"
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4\\n2211\\n1112\\n1112\") == \"AAAA\\n...A\\n....\\n...B\\nCCCC\"\nassert solution(\"5 3\\n2211\\n1112\\n1112\\n1112\") == \"impossible\"\nassert solution(\"3 4\\n2111\\n1112\\n1112\\n1112\") == \"impossible\"\nassert solution(\"1 2\\n2111\\n1112\\n1112\\n1112\") == \"impossible\"\nassert solution(\"3 5\\n2211\\n1112\\n1112\\n1112\\n1112\") == \"impossible\""
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == expected_output, f\"Expected output: '{expected_output}', Received output: '{solution(sample_input)}'\"\n"
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\n2211\\n1112\\n1112\") == \"AAAA\\n....A\\n....\\n...B\\nCCCC\"\nassert solution(\"3 4\\n2211\\n1112\\n1112\\n2211\\n1112\\n1112\\n2211\\n1112\\n1112\\n2211\\n1112\\n1112\\n2211\\n1112\\n1112\\n2211\\n1112\\n1112\\n2211\\n1112\\n1112\\n2211\\n1112\\n1112\\n2211\\n1112\\n1112\\n2211\\n1112\\n1112\\n2211\\n1112\\n1112\\n2211\\n1112\\n1112\\n2211\\n1112\\n1112\\n2211\\n1112\\n1112\\n2211\\n1112\\n1112\\n2211\\n1112\\n1112\\n2211\\n1112\\n1112\\n2211\\n1112\\n1112\\n2211\\n1112\\n1112\\n2211\\n1112\\n1112\\n2211\\n1112\\n1112\\n2211\\n1112\\n1112\\n2211\\n1112\\n1112\\n2211\\n1112\\n1112\\n2211\\n1112\\n1112\\n2211\\n1112\\n1112\\n2211\\n1112\\n1112\\n2211\\n1112\\n1112\\n2211\\n1112\\n1112\\n2211\\n1112\\n1112\\n2211\\n1112\\n1112\\n2211\\n1112\\n1112\\n2211\\n1112\\n1112\\n2211\\n1112\\n1112\\n2211\\n1112\\n1112\\n2211\\n1112\\n1112\\n2211\\n1112\\n1112\\n2211\\n1112\\n1112\\n2211\\n1112\\n1112\\n2211\\n1112\\n1112\\n2211\\n1112\\n1112\\n2211\\n1112\\n1112\\n2211\\n1112\\n1112\\n2211\\n1112\\n1112\\n2211\\n1112\\n1112\\n2211\\n1112\\n1112\\n2211\\n1112\\n1112\\n2211\\n1112\\n1112\\n2211\\n1112\\n1112\\n2211\\n1112\\n1112\\n2211\\n1112\\n1112\\n2211\\n1112\\n1112\\n2211\\n1112\\n1112\\n2211\\n1112\\n1112\\n22"
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4\\n2211\\n1112\\n1112\") == \"AAAA\\n...A\\n....\\nBB..\\nBBBB\\n...B\\n....\\n...C\\nCCCC\"\nassert solution(\"3 4\\n1111\\n1111\\n1111\") == \"impossible\"\nassert solution(\"3 4\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n"
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\n2211\\n1112\\n1112\") == \"AAAA\\n...A\\n....\\n\\nBB..\\nBBBB\\n...B\\n\\n....\\n...C\\nCCCC\""
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 4\\n2211\\n1112\\n1112') == 'AAAA\\n...A\\n....\\n...B\\nCCCC\\n'\nassert solution('1 2\\n111\\n111\\n111') == 'impossible'\nassert solution('3 4\\n2211\\n1112\\n1111') == 'impossible'\nassert solution('3 3\\n111\\n111\\n111') == 'impossible'\nassert solution('4 3\\n111\\n111\\n111') == 'impossible'\nassert solution('2 2\\n111\\n111\\n111') == 'impossible'\nassert solution('3 3\\n111\\n111\\n111\\n111') == 'impossible'\nassert solution('2 2\\n111\\n111\\n111\\n111') == 'impossible'"
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == expected_output, \"Test failed\""
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3\") == 9, \"Test case 1 failed\"\nassert solution(\"3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3\") == 9, \"Test case 2 failed\"\nassert solution(\"3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3\") == 9, \"Test case 3 failed\"\n\nassert solution(\"3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3\") == 18, \"Test case 4 failed\"\nassert solution(\"3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3\") == 18, \"Test case 5 failed\"\nassert solution(\"3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3\") == 18, \"Test case 6 failed\"\n\nassert solution(\"3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3\") == 18, \"Test case 7 failed\"\nassert solution(\"3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3\") == 18, \"Test case 8 failed\"\nassert solution(\"3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3\") == 18, \"Test case 9 failed\""
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3\") == 9, \"Test case 1 is incorrect.\"\nassert solution(\"3 1 3 2\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3\") == 6, \"Test case 2 is incorrect.\"\nassert solution(\"3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3\") == 9, \"Test case 3 is incorrect.\"\nassert solution(\"3 1 3 2\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3\") == 6, \"Test case 4 is incorrect.\"\nassert solution(\"3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3\") == 9, \"Test case 5 is incorrect.\"\nassert solution(\"3 1 3 2\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3\") == 6, \"Test case 6 is incorrect.\""
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 9, \"Incorrect result\""
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"9\", \"Your solution is incorrect.\"\n"
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 9, \"Expected output: 9, but got: {}\".format(solution())"
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"9\"\n"
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == expected_output, f\"The solution is {solution} but the expected output is {expected_output}.\"\n"
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 9\n"
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 9\n"
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3\") == 9\nassert solution(\"3 1 3 3\\n1 4 1 2 3\\n4 3 1 2 1\\n4 3 1 2 1 3\") == 9\nassert solution(\"3 1 3 3\\n4 3 1 2 1\\n1 4 1 2 1 3\\n3 4 1 2 3 2\") == 9\nassert solution(\"3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3\\n4 3 1 2 1 3\") == 9\nassert solution(\"3 1 3 3\\n4 3 1 2 1\\n1 4 1 2 1 3\\n4 3 1 2 1 3\\n1 4 1 2 3\\n4 3 1 2 3 2\") == 9"
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 2 2 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5\") == \"20.396078\"\n\nfrom typing import List"
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(solution_input) == solution_output, f\"Solution for example {solution_input} should be {solution_output}, but is {solution(solution_input)}\""
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n6 2 2 8\n0 0 6\n3 4 7\n0 8 8\n6 8 8\n6 0 6\n6 4 8\n3 4\n1 5\n\"\"\"\n) == \"20.396078\""
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 2 2 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5\") == 20.396078"
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"20.396078\""
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n    6 2 2 8\n    0 0 6\n    3 4 7\n    0 8 8\n    6 8 8\n    6 0 6\n    6 4 8\n    3 4\n    1 5\n    ''') == '20.396078'\nassert solution('''\n    5 6 2 8\n    0 0 6\n    3 4 7\n    0 8 8\n    6 8 8\n    6 0 6\n    6 4 8\n    3 4\n    1 5\n    ''') == '13.5025'\nassert solution('''\n    5 10 2 8\n    0 0 6\n    3 4 7\n    0 8 8\n    6 8 8\n    6 0 6\n    6 4 8\n    3 4\n    1 5\n    ''') == '11.0214'\nassert solution('''\n    6 2 3 8\n    0 0 6\n    3 4 7\n    0 8 8\n    6 8 8\n    6 0 6\n    6 4 8\n    3 4\n    1 5\n    ''') == '24.1207'\nassert solution('''\n    6 2 2 8\n    0 0 6\n    3 4 7\n    0 8 8\n    6 8 8\n    6 0 6\n    6 4 8\n    3 4\n    1 5\n    ''') == '16.9174'"
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 2 2 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5\") == 20.396078\n"
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 2 2 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5\") == \"20.396078\"\n"
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n    6 2 2 8\n    0 0 6\n    3 4 7\n    0 8 8\n    6 8 8\n    6 0 6\n    6 4 8\n    3 4\n    1 5\n    \"\"\") == 20.396078"
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    6 2 2 8\n    0 0 6\n    3 4 7\n    0 8 8\n    6 8 8\n    6 0 6\n    6 4 8\n    3 4\n    1 5\n    \"\"\"\n) == \"20.396078\"\n"
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abca\") == \"b\"\nassert solution(\"bc cd da dd ee ff gg hh ii jj kk ll mm\") == \"c\"\nassert solution(\"nn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"def\"\n\nsolution = \"\"\"\nfrom typing import List"
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abca\") == \"b\"\nassert solution(\"bc cd da dd ee ff gg hh ii jj kk ll mm nn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"c\"\nassert solution(\"abca\") == \"b\"\n\nfrom typing import List\n"
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"test_input.txt\", \"r\")) == \"b\"\nassert solution(open(\"sample_input.txt\", \"r\")) == \"b\"\nassert solution(open(\"sample_input_2.txt\", \"r\")) == \"b\""
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"b\"\nassert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"c\"\nassert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"d\"\nassert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"e\"\nassert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"f\"\nassert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"g\"\nassert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"h\"\nassert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"i\"\nassert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"j\"\nassert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"k\"\nassert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"l\"\nassert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"m\"\nassert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"n\"\nassert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"o\"\nassert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"p\"\nassert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"q\"\nassert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"r\"\nassert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"s\"\nassert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"t\"\nassert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"u\"\nassert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"v\"\nassert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"w\"\nassert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"x\"\nassert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz"
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abca\") == \"b\"\nassert solution(\"bc cd da dd ee ff gg hh ii jj kk ll mm\") == \"c\"\nassert solution(\"nn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"def\"\n"
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"b\"\nassert solution(\"abcde\\nfghi jklm no pqr st uv wx xy yz\") == \"cd\"\nassert solution(\"aaaaa\\nbbbb ccccc ddddd eeeee ffffffff gggg hhhhh iiiiii jjjj kkkk llll mmmm nnnn ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo\") == \"z\""
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abca\") == \"b\"\nassert solution(\"bc cd da dd ee ff gg hh ii jj kk ll mm\") == \"c\"\nassert solution(\"nn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"def\""
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abca\") == \"b\"\nassert solution(\"bc cd da dd ee ff gg hh ii jj kk ll mm\") == \"c\"\nassert solution(\"nn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"def\""
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"b\\nc\\ndef\""
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Solution returned '{solution(input())}', expected '{output()}'\""
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == 'hobi\\nhobit\\nrobi\\n'\nassert solution(open('input2.txt', 'r')) == 'hobi\\nhobit\\n'"
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('hobotnica') == 'hob'\nassert solution('robot') == 'r'\nassert solution('hobi') == 'hob'\nassert solution('hobit') == 'hob'\nassert solution('robi') == 'ro'\nassert solution('hobi') == 'hob'\nassert solution('hobit') == 'hob'\nassert solution('rakija') == 'rak'\nassert solution('hobit') == 'hob'\n\nfrom collections import defaultdict\n"
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"The longest common prefix of two words is the longest word that both words start with.\\nA database contains 5 words.\\nThe longest common prefix of the words \\\"hobotnica\\\" and \\\"hobi\\\" is the word \\\"hob\\\"\\nThe number of steps the algorithm uses when searching for the word is 12.\\nThe number of steps the algorithm uses when searching for the word is 10.\\nThe number of steps the algorithm uses when searching for the word is 16.\\nThe number of steps the algorithm uses when searching for the word is 7.\\nThe number of steps the algorithm uses when searching for the word is 0.\""
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '''\n12\n10\n16\n7\n"
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\nhobotnica\\nrobot\\nhobi\\nhobit\\robi\\n4\\robi\\nhobi\\nhobit\\rakija\") == \"12\\n10\\n16\\n7\\ndef solution(stdin: str) -> str:\\n    pass\"\n\nsolution(\"5\\nhobotnica\\nrobot\\nhobi\\nhobit\\robi\\n4\\robi\\nhobi\\nhobit\\rakija\")"
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt').read()) == '12\\n10\\n16\\n7\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == 'def solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\nhobotnica\\nrobot\\nhobi\\nhobit\\nrobi\\n4\\nrobi\\nhobi\\nhobit\\nrakija') == '12\\n10\\n16\\n7\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Got {solution(input())}, expected {expected}\""
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r')) == 'def solution(stdin: str) -> str:\\n    pass\\n\\n'"
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"14 4\\nJQ IRKEYFG EXQ\\n\") == \"THIS IS A TEST\"\n"
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"14 4\\nJQ IRKEYFG EXQ\") == \"THIS IS A TEST\""
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('14 4\\nJQ IRKEYFG EXQ') == 'THIS IS A TEST'"
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"14 4\\nJQ IRKEYFG EXQ\") == \"THIS IS A TEST\""
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin='14 4\\nJQ IRKEYFG EXQ\\n') == 'THIS IS A TEST'"
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('14 4\\nJQ IRKEYFG EXQ\\n') == 'THIS IS A TEST'\n"
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('14 4\\nJQ IRKEYFG EXQ\\n') == 'THIS IS A TEST'\n"
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"14 4\\nJQ IRKEYFG EXQ\") == \"THIS IS A TEST\""
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('14 4\\nJQ IRKEYFG EXQ') == 'THIS IS A TEST'"
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"14 4\\nJQ IRKEYFG EXQ\") == \"THIS IS A TEST\"\nprint(\"All tests pass!\")"
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(2.6) == \"135\\n270\"\nassert solution(3.1) == \"No solution\""
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(2.6) == \"135\\n270\\n135135\\n270270\"\n"
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input(\"Enter X: \")) == output(\"135\\n270\\n135135\\n270270\")"
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2.6\") == \"135\\n270\\n135135\\n270270\"\nassert solution(\"0.00000000000000000001\") == \"135\\n270\\n135135\\n270270\"\nassert solution(\"0.000000000000000000002\") == \"135\\n270\\n135135\\n270270\"\nassert solution(\"0.000000000000000000003\") == \"135\\n270\\n135135\\n270270\"\nassert solution(\"0.000000000000000000004\") == \"135\\n270\\n135135\\n270270\"\nassert solution(\"0.000000000000000000005\") == \"135\\n270\\n135135\\n270270\"\nassert solution(\"0.000000000000000000006\") == \"135\\n270\\n135135\\n270270\"\nassert solution(\"0.000000000000000000007\") == \"135\\n270\\n135135\\n270270\"\nassert solution(\"0.000000000000000000008\") == \"135\\n270\\n135135\\n270270\"\nassert solution(\"0.000000000000000000009\") == \"135\\n270\\n135135\\n270270\"\nassert solution(\"0.000000000000000000010\") == \"135\\n270\\n135135\\n270270\"\nassert solution(\"0.000000000000000000011\") == \"135\\n270\\n135135\\n270270\"\nassert solution(\"0.000000000000000000012\") == \"135\\n270\\n135135\\n270270\"\nassert solution(\"0.000000000000000000013\") == \"135\\n270\\n135135\\n270270\"\nassert solution(\"0.000000000000000000014\") == \"135\\n270\\n135135\\n270270\"\nassert solution(\"0.000000000000000000015\") == \"135\\n270\\n135135\\n270270\"\nassert solution(\"0.000000000000000000016\") == \"135\\n270\\n135135\\n270270\"\nassert solution(\"0.000000000000000000017\") == \"135\\n270\\n135135\\n270270\"\nassert solution(\"0.000000000000000000018\") == \"135\\n270\\n135135\\n270270\"\nassert solution"
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2.6\") == \"135\\n270\"\nassert solution(\"3.14159\") == \"314159\\n314159314159\"\nassert solution(\"1234567890123456789012345678901234567890\") == \"No solution\"\nassert solution(\"2.00001\") == \"No solution\""
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"135\\n270\""
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input(\"Enter X: \")) == \"135\\n270\\n135135\\n270270\\n\"\nprint(\"No solution\")"
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(2.6) == \"135\\n270\\n135135\\n270270\""
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(2.6) == \"135\\n270\"\nassert solution(2.5) == \"135\"\nassert solution(2.4) == \"135135\"\nassert solution(2.3) == \"270270\"\nassert solution(2.2) == \"135135\"\nassert solution(2.1) == \"270270\"\nassert solution(2.0) == \"135135\"\nassert solution(1.9) == \"270270\"\nassert solution(1.8) == \"135135\"\nassert solution(1.7) == \"270270\"\nassert solution(1.6) == \"135135\"\nassert solution(1.5) == \"270270\"\nassert solution(1.4) == \"135135\"\nassert solution(1.3) == \"270270\"\nassert solution(1.2) == \"135135\"\nassert solution(1.1) == \"270270\"\nassert solution(1.0) == \"135135\"\nassert solution(0.9) == \"270270\"\nassert solution(0.8) == \"135135\"\nassert solution(0.7) == \"270270\"\nassert solution(0.6) == \"135135\"\nassert solution(0.5) == \"270270\"\nassert solution(0.4) == \"135135\"\nassert solution(0.3) == \"270270\"\nassert solution(0.2) == \"135135\"\nassert solution(0.1) == \"270270\"\nassert solution(0.0) == \"135135\"\nassert solution(-0.1) == \"270270\"\nassert solution(-0.2) == \"135135\"\nassert solution(-0.3) == \"270270\"\nassert solution(-0.4) == \"135135\"\nassert solution(-0.5) == \"270270\"\nassert solution(-0.6) == \"135135\"\nassert solution(-0.7) == \"270270\"\nassert solution(-0.8) == \"135135\"\nassert solution(-0.9) == \"270270\"\nassert solution(-1.0) == \"135135\"\nassert solution(-1.1) == \"270270\"\nassert solution(-1.2) == \"135135\"\nassert solution(-1.3) == \"270270\"\nassert solution(-1.4) == \"135135\"\nassert solution(-1.5) == \"270270\"\nassert solution(-1.6) == \"135135\"\nassert solution(-1.7) == \"270270\"\nassert solution(-1.8) == \"135135\"\nassert solution(-1.9) == \"270270\"\nassert solution(-2.0) == \"135135\"\nassert solution(-2.1) == \"270270\"\nassert solution(-2.2) == \"135135\"\nassert solution(-2.3) == \"270270\"\nassert solution(-2.4) == \"135135\"\nassert solution(-2.5) == \"270270\"\nassert solution(-2.6) == \"135135\"\nassert solution(-2.7) == \"270270\"\nassert solution(-2.8) == \"135135\"\nassert solution(-2.9) == \"270270\"\nassert solution(-3.0) == \"135135\"\nassert solution(-3.1) == \"270270\"\nassert solution(-3.2) == \"135135\"\nassert solution(-3.3) == \"270270\"\nassert solution(-3.4)"
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(2.6) == '135\\n270\\n135135\\n270270'\nassert solution(1.5) == 'No solution'\nassert solution(0.01) == '135\\n270\\n135135\\n270270'\nassert solution(1234567890.123456789) == '135\\n270\\n135135\\n270270'"
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"4\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_str), \"Test Failed\"\n\nfrom typing import List"
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_data) == output_data, f\"Test case failed with output {output_data} instead of expected output {input_data}.\" for input_data, output_data in test_cases"
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '4\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"4\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\\n') == 4, \"Expected output: 4\\nActual output: {}\".format(solution('4\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\\n'))"
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_data) == output_data, f\"Test case {test_case_no} failed. Expected output: {output_data}, but got: {solution(input_data)}\""
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"The solution is {solution(input())}, but it should be {expected_output}\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"The solution is incorrect. \\nExpected: {output}\\nGot: {solution(input())}\""
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\") == 4\nassert solution(\"2\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\") == 0"
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n\", \"Incorrect output\""
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('test_input.txt').read()) == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000'"
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(None) == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\"\nassert solution(None) == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\""
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_data) == output_data, f\"Expected output {output_data}, got {solution(input_data)}\""
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\""
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\").read()) == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\""
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2\\n1 3\\n1 4\\n1 5\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\""
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 2\\n1 3\\n1 4\\n1 5\\n\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n\"\nassert solution(\"10\\n1 2\\n1 3\\n1 4\\n1 5\\n\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n\"\nassert solution(\"100\\n1 2\\n1 3\\n1 4\\n1 5\\n\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n\"\nassert solution(\"500\\n1 2\\n1 3\\n1 4\\n1 5\\n\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n\"\nassert solution(\"1000\\n1 2\\n1 3\\n1 4\\n1 5\\n\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n\""
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 0"
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == sample_output"
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\naaa\\nabc\\naba\\na*a\\naaa*\\n*aaa\\n\") == \"2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\"4 4\\n*a\\nb\\nc\\nd\\n*b\\n\") == \"2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\naaa\\nabc\\naba\\na*a\\naaa*\\n*aaa\") == \"2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\naaa\\nbbb\\nccc\\naaa\\n\") == \"2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"5 4\\n*a*\\nb\\nc\\n*c\\nd*e\\n*e\\n\") == \"2\\n3\\n4\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"7 5\\n*a*\\nb\\nc\\nd\\ne\\nf\\ng\\n*g\\nh\\ni\\nj\\nk\\n*k\\nl\\nm\\no\\np\\nr\\ns\\nt\\nu\\nv\\nw\\nx\\ny\\nz\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\naaa\\nabc\\naba\\na*a\\naaa*\\n*aaa\") == \"2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"1 1\\n*\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"2 2\\n*aaa\\n*aaa*\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"3 1\\n*bbb\\n*ccc\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\naaa\\nabc\\naba\\na*a\\naaa*\\n*aaa\\n\") == \"2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin: str) == \"2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"The given solution is incorrect\"\n"
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 3\\naaa\\nabc\\naba\\na*a\\naaa*\\n*aaa\") == \"2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\naaa\\nabc\\naba\\na*a\\naaa*\\n*aaa\\n\") == \"2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == 1, \"Solution not implemented.\""
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX\\nOX"
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == \"1\""
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == \"1\"\nassert solution(\"4 2\\nX\\nX\\nX\\nX\\nX\\nO\\nX\\nO\\n\") == \"0\"\nassert solution(\"3 2\\nX\\nX\\nO\\nO\\nO\\nO\\nO\\n\") == \"1\"\nassert solution(\"3 2\\nO\\nO\\nO\\nO\\nO\\nO\\nO\\n\") == \"0\""
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == 0\nassert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\n\") == 1"
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\") == 0\nassert solution(\"4 2\\nXO\\nOX\\nXO\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nOO\\nOO\\n\") == 0\nassert solution(\"4 2\\nXO\\nOX\\nO\\nO\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nO\\nX\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nO\\nX\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nO\\nX\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nO\\nX\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nO\\nX\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nO\\nX\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nO\\nX\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nO\\nX\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nO\\nX\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nO\\nX\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nO\\nX\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nO\\nX\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nO\\nX\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nO\\nX\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nO\\nX\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nO\\nX\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nO\\nX\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nO\\nX\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nO\\nX\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nO\\nX\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nO\\nX\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nO\\nX\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nO\\nX\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nO\\nX\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nO\\nX\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nO\\nX\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nO\\nX\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nO\\nX\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nO\\nX\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nO\\nX\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nO\\nX\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nO\\nX\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nO\\nX\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nO\\nX\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nO\\nX\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nO\\nX\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nO\\nX\\n\") == 1\nassert solution(\"4"
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n') == '1'\nassert solution('4 2\\nXO\\nOX\\nXO\\nOO\\nXO\\nOO\\n') == '0'"
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == 1\nassert solution(\"4 2\\nXO\\nXO\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == 1\nassert solution(\"4 2\\nXO\\nXO\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == 1\nassert solution(\"4 2\\nXO\\nXO\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == 0\nassert solution(\"4 2\\nXO\\nXO\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == 0\nassert solution(\"4 2\\nXO\\nXO\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == 0\nassert solution(\"4 2\\nXO\\nXO\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == 0\nassert solution(\"4 2\\nXO\\nXO\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == 0\nassert solution(\"4 2\\nXO\\nXO\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == 0"
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == \"1\"\n"
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n') == '1\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n\nassert solution('4 2\\nXO\\nXO\\nOX\\nOO\\nXO\\nOO\\n') == '0\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n\nassert solution('5 2\\nXXOO\\nOOOO\\nOOOO\\nOOOO\\nOOOO\\n') == '1\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n\nassert solution('5 2\\nXXOO\\nOOOO\\nOOOO\\nOOOO\\nOOOO\\n') == '0\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Solution does not match the expected output. Input: {input()}, Output: {output}\"\n"
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n2 0\\n0 2\\n-2 0\\n0 -2\") == 16, \"Your solution is incorrect.\""
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '16\\n', \"Testcase failed\""
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n2 0\\n0 2\\n-2 0\") == 16, \"The output should be 16\""
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n2 0\\n0 2\\n-2 0\\n\") == \"16\\n\"\nassert solution(\"5\\n1 0\\n0 1\\n0 2\\n0 3\\n\") == \"106\\n\"\nassert solution(\"2\\n0 0\\n0 1\\n0 2\\n\") == \"1\\n\"\nassert solution(\"3\\n1 1\\n1 2\\n1 3\\n\") == \"6\\n\"\nassert solution(\"4\\n-1 -1\\n-1 1\\n1 -1\\n-1 1\\n-1 -1\\n\") == \"118\\n\""
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == expected_output, f\"Test failed for sample input {sample_input}, expected output {expected_output}\""
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"16\"\n"
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n2 0\\n0 2\\n-2 0\") == 16\nprint(\"All tests passed.\")"
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n2 0\\n0 2\\n-2 0\\n0 -2\") == \"16\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"16\"\n"
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 10 50\\n8 8 2 -2\\n') == '80\\n'"
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 10 50\\n8 8 2 -2\") == \"80\""
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt').read()) == '80', \"Incorrect output\""
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 10 50\\n8 8 2 -2\\n\") == \"80\""
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 10 50\\n8 8 2 -2\\n') == '80'\nassert solution('3 1 5\\n-2 3 4\\n') == '100'\nassert solution('2 3 -1\\n4 5 6\\n') == '200'\n\nfrom typing import List"
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '80'\n"
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 10 50\\n8 8 2 -2\") == \"80\\n\"\n"
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"80\", \"Test case 1 failed\""
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 10 50\\n8 8 2 -2\\n\") == \"80\"\nassert solution(\"5 10 50\\n8 8 2 -2\\n\") == \"200\"\nassert solution(\"3 10 50\\n8 8 2 -2\\n\") == \"400\"\nassert solution(\"4 20 50\\n8 8 2 -2\\n\") == \"600\"\nassert solution(\"5 10 200\\n8 8 2 -2\\n\") == \"1000\"\nassert solution(\"5 10 500\\n8 8 2 -2\\n\") == \"1500\"\nassert solution(\"3 10 500\\n8 8 2 -2\\n\") == \"2000\"\nassert solution(\"4 10 500\\n8 8 2 -2\\n\") == \"2500\"\nassert solution(\"5 10 500\\n8 8 2 -2\\n\") == \"3000\""
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_data) == output_data, f\"Test case {input_data} failed. Expected output: {output_data}, got {solution(input_data)}\""
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"3.000000000\""
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"3.000000000\""
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"3.000000000\""
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6') == '3.000000000'\n"
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6') == 3.000000000\n"
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"3.000000000\"\nassert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"3.000000000\"\n"
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"3.000000000\"\nassert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"3.000000000\"\nassert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"3.000000000\"\nassert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"3.000000000\"\nassert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"3.000000000\"\nassert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"3.000000000\""
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"3.000000000\"\nassert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"2.999999999\"\nassert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"2.999999999\"\nassert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"2.999999999\"\nassert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"2.999999999\"\nassert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"2.999999999\"\nassert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"2.999999999\"\nassert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"2.999999999\"\nassert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"2.999999999\"\nassert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"2.999999999\"\nassert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"2.999999999\"\nassert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"2.999999999\"\nassert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"2.999999999\"\nassert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"2.999999999\"\nassert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"2.999999999\"\nassert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"2.999999999\"\nassert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"2."
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"3.000000000\""
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"3.000000000\"\n"
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4') == '1\\n'\n"
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == \"1\"\n"
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\npass\"\n"
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == 1\nassert solution(\"1 2\\n1 3\\n2 4\\n3 4\") == 1\nassert solution(\"4 5\\n0 1 0 0\\n1 2\\n2 3\\n3 4\\n4 5\") == 1\nassert solution(\"2 3\\n3 4\\n4 5\\n1 2\\n1 3\") == 1"
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\\n\") == \"1\\n\"\nassert solution(\"6 4\\n1 0 0 0\\n0 1 0 0\\n0 0 1 0\\n0 0 1 0\\n1 1 1 0\\n0 1 0 1\\n0 0 0 1\\n0 1 0 1\\n\") == \"6\\n\""
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == 1, \"Test case failed.\""
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4') == 1\nprint('All tests passed!')"
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4') == '1'\n"
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == 1\nassert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\\n4 4\") == 2\nassert solution(\"1 3\\n1 2\\n1 4\\n2 4\\n3 4\") == 3\nassert solution(\"2 2\\n1 2\\n2 3\\n3 4\\n4 4\") == 4\nassert solution(\"2 2\\n1 2\\n2 3\\n3 4\\n4 4\\n4 4\") == 4\n"
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == \"1\"\nassert solution(\"5 5\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n\") == \"0\""
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2') == '6.283185'\nprint('All test cases passed!')"
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"6.283185\""
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n    3 3\n    0 0\n    0 1\n    1 0\n    0 1\n    0 2\n    1 2\n\"\"\") == 6.283185\n\nassert solution(\"\"\"\n    3 3\n    0 0\n    0 1\n    1 0\n    0 1\n    0 2\n    1 2\n\"\"\") == 6.283185\n\nassert solution(\"\"\"\n    3 3\n    0 0\n    0 1\n    1 0\n    0 1\n    0 2\n    1 2\n\"\"\") == 6.283185"
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 6.283185, \"Test failed\""
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2') == '6.283185'"
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2') == '6.283185'"
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2') == '6.283185'\nassert solution('2 2\\n1 1\\n2 1\\n3 2\\n4 3\\n5 4\\n6 5\\n7 6\\n8 7\\n9 8\\n10 9\\n11 10\\n12 11\\n13 12\\n14 13\\n15 14\\n16 15\\n17 16\\n18 17\\n19 18\\n20 19\\n21 20\\n22 21\\n23 22\\n24 23\\n25 24\\n26 25\\n27 26\\n28 27\\n29 28\\n30 29\\n31 30\\n32 31\\n33 32\\n34 33\\n35 34\\n36 35\\n37 36\\n38 37\\n39 38\\n40 39\\n41 40\\n42 41\\n43 42\\n44 43\\n45 44\\n46 45\\n47 46\\n48 47\\n49 48\\n50 49\\n51 50\\n52 51\\n53 52\\n54 53\\n55 54\\n56 55\\n57 56\\n58 57\\n59 58\\n60 59\\n61 60\\n62 61\\n63 62\\n64 63\\n65 64\\n66 65\\n67 66\\n68 67\\n69 68\\n70 69\\n71 70\\n72 71\\n73 72\\n74 73\\n75 74\\n76 75\\n77 76\\n78 77\\n79 78\\n80 79\\n81 80\\n82 81\\n83 82\\n84 83\\n85 84\\n86 85\\n87 86\\n88 87\\n89 88\\n90 89\\n91 90\\n92 91\\n93 92\\n94 93\\n95 94\\n96 95\\n97 96\\n98 97\\n99 98\\n100 99\\n101 100\\n102 101\\n103 102\\n104 103\\n105 104\\n106 105\\n107 106\\n108 107\\n109 108\\n110 109\\n111 110\\n112 111\\n113 112\\n114 113\\n115 114\\n116 115\\n117 116\\n118 117\\n119 118\\n120 119\\n121 120\\n122 121\\n123 122\\n124 123\\n125 124\\n126 125\\n127 126\\n128 127\\n129 128\\n130 129\\n131 130\\n132 131\\"
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"6.283185\\n\"\n"
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2\") == \"6.283185\""
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"1 2 3\\n\", \"Test case 1 failed\"\nassert solution(\"3\") == \"1 2 3\\n4\\n\", \"Test case 2 failed\"\nassert solution(\"4\") == \"1 2 3\\n4 5\\n\", \"Test case 3 failed\"\nassert solution(\"5\") == \"1 2 3\\n4 5 6\\n7\\n\", \"Test case 4 failed\""
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"1 2 3\\n\"\nassert solution(4) == \"1 2 3 4\\n\"\nassert solution(5) == \"1 2 3 4 5\\n\"\nassert solution(6) == \"1 2 3 4 5 6\\n\"\nassert solution(7) == \"1 2 3 4 5 6 7\\n\""
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"1 2 3\""
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"1 2 3\\n\"\nassert solution(input()) == \"4 5 6 7 8\\n\"\nassert solution(input()) == \"9 10 11 12 13 14 15\\n\"\nassert solution(input()) == \"16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 2"
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(2) == \"1 2 3\", \"Expected output: 1 2 3, got {}\".format(solution(2))  # Test case 1\nassert solution(3) == \"1 2 3 4 5 6 7\", \"Expected output: 1 2 3 4 5 6 7, got {}\".format(solution(3))  # Test case 2\nassert solution(4) == \"1 2 3 4 5 6 7 8 9\", \"Expected output: 1 2 3 4 5 6 7 8 9, got {}\".format(solution(4))  # Test case 3\nassert solution(5) == \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\", \"Expected output: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15, got {}\".format(solution(5))  # Test case 4\nassert solution(6) == \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\", \"Expected output: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25, got {}\".format(solution(6))  # Test case 5"
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1 2 3\\n\""
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == '1 2 3'"
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(2) == \"1 2 3\\n\", \"Test case 1\"\nassert solution(3) == \"1 2 3 4\\n\", \"Test case 2\"\nassert solution(4) == \"1 2 3 4 5\\n\", \"Test case 3\"\nassert solution(5) == \"1 2 3 4 5 6\\n\", \"Test case 4\"\nassert solution(6) == \"1 2 3 4 5 6 7\\n\", \"Test case 5\""
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == \"1 2 3\"\nassert solution(2) == \"1 2\"\nassert solution(3) == \"1\"\nassert solution(4) == \"2 1\"\nassert solution(5) == \"3 2 1\""
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '1 2 3'"
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n1 2\\n1 3\\n2 4\\n3 4\") == \"1\\n1 2 3 4\""
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\n1 2\\n1 3\\n2 4\\n3 4\") == \"1\\n1 2 3 4\\n\"\nassert solution(\"6 4\\n1 2\\n1 3\\n2 4\\n3 4\") == \"2\\n2 4 3 1\\n\"\nassert solution(\"5 3\\n1 2\\n1 3\\n2 3\\n3 4\") == \"2\\n1 3 2 4\\n\"\nassert solution(\"5 5\\n1 2\\n1 3\\n2 3\\n3 4\\n4 5\") == \"0\\n4 5 1 2 3\\n\"\nassert solution(\"6 5\\n1 2\\n1 3\\n2 3\\n3 4\\n4 5\\n5 6\") == \"2\\n2 3 4 1 5\\n\"\nassert solution(\"3 4\\n1 2\\n2 3\\n3 4\") == \"0\\n1 2 3 4\\n\""
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 4\\n1 2\\n1 3\\n2 4\\n3 4') == '1\\n1 2 3 4\\n'\nassert solution('5 5\\n1 2\\n1 3\\n2 3\\n3 4') == '1\\n1 2 3 4\\n'\nassert solution('4 3\\n1 2\\n1 3\\n2 4\\n3 1') == '1\\n1 2 3 4\\n'\nassert solution('4 2\\n1 2\\n1 3\\n2 3\\n3 4') == '1\\n1 2 3 4\\n'\nassert solution('4 5\\n1 2\\n1 3\\n2 3\\n3 4') == '1\\n1 2 3 4\\n'\nassert solution('5 4\\n1 2\\n1 3\\n2 3\\n3 4') == '1\\n1 2 3 4\\n'\nassert solution('4 1\\n1 2\\n1 3\\n2 4\\n3 1') == '1\\n1 2 3 4\\n'\nassert solution('5 6\\n1 2\\n1 3\\n2 3\\n3 4') == '1\\n1 2 3 4\\n'"
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\n1 2\\n1 3\\n2 4\\n3 4\") == 1\nassert solution(\"4 4\\n1 2\\n1 3\\n2 4\\n3 4\") == 1\nassert solution(\"4 4\\n1 2\\n1 3\\n2 4\\n3 4\") == 1\nassert solution(\"4 4\\n1 2\\n1 3\\n2 4\\n3 4\") == 1"
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\n1 2\\n1 3\\n2 4\\n3 4\") == \"1\\n1 2 3 4\\n\"\n"
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(None) == \"\", \"Test Case 1\"\n\nassert solution(\"\") == \"\", \"Test Case 2\"\n\nassert solution(\"5 5\\n\") == \"0\", \"Test Case 3\"\n\nassert solution(\"5 5\\n1 2\\n1 3\\n2 4\\n3 4\") == \"0\\n1 2 3 4\", \"Test Case 4\"\n\nassert solution(\"5 5\\n1 2\\n1 3\\n2 4\\n3 4\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\") == \"0\\n2 4 6 8\", \"Test Case 5\""
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Test Case {t+1} Failed\" for t in range(input())"
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n4 4\n1 2\n1 3\n2 4\n3 4\n\"\"\") == \"1\\n1 2 3 4\\n\""
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"1 2 3 4\""
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 4\\n1 2\\n1 3\\n2 4\\n3 4') == '1\\n1 2 3 4\\n'"
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 1\\n1 2') == '1'\n\nfor i in range(int(input())):\n    a, b = map(int, input().split())\n    graph = [[0] * (n+1) for _ in range(n+1)]\n    for _ in range(m):\n        u, v = map(int, input().split())\n        graph[u][v], graph[v][u] = 1, 1\n    independent_sets = [[False] * (n+1) for _ in range(n+1)]\n    size = 0\n    for i in range(n+1):\n        if independent_sets[i][i]:\n            size += 1\n            continue\n        for j in range(i+1, n+1):\n            if independent_sets[i][j]:\n                size += 1\n                break\n            for k in range(j+1, n+1):\n                if independent_sets[i][k] or independent_sets[j][k]:\n                    size += 1\n                    independent_sets[i][j] = True\n                    independent_sets[j][i] = True\n                    break\n    print(size)"
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1\\n1 2\") == \"1\\n\"\nassert solution(\"3 2\\n1 2\\n2 3\") == \"2\\n\"\nassert solution(\"4 3\\n1 2\\n2 3\\n3 4\") == \"3\\n\"\nassert solution(\"5 4\\n1 2\\n2 3\\n3 4\\n4 5\") == \"4\\n\"\nassert solution(\"6 5\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\") == \"5\\n\"\nassert solution(\"7 6\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\") == \"6\\n\"\nassert solution(\"8 7\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\") == \"7\\n\"\nassert solution(\"9 8\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\") == \"8\\n\"\nassert solution(\"10 9\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\") == \"9\\n\""
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n    2 1\n    1 2\n    \"\"\") == \"1\\n\"\nassert solution(\"\"\"\n    3 4\n    1 2\n    1 3\n    2 3\n    2 4\n    3 4\n    \"\"\") == \"2\\n\"\nassert solution(\"\"\"\n    4 5\n    1 2\n    1 3\n    2 3\n    3 4\n    4 5\n    \"\"\") == \"3\\n\"\nassert solution(\"\"\"\n    6 7\n    1 2\n    1 3\n    2 3\n    3 4\n    4 5\n    5 6\n    6 7\n    \"\"\") == \"4\\n\"\nassert solution(\"\"\"\n    8 9\n    1 2\n    1 3\n    2 3\n    3 4\n    4 5\n    5 6\n    6 7\n    7 8\n    8 9\n    \"\"\") == \"5\\n\"\nassert solution(\"\"\"\n    10 11\n    1 2\n    1 3\n    2 3\n    3 4\n    4 5\n    5 6\n    6 7\n    7 8\n    8 9\n    9 10\n    10 11\n    \"\"\") == \"6\\n\""
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1\\n1 2\\n\") == 1\n"
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1\\n1 2\\n\") == \"1\\n\"\n"
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\n'\n"
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(r\"2 1\\n1 2\\n\") == \"1\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1\\n\"\n"
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1\\n1 2\\n\") == \"1\"\nassert solution(\"3 4\\n1 2\\n2 3\\n3 4\\n\") == \"2\"\nassert solution(\"5 1\\n1 2\\n2 3\\n3 4\\n4 5\\n\") == \"2\""
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"1\\n\"\n\nfrom collections import deque"
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(2) == 45"
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(2) == 45\n"
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(2) == 45, \"Output should be 45\"\n"
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(2) == 45, \"Test failed\" # Expected output: 45\nprint(\"All test cases passed\")"
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(2) == 45"
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(2) == 45, \"Expected output: 45, actual output: \" + str(solution(2))\n\nprint(\"All test cases passed\")"
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(2) == 45, \"Test 1 failed\"\n\nsolution = '''\n"
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(2) == 45"
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"45\""
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(2) == 45, \"The supply for n digit lucky numbers should be 45.\""
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r').read()) == '4\\n'\nassert solution('5\\n20\\n20') == '4\\n'\nassert solution('7\\n11\\n9\\n12\\n2') == '4\\n'\n"
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 20 20\\n7 11 9 12 2\") == \"4\"\nassert solution(\"5 20 20\\n1 2 3\\n4 5 6\") == \"4\""
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 4"
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 20 20\\n7 11 9 12 2\") == \"4\"\nassert solution(\"100 10 100\\n100 10 100\") == \"10\"\nassert solution(\"10 20 10\\n10 20 10\\n10 20 10\\n10 20 10\") == \"10\"\nassert solution(\"5 10 30\\n5 20 20\\n5 10 30\\n5 20 20\") == \"4\"\nassert solution(\"100 10 100\\n100 10 100\\n100 10 100\\n100 10 100\") == \"10\""
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 20 20\\n7 11 9 12 2') == '4\\n'\n"
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"4\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n5 20 20\n7 11 9 12 2\n''') == '''\n4\n'''"
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=input()) == expected, f\"Solution returned {solution(stdin=input())}, but expected {expected}\"\n"
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 20 20\\n7 11 9 12 2\") == \"4\\n\"\n"
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(str(5) + \" \" + str(20) + \" \" + str(20)) == \"4\\n\""
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\") == \"2\\n\""
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\\n') == '2'\nassert solution('3 3\\nkenny 1 harry potter\\ncharlie 1 lord of the rings\\njenny 2 harry potter\\nlaura 1 lord of the rings\\n') == '3'\nassert solution('3 3\\nkenny 1 harry potter\\ncharlie 1 lord of the rings\\njenny 2 harry potter\\nlaura 1 lord of the rings\\n3\\n1\\n2\\n') == '6'"
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\npass\\n\"\n"
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings') == '2'\nprint(\"Correct\")"
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings') == '2\\n'\nassert solution('1 3\\nkitty 1 sleepycat\\nmole 1 cool\\nbob 1 sleepycat\\nalice 1 funny') == '2\\n'\nassert solution('1 4\\nalice 1 funny\\nben 1 lazy\\ncharlie 1 sleepycat\\nbob 1 sleepycat\\nbob 1 sleepycat') == '2\\n'\nassert solution('1 4\\nalice 1 funny\\nben 1 lazy\\ncharlie 1 sleepycat\\nbob 1 sleepycat\\ncharlie 1 sleepycat') == '4\\n'\nassert solution('2 3\\nalice 1 funny\\nbob 1 sleepycat\\nben 1 lazy\\ncharlie 1 sleepycat\\nben 1 lazy\\nben 1 lazy') == '2\\n'\nassert solution('2 3\\nalice 1 funny\\nbob 1 sleepycat\\nben 1 lazy\\ncharlie 1 sleepycat\\nben 1 lazy\\nben 1 lazy\\ncharlie 1 sleepycat') == '4\\n'"
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2\\n\""
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\\n\"\n) == \"2\""
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('test_input.txt').read()) == '2\\n'"
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\") == \"2\"\nassert solution(\"2 2\\njohn 1 lover\\nalice 1 lover\\nmia 1 lover\\npeter 1 lover\") == \"1\"\nassert solution(\"3 3\\nmaria 2 love\\npeter 3 love\\njanice 2 love\\nanna 1 love\") == \"2\"\n"
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '2', \"Your solution is incorrect. Please see the examples provided.\""
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n01\") == \"2 1\\n\"\nassert solution(\"2\\n101\") == \"3 1\\n\"\nassert solution(\"2\\n100111\") == \"4 3\\n\"\nassert solution(\"2\\n10011000\") == \"5 3\\n\"\nassert solution(\"1\\n1\") == \"1 1\\n\"\nassert solution(\"1\\n0\") == \"0 1\\n\"\nassert solution(\"2\\n01\") == \"2 1\\n\""
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n01\") == \"2 1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1\\n01') == '2 1'\n"
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1\\n01') == '2 1\\n'\nassert solution('2\\n01') == '1 2\\n'\nassert solution('3\\n001') == '2 3\\n'\nassert solution('4\\n010') == '3 4\\n'\nassert solution('5\\n011') == '3 4\\n'\nassert solution('6\\n0101') == '4 5\\n'\nassert solution('7\\n0111') == '4 5\\n'\nassert solution('8\\n01110') == '4 5\\n'\nassert solution('9\\n011100') == '4 5\\n'\nassert solution('10\\n01111000') == '4 5\\n'\nassert solution('11\\n011110000') == '4 5\\n'\nassert solution('12\\n0111100000') == '4 5\\n'\nassert solution('13\\n01111000000') == '4 5\\n'\nassert solution('14\\n011110000000') == '4 5\\n'\nassert solution('15\\n0111100000000') == '4 5\\n'\nassert solution('16\\n01111000000000') == '4 5\\n'\nassert solution('17\\n011110000000000') == '4 5\\n'\nassert solution('18\\n0111100000000000') == '4 5\\n'\nassert solution('19\\n011110000000000000') == '4 5\\n'\nassert solution('20\\n0111100000000000000') == '4 5\\n'\nassert solution('21\\n01111000000000000000') == '4 5\\n'\nassert solution('22\\n011110000000000000000') == '4 5\\n'\nassert solution('23\\n0111100000000000000000') == '4 5\\n'\nassert solution('24\\n011110000000000000000000') == '4 5\\n'\nassert solution('25\\n011110000000000000000000') == '4 5\\n'\nassert solution('26\\n0111100000000000000000000') == '4 5\\n'\nassert solution('27\\n01111000000000000000000000') == '4 5\\n'\nassert solution('28\\n011110000000000000000000000') == '4 5\\n'\nassert solution('29\\n0111100000000000000000000000') == '4 5\\n'\nassert solution('30\\n01111000000000000000000000000') == '4 5\\n'\nassert solution('31\\n011110000000000000000000000000') == '4 5\\n'\nassert solution('32\\n01111000000000000000000000000000') == '4 5\\n'\nassert solution('33\\"
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2 1\"\n"
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n01\") == \"2 1\"\n"
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n01\") == \"2 1\""
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"1\\n01\") == \"2 1\\n\""
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n01\\n\") == \"2 1\""
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n01\") == \"2 1\\n\"\nassert solution(\"2\\n010\") == \"2 2\\n\"\nassert solution(\"3\\n0101\") == \"2 1\\n\"\nassert solution(\"4\\n01010\") == \"2 2\\n\"\nassert solution(\"5\\n0101010\") == \"2 3\\n\""
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n2123\\n1012\\n2123\\n\""
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n2123\\n1012\\n2123\"\nassert solution(\"2\\n3 1\\n311\\n2 1\\n22\\n2 1\\n11\\n3 1\\n33\\n2 1\\n33\\n3 1\\n11\\n33\\n\") == \"3 2\\n311\\n222\\n333\\n111\\n333\\n\"\nassert solution(\"3\\n4 2\\n1111\\n3 2\\n333\\n3 2\\n1111\\n333\\n\") == \"4 3\\n1111\\n333\\n333\\n333\\n\""
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: '{expected_output}', but got: '{solution(input())}'\""
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '4 3\\n2123\\n1012\\n2123\\n2233\\n2233\\n1111'\n"
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"4 3\\n2123\\n1012\\n2123\""
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12') == '4 3\\n2123\\n1012\\n2123'"
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12') == '4 3\\n2123\\n1012\\n2123\\n----\\n2233\\n2233\\n1111'\n"
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\npass\\n'"
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n2123\\n1012\\n2123\\n2233\\n2233\\n1111\\n\""
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\\n\") == \"4 3\\n2123\\n1012\\n2123\\n----\\n2233\\n2233\\n1111\""
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 'atk\\nfreetype\\nglib2\\nlibattr\\nlibjpeg\\npcre\\ngrep\\nvim-common\\nxorg-x11-libs\\npango\\nzlib\\nlibtiff\\ngtk2\\nvim-X11\\n'"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected_output, f\"Test case failed. Expected output: {expected_output}, Received output: {solution(stdin)}\""
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == ['atk', 'freetype', 'glib2', 'libattr', 'libjpeg', 'pcre', 'grep', 'vim-common', 'xorg-x11-libs', 'pango', 'zlib', 'libtiff', 'gtk2', 'vim-X11']"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin: str) -> str:\n    pass"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == 'atk\\nfreetype\\nglib2\\nlibattr\\nlibjpeg\\npcre\\ngrep\\nvim-common\\nxorg-x11-libs\\npango\\nzlib\\nlibtiff\\ngtk2\\nvim-X11\\n', \"Invalid Solution\"\n"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == 'atk' + 'freetype' + 'glib2' + 'libattr' + 'libjpeg' + 'pcre' + 'grep' + 'vim-common' + 'xorg-x11-libs' + 'pango' + 'zlib' + 'libtiff' + 'gtk2' + 'vim-X11' + '\\n'"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution:\n    pass"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"libattr\") == \"atk\"\nassert solution(\"vim-X11 vim-common gtk2 libattr\") == \"atk\"\nassert solution(\"vim-common\") == \"gtk2\"\nassert solution(\"gtk2 libtiff atk pango glib2\") == \"atk\"\nassert solution(\"libtiff zlib libjpeg\") == \"atk\"\nassert solution(\"atk\") == \"atk\"\nassert solution(\"pango xorg-x11-libs freetype glib2\") == \"atk\"\nassert solution(\"glib2\") == \"atk\"\nassert solution(\"zlib\") == \"atk\"\nassert solution(\"libjpeg\") == \"atk\"\nassert solution(\"xorg-x11-libs grep freetype\") == \"atk\"\nassert solution(\"grep pcre\") == \"atk\"\nassert solution(\"pcre\") == \"atk\"\nassert solution(\"freetype\") == \"atk\"\nassert solution(\"0\") == \"cannot be ordered\"\nassert solution(\"emacs xorg-x11 lisp\") == \"cannot be ordered\"\nassert solution(\"xorg-x11\") == \"cannot be ordered\"\nassert solution(\"lisp emacs\") == \"cannot be ordered\"\n"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"libattr\") == [\"libattr\"]\nassert solution(\"vim-X11 vim-common gtk2 libattr\") == [\"libattr\", \"vim-X11\", \"vim-common\", \"gtk2\", \"libtiff\", \"atk\", \"pango\", \"glib2\"]\nassert solution(\"vim-common\") == [\"vim-common\"]\nassert solution(\"gtk2 libtiff atk pango glib2\") == [\"gtk2\", \"libtiff\", \"atk\", \"pango\", \"glib2\"]\nassert solution(\"libtiff zlib libjpeg atk pango glib2\") == [\"atk\", \"glib2\", \"libtiff\", \"zlib\", \"libjpeg\", \"pango\"]\nassert solution(\"atk\") == [\"atk\"]\nassert solution(\"pango xorg-x11-libs freetype glib2\") == [\"atk\", \"glib2\", \"libtiff\", \"zlib\", \"libjpeg\", \"pango\", \"xorg-x11-libs\", \"freetype\", \"xorg-x11-libs\", \"freetype\"]\nassert solution(\"glib2\") == [\"glib2\"]\nassert solution(\"zlib\") == [\"zlib\"]\nassert solution(\"libjpeg\") == [\"libjpeg\"]\nassert solution(\"xorg-x11-libs grep freetype\") == [\"atk\", \"glib2\", \"libtiff\", \"zlib\", \"libjpeg\", \"pango\", \"xorg-x11-libs\", \"grep\", \"grep\", \"freetype\"]\nassert solution(\"grep pcre\") == [\"grep\", \"pcre\"]\nassert solution(\"pcre\") == [\"pcre\"]\nassert solution(\"freetype\") == [\"freetype\"]\n\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution"
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"16\""
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"16\"\nassert solution(input()) == \"16\""
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('32 20') == '16'\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"16\", \"Expected output: 16, received: \" + solution(stdin)"
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin='32 20') == '16', \"Test case 1 failed\"\n\nassert solution(stdin='9 20') == '2', \"Test case 2 failed\"\n\nassert solution(stdin='1000000000 100000000') == '16', \"Test case 3 failed\"\n\nassert solution(stdin='1000000000 -1000000000') == '16', \"Test case 4 failed\"\n\nassert solution(stdin
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('32 20') == '16'\n"
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '16'"
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"16\", \"Output should be 16\""
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"32 20\") == \"16\""
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"32 20\") == \"16\", \"Expected output 16, got {}\".format(solution(\"32 20\"))\nprint(\"All tests passed!\")"
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"5 13\""
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''3 4\n....\n.#.#\n....''') == '''5 13\n"
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_str) == expected_output, f\"Test failed. Input: {input_str}, Expected Output: {expected_output}, Received: {solution(input_str)}\"\n"
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3, 4) == \"5 13\""
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"3 4\\n....\\n.#.#\\n....\\n\") == \"5 13\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 5, \"Incorrect output for the problem.\""
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4\\n....\\n.#.#\\n....\") == \"5 13\""
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    3 4\n   ....\n    #.#\n   ....\n    \"\"\"\n) == \"5 13\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"\n\nassert solution(\n    \"\"\"\n    4 5\n   ....\n    #.#\n    #..#\n    \"\"\"\n) == \"7 15\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"\n\nassert solution(\n    \"\"\"\n    5 6\n    #.#\n    #..#\n    #.#\n    \"\"\"\n) == \"11 19\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4\\n....\\n.#.#\\n....\\n\") == \"5 13\\ndef solution(stdin: str) -> str:\\npass\\n\""
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Solution failed for input {input()}, expected output {expected_output}.\"\n"
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0\") == \"5\\n\"\n"
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Expected {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0\") == \"5\""
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '5\\n'"
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0\") == \"5\\n\"\nassert solution(\"3 3\\n1 2 5 1\\n2 3 3 1\\n3 1 3 0\") == \"3\\n\"\nassert solution(\"3 3\\n1 2 5 1\\n2 3 3 1\\n3 1 3 0\") == \"5\\n\"\nassert solution(\"3 3\\n1 2 5 1\\n2 3 3 1\\n3 1 3 0\") == \"3\\n\"\nassert solution(\"3 3\\n1 2 5 1\\n2 3 3 1\\n3 1 3 0\") == \"5\\n\"\nassert solution(\"3 3\\n1 2 5 1\\n2 3 3 1\\n3 1 3 0\") == \"3\\n\""
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0\\n\") == \"5\"\nassert solution(\"5\\n\") == \"5\"\n"
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"5\"\n"
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"5\\n\"\nassert solution(stdin) == \"5\\n\"\nassert solution(stdin) == \"5\\n\""
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n2 3\n-1 0\n-1 1\n0 1\n\"\"\") == 0\n\nassert solution(\"\"\"\n10 6\n0 1\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n14 15\n15 16\n16 17\n17 18\n18 19\n19 20\n20 21\n21 22\n22 23\n23 24\n24 25\n25 26\n26 27\n27 28\n28 29\n29 30\n30 31\n31 32\n32 33\n33 34\n34 35\n35 36\n36 37\n37 38\n38 39\n39 40\n40 41\n41 42\n42 43\n43 44\n44 45\n45 46\n46 47\n47 48\n48 49\n49 50\n50 51\n51 52\n52 53\n53 54\n54 55\n55 56\n56 57\n57 58\n58 59\n59 60\n60 61\n61 62\n62 63\n63 64\n64 65\n65 66\n66 67\n67 68\n68 69\n69 70\n70 71\n71 72\n72 73\n73 74\n74 75\n75 76\n76 77\n77 78\n78 79\n79 80\n80 81\n81 82\n82 83\n83 84\n84 85\n85 86\n86 87\n87 88\n88 89\n89 90\n90 91\n91 92\n92 93\n93 94\n94 95\n95 96\n96 97\n97 98\n98 99\n99 100\n100 101\n101 102\n102 103\n103 104\n104 105\n105 106\n106 107\n107 108\n108 109\n109 110\n110 111\n111 112\n112 113\n113 114\n114 115\n115 116\n116 117\n117 118\n118 119\n119 120\n120 121\n121 122\n122 123\n123 124\n124 125\n125 126\n126 127\n127 128\n128 129\n129 130\n130 131\n131 132\n132 133\n133 134\n134 135\n135 136\n136 137\n137 138\n138 139\n139 140\n140 141\n141 142\n142 143\n143 144\n144 145\n145 146\n146 147\n147 148\n148 149\n149 150\n150 151"
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\") == \"0\"\nassert solution(\"3 2\\n0 1\\n2 1\\n1 0\") == \"2\"\nassert solution(\"3 2\\n0 1\\n2 1\\n1 0\") == \"2\"\nassert solution(\"3 2\\n0 1\\n2 1\\n1 0\") == \"2\"\nassert solution(\"3 2\\n0 1\\n2 1\\n1 0\") == \"2\"\nassert solution(\"3 2\\n0 1\\n2 1\\n1 0\") == \"2\""
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\") == \"0\\n\"\nassert solution(\"4 4\\n-1 0\\n-1 1\\n-1 2\\n0 2\") == \"3\\n\"\nassert solution(\"5 5\\n-1 0\\n-1 1\\n-1 2\\n-1 3\\n0 3\") == \"5\\n\"\nassert solution(\"5 5\\n-1 0\\n-1 1\\n-1 2\\n0 3\\n-1 4\\n-1 5\") == \"10\\n\""
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\\n\") == \"0\\n\"\n"
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\\n\") == \"0\\n\"\nassert solution(\"10 10\\n-1 -1\\n0 0\\n0 9\\n9 0\\n-1 9\\n\") == \"9\\n\"\nassert solution(\"1 1\\n-1 0\\n0 1\\n\") == \"1\\n\"\nassert solution(\"1 1\\n0 0\\n-1 1\\n\") == \"0\\n\"\nassert solution(\"1 1\\n0 0\\n-1 1\\n-1 1\\n\") == \"1\\n\"\nassert solution(\"1 1\\n0 0\\n-1 1\\n0 1\\n-1 1\\n-1 1\\n\") == \"2\\n\"\nassert solution(\"1 1\\n0 0\\n-1 1\\n0 1\\n-1 1\\n0 1\\n-1 1\\n\") == \"2\\n\"\nassert solution(\"1 1\\n0 0\\n-1 1\\n0 1\\n-1 1\\n0 1\\n-1 1\\n-1 1\\n-1 1\\n-1 1\\n-1 1\\n\") == \"5\\n\""
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == \"0\\n\", \"Expected 0, got {}\".format(solution(sample_input))\n\nsample_input = \"\"\"\n2 3\n-1 0\n-1 1\n0 1\n\"\"\"\n\nprint(solution(sample_input))"
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == \"0\\n\""
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n2 3\n-1 0\n-1 1\n0 1\n\"\"\") == 0, \"Expected 0, got {}\".format(solution(\"\"\"\n2 3\n-1 0\n-1 1\n0 1\n\"\"\"))"
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\") == \"0\""
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\") == \"0\"\nassert solution(\"10 10\\n0 1\\n1 3\\n2 4\\n4 3\\n5 6\") == \"5\""
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n9 6 2 4\") == 6\n"
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Test failed. Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(4) == \"6\\n\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"6\"\n"
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n9 6 2 4\") == \"6\\ndef solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n9 6 2 4\") == \"6\\n\""
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n9 6 2 4\") == 6\nassert solution(\"6\\n1 2 3 4 5\") == 6\nassert solution(\"1\\n1\") == 1\nassert solution(\"5\\n1 2 3 4 5\") == 5\nassert solution(\"1\\n1\") == 1"
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n9 6 2 4\\n\") == \"6\\n\"\nassert solution(\"10\\n100 10 100 100 100 100\\n\") == \"20\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"1\\n\"\nassert solution(\"6\\n1 2 3 4 5 6\\n\") == \"2\\n\"\nassert solution(\"10\\n10 100 1000 10000 100000\\n\") == \"3\\n\"\n"
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"6\", \"Solution should return 6\""
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"6\\n\"\n"
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1 1 3 2\\n2 5 1\") == \"2.000000\""
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '2.000000'\nprint(\"All tests passed!\")"
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2.000000\"\n"
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"2.000000\""
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 2.000000, \"Error: The code is not working as expected.\""
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1 1 3 2\") == \"2.000000\\n\"\nassert solution(\"2 5 1\") == \"2.000000\\n\"\n"
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=input()) == \"2.000000\\n\"\n"
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1 1 3 2\\n2 5 1\") == \"2.000000\"\nassert solution(\"2 1 1 3 2\\n2 5 1\") == \"2.000000\"\nassert solution(\"2 1 1 3 2\\n2 5 1\") == \"2.000000\""
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == \"2.000000\\n\""
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin='2 1 1 3 2\\n2 5 1') == '2.000000'"
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 2\\n2 3\\n4\\n1 2\\n1 3\\n1 4\\n\") == \"96\" # correct output\nassert solution(\"5\\n1 2\\n2 3\\n3\\n1 2\\n1 3\\n1 4\\n\") == \"60\" # correct output\nassert solution(\"2\\n1 2\\n3\\n4\\n\") == \"0\" # incorrect input"
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 96\nassert solution(6) == 144\nassert solution(9) == 200\nassert solution(10) == 250\nassert solution(11) == 300\nassert solution(12) == 350\nassert solution(13) == 400\nassert solution(14) == 450\nassert solution(15) == 500\nassert solution(16) == 550\nassert solution(17) == 600\nassert solution(18) == 650\nassert solution(19) == 700\nassert solution(20) == 750\nassert solution(21) == 800\nassert solution(22) == 850\nassert solution(23) == 900\nassert solution(24) == 950\nassert solution(25) == 1000\nassert solution(26) == 1050\nassert solution(27) == 1100\nassert solution(28) == 1150\nassert solution(29) == 1200\nassert solution(30) == 1250\nassert solution(31) == 1300\nassert solution(32) == 1350\nassert solution(33) == 1400\nassert solution(34) == 1450\nassert solution(35) == 1500\nassert solution(36) == 1550\nassert solution(37) == 1600\nassert solution(38) == 1650\nassert solution(39) == 1700\nassert solution(40) == 1750\nassert solution(41) == 1800\nassert solution(42) == 1850\nassert solution(43) == 1900\nassert solution(44) == 1950\nassert solution(45) == 2000\nassert solution(46) == 2050\nassert solution(47) == 2100\nassert solution(48) == 2150\nassert solution(49) == 2200\nassert solution(50) == 2250\nassert solution(51) == 2300\nassert solution(52) == 2350\nassert solution(53) == 2400\nassert solution(54) == 2450\nassert solution(55) == 2500\nassert solution(56) == 2550\nassert solution(57) == 2600\nassert solution(58) == 2650\nassert solution(59) == 2700\nassert solution(60) == 2750\nassert solution(61) == 2800\nassert solution(62) == 2850\nassert solution(63) == 2900\nassert solution(64) == 2950\nassert solution(65) == 3000\nassert solution(66) == 3050\nassert solution(67) == 3100\nassert solution(68) == 3150\nassert solution(69) == 3200\nassert solution(70) == 3250\nassert solution(71) == 3300\nassert solution(72) == 3350\nassert solution(73) == 3400\nassert solution(74) == 3450\nassert solution(75) == 3500\nassert solution(76) == 3550\nassert solution(77) == 3600\nassert solution(78) == 3650\nassert solution(79) == 3700\nassert solution(80) == 3750\nassert solution(81) == 3800\nassert solution(82) == 3850\nassert solution(83) == 3900\nassert solution(84) == 3950\nassert solution(85) == 4000\nassert solution(86) == 4050\nassert solution(87) == "
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 96, \"The solution is not correct\"\n"
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution([1, 2, 2, 3, 4, 4, 4, 1, 2, 3, 4, 1, 2, 3, 4]) == \"96\""
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 96, \"The expected output is not obtained.\""
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == '96'"
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2\\n2 3\\n4\\n1 2\\n1 3\\n1 4\") == \"96\\n\""
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(str(3)) == \"96\""
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '96', 'Your solution is incorrect. Please check the input and output examples given.'"
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution([3]) == \"96\" # test case 1\nassert solution([1,2]) == \"96\" # test case 2\nassert solution([2,3]) == \"152\" # test case 3\nassert solution([4]) == \"208\" # test case 4\nassert solution([1,2,3,4]) == \"276\" # test case 5"
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Expected output: {output}\\nGot: {solution(input())}\""
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 0\\n0 1\\n1 0\\n1 1\\n\") == 3\n"
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n0 0\\n0 1\\n1 0\\n1 1') == '3\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '3'\n"
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 0\\n1 1\") == 3\nprint(\"All tests passed!\")"
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\").read()) == \"Output: 3\\nMinimum Spanning Tree: [1, 0, 0, 2, 2]\\n\"\n"
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"3\\n3\"\n\nfrom typing import List"
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 0\\n1 1\") == 3\n"
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 3"
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 0\\n0 1\\n1 0\\n1 1\\n\") == \"3\""
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected"
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"10\\n10\\n9\\n\""
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n2 8\\n3 1\\n1 4') == '10\\n10\\n9'\nassert solution('3\\n4 3\\n4 4\\n2 1\\n1 5') == '9\\n10\\n10'\nassert solution('3\\n100 100\\n2 5\\n5 1') == '50'"
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n2 8\\n3 1\\n1 4\\n') == '10\\n10\\n9\\n'"
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n2 8\\n3 1\\n1 4\") == \"10\\n10\\n9\"\nassert solution(\"3\\n100 100\\n100 100\\n100 100\") == \"100000\\n100000\\n100000\""
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2\\n3 1\\n1 4\") == \"10\\n10\\n9\""
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n2 8\\n3 1\\n1 4\\n') == '10\\n10\\n9\\n'\nassert solution('5\\n1 1\\n5 1\\n2 2\\n6 6\\n') == '5\\n5\\n5\\n'\nassert solution('3\\n1 2\\n1 4\\n3 4\\n') == '10\\n10\\n10\\n'"
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n2 8\\n3 1\\n1 4') == '10\\n10\\n9'\n"
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 8\\n3 1\\n1 4\") == \"10\\n10\\n9\"\n"
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=input()) == output, f\"Test Failed: {output}\"\n"
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == sample_output, \"Test case failed\"\n\nsample_input = \"\"\"\n4 4\n####\n"
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == '3\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution(sample_input) == \"3\"'"
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\\n\") == \"3\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\") == \"3\\ndef solution(stdin: str) -> str:\n    pass\""
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 4\\n#####\\n#JF#\") == \"IMPOSSIBLE\\n\"\nassert solution(\"5 4\\n#####\\n#..#\") == \"3\\n1\"\nassert solution(\"5 4\\n#####\\n#JF#\") == \"IMPOSSIBLE\\n\"\nassert solution(\"5 4\\n#####\\n#..#\") == \"3\\n1\"\nassert solution(\"5 4\\n#####\\n#JF#\") == \"IMPOSSIBLE\\n\"\nassert solution(\"5 4\\n#####\\n#..#\") == \"3\\n1\""
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\\n\") == \"3\\n\""
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('JOE\\n####\\n#JF#\\n#..#\\n#..#\\nJOE\\n####\\n#JF#\\n#..#\\n#..#') == 'IMPOSSIBLE\\n3'"
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\") == \"IMPOSSIBLE\\n3\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\") == \"IMPOSSIBLE\\n3\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\") == \"IMPOSSIBLE\\n3\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\") == \"IMPOSSIBLE\\n3\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\") == \"IMPOSSIBLE\\n3\""
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\\n\") == \"3\""
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\\n\") == \"3\""
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 2\\n2\\n1 1\\n\") == \"0.3333333333\""
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 2\\n2\\n1 1\\n\") == \"0.3333333333\"\n"
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(None) == \"0.3333333333\\n\""
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 2 2\\n2\\n1 1\\n') == '0.3333333333\\n'"
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 2\\n2\\n1 1\\n\") == \"0.3333333333\\n\""
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 2\\n2\\n1 1\") == \"0.3333333333\""
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 2\\n2\\n1 1\") == \"0.3333333333\\n\""
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_str) == expected_output, f\"Test case {test_case_number} failed. Expected output: {expected_output}, got: {solution(input_str)}\""
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 2 2\\n2\\n1 1\\n') == '0.3333333333\\n'\nassert solution('1 5 2\\n3\\n1 1\\n') == '0.6666666667\\n'\nassert solution('1 2 3\\n4\\n1 1\\n') == '0.5\\n'\nassert solution('1 1 2\\n5\\n1 1\\n') == '0.0\\n'\n"
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n    1 2 2\n    2\n    1 1''') == '0.3333333333'\nassert solution('''\n    1 2 2\n    2\n    2 1''') == '0.3333333333'\nassert solution('''\n    1 2 2\n    2\n    3 2''') == '0.3333333333'\nassert solution('''\n    1 2 2\n    2\n    4 2''') == '0.3333333333'\nassert solution('''\n    1 2 2\n    2\n    5 2''') == '0.3333333333'\nassert solution('''\n    1 2 2\n    2\n    6 2''') == '0.3333333333'\nassert solution('''\n    1 2 2\n    2\n    1 3''') == '0.6666666667'\nassert solution('''\n    1 2 2\n    2\n    1 4''') == '0.6666666667'\nassert solution('''\n    1 2 2\n    2\n    1 5''') == '0.6666666667'\nassert solution('''\n    1 2 2\n    2\n    1 6''') == '0.6666666667'\nassert solution('''\n    1 2 2\n    2\n    2 3''') == '0.3333333333'\nassert solution('''\n    1 2 2\n    2\n    2 4''') == '0.3333333333'\nassert solution('''\n    1 2 2\n    2\n    2 5''') == '0.3333333333'\nassert solution('''\n    1 2 2\n    2\n    2 6''') == '0.3333333333'\nassert solution('''\n    1 2 2\n    2\n    3 1''') == '0.3333333333'\nassert solution('''\n    1 2 2\n    2\n    3 2''') == '0.3333333333'\nassert solution('''\n    1 2 2\n    2\n    3 3''') == '0.3333333333'\nassert solution('''\n    1 2 2\n    2\n    3 4''') == '0.3333333333'\nassert solution('''\n    1 2 2\n    2\n    3 5''') == '0.3333333333'\nassert solution('''\n    1 2 2\n    2\n    3 6''') == '0.3333333333'\nassert solution('''\n    1 2 2\n    2\n    4 1''') == '0.3333333333'\nassert solution('''\n    1 2 2\n    2\n    4 2''') == '0.3333333333'\nassert solution('''\n    1 2 2\n    2\n    4 3''') == '0.3333333333'\nassert solution('''\n    1 2 2\n    2\n    4 4''') == '0.3333333333'\nassert solution('''\n    1 2 2\n    2\n    4 5''') == '0.3333333333'\nassert solution('''\n    1 2 2\n    2\n    4 6''') == '0.3333333333'\nassert solution('''\n    1 2 2\n    2\n    5 1''') == '0.3333333333'\nassert solution('''\n    1 2 2\n    2\n    5 2''') == '0.3333333333'\nassert solution('''\n    1 2 2\n    2\n    5 3''') == '0.3333333333'\nassert solution('''\n    1 2 2\n    2\n    5 4''') == '0.3333333333'\nassert solution('''\n    1 2 2\n    2\n    5 5''') == '0.3333333333'\nassert solution('''"
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(b'10\\n1') == '1023', 'Test failed'"
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10\\n1\\n\") == \"1023\"\nassert solution(\"10\\n21\\n\") == \"1021\"\nassert solution(\"10\\n111\\n\") == \"1021\"\nassert solution(\"10\\n0101110\\n\") == \"1021\"\nassert solution(\"10\\n1100000\\n\") == \"1021\"\nassert solution(\"10\\n1010111\\n\") == \"1021\"\nassert solution(\"10\\n0100010\\n\") == \"1021\"\nassert solution(\"10\\n101010101\\n\") == \"1021\""
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r')) == '1023'\nassert solution(open('input_2.txt', 'r')) == '1234'\nassert solution(open('input_3.txt', 'r')) == '12345'\nassert solution(open('input_4.txt', 'r')) == '123456'\nassert solution(open('input_5.txt', 'r')) == '1234567'"
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10\\n1\\n\") == \"1023\\n\""
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"1023\"\n"
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"1023\""
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == sample_output, f\"Test case {sample_case} failed: Expected output '{sample_output}', but got '{solution(sample_input)}'.\" for sample_case, sample_input, sample_output in zip(test_cases, sample_inputs, sample_outputs)"
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(str(input())) == \"1023\""
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 1023\n"
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n\") == \"6\""
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\") == \"6\\n\"\n"
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\") == \"6\\n\"  # Example 1"
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"6\\n\", \"The output should be 6.\""
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == \"6\\n\", \"Expected output: 6\\n\""
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin='2 2') == '6\\n'"
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n\") == \"6\\n\"\nprint(\"All tests pass\")"
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 2') == '6\\n'\nassert solution('3 2') == '8\\n'\nassert solution('5 2') == '11\\n'\nassert solution('2 3') == '14\\n'\nassert solution('10 2') == '18\\n'"
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\n\") == \"6\\n\"\nassert solution(\"5 5\\n\") == \"30\\n\"\nassert solution(\"7 7\\n\") == \"144\\n\"\nassert solution(\"9 9\\n\") == \"1048576\\n\"\nassert solution(\"1 1\\n\") == \"1\\n\"\n"
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == 6, \"The output is not correct\""
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_data) == output_data, f\"Expected output: {output_data}, Received output: {solution(input_data)}\""
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\") == \"2930\\nImpossible\\n\"\nassert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n2500\") == \"2930\\nImpossible\\n\"\nassert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n2500\\n2000\") == \"2930\\n2930\\n\"\nassert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n2500\\n2000\\n2000\") == \"2930\\n2930\\n2930\\n\""
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2930\\n\", \"Incorrect output. Please check your code.\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n\") == \"2930\"\n\nfrom typing import List"
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 2930, \"Your solution is incorrect. Please see the sample input and output for more details.\""
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\") == \"2930\\n\"\n\nassert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\") == \"2930\\n\"\n\nassert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\") == \"2930\\n\"\n\nassert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\") == \"2930\\n\"\n\nassert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\") == \"2930\\n\"\n\nassert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\") == \"Impossible\\n\"\n\nassert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\") == \"Impossible\\n\"\n\nassert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\") == \"Impossible\\n\""
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == '2930\\n'"
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\") == \"2930\" # expected output: \"2930\"\nassert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n200\\n300\\n400\\n500\\n600\\n700\\n800\\n900\\n1000\\n1100\\n1200\\n1300\\n1400\\n1500\\n1600\\n1700\\n1800\\n1900\\n2000\\n2100\\n2200\\n2300\\n2400\\n2500\\n2600\\n2700\\n2800\\n2900\\n3000\\n3100\\n3200\\n3300\\n3400\\n3500\\n3600\\n3700\\n3800\\n3900\\n4000\\n4100\\n4200\\n4300\\n4400\\n4500\\n4600\\n4700\\n4800\\n4900\\n5000\\n5100\\n5200\\n5300\\n5400\\n5500\\n5600\\n5700\\n5800\\n5900\\n6000\\n6100\\n6200\\n6300\\n6400\\n6500\\n6600\\n6700\\n6800\\n6900\\n7000\\n7100\\n7200\\n7300\\n7400\\n7500\\n7600\\n7700\\n7800\\n7900\\n8000\\n8100\\n8200\\n8300\\n8400\\n8500\\n8600\\n8700\\n8800\\n8900\\n9000\\n9100\\n9200\\n9300\\n9400\\n9500\\n9600\\n9700\\n9800\\n9900\\n10000\\n10100\\n10200\\n10300\\n10400\\n10500\\n10600\\n10700\\n10800\\n10900\\n11000\\n11100\\n11200\\n11300\\n11400\\n11500\\n11600\\n11700\\n11800\\n11900\\n12000\\n12100\\n12200\\n12300\\n12400\\n12500\\n12600\\n12700\\n12800\\n12900\\n13000\\n13100\\n13200\\n13300\\n13400\\n13500\\n13600\\n13700\\n13800\\n13900\\n14000\\n14100\\n14200\\n14300\\n14400\\n14500\\"
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == \"2930\""
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500') == '2930'\n"
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, but got {solution(stdin)}\"\n"
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3\\n0\\n0\\n1\") == \"2\"\nassert solution(\"1 2 3\\n0\\n0\\n1\") == \"2\""
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3\\n0\\n0\\n1\") == \"2\"\nassert solution(\"1 2 3\\n0\\n0\\n2\") == \"1\"\nassert solution(\"1 2 3\\n0\\n0\\n4\") == \"2\"\nassert solution(\"1 2 3\\n0\\n0\\n7\") == \"3\"\nassert solution(\"1 2 3\\n0\\n0\\n8\") == \"0\"\nassert solution(\"1 2 3\\n0\\n0\\n9\") == \"1\"\nassert solution(\"1 2 3\\n0\\n0\\n10\") == \"2\"\n"
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"2\\n\""
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2\""
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"1 2 3\\n0\\n0\\n1\\n\") == 2"
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3\\n0\\n0\\n1\") == \"2\"\n"
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin: str) == \"2\\n\"\n"
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(None) == \"Please provide input.\"\n\nfrom typing import List"
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3\\n0\\n0\\n1\") == \"2\"\n"
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n    3 3\n        -5 2 -5\n        -1 -2 -1\n    5 4 -5\n    2 2\n    ''') == '10\\n'"
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    3 3\n    -5 2 -5\n    -1 -2 -1\n    5 4 -5\n    2 2\n    \"\"\"\n) == \"10\"\n"
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"\"\"\n10\n\"\"\""
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"10\""
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 3\\n-5 2 -5\\n-1 -2 -1\\n5 4 -5\\n2 2') == '10'\n"
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 3\\n-5 2 -5\\n-1 -2 -1\\n5 4 -5\\n2 2') == '10'"
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 3\\n-5 2 -5\\n-1 -2 -1\\n5 4 -5\\n2 2') == 10\nassert solution('1 1\\n1\\n1\\n1\\n1') == 10\nassert solution('1 1\\n0\\n0\\n0\\n0') == 0\nassert solution('1 1\\n0\\n1\\n0\\n0') == 5\nassert solution('1 1\\n1\\n0\\n1\\n0') == 5\nassert solution('1 1\\n0\\n0\\n1\\n0') == 5\nassert solution('1 1\\n1\\n1\\n0\\n1') == 10\nassert solution('1 1\\n1\\n1\\n1\\n1') == 10"
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n-5 2 -5\\n-1 -2 -1\\n5 4 -5\\n2 2\") == \"10\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 3\\n-5 2 -5\\n-1 -2 -1\\n5 4 -5\\n2 2') == 10, \"Invalid output\""
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n-5 2 -5\\n-1 -2 -1\\n5 4 -5\\n2 2\") == \"10\\n\"\nprint(\"All test cases passed\")\n"
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n') == '3100\\n'\nprint('All tests pass.')"
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300') == '3100'\n"
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == \"3100\"\nassert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == \"3100\""
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n\") == \"3100\""
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"3100\\n\"\nassert solution(\"\"\"5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n\"\"\") == \"3100\\n\""
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300') == '3100\\n'"
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == \"3100\""
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"3100\\n\", \"Incorrect output\""
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n\") == \"3100\""
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == \"3100\\n\""
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 0"
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 1\\n0 1\\n') == '0\\n'\nassert solution('1 2\\n0 1\\n1 0\\n1 1\\n') == '1\\n'\nassert solution('1 3\\n0 2\\n2 1\\n1 0\\n') == '1\\n'\nassert solution('1 3\\n0 2\\n2 1\\n1 0\\n1 1\\n') == '2\\n'\nassert solution('3 2\\n1 1\\n1 2\\n1 3\\n') == '1\\n'"
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1\\n0 1\\n\") == \"0\"\n\nassert solution(\"3 1\\n0 1\\n1 2\\n\") == \"1\"\n\nassert solution(\"4 1\\n0 1\\n1 2\\n2 3\\n\") == \"1\"\n\nassert solution(\"5 1\\n0 1\\n1 2\\n2 3\\n3 4\\n\") == \"2\"\n\nassert solution(\"6 1\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n\") == \"2\"\n\nassert solution(\"7 1\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n\") == \"3\"\n\nassert solution(\"8 1\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n\") == \"3\"\n\nassert solution(\"9 1\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n\") == \"4\"\n\nassert solution(\"10 1\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n\") == \"4\"\n\nassert solution(\"11 1\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n\") == \"5\"\n\nassert solution(\"12 1\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n\") == \"5\"\n\nassert solution(\"13 1\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n\") == \"6\"\n\nassert solution(\"14 1\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n\") == \"6\"\n\nassert solution(\"15 1\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n\") == \"7\"\n\nassert solution(\"16 1\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n\") == \"7\"\n\nassert solution(\"17 1\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n\") == \"8\"\n\nassert solution(\"18 1\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n"
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1\\n0 1\\n0 2\\n1 3\\n1 4\\n2 5\\n2 6\\n3 7\\n3 8\\n4 9\\n4 10\\n5 11\\n5 12\\n6 13\\n6 14\\n7 15\\n7 16\\n8 17\\n8 18\\n9 19\\n9 20\\n10 21\\n10 22\\n11 23\\n11 24\\n12 25\\n12 26\\n13 27\\n13 28\\n14 29\\n14 30\\n15 31\\n15 32\\n16 33\\n16 34\\n17 35\\n17 36\\n18 37\\n18 38\\n19 39\\n19 40\\n20 41\\n20 42\\n21 43\\n21 44\\n22 45\\n22 46\\n23 47\\n23 48\\n24 49\\n24 50\\n25 51\\n25 52\\n26 53\\n26 54\\n27 55\\n27 56\\n28 57\\n28 58\\n29 59\\n29 60\\n30 61\\n30 62\\n31 63\\n31 64\\n32 65\\n32 66\\n33 67\\n33 68\\n34 69\\n34 70\\n35 71\\n35 72\\n36 73\\n36 74\\n37 75\\n37 76\\n38 77\\n38 78\\n39 79\\n39 80\\n40 81\\n40 82\\n41 83\\n41 84\\n42 85\\n42 86\\n43 87\\n43 88\\n44 89\\n44 90\\n45 91\\n45 92\\n46 93\\n46 94\\n47 95\\n47 96\\n48 97\\n48 98\\n49 99\\n49 100\\n50 101\\n50 102\\n51 103\\n51 104\\n52 105\\n52 106\\n53 107\\n53 108\\n54 109\\n54 110\\n55 111\\n55 112\\n56 113\\n56 114\\n57 115\\n57 116\\n58 117\\n58 118\\n59 119\\n59 120\\n60 121\\n60 122\\n61 123\\n61 124\\n62 125\\n62 126\\n63 127\\n63 128\\n64 129\\n64 130\\n65 131\\n65 132\\n66 133\\n66 134\\n67 135\\n67 136\\n68 137\\n68 138\\n69 139\\n69 140\\n70 141\\n70 142\\n71 143\\n71"
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"1\\n\"\n"
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 0, \"Expected output: 0, got: {}\".format(solution())"
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1\\n0 1\\n\") == \"0\"\nassert solution(\"2 3\\n0 1\\n1 2\\n\") == \"2\"\nassert solution(\"3 3\\n0 1\\n1 2\\n2 3\\n\") == \"4\""
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1\\n0 1\") == \"0\\n\""
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    2 1\n    0 1\n    \"\"\"\n) == \"0\"\n\nassert solution(\n    \"\"\"\n    2 2\n    0 1\n    1 2\n    \"\"\"\n) == \"1\"\n\nassert solution(\n    \"\"\"\n    2 2\n    0 1\n    1 2\n    \"\"\"\n) == \"1\"\n\nassert solution(\n    \"\"\"\n    2 3\n    0 1\n    1 2\n    2 3\n    \"\"\"\n) == \"3\"\n\nassert solution(\n    \"\"\"\n    2 3\n    0 1\n    1 2\n    2 3\n    \"\"\"\n) == \"3\""
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 1\\n0 1\\n') == '0\\n'\n"
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 10\") == \"10\"\nassert solution(\"5 12\") == \"12\"\nassert solution(\"73 21\") == \"21\"\nassert solution(\"73 42\") == \"1\""
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 10\") == 10, \"The correct output is: 10, but got: \" + solution(\"1 10\")"
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 10\") == \"10\\n\""
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 10\") == \"10\""
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Solution is {solution(stdin)}, but expected {expected}\"\n"
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"1 10\\n\") == \"10\\n\""
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 10\") == \"10\\n\"\nassert solution(\"1 73\") == \"1\\n\"\nassert solution(\"73 10\") == \"10\\n\"\nassert solution(\"73 73\") == \"1\\n\""
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 10\") == \"10\\n\"\nassert solution(\"10 10\") == \"10\\n\"\nassert solution(\"1 10\") == \"10\\n\"\nassert solution(\"10 10\") == \"10\\n\""
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 10') == '10'  # Input\nassert solution('7 10') == '1'  # Sheldon Numbers\nassert solution('10 7') == '0'  # No Sheldon Numbers"
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 10') == '10'\nassert solution('10 1') == '10'\nassert solution('100 10') == '20'\nassert solution('1000 100') == '200'\nassert solution('10000 1000') == '2000'\nassert solution('100000 100000') == '200000'"
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"0\"\nassert solution(input()) == \"0\"\nassert solution(input()) == \"0\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"6\"\nassert solution(input()) == \"7\"\nassert solution(input()) == \"8\"\nassert solution(input()) == \"9\"\nassert solution(input()) == \"9\""
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 0, \"No additional spots are needed.\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\") == 0, \"Empty input should return 0\"\nassert solution(\"0 0\") == 0, \"Invalid input should return 0\"\nassert solution(\"1 0\") == 0, \"Invalid input should return 0\"\nassert solution(\"-20000 0\") == 0, \"Invalid input should return 0\"\nassert solution(\"0 20001\") == 0, \"Invalid input should return 0\"\nassert solution(\"-20001 20000\") == 0, \"Invalid input should return 0\"\nassert solution(\"1000 0\") == 0, \"Invalid input should return 0\"\nassert solution(\"0 1000\") == 0, \"Invalid input should return 0\"\nassert solution(\"1000 1000\") == 0, \"Invalid input should return 0\"\nassert solution(\"0 0\") == 0, \"Invalid input should return 0\"\n\nfrom typing import List"
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r')) == 0, \"Test failed for input: \" + open('input.txt', 'r').read()"
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 0\\n1000 0\\n0 1000\\n1000 1000\") == 0, \"Test case 1 failed\"\nassert solution(\"0 0\\n-10000 -20000\\n-10000 20000\\n-10000 20000\") == 2, \"Test case 2 failed\"\nassert solution(\"0 0\\n-20000 -10000\\n20000 -10000\\n20000 -10000\") == 1, \"Test case 3 failed\"\nassert solution(\"0 0\\n-20000 -20000\\n20000 -20000\\n20000 -20000\") == 3, \"Test case 4 failed\"\nassert solution(\"0 0\\n-20000 -20000\\n-20000 -10000\\n-20000 10000\") == 3, \"Test case 5 failed\""
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 0\\n1000 0\\n0 1000\\n1000 1000\\n\") == 0\nassert solution(\"0 0\\n1000 0\\n0 1000\\n1000 1000\\n2000 0\\n\") == 1\nassert solution(\"0 0\\n1000 0\\n0 1000\\n1000 1000\\n-2000 0\\n\") == 2\nassert solution(\"0 0\\n1000 0\\n0 1000\\n1000 1000\\n-2000 0\\n-2000 1000\\n\") == 3\nassert solution(\"0 0\\n1000 0\\n0 1000\\n1000 1000\\n-2000 0\\n-2000 1000\\n2000 0\\n\") == 4\nassert solution(\"0 0\\n1000 0\\n0 1000\\n1000 1000\\n-2000 0\\n-2000 1000\\n2000 0\\n2000 1000\\n\") == 5"
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n0 0\\n1000 0\\n0 1000\\n1000 1000') == '0'"
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 0\\n1000 0\\n0 1000\\n1000 1000\\n\") == 0\n"
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n0 0\\n1000 0\\n0 1000\\n1000 1000\") == 0"
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 0, \"Your solution is incorrect. Please fix it by modifying the code and submit it again.\""
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"0.500000000 1.000000000\\n\"\n"
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1\\n0 1 0.5\") == \"0.500000000 1.000000000\"\nassert solution(\"1 2\\n0 1 0.5\") == \"-1\"\nassert solution(\"3 4\\n0 1 0.5\") == \"-1\"\nassert solution(\"2 3\\n0 1 0.5\") == \"0.500000000 0.500000000\"\nassert solution(\"2 2\\n0 1 0.5\") == \"0.500000000 0.500000000\"\nassert solution(\"5 3\\n0 1 0.5\") == \"0.750000000 0.250000000\"\nassert solution(\"2 4\\n0 1 0.5\") == \"0.750000000 0.250000000\""
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"0.500000000 1.000000000\"\n"
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1\\n0 1 0.5\\n\") == \"0.500000000 1.000000000\"\nprint(\"All test cases pass\")"
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1\\n0 1 0.5\\n\") == \"0.500000000 1.000000000\""
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r')) == '0.500000000 1.000000000\\n'\nassert solution(open('input.txt', 'r').read()) == '0.500000000 1.000000000\\n'"
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n    2 1\n    0 1 0.5\n    ''') == '0.500000000 1.000000000'\n\nassert solution('''\n    3 2\n    0 1 0.5\n    1 2 0.2\n    2 0 0.3\n    ''') == '0.476190476 0.842156863'"
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"2 1\n0 1 0.5\"\"\") == \"0.500000000 1.000000000\"\nassert solution(\"\"\"2 2\n0 1 0.5\n0 3 0.3\"\"\") == \"0.333333333 0.666666667\"\nassert solution(\"\"\"1 2\n0 1 0.5\"\"\") == \"-1\"\nassert solution(\"\"\"2 1\n0 1 0.5\n0 1 0.2\n0 2 0.3\n0 3 0.1\"\"\") == \"0.200000000 0.300000000 0.100000000\"\nassert solution(\"\"\"1 1\n0 1 0.5\"\"\") == \"0.250000000\"\nassert solution(\"\"\"2 3\n0 1 0.5\n0 2 0.3\n0 3 0.2\n0 4 0.1\"\"\") == \"-1\"\nassert solution(\"\"\"1 1\n0 1 0.5\n0 2 0.3\n0 3 0.4\n0 4 0.2\n0 5 0.1\"\"\") == \"0.166666667 0.100000000\"\nassert solution(\"\"\"3 2\n0 1 0.5\n0 2 0.3\n0 3 0.4\n0 4 0.2\n0 5 0.3\n0 6 0.1\"\"\") == \"0.111111111 0.222222222\"\nassert solution(\"\"\"2 3\n0 1 0.5\n0 2 0.3\n0 3 0.4\n0 4 0.2\n0 5 0.3\n0 6 0.1\n0 7 0.2\n0 8 0.1\"\"\") == \"0.166666667 0.266666667 0.100000000\"\nassert solution(\"\"\"3 4\n0 1 0.5\n0 2 0.3\n0 3 0.4\n0 4 0.2\n0 5 0.3\n0 6 0.1\n0 7 0.2\n0 8 0.1\n0 9 0.2\n0 10 0.1\"\"\") == \"0.166666667 0.266666667 0.366666667 0.100000000\"\nassert solution(\"\"\"4 3\n0 1 0.5\n0 2 0.3\n0 3 0.4\n0 4 0.2\n0 5 0.3\n0 6 0.1\n0 7 0.2\n0 8 0.1\n0 9 0.2\n0 10 0.1\n0 11 0.2\n0 12 0.1\"\"\") == \"-1\"\nassert solution(\"\"\"2 2\n0 1 0.5\n0 2 0.3\n0 3 0.4\n0 4 0.2\n0 5 0.3\n0 6 0.1\n0 7 0.2\n0 8 0.1\n0 9 0.2\n0 10 0.1\n0 11 0.2\n0 12 0.1\n0 13 0.2\n0 14 0.1\"\"\") == \"0.233333333 0.166666667\"\nassert solution(\"\"\"1 2\n0 1 0.5\n0 2 0.3\n0 3 0.4\n0 4 0.2\n0 5 0.3\n0 6 0.1\n0 7 0.2\n0 8 0.1\n0 9 0.2\n0 10 0.1\n0 11 0."
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 1\\n0 1 0.5\\n') == '0.500000000 1.000000000\\n'\nassert solution('3 2\\n1 2 0.75\\n0 2 0.25\\n1 3 0.5\\n0 3 0.25\\n') == '-1.000000000\\n'\nassert solution('4 3\\n1 2 0.5\\n0 3 0.25\\n1 4 0.25\\n0 4 0.5\\n') == '-1.000000000\\n'\nassert solution('5 4\\n1 3 0.5\\n0 4 0.25\\n1 5 0.25\\n0 5 0.5\\n1 6 0.25\\n0 6 0.5\\n') == '-1.000000000\\n'\nassert solution('6 5\\n1 4 0.5\\n0 5 0.25\\n1 6 0.25\\n0 6 0.5\\n1 7 0.25\\n0 7 0.5\\n1 8 0.25\\n0 8 0.5\\n1 9 0.25\\n0 9 0.5\\n1 10 0.25\\n0 10 0.5\\n') == '-1.000000000\\n'\nassert solution('7 6\\n1 5 0.5\\n0 6 0.25\\n1 7 0.25\\n0 7 0.5\\n1 8 0.25\\n0 8 0.5\\n1 9 0.25\\n0 9 0.5\\n1 10 0.25\\n0 10 0.5\\n1 11 0.25\\n0 11 0.5\\n1 12 0.25\\n0 12 0.5\\n1 13 0.25\\n0 13 0.5\\n1 14 0.25\\n0 14 0.5\\n1 15 0.25\\n0 15 0.5\\n1 16 0.25\\n0 16 0.5\\n1 17 0.25\\n0 17 0.5\\n1 18 0.25\\n0 18 0.5\\n1 19 0.25\\n0 19 0.5\\n1 20 0.25\\n0 20 0.5\\n' == '-1.000000000\\n'\nassert solution('8 7\\n1 6 0.5\\n0 7 0.25\\n1 8 0.25\\n0 8 0.5\\n1 9 0.25\\n0 9 0.5\\n1 10 0.25\\n0 10 0.5\\n1 11 0.25\\n0 11 0.5\\n1 12 0.25\\n0 12 0.5\\n1 13 0.25\\n0 13 0.5\\n1 14 0.25\\n0 14 0.5\\n1 15 0.25\\n0 15 0.5\\n1 16 0.25\\n0 16 0.5\\n1 17 0.25\\n0 17 0.5\\n1 18 0.25\\n0 18 0.5\\n1 19 0.25\\n0 19 0.5\\n1 20 0.25\\n0 20 0"
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('sample_input.txt', 'r')) == '0.500000000 1.000000000\\n'"
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n6\n1 1\n4 1\n1 5\n10 10\n10 8\n7 10\n''') == '7'\n\nassert solution('''\n2\n1 1\n2 1\n''') == '2'\n\nassert solution('''\n1\n1 1\n''') == '1'\n\nassert solution('''\n5\n1 1\n4 2\n5 2\n6 1\n7 2\n8 1\n9 2\n10 2\n11 1\n12 2\n13 1\n14 2\n15 1\n16 2\n17 1\n18 2\n19 1\n20 2\n21 1\n22 2\n23 1\n24 2\n25 1\n26 2\n27 1\n28 2\n29 1\n30 2\n31 1\n32 2\n33 1\n34 2\n35 1\n36 2\n37 1\n38 2\n39 1\n40 2\n41 1\n42 2\n43 1\n44 2\n45 1\n46 2\n47 1\n48 2\n49 1\n50 2\n51 1\n52 2\n53 1\n54 2\n55 1\n56 2\n57 1\n58 2\n59 1\n60 2\n61 1\n62 2\n63 1\n64 2\n65 1\n66 2\n67 1\n68 2\n69 1\n70 2\n71 1\n72 2\n73 1\n74 2\n75 1\n76 2\n77 1\n78 2\n79 1\n80 2\n81 1\n82 2\n83 1\n84 2\n85 1\n86 2\n87 1\n88 2\n89 1\n90 2\n91 1\n92 2\n93 1\n94 2\n95 1\n96 2\n97 1\n98 2\n99 1\n100 2\n101 1\n102 2\n103 1\n104 2\n105 1\n106 2\n107 1\n108 2\n109 1\n110 2\n111 1\n112 2\n113 1\n114 2\n115 1\n116 2\n117 1\n118 2\n119 1\n120 2\n121 1\n122 2\n123 1\n124 2\n125 1\n126 2\n127 1\n128 2\n129 1\n130 2\n131 1\n132 2\n133 1\n134 2\n135 1\n136 2\n137 1\n138 2\n139 1\n140 2\n141 1\n142 2\n143 1\n144 2\n145 1\n146 2\n147 1\n148 2\n149 1\n150 2\n151 1\n152 2\n153 1\n154 2\n155 1\n156 2\n157 1\n158 2\n159 1\n160 2\n161 1\n162 2\n163 1\n164 2\n165 1\n166 2\n167 1\n168 2\n169 1\n170 2\n171 1\n172 2\n173 1\n174 2\n175 1\n176 "
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\") == \"7\\n\""
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\") == \"7\""
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 7\n"
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"7\\n\""
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(None) == 'Not enough input. Please provide the number of customers to be divided up.'\n\nassert solution('') == 'Not enough input. Please provide the number of customers to be divided up.'\n\nassert solution('5') == 'Invalid input. Please provide a number of customers to be divided up.'\n\nassert solution('6') == 'Invalid input. Please provide a number of customers to be divided up.'\n\nassert solution('1') == 'Invalid input. Please provide a number of customers to be divided up.'\n\nassert solution('4') == 'Invalid input. Please provide a number of customers to be divided up.'\n\nassert solution('1001') == 'Invalid input. Please provide a number of customers to be divided up.'\n\nassert solution('1000') == 'Invalid input. Please provide a number of customers to be divided up.'\n\nassert solution('1 1') == 'Invalid input. Please provide a valid position for a customer.'\n\nassert solution('4 1') == 'Invalid input. Please provide a valid position for a customer.'\n\nassert solution('1 5') == 'Invalid input. Please provide a valid position for a customer.'\n\nassert solution('10 10') == 'Invalid input. Please provide a valid position for a customer.'\n\nassert solution('10 8') == 'Invalid input. Please provide a valid position for a customer.'\n\nassert solution('7 10') == 'Invalid input. Please provide a valid position for a customer.'\n\nassert solution('6') == 'Not enough customers to be divided up. Please provide a minimum of 2 customers to be divided up.'\n\nassert solution('4') == 'Not enough customers to be divided up. Please provide a minimum of 2 customers to be divided up.'\n\nassert solution('1') == 'Not enough customers to be divided up. Please provide a minimum of 2 customers to be divided up.'\n\nassert solution('1001') == 'Not enough customers to be divided up. Please provide a minimum of 2 customers to be divided up.'\n\nassert solution('1000') == 'Not enough customers to be divided up. Please provide a minimum of 2 customers to be divided up.'\n\nassert solution('1 1 2 3 4 5') == 'Invalid input. Please provide a valid position for a customer.'\n\nassert solution('1 1 2 3 4 5 6 7 8 9 10') == 'Invalid input. Please provide a valid position for a customer.'\n\nassert solution('1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20') == 'Invalid input. Please provide a valid position for a customer.'\n\nassert solution('1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25') == 'Invalid input. Please provide a valid position for a customer.'\n\nassert solution('1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99') == 'Invalid input. Please provide a valid position for a customer"
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(f\"\"\"\n6\n1 1\n4 1\n1 5\n10 10\n10 8\n7 10\n\"\"\") == \"7\\n\"\n\nassert solution(f\"\"\"\n5\n1 1\n3 2\n2 5\n10 5\n10 8\n7 10\n\"\"\") == \"7\\n\"\n\nassert solution(f\"\"\"\n3\n1 1\n3 2\n2 5\n10 5\n10 8\n\"\"\") == \"7\\n\"\n\nassert solution(f\"\"\"\n2\n1 1\n3 2\n2 5\n10 5\n10 8\n\"\"\") == \"7\\n\""
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\\n') == '7\\n'\nassert solution('6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\\n2 2\\n') == '5\\n'\nassert solution('6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\\n2 2\\n3 3\\n') == '7\\n'\nassert solution('6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\\n2 2\\n3 3\\n4 4\\n') == '7\\n'\nassert solution('6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\\n2 2\\n3 3\\n4 4\\n5 5\\n') == '9\\n'"
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10') == '7\\n'"
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"7\""
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"2\na b\n3-b 5-b\n6-a 2-b\n2\naba\nbba\n0\n\"\"\") == \"\"\"9-b\n8-a\n"
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"9-b\", \"9-b should be the output\"\nassert solution(1) == \"0\", \"0 should be the output\"\nassert solution(\"2\") == \"8-a\", \"8-a should be the output\""
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0') == '9-b\\n8-a\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution('3\\na b c d e f g h i j k l m n o p q r s t u v w x y z') == '4-c\\n1-b\\n9-d\\n7-a\\n2-e\\n6-g\\n5-f\\n3-h\\n8-i\\n4-j\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution('1\\n1 a b c d e f g h i j k l m n o p q r s t u v w x y z') == '1-c\\n1-b\\n1-a\\n1-z\\n1-y\\n1-x\\n1-w\\n1-v\\n1-u\\n1-t\\n1-s\\n1-o\\n1-n\\n1-m\\n1-l\\n1-k\\n1-j\\n1-i\\n1-h\\n1-g\\n1-f\\n1-e\\n1-d\\n1-c\\n1-b\\n1-a\\n1-z\\n1-y\\n1-x\\n1-w\\n1-v\\n1-u\\n1-t\\n1-s\\n1-o\\n1-n\\n1-m\\n1-l\\n1-k\\n1-j\\n1-i\\n1-h\\n1-g\\n1-f\\n1-e\\n1-d\\n1-c\\n1-b\\n1-a\\n1-z\\n1-y\\n1-x\\n1-w\\n1-v\\n1-u\\n1-t\\n1-s\\n1-o\\n1-n\\n1-m\\n1-l\\n1-k\\n1-j\\n1-i\\n1-h\\n1-g\\n1-f\\n1-e\\n1-d\\n1-c\\n1-b\\n1-a\\n1-z\\n1-y\\n1-x\\n1-w\\n1-v\\n1-u\\n1-t\\n1-s\\n1-o\\n1-n\\n1-m\\n1-l\\n1-k\\n1-j\\n1-i\\n1-h\\n1-g\\n1-f\\n1-e\\n1-d\\n1-c\\n1-b\\n1-a\\n1-z\\n1-y\\n1-x\\n1-w\\n1-v\\n1-u\\n1-t\\n1-s\\n1-o\\n1-n\\n1-m\\n1-l\\n1-k\\n1-j\\n1-i\\n1-h\\n1-g\\n1-f\\n1-e\\n1-d\\n1-c\\n1-b\\n1-a\\n1-z\\n1-y\\n1-x\\n1-w\\n1-v\\n1-u\\n1-t\\n1-s\\n1-o\\n1-n\\n1-m\\n1-l\\n1-k\\n1-j\\n1-i\\n1-h\\n1-g\\n1-f\\n1-e\\n1-d\\n1-c\\n1-b\\n1-a\\n1-z\\n1-y\\n1-x\\n1-w\\n1-v\\n1-u\\n1-t\\n1-s\\n1-o\\n1-n\\n1-m\\n1-l\\n1-k\\n1-j\\n1-i\\n1-h\\n1-g\\n1-f\\n1-e\\n1-d\\n1-c\\n1-b\\n1-a\\n1-"
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"a b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\") == \"9-b\\n8-a\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\"a b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\") == \"9-b\\n8-a\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\\n') == ['9-b', '8-a']\nassert solution('2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\\n2\\n') == ['8-a']\nassert solution('2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\\n2\\n') == ['9-b', '8-a']\n"
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\") == [9-b, 8-a, def solution(stdin: str) -> str: pass]"
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_data) == output_data, f\"Test failed: {output_data}!= {solution(input_data)}\""
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"\"\"\n9-b\n8-a\n"
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\") == \"\\n9-b\\n8-a\\ndef solution(stdin: str) -> str: \\n    pass\\n\"\nprint(solution(\"2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\"))"
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), \"Test failed.\""
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1\\necho\\n1\\nechoecho') == '3246R3246'\nassert solution('2\\nhello\\n3\\nworld\\n4\\napple\\n5\\nbanana\\n6\\ncherry\\n7\\ndate\\n8\\nnoon\\n9\\nsunny\\n10\\nmoon\\n11\\nriver\\n12\\nwater\\n13\\nsky\\n14\\nstreet\\n15\\npark\\n16\\ntrain\\n17\\nbuilding\\n18\\nroom\\n19\\ntunnel\\n20\\nbus\\n21\\ncar\\n22\\ntruck\\n23\\nmotorcycle\\n24\\nboat\\n25\\nairplane\\n26\\ntraincar\\n27\\ntram\\n28\\ncaravan\\n29\\ntrainstation\\n30\\nrailway\\n31\\ncarriageway\\n32\\nstation\\n33\\nstationstop\\n34\\ntrainway\\n35\\ntrainstop\\n36\\ntramway\\n37\\ntramstop\\n38\\ntraincarway\\n39\\ntraincarstop\\n40\\ntrainstationway\\n41\\ntrainstationstop\\n42\\ntrainway\\n43\\ntrainstop\\n44\\ntraincarway\\n45\\ntraincarstop\\n46\\ntrainstationway\\n47\\ntrainstationstop\\n48\\ntrainway\\n49\\ntrainstop\\n50\\ntraincarway\\n51\\ntraincarstop\\n52\\ntrainstationway\\n53\\ntrainstationstop\\n54\\ntrainway\\n55\\ntrainstop\\n56\\ntraincarway\\n57\\ntraincarstop\\n58\\ntrainstationway\\n59\\ntrainstationstop\\n60\\ntrainway\\n61\\ntrainstop\\n62\\ntraincarway\\n63\\ntraincarstop\\n64\\ntrainstationway\\n65\\ntrainstationstop\\n66\\ntrainway\\n67\\ntrainstop\\n68\\ntraincarway\\n69\\ntraincarstop\\n70\\ntrainstationway\\n71\\ntrainstationstop\\n72\\ntrainway\\n73\\ntrainstop\\n74\\ntraincarway\\n75\\ntraincarstop\\n76\\ntrainstationway\\n77\\ntrainstationstop\\n78\\ntrainway\\n79\\ntrainstop\\n80\\ntraincarway\\n81\\ntraincarstop\\n82\\ntrainstationway\\n83\\ntrainstationstop\\n84\\ntrainway\\n85\\ntrainstop\\n86\\ntraincarway\\n87\\ntraincarstop\\n88\\ntrainstationway\\n89\\ntrainstationstop\\n90\\ntrainway\\n91\\ntrainstop\\n92\\ntraincarway\\n93\\ntraincarstop\\n94\\ntrainstationway\\n95\\ntrainstationstop\\n96\\ntrainway\\n97\\ntrainstop\\n98\\ntraincarway\\n99\\ntraincarstop\\n100\\ntrainstationway\\n101\\ntrainstationstop\\n102\\ntrainway\\n103\\ntrainstop\\n104\\ntraincarway\\n105\\ntraincarstop\\n106\\ntrainstationway\\n107\\ntrainstationstop\\n108\\ntrainway\\n109\\ntrainstop\\n110\\ntraincarway\\n111\\ntraincarstop\\n112\\ntrainstationway\\n113\\ntrainstationstop\\n114\\ntrainway\\n115\\ntrainstop\\n116\\ntraincarway\\n117\\ntraincarstop\\n118\\ntrainstationway\\n119\\ntrainstationstop"
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"3246R3246\"\n"
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n\"\n               \"echo\\n\"\n               \"1\\n\"\n               \"echoecho\") == \"3246R3246\""
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\necho\\n1\\necho\\n\") == \"3246R3246\"\nassert solution(\"1\\ndef\\n1\\ndef\\n\") == \"U(1)U(1)\"\nassert solution(\"1\\n1234567890\\n1\\n1234567890\\n\") == \"U(1)U(2)U(3)U(4)U(5)U(6)U(7)U(8)U(9)U(0)U(0)\"\nassert solution(\"1\\nhello\\n1\\nhello\\n\") == \"3246R3246\"\nassert solution(\"1\\nquick\\n1\\nquick\\n\") == \"U(1)U(0)U(1)U(0)U(1)\""
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt').read()) == \"3246R3246\", \"Incorrect output\""
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Input: {input()}, Expected Output: {expected_output}, Got: {solution(input())}\""
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '3246R3246'"
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    1\n    1\n    \"\"\"\n) == \"\"\"\n    3246R3246\n    def\n    \"\"\"\n\nassert solution(\n    \"\"\"\n    1\n    2\n    \"\"\"\n) == \"\"\"\n    3246R3246\n    \"\"\"\n\nassert solution(\n    \"\"\"\n    1\n    3\n    \"\"\"\n) == \"\"\"\n    3246R3246\n    \"\"\"\n\nassert solution(\n    \"\"\"\n    1\n    4\n    \"\"\"\n) == \"\"\"\n    3246R3246\n    \"\"\"\n\nassert solution(\n    \"\"\"\n    1\n    5\n    \"\"\"\n) == \"\"\"\n    3246R3246\n    \"\"\"\n\nassert solution(\n    \"\"\"\n    1\n    6\n    \"\"\"\n) == \"\"\"\n    3246R3246\n    \"\"\"\n\nassert solution(\n    \"\"\"\n    1\n    7\n    \"\"\"\n) == \"\"\"\n    3246R3246\n    \"\"\"\n\nassert solution(\n    \"\"\"\n    1\n    8\n    \"\"\"\n) == \"\"\"\n    3246R3246\n    \"\"\"\n\nassert solution(\n    \"\"\"\n    1\n    9\n    \"\"\"\n) == \"\"\"\n    3246R3246\n    \"\"\"\n\nassert solution(\n    \"\"\"\n    1\n    10\n    \"\"\"\n) == \"\"\"\n    3246R3246\n    \"\"\"\n\nassert solution(\n    \"\"\"\n    1\n    11\n    \"\"\"\n) == \"\"\"\n    3246R3246\n    \"\"\"\n\nassert solution(\n    \"\"\"\n    1\n    12\n    \"\"\"\n) == \"\"\"\n    3246R3246\n    \"\"\"\n\nassert solution(\n    \"\"\"\n    1\n    13\n    \"\"\"\n) == \"\"\"\n    3246R3246\n    \"\"\"\n\nassert solution(\n    \"\"\"\n    1\n    14\n    \"\"\"\n) == \"\"\"\n    3246R3246\n    \"\"\"\n\nassert solution(\n    \"\"\"\n    1\n    15\n    \"\"\"\n) == \"\"\"\n    3246R3246\n    \"\"\"\n\nassert solution(\n    \"\"\"\n    1\n    16\n    \"\"\"\n) == \"\"\"\n    3246R3246\n    \"\"\"\n\nassert solution(\n    \"\"\"\n    1\n    17\n    \"\"\"\n) == \"\"\"\n    3246R3246\n    \"\"\"\n\nassert solution(\n    \"\"\"\n    1\n    18\n    \"\"\"\n) == \"\"\"\n    3246R3246\n    \"\"\"\n\nassert solution(\n    \"\"\"\n    1\n    19\n    \"\"\"\n) == \"\"\"\n    3246R3246\n    \"\"\"\n\nassert solution(\n    \"\"\"\n    1\n    20\n    \"\"\"\n) == \"\"\"\n    3246R3246\n    \"\"\"\n\nassert solution(\n    \"\"\"\n    1\n    21\n    \"\"\"\n) == \"\"\"\n    3246R3246\n    \"\"\"\n\nassert solution(\n    \"\"\"\n    1\n    22\n    \"\"\"\n) == \"\"\"\n    3246R3246\n    \"\"\"\n\nassert solution(\n    \"\"\"\n    1\n    23\n    \"\"\"\n) == \"\"\"\n    3246R3246\n    \"\"\"\n\nassert solution(\n    \"\"\"\n    1\n    24\n    \"\"\"\n) == \"\"\"\n    3246R3246\n    \"\"\"\n\nassert solution(\n    \"\"\"\n    1\n    25\n    \"\"\"\n) == \"\"\"\n    3246R3246\n    \"\"\"\n\nassert solution(\n    \"\"\"\n    1\n    26\n    \"\"\"\n) == \"\"\"\n    3246R3246\n    \"\"\"\n\nassert solution(\n    \"\"\"\n    1\n    27\n    \"\"\"\n) == \"\"\"\n    3246R3246\n    \"\"\"\n\nassert solution(\n    \"\"\"\n    1\n    28\n    \"\"\"\n) == \"\"\"\n    3246R3246\n    \"\"\"\n\nassert solution(\n    \"\"\"\n    1\n    29\n    \"\"\"\n) == \"\"\"\n    3246R3246\n    \"\"\"\n\nassert solution(\n    \"\"\"\n    1\n    30\n    \"\"\"\n) == \"\"\"\n    3246R3246\n    \"\"\"\n\nassert solution(\n    \"\"\"\n    1\n    31\n    \"\"\"\n) == \"\"\"\n    3246R3246\n    \"\"\"\n\nassert solution(\n    \"\"\"\n    1\n    32\n    \"\"\"\n) == \"\"\"\n    3246R3246\n    \"\"\"\n\nassert solution(\n    \"\"\"\n    1\n    33\n    \"\"\"\n) == \"\"\"\n    3246R3246\n    \"\"\"\n\nassert solution(\n    \"\"\"\n    1\n    34\n    \"\"\"\n) == \"\"\"\n    3246R3246\n    \"\"\"\n\nassert solution(\n    \"\"\"\n    1\n    35\n    \"\"\"\n"
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1\\n'\n                 'echo\\n'\n                 '1\\n'\n                 'echoecho\\n'\n                 ) == '3246R3246\\n'\n\nsolution('1\\n'\n         'echo\\n'\n         '1\\n'\n         'echoecho\\n'\n         )"
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3, 1) == 'YES\\n1 2\\n1 3'"
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3, 1) == \"YES\\n1 2\\n1 3\""
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3, 1) == 'YES\\n1 2\\n1 3'\nassert solution(4, 2) == 'NO'\nassert solution(5, 3) == 'YES\\n1 2\\n1 3'\nassert solution(6, 3) == 'YES\\n1 2\\n1 3'\nassert solution(7, 4) == 'NO'\nassert solution(8, 5) == 'YES\\n1 2\\n1 3'\nassert solution(9, 6) == 'YES\\n1 2\\n1 3'\nassert solution(10, 7) == 'NO'\nassert solution(11, 7) == 'NO'\nassert solution(12, 8) == 'NO'\nassert solution(13, 9) == 'NO'\nassert solution(14, 9) == 'NO'\nassert solution(15, 10) == 'NO'"
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 1') == 'YES\\n1 2\\n1 3'"
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3, 1) == \"YES\\n1 2\\n1 3\"\n\nassert solution(3, 2) == \"NO\"\n\nassert solution(3, 3) == \"YES\\n1 2\\n1 3\"\n\nassert solution(3, 4) == \"NO\"\n\nassert solution(3, 5) == \"YES\\n1 2\\n1 3\"\n\nassert solution(3, 6) == \"NO\"\n\nassert solution(3, 7) == \"YES\\n1 2\\n1 3\"\n\nassert solution(3, 8) == \"NO\"\n\nassert solution(3, 9) == \"YES\\n1 2\\n1 3\"\n\nassert solution(3, 10) == \"NO\"\n\nassert solution(3, 11) == \"YES\\n1 2\\n1 3\"\n\nassert solution(3, 12) == \"NO\""
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == 'YES\\n2 2\\n1 2\\n1 3'"
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == 'YES\\n1 2\\n1 3'\nassert solution(sample_input2) == 'NO'"
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1\\n\") == \"YES\\n1 2\\n1 3\"\nassert solution(\"4 2\\n\") == \"NO\"\nassert solution(\"5 1\\n\") == \"YES\\n1 2\\n1 3\\n1 4\"\nassert solution(\"6 1\\n\") == \"YES\\n1 2\\n1 3\\n1 4\\n1 5\""
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3147.3, 1) == 'NO'\nassert solution(3147.3, 2) == 'YES\\n1 2\\n1 3'\nassert solution(3147.3, 3) == 'NO'"
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1\") == \"YES\\n1 2\\n1 3\""
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n\") == \"176\"\nassert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n2 2\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n\") == \"352\""
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n9\n1\n6 6\n333333\n300003\n300003\n300003\n300003\n333333\n''') == '176'\nassert solution('''\n10\n2\n5 5\n444444\n300001\n300003\n300003\n300003\n300003\n300003\n444444\n''') == '210'\nassert solution('''\n15\n2\n7 7\n555555\n400002\n400003\n400003\n400003\n400003\n400003\n555555\n''') == '244'\n"
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 176"
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(b'9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n') == 176\nassert solution(b'9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n') == 281\nassert solution(b'9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n') == 313"
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n') == '176', \"Solution is incorrect.\""
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input) == expected, f\"Test failed: expected '{expected}', got '{solution(input)}'\"\n"
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"176\\n\""
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == 176, \"The output does not match the expected output.\""
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == \"176\"\nassert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n444444\\n555555\\n666666\\n777777\\n888888\") == \"198\"\nassert solution(\"10\\n10\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\") == \"365\"\nassert solution(\"10\\n10\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n10\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n10\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n10\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n10\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n10\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n10\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n10\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n10\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n10\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n10\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n10\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n10\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n10\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n10\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n10\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n10\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n10\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n10\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n10\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n10\\n1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10"
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n') == '176'\nassert solution('9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(5) == \"12\""
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5') == '12\\n'\n\nprint(solution('1'))\nprint(solution('2'))\nprint(solution('3'))\nprint(solution('4'))\nprint(solution('5'))"
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(5) == '12'"
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"12\"\nassert solution(\"15\") == \"16\"\nassert solution(\"100\") == \"00\"\nassert solution(\"10\") == \"00\"\nassert solution(\"100000000\") == \"00\""
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(5) == '12'"
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"12\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(5) == \"12\""
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"12\\n\", \"The solution is incorrect.\"\nassert solution(\"10\") == \"012\\n\", \"The solution is incorrect.\"\nassert solution(\"100\") == \"0012\\n\", \"The solution is incorrect.\"\nassert solution(\"1000\") == \"00012\\n\", \"The solution is incorrect.\"\nassert solution(\"10000000\") == \"12\\n\", \"The solution is incorrect.\""
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"12\\n\""
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n') == '12'\nassert solution('12\\n') == '12'\nassert solution('123\\n') == '16'\nassert solution('479001600\\n') == '016'"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"480\"\n"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('tests/example.txt', 'r')) == '480'\nassert solution(open('tests/input.txt', 'r')) == '2208'\nassert solution(open('tests/large_input.txt', 'r')) == '714654645411968'"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"((()480617-570928)\") == 480, \"Test Case 1\"\nassert solution(\"(((())())(())()))\") == 0, \"Test Case 2\"\nassert solution(\"(()(()()))(())())\") == 0, \"Test Case 3\"\nassert solution(\"(()((()())()))(())(()(()))\")) == 0, \"Test Case 4\"\nassert solution(\"(((())))\") == 0, \"Test Case 5\""
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Test failed: {input()}!= {output}\"\n"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 1\\n((()480617-570928') == '480', 'Expected 480')\nassert solution('4 1\\n((())480617-570928') == '480', 'Expected 480')\nassert solution('4 1\\n(())480617-570928') == '480', 'Expected 480')"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 480\n"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 1\\n((()\\n480\\n617\\n-570\\n928\\n\") == 480\nassert solution(\"5 2\\n(()((\\n75\\n83\\n-7\\n16\\n\") == 75\nassert solution(\"7 3\\n(()(())\\n())))\\n(])\\n[{}])\\n\") == 75\nassert solution(\"8 4\\n()()\\n(())\\n[{}])\\n(())\\n()\") == 0\nassert solution(\"11 5\\n()()\\n(())\\n([])\\n()()\\n(()(())\\n[{}])\\n(())\\n()\") == 25\nassert solution(\"12 6\\n(())\\n(()(())\\n())\\n([])\\n(())\\n()()\\n[{}])\\n(())\\n()\") == 0\nassert solution(\"15 7\\n(()(()\\n())\\n())\\n([])\\n(())\\n()()\\n[{}])\\n(())\\n()\") == 0\nassert solution(\"16 8\\n(())\\n(()(()\\n())\\n())\\n([])\\n(())\\n()()\\n[{}])\\n(())\\n()\") == 0\nassert solution(\"17 9\\n(())\\n(()(()\\n())\\n())\\n([])\\n(())\\n()()\\n[{}])\\n(())\\n()\") == 0\nassert solution(\"18 10\\n(())\\n(()(()\\n())\\n())\\n([])\\n(())\\n()()\\n[{}])\\n(())\\n()\") == 0\nassert solution(\"19 11\\n(())\\n(()(()\\n())\\n())\\n([])\\n(())\\n()()\\n[{}])\\n(())\\n()\") == 0\nassert solution(\"20 12\\n(())\\n(()(()\\n())\\n())\\n([])\\n(())\\n()()\\n[{}])\\n(())\\n()\") == 0\nassert solution(\"21 13\\n(())\\n(()(()\\n())\\n())\\n([])\\n(())\\n()()\\n[{}])\\n(())\\n()\") == 0\nassert solution(\"22 14\\n(())\\n(()(()\\n())\\n())\\n([])\\n(())\\n()()\\n[{}])\\n(())\\n()\") == 0\nassert solution(\"23 15\\n(())\\n(()(()\\n())\\n())\\n([])\\n(())\\n()()\\n[{}])\\n(())\\n()\") == 0\nassert solution(\"24 16\\n(())\\n(()(()\\n())\\n())\\n([])\\n(())\\n()()\\n[{}])\\n(())\\n()\") == 0\nassert solution(\"25 17\\n(())\\n(()(()\\n())\\n())\\n([])\\n(())\\n()()\\n[{}])\\n(())\\n()\") == 0\nassert solution(\"26 18\\n(())\\n(()(()\\n())\\n())\\n([])\\n(())\\n()()\\n[{}])\\n(())\\n()\") == 0\nassert solution(\"27 19\\n(())\\n(()(()\\n())\\n())\\n([])\\n(())\\n()()\\n[{}])\\n(())\\n()\") == 0\nassert solution(\"28 20\\n(())\\n(()(()\\n())\\n())\\n([])\\n(())\\n()()\\n[{}])\\n(())\\n()\") == 0\nassert solution(\"29 21\\n(())\\n(()(()\\n())\\n())\\n([])\\n(())\\n()()\\n[{}])\\n(())\\n()\") == 0\nassert solution(\"30 22\\n(())\\n(()(()\\n())\\n())\\n([])\\n(())\\n()()\\n[{}])\\n(())\\n()\") == 0\nassert solution(\"31 23\\n(())\\n(()(()\\n())\\n())\\n([])\\n(())\\n()()\\n[{}])\\n(())\\n()\") == 0\nassert solution(\"32 24\\n(())\\n(()(()\\n())\\n())\\n([])\\n(())\\n()()\\n[{}])\\"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 1\\n((()\\n480\\n617\\n-570\\n928\\n') == 480\nassert solution('4 1\\n((()\\n480\\n617\\n-570\\n928\\n') == '?')"
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2 4\\n5 6\\n7 8 9 10 11 12 13\", \"Your code is not correct\""
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2 4\\n5 6\\n7 8 9 10 11 12 13\", \"Incorrect output for test case 1.\""
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2 4\\n5 6\\n7 8 9 10 11 12 13\\n\"\n"
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == '''2 4\n5 6\n7 8 9 10 11 12 13'''\n"
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2 4\\n5 6\\n7 8 9 10 11 12 13\", \"The expected output is incorrect.\""
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n\") == \"2 4\\n5 6\\n7 8 9 10 11 12 13\\n\", \"Jay runs a small carnival that has various rides and attractions. Unfortunately, times are tough. A recent roller coaster accident, flooding in the restrooms, and an unfortunate clown incident have given Jay's carnival a bad reputation with the public. With fewer paying customers and reduced revenue, he will need to cut some costs to stay in business.\""
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\") == \"2 4\\n5 6\\n7 8 9 10 11 12 13\"\nassert solution(\"12\\n2 2 3\\n3 1 2 4\\n3 2 1 5\\n3 1 2 6\\n3 2 1 7\\n3 1 2 8\\n3 2 1 9\\n3 1 2 10\\n3 2 1 11\\n3 1 2 12\\n3 2 1 13\\n3 1 2 14\\n3 2 1 15\\n3 1 2 16\\n3 2 1 17\\n3 1 2 18\\n3 2 1 19\\n3 1 2 20\\n3 2 1 21\\n3 1 2 22\\n3 2 1 23\\n3 1 2 24\\n3 2 1 25\\n3 1 2 26\\n3 2 1 27\\n3 1 2 28\\n3 2 1 29\\n3 1 2 30\\n3 2 1 31\\n3 1 2 32\\n3 2 1 33\\n3 1 2 34\\n3 2 1 35\\n3 1 2 36\\n3 2 1 37\\n3 1 2 38\\n3 2 1 39\\n3 1 2 40\\n3 2 1 41\\n3 1 2 42\\n3 2 1 43\\n3 1 2 44\\n3 2 1 45\\n3 1 2 46\\n3 2 1 47\\n3 1 2 48\\n3 2 1 49\\n3 1 2 50\\n3 2 1 51\\n3 1 2 52\\n3 2 1 53\\n3 1 2 54\\n3 2 1 55\\n3 1 2 56\\n3 2 1 57\\n3 1 2 58\\n3 2 1 59\\n3 1 2 60\\n3 2 1 61\\n3 1 2 62\\n3 2 1 63\\n3 1 2 64\\n3 2 1 65\\n3 1 2 66\\n3 2 1 67\\n3 1 2 68\\n3 2 1 69\\n3 1 2 70\\n3 2 1 71\\n3 1 2 72\\n3 2 1 73\\n3 1 2 74\\n3 2 1 75\\n3 1 2 76\\n3 2 1 77\\n3 1 2 78\\n3 2 1 79\\n3 1 2 80\\n3 2 1 81\\n3 1 2 82\\n3 2 1 83\\n3 1 2 84\\n3 2 1 85\\n3 1 2 86\\n3 2 1 87\\n3 1 2 88\\n3 2 1 89\\n3 1 2 90\\n3 2 1 91"
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"2 4\\n5 6\\n7 8 9 10 11 12 13\\n\"\n"
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(None) == ''"
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n') == '2 4\\n5 6\\n7 8 9 10 11 12 13\\n'"
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"\"\"\n35 39 36 27 29\n\"\"\""
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2\") == \"35 39 36 27 29\\n\""
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n5 5\n1 2 3\n1 4 8\n2 3 12\n3 5 4\n4 5 2\n\"\"\") == \"\"\"\n35 39 36 27 29\n\"\"\""
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"5 5\\n\"\n    \"1 2 3\\n\"\n    \"1 4 8\\n\"\n    \"2 3 12\\n\"\n    \"3 5 4\\n\"\n    \"4 5 2\\n\"\n) == \"35 39 36 27 29\\n\""
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2') == '35 39 36 27 29'"
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 35, \"Your solution is incorrect.\""
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"\"\"35 39 36 27 29\"\"\"\n"
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2\\n\") == \"35 39 36 27 29\""
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == sample_output, f\"Your solution is not correct. Please check the given examples and the problem statement.\""
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == '''\n0 672\n"
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"The output is {output}, but the code is {solution(input())}\""
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"0 672\""
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 672\nassert solution(2) == 0\nassert solution(3) == 672\nassert solution(2) == 0\n"
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n3 2 1\") == \"0 672\""
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, 3) == 0\nassert solution(3, 2, 1) == 672\n"
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n3 2 1\") == \"0 672\"\nassert solution(\"5 4\\n2 1 1 1\") == \"4 4\"\nassert solution(\"0 0\\n1 2 3 4\") == \"0 0\"\nassert solution(\"2 2\\n1 1 1 1\") == \"0 2\"\nassert solution(\"3 3\\n2 2 2 2\") == \"6 2\"\n"
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n3 2 1\\n\") == \"0 672\\ndef solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 3\\n3 2 1') == '0 672'\n"
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n3 2 1\") == 0\nassert solution(\"3 2 1\") == 672"
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n\") == 2.5, \"The ACM car can switch from lane 0 to lane 2.\"\nassert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n\") == 2.5, \"The ACM car can switch from lane 0 to lane 2.\"\nassert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n\") == 2.5, \"The ACM car can switch from lane 0 to lane 2.\"\nassert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n\") == 2.5, \"The ACM car can switch from lane 0 to lane 2.\"\nassert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n\") == 2.5, \"The ACM car can switch from lane 0 to lane 2.\"\n"
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\") == 2.5\nassert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n3 4 12\\n4 5 10\\n\") == 2.5\nassert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n3 4 12\\n4 5 10\\n5 6 14\\n\") == 2.5\nassert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n3 4 12\\n4 5 10\\n5 6 14\\n6 7 16\\n7 8 18\\n8 9 20\\n9 10 22\\n\") == 2.5\nassert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n3 4 12\\n4 5 10\\n5 6 14\\n6 7 16\\n7 8 18\\n8 9 20\\n9 10 22\\n10 11 24\\n11 12 26\\n12 13 28\\n13 14 30\\n14 15 32\\n15 16 34\\n16 17 36\\n17 18 38\\n18 19 40\\n19 20 42\\n20 21 44\\n21 22 46\\n22 23 48\\n23 24 50\") == 2.5\nassert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n3 4 12\\n4 5 10\\n5 6 14\\n6 7 16\\n7 8 18\\n8 9 20\\n9 10 22\\n10 11 24\\n11 12 26\\n12 13 28\\n13 14 30\\n14 15 32\\n15 16 34\\n16 17 36\\n17 18 38\\n18 19 40\\n19 20 42\\n20 21 44\\n21 22 46\\n22 23 48\\n23 24 50\\n3 4 12\\n4 5 10\\n5 6 14\\n6 7 16\\n7 8 18\\n8 9 20\\n9 10 22\\n10 11 24\\n11 12 26\\n12 13 28\\n13 14 30\\n14 15 32\\n15 16 34\\n16 17 36\\n17 18 38\\n18 19 40\\n19 20 42\\n20 21 44\\n21 22 4"
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input) == output, \"The provided solution is incorrect. Please check the sample input and output.\""
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n4 5 100\n0 10 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50\n''') == '2.500000'"
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2.500000\"\n"
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n4 5 100\n0 10 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50\n\"\"\") == \"2.500000\""
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\") == \"2.5\"\nassert solution(\"3 3 20\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\") == \"Impossible\"\nassert solution(\"2 2 20\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\") == \"Impossible\""
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50') == '2.500000', 'Test Case 1 failed'\n\nassert solution('4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n3 5 50\\n') == 'Impossible', 'Test Case 2 failed'\n\nassert solution('4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n3 5 50\\n4 5 50\\n') == '2.500000', 'Test Case 3 failed'\n\nassert solution('4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n3 5 50\\n4 5 50\\n5 5 50\\n') == 'Impossible', 'Test Case 4 failed'"
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50') == '2.500000'"
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"Test case failed.\""
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n5 3 4') == '3\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n5 3 4\") == \"3\"\nassert solution(\"5\\n5 3 4\") == \"3\"\nassert solution(\"3\\n5 3 5\") == \"4\"\nassert solution(\"5\\n5 3 5\") == \"4\"\nassert solution(\"3\\n5 3 6\") == \"5\"\nassert solution(\"5\\n5 3 6\") == \"5\""
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution([3,5,3,4]) == 3\nassert solution([3,3,3,3,3]) == 3\nassert solution([1,1,1,1,1]) == 3\nassert solution([1,1,1,1,1,1]) == 3\nassert solution([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1"
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 3, \"The output is incorrect.\"\nassert solution(4) == 2, \"The output is incorrect.\"\nassert solution(5) == 3, \"The output is incorrect.\"\nassert solution(6) == 2, \"The output is incorrect.\"\nassert solution(7) == 3, \"The output is incorrect.\"\nassert solution(8) == 2, \"The output is incorrect.\"\nassert solution(9) == 3, \"The output is incorrect.\"\nassert solution(10) == 3, \"The output is incorrect.\""
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 'Output: 3\\n' + '\\n'.join(['def solution(stdin: str) -> str:\\n    pass'] * 3) + '\\n'\n"
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(5"
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"3\"\nassert solution(50001) == \"3\"\nassert solution(5) == \"3\"\nassert solution(4) == \"2\"\nassert solution(1) == \"0\""
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"3\\n\" # expected output: 3\n"
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3, 5, 3, 4, 1, 2, 3, 4, 1, 2, 3, 4, 5) == 3\nassert solution(3, 5, 4, 3, 2, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5) == 2\nassert solution(3, 5, 4, 3, 2, 1, 2, 3, 4, 5, 2, 1, 2, 3, 4, 5) == 3\nassert solution(3, 5, 4, 3, 2, 1, 2, 3, 4, 5, 2, 1, 2, 3, 4, 5) == 4\nassert solution(3, 5, 4, 3, 2, 1, 2, 3, 4, 5, 2, 1, 2, 3, 4, 5) == 5"
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n5 3 4') == '3\\n3 3'\nassert solution('5\\n10 20 30 40 50') == '5\\n3 3 3 3 3'\nassert solution('10\\n20 30 40 50 60 70 80 90 100') == '10\\n3 3 3 3 3 3 3 3 3 3'\nassert solution('15\\n10 20 30 40 50 60 70 80 90 100 110 120 130 140 150') == '15\\n3 3 3 3 3 3 3 3 3 3 3 3'"
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin='2 1 1') == '2'\nassert solution(stdin='5 2 2') == '3'\nassert solution(stdin='10 1 1') == '4'\nassert solution(stdin='1 5 1') == '10'\nassert solution(stdin
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1 1\") == 2"
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1 1\") == \"2\""
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"2\""
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1 1\") == \"2\"\n"
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == 2, \"Invalid output\"\n"
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1 1\") == 2"
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1 1\") == \"2\"\nassert solution(\"3 1 2\") == \"5\"\nassert solution(\"4 2 2\") == \"12\"\nassert solution(\"5 3 2\") == \"36\"\nassert solution(\"6 4 3\") == \"104\"\n"
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1 1\") == 2, \"The output of the given code is incorrect.\"\n"
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(solution) == \"7\""
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 3 5\") == \"7\\n\"\nassert solution(\"2\\n1000 2000 3000\") == \"6000\\n\"\nassert solution(\"1\\n5\\n
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"7\"\nprint(\"Test passed\")"
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 3 5\") == \"7\\n7\"\nassert solution(\"5\\n1 2 3 4 5\") == \"10\\n10\"\nassert solution(\"7\\n1 2 3 4 5 6 7\") == \"28\\n28\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"145\\n145\"\nassert solution(\"20\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\") == \"5758\\n5758\""
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == '7'"
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"7\\n7\""
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 3 5\") == \"7\\n\", \"The correct solution for the given problem statement is:\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nHowever, there is a small mistake in the code provided.\\n\\nThe line that should be changed is:\\n\\nassert solution(stdin: str) == \\\"7\\\"\\n\\nThe line should be changed to:\\n\\nassert solution(stdin: str) == \\\"10\\\"\\n\\nThis will output the correct answer as 10 instead of 7.\\n\\nHope this helps! Let me know if you have any questions.\""
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"7\\n\", \"Testcase 1 failed\""
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 3 5') == '7'\nassert solution('1 2 3 4 5 6') == '11'\nassert solution('100000') == '100000'"
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n1 3 5') == '7\\n'\n"
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"fred jetsons\\njohn jets\\nruth rockets\\nImpossible\\n\"\nassert solution(open(\"input2.txt\", \"r\")) == \"fred jetsons\\njohn jets\\nruth rockets\\nImpossible\\n\""
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"fred jetsons\\njohn jets\\nruth rockets\\n\""
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n\") == \"fred jetsons\\njohn jets\\nruth rockets\""
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"fred jetsons\\njohn jets\\nruth rockets\""
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == 'fred jetsons\\njohn jets\\nruth rockets\\nImpossible\\n'"
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"fred jetsons\\njohn jets\\nruth rockets\\n\""
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"2\n    4\n    fred dinosaur 2 jets jetsons\n    john rhinocerous 2 jets rockets\n    mary rhinocerous 2 jetsons rockets\n    ruth platypus 1 rockets\n    \"\"\"\n) == \"fred jetsons\\njohn jets\\nruth rockets\\n\"\n\nassert solution(\n    \"\"\"\n    4\n    fred dinosaur 2 jets jetsons\n    john rhinocerous 2 jets rockets\n    mary rhinocerous 2 jetsons rockets\n    ruth platypus 1 rockets\n    \"\"\"\n) == \"fred jetsons\\njohn jets\\nruth rockets\\n\"\n\nassert solution(\n    \"\"\"\n    4\n    fred dinosaur 2 jets jetsons\n    john rhinocerous 2 jets rockets\n    mary rhinocerous 2 jetsons rockets\n    ruth platypus 1 rockets\n    \"\"\"\n) == \"fred jetsons\\njohn jets\\nruth rockets\\n\"\n\nassert solution(\n    \"\"\"\n    4\n    fred dinosaur 2 jets jetsons\n    john rhinocerous 2 jets rockets\n    mary rhinocerous 2 jetsons rockets\n    ruth platypus 1 rockets\n    \"\"\"\n) == \"Impossible\\nImpossible\\nImpossible\\n\"\n\nassert solution(\n    \"\"\"2\n    3\n    john rhinocerous 1\n    jane james 1\n    \"\"\"\n) == \"jane james\\njohn rhinocerous\\n\"\n\nassert solution(\n    \"\"\"2\n    3\n    john rhinocerous 1\n    jane james 1\n    \"\"\"\n) == \"Impossible\\nImpossible\\n\"\n\nassert solution(\n    \"\"\"\n    2\n    3\n    john rhinocerous 1\n    jane james 1\n    \"\"\"\n) == \"Impossible\\nImpossible\\n\""
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r')) == '''\nfred jetsons\njohn jets\nruth rockets\n'''"
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n') == 'fred jetsons\\njohn jets\\nruth rockets\\nImpossible.'\nassert solution('2\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\nfred roach\\n') == 'fred rockets\\njohn jets\\nruth rockets\\nImpossible.'\nassert solution('2\\njohn wolf 1 bats\\n') == 'Impossible.'\nassert solution('3\\njohn wolf 1 bats\\nhenry dog 2 bats\\n') == 'Impossible.'\nassert solution('3\\njohn wolf 1 bats\\nhenry dog 2 bats\\nfluffy cat 1 bats\\n') == 'Impossible.'\nassert solution('3\\njohn wolf 1 bats\\nhenry dog 2 bats\\nfluffy cat 1 bats\\ngrumpy cat 1 bats\\n') == 'Impossible.'\nassert solution('3\\njohn wolf 1 bats\\nhenry dog 2 bats\\nfluffy cat 1 bats\\ngrumpy cat 1 bats\\nmeow meow\\n') == 'Impossible.'\nassert solution('3\\njohn wolf 1 bats\\nhenry dog 2 bats\\nfluffy cat 1 bats\\ngrumpy cat 1 bats\\nmeow meow\\nhenry eagle 1 bats\\n') == 'Impossible.'\nassert solution('3\\njohn wolf 1 bats\\nhenry dog 2 bats\\nfluffy cat 1 bats\\ngrumpy cat 1 bats\\nmeow meow\\nhenry eagle 1 bats\\nhenry creeper 1 bats\\n') == 'Impossible.'"
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(r\"2\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\") == \"fred jetsons\\njohn jets\\nruth rockets\\n\"\nassert solution(r\"2\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\") == \"fred jetsons\\njohn jets\\nruth rockets\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(r\"2\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\") == \"fred jetsons\\njohn jets\\nruth rockets\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(r\"2\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\") == \"fred jetsons\\njohn jets\\nruth rockets\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(r\"2\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\") == \"fred jetsons\\njohn jets\\nruth rockets\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n-10 9\\n-2 3\") == \"1 2 1\""
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input) == expected, f\"Test case {i+1} failed. Expected {expected}, got {solution(input)}\" for i, (input, expected) in enumerate(zip(test_cases, expected_output))"
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n4 3\\n-10 9\\n-2 3\") == \"1 2 1\\n\""
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n3\\n-10 9\\n-2 3') == '1 2 1\\n'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\"
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '1 2 1'"
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Expected: {}\\nGot: {}\\n\".format(output(), solution(input()))"
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n4 3\\n-10 9\\n-2 3') == '1 2 1\\n'\nassert solution('4\\n5 4\\n-5 10\\n-3 8') == '2 1 1\\n'\nassert solution('6\\n6 6\\n-7 9\\n-8 10') == '1 1 0\\n'\nassert solution('7\\n8 7\\n-10 8\\n-9 9') == '1 1 1\\n'\nassert solution('9\\n10 9\\n-12 9\\n-11 10') == '1 1 1\\n'\nassert solution('10\\n11 10\\n-14 10\\n-13 11') == '0 0 1\\n'\nassert solution('11\\n12 11\\n-16 11\\n-15 12') == '0 0 1\\n'\nassert solution('12\\n13 12\\n-18 12\\n-17 13') == '0 0 1\\n'\nassert solution('13\\n14 13\\n-20 13\\n-19 14') == '0 0 1\\n'\nassert solution('14\\n15 14\\n-22 14\\n-21 15') == '0 0 1\\n'\nassert solution('15\\n16 15\\n-24 15\\n-23 16') == '0 0 1\\n'\nassert solution('16\\n17 16\\n-26 16\\n-25 17') == '0 0 1\\n'\nassert solution('17\\n18 17\\n-28 17\\n-27 18') == '0 0 1\\n'\nassert solution('18\\n19 18\\n-30 18\\n-29 19') == '0 0 1\\n'\nassert solution('19\\n20 19\\n-32 19\\n-31 20') == '0 0 1\\n'\nassert solution('20\\n21 20\\n-34 20\\n-33 21') == '0 0 1\\n'\nassert solution('21\\n22 21\\n-36 21\\n-35 22') == '0 0 1\\n'\nassert solution('22\\n23 22\\n-38 22\\n-37 23') == '0 0 1\\n'\nassert solution('23\\n24 23\\n-40 23\\n-39 24') == '0 0 1\\n'\nassert solution('24\\n25 24\\n-42 24\\n-41 25') == '0 0 1\\n'\nassert solution('25\\n26 25\\n-44 25\\n-43 26') == '0 0 1\\n'\nassert solution('26\\n27 26\\n-46 26\\n-45 27') == '0 0 1\\n'\nassert solution('27\\n28 27\\n-48 27\\n-47 28') == '0 0 1\\n'\nassert solution('28\\n29 28\\n-50 28\\n-49 29') == '0 0 1\\n'\nassert solution('29\\n30 29\\n-52 29\\n-51 30') == '0 0 1\\n'\nassert solution('30\\n31 30\\n-54 30\\n-53 31') == '0 0 1\\n'\nassert solution('31\\n32 31\\"
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == expected_output, f\"Sample Input: {sample_input}\\nExpected Output: {expected_output}\\nOutput: {solution(sample_input)}\""
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"\"\"\n1 2 1\n\"\"\""
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n-10 9\\n-2 3\\n\") == \"1 2 1\\n\""
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10') == '2.125'\n"
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\") == \"2.125\\n\"\nprint(\"All tests pass!\")"
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2.125\\n\", \"Test failed\""
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2.125\", \"The expected answer is incorrect.\""
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n4\n1 1 7\n3 2 3\n5 1 4\n6 10 10\n\"\"\") == \"2.125\""
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2.125\\n\", \"Expected output: 2.125\\nActual output: \" + solution(stdin) + \"\\n\"\n\nfrom collections import defaultdict"
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n4\n1 1 7\n3 2 3\n5 1 4\n6 10 10\n''') == '2.125'\n"
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=None) == \"2.125\"\n"
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2.125\", \"Incorrect Output\""
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\\n\") == 2.125"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"*.c\") == \"main.c\\na.out\\n\"\nassert solution(\"**/*.c\") == \"main.c\\na.out\\nreadme\\nyacc\\n\"\nassert solution(\"hello*.txt\") == \"hello.txt\\nhello2.txt\\n\"\nassert solution(\"**\") == \"main.c\\na.out\\nreadme\\nyacc\\n\"\nassert solution(\"hello\") == \"hello.txt\\nhello2.txt\\n\""
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"*.c\", 4) == ['main.c', 'a.out']"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"*.c\") == [\"main.c\", \"a.out\"]\nassert solution(\"*\") == [\"main.c\", \"a.out\", \"def.py\", \"def.pyc\"]\nassert solution(\"*.c*\") == [\"main.c\", \"a.out\"]\nassert solution(\"abc.c*\") == [\"abc.c\", \"def.py\"]\nassert solution(\"abc*\") == [\"abc.c\", \"abc.h\", \"def.py\", \"def.pyc\"]"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('*.*') == ['main.c', 'a.out']\nassert solution('*') == ['main.c', 'a.out', 'def.py']\nassert solution('*.c') == ['main.c', 'a.out']\nassert solution('**/*.py') == ['main.c', 'a.out']\nassert solution('abc') == ['abc']"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == [\"main.c\", \"a.out\", \"def\"]"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output\nprint(f\"Output: {output}\")\n"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin='*.*\\n4\\nmain.c\\na.out\\nreadme\\nyacc') == ['main.c', 'a.out']"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"*.c\") == \"main.c\"\nassert solution(\"*.*\") == \"main.c\"\nassert solution(\"*.c\") == \"main.c\"\nassert solution(\"*.c\") == \"main.c\"\nassert solution(\"*.c\") == \"main.c\""
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == sample_output, \"Incorrect output\""
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == [\"main.c\", \"a.out\", \"def.py\", \"readme\"]"
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"0.500000\", \"Please implement the solution.\""
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Error: {input()} -> {output}\""
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1\\n0.500000\") == \"0.500000\"\n"
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n1 1\n0.500000\n''') == '0.500000'"
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1\\n0.500000\") == \"0.500000\\n\"\nassert solution(\"1 2\\n0.750000\") == \"0.750000\\n\"\nassert solution(\"1 1\\n0.250000\") == \"0.250000\\n\"\nassert solution(\"1 3\\n0.500000\") == \"0.750000\\n\"\nassert solution(\"1 4\\n0.750000\") == \"0.250000\\n\"\n"
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\\n0.500000\") == \"0.500000\\n\", \"Test case 1 failed.\"\n\nimport math"
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1\\n0.500000\") == \"0.500000\\n\""
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"0.500000\\n\", \"Error: Please provide the input as a single line.\""
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1\\n0.500000\\n\") == \"0.500000\\n\""
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\\n0.500000\") == \"0.500000\\n\""
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 0.0, \"Expected 0.0\"\n"
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '0.0', \"Invalid input\"\n\nimport math"
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 49.9\") == \"0.0\"\n"
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 49.9\") == 0.0, \"Test case 1 failed\"\nassert solution(\"0 49.99\") == 0.0, \"Test case 2 failed\"\nassert solution(\"0 50\") == 0.0, \"Test case 3 failed\"\nassert solution(\"0 50.5\") == 0.0, \"Test case 4 failed\"\nassert solution(\"0 51\") == 0.0, \"Test case 5 failed\""
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"0.0\\n\", \"Please enter a valid input.\""
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 49.9\") == \"0.0\""
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 49.9\") == \"0.0\", \"Expected 0.0, but got: {}\".format(solution(\"0 49.9\"))\n"
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 49.9\") == \"0.0\"  # Correct solution: profit = 0, expected_profit = 0"
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(b\"0 49.9\\n\") == \"0.0\"\nassert solution(b\"0 50.0\\n\") == \"0.0\"\nassert solution(b\"0 51.0\\n\") == \"0.0\"\nassert solution(b\"0 52.0\\n\") == \"0.0\"\nassert solution(b\"0 53.0\\n\") == \"0.0\"\nassert solution(b\"0 54.0\\n\") == \"0.0\"\nassert solution(b\"0 55.0\\n\") == \"0.0\"\nassert solution(b\"0 56.0\\n\") == \"0.0\"\nassert solution(b\"0 57.0\\n\") == \"0.0\"\nassert solution(b\"0 58.0\\n\") == \"0.0\"\nassert solution(b\"0 59.0\\n\") == \"0.0\"\nassert solution(b\"0 60.0\\n\") == \"0.0\"\nassert solution(b\"0 61.0\\n\") == \"0.0\"\nassert solution(b\"0 62.0\\n\") == \"0.0\"\nassert solution(b\"0 63.0\\n\") == \"0.0\"\nassert solution(b\"0 64.0\\n\") == \"0.0\"\nassert solution(b\"0 65.0\\n\") == \"0.0\"\nassert solution(b\"0 66.0\\n\") == \"0.0\"\nassert solution(b\"0 67.0\\n\") == \"0.0\"\nassert solution(b\"0 68.0\\n\") == \"0.0\"\nassert solution(b\"0 69.0\\n\") == \"0.0\"\nassert solution(b\"0 70.0\\n\") == \"0.0\"\nassert solution(b\"0 71.0\\n\") == \"0.0\"\nassert solution(b\"0 72.0\\n\") == \"0.0\"\nassert solution(b\"0 73.0\\n\") == \"0.0\"\nassert solution(b\"0 74.0\\n\") == \"0.0\"\nassert solution(b\"0 75.0\\n\") == \"0.0\"\nassert solution(b\"0 76.0\\n\") == \"0.0\"\nassert solution(b\"0 77.0\\n\") == \"0.0\"\nassert solution(b\"0 78.0\\n\") == \"0.0\"\nassert solution(b\"0 79.0\\n\") == \"0.0\"\nassert solution(b\"0 80.0\\n\") == \"0.0\"\nassert solution(b\"0 81.0\\n\") == \"0.0\"\nassert solution(b\"0 82.0\\n\") == \"0.0\"\nassert solution(b\"0 83.0\\n\") == \"0.0\"\nassert solution(b\"0 84.0\\n\") == \"0.0\"\nassert solution(b\"0 85.0\\n\") == \"0.0\"\nassert solution(b\"0 86.0\\n\") == \"0.0\"\nassert solution(b\"0 87.0\\n\") == \"0.0\"\nassert solution(b\"0 88.0\\n\") == \"0.0\"\nassert solution(b\"0 89.0\\n\") == \"0.0\"\nassert solution(b\"0 90.0\\n\") == \"0.0\"\nassert solution(b\"0 91.0\\n\") == \"0.0\"\nassert solution(b\"0 92.0\\n\") == \"0.0\"\nassert solution(b\"0 93.0\\n\") == \"0.0\"\nassert solution(b\"0 94.0\\n\") == \"0.0\"\nassert solution(b\"0 95.0\\n\") == \"0.0\"\nassert solution(b\"0 96.0\\n\") == \"0.0\"\nassert solution(b\"0 97.0\\n\") == \"0."
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 49.9\") == 0.0, \"Expected output is 0.0\""
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nprint(solution('1 2\\n2 3\\n3 1\\n4 1'))\\nprint(solution('1 3\\n2 1\\n3 2\\n4 1'))\"\n"
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n1 2\\n2 3\\n3 1\\n4 1') == '4 1\\n2 1\\n3 2\\n1 3'\n"
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n4\n1 2\n2 3\n3 1\n4 1\n\"\"\"\n) == \"\"\"\n4 1\n2 1\n3 2\n1 3\n\"\"\""
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"\"\"4 1\n2 1\n3 2\n1 3\"\"\""
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2\\n2 3\\n3 1\\n4 1\") == \"4 1\\n2 1\\n3 2\\n1 3\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n4\n1 2\n2 3\n3 1\n4 1\n''') == '''\n4 1\n2 1\n3 2\n1 3\n'''"
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"4 1\\n2 1\\n3 2\\n1 3\"\nassert solution(4) == \"4 1\\n2 1\\n3 2\\n1 3\"\nassert solution(5) == \"4 1\\n2 1\\n3 2\\n1 3\"\nassert solution(6) == \"4 1\\n2 1\\n3 2\\n1 3\"\nassert solution(7) == \"4 1\\n2 1\\n3 2\\n1 3\"\nassert solution(8) == \"4 1\\n2 1\\n3 2\\n1 3\"\nassert solution(9) == \"4 1\\n2 1\\n3 2\\n1 3\"\nassert solution(10) == \"4 1\\n2 1\\n3 2\\n1 3\"\nassert solution(11) == \"4 1\\n2 1\\n3 2\\n1 3\"\nassert solution(12) == \"4 1\\n2 1\\n3 2\\n1 3\"\nassert solution(13) == \"4 1\\n2 1\\n3 2\\n1 3\"\nassert solution(14) == \"4 1\\n2 1\\n3 2\\n1 3\"\nassert solution(15) == \"4 1\\n2 1\\n3 2\\n1 3\"\nassert solution(16) == \"4 1\\n2 1\\n3 2\\n1 3\"\nassert solution(17) == \"4 1\\n2 1\\n3 2\\n1 3\"\nassert solution(18) == \"4 1\\n2 1\\n3 2\\n1 3\"\nassert solution(19) == \"4 1\\n2 1\\n3 2\\n1 3\"\nassert solution(20) == \"4 1\\n2 1\\n3 2\\n1 3\""
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == sample_output\n\nsample_input = \"\"\"\n4\n1 2\n2 3\n3 1\n4 1\n\"\"\"\n\nsample_output = \"\"\"\n4 1\n2 1\n3 2\n1 3\n\"\"\"\n\nsample_input = \"\"\"\n4\n1 2\n2 3\n3 1\n4 1\n5 6\n7 6\n\"\"\"\n\nsample_output = \"\"\"\n4 1\n2 1\n3 2\n1 3\n5 6\n7 6\n\"\"\"\n\nsample_input = \"\"\"\n4\n1 2\n2 3\n3 1\n4 1\n5 6\n7 6\n8 9\n\"\"\"\n\nsample_output = \"\"\"\n4 1\n2 1\n3 2\n1 3\n5 6\n7 6\n\"\"\"\n\nsample_input = \"\"\"\n4\n1 2\n2 3\n3 1\n4 1\n5 6\n7 6\n8 9\n10 11\n\"\"\"\n\nsample_output = \"\"\"\n4 1\n2 1\n3 2\n1 3\n5 6\n7 6\n\"\"\""
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2\\n2 3\\n3 1\\n4 1\") == \"4 1\\n2 1\\n3 2\\n1 3\"\n"
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1\\n\""
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(b'6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n') == '1'"
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == '''\n"
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6 5\\n2 1 6 3 5 3\\n1 2 5 3 5') == '1'\nassert solution('1 10\\n1 1 1 1 1 1\\n1 1 1 1 1 1') == '5'\nassert solution('3 5\\n1 2 3 4 5\\n1 1 1 1 1') == 'Infinity'"
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == '1', \"Expected output: 1\""
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n    6 5\n    2 1 6 3 5 3\n    1 2 5 3 5\n    \"\"\") == \"1\\n\""
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('6 5\\n2 1 6 3 5 3\\n1 2 5 3 5') == '1\\n'\nassert solution('5\\n1 1\\n1') == '1\\n'\nassert solution('6 5\\n1 1 1\\n1') == '1\\n'\nassert solution('10 3\\n1 1 1 1 1\\n1 1 1 1 1') == '1\\n'"
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"1\\n\""
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n2 1 10\n0 1 1 2 6\n\"\"\") == \"3\""
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1 10\\n0 1 1 2 6\\n\") == \"3\"\nassert solution(\"10 10 10\\n10 10 10\\n10 10 10\\n\") == \"impossible\"\nassert solution(\"2 1 10\\n1 1 1 2 6\\n\") == \"impossible\"\nassert solution(\"10 10 10\\n10 10 10\\n\") == \"impossible\"\nassert solution(\"2 1 10\\n0 1 1 2 6\\n\") == \"3\"\nassert solution(\"10 10 10\\n10 10 10\\n\") == \"impossible\"\nassert solution(\"2 1 10\\n0 1 1 2 6\\n\") == \"impossible\""
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"2 1 10\n0 1 1 2 6\"\"\") == 3\nassert solution(\"\"\"2 2 10\n0 1 1 2 6\n1 2 3 4 5\n\"\"\") == impossible\nassert solution(\"\"\"2 1 10\n0 1 1 2 6\n2 3 4 5 6\"\"\") == impossible\nassert solution(\"\"\"2 1 10\n0 1 1 2 6\n2 3 4 5 6\n3 4 5 6 7\"\"\") == impossible\nassert solution(\"\"\"2 1 10\n0 1 1 2 6\n3 4 5 6 7\n4 5 6 7 8\"\"\") == impossible\nassert solution(\"\"\"2 1 10\n0 1 1 2 6\n4 5 6 7 8\n5 6 7 8 9\"\"\") == impossible\nassert solution(\"\"\"2 1 10\n0 1 1 2 6\n5 6 7 8 9\n6 7 8 9 10\"\"\") == impossible\nassert solution(\"\"\"2 1 10\n0 1 1 2 6\n6 7 8 9 10\n7 8 9 10 11\"\"\") == impossible\nassert solution(\"\"\"2 1 10\n0 1 1 2 6\n7 8 9 10 11\n8 9 10 11 12\"\"\") == impossible\nassert solution(\"\"\"2 1 10\n0 1 1 2 6\n9 10 11 12 13\"\"\") == impossible\nassert solution(\"\"\"2 1 10\n0 1 1 2 6\n10 11 12 13 14\"\"\") == impossible\nassert solution(\"\"\"2 1 10\n0 1 1 2 6\n11 12 13 14 15\"\"\") == impossible\nassert solution(\"\"\"2 1 10\n0 1 1 2 6\n12 13 14 15 16\"\"\") == impossible\nassert solution(\"\"\"2 1 10\n0 1 1 2 6\n13 14 15 16 17\"\"\") == impossible\nassert solution(\"\"\"2 1 10\n0 1 1 2 6\n14 15 16 17 18\"\"\") == impossible\nassert solution(\"\"\"2 1 10\n0 1 1 2 6\n15 16 17 18 19\"\"\") == impossible\nassert solution(\"\"\"2 1 10\n0 1 1 2 6\n16 17 18 19 20\"\"\") == impossible\nassert solution(\"\"\"2 1 10\n0 1 1 2 6\n17 18 19 20 21\"\"\") == impossible\nassert solution(\"\"\"2 1 10\n0 1 1 2 6\n18 19 20 21 22\"\"\") == impossible\nassert solution(\"\"\"2 1 10\n0 1 1 2 6\n19 20 21 22 23\"\"\") == impossible\nassert solution(\"\"\"2 1 10\n0 1 1 2 6\n20 21 22 23 24\"\"\") == impossible\nassert solution(\"\"\"2 1 10\n0 1 1 2 6\n21 22 23 24 25\"\"\") == impossible\nassert solution(\"\"\"2 1 10\n0 1 1 2 6\n22 23 24 25 26\"\"\") == impossible\nassert solution(\"\"\"2 1 10\n0 1 1 2 6\n23 24 25 26 27\"\"\") == impossible\nassert solution(\"\"\"2 1 10\n0 1 1 2 6\n24 25 26 27 28\"\"\") == impossible\nassert solution(\"\"\"2 1 10\n0 1 1 2 6\n25 26 27 28 29\"\"\") == impossible\nassert solution(\"\"\"2 1 10\n0 1 1 2 6\n26 "
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1 10\\n0 1 1 2 6\") == \"3\\n\""
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1 10\\n0 1 1 2 6\") == \"3\"\n"
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1 10\\n0 1 1 2 6\") == 3"
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 1 10\\n0 1 1 2 6') == '3'"
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1 10\\n0 1 1 2 6\") == \"3\""
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1 10\\n0 1 1 2 6\") == 3, \"Test failed\"\n\nfrom collections import defaultdict"
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1 10\\n0 1 1 2 6\") == \"3\"\n\nfrom typing import List"
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 100\\n99 1\\n1 99\\n\") == \"2\\n1 2\"\nassert solution(\"2 100\\n99 100\\n1 100\\n\") == \"1\"\nassert solution(\"2 100\\n99 100\\n100 100\\n\") == \"2\"\nassert solution(\"2 100\\n99 100\\n100 0\\n\") == \"\""
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(solution) == \"2\\n1\\n2\"\n"
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r')) == \"2\\n1 2\""
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\\n1 2\"\n"
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2\\n1 2\\n\"\n"
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '2\\n1 2'\n"
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 100\\n99 1\\n1 99') == '2\\n1 2'"
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 100\\n99 1\\n1 99') == '2\\n1 2\\n'"
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 100\\n99 1\\n1 99\") == \"2\\n1 2\""
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 100\\n99 1\\n1 99\") == \"2\\n1 2\"\n"
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"H\\nT\\n0.5\") == \"0.5\", \"Your solution is incorrect.\""
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('H\\nT\\n0.5') == '0.5', \"The probability that Gon wins is not correct.\""
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('H\\nT\\n0.5') == '0.5'\nassert solution('H\\nT\\n0.499') == '0.5'\nassert solution('H\\nT\\n0.501') == '0.499'\nassert solution('H\\nT\\n0.999') == '0.999'\nassert solution('H\\nT\\n1') == '1'\nassert solution('H\\nT\\n0') == '0'\nassert solution('H\\nT\\n0.001') == '0.001'\nassert solution('H\\nT\\n0.000999') == '0.000999'\nassert solution('H\\nT\\n0.001001') == '0.000999'\nassert solution('H\\nT\\n0.999999') == '0.999999'\nassert solution('H\\nT\\n1.000001') == '0.999999'\nassert solution('H\\nT\\n1.0000000001') == '0.999999'\nassert solution('H\\nT\\n1.000000000001') == '0.999999'\nassert solution('H\\nT\\n1.00000000000001') == '1'\nassert solution('H\\nT\\n1.0000000000000001') == '1'"
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"H\\nT\\n0.5\\n\") == 0.5\n\nsolution(\"H\\nT\\n0.75\\n\") == 0.75\n\nsolution(\"H\\nH\\n1.00\\n\") == 1.0\n\nsolution(\"T\\nT\\n1.00\\n\") == 1.0\n\nsolution(\"H\\nT\\n0.75\\n\") == 0.5\n\nsolution(\"T\\nH\\n1.00\\n\") == 0.5\n\nsolution(\"T\\nH\\n0.75\\n\") == 0.75\n\nsolution(\"H\\nT\\n0.50\\n\") == 0.5\n\nsolution(\"H\\nH\\n1.00\\n\") == 1.0\n\nsolution(\"T\\nT\\n1.00\\n\") == 1.0\n\nsolution(\"H\\nT\\n0.75\\n\") == 0.5\n\nsolution(\"T\\nH\\n1.00\\n\") == 0.5\n\nsolution(\"T\\nH\\n0.75\\n\") == 0.75\n\nsolution(\"H\\nT\\n0.50\\n\") == 0.5\n\nsolution(\"H\\nH\\n1.00\\n\") == 1.0\n\nsolution(\"T\\nT\\n1.00\\n\") == 1.0\n\nsolution(\"H\\nT\\n0.75\\n\") == 0.5\n\nsolution(\"T\\nH\\n1.00\\n\") == 0.5\n\nsolution(\"T\\nH\\n0.75\\n\") == 0.75\n\nsolution(\"H\\nT\\n0.50\\n\") == 0.5\n\nsolution(\"H\\nH\\n1.00\\n\") == 1.0\n\nsolution(\"T\\nT\\n1.00\\n\") == 1.0\n\nsolution(\"H\\nT\\n0.75\\n\") == 0.5\n\nsolution(\"T\\nH\\n1.00\\n\") == 0.5\n\nsolution(\"T\\nH\\n0.75\\n\") == 0.75\n\nsolution(\"H\\nT\\n0.50\\n\") == 0.5\n\nsolution(\"H\\nH\\n1.00\\n\") == 1.0\n\nsolution(\"T\\nT\\n1.00\\n\") == 1.0\n\nsolution(\"H\\nT\\n0.75\\n\") == 0.5\n\nsolution(\"T\\nH\\n1.00\\n\") == 0.5\n\nsolution(\"T\\nH\\n0.75\\n\") == 0.75\n\nsolution(\"H\\nT\\n0.50\\n\") == 0.5\n\nsolution(\"H\\nH\\n1.00\\n\") == 1.0\n\nsolution(\"T\\nT\\n1.00\\n\") == 1.0\n\nsolution(\"H\\nT\\n0.75\\n\") == 0.5\n\nsolution(\"T\\nH\\n1.00\\n\") == 0.5\n\nsolution(\"T\\nH\\n0.75\\n\") == 0.75\n\nsolution(\"H\\nT\\n0.50\\n\") == 0.5\n\nsolution(\"H\\nH\\n1.00\\n\") == 1.0\n\nsolution(\"T\\nT\\n1.00\\n\") == 1.0\n\nsolution(\"H\\nT\\n0.75\\n\") == 0.5\n\nsolution(\"T\\nH\\n1.00\\n\") == 0.5\n\nsolution(\"T\\nH\\n0.75\\n\") == 0.75\n\nsolution(\"H\\nT\\n0.50\\n\") == 0.5\n\nsolution(\"H\\nH\\n1.00\\n\") == 1.0\n\nsolution(\"T\\nT\\n1.00\\n\") == 1.0\n\nsolution(\"H\\nT"
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"H\") == 0.5"
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 0.5\n"
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"H\\nT\\n0.5\") == \"0.5\"\nprint(\"Correct\")"
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"H\\nT\\n0.5\") == 0.5, \"The probability that Gon wins is not correct.\""
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('H\\nT\\n0.5') == '0.5'\nassert solution('H\\nT\\n0.1') == '0.05'\nassert solution('T\\nH\\n0.5') == '0.5'\nassert solution('T\\nH\\n0.1') == '0.05'\nassert solution('H\\nT\\n
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"H\\nT\\n0.5\") == \"0.5\"\nassert solution(\"H\\nT\\n1\") == \"0.5\"\nassert solution(\"H\\nT\\n0.75\") == \"0.25\"\nassert solution(\"H\\nT\\n0.500001\") == \"0.5\"\nassert solution(\"H\\nT\\n0.499999\") == \"0.5\"\nassert solution(\"H\\nT\\n0.49999999\") == \"0.5\"\nassert solution(\"H\\nT\\n0.500000000001\") == \"0.5\"\nassert solution(\"H\\nT\\n0.499999999999\") == \"0.5\"\nassert solution(\"H\\nT\\n0.50000000000000001\") == \"0.5\"\nassert solution(\"H\\nT\\n0.49999999999999999\") == \"0.5\"\nassert solution(\"H\\nT\\n0.50000000000000000000000000000001\") == \"0.5\"\nassert solution(\"H\\nT\\n0.4999999999999999999999999999999999999\") == \"0.5\""
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == '8\\n1 3 5 7 9 11 13 15\\n'"
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(6) == \"8\\n1 3 5 7 9 11 13 15\""
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n\") == \"8\\n1 3 5 7 9 11 13 15\\n\"\nassert solution(\"5\\n\") == \"2\\n0\\n\"\nassert solution(\"7\\n\") == \"0\\n4 6 8 10 12 14 16\\n\""
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n\") == \"8\\n1 3 5 7 9 11 13 15\\n\"\nassert solution(\"4\\n\") == \"1\\n3\\n5\\n7\\n9\\n11\\n13\\n15\\n\"\nassert solution(\"5\\n\") == \"1 5\\n\"\nassert solution(\"6\\n\") == \"1 3 5 7 9 11 13 15\\n\"\nassert solution(\"7\\n\") == \"1 2 6 8 10 14 16\\n\"\nassert solution(\"8\\n\") == \"1 3 5 7 9 11 13 15\\n17\\n\"\nassert solution(\"9\\n\") == \"1 2 4 6 8 10 12 14 16 18\\n\"\nassert solution(\"10\\n\") == \"1 2 4 6 8 10 12 14 16 18\\n\"\nassert solution(\"11\\n\") == \"1 2 4 6 8 10 12 14 16 18\\n\"\nassert solution(\"12\\n\") == \"1 2 4 6 8 10 12 14 16 18\\n\"\nassert solution(\"13\\n\") == \"1 2 4 6 8 10 12 14 16 18\\n\"\nassert solution(\"14\\n\") == \"1 2 4 6 8 10 12 14 16 18\\n\"\nassert solution(\"15\\n\") == \"1 2 4 6 8 10 12 14 16 18\\n\"\nassert solution(\"16\\n\") == \"1 2 4 6 8 10 12 14 16 18\\n\"\nassert solution(\"17\\n\") == \"1 2 4 6 8 10 12 14 16 18\\n19\\n\"\nassert solution(\"18\\n\") == \"1 2 4 6 8 10 12 14 16 18\\n21\\n\"\nassert solution(\"19\\n\") == \"1 2 4 6 8 10 12 14 16 18\\n23\\n\"\nassert solution(\"20\\n\") == \"1 2 4 6 8 10 12 14 16 18\\n25\\n\"\nassert solution(\"21\\n\") == \"1 2 4 6 8 10 12 14 16 18\\n27\\n\"\nassert solution(\"22\\n\") == \"1 2 4 6 8 10 12 14 16 18\\n29\\n\"\nassert solution(\"23\\n\") == \"1 2 4 6 8 10 12 14 16 18\\n31\\n\"\nassert solution(\"24\\n\") == \"1 2 4 6 8 10 12 14 16 18\\n33\\n\"\nassert solution(\"25\\n\") == \"1 2 4 6 8 10 12 14 16 18\\n35\\n\"\nassert solution(\"26\\n\") == \"1 2 4 6 8 10 12 14 16 18\\n37\\n\"\nassert solution(\"27\\n\") == \"1 2 4 6 8 10 12 14 16 18\\n39\\n\"\nassert solution(\"28\\n\") == \"1 2 4 6 8 10 12 14 16 18\\n41\\n\"\nassert solution(\"29\\n\") == \"1 2 4 6 8 10 12 14 16 18\\n"
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"8\\n1 3 5 7 9 11 13 15\""
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"8\\n1 3 5 7 9 11 13 15\"\nassert solution(5) == \"3\\n0 2 4\"\nassert solution(7) == \"13\\n7 9 11 13 15\"\nassert solution(9) == \"1\\n0\"\nassert solution(10) == \"15\\n0 1 2 3\""
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"8\\n1 3 5 7 9 11 13 15\"\n"
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == \"8\\n1 3 5 7 9 11 13 15\""
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"8\\n1 3 5 7 9 11 13 15\"\n"
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\\n1\\n0\\n\""
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\\n\") == \"3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\\n\") == \"3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\"4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\\n\") == \"3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\"4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\\n\") == \"3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for input: {input()}, expected output: {expected_output}\"\n"
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(10) == '3'\nassert solution(100) == '1'\nassert solution(1000) == '0'"
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Expected: {expected_output}, Actual: {solution(input())}\"\n"
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\") == \"3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\\n\") == \"3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for input {input()} and output {solution(input())}\"\n\nfor i in range(1, 10):\n    expected_output[i] = f\"{expected_output[i]} {i}\""
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\") == \"3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    a_1 = int(stdin.readline().strip())\\n    a_2 = int(stdin.readline().strip())\\n    a_3 = int(stdin.readline().strip())\\n    a_4 = int(stdin.readline().strip())\\n    n = 4\\n    x_1 = a_1\\n    x_2 = a_2\\n    x_3 = a_3\\n    x_4 = a_4\\n    for i in range(1, n):\\n        x_i = x_{i-1} ^ x_{i-2} ^ x_{i-3} ^ x_{i-4}\\n        print(x_i)\\n\"\n\nassert solution(\"4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\") == \"3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    a_1 = int(stdin.readline().strip())\\n    a_2 = int(stdin.readline().strip())\\n    a_3 = int(stdin.readline().strip())\\n    a_4 = int(stdin.readline().strip())\\n    n = 4\\n    x_1 = a_1\\n    x_2 = a_2\\n    x_3 = a_3\\n    x_4 = a_4\\n    for i in range(1, n):\\n        x_i = x_{i-1} ^ x_{i-2} ^ x_{i-3} ^ x_{i-4}\\n        print(x_i)\\n\"\n\nassert solution(\"4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\") == \"3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    a_1 = int(stdin.readline().strip())\\n    a_2 = int(stdin.readline().strip())\\n    a_3 = int(stdin.readline().strip())\\n    a_4 = int(stdin.readline().strip())\\n    n = 4\\n    x_1 = a_1\\n    x_2 = a_2\\n    x_3 = a_3\\n    x_4 = a_4\\n    for i in range(1, n):\\n        x_i = x_{i-1} ^ x_{i-2} ^ x_{i-3} ^ x_{i-4}\\n        print(x_i)\\n\""
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 1\\n1 1 -2 0') == 0"
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1\\n1 1 -2 0\") == \"0\\n\"\nassert solution(\"3 4\\n1 1 2 2\\n2 2 3 3\") == \"5\\n\"\nassert solution(\"5 6\\n2 2 1 1\\n2 3 1 2\\n3 4 2 3\\n3 5 2 4\\n4 6 3 5\\n\") == \"20\\n\""
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1 -2 0\") == 0\nassert solution(\"2 1\\n1 1 -2 0\\n2 1\\n3 1 -2 0\\n4 1 -2 0\") == 1\nassert solution(\"1 1\\n2 1\\n3 1\\n4 1\\n5 1\\n6 1\\n7 1\\n8 1\\n9 1\\n10 1\\n\") == 5"
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1 -2 0\\n1 1 -1 0\\n1 1 -3 0\\n\") == \"0\\n2\\n3\\n\""
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1\\n1 1 -2 0\") == 0\nassert solution(\"3 2\\n1 -1 2 0\\n-1 2 -3 2\") == 3\nassert solution(\"4 2\\n1 1 2 0\\n-2 1 -3 2\\n1 0 2 -2\") == 7\nassert solution(\"5 3\\n-1 2 3 4\\n0 -1 2 1\\n-1 2 3 4\") == 10"
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Test Case {i+1} failed\\nExpected: {output}\\nGot: {solution(input())}\" for i, (input, output) in enumerate(test_cases)"
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1\\n1 1 -2 0\\n\") == 0"
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"0\""
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 1\\n1 1 -2 0') == '0\\n'"
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1\\n1 1 -2 0\") == \"0\\n\"\nassert solution(\"2 2\\n1 1 -1 0\\n-1 1 1 0\\n-2 1 2 0\") == \"2\\n\""
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\") == \"194\\n2019 10 25\\n2020 10 30\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\") == \"194\\n2019 10 25\\n2020 10 30\""
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\") == \"194\\n2019 10 25\\n2020 10 30\""
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\\n\"\n) == \"194\\n2019 10 25\\n2020 10 30\\n\""
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\") == \"194\\n2019 10 25\\n2020 10 30\"\n"
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\") == \"194\\n2019 10 25\\n2020 10 30\""
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\\n\") == \"194\\n2019 10 25\\n2020 10 30\\n\""
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23') == '194\\n2019 10 25\\n2020 10 30'"
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\\n\") == \"194\\n2019 10 25\\n2020 10 30\"\n"
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 10 10 10 10 0\\n5 10 10 5 10 0\\n6 10 10 10 10 0') == 'negative-infinity 0\\n5 12.5\\nnegative-infinity -5'\nassert solution('5.1 10.1 10.1 10.1 10.1 0') == 'negative-infinity 0\\n5.0 12.5\\nnegative-infinity -5'\nassert solution('5.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 10 10 10 10 0\\n5 10 10 5 10 0\\n6 10 10 10 10 0\") == [\"negative-infinity\", \"5.0000000000000005\"]\nprint(\"All tests passed\")"
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 10 10 10 10 0\\n5 10 10 5 10 0\\n6 10 10 10 10 0\") == \"negative-infinity 0\\n5 12.5\\nnegative-infinity -5\"\nassert solution(\"5 10 10 10 10 0\\n5 10 10 5 10 0\\n6 10 10 10 10 0\") == \"negative-infinity 0\\n5 12.5\\nnegative-infinity -5\"\nassert solution(\"5 10 10 10 10 0\\n5 10 10 5 10 0\\n6 10 10 10 10 0\") == \"negative-infinity 0\\n5 12.5\\nnegative-infinity -5\""
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 10 10 10 10 0\") == \"negative-infinity 0\"\nassert solution(\"5 10 10 5 10 0\") == \"5 12.5\"\nassert solution(\"6 10 10 10 10 0\") == \"negative-infinity -5\""
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 10 10 10 10 0\\n5 10 10 5 10 0\\n6 10 10 10 10 0') == 'negative-infinity 0\\n5 12.5\\nnegative-infinity -5'"
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 10 10 10 10 0\\n5 10 10 5 10 0\\n6 10 10 10 10 0\") == \"negative-infinity 0\\n5 12.5\\nnegative-infinity -5\""
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}\\nGot: {solution(input())}\""
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 10 10 10 10 0\\n5 10 10 5 10 0\\n6 10 10 10 10 0\") == \"negative-infinity 0\\n5 12.5\\nnegative-infinity -5\""
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 10 10 10 10 0\\n5 10 10 5 10 0\\n6 10 10 10 10 0\") == \"negative-infinity 0\\n5 12.5\"\nassert solution(\"1 2 3 4 5 6\\n2 3 4 5 6 7\\n3 4 5 6 7 8\\n4 5 6 7 8 9\\n5 6 7 8 9 10\\n6 7 8 9 10 11\\n7 8 9 10 11 12\\n8 9 10 11 12 13\\n9 10 11 12 13 14\\n10 11 12 13 14 15\\n\") == \"negative-infinity -5\\nnegative-infinity 0\\n5 12.5\""
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 'negative-infinity 0\\n5 12.5\\nnegative-infinity -5'\n"
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\") == \"2\\n\"\n"
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\\n\") == \"2\\n\""
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\") == \"2\\n\"\nassert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\") == \"IMPOSSIBLE\\n\""
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\") == \"2\\n\"\n"
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n4 4\n100 30000\n200 20000\n300 10000\n400 0\n50 10000\n75 20000\n400 -40000\n\"\"\"\n) == \"2\\n\"\n"
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(r\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\") == \"2\"\n"
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\") == \"2\""
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2\\n\"\n"
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\") == \"2\\n\"\nassert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 40000\\n\") == \"IMPOSSIBLE\\n\"\nassert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\") == \"IMPOSSIBLE\\n\"\nassert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 40000\\n100 10000\\n\") == \"2\\n\""
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '345 2\\nrotS 2 1\\nnegR 2\\n'"
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"345 2\\nrotS 2 1\\nnegR 2\""
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100') == '345 2\\nrotS 2 1\\nnegR 2'"
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100') == '345 2\\nrotS 2 1\\nnegR 2'"
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\") == \"345 2\\nrotS 2 1\\nnegR 2\\n\"\nassert solution(\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\\n3 2\\nrotR 2 1\\nnegR 2\") == \"345 2\\nrotR 2 1\\nnegR 2\\n\"\nassert solution(\"2 3\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\\n3 2\\nrotR 2 1\\nnegR 2\") == \"345 2\\nrotR 2 1\\nnegR 2\\n\""
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\") == \"345 2\\nrotS 2 1\\nnegR 2\"\nassert solution(\n    \"5 6\\n1 -2 3 400\\n-8 0 -4 -10\\n11 4 0 100\") == \"560 1\\nnegS 1\"\nassert solution(\n    \"5 6\\n1 -2 3 400\\n-8 0 -4 -10\\n11 4 0 100\") == \"560 1\\nnegS 1\"\nassert solution(\n    \"5 6\\n1 -2 3 400\\n-8 0 -4 -10\\n11 4 0 100\") == \"560 1\\nnegS 1\"\nassert solution(\n    \"5 6\\n1 -2 3 400\\n-8 0 -4 -10\\n11 4 0 100\") == \"560 1\\nnegS 1\"\nassert solution(\n    \"5 6\\n1 -2 3 400\\n-8 0 -4 -10\\n11 4 0 100\") == \"560 1\\nnegS 1\""
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\") == \"345 2\\nrotS 2 1\\nnegR 2\\n\"\n"
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_data) == output_data, f\"Test case failed: {input_data}, expected output: {output_data}\"\n"
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\\n\") == \"345 2\\nrotS 2 1\\nnegR 2\"\nprint(\"All test cases pass\")"
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"345 2\\nrotS 2 1\\nnegR 2\"\nassert solution(input()) == \"450 2\\nrotS 1 3\\nnegR 1\"\nassert solution(input()) == \"100 1\\nnegR 1\""
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0.5\\n\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"0.5\\n\", \"Expected output: 0.5, but got: {}\".format(solution(stdin))"
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n    3 2\n    3 1 1\n    ''') == '0.5'\n"
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"0.5\\n\", \"The solution should return 0.5.\""
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n3 2\n3 1 1\n''') == '0.5'"
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '0.5'\n"
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"3 2\\n3 1 1\") == \"0.5\\n\""
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\n3 1 1\") == \"0.5\\n\"\n\nassert solution(\"3 3\\n3 1 1\\n3 1 1\") == \"0.5\\n\"\n\nassert solution(\"3 3\\n3 1 2\\n3 2 2\") == \"0.5\\n\"\n\nassert solution(\"3 3\\n3 1 1\\n3 1 1\\n3 1 2\") == \"0.5\\n\"\n\nassert solution(\"3 3\\n3 1 1\\n3 1 1\\n3 1 2\\n3 2 2\\n3 2 2\") == \"0.5\\n\"\n\nassert solution(\"3 3\\n3 1 1\\n3 1 1\\n3 1 2\\n3 2 2\\n3 2 2\\n3 2 3\") == \"0.5\\n\""
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"The minimum value of the sum above, with a relative or absolute error less than 10^{-4}, is 0.5.\"\n"
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n3 2\n3 1 1\n''') == 0.5\n"
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9') == '1 4 5\\n2 6 7'"
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n9 11\n1 4\n5 4\n1 5\n6 2\n6 7\n7 2\n3 8\n3 9\n8 9\n6 8\n5 9\n''') == \"1 4 5\\n2 6 7\""
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Test failed: {solution(input())}, expected {expected_output}\""
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n9 11\n1 4\n5 4\n1 5\n6 2\n6 7\n7 2\n3 8\n3 9\n8 9\n6 8\n5 9\n''') == '1 4 5\\n2 6 7\\n'\n\nprint('All tests passed!')"
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\") == \"1 4 5\\n2 6 7\""
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\") == \"1 4 5\\n2 6 7\"\nassert solution(\"9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\\n1 3 5 7\") == \"1 4 5\\n2 6 7\"\nassert solution(\"9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\\n1 2 3 5 7\") == \"impossible\""
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"1 4 5\\n2 6 7\"\n"
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n4\\n5\\n1\\n6\\n6\\n7\\n2\\n3\\n8\\n3\\n9\\n8\\n6\\n5\\n9\\n6\\n8\\n5\\n9\") == \"1 4 5\\n2 6 7\"\nassert solution(\"1\\n4\\n5\\n1\\n6\\n6\\n7\\n2\\n3\\n8\\n3\\n9\\n8\\n6\\n5\\n9\\n6\\n8\\n5\\n9\") == \"1 4 5\\n2 6 7\""
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\\n') == '1 4 5\\n2 6 7'"
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\") == \"1 4 5\\n2 6 7\""
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\") == \"13500\\n\""
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"13500\", \"Test failed\""
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"13500\""
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == \"13500\\n\", \"Incorrect Output\""
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    11 2\n    12000\n    9000\n    4500\n    10000\n    12000\n    11000\n    12000\n    18000\n    10000\n    9000\n    12000\n    \"\"\"\n) == \"13500\\n\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"13500\\n\"\nprint(\"All the people can drive optimally!\")"
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"13500\", \"Your code is incorrect\""
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n\") == \"13500\\n\"\nprint(\"All tests pass!\")"
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n\") == 13500, \"Test failed\""
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 13500, \"Solution should return 13500\""
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\\n') == 'Hot_cross_buns!_=___Hot_cross_buns!_=One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=Hot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,def solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 16\\nHot cross buns!\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns!\\n2 2 2 2 2 2 2 2 4 4 4 4\\n') == 'Hot_cross_buns!_=___Hot_cross_buns!_\\n____________________Hot_cross_buns!_\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_\\n'"
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\\n\") == \"Hot_cross_buns!_=___Hot_cross_buns!_\\n____________________Hot_cross_buns!_\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=Hot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"2 16\\nHmm, Hmm, Hmm, Hmm, Hmm, Hmm, Hmm, Hmm, Hmm, Hmm, Hmm, Hmm, Hmm, Hmm, Hmm\\n3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 3 0 "
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 16\\nHot cross buns!\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns!\\n2 2 2 2 2 2 2 2 4 4 4 4\") == \"Hot_cross_buns!_=___Hot_cross_buns!_=One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=Hot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"2 2 2 2 2 2 2 2 4 4 4 4\") == \"Hot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\") == \"\\nHot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_=\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\") == \"Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_=\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=Hot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\\n') == 'Hot_cross_buns!_=___Hot_cross_buns!_=One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=Hot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,def solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\\n\") == \"Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_=\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\") == \"Hot_cross_buns!_=___Hot_cross_buns!_\\n____________________Hot_cross_buns!_\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,def solution(stdin: str) -> str:\\n\\n    pass\\n\""
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 16\\nHot cross buns!\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns!\\n2 2 2 2 2 2 2 2 4 4 4 4\\n\") == \"Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_=\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_________________________\""
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n'''\n3 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33\n'''\n) == '33'"
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"33\"\n"
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33') == '33'"
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"33\""
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\"\n) == \"33\"\n\nassert solution(\n    \"3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\\n\"\n) == \"33\"\n\nassert solution(\n    \"3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\\n\\n3 4 2\\n4 4 5\"\n) == \"70\"\n\nassert solution(\n    \"3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\\n\\n3 4 2\\n4 4 5\\n\"\n) == \"70\"\n\nassert solution(\n    \"3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\\n\\n3 4 2\\n4 4 5\\n\\n3 6 4\\n6 4 10\"\n) == \"125\""
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(None) == \"not implemented\""
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"33\"\n"
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33') == 33\n"
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == 405, \"The correctness of solution is not verified. Please verify the solution by providing the input and output.\"\n"
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n20 15 10\\n7 7\\n30 0') == '405'"
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n20 15 10\\n7 7\\n30 0\") == \"405\\n\""
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    3\n    20 15 10\n    7 7\n    30 0\n    \"\"\"\n) == \"405\""
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"405\""
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 405"
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"405\""
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n20 15 10\\n7 7\\n30 0\") == 405\nassert solution(\"3\\n20 15 10\\n7 7\\n30 10\") == 405\nassert solution(\"3\\n20 15 10\\n7 7\\n30 5\") == 295\nassert solution(\"3\\n20 15 10\\n7 7\\n30 0\") == 405\n"
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n20 15 10\\n7 7\\n30 0') == '405'"
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2 4 7\") == \"28 4 21 14.0\\n\", \"The expected output is incorrect.\""
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n1 2 4 7') == '28 4 21 14.0\\n'\n"
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n1 2 4 7') == '28 4 21 14.0'\nprint('All tests passed.')"
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '28 4 21 14.0'"
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"28 4 21 14.0\\n\", \"Incorrect output. Please check the implementation.\""
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 2 4 7\") == \"28 4 21 14.0\"\n"
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n1 2 4 7') == '28 4 21 14.0'\n"
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"28 4 21 14.0\\n\"\n"
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '28 4 21 14.0'\n"
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 2 4 7\") == \"28 4 21 14.0\""
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4 \\n2 3 4 1 \\n3 4 1 2 \\n4 1 2 3\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"no\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"no\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"no\""
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n4 2\n1 2 3 4\n2 3 4 1\n''') == 'yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\n'\n\nassert solution('''\n4 2\n1 2 3 4\n2 3 4 1\n''') == 'no\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\n'\n\nassert solution('''\n4 2\n1 2 3 4\n2 3 4 1\n''') == 'yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\n'\n\nassert solution('''\n4 2\n1 2 3 4\n2 3 4 1\n''') == 'yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\n'"
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2"
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\"\n"
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(4, 2) == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"yes\", \"Test case 1 failed\""
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 3\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 4\\n1 2 3 4\\n2 3 4 1\") == \"no\"\nassert solution(\"4 5\\n1 2 3 4\\n2 3 4 1\") == \"no\"\n"
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"yes\""
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4 \\n2 3 4 1 \\n3 4 1 2 \\n4 1 2 3\"\nassert solution(\"4 10\\n1 2 3 4 5 6 7 8 9\") == \"no\"\nassert solution(\"5 5\") == \"no\"\nassert solution(\"3 3\") == \"no\"\n"
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"6 3\\n1 2 3 4\\n2 3 4 1\") == \"no\"\nassert solution(\"4 5\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\""
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    5\n    10 10 -10 -4 10\n    \"\"\"\n) == \"10.000000000\"\n\nassert solution(\n    \"\"\"\n    4\n    10 -10 -4 10\n    \"\"\"\n) == \"0.000000000\"\n\nassert solution(\n    \"\"\"\n    6\n    10 -10 -4 10 30\n    \"\"\"\n) == \"0.000000000\""
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n10 10 -10 -4 10\") == \"10.000000000\\n\""
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    5\n    10 10 -10 -4 10\n    \"\"\"\n) == \"10.000000000\\n\"\n\nassert solution(\n    \"\"\"\n    2\n    2 -2\n    \"\"\"\n) == \"0.000000000\\n\"\n\nassert solution(\n    \"\"\"\n    10\n    10 10 -10 -4 10 10 10 10 10 10 -10 -4 10 10 10 10\n    \"\"\"\n) == \"10.000000000\\n\""
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=input()) == \"10.000000000\"\n"
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n10 10 -10 -4 10\") == \"10.000000000\"\n"
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 10.0, \"The correctness of the solution is not verified.\""
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(5) == '10.0'\nassert solution(10) == '10.0'\nassert solution(1) == '10.0'\nassert solution(1000001) == '0.0'\nassert solution(1000000) == '10.0'\nassert solution(100000000) == '10.0'\nassert solution(100000000000) == '0.0'"
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n10 10 -10 -4 10\") == \"10.000000000\\n\", \"The solution is incorrect\""
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n5\n10 10 -10 -4 10\n''') == '10.000000000'\n\nassert solution('''\n4\n-5 0 -10 10\n''') == '-5.000000000'\n\nassert solution('''\n1\n-10\n''') == '0.000000000'\n\nassert solution('''\n6\n-3 0 -5 10 15 -15\n''') == '-2.000000000'"
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n10 10 -10 -4 10\") == \"10.000000000\\n\"\nassert solution(\"4\\n1000000\\n\") == \"0.000000000\\n\"\nassert solution(\"5\\n1000000 -1000000 1000000 1000000 1000000\") == \"0.000000000\\n\"\nassert solution(\"4\\n5000000 5000000 5000000 5000000\") == \"0.000000000\\n\"\nassert solution(\"5\\n-5000000 -5000000 -5000000 -5000000 -5000000\") == \"0.000000000\\n\""
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n30\\n3\\n2\\n45\\n\") == \"1\\n\"\nassert solution(\"5\\n15\\n10\\n20\\n30\\n\") == \"2\\n\"\nassert solution(\"6\\n15\\n10\\n20\\n30\\n\") == \"3\\n\"\nassert solution(\"7\\n15\\n10\\n20\\n30\\n\") == \"5\\n\"\nassert solution(\"8\\n15\\n10\\n20\\n30\\n\") == \"7\\n\"\nassert solution(\"9\\n15\\n10\\n20\\n30\\n\") == \"9\\n\""
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"1\"\n"
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(4, 30, 3, 2, 45) == 1, \"The number of ways Ms. Hall can satisfy her rules is incorrect.\""
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n30\\n3\\n2\\n45\\n\") == 1, \"Expected 1, but got {}\".format(solution(\"4\\n30\\n3\\n2\\n45\\n\"))\nassert solution(\"4\\n30\\n3\\n2\\n45\\n\") == 2, \"Expected 2, but got {}\".format(solution(\"4\\n30\\n3\\n2\\n45\\n\"))\nassert solution(\"4\\n30\\n3\\n2\\n45\\n\") == 4, \"Expected 4, but got {}\".format(solution(\"4\\n30\\n3\\n2\\n45\\n\"))"
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\n30\\n3\\n2\\n45\\n') == '1'"
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n30\\n3\\n2\\n45\") == \"1\\n\"\nassert solution(\"5\\n30\\n3\\n2\\n45\") == \"1\\n\"\nassert solution(\"10\\n30\\n3\\n2\\n45\") == \"1\\n\"\nassert solution(\"50\\n30\\n3\\n2\\n45\") == \"1\\n\"\nassert solution(\"100\\n30\\n3\\n2\\n45\") == \"1\\n\""
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n30\\n3\\n2\\n45\") == \"1\"\nassert solution(\"4\\n30\\n3\\n2\\n45\\n30\") == \"0\"\nassert solution(\"4\\n30\\n3\\n2\\n45\\n30\\n25\") == \"0\"\nassert solution(\"4\\n30\\n3\\n2\\n45\\n30\\n25\\n45\") == \"1\""
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == 1\nprint(\"All tests passed!\")"
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 1"
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 1, \"The given code does not meet the requirements.\""
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n''') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\n'\n) == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897'\n"
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3''') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897''', 'The code you provided is correct.')"
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897'"
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897'"
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\") == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\""
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\") == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\\n\"\n"
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\") == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\""
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\") == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\""
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\"\n) == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\""
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\""
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\") == \"4\"\nassert solution(\"4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\\n3\\n4 5\\n6 6\\n7 7\\n8 8\") == \"10\""
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\") == \"4\""
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\") == \"4\""
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_file) == expected_output, f\"Test failed for input {input_file}\""
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\") == \"4\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\") == 4\n"
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 4, \"Output: {}\".format(solution())"
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\") == \"4\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == '''\n2\n3 2\n3 1\n"
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 0\\n0 1\\n0 2\\n0 3\") == \"2\\n3 2\\n3 1\""
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 0\\n0 1\\n0 2\\n0 3\\n') == '2\\n3 2\\n3 1\\n'\n"
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2\\n3 2\\n3 1\""
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '''2\n3 2\n3 1\n'''\n"
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 0\\n0 1\\n0 2\\n0 3\") == \"2\\n3 2\\n3 1\""
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 0\\n0 1\\n0 2\\n0 3') == '2\\n3 2\\n3 1'"
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 0\\n0 1\\n0 2\\n0 3\") == \"2\\n3 2\\n3 1\""
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 0\\n0 1\\n0 2\\n0 3\") == \"2\\n3 2\\n3 1\"  # Test case 1\nassert solution(\"6 0\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\") == \"5\\n3 2\\n2 1\\n1 0\\n0 6\\n6 5\\n5 4\\n4 3\\n3 2\\n2 1\\n1 0\\n0 7\\n7 6\\n6 5\\n5 4\\n4 3\\n3 2\\n2 1\\n1 0\\n0 8\\n8 7\\n7 6\\n6 5\\n5 4\\n4 3\\n3 2\\n2 1\\n1 0\\n0 9\\n9 8\\n8 7\\n7 6\\n6 5\\n5 4\\n4 3\\n3 2\\n2 1\\n1 0\\n0 10\\n10 9\\n9 8\\n8 7\\n7 6\\n6 5\\n5 4\\n4 3\\n3 2\\n2 1\\n1 0\\n0 11\\n11 10\\n10 9\\n9 8\\n8 7\\n7 6\\n6 5\\n5 4\\n4 3\\n3 2\\n2 1\\n1 0\\n0 12\\n12 11\\n11 10\\n10 9\\n9 8\\n8 7\\n7 6\\n6 5\\n5 4\\n4 3\\n3 2\\n2 1\\n1 0\\n0 13\\n13 12\\n12 11\\n11 10\\n10 9\\n9 8\\n8 7\\n7 6\\n6 5\\n5 4\\n4 3\\n3 2\\n2 1\\n1 0\\n0 14\\n14 13\\n13 12\\n12 11\\n11 10\\n10 9\\n9 8\\n8 7\\n7 6\\n6 5\\n5 4\\n4 3\\n3 2\\n2 1\\n1 0\\n0 15\\n15 14\\n14 13\\n13 12\\n12 11\\n11 10\\n10 9\\n9 8\\n8 7\\n7 6\\n6 5\\n5 4\\n4 3\\n3 2\\n2 1\\n1 0\\n0 16\\n16 15\\n15 14\\n14 13\\n13 12\\n12 11\\n11 10\\n10 9\\n9 8\\n8 7\\n7 6\\n6 5\\n5 4\\n4 3\\n3 2\\n2 1\\n1 0\\n0 17\\n17 16\\n16 15\\n15 14\\n14 13\\n13 12\\n12 11\\n11 10\\n10 9\\n9 8\\n8 7\\n7 6\\n6 5\\n5 4\\n4 3\\n3 2\\n2 1\\n1 0\\n0 18\\n18 17\\n17 16\\n16 15\\n15 14\\n14 13\\n13 12\\n12 11\\n11 10\\n10 9\\n9 8\\n8 7\\n7 6\\n6 5\\n5 4\\n4 3\\n3 2\\n2"
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"ok\"\n"
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 0 0\\n0 1.5 0\") == \"ok\""
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    2\n    0 0 0\n    0 1.5 0\n    \"\"\"\n) == \"ok\""
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 0 0\\n0 1.5 0\") == \"ok\\n\""
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n0 0 0\\n0 1.5 0\\n\") == \"ok\\n\"\nassert solution(\"5\\n0 1 0\\n0 2 0\\n0 3 0\\n0 4 0\\n\") == \"crash\\n\"\nassert solution(\"3\\n1 0 0\\n2 0 0\\n3 0 0\\n\") == \"ok\\n\"\n"
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 'ok'"
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"2\\n0 0 0\\n0 1.5 0\") == \"ok\""
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"ok\\n\"\n"
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('0 0 0\\n0 1.5 0') == 'ok'\nassert solution('0 2 3\\n0.5 0 4') == 'crash'\nassert solution
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 0 0\\n0 1.5 0\\n\") == \"ok\"\n"
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"2\\nR 0\\nG 2\"\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\\n\") == \"2\\nR 0\\nG 2\"\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\\n\") == \"2\\nR 0\\nG 2\"\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\\n\") == \"2\\nR 0\\nG 2\"\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\\n\") == \"2\\nR 0\\nG 2\""
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"def solution(stdin: str) -> str:\\n\\tpass\\n\\n\""
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\\n\") == \"2\\nR 0\\nG 2\\n\"\n\nfrom itertools import combinations"
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(str(input())) == \"2\\nR 0\\nG 2\""
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r')) == '2\\nR 0\\nG 2'\n"
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"2\\nR 0\\nG 2\\n\"\nassert solution(\"5 5\\n0 0\\n1 2\\n2 3\\n3 1\\n4 0\\n5 2\\n6 1\\n7 3\\n8 2\\n9 0\\n10 1\\n11 3\\n12 2\\n13 0\\n14 1\\n15 3\\n16 2\\n17 0\\n18 1\\n19 3\\n20 2\\n21 0\\n22 1\\n23 3\\n24 2\\n25 0\\n26 1\\n27 3\\n28 2\\n29 0\\n30 1\\n31 3\\n32 2\\n33 0\\n34 1\\n35 3\\n36 2\\n37 0\\n38 1\\n39 3\\n40 2\\n41 0\\n42 1\\n43 3\\n44 2\\n45 0\\n46 1\\n47 3\\n48 2\\n49 0\\n50 1\\n51 3\\n52 2\\n53 0\\n54 1\\n55 3\\n56 2\\n57 0\\n58 1\\n59 3\\n60 2\\n61 0\\n62 1\\n63 3\\n64 2\\n65 0\\n66 1\\n67 3\\n68 2\\n69 0\\n70 1\\n71 3\\n72 2\\n73 0\\n74 1\\n75 3\\n76 2\\n77 0\\n78 1\\n79 3\\n80 2\\n81 0\\n82 1\\n83 3\\n84 2\\n85 0\\n86 1\\n87 3\\n88 2\\n89 0\\n90 1\\n91 3\\n92 2\\n93 0\\n94 1\\n95 3\\n96 2\\n97 0\\n98 1\\n99 3\\n100 2\\n101 0\\n102 1\\n103 3\\n104 2\\n105 0\\n106 1\\n107 3\\n108 2\\n109 0\\n110 1\\n111 3\\n112 2\\n113 0\\n114 1\\n115 3\\n116 2\\n117 0\\n118 1\\n119 3\\n120 2\\n121 0\\n122 1\\n123 3\\n124 2\\n125 0\\n126 1\\n127 3\\n128 2\\n129 0\\n130 1\\n131 3\\n132 2\\n133 0\\n134 1\\n135 3\\n136 2\\n137 0\\n138 1\\n139 3\\n140 2\\n141 0\\n142 1\\n143 3\\n144 2\\n145 0\\n146 1\\n147 3\\n148 2\\n149 0\\n150 1\\n151 3\\n"
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2\\nR 0\\nG 2\""
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"2\\nR 0\\nG 2\"\n\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"2\\nR 0\\nG 2\"\n\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"2\\nR 0\\nG 2\""
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"\"\"\n2\nR 0\nG 2\n\"\"\""
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, \"Test case failed\"\n"
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n') == 2\nassert solution('7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n3 A H\\n') == 3\nassert solution('7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n3 A E G\\n') == 2"
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\") == 2\nassert solution(\"5 2 1 1\\n1 B\\n2 B\\n3 C\") == 1\nassert solution(\"10 3 5 5\\nA B C D E F G H I J K L M N O P Q R S T U V W X Y Z\\n1 A B C D E F G H I J K L M N O P Q R S T U V W X Y Z\") == 10"
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F') == 2\nassert solution('1 1 1 1\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F') == 1\nassert solution('4 4 4 4\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F') == 1\n"
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '2'\n"
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n\") == \"2\"\nassert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n3 4 5 6\\nA B C D\\nE F G H\\nI J K L\") == \"4\"\nassert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n3 4 5 6\\nA B C D\\nE F G H\\nI J K L\\n1 2\") == \"2\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\") == \"3\""
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '2', \"The output is incorrect.\""
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\") == 2\nassert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n10 A B D E F\") == 2\nassert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n10 A B D E F\") == 2"
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\nYYY\\nNYY\\nYNY\") == \"2\\n1 2 3\\n3 1 2\"\n"
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"2\\n1 2 3\\n3 1 2\""
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n3\nYYY\nNYY\nYNY\n\"\"\"\n) == \"\"\"\n2\n1 2 3\n3 1 2\n\"\"\""
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '2\\n1 2 3\\n3 1 2'\n\nfrom typing import List"
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\nYYY\\nNYY\\nYNY\") == \"2\\n1 2 3\\n3 1 2\"\nassert solution(\"6\\nYYN\\nNYY\\nNYY\\nNYY\\nYNY\") == \"2\\n2 1 2 3\""
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\nYYY\\nNYY\\nYNY\") == \"2\\n1 2 3\\n3 1 2\"\nassert solution(\"4\\nNYY\\nNYY\\nYYY\") == \"1\\n2 3 4\"\nassert solution(\"5\\nNYY\\nNYY\\nYYY\\nYNY\") == \"0\\n3 1 2 4 5\"\nassert solution(\"6\\nNYY\\nNYY\\nYYY\\nYNY\\nYNY\\nNYY\\nNYY\\nYNY\\nNYY\\nNYY\\nNYY\\nNYY\\nYNY\\nYNY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nYNY\\nYNY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nYNY\\nYNY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nYNY\\nYNY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nYNY\\nYNY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nYNY\\nYNY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nYNY\\nYNY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY\\nNYY"
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Output {solution(input())} should be equal to {output}\""
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n3\nYYY\nNYY\nYNY\n''') == '2\\n1 2 3\\n3 1 2\\n'"
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '2\\n1 2 3\\n3 1 2'\n"
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\nYYY\\nNYY\\nYNY') == '2\\n1 2 3\\n3 1 2'\nassert solution('1\\nY\\nY\\nY') == '1\\n1'\nassert solution('1\\nN\\nN\\nN') == '1\\n1'\nassert solution('1\\nY\\nN\\nN') == '1\\n1'\nassert solution('1\\nN\\nY\\nN') == '1\\n1'\nassert solution('1\\nN\\nN\\nY') == '1\\n1'\nassert solution('1\\nN\\nN\\nN') == '1\\n1'"
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"4\\n0\\n5\""
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\nx..\\n...\\n...\\n3\\n1 3\\n1 1\\n3 2\") == [\"4\\n0\\n5\\n\"]"
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\nx..\\n...\\n...\\n3\\n1 3\\n1 1\\n3 2\") == \"4\\n0\\n5\\n\""
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\nx..\\n...\\n...\\n3\\n1 3\\n1 1\\n3 2\\n\") == \"4\\n0\\n5\\n\"\n\nassert solution(\"3 3\\nx.x\\n....\\n....\\n3\\n1 3\\n1 1\\n3 2\\n\") == \"4\\n0\\n5\\n\"\n\nassert solution(\"3 3\\nx..x\\n....\\n....\\n3\\n1 3\\n1 1\\n3 2\\n\") == \"4\\n0\\n5\\n\"\n\nassert solution(\"3 3\\nx..x\\n....\\n....\\n3\\n1 3\\n1 1\\n3 2\\n\") == \"4\\n0\\n5\\n\"\n\nassert solution(\"3 3\\nx..x\\n....\\n....\\n3\\n1 3\\n1 1\\n3 2\\n\") == \"4\\n0\\n5\\n\""
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"Output: 4\\n0\\n5\""
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\nx..\\n...\\n...\\n3\\n1 3\\n1 1\\n3 2\") == \"4\\n0\\n5\""
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\nx..\\n...\\n...\\n3\\n1 3\\n1 1\\n3 2\") == \"4\\n0\\n5\\n\"\nassert solution(\"5 1\\n.x\\n....\\n.xx\\n...x\\n.xx\\n..xx\") == \"3\\n5\\n7\\n\"\nassert solution(\"2 5\\n....\\n....\\n...x\\n...x\\n...x\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\n....\\"
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"4\\n0\\n5\""
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input) == output, \"Your solution is incorrect. Please check the provided code and provide the correct solution.\""
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\nx..\\n...\\n...\\n3\\n1 3\\n1 1\\n3 2\") == \"4\\n0\\n5\""
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n5\\n3\\n4\\n5 3\") == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\""
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\"\nassert solution() == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\"\nassert solution() == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\"\nassert solution() == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\"\nassert solution() == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\"\nassert solution() == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\"\nassert solution() == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\"\nassert solution() == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\"\nassert solution() == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\"\nassert solution() == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\"\nassert solution() == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\"\nassert solution() == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\"\nassert solution() == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\"\nassert solution() == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\"\nassert solution() == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\"\nassert solution() == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\"\nassert solution() == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\"\nassert solution() == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\"\nassert solution() == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\"\nassert solution() == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\"\nassert solution() == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\"\nassert solution() == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\"\nassert solution() == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\"\nassert solution() == \"4.114 -2.8"
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\""
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n5\\n3\\n4\\n5 3\") == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\\n\"\nassert solution(\"4\\n5\\n5 4\\n6 2\\n1 2 3 4\") == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\\n\"\nassert solution(\"2\\n4\\n-1\\n-1\\n1 2\\n2 3\\n\") == \"1.250 -1.250\\n3.500 -1.250\\n-1.250 3.500\\n\""
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\", \"Your code is incorrect.\""
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt').read()) == expected\n"
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n5\\n3\\n4\\n5 3\") == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\\n\"\nassert solution(\"10\\n10\\n-10 -10\") == \"0.000 -0.000\\n50.000 50.000\\n0.000 0.000\\n\"\nassert solution(\"2\\n2\\n-2 -2\") == \"1.000 1.000\\n0.000 0.000\\n\"\nassert solution(\"3\\n2\\n1 0\\n3 0\") == \"3.000 -0.500\\n1.000 2.000\\n0.000 1.000\\n\"\nassert solution(\"3\\n5\\n1 2\\n3 2\\n4 1\") == \"4.077 -1.008\\n3.779 2.117\\n1.000 2.000\\n0.000 1.000\\n\"\nassert solution(\"5\\n3\\n-1 -1\\n2 3\\n2 -1\") == \"5.000 0.000\\n1.414 0.000\\n1.414 0.000\\n0.000 0.000\\n\"\nassert solution(\"4\\n4\\n1 1\\n2 2\\n3 3\") == \"1.000 -0.500\\n0.500 1.000\\n0.500 1.000\\n0.000 1.000\\n\"\nassert solution(\"5\\n3\\n-1 -1\\n2 3\\n2 -1\") == \"5.000 0.000\\n1.414 0.000\\n1.414 0.000\\n0.000 0.000\\n\"\nassert solution(\"5\\n4\\n-1 -1\\n2 2\\n3 3\\n4 4\") == \"5.000 0.000\\n1.818 0.000\\n1.818 0.000\\n0.000 0.000\\n\""
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n5\\n3\\n4\\n5 3\") == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\"\nassert solution(\"5\\n10\\n15\\n20\") == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\"\nassert solution(\"5\\n10\\n15\\n20\") == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\""
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"\"\"\n4.114 -2.842\n6.297 -0.784\n5.000 3.000\n\"\"\"\n"
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\") == \"3\\n5\\n8\\n10\\n13\""
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\\n') == '3\\n5\\n8\\n10\\n13\\n'"
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\") == \"3\\n5\\n8\\n10\\n13\\n\"\nassert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\") == \"3\\n5\\n8\\n10\\n13\\n\""
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8') == '3\\n5\\n8\\n10\\n13'\n"
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\") == \"3\\n5\\n8\\n10\\n13\"\nassert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\") == \"3\\n5\\n8\\n10\\n13\""
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"\"\"3\n5\n8\n10\n13\"\"\""
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_data) == expected_output, f\"Test failed: {solution(input_data)}!= {expected_output}\"\n"
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\") == \"3\\n5\\n8\\n10\\n13\""
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"3\\n5\\n8\\n10\\n13\""
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 \") == 0, \"Expected output: 0\\nActual output: \" + str(solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 \"))"
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\") == \"0\\n\"\nassert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 6\") == \"0\\n\"\nassert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 6\") == \"0\\n\"\nassert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 6\") == \"0\\n\"\nassert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 6\") == \"0\\n\"\nassert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 6\") == \"0\\n\"\nassert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 6\") == \"0\\n\"\nassert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 6\") == \"0\\n\""
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 ') == 0\nassert solution('5 4\\n0 1\\n0 2\\n0 3\\n1 4\\n1 3\\n1 2\\n1 5') == 5\nassert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 ') == 0\nassert solution('5 4\\n0 1\\n0 2\\n0 3\\n1 4\\n1 3\\n1 2\\n1 5') == 5\nassert solution('5 4\\n0 1\\n0 2\\n0 3\\n1 4\\n1 3\\n1 2\\n1 5') == 5"
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n    6 3\n    0 1\n    1 2\n    2 3\n    2 4\n    1 5\n    1 2 5\n    5\n    ''') == '0'\n\nassert solution('''\n    6 3\n    0 1\n    1 2\n    2 3\n    2 4\n    1 5\n    1 2 5\n    6\n    ''') == '3'\n\nassert solution('''\n    6 3\n    0 1\n    1 2\n    2 3\n    2 4\n    1 5\n    1 2 5\n    7\n    ''') == '2'\n\nassert solution('''\n    6 3\n    0 1\n    1 2\n    2 3\n    2 4\n    1 5\n    1 2 5\n    8\n    ''') == '1'\n\nassert solution('''\n    6 3\n    0 1\n    1 2\n    2 3\n    2 4\n    1 5\n    1 2 5\n    9\n    ''') == '0'"
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 0\n"
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 \") == \"0\"\nassert solution(\"6 3\\n1 0\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 \") == \"2\""
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 ') == 0\nassert solution('7 6\\n0 1\\n1 2\\n2 3\\n2 4\\n3 4\\n4 5\\n5 6\\n1 2 6 7 8 9 ') == 5\nassert solution('8 8\\n0 1\\n1 2\\n2 3\\n2 4\\n3 4\\n4 5\\n5 6\\n6 7\\n1 2 6 7 8 9\\n8 9\\n9 10\\n1 2 6 7 8 9\\n9 10 11\\n1 2 6 7 8 9\\n10 11 12\\n1 2 6 7 8 9\\n11 12 13\\n1 2 6 7 8 9\\n12 13 14\\n1 2 6 7 8 9\\n13 14 15\\n1 2 6 7 8 9\\n14 15 16\\n1 2 6 7 8 9\\n15 16 17\\n1 2 6 7 8 9\\n16 17 18\\n1 2 6 7 8 9\\n17 18 19\\n1 2 6 7 8 9\\n18 19 20\\n1 2 6 7 8 9\\n19 20 21\\n1 2 6 7 8 9\\n20 21 22\\n1 2 6 7 8 9\\n21 22 23\\n1 2 6 7 8 9\\n22 23 24\\n1 2 6 7 8 9\\n23 24 25\\n1 2 6 7 8 9\\n24 25 26\\n1 2 6 7 8 9\\n25 26 27\\n1 2 6 7 8 9\\n26 27 28\\n1 2 6 7 8 9\\n27 28 29\\n1 2 6 7 8 9\\n28 29 30\\n1 2 6 7 8 9\\n29 30 31\\n1 2 6 7 8 9\\n30 31 32\\n1 2 6 7 8 9\\n31 32 33\\n1 2 6 7 8 9\\n32 33 34\\n1 2 6 7 8 9\\n33 34 35\\n1 2 6 7 8 9\\n34 35 36\\n1 2 6 7 8 9\\n35 36 37\\n1 2 6 7 8 9\\n36 37 38\\n1 2 6 7 8 9\\n37 38 39\\n1 2 6 7 8 9\\n38 39 40\\n1 2 6 7 8 9\\n39 40 41\\n1 2 6 7 8 9\\n40 41 42\\n1 2 6 7 8 9\\n41 42 43\\n1 2 6 7 8 9\\n42 43 44\\n1 2 6 7 8 9\\n43 44 45\\n1 2 6 7 8 9\\n44 45 46\\n1 2 6 7 8 9\\n45 46 47\\n1 "
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 ') == '0\\n'\nassert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 ') == '2\\n'\nassert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 ') == '0\\n'\nassert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 ') == '1\\n'\nassert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 ') == '1\\n'\nassert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 ') == '2\\n'\nassert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 ') == '0\\n'\nassert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 ') == '2\\n'\nassert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 ') == '0\\n'"
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5') == '0'\nassert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5') == '0'\nassert solution('5 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5') == '3'\nassert solution('6 4\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5') == '4'\nassert solution('5 4\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5') == '3'\n"
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"6 3\n0 1\n1 2\n2 3\n2 4\n1 5\n1 2 5\"\"\") == 0\n\nassert solution(\"\"\"10 5\n0 1\n1 2\n2 3\n3 4\n4 5\n5 0\n5 1\n5 2\n5 3\n5 4\n0 5\"\"\") == 1\n\nassert solution(\"\"\"10 10\n0 1\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 0\n9 1\n9 2\n9 3\n9 4\n0 9\"\"\") == 1"
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1\\n\") == \"106\\n107\\n71\""
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input()) == expected_output(), f\"Expected {expected_output()}, got {solution(sample_input())}\""
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 1\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1') == '106\\n107\\n71'\n"
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1\") == \"106\\n107\\n71\""
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == [106, 107, 71]"
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1\") == \"106\\n107\\n71\"\n"
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input) == output, f\"The output is {output}, but the code provided is {solution(input)}\"\n"
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 1\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1\\n') == '106\\n107\\n71\\n'"
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1\") == \"106\\n107\\n71\""
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1') == '106\\n107\\n71'"
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == sample_output, f\"Expected {sample_output}, got {solution(sample_input)}\""
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\nAA\\n\") == 51\n"
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(2, \"AA\") == 51\n"
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\nAA\\n') == '51'"
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"51\""
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\nA\") == 51"
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\nA\") == \"51\""
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2\\nAA\\n') == 51"
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"51\""
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"51\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution"
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\") == \"1 2\\n\""
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == 'no ties', \"Expected 'no ties' output, got '{}'.\".format(solution(input()))"
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(['3 29 45 56 68', '1 19 43 50 72', '11 25 40 49 61', '9 23 31 58 63', '4 27 42 54 71', '14 23 39 59 63', '8 17 35 55 61', '15 26 42 53 71', '10 25 31 57 64', '6 20 44 52 68']) == '1 2'"
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution([3, 29, 45, 56, 68, 1, 19, 43, 50, 72, 11, 25, 40, 49, 61, 9, 23, 31, 58, 63, 4, 27, 42, 54, 71]) == 'no ties'\nassert solution([14, 23, 39, 59, 63, 8, 17, 35, 55, 61, 15, 26, 42, 53, 71, 10, 25, 31, 57, 64, 6, 20, 44, 52, 68]) == '1 2'"
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68') == '1 2\\n'\n\nassert solution('2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n') == '1 2\\n'\n\nassert solution('2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n') == '1 2\\n'\n\nassert solution('2\\n3 29 45 56 68\\n1 19 43 "
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n\") == \"1 2\"\nassert solution(\"2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n\") == \"no ties\"\nassert solution(\"2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n\") == \"1 2\"\nassert solution(\"2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\"
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68') == 'no ties\\n1 2'\nassert solution('3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n29 45 56 68\\n29 45 56 68\\n29 45 56 68') == '1 2'\nassert solution('3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n29 45 56 68\\n29 45 56 68\\n29 45 56 68') == '2 1'\nassert solution('3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n29 45 56 68\\n29 45 56 68\\n29 45 56 68\\n29 45 56 68\\n29 45 56 68\\n29 45 56 68\\n29 45 56 68\\n29 45 56 68\\n29 45 56 68\\n29 45 56 68\\n29 45 56 68\\n29 45 56 68\\n29 45 56 68\\n29 45 56 68\\n29 45 56 68\\n29 45 56 68\\n29 45 56 68\\n29 45 56 68\\n29 45 56 68\\n29 45 56 68\\n29 45 56 68\\n29 45 56 68\\n29 45 56 68"
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\nr\"\"\"\n2\n3 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71\n\"\"\") == \"1 2\"\n\nassert solution(\nr\"\"\"\n3\n1 19 43 50 72\n2 25 40 49 61\n3 23 31 58 63\n4 27 42 54 71\n\"\"\") == \"1 2\"\n\nassert solution(\nr\"\"\"\n2\n3 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71\n5 25 31 57 64\n\"\"\") == \"5 6\"\n\nassert solution(\nr\"\"\"\n3\n1 19 43 50 72\n2 25 40 49 61\n3 23 31 58 63\n4 27 42 54 71\n5 25 31 57 64\n\"\"\") == \"5 6\"\n\nassert solution(\nr\"\"\"\n2\n3 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71\n\"\"\") == \"no ties\"\n\nassert solution(\nr\"\"\"\n2\n3 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71\n\"\"\") == \"5 6\"\n\nassert solution(\nr\"\"\"\n3\n1 19 43 50 72\n2 25 40 49 61\n3 23 31 58 63\n4 27 42 54 71\n5 25 31 57 64\n\"\"\") == \"no ties\"\n\nassert solution(\nr\"\"\"\n3\n1 19 43 50 72\n2 25 40 49 61\n3 23 31 58 63\n4 27 42 54 71\n\"\"\") == \"5 6\"\n\nassert solution(\nr\"\"\"\n3\n1 19 43 50 72\n2 25 40 49 61\n3 23 31 58 63\n4 27 42 54 71\n\"\"\") == \"no ties\""
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n\") == \"1 2\\n\"\nassert solution(\"2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n\") == \"1 2\\n\"\nassert solution(\"2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n\") == \"1 2\\n\"\nassert solution(\"2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n\") == \"no ties\\n\"\nassert solution(\"2\\n3 29 45 56 68\\n1 19 43 50 "
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n3 2 1\\n1 2 3\\n1 2 3') == 0, \"Jane, John, and Tina should be placed their bets, but the race will not start until an hour from now, so they are getting bored. They started wondering how many pairs of camels they have put in the same order. If camel $c$ is before camel $d$ on Jaap\u2019s, Jan\u2019s and Thijs\u2019 bet, it means that all three of them put $c$ and $d$ in the same order. Can you help them to calculate the number of pairs of camels for which this happened?\""
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"0\\n\", \"The correct output is 0, but it is not.\""
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n3 2 1\\n1 2 3\\n1 2 3\") == \"0\\n\"\nassert solution(\"3\\n3 2 1\\n1 2 3\\n1 1 2\") == \"def solution(stdin: str) -> str:\\n\\tpass\\n\\n\"\nassert solution(\"2\\n1 2\\n2 1\\n1 2\") == \"def solution(stdin: str) -> str:\\n\\tpass\\n\\n\""
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n3 2 1\\n1 2 3\\n1 2 3\") == \"0\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\") == \"5\\n\"\n"
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 0, \"The solution is incorrect.\""
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n3 2 1\\n1 2 3\\n1 2 3\") == 0\nassert solution(\"4\\n1 2 3\\n1 2 3\\n1 2 3\") == 2\nassert solution(\"5\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\") == 2\nassert solution(\"6\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\") == 2\nassert solution(\"7\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\") == 0"
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n3 2 1\\n1 2 3\\n1 2 3\\n\") == \"0\\n\"\nassert solution(\"10\\n5 4 3\\n2 6 1\\n7 1 8\\n\") == \"6\\n\"\nassert solution(\"3\\n3 2 1\\n1 2 3\\n1 2 3\\n\") == \"0\\n\""
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n3 2 1\\n1 2 3\\n1 2 3') == '0\\n'\n\nassert solution('10\\n1 2 3\\n1 2 3\\n4 5 6\\n1 2 3') == '2\\n'\n\nassert solution('7\\n2 1 4\\n3 2 5\\n1 2 3\\n2 3 4') == '6\\n'"
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n3 2 1\\n1 2 3\\n1 2 3') == 0"
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3 2 1\\n1 2 3\\n1 2 3\") == 0\n\nassert solution(\"3\\n3 2 1\\n1 2 3\\n1 2 3\\n\") == 0\n\nassert solution(\"3\\n3 2 1\\n1 2 3\\n1 2 3\\n1 2 3\\n\") == 3"
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"4\\n1 2 3\\n6 2 3\\n10 2 3\\n16 3 4\") == \"0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n1 2 3\\n6 2 3\\n10 2 3\\n16 3 4') == '0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571'\n\nprint(solution('4'))  # Output: '0.4'\nprint(solution('10'))  # Output: '0'\nprint(solution('16'))  # Output: '0.2'\nprint(solution('6'))  # Output: '0.171428571429'\nprint(solution('4\\n1 2 3\\n6 2 3\\n10 2 3\\n16 3 4'))  # Output: '0.4'\nprint(solution('10\\n1 2 3\\n6 2 3\\n10 2 3\\n16 3 4'))  # Output: '0'\nprint(solution('16\\n1 2 3\\n6 2 3\\n10 2 3\\n16 3 4'))  # Output: '0.2'\nprint(solution('6\\n1 2 3\\n6 2 3\\n10 2 3\\n16 3 4'))  # Output: '0.171428571429'"
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n1 2 3\\n6 2 3\\n10 2 3\\n16 3 4') == '0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571\\n'"
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == output, \"Expected:\\n{}\\nGot:\\n{}\".format(output, solution(stdin))"
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 2 3\\n6 2 3\\n10 2 3\\n16 3 4\") == \"0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571\"\n"
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected, f\"Solution is incorrect. Expected: {expected}, got: {solution(stdin)}\""
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('solution.txt', 'r').read()) == '0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571\\n'"
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571'\n"
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571\""
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571\\n', 'Test case 1 failed'"
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n1 5\\n3 3\\n4 5\\n-1 -6') == '1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5'\nassert solution('10\\n2 3\\n4 5\\n-1 -7\\n-2 -3\\n-3 -4\\n-4 -5\\n-5 -6\\n-6 -7\\n-7 -8\\n-8 -9\\n-9 -10') == 'impossible'"
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 -6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\\nimpossible\"\nassert solution(\"5\\n1 2\\n2 3\\n3 4\\n4 5\\n6 7\\n8 9\") == \"impossible\"\nassert solution(\"10\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\") == \"impossible\"\nassert solution(\"10\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\") == \"impossible\""
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(str(input())) == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\"\n"
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    4\n    1 5\n    3 3\n    4 5\n    -1 -6\n    \"\"\"\n) == \"\"\"\n1 + 5 = 6\n3 * 3 = 9\n4 - 5 = -1\n-1 - -6 = 5\n\"\"\"\n\nassert solution(\n    \"\"\"\n    1\n    5\n    \"\"\"\n) == \"\"\"\nimpossible\n\"\"\"\n\nassert solution(\n    \"\"\"\n    2\n    -2\n    10\n    5\n    \"\"\"\n) == \"\"\"\nimpossible\n\"\"\"\n\nassert solution(\n    \"\"\"\n    3\n    5\n    2\n    \"\"\"\n) == \"\"\"\nimpossible\n\"\"\""
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 5\\n3 3\\n4 5\\n-1 -6\\n') == '''\n1 + 5 = 6\n3 * 3 = 9\n4 - 5 = -1\n-1 - -6 = 5\n'''\n\nassert solution('4 5\\n3 3\\n1 5\\n-1 -6\\n') == '''\n1 + 5 = 6\n3 * 3 = 9\n1 * 5 = 15\n-1 - -6 = 5\n'''\n\nassert solution('3 3\\n4 5\\n1 5\\n-1 -6\\n') == '''\n1 + 5 = 6\n3 * 3 = 9\n1 * 5 = 15\n-1 - -6 = 5\n'''"
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 5\\n3 3\\n4 5\\n-1 -6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\""
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 -6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\"\nassert solution(\"5\\n1 1\\n2 3\\n4 6\\n-2 -8\") == \"impossible\"\nassert solution(\"1\\n2 3\\n4 5\\n-6 7\\n8 9\") == \"1 * 2 = 2\\n2 * 4 = 8\\n3 * 5 = 10\\n4 * -6 = -30\\n5 * 7 = 14\\n6 * 8 = 20\\n7 * 9 = 25\\n8 * 10 = 30\\n9 * -8 = -60\"\nassert solution(\"1\\n2 3\\n4 5\\n-6 7\\n8 9\\n10 11\") == \"1 * 2 = 2\\n2 * 4 = 8\\n3 * 5 = 10\\n4 * -6 = -30\\n5 * 7 = 14\\n6 * 8 = 20\\n7 * 9 = 25\\n8 * 10 = 30\\n9 * -8 = -60\\n10 * 11 = 40\""
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n4\n1 5\n3 3\n4 5\n-1 -6\n''') == '''\n1 + 5 = 6\n3 * 3 = 9\n4 - 5 = -1\n-1 - -6 = 5\nimpossible\n'''\n\nassert solution('''\n5\n3 4\n1 2\n2 3\n-1 -2\n''') == '''\n1 + 4 = 7\n3 * 1 = 3\n2 - 3 = -2\n-1 - -2 = 4\nimpossible\n'''\n\nassert solution('''\n1\n2\n3\n4\n5\n-6\n''') == '''\n1 + 2 = 3\n1 + 3 = 4\n1 + 4 = 5\n1 + 5 = 6\nimpossible\n'''\n\nassert solution('''\n5\n5 5\n3 3\n2 2\n1 1\n-5 -5\n''') == '''\n3 + 5 = 8\n3 * 3 = 12\n2 - 3 = -2\n2 * 2 = 4\n1 - 2 = -1\n1 * 1 = 1\n-5 * -5 = 25\nimpossible\n'''\n\nassert solution('''\n5\n2 1\n3 4\n4 5\n-1 -2\n''') == '''\n1 + 4 = 7\n2 * 3 = 8\n4 - 5 = -1\n-1 - -2 = 5\nimpossible\n'''\n\nassert solution('''\n1\n1\n1\n1\n1\n-2\n''') == '''\n1 + 1 = 2\n1 + 1 = 2\n1 + 1 = 2\n1 + 1 = 2\n1 + 1 = 2\nimpossible\n'''\n\nassert solution('''\n5\n2 1\n1 1\n-1 -1\n-1 -1\n''') == '''\n1 + 1 = 2\n1 * 1 = 1\n-1 - -1 = 2\n-1 - -1 = 2\n-1 - -1 = 2\nimpossible\n'''"
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n4\n1 5\n3 3\n4 5\n-1 -6\n''') == '''\n1 + 5 = 6\n3 * 3 = 9\n4 - 5 = -1\n-1 - -6 = 5\nimpossible\n'''\n\nassert solution('''\n4\n1 5\n3 3\n4 5\n-1 -6\n''') == '''\n1 + 5 = 6\n3 * 3 = 9\n4 - 5 = -1\n-1 - -6 = 5\nimpossible\n'''"
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    4\n    1 5\n    3 3\n    4 5\n    -1 -6\n    \"\"\"\n) == \"\"\"\n    1 + 5 = 6\n    3 * 3 = 9\n    4 - 5 = -1\n    -1 - -6 = 5\n    \"\"\"\n)\n\nassert solution(\n    \"\"\"\n    4\n    3 5\n    1 2\n    3 4\n    \"\"\"\n) == \"\"\"\n    3 + 5 = 8\n    1 * 2 = 2\n    3 * 4 = 8\n    \"\"\"\n)\n\nassert solution(\n    \"\"\"\n    4\n    1 5\n    3 3\n    4 5\n    -1 -6\n    1 -5\n    \"\"\"\n) == \"\"\"\n    1 + 5 = 6\n    3 * 3 = 9\n    4 - 5 = -1\n    -1 - -6 = 5\n    \"\"\"\n)\n\nassert solution(\n    \"\"\"\n    4\n    1 5\n    3 3\n    4 5\n    -1 -6\n    1 2\n    \"\"\"\n) == \"\"\"\n    1 + 5 = 6\n    3 * 3 = 9\n    4 - 5 = -1\n    -1 - -6 = 5\n    \"\"\"\n)\n\nassert solution(\n    \"\"\"\n    4\n    1 5\n    3 3\n    4 5\n    -1 -6\n    2 -1\n    \"\"\"\n) == \"\"\"\n    2 + 5 = 10\n    3 * 3 = 9\n    4 - 5 = -1\n    -1 - -6 = 5\n    \"\"\"\n)\n\nassert solution(\n    \"\"\"\n    5\n    1 5\n    3 3\n    4 5\n    -1 -6\n    1 2\n    \"\"\"\n) == \"\"\"\n    1 + 5 = 6\n    3 * 3 = 9\n    4 - 5 = -1\n    -1 - -6 = 5\n    1 + 5 = 6\n    3 * 3 = 9\n    4 - 5 = -1\n    -1 - -6 = 5\n    \"\"\"\n)\n\nassert solution(\n    \"\"\"\n    5\n    1 5\n    3 3\n    4 5\n    -1 -6\n    2 1\n    \"\"\"\n) == \"\"\"\n    1 + 5 = 6\n    3 * 3 = 9\n    4 - 5 = -1\n    -1 - -6 = 5\n    2 + 1 = 2\n    3 * 3 = 9\n    4 - 5 = -1\n    -1 - -6 = 5\n    \"\"\"\n)\n\nassert solution(\n    \"\"\"\n    5\n    1 5\n    3 3\n    4 5\n    -1 -6\n    2 -2\n    \"\"\"\n) == \"\"\"\n    1 + 5 = 6\n    3 * 3 = 9\n    4 - 5 = -1\n    -1 - -6 = 5\n    2 + 2 = 4\n    3 * 3 = 9\n    4 - 5 = -1\n    -1 - -6 = 5\n    \"\"\"\n)\n\nassert solution(\n    \"\"\"\n    5\n    1 5\n    3 3\n    4 5\n    -1 -6\n    3 -1\n    \"\"\"\n) == \"\"\"\n    1 + 5 = 6\n    3 * 3 = 9\n    4 - 5 = -1\n    -1 - -6 = 5\n    3 + 1 = 4\n    3 * 3 = 9\n    4 - 5 = -1\n    -1 - -6 = 5\n    \"\"\"\n)"
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1\") == \"4\\n1\\n4\\n6\\n0\"\nassert solution(\"1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1"
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1\") == \"4\\n1\\n4\\n6\\n0\""
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1') == '4\\n1\\n4\\n6\\n0'"
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1\\n\") == \"4\\n1\\n4\\n6\\n0\\n\""
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Test failed: \\nExpected: {output}\\nGot: {solution(input())}\""
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1\\n\") == \"4\\n1\\n4\\n6\\n0\"\nassert solution(\"5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1\\n\") == \"4\\n1\\n4\\n6\\n0\"\nassert solution(\"5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1\\n\") == \"4\\n1\\n4\\n6\\n0\"\nassert solution(\"5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1\\n\") == \"4\\n1\\n4\\n6\\n0\"\nassert solution(\"5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1\\n\") == \"4\\n1\\n4\\n6\\n0\"\nassert solution(\"5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1\\n\") == \"4\\n1\\n4\\n6\\n0\""
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"4\\n1\\n4\\n6\\n0\""
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '4\\n1\\n4\\n6\\n0\\n', \"Testcase 1 Failed\"\n\nassert solution(stdin) == '4\\n1\\n4\\n6\\n0\\n', \"Testcase 2 Failed\"\n\nassert solution(stdin) == '4\\n1\\n4\\n6\\n0\\n', \"Testcase 3 Failed\"\n\nassert solution(stdin) == '4\\n1\\n4\\n6\\n0\\n', \"Testcase 4 Failed\"\n\nassert solution(stdin) == '4\\n1\\n4\\n6\\n0\\n', \"Testcase 5 Failed\"\n\nassert solution(stdin) == '4\\n1\\n4\\n6\\n0\\n', \"Testcase 6 Failed\""
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1\\n') == '4\\n1\\n4\\n6\\n0'"
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1\") == \"4\\n1\\n4\\n6\\n0\""
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 4"
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Expected: {output}, Actual: {solution(input())}\""
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 2 3 4\") == \"4\\n\", \"Test case 1 failed\"\nassert solution(\"5\\n1 2 3 4 5\") == \"5\\n\", \"Test case 2 failed\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9\") == \"10\\n\", \"Test case 3 failed\"\nassert solution(\"100000\\n100000\") == \"100000\\n\", \"Test case 4 failed\"\nassert solution(\"100001\\n100000\") == \"100000\\n\", \"Test case 5 failed\"\nassert solution(\"50000\\n100000\") == \"100000\\n\", \"Test case 6 failed\""
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 2 3 4') == '4' # should return 4"
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3 4\") == \"4\"\nassert solution(\"1 2 3 5\") == \"5\"\nassert solution(\"1 2 3 6\") == \"6\"\nassert solution(\"1 2 3 7\") == \"7\"\nassert solution(\"1 2 3 8\") == \"8\""
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n4\n1 2 3 4\n\"\"\"\n) == \"4\\n\""
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == sample_output, f\"The function should return '{sample_output}', but it returned '{solution(sample_input)}'.\""
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"The given solution is incorrect. The output is {output}, and the expected output is {assert_output}.\""
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 2 3 4\") == 4\n"
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"4\"\n"
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\""
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n1 31 2\n20 60\n50 90\n''') == '4 3'"
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 31 2\\n20 60\\n50 90') == '4 3'\n"
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 31 2\\n20 60\\n50 90\\n\") == \"4 3\"\nassert solution(\"1 31 2\\n20 60\\n50 90\\n50 100\\n50 110\\n\") == \"4 2\""
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, \"The provided input and output are not matching.\""
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == expected_output, f\"Test case failed: {sample_input} => {expected_output}\"\n\nfrom typing import List"
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\""
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 'Output\\n4 3'\n"
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 31 2\\n20 60\\n50 90') == '4 3'\n"
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2 1\") == \"3\"\n\nassert solution(\"3 3 2\") == \"6\"\n\nassert solution(\"1 1 1\") == \"0\""
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2 1\") == \"3\"\n"
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2 1\") == \"3\\n\"\nassert solution(\"10 5 3\") == \"6\\n\""
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(2, 2, 1) == 3\nassert solution(2, 4, 1) == 6\nassert solution(3, 2, 1) == 1\nassert solution(3, 3, 1) == 0\nassert solution(3, 4, 1) == 1\nassert solution(4, 2, 1) == 3\nassert solution(4, 3, 1) == 4\nassert solution(4, 4, 1) == 4\nassert solution(5, 2, 1) == 1\nassert solution(5, 3, 1) == 4\nassert solution(5, 4, 1) == 1"
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2 1\") == \"3\""
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin: \"2 2 1\\n\") == \"3\"\nassert solution(stdin: \"4 4 1\\n\") == \"6\""
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 1\") == \"3\"\nassert solution(\"2"
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"3\\n\""
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(2 2 1) == 3"
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 2\") == \"6\""
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n5\n1341 2412 1200 3112 2391\n''') == '3 1'"
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1341 2412 1200 3112 2391\") == \"3 1\"\nassert solution(\"5\\n1341 2412 1200 3112 2391\\n1341 2412 1200 3112 2391\") == \"2 1\"\nassert solution(\"5\\n1341 2412 1200 3112 2391\\n1341 2412 1200 3112 2391\\n1341 2412 1200 3112 2391\\n1341 2412 1200 3112 2391\") == \"3 1\""
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"3 1\\n\""
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n1341 2412 1200 3112 2391') == '3 1'\nassert solution('3\\n1 2 3\\n3 4 5') == '2 0'\nassert solution('2\\n1 2 3\\n4 5 6\\n7 8 9') == '2 4'\nassert solution('3\\n1 2 3\\n1 1 1\\n2 2 2') == '3 1'"
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input) == output, f\"Input:\\n{input}\\nOutput:\\n{output}\" for input, output in zip(test_cases, expected_output)"
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1341 2412 1200 3112 2391\") == \"3 1\"\nassert solution(\"5\\n1341 2412 1200 3112 2391\\n4231 1341 2412 1200 3112 2391\") == \"2 2\"\nassert solution(\"5\\n1341 2412 1200 3112 2391\\n4231 1341 2412 1200 3112 2391\\n1111 1341 2412 1200 3112 2391\\n3333 1341 2412 1200 3112 2391\") == \"1 1\""
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == '''\n"
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1341 2412 1200 3112 2391\") == \"3 1\""
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5, [1341, 2412, 1200, 3112, 2391]) == \"3 1\\n\"\nassert solution(5, [1341, 2412, 1200, 3112, 2391, 4567, 6789]) == \"3 1\\n\"\nassert solution(5, [1341, 2412, 1200, 3112, 2391, 4567, 6789, 9012]) == \"3 0\\n\"\nassert solution(5, [1341, 2412, 1200, 3112, 2391, 4567, 6789, 9012, 11345]) == \"3 3\\n\""
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1341 2412 1200 3112 2391\") == \"3 1\"\nassert solution(\"4567 3421 2345 1234 5678\") == \"2 3\"\nassert solution(\"7890 9876 8765 7654 6543\") == \"2 4\"\nassert solution(\"12345 67890 54321 43210 32100\") == \"3 4\"\nassert solution(\"90123 87654 76543 65432 54321\") == \"4 2\""
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == 6\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == 6\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == 6\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == 6\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == 6\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == 6\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == 6\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == 6\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == 6\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == 6\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == 6\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == 6\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == 6\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == 6\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == 6\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == 6\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == 6\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == 6\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == 6\nassert solution(\"10 20\\n3 5\\n1 3 "
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"6\"\n"
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n') == 6\nassert solution('5 20\\n2 5 2\\n3 1 1\\n3 2 1\\n3 3 1\\n4 3 1\\n') == 11\nassert solution('10 20\\n1 20 3\\n2 2 1\\n3 2 1\\n') == 16\nassert solution('10 20\\n1 20 3\\n2 2 1\\n3 2 1\\n4 2 1\\n5 2 1\\n6 2 1\\n') == 23\nassert solution('5 20\\n2 5 2\\n3 1 1\\n3 2 1\\n3 3 1\\n4 3 1\\n5 3 1\\n6 3 1\\n7 3 1\\n8 3 1\\n9 3 1\\n10 3 1\\n11 3 1\\n12 3 1\\n13 3 1\\n14 3 1\\n15 3 1\\n16 3 1\\n17 3 1\\n18 3 1\\n19 3 1\\n20 3 1\\n') == 36\nassert solution('5 20\\n2 5 2\\n3 1 1\\n3 2 1\\n3 3 1\\n4 3 1\\n5 3 1\\n6 3 1\\n7 3 1\\n8 3 1\\n9 3 1\\n10 3 1\\n11 3 1\\n12 3 1\\n13 3 1\\n14 3 1\\n15 3 1\\n16 3 1\\n17 3 1\\n18 3 1\\n19 3 1\\n20 3 1\\n21 3 1\\n') == 55\nassert solution('5 20\\n2 5 2\\n3 1 1\\n3 2 1\\n3 3 1\\n4 3 1\\n5 3 1\\n6 3 1\\n7 3 1\\n8 3 1\\n9 3 1\\n10 3 1\\n11 3 1\\n12 3 1\\n13 3 1\\n14 3 1\\n15 3 1\\n16 3 1\\n17 3 1\\n18 3 1\\n19 3 1\\n20 3 1\\n21 3 1\\n22 3 1\\n23 3 1\\n24 3 1\\n25 3 1\\n26 3 1\\n27 3 1\\n28 3 1\\n29 3 1\\n30 3 1\\n31 3 1\\n32 3 1\\n33 3 1\\n34 3 1\\n35 3 1\\n36 3 1\\n37 3 1\\n38 3 1\\n39 3 1\\n40 3 1\\n41 3 1\\n42 3 1\\n43 3 1\\n44 3 1\\n45 3 1\\n46 3 1\\n47 3 1\\n48 3 1\\n49 3 1\\n50 3 1\\n51 3 1\\n52 3 1\\n53 3 1\\n54 3 1\\n55 3 1\\n') == 84"
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"6\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"6\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"6\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"6\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"6\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"6\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"6\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"6\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"6\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"6\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"6\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"6\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"6\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"6\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"6\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"6\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"6\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"6\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"6\"\n"
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"6\""
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4') == 6\nassert solution('10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n100 200') == 100"
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == 6"
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 6"
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n\") == \"6\\n\"\n"
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Solution does not match expected output: got '{solution(input())}', expected '{expected_output}'\""
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == solution, \"Solution is not defined.\""
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"test_input.txt\").read()) == \"0 1 \\n-1 0\"\n"
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n2 ab b\\n1 b\") == \"0 1 -1\"\nassert solution(\"2\\n2 ab c\\n1 a\") == \"0 1 -1\"\nassert solution(\"2\\n2 ab d\\n1 c\") == \"0 1 -1\"\nassert solution(\"2\\n2 ab e\\n1 b\") == \"0 1 -1\"\nassert solution(\"2\\n2 ab f\\n1 c\") == \"0 1 -1\"\nassert solution(\"2\\n2 ab g\\n1 b\") == \"0 1 -1\""
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n2 ab b\\n1 b\") == \"0 1 -1\\n\""
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''2\n2 ab b\n1 b''') == '''0 1 \n-1 0'''\n\nfrom collections import defaultdict\nfrom itertools import permutations"
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n2 ab b\\n1 b\") == \"0 1\\n-1 0\"\nassert solution(\"1\\n1 a\") == \"-1\"\nassert solution(\"2\\n2 ab c\\n1 c\") == \"1 1\\n1 0\"\nassert solution(\"2\\n2 abc\\n1 a\\n1 b\") == \"0 1\\n-1 0\""
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\n2 ab b\\n1 b') == '0 1 -1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'"
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n2 ab b\\n1 b\") == \"0 1\\n-1 0\"\nassert solution(\"3\\n1 a b c\\n2 def g h\\n3 i j\") == \"0 2 0\\n-1 0\"\nassert solution(\"1000000\\n\") == \"0 -1\""
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2\\n2 ab b\\n1 b') == '0 1 -1'"
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=sample_stdin) == sample_stdout, \"Incorrect output for sample input\""
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 4\\n1 1 2\\n2\\n1 1 2\\n2') == '1\\n3\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r').read()) == 'def solution(stdin: str) -> str:\\n\\tpass\\n\\n\\n# Test cases\\n\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n# Test cases\\n\\n"
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 4\\n1 1 2\\n2\\n1 1 2\\n2') == '1\\n3'\nassert solution('2 5\\n1 1 2\\n2\\n1 1 2\\n2') == 'Error: Invalid input'"
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 4\\n1 1 2\\n2\\n1 1 2\\n2\") == \"1\\n3\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"\nassert solution(\"1 2 3 4\\n2 3 4 5\\n6 7 8 9\") == \"2\\n5\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"\nassert solution(\"1 1 1 1\\n1 1 1 1\") == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"\nassert solution(\"2 2 1 1\\n1 1 2 3\\n1 1 3 4\") == \"1\\n4\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"\nassert solution(\"1 1 1 1\\n1 1 1 1\\n1 1 1 1\") == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 4\\n1 1 2\\n2\\n1 1 2\\n2\") == \"1\\n3\\n\"\nassert solution(\"2 4\\n1 1 2\\n2\\n1 1 2\\n2\") == \"1\\n3\\n\"\nassert solution(\"2 4\\n1 1 2\\n2\\n1 1 2\\n2\") == \"1\\n3\\n\"\nassert solution(\"2 4\\n1 1 2\\n2\\n1 1 2\\n2\") == \"1\\n3\\n\"\nassert solution(\"2 4\\n1 1 2\\n2\\n1 1 2\\n2\") == \"1\\n3\\n\"\nassert solution(\"2 4\\n1 1 2\\n2\\n1 1 2\\n2\") == \"1\\n3\\n\"\nassert solution(\"2 4\\n1 1 2\\n2\\n1 1 2\\n2\") == \"1\\n3\\n\"\nassert solution(\"2 4\\n1 1 2\\n2\\n1 1 2\\n2\") == \"1\\n3\\n\"\nassert solution(\"2 4\\n1 1 2\\n2\\n1 1 2\\n2\") == \"1\\n3\\n\""
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == sample_output, \"Expected output: {}\\nGot output: {}\".format(sample_output, solution(sample_input))"
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 4\\n1 1 2\\n2\\n1 1 2\\n2\") == \"1\\n3\\n\\n8/3\"\nassert solution(\"3 4\\n1 1 2\\n2\") == \"1\\n3\\n\\n6/4\"\nassert solution(\"5 4\\n1 1 2\\n2\") == \"1\\n3\\n\\n12/4\"\nassert solution(\"5 4\\n1 1 1\\n2\") == \"0\\n0\\n\\n0\"\n"
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 4\\n1 1 2\\n2\\n1 1 2\\n2\") == \"1\\n3\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"2 5\\n1 1 2\\n1\\n2\") == \"1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"2 10\\n1 2 3\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\") == \"2\\n20\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"2 20\\n1 3 4\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 4\\n1 1 2\\n2\\n1 1 2\\n2\") == \"1\\n3\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"example.txt\", \"r\")) == \"1\\n3\"\nassert solution(open(\"input.txt\", \"r\")) == \"1\\n3\""
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"7\""
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 5 2\\n5 0 4\\n2 4 0\") == \"7\""
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '7\\n'\n"
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 5 2\\n5 0 4\\n2 4 0\") == 7\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\") == 0\nassert solution(\"0 1 2\\n1 1 1\\n2 2 2\") == 6"
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n0 5 2\\n5 0 4\\n2 4 0\") == 7\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n0 5 2\\n5 0 4\\n2 4 0') == '7'"
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n0 5 2\\n5 0 4\\n2 4 0\") == \"7\\n7\""
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '7\\n'\nprint('success')"
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n0 5 2\\n5 0 4\\n2 4 0\") == \"7\\n7\"\nassert solution(\"4\\n1 2 3 4\\n0 0 5 0\\n0 4 1 1\") == \"10\\n10\"\nassert solution(\"10\\n100 100 100 100 100 100 100 100 100 100 100\") == \"1000\\n1000\"\n"
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"7\""
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1099511627776\") == \"8\\n\""
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1099511627776) == 8, \"Incorrect output\"\n"
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1099511627776\") == \"8\""
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1099511627776\") == \"8\\n\""
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"8\" # Your solution here"
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1099511627776') == '8'"
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1099511627776\") == 8"
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(str(1099511627776)) == '8'"
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1099511627776) == 8\n"
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1099511627776\") == 8, \"Expected output: 8, got: \" + solution(\"1099511627776\")\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\nx..\\n.x.\\nx.x\") == \"2\\ndef solution(stdin: str) -> str: return pass\""
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2\", \"Test Case 1 Failed\"\nassert solution() == \"3\", \"Test Case 2 Failed\"\nassert solution() == \"4\", \"Test Case 3 Failed\"\nassert solution() == \"5\", \"Test Case 4 Failed\"\nassert solution() == \"6\", \"Test Case 5 Failed\"\nassert solution() == \"7\", \"Test Case 6 Failed\"\nassert solution() == \"8\", \"Test Case 7 Failed\"\nassert solution() == \"9\", \"Test Case 8 Failed\"\nassert solution() == \"10\", \"Test Case 9 Failed\"\nassert solution() == \"11\", \"Test Case 10 Failed\"\nassert solution() == \"12\", \"Test Case 11 Failed\"\nassert solution() == \"13\", \"Test Case 12 Failed\"\nassert solution() == \"14\", \"Test Case 13 Failed\"\nassert solution() == \"15\", \"Test Case 14 Failed\"\nassert solution() == \"16\", \"Test Case 15 Failed\"\nassert solution() == \"17\", \"Test Case 16 Failed\"\nassert solution() == \"18\", \"Test Case 17 Failed\"\nassert solution() == \"19\", \"Test Case 18 Failed\"\nassert solution() == \"20\", \"Test Case 19 Failed\"\nassert solution() == \"21\", \"Test Case 20 Failed\"\nassert solution() == \"22\", \"Test Case 21 Failed\"\nassert solution() == \"23\", \"Test Case 22 Failed\"\nassert solution() == \"24\", \"Test Case 23 Failed\"\nassert solution() == \"25\", \"Test Case 24 Failed\"\nassert solution() == \"26\", \"Test Case 25 Failed\"\nassert solution() == \"27\", \"Test Case 26 Failed\"\nassert solution() == \"28\", \"Test Case 27 Failed\"\nassert solution() == \"29\", \"Test Case 28 Failed\"\nassert solution() == \"30\", \"Test Case 29 Failed\"\nassert solution() == \"31\", \"Test Case 30 Failed\"\nassert solution() == \"32\", \"Test Case 31 Failed\"\nassert solution() == \"33\", \"Test Case 32 Failed\"\nassert solution() == \"34\", \"Test Case 33 Failed\"\nassert solution() == \"35\", \"Test Case 34 Failed\"\nassert solution() == \"36\", \"Test Case 35 Failed\"\nassert solution() == \"37\", \"Test Case 36 Failed\"\nassert solution() == \"38\", \"Test Case 37 Failed\"\nassert solution() == \"39\", \"Test Case 38 Failed\"\nassert solution() == \"40\", \"Test Case 39 Failed\"\nassert solution() == \"41\", \"Test Case 40 Failed\"\nassert solution() == \"42\", \"Test Case 41 Failed\"\nassert solution() == \"43\", \"Test Case 42 Failed\"\nassert solution() == \"44\", \"Test Case 43 Failed\"\nassert solution() == \"45\", \"Test Case 44 Failed\"\nassert solution() == \"46\", \"Test Case 45 Failed\"\nassert solution() == \"47\", \"Test Case 46 Failed\"\nassert solution() == \"48\", \"Test Case 47 Failed\"\nassert solution() == \"49\", \"Test Case 48 Failed\"\nassert solution() == \"50\", \"Test Case 49 Failed\"\nassert solution() == \"51\", \"Test Case 50 Failed\"\nassert solution() == \"52\", \"Test Case 51 Failed\"\nassert solution() == \"53\", \"Test Case 52 Failed\"\nassert solution() == \"54\", \"Test Case 53 Failed\"\nassert solution() == \"55\", \"Test Case 54 Failed\"\nassert solution() == \"56\", \"Test Case 55 Failed\"\nassert solution() == \"57\", \"Test Case 56 Failed\"\nassert solution() == \"58\", \"Test Case 57 Failed\"\nassert solution() == \"59\", \"Test Case 58 Failed\"\nassert solution() == \"60\", \"Test Case 59 Failed\"\nassert solution() == \"61\", \"Test Case 60 Failed\"\nassert solution() == \"62\", \"Test Case 61 Failed\"\nassert solution() == \"6"
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2\", \"Test Case 1 failed\""
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\nx..\\n.x.\\nx.x\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt').read()) == '2\\n'"
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\nx..\\n.x.\\nx.x\\n\") == \"2\"\nassert solution(\"2 3\\nx...\\n..x\\nx..\\n\") == \"1\"\nassert solution(\"3 4\\nx....\\n.x...\\nx.x...\\n\") == \"2\"\nassert solution(\"2 4\\nx....\\n..x...\\nx.x...\\n\") == \"2\"\nassert solution(\"4 3\\nx....\\n...x...\\nx.x...\\n\") == \"1\""
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2\", \"The output should be 2.\""
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\nx..\\n.x.\\nx.x\") == 2\nassert solution(\"3 3\\nx..\\n.x.\\nx.x\") == 2"
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\nx..\\n.x.\\nx.x\\n\") == \"2\\ndef solution(stdin: str) -> str:\n    pass\""
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 3\\nx..\\n.x.\\nx.x') == '2'\nassert solution('5 5\\nx....\\n.x..\\nx.x..') == '3'\nassert solution('1 1\\nx....\\n.x..\\nx.x..') == '1'\nassert solution('1 1\\nx..x\\n.x..\\nx.x..') == '1'"
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0\") == \"9\\n-1\\n5\\n6\"\nassert solution(\"5\\n1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0\\n10 0 0\") == \"-1\\n-1\\n-1\\n-1\""
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == [\"9\\n-1\\n5\\n6\", \"-1\\n5\\n6\"]"
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0\") == \"9\\n-1\\n5\\n6\""
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"9\\n-1\\n5\\n6\\n\"\n"
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"9\\n-1\\n5\\n6\""
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0\") == \"9\\n-1\\n5\\n6\"\n"
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0\") == \"9\\n-1\\n5\\n6\"\n"
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"\"\"\n9\n-1\n5\n6\n\"\"\""
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0\") == \"9\\n-1\\n5\\n6\""
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0\") == \"9\\n-1\\n5\\n6\\n\""
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 91, \"Your solution is incorrect.\""
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=stdin) == output, f\"Output should be {output}, but it's {solution(stdin=stdin)}\""
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\") == \"91\""
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"91\""
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"91\""
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\") == \"91\"\n"
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    3\n    1 1 40 30 20 10\n    3 1 95 95 95 10\n    2 1 95 50 30 20\n    \"\"\"\n) == \"91\""
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\") == \"91\"\n"
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=r\"\"\"\n    3\n    1 1 40 30 20 10\n    3 1 95 95 95 10\n    2 1 95 50 30 20\n    \"\"\") == \"91\""
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20') == 91, \"Incorrect answer.\"\nassert solution('3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\\n4 2 70 70 70 20\\n1 3 20 20 20 10') == 125, \"Incorrect answer.\""
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(f'''\n    2\n    15 20\n0\n    1 1\n''') == 15, 'Incorrect answer'"
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == 15"
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''2\n15 20\n0\n1 1''') == '15\\n'"
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 15, \"The correct output is not provided. Please ensure the code is up to date.\""
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 15\n"
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n15 20\\n0\\n1 1\\n\") == 15\nassert solution(\"3\\n10 20 30\\n0\\n1 1 2\\n3 4\\n\") == 10"
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == sample_output, \"The solution is incorrect.\""
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2\\n15 20\\n0\\n1 1') == '15\\n'"
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"inputs/test_case.txt\", \"r\")) == 15\n"
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n15 20\\n0\\n1 1\") == \"15\""
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98') == 'impossible'"
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98') == 'impossible'\nassert solution('10 6\\n1 3 456\\n2 5 123\\n3 4 234\\n4 5 345\\n5 6 123') == 'definitely possible'"
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"impossible\""
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == 'impossible'"
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98') == 'impossible\\n'\nassert solution('5 4\\n3 2 375\\n2 5 283\\n1 4 716\\n3 4 98') == 'definitely possible\\n'"
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98') == 'impossible'\nassert solution('1 3\\n2 4\\n5 6\\n1 2\\n3 4') == 'definitely possible'"
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"impossible\\n\"\n"
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\").read()) == \"impossible\""
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98\\n') == 'impossible\\n'\nassert solution('5 2\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98\\n') == '283\\n'\nassert solution('5 1\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98\\n') == '283\\n'\nassert solution('5 3\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98\\n') == '283\\n'\nassert solution('5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98\\n') == '283\\n'"
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98\\n\") == \"impossible\"\nassert solution(\"10 10\\n1 1 10\\n2 2 5\\n3 3 3\\n4 4 2\\n\") == \"impossible\"\nassert solution(\"5 6\\n1 2 5\\n2 3 4\\n3 4 3\\n4 5 2\\n\") == \"impossible\"\nassert solution(\"10 10\\n1 1 10\\n2 2 5\\n3 3 3\\n4 4 2\\n5 5 1\\n\") == \"def solution(stdin: str) -> str:\n    pass\"\nassert solution(\"5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98\\n\") == \"impossible\"\nassert solution(\"10 10\\n1 1 10\\n2 2 5\\n3 3 3\\n4 4 2\\n5 5 1\\n\") == \"def solution(stdin: str) -> str:\n    pass\"\nassert solution(\"5 6\\n1 2 5\\n2 3 4\\n3 4 3\\n4 5 2\\n\") == \"impossible\"\nassert solution(\"10 10\\n1 1 10\\n2 2 5\\n3 3 3\\n4 4 2\\n5 5 1\\n\") == \"def solution(stdin: str) -> str:\n    pass\""
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == \"1.000000000\""
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1.000000000\""
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == '1.000000000'\n\nimport random"
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == '1.000000000'\nassert solution(2) == '2.000000000'\nassert solution(3) == '2.000000000'\nassert solution(4) == '2.000000000'\nassert solution(5) == '2.000000000'\n"
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\") == 1\nassert solution(\"5\") == 1\nassert solution(\"10\") == 1\nassert solution(\"20\") == 1\nassert solution(\"100\") == 1\nassert solution(\"500\") == 1\nassert solution(\"1000\") == 1\nassert solution(\"5000\") == 1\nassert solution(\"10000\") == 1\nassert solution(\"50000\") == 1\nassert solution(\"100000\") == 1\nassert solution(\"500000\") == 1\nassert solution(\"1000000\") == 1\nassert solution(\"5000000\") == 1\nassert solution(\"10000000\") == 1\nassert solution(\"50000000\") == 1\nassert solution(\"100000000\") == 1\nassert solution(\"500000000\") == 1\nassert solution(\"1000000000\") == 1\nassert solution(\"5000000000\") == 1\nassert solution(\"10000000000\") == 1\nassert solution(\"50000000000\") == 1\nassert solution(\"100000000000\") == 1\nassert solution(\"500000000000\") == 1\nassert solution(\"1000000000000\") == 1\nassert solution(\"5000000000000\") == 1\nassert solution(\"10000000000000\") == 1\nassert solution(\"50000000000000\") == 1\nassert solution(\"100000000000000\") == 1\nassert solution(\"500000000000000\") == 1\nassert solution(\"1000000000000000\") == 1\nassert solution(\"5000000000000000\") == 1\nassert solution(\"10000000000000000\") == 1\nassert solution(\"50000000000000000\") == 1\nassert solution(\"100000000000000000\") == 1\nassert solution(\"500000000000000000\") == 1\nassert solution(\"1000000000000000000\") == 1\nassert solution(\"5000000000000000000\") == 1\nassert solution(\"10000000000000000000\") == 1\nassert solution(\"50000000000000000000\") == 1\nassert solution(\"100000000000000000000\") == 1\nassert solution(\"500000000000000000000\") == 1\nassert solution(\"1000000000000000000000\") == 1\nassert solution(\"500000000000000000000\") == 1\nassert solution(\"1000000000000000000000\") == 1\nassert solution(\"5000000000000000000000\") == 1\nassert solution(\"10000000000000000000000\") == 1\nassert solution(\"5000000000000000000000\") == 1\nassert solution(\"10000000000000000000000\") == 1\nassert solution(\"50000000000000"
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == '1.000000000'"
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == '1.000000000'"
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == 1.000000000\nassert solution(2) == 1.000000000\nassert solution(3) == 1.000000000\nassert solution(4) == 1.000000000\nassert solution(5) == 1.000000000"
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == 1.000000000\n"
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == '1.000000000'\n"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\") == \"115.000000000\"\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n10 10 10\") == \"115.000000000\"\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n10 10 10\\n10 10 10\") == \"115.000000000\"\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n10 10 10\\n10 10 10\\n10 10 10\") == \"115.000000000\"\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\") == \"115.000000000\"\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n10 10 "
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\") == 115.0, \"Expected output 115.0, got {}\".format(solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\"))"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\") == 115.0\nassert solution(\"10 5\\n2 3\\n3 5\\n4 6\\n5 7\\n6 8\\n7 9\\n8 10\\n9 11\\n10 12\") == 135.0\nassert solution(\"100 0 10\\n1 2 3 4 5 6\\n7 8 9 10 11 12\\n13 14 15 16 17 18\\n19 20 21 22 23 24\\n25 26 27 28 29 30\\n31 32 33 34 35 36\\n37 38 39 40 41 42\\n43 44 45 46 47 48\\n49 50 51 52 53 54\\n55 56 57 58 59 60\\n61 62 63 64 65 66\\n67 68 69 70 71 72\\n73 74 75 76 77 78\\n79 80 81 82 83 84\\n85 86 87 88 89 90\\n91 92 93 94 95 96\\n97 98 99 100\") == 100.0\nassert solution(\"100 5 10\\n1 2 3 4 5\\n7 8 9 10 11\\n13 14 15 16 17\\n19 20 21 22 23\\n25 26 27 28 29\\n31 32 33 34 35\\n37 38 39 40 41\\n43 44 45 46 47\\n49 50 51 52 53\\n55 56 57 58 59\\n61 62 63 64 65\\n67 68 69 70 71\\n73 74 75 76 77\\n79 80 81 82 83\\n85 86 87 88 89\\n91 92 93 94 95\\n97 98 99 100\") == 100.0\nassert solution(\"100 0 10\\n1 2 3 4 5 6\\n7 8 9 10 11 12\\n13 14 15 16 17 18\\n19 20 21 22 23 24\\n25 26 27 28 29 30\\n31 32 33 34 35 36\\n37 38 39 40 41 42\\n43 44 45 46 47 48\\n49 50 51 52 53 54\\n55 56 57 58 59 60\\n61 62 63 64 65 66\\n67 68 69 70 71 72\\n73 74 75 76 77 78\\n79 80 81 82 83 84\\n85 86 87 88 89 90\\n91 92 93 94 95"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_data) == expected_output, f\"Test case {i+1} failed. Got {solution(input_data)}, expected {expected_output}\"\n\ninput_data = \"\"\"\n100 3 10\n15 99 98\n40 3 2\n90 10 9\n\"\"\"\nexpected_output = 115.000000000\nsolution(input_data)"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\") == 115.000000000, \"Incorrect answer\""
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 115.000000000, \"The output is incorrect\""
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\") == \"115.000000000\"\n"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('100 3 10\\n15 99 98\\n40 3 2\\n90 10 9') == 115.000000000\n"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n100 1 1\\n100 1 1.5\") == \"199.5\""
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"100 1 1\\n100 1 1.5\\n\") == \"199.500000\""
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"100 1 1\\n100 1 1.5\") == \"199.500000\"\n"
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"199.500000\", \"Your code is incorrect. Please check the provided code and sample input/output.\""
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"199.500000\", \"The output is incorrect.\""
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == \"199.500000\"\nassert solution(2) == \"350.000000\"\nassert solution(3) == \"400.000000\"\nassert solution(4) == \"450.000000\"\nassert solution(5) == \"500.000000\"\n"
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"199.500000\\n\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n100 1 1\\n100 1 1.5\\n\") == \"199.500000\""
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\").read()) == \"199.500000\\n\"\nassert solution(open(\"input1.txt\").read()) == \"199.000000\\n\"\nassert solution(open(\"input2.txt\").read()) == \"200.000000\\n\"\nassert solution(open(\"input3.txt\").read()) == \"100.000000\\n\"\nassert solution(open(\"input4.txt\").read()) == \"199.000000\\n\""
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"199.500000\", \"Test case failed\"\nprint(\"Test case passed\")"
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed: expected output {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\\n\"\nassert solution(\"5 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"0\\n\"\nassert solution(\"2 4\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"3\\n\""
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == 1\n"
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1\\n\""
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\\n\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\\n\"\nassert solution(\"3 4\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"3\\n\"\nassert solution(\"2 4\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"5\\n\"\nassert solution(\"4 5\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"7\\n\"\nassert solution(\"2 6\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"9\\n\"\nassert solution(\"4 8\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"11\\n\"\nassert solution(\"2 9\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"13\\n\"\nassert solution(\"3 10\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"15\\n\"\nassert solution(\"4 12\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"17\\n\"\nassert solution(\"2 14\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"19\\n\"\nassert solution(\"3 15\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"21\\n\"\nassert solution(\"4 16\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"23\\n\"\nassert solution(\"2 18\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"25\\n\"\nassert solution(\"3 19\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"27\\n\"\nassert solution(\"4 20\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"29\\n\"\nassert solution(\"2 22\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"31\\n\"\nassert solution(\"3 23\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"33\\n\"\nassert solution(\"4 24\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"35\\n\"\nassert solution(\"2 26\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"37\\n\"\nassert solution(\"3 27\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"39\\n\"\nassert solution(\"4 28\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"41\\n\"\nassert solution(\"2 30\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"43\\n\"\nassert solution(\"3 31\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"45\\n\"\nassert solution(\"4 32\\n1 2 3 4 5 6 7 8 9"
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == \"1\\n\""
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 3\\n1 2 3 4 5 6 7 8 9 10 11 12') == '1\\n'\nassert solution('3 3\\n1 2 3 4 5 6 7 8 9 10 11 12') == '3\\n'\nassert solution('2 4\\n1 2 3 4 5 6 7 8 9 10 11 12') == '2\\n'\nassert solution('3 4\\n1 2 3 4 5 6 7 8 9 10 11 12') == '4\\n'\nassert solution('3 1\\n1 2 3 4 5 6 7 8 9 10 11 12') == '1\\n'\nassert solution('10 2\\n1 2 3 4 5 6 7 8 9 10 11 12') == '10\\n'\nassert solution('10 1\\n1 2 3 4 5 6 7 8 9 10 11 12') == '10\\n'\nassert solution('3 2\\n1 2 3 4 5 6 7 8 9 10 11 12') == '3\\n'\nassert solution('10 3\\n1 2 3 4 5 6 7 8 9 10 11 12') == '10\\n'\nassert solution('1 1\\n1 2 3 4 5 6 7 8 9 10 11 12') == '1\\n'\nassert solution('10 20\\n1 2 3 4 5 6 7 8 9 10 11 12') == '100\\n'\nassert solution('100 1000\\n1 2 3 4 5 6 7 8 9 10 11 12') == '1000\\n'\nassert solution('10 10\\n1 2 3 4 5 6 7 8 9 10 11 12') == '10\\n'\nassert solution('10 100\\n1 2 3 4 5 6 7 8 9 10 11 12') == '100\\n'"
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() == 1\nassert solution() =="
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_data) == expected_output, f\"Expected output: {expected_output}, Received: {solution(input_data)}\""
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"13\\n3 2 1 1\") == \"5\\n\"\nassert solution(\"11\\n1 1 1 1\") == \"Impossible on a single line.\""
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('13\\n3 2 1 1') == '5\\n'\nassert solution('13\\n2 1 1 1') == 'Impossible\\n'\nassert solution('13\\n5 1 1 1') == '5\\n'\nassert solution('13\\n2 1 1 10') == 'Impossible\\n'\nassert solution('13\\n5 1 1 10') == 'Impossible\\n'\nassert solution('13\\n2 1 1 25') == 'Impossible\\n'\nassert solution('13\\n5 1 1 25') == 'Impossible\\n'"
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('13\\n3 2 1 1\\n') == '5'"
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"13\\n3 2 1 1\") == \"5\\n5\"\nassert solution(\"10\\n5 10 15 20\") == \"3\\n5\"\nassert solution(\"15\\n15 50 25 100\") == \"5\\n5\"\nassert solution(\"10\\n10 50 150 250\") == \"5\\n5\"\nassert solution(\"100\\n1000 5000 20000 10000\") == \"5\\n5\""
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"13\\n3 2 1 1\") == \"5\\n5\""
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('13\\n3 2 1 1') == '5\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n"
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('13\\n3 2 1 1\\n') == '5\\n'"
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"13\\n3 2 1 1\") == \"5\\n5\""
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"Possible\\n5\\n\", \"The function should return the correct output.\""
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"5\\n\", \"Expected 5 but got {}\".format(solution(stdin))"
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('aabcad') == 'yes', 'wrong output'\nassert solution('aba') == 'no', 'wrong output'\nassert solution('acd') == 'no', 'wrong output'"
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('aabcad\\naba\\nacd') == 'yes'\n\nassert solution('a\\nabc') == 'no'\n\nassert solution('abcabc') == 'yes'\n\nassert solution('a\\nb\\nc\\nd\\ne') == 'no'\n\nassert solution('abcde') == 'no'\n\nassert solution('abcdeabc') == 'yes'"
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('aabcad') == 'yes', \"failed to check solution for example 1\"\nassert solution('aba') == 'yes', \"failed to check solution for example 2\"\nassert solution('acd') == 'no', \"failed to check solution for example 3\""
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"aabcad\") == \"yes\"\nassert solution(\"aba\") == \"no\"\nassert solution(\"acd\") == \"no\"\n\nassert solution(\"aaaa\") == \"no\"\nassert solution(\"a\") == \"no\"\nassert solution(\"aaabbbcc\") == \"no\"\n\nassert solution(\"cat\") == \"yes\"\nassert solution(\"dog\") == \"no\"\nassert solution(\"elephant\") == \"no\"\n\nassert solution(\"racecar\") == \"no\"\nassert solution(\"racecar123\") == \"no\"\nassert solution(\"racecar12345\") == \"yes\""
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"aabcad\") == \"yes\"\nassert solution(\"aba\") == \"no\"\nassert solution(\"acd\") == \"yes\""
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"aabcad\\naba\\nacd\\n\") == \"yes\"\nassert solution(\"abcde\\nabc\\nabc\\n\") == \"no\"\nassert solution(\"a\\nb\\nc\\n\") == \"yes\"\nassert solution(\"a\\n\\nb\\n\\n\") == \"no\""
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"aabcad\") == \"yes\"\nassert solution(\"aba\") == \"yes\"\nassert solution(\"acd\") == \"no\""
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aabcad\") == \"yes\"\nassert solution(\"aba\") == \"no\"\nassert solution(\"acd\") == \"no\""
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aabcad\") == \"yes\"\nassert solution(\"aba\") == \"no\"\nassert solution(\"acd\") == \"yes\""
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"aabcad\") == \"yes\"\nassert solution(\"aba\") == \"no\"\nassert solution(\"acd\") == \"no\"\n\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\") == 5"
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    '4 5 10\\n'\n    '3 2\\n'\n    '1 2 4 7\\n'\n    '3 1 1 6\\n'\n    '3 4 7 10\\n'\n    '2 4 3 5\\n'\n    '4 2 8 9\\n'\n) == '5'"
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\""
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '5\\n'"
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Input:\\n{input()}\\nExpected Output:\\n{expected}\""
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9') == '5'"
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9') == '5'"
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == expected, f\"sample_input: {sample_input}, expected: {expected}\""
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\") == \"5\""
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"5\\n\""
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 2\\n2 4 same\\n3 5 same\\n\") == \"4\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 2\\n2 4 same\\n3 5 same') == '4'"
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == '4', 'Incorrect output'"
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2\\n2 4 same\\n3 5 same\\n\") == \"4\"\nassert solution(\"5 2\\n2 4 different\\n3 5 different\\n\") == \"0\"\nassert solution(\"5 2\\n2 4 same\\n3 5 same\\n\") == \"4\"\nassert solution(\"5 2\\n2 4 different\\n3 5 different\\n\") == \"0\""
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n5 2\n2 4 same\n3 5 same\n\"\"\") == \"4\\n\"\n\nassert solution(\"\"\"\n5 2\n2 4 false\n3 5 same\n\"\"\") == \"2\\n\"\n\nassert solution(\"\"\"\n5 2\n2 4 true\n3 5 false\n\"\"\") == \"3\\n\""
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2\\n2 4 same\\n3 5 same\") == \"4\\n\""
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 2\\n2 4 same\\n3 5 same\") == \"4\""
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 2\\n2 4 same\\n3 5 same') == 4\n"
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    5 2\n    2 4 same\n    3 5 same\n    \"\"\"\n) == \"4\\n\"\n\nassert solution(\n    \"\"\"\n    3 3\n    1 same\n    2 same\n    3 different\n    \"\"\"\n) == \"1\\n2\\n1\\n\"\n\nassert solution(\n    \"\"\"\n    4 1\n    1 1 same\n    2 1 same\n    3 1 same\n    4 1 different\n    \"\"\"\n) == \"1\\n2\\n1\\n2\\n3\\n1\\n\""
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2\\n2 4 same\\n3 5 same\\n\") == 4\nassert solution(\"10 3\\n3 8 same\\n2 9 false\\n\") == 1\nassert solution(\"1 3\\n2 4 same\\n3 5 different\\n\") == 0\nassert solution(\"5 1\\n1 1\\n1 2\\n\") == 1\nassert solution(\"3 4\\n1 3\\n2 4 same\\n\") == 0\nassert solution(\"3 3\\n1 2\\n2 1\\n3 1\\n\") == 1\nassert solution(\"2 2\\n1 2\\n2 3\\n\") == 0\nassert solution(\"4 2\\n1 3\\n2 4 same\\n3 5 false\\n\") == 1\nassert solution(\"10 2\\n1 4\\n2 6\\n3 8\\n4 10\\n\") == 4\nassert solution(\"5 3\\n2 4\\n3 5 same\\n4 6\\n\") == 1\nassert solution(\"10 3\\n2 4\\n3 5\\n4 6\\n5 7\\n\") == 2\nassert solution(\"10 4\\n2 6\\n3 8\\n4 10\\n5 12\\n6 14\\n7 16\\n\") == 6\nassert solution(\"10 5\\n2 8\\n3 10\\n4 12\\n5 14\\n6 16\\n7 18\\n8 20\\n9 22\\n10 24\\n11 26\\n12 28\\n13 30\\n14 32\\n15 34\\n16 36\\n17 38\\n18 40\\n19 42\\n20 44\\n21 46\\n22 48\\n23 50\\n24 52\\n25 54\\n26 56\\n27 58\\n28 60\\n29 62\\n30 64\\n31 66\\n32 68\\n33 70\\n34 72\\n35 74\\n36 76\\n37 78\\n38 80\\n39 82\\n40 84\\n41 86\\n42 88\\n43 90\\n44 92\\n45 94\\n46 96\\n47 98\\n48 100\\n49 102\\n50 104\\n51 106\\n52 108\\n53 110\\n54 112\\n55 114\\n56 116\\n57 118\\n58 120\\n59 122\\n60 124\\n61 126\\n62 128\\n63 130\\n64 132\\n65 134\\n66 136\\n67 138\\n68 140\\n69 142\\n70 144\\n71 146\\n72 148\\n73 150\\n74 152\\n75 154\\n76 156\\n77 158\\n78 160\\n79 162\\n80 164\\n81 166\\n82 168\\n83 170\\n84 172\\n85 174\\n86 176\\n87 178\\n88 180\\n89 182\\n90 184\\n91 186\\n92"
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6 4\\n0 1\\n0 2\\n3 4\\n3 5') == '3\\n'\nprint('All test cases passed.')"
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 4\\n0 1\\n0 2\\n3 4\\n3 5\") == \"3\"\nassert solution(\"6 4\\n0 1\\n1 2\\n3 4\\n3 5\") == \"3\"\nassert solution(\"6 4\\n0 1\\n1 2\\n3 4\\n4 5\") == \"3\""
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"3\"\n"
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(None) == 'Error: Please provide the input as a string.\\n'\nassert solution('1 2\\n0 1\\n3 4\\n4 5') == 'Error: Please provide the input as a string.\\n'\nassert solution('1 2\\n1 1\\n2 3\\n3 4\\n3 5\\n4 5\\n') == 'Error: Please provide the input as a string.\\n'\nassert solution('5 6') == 'Error: Please provide the input as a string.\\n'\nassert solution('6') == 'Error: Please provide the input as a string.\\n'\nassert solution('6 0\\n6 1\\n6 2\\n6 3\\n6 4\\n6 5\\n') == 'Error: Please provide the input as a string.\\n'\nassert solution('6 0\\n6 1\\n6 2\\n6 3\\n6 4\\n6 5\\n6 6') == 'Error: Please provide the input as a string.\\n'\nassert solution('6 0\\n6 1\\n6 2\\n6 3\\n6 4\\n6 5\\n6 6\\n') == 'Error: Please provide the input as a string.\\n'"
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(None) == 3 # This is the correct output"
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 4\\n0 1\\n0 2\\n3 4\\n3 5\") == \"3\""
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == \"3\", \"Test failed for sample input\""
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"3\\n\", \"Output not correct\"\nassert solution(stdin) == \"3\\n\", \"Output not correct\""
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"3\" # expected output: \"3\"\n"
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '3'\nprint('All tests passed!')\n"
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR\") == \"9.0\\n6.5\\n2.5\"\n"
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 9.0\nassert solution(5) == 2.5\n"
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR\") == \"9.0\\n6.5\\n2.5\"\n"
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Expected '{expected}', got '{solution(input())}'\""
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == '9.0\\n6.5\\n2.5'\n\nfrom typing import List"
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Solution does not match the expected output: {solution(input())}!= {expected_output}\""
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR') == '9.0\\n6.5\\n2.5'"
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR') == '9.0\\n6.5\\n2.5'"
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR') == '9.0\\n6.5\\n2.5'"
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR') == ['9.0', '6.5', '2.5']"
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3 2\\nB 1 2\\nB 2 3\\nR 3 1\") == \"1\"\n\nassert solution(\"4 5 3\\nA 1 2\\nB 1 3\\nC 2 4\\nD 2 5\\nE 3 4\\nF 3 5\\nG 4 5\") == \"1\""
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1\""
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1\""
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output"
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n3 3 2\nB 1 2\nB 2 3\nR 3 1\n''') == '1'\nassert solution('''\n3 4 2\nB 1 2\nB 2 3\nB 3 4\nR 4 2\nR 2 3\n''') == '1'\nassert solution('''\n4 4 3\nB 1 2\nB 2 3\nB 3 4\nR 4 3\nR 3 1\n''') == '0'\nassert solution('''\n5 5 4\nB 1 2\nB 2 3\nB 3 4\nR 4 3\nR 3 1\nB 4 1\nR 4 2\n''') == '0'\n"
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 3 2\\nB 1 2\\nB 2 3\\nR 3 1') == '1'\nassert solution('5 1 1\\nA 1 2\\nB 2 3\\nC 2 1\\nD 1 2\\nE 1 3\\nF 2 4\\nG 3 4\\nH 4 5') == '0'\nassert solution('5 1 0\\nA 1 2\\nB 2 3\\nC 2 1\\nD 1 2\\nE 1 3\\nF 2 4\\nG 3 4\\nH 4 5') == '1'\n"
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output\nprint(output)"
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == sample_output, f\"Test failed for input {sample_input}\""
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 3 2\\nB 1 2\\nB 2 3\\nR 3 1') == '1'"
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '1\\n'\nassert solution(input()) == '0\\n'"
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"88\\n5\\n5\\n7\\n\"\nassert solution() == \"88\\n5\\n5\\n7\\n\"\nassert solution() == \"88\\n5\\n5\\n7\\n\""
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\n5 0 5\\n7 0 7\\n4\\n88\\n5\\n6\\n7\\n') == '88\\n5\\n5\\n7\\n'"
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n5 0 5\\n7 0 7\\n4\\n88\\n5\\n6\\n7\") == \"88\\n5\\n5\\n7\"\n\nfrom typing import List"
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(str(2)) == '88\\n'\nassert solution(str(3)) == '5\\n'\nassert solution(str(1)) == '5\\n'\nassert solution(str(100)) == '7\\n'\nassert solution(str(1000)) == '88\\n'"
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n5 0 5\\n7 0 7\\n4\\n88\\n5\\n6\\n7\") == \"88\\n5\\n5\\n7\""
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\n5 0 5\\n7 0 7\\n4\\n88\\n5\\n6\\n7\\n') == '88\\n5\\n5\\n7\\n'"
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"88\\n5\\n5\\n7\\n\"\n"
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '88\\n5\\n5\\n7\\n', 'Test case 1 passed.'\n\nassert solution(stdin) == '88\\n5\\n5\\n7\\n', 'Test case 2 passed.'\n\nassert solution(stdin) == '88\\n5\\n5\\n7\\n', 'Test case 3 passed.'\n\nassert solution(stdin) == '88\\n5\\n5\\n7\\n', 'Test case 4 passed.'\n\nassert solution(stdin) == '88\\n5\\n5\\n7\\n', 'Test case 5 passed.'"
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == \"88\\n5\\n5\\n7\\n\""
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == 5"
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == 5, \"Test case 1 failed\"\nassert solution(\"3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == -1, \"Test case 2 failed\""
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == 5\nassert solution(\"3 3 1 2\\n2\\n1 2 1\\n1 3 1\\n2 3 3\") == -1\nassert solution(\"3 2 1 1\\n3\\n1 2 2\\n1 3 1\\n2 3 3\") == 5\nassert solution(\"3 2 1 1\\n3\\n1 2 2\\n1 3 1\\n2 3 1\") == 13\nassert solution(\"3 2 1 1\\n3\\n1 2 2\\n1 3 1\\n2 3 2\") == 13\nassert solution(\"3 2 1 1\\n3\\n1 2 1\\n1 3 1\\n2 3 3\") == -1\nassert solution(\"3 2 1 1\\n3\\n1 2 2\\n1 3 1\\n2 3 3\\n4 3 1\\n2 3 3\") == -1\n"
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == \"5\"\nassert solution(\"10 10 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == \"-1\"\nassert solution(\"10 5 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == \"5\"\nassert solution(\"10 10 1 2\\n3\\n1 2 2\\n1 3 1\\n2 3 3\") == \"5\"\nassert solution(\"10 10 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == \"-1\"\n"
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 5\n"
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3') == '5'\nassert solution('3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 2') == '5'\nassert solution('3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3') == '4'\nassert solution('3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 2') == '4'\nassert solution('3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3') == '-1'"
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\\n\") == 5\nassert solution(\"2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\\n\") == 5\nassert solution(\"4 3 3\\n1\\n1 2\\n2 3\\n3 4\\n\") == -1\nassert solution(\"5 3 2\\n1\\n1 2\\n2 3\\n3 4\\n\") == -1\nassert solution(\"3 3 1 2\\n4\\n1 2 2\\n1 3 1\\n2 3 3\\n\") == 5\nassert solution(\"2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\\n4\\n\") == 5\nassert solution(\"4 3 3\\n1\\n1 2\\n2 3\\n3 4\\n4\\n\") == -1\nassert solution(\"5 3 2\\n1\\n1 2\\n2 3\\n3 4\\n4\\n\") == -1"
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == 5, \"The output should be 5\"\nassert solution(\"3 5 1 1\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == 10, \"The output should be 10\"\nassert solution(\"3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == 5, \"The output should be 5\"\nassert solution(\"3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == 5, \"The output should be 5\"\nassert solution(\"3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == 5, \"The output should be 5\""
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '5', 'Your solution is incorrect.'"
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\\n\") == 5, \"Expected 5, but got: {}\".format(solution(\"3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\\n\"))"
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"mirkovC4nizCC44C4\") == \"mirkovniz\"\nassert solution(\"mirkovC4nizCC44C4C4\") == \"mirkovniz\"\nassert solution(\"mirkovC4nizCC44C4C4C4\") == \"mirkovniz\"\nassert solution(\"mirkovC4nizCC44C4C4C4C4\") == \"mirkovniz\"\nassert solution(\"mirkovC4nizCC44C4C4C4C4C4C\") == \"FRULA\""
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkovniz\"\nassert solution(\"123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012"
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('mirkovC4nizCC44') =='mirkovniz'"
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('mirkovC4nizCC44') =='mirkovniz'"
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkovniz\""
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkovniz\"\n"
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkovniz\", \"Sample Input\"\nassert solution(\"C4\") == \"def\", \"Sample Output\""
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkovniz\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('mirkovC4nizCC44') =='mirkovniz', \"Your code is incorrect. The solution should return'mirkovniz' but it returns '{}'.\".format(solution('mirkovC4nizCC44'))\n\nassert solution('C4') =='mirkovniz', \"Your code is incorrect. The solution should return'mirkovniz' but it returns '{}'.\".format(solution('C4'))"
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkovniz\""
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"32\"\n"
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n3 65\\n45 10\\n60 25') == 32\nassert solution('2\\n1 2\\n2 3\\n3 4\\n4 5') == 11"
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"32\""
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3, 3, 65, 45, 10, 60, 25) == 32, \"The expected output is 32, but instead got {}\".format(solution(3, 3, 65, 45, 10, 60, 25))"
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 32"
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"32\""
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n3 65\\n45 10\\n60 25\") == 32"
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(None) == \"Test case #1 failed\"\nassert solution(\"\") == \"Test case #1 failed\"\nassert solution(\"3\") == \"Test case #1 failed\"\nassert solution(\"3\\n45\\n60\") == \"Test case #1 failed\"\nassert solution(\"3\\n45\\n60\\n3\\n45\\n60\\n3\\n45\\n60\") == \"Test case #1 failed\"\nassert solution(\"3\\n45\\n60\\n3\\n45\\n60\\n3\\n45\\n60\\n3\\n45\\n60\\n3\\n45\\n60\") == \"32\"\nassert solution(\"3\\n45\\n60\\n3\\n45\\n60\\n3\\n45\\n60\\n3\\n45\\n60\\n3\\n45\\n60\\n3\\n45\\n60\") == \"Test case #1 failed\""
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"32\""
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3 65\\n45 10\\n60 25\") == \"32\""
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    5\n    1 2 0 3 1\n    \"\"\"\n) == \"\"\"\n3\n2\n\"\"\""
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 2 0 3 1\") == \"3\\n2\\n\""
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\n1 2 0 3 1\\n') == '3\\n2\\n'\nassert solution('10\\n10 20 30 40 50\\n') == '2\\n50\\n'\nassert solution('10\\n1 2 1 1 1\\n') == '2\\n1\\n'\nassert solution('10\\n5 5 5 5 5\\n') == '5\\n5\\n'"
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 2 0 3 1\\n\") == \"3\\n2\\n\""
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n1 2 0 3 1') == '3\\n2\\n'"
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"3\\n2\\n\"\n"
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n1 2 0 3 1') == '3\\n2\\n'\nassert solution('5\\n2 3 4 5 6') == '2\\n2\\n'\nassert solution('5\\n0 1 2 3 4') == '3\\n1\\n'\nassert solution('5\\n1 1 1 1 1') == '4\\n1\\n'\nassert solution('5\\n1 1 1 1 1') == '4\\n1\\n'\nassert solution('5\\n1 1 1 1 1') == '4\\n1\\n'\nassert solution('5\\n1 1 1 1 1') == '4\\n1\\n'"
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"3\\n2\\n\", \"Your solution is incorrect.\""
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt').read()) == '3\\n2\\n'\n"
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n1 2 0 3 1\\n') == '3\\n2\\n'"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4\") == \"2\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == 2, \"The output is incorrect.\""
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == expected_result\n\nfor i in range(K):\n    x, y = map(int, stdin.readline().split())\n    print(total_valid_states % (10**9 + 7))"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4') == '2'\nprint('All tests passed')"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 2\n"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4\") == \"2\""
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 2\n"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''2 4 4\n+ 1 1\n- 1 2\n+ 1 3\n- 1 4''') == '2\\n'\n\nfrom collections import defaultdict"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2\\n\"\n"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2\\n1000000000 0\\n1000000000 1\\n') == '500000004'\nassert solution('3\\n5 0\\n10 1\\n7 2\\n1 3\\n') == '1125000000'\n"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1000000000 0\\n1000000000 1\\n\") == \"500000004\\n\"\nassert solution(\"3\\n1000000000 0\\n1000000000 1\\n1000000000 2\\n\") == \"500000000\\n\"\nassert solution(\"4\\n1000000000 0\\n1000000000 1\\n1000000000 2\\n1000000000 3\\n\") == \"500000000\\n\"\nassert solution(\"5\\n1000000000 0\\n1000000000 1\\n1000000000 2\\n1000000000 3\\n1000000000 4\\n\") == \"500000004\\n\"\nassert solution(\"6\\n1000000000 0\\n1000000000 1\\n1000000000 2\\n1000000000 3\\n1000000000 4\\n1000000000 5\\n\") == \"500000004\\n\"\nassert solution(\"7\\n1000000000 0\\n1000000000 1\\n1000000000 2\\n1000000000 3\\n1000000000 4\\n1000000000 5\\n1000000000 6\\n\") == \"500000004\\n\"\nassert solution(\"8\\n1000000000 0\\n1000000000 1\\n1000000000 2\\n1000000000 3\\n1000000000 4\\n1000000000 5\\n1000000000 6\\n1000000000 7\\n\") == \"500000004\\n\"\nassert solution(\"9\\n1000000000 0\\n1000000000 1\\n1000000000 2\\n1000000000 3\\n1000000000 4\\n1000000000 5\\n1000000000 6\\n1000000000 7\\n1000000000 8\\n\") == \"500000004\\n\"\nassert solution(\"10\\n1000000000 0\\n1000000000 1\\n1000000000 2\\n1000000000 3\\n1000000000 4\\n1000000000 5\\n1000000000 6\\n1000000000 7\\n1000000000 8\\n1000000000 9\\n\") == \"500000004\\n\"\nassert solution(\"11\\n1000000000 0\\n1000000000 1\\n1000000000 2\\n1000000000 3\\n10000000"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"500000004\""
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n1000000000 0\\n1000000000 1') == 500000004\nassert solution('2\\n1000000000 0\\n1000000000 1\\n1000000000 2\\n1000000000 3\\n1000000000 4\\n1000000000 5\\n1000000000 6\\n1000000000 7\\n1000000000 8\\n1000000000 9\\n1000000000 10\\n1000000000 11\\n1000000000 12\\n1000000000 13\\n1000000000 14\\n1000000000 15\\n1000000000 16\\n1000000000 17\\n1000000000 18\\n1000000000 19\\n1000000000 20\\n1000000000 21\\n1000000000 22\\n1000000000 23\\n1000000000 24\\n1000000000 25\\n1000000000 26\\n1000000000 27\\n1000000000 28\\n1000000000 29\\n1000000000 30\\n1000000000 31\\n1000000000 32\\n1000000000 33\\n1000000000 34\\n1000000000 35\\n1000000000 36\\n1000000000 37\\n1000000000 38\\n1000000000 39\\n1000000000 40\\n1000000000 41\\n1000000000 42\\n1000000000 43\\n1000000000 44\\n1000000000 45\\n1000000000 46\\n1000000000 47\\n1000000000 48\\n1000000000 49\\n1000000000 50\\n1000000000 51\\n1000000000 52\\n1000000000 53\\n1000000000 54\\n1000000000 55\\n1000000000 56\\n1000000000 57\\n1000000000 58\\n1000000000 59\\n1000000000 60\\n1000000000 61\\n1000000000 62\\n1000000000 63\\n1000000000 64\\n1000000000"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(r\"\"\"\n    2\n    1000000000 0\n    1000000000 1\n\"\"\") == 500000004"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1000000000 0\\n1000000000 1\\n\") == 500000004"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1000000000 0\\n1000000000 1\\n\") == 500000004\nassert solution(\"5\\n1000000000 0\\n1000000000 1\\n1000000000 2\\n
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1000000000 0\\n1000000000 1\\n\") == \"500000004\"\n"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == sample_output"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    '''\n    2\n    1000000000 0\n    1000000000 1\n    '''\n) == '500000004\\n'"
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '12'"
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"12\\n\""
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24\") == \"12\"\n"
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24\\n\") == \"12\""
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"12\\n\""
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24') == '12\\n'\nprint('All test cases passed!')"
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"12\"\n"
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24\\n\") == 12\nassert solution(\"1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n\") == 12\nassert solution(\"1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 "
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24\") == \"12\\n\""
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Expected: {output}, Received: {solution(input())}\""
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 19\\n15 5 3\\n12 4 4\\n20 10 5\") == \"3\"\nassert solution(\"3 100\\n15 5 3\\n12 4 4\\n20 10 5\") == \"6\"\nassert solution(\"3 100\\n15 5 3\\n12 4 4\\n20 10 5\") == \"10\"\nassert solution(\"3 100\\n15 5 3\\n12 4 4\\n20 10 5\") == \"20\""
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 19\\n15 5 3\\n12 4 4\\n20 10 5') == '3'\nassert solution('5 4 5\\n1 1 1\\n2 2 2') == '2'\nassert solution('10 10 10\\n1000 1000 1000\\n1000 1000 1000') == '1'\nassert solution('10 10 100\\n1000 1000 1000\\n1000 1000 1000') == '2'\nassert solution('10 10 1000\\n1000 1000 1000\\n1000 1000 1000') == '3'"
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 19\\n15 5 3\\n12 4 4\\n20 10 5\\n\") == 3, \"Expected output: 3, actual output: \" + str(solution(\"3 19\\n15 5 3\\n12 4 4\\n20 10 5\\n\"))\nassert solution(\"4 25\\n7 6 5\\n9 12 4\\n22 18 6\\n\") == 2, \"Expected output: 2, actual output: \" + str(solution(\"4 25\\n7 6 5\\n9 12 4\\n22 18 6\\n\"))\nassert solution(\"6 20\\n10 7 8\\n14 9 6\\n20 20 8\\n\") == 3, \"Expected output: 3, actual output: \" + str(solution(\"6 20\\n10 7 8\\n14 9 6\\n20 20 8\\n\"))"
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 19\\n15 5 3\\n12 4 4\\n20 10 5\") == \"3\\n\"\n"
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3 19\n15 5 3\n12 4 4\n20 10 5\n\"\"\") == \"3\\n\""
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 19\\n15 5 3\\n12 4 4\\n20 10 5\") == \"3\""
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n3 19\n15 5 3\n12 4 4\n20 10 5\n''') == '''\n3\n'''"
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 19\\n15 5 3\\n12 4 4\\n20 10 5\\n\") == \"3\"\n"
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Expected: {expected_output}, Received: {solution(input())}\""
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(None) == \"Invalid input\""
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1\\n1\\n\", \"Input does not match expected output.\""
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n1 1\\n\") == \"1\\n1\\n\"\nassert solution(\"2\\n2 2\\n\") == \"2\\n2\\n\"\nassert solution(\"3\\n3 3\\n\") == \"3\\n3\\n\"\nassert solution(\"4\\n4 4\\n\") == \"4\\n4\\n\"\nassert solution(\"5\\n5 5\\n\") == \"5\\n5\\n\""
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '1\\n', \"Output not expected\""
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 1\nassert solution() == 2\nassert solution() == 3\nassert solution() == 4\nassert solution() == 5"
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == solution_output, f\"Test failed for {sample_input} and expected output: {solution_output} but got: {solution(sample_input)}\""
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1\\n1\""
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1\\n1 1\\n') == '1\\n'\n"
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(str(int(input()))) == \"1\"\n"
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n1 1\") == 1\nassert solution(\"2\\n2 3\") == 2\nassert solution(\"4\\n3 2\") == 4\nassert solution(\"5\\n4 5\") == 5\nassert solution(\"6\\n6 4\") == 12\nassert solution(\"7\\n7 6\") == 21\nassert solution(\"8\\n6 5\") == 24\nassert solution(\"9\\n5 6\") == 30\nassert solution(\"10\\n3 4\") == 36\nassert solution(\"11\\n3 5\") == 40\nassert solution(\"12\\n2 5\") == 42\nassert solution(\"13\\n1 5\") == 50\nassert solution(\"14\\n4 6\") == 60\nassert solution(\"15\\n5 7\") == 68\nassert solution(\"16\\n6 7\") == 76\nassert solution(\"17\\n7 8\") == 84\nassert solution(\"18\\n8 9\") == 92\nassert solution(\"19\\n9 10\") == 100\nassert solution(\"20\\n10 11\") == 108\nassert solution(\"21\\n11 12\") == 116\nassert solution(\"22\\n12 13\") == 124\nassert solution(\"23\\n13 14\") == 132\nassert solution(\"24\\n14 15\") == 140\nassert solution(\"25\\n15 16\") == 148\nassert solution(\"26\\n16 17\") == 156\nassert solution(\"27\\n17 18\") == 164\nassert solution(\"28\\n18 19\") == 172\nassert solution(\"29\\n19 20\") == 180\nassert solution(\"30\\n20 21\") == 188\nassert solution(\"31\\n21 22\") == 196\nassert solution(\"32\\n22 23\") == 204\nassert solution(\"33\\n23 24\") == 212\nassert solution(\"34\\n24 25\") == 220\nassert solution(\"35\\n25 26\") == 228\nassert solution(\"36\\n26 27\") == 236\nassert solution(\"37\\n27 28\") == 244\nassert solution(\"38\\n28 29\") == 252\nassert solution(\"39\\n29 30\") == 260\nassert solution(\"40\\n30 31\") == 268\nassert solution(\"41\\n31 32\") == 276\nassert solution(\"42\\n32 33\") == 284\nassert solution(\"43\\n33 34\") == 292\nassert solution(\"44\\n34 35\") == 300\nassert solution(\"45\\n35 36\") == 308\nassert solution(\"46\\n36 37\") == 316\nassert solution(\"47\\n37 38\") == 324\nassert solution(\"48\\n38 39\") == 332\nassert solution(\"49\\n39 40\") == 340\nassert solution(\"50\\n40 41\") == 348\nassert solution(\"51\\n41 42\") == 356\nassert solution(\"52\\n42 43\") == 364\nassert solution(\"53\\n43 44\") == 372\nassert solution(\"54\\n44 45\") == 380\nassert solution(\"55\\n45 46\") == 388\nassert solution(\"56\\n46 47\") == 396\nassert solution(\"57\\n47 48\") == 404\nassert solution(\"58\\n48 49\") == 412\nassert solution(\"59\\n"
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(b\"\\n1\\n1 1\\n\") == 1\n"
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"RGGR\") == \"3\"\nassert solution(\"GBGB\") == \"2\"\nassert solution(\"BYBY\") == \"1\"\nassert solution(\"YRYR\") == \"2\""
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"RGGR\\nGBGB\\nBYBY\\nYRYR\") == 3, \"The solution should return 3.\""
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"RGGR\\nGBGB\\nBYBY\\nYRYR\") == \"3\""
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"RGGR\") == \"3\""
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"RGGR\") == \"3\"\nassert solution(\"GBGB\") == \"2\"\nassert solution(\"BYBY\") == \"3\"\nassert solution(\"YRYR\") == \"4\""
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"RGR\") == 3\nassert solution(\"GBGB\") == 3\nassert solution(\"BYBY\") == 3\nassert solution(\"YRYR\") == 3"
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('RGGR') == 3\nassert solution('GBGB') == 3\nassert solution('BYBY') == 3\nassert solution('YRYR') == 3"
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"RGGR\\nGBGB\\nBYBY\\nYRYR\") == 3\n"
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('RGGR\\nGBGB\\nBYBY\\nYRYR') == '3\\n'\nassert solution('GYGB\\nYGBG\\nGYBG\\nGBGB') == '3\\n'\nassert solution('RGGG\\nGBGG\\nRBBG\\nGBGG') == '3\\n'\nassert solution('YGBY\\nYGBY\\nYGBY\\nYGBY') == '3\\n'\nassert solution('RGGY\\nRGGY\\nRGGY\\nRGGY') == '3\\n'\nassert solution('RGGG\\nRGGG\\nRGGG\\nRGGG') == '3\\n'\nassert solution('YGBY\\nYGBY\\nYGBY\\nYGBY') == '3\\n'\nassert solution('YGBG\\nYGBG\\nYGBG\\nYGBG') == '3\\n'\nassert solution('GBGB\\nGBGB\\nGBGB\\nGBGB') == '3\\n'\nassert solution('GYGB\\nGYGB\\nGYGB\\nGYGB') == '3\\n'\nassert solution('GBGB\\nGBGB\\nGBGB\\nGBGB') == '3\\n'\nassert solution('GBGB\\nGBGB\\nGBGB\\nGBGB') == '3\\n'\nassert solution('GBGB\\nGBGB\\nGBGB\\nGBGB') == '3\\n'\nassert solution('GBGB\\nGBGB\\nGBGB\\nGBGB') == '3\\n'\nassert solution('GBGB\\nGBGB\\nGBGB\\nGBGB') == '3\\n'\nassert solution('GBGB\\nGBGB\\nGBGB\\nGBGB') == '3\\n'\nassert solution('GBGB\\nGBGB\\nGBGB\\nGBGB') == '3\\n'\nassert solution('GBGB\\nGBGB\\nGBGB\\nGBGB') == '3\\n'\nassert solution('GBGB\\nGBGB\\nGBGB\\nGBGB') == '3\\n'\nassert solution('GBGB\\nGBGB\\nGBGB\\nGBGB') == '3\\n'\nassert solution('GBGB\\nGBGB\\nGBGB\\nGBGB') == '3\\n'\nassert solution('GBGB\\nGBGB\\nGBGB\\nGBGB') == '3\\n'\nassert solution('GBGB\\nGBGB\\nGBGB\\nGBGB') == '3\\n'\nassert solution('GBGB\\nGBGB\\nGBGB\\nGBGB') == '3\\n'\nassert solution('GBGB\\nGBGB\\nGBGB\\nGBGB') == '3\\n'\nassert solution('GBGB\\nGBGB\\nGBGB\\nGBGB') == '3\\n'\nassert solution('GBGB\\nGBGB\\nGBGB\\nGBGB') == '3\\n'\nassert solution('GBGB\\nGBGB\\nGBGB\\nGBGB') == '3\\n'\nassert solution('GBGB\\nGBGB\\nGBGB\\nGBGB') == '3\\n'\nassert solution('GBGB\\nGBGB\\nGBGB\\nGBGB') == '3\\n'\nassert solution('GBGB\\nGBGB\\nGBGB\\nGBGB') == '3\\n'\nassert solution('GBGB\\nGBGB\\nGBGB\\nGBGB') == '3\\n'\nassert solution('GBGB\\nGBGB\\nGBGB\\nGBGB') == '3\\n'\nassert solution('GBGB\\nGBGB\\nGBGB\\nGBGB') == '3\\n'\nassert solution('GBGB\\nGBGB\\nGBGB\\nGBGB') == '3\\n'\nassert solution('GBGB\\nGBGB\\nGBGB\\nGBGB') == '3\\n'\nassert solution('GBGB\\nGBGB\\nGBGB\\nGBGB') == '3\\n'\nassert solution('GBGB\\nGBGB\\nGBGB\\nGBGB') == '3\\n'\nassert solution('GBGB\\nGBGB\\nGBGB\\nGBGB') == '3\\n'\nassert solution('GBGB\\nGBGB\\nGBGB\\nGBGB') == '3\\n'\nassert solution"
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"RGGR\\nGBGB\\nBYBY\\nYRYR\") == \"3\"\nassert solution(\"RGGB\\nGBGR\\nBYBR\\nYRBG\") == \"3\"\nassert solution(\"GRBY\\nGBRR\\nBYGB\\nYRBG\") == \"3\"\nassert solution(\"GBRB\\nGRBY\\nBYGR\\nYRBG\") == \"3\"\nassert solution(\"GRBG\\nGBRB\\nBYBG\\nYRBG\") == \"3\"\nassert solution(\"GBRG\\nGRBG\\nBYGR\\nYRBG\") == \"3\"\nassert solution(\"RGRB\\nGRBG\\nBYBG\\nYRBG\") == \"3\"\nassert solution(\"RBGR\\nGRBG\\nBYBG\\nYRBG\") == \"3\"\nassert solution(\"GRBY\\nGBRY\\nBYBR\\nYRBG\") == \"3\"\nassert solution(\"GBRY\\nGRBY\\nBYBR\\nYRBG\") == \"3\"\nassert solution(\"GBRB\\nGRBY\\nBYBG\\nYRBG\") == \"3\"\nassert solution(\"GBRY\\nGBRB\\nGRBG\\nYRBG\") == \"3\"\nassert solution(\"GBRB\\nGRBY\\nBYGR\\nYRBG\") == \"3\"\nassert solution(\"GBRB\\nGBRY\\nGRBG\\nYRBG\") == \"3\"\nassert solution(\"GBRB\\nGRBY\\nBYBR\\nYRBG\") == \"3\"\nassert solution(\"GBRB\\nGRBY\\nBYBG\\nYRBG\") == \"3\"\nassert solution(\"GBRB\\nGRBY\\nBYGR\\nYRBG\") == \"3\"\nassert solution(\"GBRB\\nGRBY\\nBYBR\\nYRBG\") == \"3\"\nassert solution(\"GBRB\\nGRBY\\nBYBG\\nYRBG\") == \"3\"\nassert solution(\"GBRB\\nGRBY\\nBYGR\\nYRBG\") == \"3\"\nassert solution(\"GBRB\\nGRBY\\nBYBR\\nYRBG\") == \"3\"\nassert solution(\"GBRB\\nGRBY\\nBYBG\\nYRBG\") == \"3\"\nassert solution(\"GBRB\\nGRBY\\nBYGR\\nYRBG\") == \"3\"\nassert solution(\"GBRB\\nGRBY\\nBYBR\\nYRBG\") == \"3\"\nassert solution(\"GBRB\\nGRBY\\nBYBG\\nYRBG\") == \"3\"\nassert solution(\"GBRB\\nGRBY\\nBYGR\\nYRBG\") == \"3\"\nassert solution(\"GBRB\\nGRBY\\nBYBR\\nYRBG\") == \"3\"\nassert solution(\"GBRB\\nGRBY\\nBYBG\\nYRBG\") == \"3\"\nassert solution(\"GBRB\\nGRBY\\nBYGR\\nYRBG\") == \"3\"\nassert solution(\"GBRB\\nGRBY\\nBYBR\\nYRBG\") == \"3\"\nassert solution(\"GBRB\\nGRBY\\nBYBG\\nYRBG\") == \"3\"\nassert solution(\"GBRB\\nGRBY\\nBYGR\\nYRBG\") == \"3\"\nassert solution(\"GBRB\\nGRBY\\nBYBR\\nYRBG\") == \"3\"\nassert solution(\"GBRB\\nGRBY\\nBYBG\\nYRBG\") == \"3\"\nassert solution(\"GBRB\\nGRBY\\nBYGR\\nYRBG\") == \"3\"\nassert solution(\"GBRB\\nGRBY\\nBYBR\\nYRBG\") == \"3\"\nassert solution(\"GBRB\\nGRBY\\nBYBG\\nYRBG\") == \"3\"\nassert solution(\"GBRB\\nGRBY\\nBYGR\\nYRBG\") == \"3\"\nassert solution(\"GBRB\\nGRBY\\nBYBR\\nYRBG\") == \"3\"\nassert solution(\"GBRB\\nGRBY\\nBYBG\\nYRBG\") == \"3\"\nassert solution(\"GBRB\\nGRBY\\nBYGR\\nYRBG\") == \"3\"\nassert solution(\"GBRB\\nGRBY\\nBYBR\\nYRBG\") == \"3\"\nassert solution(\"GBRB\\nGRBY\\nBYBG\\nYRB"
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n-2 -1 0 1 2\\n2 1 0 -1 -2') == 'AAAAA\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n"
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n-2 -1 0 1 2\\n2 1 0 -1 -2') == 'AAAAA\\ndef solution(stdin: str) -> str:\\n\\treturn \"AAAAA\"\\n\\n# Test cases:\\n# Alf and Beata were two kids who lived long ago, during the time before you could spend Halloween participating in programming competitions. As such, their lives were much more boring than the lives of kids today.\\n# How can you survive without programming competitions, you may ask yourself.\\n# The answer is easy: you go trick-or-treating!\\n# Every year Alf and Beata went out in their neighbourhood to go trick-or-treating. When they trick-or-treat a house, they get some amount of candy of various sorts. Once the kids have filled up their big bag of candy, they go back home.\\n# Since Alf and Beata are very nice siblings, they want to split all their candy evenly. The siblings have 5 pieces of candy together. However, they each like every piece a bit differently. Alf hates liquorice, which Beata loves. On the other hand, Alf craves chocolate which Beata finds disgusting. More specifically, Alf assigns the 0th piece value -2 while Beata assigns it value -1.\\n# The absolute difference between the sum of the value of all candy each sibling gets to be as small as possible is: 1.\\n# Note that each candy must be given to one of the siblings: they can\\'t throw any candy away.\\n# You can implement this logic in any programming language you prefer. Just make sure to handle the case when there are multiple solutions correctly.\\n\\n# Input:\\n# The first line of the input contains a single integer N ($1 \\le N \\le 100$), the number of candies the siblings have collected.\\n# The next line contains the N integers a_1, a_2 \\dots, a_N ($-100 \\le a_i \\le 100$).\\n# The third and final line contains the N integers b_1, b_2 \\dots, b_N ($-100 \\le b_i \\le 100$).\\n\\n# Output:\\n# Output a string containing N characters. The i\\'th character should be A if the candy should be given to Alf, and B if it should be given to Beata. If there are multiple solutions, output the lexicographically smallest one.\\n\\n# Examples:\\n# Sample Input:\\n# 5\\n# -2 -1 0 1 2\\n# 2 1 0 -1 -2\\n# Sample Output:\\n# AAAA\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\\n# Test cases:\\n# Alf and Beata were two kids who lived long ago, during the time before you could spend Halloween participating in programming competitions. As such, their lives were much more boring than the lives of kids today.\\n# How can you survive without programming competitions, you may ask yourself.\\n# The answer is easy: you go trick-or-treating!\\n# Every year Alf and Beata went out in their neighbourhood to go trick-or-treating. When they trick-or-treat a house, they get some amount of candy of various sorts. Once the kids have filled up their big bag of candy, they go back home.\\n# Since Alf and Beata are very nice siblings, they want to split all their candy evenly. The siblings have 5 pieces of candy together. However, they each like every piece a bit differently. Alf hates liquorice, which Beata loves. On the other hand, Alf craves chocolate which Beata finds disgusting. More specifically, Alf assigns the 0th piece value -2 while Beata assigns it value -1.\\n# The absolute difference between the sum of the value of all candy each sibling gets to be as small as possible is: 1.\\n# Note that each candy must be given to one of the siblings: they can\\'t throw any candy away.\\n# You can implement this logic in any programming language you prefer. Just make sure to handle the case when there are multiple solutions correctly.\\n\\n# Input:\\n# The first line of the input contains a single integer N ($1 \\le N \\le "
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n-2 -1 0 1 2\\n2 1 0 -1 -2\") == \"AAAAA\"\n"
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n    5\n    2 -1 0 1 2\n    2 1 0 -1 -2\n    ''') == 'AAAAA'\n\nassert solution('''\n    5\n    2 -1 0 1 2\n    2 1 0 -1 -2\n    ''') == 'ABABA'\n\nassert solution('''\n    5\n    2 -1 0 1 2\n    2 1 0 -1 -2\n    ''') == 'ABABB'\n\nassert solution('''\n    5\n    2 -1 0 1 2\n    2 1 0 -1 -2\n    ''') == 'AABAB'\n\nassert solution('''\n    5\n    2 -1 0 1 2\n    2 1 0 -1 -2\n    ''') == 'AABAB'\n\nassert solution('''\n    5\n    2 -1 0 1 2\n    2 1 0 -1 -2\n    ''') == 'AABAB'"
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n-2 -1 0 1 2\\n2 1 0 -1 -2\") == \"AAAAA\""
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input()) == expected_output(), \"Test case failed. Please check the given input and the expected output.\"\n\nfrom typing import List"
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n-2 -1 0 1 2\\n2 1 0 -1 -2') == 'AAAAA\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'"
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"AAAAA\""
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n-2 -1 0 1 2\\n2 1 0 -1 -2\") == \"AAAAA\"\n"
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"AAAAA\", \"Test case 1 failed\""
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 3\\n2 3\\n4 0\\n0 2\\n6 1\\n\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 3\\n2 3\\n4 0\\n0 2\\n6 1\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"IMPOSSIBLE\" # 3 x 3 grid\nassert solution(4) == \"IMPOSSIBLE\" # 4 x 4 grid\nassert solution(5) == \"IMPOSSIBLE\" # 5 x 5 grid\nassert solution(6) == \"IMPOSSIBLE\" # 6 x 6 grid"
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6 3\\n2 3\\n4 0\\n0 2\\n6 1\\n') == 'IMPOSSIBLE'\nassert solution('6 3\\n2 3\\n4 0\\n0 2\\n6 4\\n') == 'IMPOSSIBLE'\nassert solution('6 3\\n2 3\\n4 0\\n0 2\\n6 3\\n') == 'IMPOSSIBLE'\nassert solution('6 3\\n2 3\\n4 0\\n0 2\\n6 2\\n') == 'IMPOSSIBLE'\nassert solution('6 3\\n2 3\\n4 0\\n0 2\\n6 1\\n') == '1'\nassert solution('6 3\\n2 3\\n4 0\\n0 2\\n6 4\\n') == '2'"
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, \"Incorrect output\"\n\nfrom typing import List"
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == 'IMPOSSIBLE'"
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('6 3\\n2 3\\n4 0\\n0 2\\n6 1') == 'IMPOSSIBLE'\nprint('All tests passed!')"
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6 3\\n2 3\\n4 0\\n0 2\\n6 1') == 'IMPOSSIBLE'"
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 3\\n2 3\\n4 0\\n0 2\\n6 1\\n\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 3\\n2 3\\n4 0\\n0 2\\n6 1\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"12\", \"The solution should return 12.\"\nassert solution() == \"4\", \"The solution should return 4.\"\nassert solution() == \"11\", \"The solution should return 11.\"\nassert solution() == \"3\", \"The solution should return 3.\"\nassert solution() == \"2\", \"The solution should return 2.\""
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt').read()) == '12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    5 5\n    austria\n    autocorrect\n    program\n    programming\n    computer\n    autocorrelation\n    programming\n    competition\n    zyx\n    austria\n    \"\"\"\n) == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\n    \"\"\"\n    5 5\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria\n    austria"
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"austria\") == \"12\", \"The correct output is 12\"\nassert solution(\"autocorrect\") == \"4\", \"The correct output is 4\"\nassert solution(\"program\") == \"11\", \"The correct output is 11\"\nassert solution(\"computer\") == \"3\", \"The correct output is 3\"\nassert solution(\"autocorrelation\") == \"2\", \"The correct output is 2\"\nassert solution(\"zyx\") == \"2\", \"The correct output is 2\""
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 5\\naustria\\autocorrect\\program\\programming\\computer\\autocorrelation\\programming\\competition\\zyx\\austria\") == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('austria') == '12'\nassert solution('autocorrect') == '12'\nassert solution('program') == '4'\nassert solution('programming') == '11'\nassert solution('computer') == '3'\nassert solution('autocorrelation') == '2'\nassert solution('zyx') == '2'\nassert solution('austria') == '12'"
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == '12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n"
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=input()) == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 5\\naustria\\nautocorrect\\nprogram\\nprogramming\\ncomputer\\nautocorrelation\\nprogramming\\ncompetition\\nyx\\naustria\") == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\npass\\n\"\nassert solution(\"5 5\\napple\\nbanana\\npapaya\\norange\\ngrape\\napple\\nbanana\\ngrape\\ngrape\\ngrape\\n\") == \"15\\n5\\n13\\n5\\n6\\ndef solution(stdin: str) -> str:\\npass\\n\"\nassert solution(\"5 5\\napple\\nbanana\\npapaya\\norange\\ngrape\\napple\\nbanana\\ngrape\\ngrape\\ngrape\\n\") == \"15\\n5\\n13\\n5\\n6\\ndef solution(stdin: str) -> str:\\npass\\n\"\nassert solution(\"5 5\\napple\\nbanana\\npapaya\\norange\\ngrape\\napple\\nbanana\\ngrape\\ngrape\\ngrape\\n\") == \"15\\n5\\n13\\n5\\n6\\ndef solution(stdin: str) -> str:\\npass\\n\"\nassert solution(\"5 5\\napple\\nbanana\\npapaya\\norange\\ngrape\\napple\\nbanana\\ngrape\\ngrape\\ngrape\\n\") == \"15\\n5\\n13\\n5\\n6\\ndef solution(stdin: str) -> str:\\npass\\n\"\nassert solution(\"5 5\\napple\\nbanana\\npapaya\\norange\\ngrape\\napple\\nbanana\\ngrape\\ngrape\\ngrape\\n\") == \"15\\n5\\n13\\n5\\n6\\ndef solution(stdin: str) -> str:\\npass\\n\""
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n5 5\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx\naustria\n\"\"\") == 12\nassert solution(\n\"\"\"\n1000000\na\nb\nc\nd\ne\nf\ng\nh\ni\nj\nk\nl\nm\nn\no\np\nq\nr\ns\nt\nu\nv\nw\nx\ny\nz\n\"\"\") == 12"
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Solution should return {expected}, but it returns {solution(input())}\"\n"
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 3"
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n0 1 1') == 3, \"Expected output: 3\"\n"
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Incorrect output for {input()}, expected {output}, got {solution(input())}\""
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n0 1 1\") == 3, \"Invalid output\""
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 3, \"Solution should return 3, but it returned {}\".format(solution())"
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n0 1 1\") == 3\nassert solution(\"4\\n0 1 2\") == 5\nassert solution(\"5\\n0 1 2 3\") == 12\nassert solution(\"6\\n0 1 2 3 4\") == 15\nassert solution(\"7\\n0 1 2 3 4 5\") == 12\nassert solution(\"8\\n0 1 2 3 4 5 6\") == 15\nassert solution(\"9\\n0 1 2 3 4 5 6 7\") == 12\nassert solution(\"10\\n0 1 2 3 4 5 6 7 8\") == 15\nassert solution(\"11\\n0 1 2 3 4 5 6 7 8 9\") == 12\nassert solution(\"12\\n0 1 2 3 4 5 6 7 8 9 10\") == 15"
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n0 1 1\") == 3"
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 3, \"Your solution is incorrect.\"\nassert solution(6) == 6, \"Your solution is incorrect.\"\nassert solution(12) == 12, \"Your solution is incorrect.\"\nassert solution(0) == 1, \"Your solution is incorrect.\"\nassert solution(31) == 31, \"Your solution is incorrect.\"\n\nfrom typing import List"
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n0 1 1\") == 3\nassert solution(\"4\\n0 1 1\") == 3\nassert solution(\"5\\n0 1 1\") == 3\nassert solution(\"6\\n0 1 1\") == 3\nassert solution(\"7\\n0 1 1\") == 3\nassert solution(\"8\\n0 1 1\") == 3\nassert solution(\"9\\n0 1 1\") == 3\nassert solution(\"10\\n0 1 1\") == 3\nassert solution(\"11\\n0 1 1\") == 3\nassert solution(\"12\\n0 1 1\") == 3\nassert solution(\"13\\n0 1 1\") == 3\nassert solution(\"14\\n0 1 1\") == 3\nassert solution(\"15\\n0 1 1\") == 3\nassert solution(\"16\\n0 1 1\") == 3\nassert solution(\"17\\n0 1 1\") == 3\nassert solution(\"18\\n0 1 1\") == 3\nassert solution(\"19\\n0 1 1\") == 3\nassert solution(\"20\\n0 1 1\") == 3\nassert solution(\"21\\n0 1 1\") == 3\nassert solution(\"22\\n0 1 1\") == 3\nassert solution(\"23\\n0 1 1\") == 3\nassert solution(\"24\\n0 1 1\") == 3\nassert solution(\"25\\n0 1 1\") == 3\nassert solution(\"26\\n0 1 1\") == 3\nassert solution(\"27\\n0 1 1\") == 3\nassert solution(\"28\\n0 1 1\") == 3\nassert solution(\"29\\n0 1 1\") == 3\nassert solution(\"30\\n0 1 1\") == 3\nassert solution(\"31\\n0 1 1\") == 3\nassert solution(\"32\\n0 1 1\") == 3\nassert solution(\"33\\n0 1 1\") == 3\nassert solution(\"34\\n0 1 1\") == 3\nassert solution(\"35\\n0 1 1\") == 3\nassert solution(\"36\\n0 1 1\") == 3\nassert solution(\"37\\n0 1 1\") == 3\nassert solution(\"38\\n0 1 1\") == 3\nassert solution(\"39\\n0 1 1\") == 3\nassert solution(\"40\\n0 1 1\") == 3\nassert solution(\"41\\n0 1 1\") == 3\nassert solution(\"42\\n0 1 1\") == 3\nassert solution(\"43\\n0 1 1\") == 3\nassert solution(\"44\\n0 1 1\") == 3\nassert solution(\"45\\n0 1 1\") == 3\nassert solution(\"46\\n0 1 1\") == 3\nassert solution(\"47\\n0 1 1\") == 3\nassert solution(\"48\\n0 1 1\") == 3\nassert solution(\"49\\n0 1 1\") == 3\nassert solution(\"50\\n0 1 1\") == 3\nassert solution(\"51\\n0 1 1\") == 3\nassert solution(\"52\\n0 1 1\") == 3\nassert solution(\"53\\n0 1 1\") == 3\nassert solution(\"54\\n0 1 1\") == 3\nassert solution(\"55\\n0 1 1\") == 3\nassert solution(\"56\\n0 1 1\") == 3\nassert solution(\"57\\n0 1 1\") == 3\nassert solution(\"58\\n0 1 1\") == 3\nassert solution(\"59\\n0 1 1\") == 3\nassert solution(\"60\\n0 1 1\") == 3\nassert solution(\"61\\n0 1 1\") == 3\nassert solution(\"62\\n0 1 1\") == 3\nassert solution(\"63\\n0 1 1\")"
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('HFBIGEDCJA') == 'Pre Post In Post In Pre', 'Input incorrect'\nassert solution('BIGEDCJFAH') == 'HFBJCDEGIA', 'Input incorrect'\nassert solution('BIGEDCJFAH') == 'IGEDCJBAFH', 'Input incorrect'"
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('HFBIGEDCJA') == 'Pre Post In Post In Pre', \"The given code does not match the expected output.\""
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"Pre Post In Post In Pre\"\nassert solution(\"BIGEDCJFAH\") == \"HFBJCDEGIA\"\nassert solution(\"IGEDCJBAFH\") == \"IGEDCJBAFH\"\n\nfrom typing import List"
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"Pre Post In Post In Pre\"\nassert solution(\"BIGEDCJFAH\") == \"HFBJCDEGIA\"\nassert solution(\"IGEDCJBAFH\") == \"IGEDCJBAFH\""
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"HFBIGEDCJA\\nBIGEDCJFAH\\nBIGEDCJFAH\") == \"Pre Post In Post In Pre\\nHFBJCDEGIA\\nBIGEDCJFAH\\nIGEDCJBAFH\"\nassert solution(\"HFBIGEDCJA\\nBIGEDCJFAH\\nBIGEDCJFAH\") == \"Pre Post In Post In Pre\\nHFBJCDEGIA\\nBIGEDCJFAH\\nIGEDCJBAFH\"\nassert solution(\"HFBIGEDCJA\\nBIGEDCJFAH\\nBIGEDCJFAH\") == \"Pre Post In Post In Pre\\nHFBJCDEGIA\\nBIGEDCJFAH\\nIGEDCJBAFH\""
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"Pre Post In Post In Pre\", \"First part of the reconstruction is incorrect\"\nassert solution(\"BIGEDCJFAH\") == \"In Post In Pre Post\", \"Second part of the reconstruction is incorrect\"\nassert solution(\"IGEDCJBAFH\") == \"Pre In Post Pre Post\", \"Third part of the reconstruction is incorrect\"\n\nsolution(\"HFBIGEDCJA\")"
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('HFBIGEDCJA') == 'Pre Post In Post In Pre', 'Test 1'\nassert solution('BIGEDCJFAH') == 'Pre Post In Post In Pre', 'Test 2'"
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"Pre Post In Post In Pre\"\nassert solution(\"BIGEDCJFAH\") == \"HFBJCDEGIA\"\nassert solution(\"BIGEDCJFAH\") == \"IGEDCJBAFH\"\n"
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin='HFBIGEDCJA\\nBIGEDCJFAH\\nBIGEDCJFAH') == 'Pre Post In Post In Pre\\nHFBJCDEGIA\\nBIGEDCJFAH\\nIGEDCJBAFH\\n', 'Test case 1')\n\nassert solution(stdin='HFBIGEDCJA\\nBIGEDCJFAH\\nBIGEDCJFAH') == 'Pre Post In Post In Pre\\nHFBJCDEGIA\\nBIGEDCJFAH\\nIGEDCJBAFH\\n', 'Test case 2')\n\nassert solution(stdin='HFBIGEDCJA\\nBIGEDCJFAH\\nBIGEDCJFAH') == 'Pre Post In Post In Pre\\nHFBJCDEGIA\\nBIGEDCJFAH\\nIGEDCJBAFH\\n', 'Test case 3')\n\nassert solution(stdin='HFBIGEDCJA\\nBIGEDCJFAH\\nBIGEDCJFAH') == 'Pre Post In Post In Pre\\nHFBJCDEGIA\\nBIGEDCJFAH\\nIGEDCJBAFH\\n', 'Test case 4')\n\nassert solution(stdin='HFBIGEDCJA\\nBIGEDCJFAH\\nBIGEDCJFAH') == 'Pre Post In Post In Pre\\nHFBJCDEGIA\\nBIGEDCJFAH\\nIGEDCJBAFH\\n', 'Test case 5')"
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"Pre Post In Post In Pre\", \"Sample Output: Expected 'Pre Post In Post In Pre', got '{}'\".format(solution(\"HFBIGEDCJA\"))"
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 10, \"The solution should return 10.\""
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0') == '10\\n'\n\nsolution('2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0') == '10\\n'"
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\\n') == '10\\n'\n"
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\") == \"10\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\\n') == '10\\n'\nassert solution('2\\n2\\n10 0\\n3 1 1\\n2\\n4 1 0\\n') == '10\\n'\nassert solution('2\\n2\\n10 0\\n3 1 1\\n1\\n4 2 0\\n') == '10\\n'\nassert solution('2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 1\\n') == '10\\n'\nassert solution('2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\\n') == '10\\n'\nassert solution('2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\\n1\\n4 1 0\\n') == '10\\n'"
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"10\""
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\") == \"10\""
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\") == \"10\\ndef solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Solution did not match expected output. Expected: '{output}', Received: '{solution(input())}'\""
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"10\\n\"\n"
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_data) == output_data, f\"Test failed for input: {input_data}\\nExpected output: {output_data}\\nGot output: {solution(input_data)}\""
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('0 0 100 100\\n30 30 60 60') == 10000.00\nassert solution('10 10 50 50\\n20 20 30 30') == 150.00\nassert solution('50 50 100 100\\n40 40 50 50') == 4000.00\n"
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_string) == expected_output, f\"Test Case {tc_index+1}: Expected Output: {expected_output}, but got: {solution(input_string)}\"\nfor tc_index in range(1, len(input_string.splitlines())+1):\n    tc_input = input_string.splitlines()[tc_index-1].split()\n    expected_output = float(input_string.splitlines()[tc_index].split()[0])\n    assert solution(tc_input) == expected_output, f\"Test Case {tc_index}: Expected Output: {expected_output}, but got: {solution(tc_input)}\""
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 0 100 100\\n30 30 60 60\") == \"10000.00\"\nassert solution(\"0 0 100 100\\n30 30 60 60\\n10 10 20 20\") == \"20000.00\"\nassert solution(\"0 0 100 100\\n30 30 60 60\\n10 10 20 20\\n10 20 30 30\") == \"40000.00\"\nassert solution(\"0 0 100 100\\n30 30 60 60\\n10 10 20 20\\n10 20 30 30\\n10 10 20 20\") == \"40000.00\"\nassert solution(\"0 0 100 100\\n30 30 60 60\\n10 10 20 20\\n10 20 30 30\\n10 10 20 20\\n20 20 30 30\") == \"60000.00\"\nassert solution(\"0 0 100 100\\n30 30 60 60\\n10 10 20 20\\n10 20 30 30\\n10 10 20 20\\n20 20 30 30\\n30 30 40 40\") == \"100000.00\""
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2\\n0 0 100 100\\n30 30 60 60') == 10000.00\nassert solution('1\\n0 0 100 100\\n-10 -10 10 10') == 0.00\nassert solution('5\\n0 0 100 100\\n-10 -10 10 10\\n0 0 100 100\\n-10 -10 10 10\\n0 0 100 100\\n-10 -10 10 10') == 0.00\n"
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    '2\\n0 0 100 100\\n30 30 60 60'\n) == '10000.00'\n\nassert solution(\n    '1\\n0 0 100 100\\n30 30 60 60\\n0 0 100 100'\n) == '0.00'\n\nassert solution(\n    '2\\n0 0 100 100\\n30 30 60 60\\n0 0 100 100\\n20 20 40 40'\n) == '20000.00'\n\nassert solution(\n    '1\\n0 0 100 100\\n30 30 60 60\\n0 0 100 100\\n0 0 100 100'\n) == '0.00'\n\nassert solution(\n    '1\\n0 0 100 100\\n30 30 60 60\\n0 0 100 100\\n-1000 -1000 1000 1000'\n) == '0.00'"
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 0 100 100\\n30 30 60 60\\n\") == \"10000.00\"\nassert solution(\"0 0 0 0\\n0 0 100 100\\n100 100 0 0\\n\") == \"0.00\"\nassert solution(\"1000 1000 0 0\\n1000 1000 1000 1000\\n\") == \"1000000.00\""
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n0 0 100 100\\n30 30 60 60\") == \"10000.00\"\n"
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 0 100 100\\n30 30 60 60\") == \"10000.00\""
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 0 100 100\\n30 30 60 60\") == 10000.0"
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n1 3\\n4 5\\n2 4\") == \"5\""
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n1 3\\n4 5\\n2 4\\n\") == 5\nassert solution(\"5 3\\n1 4\\n4 5\\n2 4\\n\") == 1"
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"5\\n\", \"The solution function does not work correctly.\""
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n1 3\\n4 5\\n2 4\") == \"5\\n\""
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n1 3\\n4 5\\n2 4\") == 5\nprint(solution(\"5 3\\n1 3\\n4 5\\n2 4\")) # testcase 1"
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\").read().splitlines()) == \"5\\n\""
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n1 3\\n4 5\\n2 4\") == 5\n\nfrom math import sqrt\n"
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"5\\n\""
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n1 3\\n4 5\\n2 4\") == 5\nassert solution(\"5 4\\n1 2\\n2 3\\n3 4\") == 1\nassert solution(\"4 3\\n2 1\\n3 4\\n1 2\") == 2\nassert solution(\"5 5\\n1 1\\n2 3\\n3 4\") == 0"
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 3\\n1 3\\n4 5\\n2 4') == '5\\n'"
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == '2095', 'Incorrect output'"
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == 2095\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == \"2095\""
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 2095, \"Solution should return 2095, but returned {}\".format(solution())\n"
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == \"2095\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == \"2095\\n\"\n"
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"2095\", \"Your solution is incorrect.\""
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == \"2095\"\n"
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == \"2095\""
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '2095', 'Incorrect output'"
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"var a = 'Gon'; var b = a; var c = 'My name is'+ a + '; print c; print 'My name is'+ b + '; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"print 'Hello, World!'; end.\") == \"Hello, World!\\n\"\nassert solution(\"print
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str: pass\\n\"\n\nassert solution(\"print a; print b; end.\") == \"a\\nb\\n\"\n\nassert solution(\"print c; print `My name is ${b}`; end.\") == \"c\\nMy name is Gon\\n\"\n\nassert solution(\"var d = 100; print d; end.\") == \"100\\n\"\n\nassert solution(\"print a; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end; end;"
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\n"
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"var a = \\\"Gon\\\";var b = a;var c = `My name is ${a}`;print c;print `My name is ${b}`;end.\") == \"My name is Gon\\nMy name is Gon\""
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('var a = \"Gon\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.') == 'My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'\n\nassert solution('var a = \"Gon\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.') == 'My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'"
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\n"
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"var a = 10; print a; var b = a; print b; var c = a + b; print c; end.\") == \"10\\n10\\n10\"\nassert solution(\"var a = \\\"hello\\\"; print a; var b = a; print b; var c = a + b; print c; end.\") == \"hello\\nhello\\nhello\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"print a; end.\") == \"a\\n\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end; print a; end.\") == \"My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str:\\n    pass\\na\\n\""
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\nvar a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint c;\nprint `My name is ${b}`;\nend.''') == 'My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str: pass\\n\""
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\""
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\nassert solution()\\n"
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\""
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ninput_lines = list(map(int, stdin.strip().split()))\\nN, T = input_lines\\n\\nbottles = {}\\nfor i in range(N):\\n    volume = input_lines[i]\\n    if volume not in bottles:\\n        bottles[volume] = 0\\n    bottles[volume] += 1\\n\\nmoves = []\\nwhile True:\\n    try:\\n        x = int(input())\\n        if bottles[x] == 0:\\n            raise ValueError('Bottle {} is empty.'.format(x))\\n        if x == N:\\n            break\\n        moves.append('transfer {} 0'.format(x))\\n        if bottles[x] == 1:\\n            moves.append('discard {}'.format(x))\\n        else:\\n            moves.append('fill {}'.format(x))\\n    except ValueError as e:\\n        moves.append(str(e))\\n    if sum(map(int, moves)) == T:\\n        break\\n    if len(moves) == 100000:\\n        break\\n    moves = [m.strip() for m in moves]\\n\\nfor m in moves:\\n    print(m)\\n\\n\\n# Alternative solution:\\n# import itertools\\n# moves = []\\n# while True:\\n#     try:\\n#         x = int(input())\\n#         if bottles[x] == 0:\\n#             raise ValueError('Bottle {} is empty.'.format(x))\\n#         if x == N:\\n#             break\\n#         moves.append('transfer {} 0'.format(x))\\n#         if bottles[x] == 1:\\n#             moves.append('discard {}'.format(x))\\n#         else:\\n#             moves.append('fill {}'.format(x))\\n#     except ValueError as e:\\n#         moves.append(str(e))\\n#     if sum(map(int, moves)) == T:\\n#         break\\n#     if len(moves) == 100000:\\n#         break\\n#     moves = [m.strip() for m in moves]\\n#\\n# for m in moves:\\n#     print(m)\\n\\n# Final solution:\\n# import itertools\\n# moves = []\\n# while True:\\n#     try:\\n#         x = int(input())\\n#         if bottles[x] == 0:\\n#             raise ValueError('Bottle {} is empty.'.format(x))\\n#         if x == N:\\n#             break\\n#         moves.append('transfer {} 0'.format(x))\\n#         if bottles[x] == 1:\\n#             moves.append('discard {}'.format(x))\\n#         else:\\n#             moves.append('fill {}'.format(x))\\n#     except ValueError as e:\\n#         moves.append(str(e))\\n#     if sum(map(int, moves)) == T:\\n#         break\\n#     if len(moves) == 100000:\\n#         break\\n#     moves = [m.strip() for m in moves]\\n#\\n# for m in moves:\\n#     print(m)\\n\\n# Additional solution:\\n# import itertools\\n# moves = []\\n# while True:\\n#     try:\\n#         x = int(input())\\n#         if bottles[x] == 0:\\n#             raise ValueError('Bottle {} is empty.'.format(x))\\n#         if x == N:\\n#             break\\n#         moves.append('transfer {} 0'.format(x))\\n#         if bottles[x] == 1:\\n#             moves.append('discard {}'.format(x))\\n#         else:\\n#             moves.append('fill {}'.format(x))\\n#     except ValueError as e:\\n#         moves.append(str(e))\\n#     if sum(map(int, moves))"
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n2\n7 8\n10\n''') == '''\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\n"
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2\\n3 4\\n5 6\\n7 8\") == \"fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_example) == output_example"
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\""
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2\\n7 8\\n10') == 'fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r').read()) == \"fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\""
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n7 8\\n10\") == \"fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndef solution(stdin: str) -> str:\\n\\tpass\""
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('10 4 3') == '27\\n'\nassert solution('5 10 2') == '6\\n'\nassert solution('9 12 3') == '22\\n'\nassert solution('11 7 4') == '63\\n'\nassert solution('15 10 5') == '132\\n'\nassert solution('100 50 10') == '1125\\n'\nassert solution('20 5 5') == '10\\n'"
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"27\\n\", \"The function should return 27, but instead returned {}\".format(solution(stdin))"
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 4 3\") == 27, \"The maximum amount of damage you can cause to the enemy must be 27.\"\n"
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(b'10 4 3') == '27\\n'\n"
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('10 4 3') == '27'"
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 4 3\") == \"27\"\nassert solution(\"5 7 3\") == \"16\"\nassert solution(\"10 5 3\") == \"21\""
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 27, \"Expected Output: 27, Actual Output: {}\".format(solution())"
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 4 3\") == \"27\"\n"
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"27\\n\"\n"
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '27'"
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Solution: {solution(input())}, Expected output: {output}\""
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\") == \"3\\n-1\\n4\"\nassert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\") == \"3\\n-1\\n4\""
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Hey! I have an awesome task with chameleons, $5$-th task for Saturday's competition.\\nGo ahead\u2026\\nThat's too difficult, I have an easier one, they won't even solve that one.\\nYou are given an array of $N$ integers from the interval $[1, K]$. You need to process $M$ queries. The first type of query requires you to change a number in the array to a different value, and the second type of query requires you to determine the length of the shortest contiguous subarray of the current array that contains all numbers from $1$ to $K$.\") == \"3\"\n\nassert solution(\"Hey! I have an awesome task with chameleons, $5$-th task for Saturday's competition.\\nGo ahead\u2026\\nThat's too difficult, I have an easier one, they won't even solve that one.\\nYou are given an array of $N$ integers from the interval $[1, K]$. You need to process $M$ queries. The first type of query requires you to change a number in the array to a different value, and the second type of query requires you to determine the length of the shortest contiguous subarray of the current array that contains all numbers from $1$ to $K$.\") == \"4\"\n\nassert solution(\"Hey! I have an awesome task with chameleons, $5$-th task for Saturday's competition.\\nGo ahead\u2026\\nThat's too difficult, I have an easier one, they won't even solve that one.\\nYou are given an array of $N$ integers from the interval $[1, K]$. You need to process $M$ queries. The first type of query requires you to change a number in the array to a different value, and the second type of query requires you to determine the length of the shortest contiguous subarray of the current array that contains all numbers from $1$ to $K$.\") == \"3\"\n\nassert solution(\"Hey! I have an awesome task with chameleons, $5$-th task for Saturday's competition.\\nGo ahead\u2026\\nThat's too difficult, I have an easier one, they won't even solve that one.\\nYou are given an array of $N$ integers from the interval $[1, K]$. You need to process $M$ queries. The first type of query requires you to change a number in the array to a different value, and the second type of query requires you to determine the length of the shortest contiguous subarray of the current array that contains all numbers from $1$ to $K$.\") == \"-1\"\n\nassert solution(\"Hey! I have an awesome task with chameleons, $5$-th task for Saturday's competition.\\nGo ahead\u2026\\nThat's too difficult, I have an easier one, they won't even solve that one.\\nYou are given an array of $N$ integers from the interval $[1, K]$. You need to process $M$ queries. The first type of query requires you to change a number in the array to a different value, and the second type of query requires you to determine the length of the shortest contiguous subarray of the current array that contains all numbers from $1$ to $K$.\") == \"3\"\n\nassert solution(\"Hey! I have an awesome task with chameleons, $5$-th task for Saturday's competition.\\nGo ahead\u2026\\nThat's too difficult, I have an easier one, they won't even solve that one.\\nYou are given an array of $N$ integers from the interval $[1, K]$. You need to process $M$ queries. The first type of query requires you to change a number in the array to a different value, and the second type of query requires you to determine the length of the shortest contiguous subarray of the current array that contains all numbers from $1$ to $K$.\") == \"4\"\n\nassert solution(\"Hey! I have an awesome task with chameleons, $5$-th task for Saturday's competition.\\nGo ahead\u2026\\nThat's too difficult, I have an easier one, they won't even solve that one.\\nYou are given an array of $N$ integers from the interval $[1, K]$. You need to process $M$ queries. The first type of query requires you to change a number in the array to a different value, and the second type of query requires you to determine the length of the shortest contiguous subarray of the current array that contains all numbers from $1$ to $K$.\") == \"3\"\n\nassert solution(\"Hey! I have an awesome task with chameleons, $5$-th task for Saturday"
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\") == \"3\\n-1\\n4\\n\""
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2') == '3\\n-1\\n4'"
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\") == \"3\\n-1\\n4\\n\""
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\") == \"3\\n-1\\n4\\n\""
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\") == \"3\\n-1\\n4\\n\"\n"
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\") == \"3\\n-1\\n4\"\nprint(\"All test cases pass\")\n"
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\") == \"3\\n-1\\n4\\n\"\nassert solution(\"2 3 1 2\\n1 3 3\\n2\\n2 1 1\\n1\") == \"2\\n-1\\n1\\n\""
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 533.3333333333, \"The correctness of the solution has not been verified\""
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1000 3000 1000\") == \"533.3333333333\""
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Test failed: expected {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1000 3000 1000\") == \"533.3333333333\\n\", \"Please implement the function as described.\""
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1000 3000 1000\") == \"533.3333333333\\n\"\n"
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1000 3000 1000\") == \"533.3333333333\\n\", \"Test case 1 failed.\"\nassert solution(\"1001 3000 1000\") == \"533.3333333333\\n\", \"Test case 2 failed.\"\nassert solution(\"1000 3000 1001\") == \"533.3333333333\\n\", \"Test case 3 failed.\"\nassert solution(\"1000 3000 1000\") == \"533.3333333333\\n\", \"Test case 4 failed.\"\nassert solution(\"1000 3000 1000\") == \"533.3333333333\\n\", \"Test case 5 failed.\""
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"533.3333333333\", \"Incorrect output\"\n"
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1000 3000 1000\") == \"533.3333333333\\n\", \"Output does not match\"\nprint(\"All tests passed successfully.\")"
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1000 3000 1000\") == \"533.3333333333\\n\", \"The given solution is not correct.\""
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 0\\n10 0\\n10 10\\n\") == 14.14\nassert solution(\"2 10\\n10 0\\n10 10\\n\") == 14.14\nassert solution(\"2 0\\n10 0\\n10 10\\n20 10\\n\") == 14.14\nassert solution(\"2 10\\n10 0\\n10 10\\n20 10\\n\") == 14.14"
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == 14.14, \"Incorrect output\""
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r')) == 14.14, \"Your code is not correct.\""
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 0\\n10 0\\n10 10\") == 14.14\nprint(\"All test cases passed\")"
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 0\\n10 0\\n10 10\") == \"14.14\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 0\\n10 0\\n10 10\\n\") == 14.14\nassert solution(\"2 1\\n10 0\\n10 10\\n\") == 14.14\nassert solution(\"2 2\\n10 0\\n10 10\\n\") == 14.14\nassert solution(\"2 3\\n10 0\\n10 10\\n\") == 14.14\nassert solution(\"2 4\\n10 0\\n10 10\\n\") == 14.14\nassert solution(\"2 5\\n10 0\\n10 10\\n\") == 14.14\nassert solution(\"2 6\\n10 0\\n10 10\\n\") == 14.14\nassert solution(\"2 7\\n10 0\\n10 10\\n\") == 14.14\nassert solution(\"2 8\\n10 0\\n10 10\\n\") == 14.14\nassert solution(\"2 9\\n10 0\\n10 10\\n\") == 14.14\nassert solution(\"2 10\\n10 0\\n10 10\\n\") == 14.14\nassert solution(\"2 11\\n10 0\\n10 10\\n\") == 14.14\nassert solution(\"2 12\\n10 0\\n10 10\\n\") == 14.14\nassert solution(\"2 13\\n10 0\\n10 10\\n\") == 14.14\nassert solution(\"2 14\\n10 0\\n10 10\\n\") == 14.14\nassert solution(\"2 15\\n10 0\\n10 10\\n\") == 14.14\nassert solution(\"2 16\\n10 0\\n10 10\\n\") == 14.14\nassert solution(\"2 17\\n10 0\\n10 10\\n\") == 14.14\nassert solution(\"2 18\\n10 0\\n10 10\\n\") == 14.14\nassert solution(\"2 19\\n10 0\\n10 10\\n\") == 14.14\nassert solution(\"2 20\\n10 0\\n10 10\\n\") == 14.14\nassert solution(\"2 21\\n10 0\\n10 10\\n\") == 14.14\nassert solution(\"2 22\\n10 0\\n10 10\\n\") == 14.14\nassert solution(\"2 23\\n10 0\\n10 10\\n\") == 14.14\nassert solution(\"2 24\\n10 0\\n10 10\\n\") == 14.14\nassert solution(\"2 25\\n10 0\\n10 10\\n\") == 14.14\nassert solution(\"2 26\\n10 0\\n10 10\\n\") == 14.14\nassert solution(\"2 27\\n10 0\\n10 10\\n\") == 14.14\nassert solution(\"2 28\\n10 0\\n10 10\\n\") == 14.14\nassert solution(\"2 29\\n10 0\\n10 10\\n\") == 14.14\nassert solution(\"2 30\\n10 0\\n10 10\\n\") == 14.14\nassert solution(\"2 31\\n10 0\\n10 10\\n\") == 14.14\nassert solution(\"2 32\\n10 0\\n10 10\\n\") == 14.14\nassert solution(\"2 33\\n10 0"
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 0\\n10 0\\n10 10\\n\") == \"14.14\""
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 0\\n10 0\\n10 10\") == 14.14, \"The expected output is not correct.\""
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 0\\n10 0\\n10 10\") == \"14.14\""
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 0\\n10 0\\n10 10\\n\") == \"14.14\""
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 3\\n123456 14323 1700000\\n123458 41412 1900000\\n123457 15221 1800000\\n123456\\n123458\\n123457') == '123457 0\\n0 2\\n123458 1'\n\nfrom typing import List"
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"123457 0\\n0 2\\n123458 1\\n\", \"Sample Output not correct.\""
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n123456 14323 1700000\\n123458 41412 1900000\\n123457 15221 1800000\\n123456\\n123458\\n123457\") == \"123457 0\\n0 2\\n123458 1\""
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n123456 14323 1700000\\n123458 41412 1900000\\n123457 15221 1800000\\n123456\\n123458\\n123457\") == \"123457 0\\n0 2\\n123458 1\"\n\nfrom typing import List"
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n123456 14323 1700000\\n123458 41412 1900000\\n123457 15221 1800000\\n123456\\n123458\\n123457\") == \"123457 0\\n0 2\\n123458 1\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r').read()) == '123457 0\\n0 2\\n123458 1'"
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '''\n0 0\n123458 1\n'''"
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(solution.input()) == solution.output()"
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_output, f\"Test {test_case} failed: expected output '{expected_output}', but got '{solution(stdin)}'.\""
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n3 5 10 2 5\\n2 4 5 1 3\") == 90\n"
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == 90, \"The solution is incorrect.\"\n"
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n3 5 10 2 5\\n2 4 5 1 3\\n\") == 90\n"
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n3 5 10 2 5\\n2 4 5 1 3\") == 90\nprint(\"Test Passed\")"
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n3 5 10 2 5\\n2 4 5 1 3\\n\") == 90\nassert solution(\"6\\n3 5 10 2 5\\n2 4 5 1 3\\n\") == 90\nassert solution(\"10\\n3 5 10 2 5\\n2 4 5 1 3\\n\") == 90\nassert solution(\"5\\n3 5 10 2 5\\n2 4 5 1 3\\n1 4 5 1 3\\n\") == 130\nassert solution(\"10\\n3 5 10 2 5\\n2 4 5 1 3\\n1 4 5 1 3\\n\") == 130\n"
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, 5, 10, 2, 5) == 90, \"Expected output: 90, but got: {}\".format(solution(3, 5, 10, 2, 5))"
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 90, \"The solution is not correct.\""
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n3 5 10 2 5\\n2 4 5 1 3\\n\") == 90\nassert solution(\"6\\n3 5 10 2 5\\n2 4 5 1 3\\n\") == 90\nassert solution(\"7\\n3 5 10 2 5\\n2 4 5 1 3\\n\") == 90\nassert solution(\"8\\n3 5 10 2 5\\n2 4 5 1 3\\n\") == 90\nassert solution(\"9\\n3 5 10 2 5\\n2 4 5 1 3\\n\") == 90\nassert solution(\"10\\n3 5 10 2 5\\n2 4 5 1 3\\n\") == 90\nassert solution(\"11\\n3 5 10 2 5\\n2 4 5 1 3\\n\") == 90\nassert solution(\"12\\n3 5 10 2 5\\n2 4 5 1 3\\n\") == 90\nassert solution(\"13\\n3 5 10 2 5\\n2 4 5 1 3\\n\") == 90\nassert solution(\"14\\n3 5 10 2 5\\n2 4 5 1 3\\n\") == 90\nassert solution(\"15\\n3 5 10 2 5\\n2 4 5 1 3\\n\") == 90\nassert solution(\"16\\n3 5 10 2 5\\n2 4 5 1 3\\n\") == 90\nassert solution(\"17\\n3 5 10 2 5\\n2 4 5 1 3\\n\") == 90\nassert solution(\"18\\n3 5 10 2 5\\n2 4 5 1 3\\n\") == 90\nassert solution(\"19\\n3 5 10 2 5\\n2 4 5 1 3\\n\") == 90\nassert solution(\"20\\n3 5 10 2 5\\n2 4 5 1 3\\n\") == 90\nassert solution(\"21\\n3 5 10 2 5\\n2 4 5 1 3\\n\") == 90\nassert solution(\"22\\n3 5 10 2 5\\n2 4 5 1 3\\n\") == 90\nassert solution(\"23\\n3 5 10 2 5\\n2 4 5 1 3\\n\") == 90\nassert solution(\"24\\n3 5 10 2 5\\n2 4 5 1 3\\n\") == 90\nassert solution(\"25\\n3 5 10 2 5\\n2 4 5 1 3\\n\") == 90\nassert solution(\"26\\n3 5 10 2 5\\n2 4 5 1 3\\n\") == 90\nassert solution(\"27\\n3 5 10 2 5\\n2 4 5 1 3\\n\") == 90\nassert solution(\"28\\n3 5 10 2 5\\n2 4 5 1 3\\n\") == 90\nassert solution(\"29\\n3 5 10 2 5\\n2 4 5 1 3\\n\") == 90\nassert solution(\"30\\n3 5 10 2 5\\n2 4 5 1 3\\n\") == 90\nassert solution(\"31\\n3 5 10 2 5\\n2 4 5 1 3\\n\") == 90\nassert solution(\"32\\n3 5 10 2 5\\n2 4 5 1 3\\n\") == 90\nassert solution(\"33\\n3 5 10 2 5\\n2 4 "
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n    5\n    3 5 10 2 5\n    2 4 5 1 3\n''') == '90'"
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"90\", \"Incorrect output for solution\""
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 10\\n1 2 6\\n0 4 3\\n0 8 2\\n') == '6.000000'"
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    '''\n3 10\n1 2 6\n0 4 3\n0 8 2\n'''\n) == '6.000000'\n\nassert solution(\n    '''\n4 10\n0 1 1\n1 2 1\n0 2 1\n'''\n) == '10.000000'"
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"6.000000\""
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(b\"\\n3\\n1\\n2\\n6\\n0\\n4\\n3\\n0\\n8\\n2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n"
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution([3, 10]) == \"6.000000\\n\""
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"6.000000\""
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, \"Test failed\""
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 10\\n1 2 6\\n0 4 3\\n0 8 2\") == \"6.000000\"\n\nfrom typing import List"
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 10\\n1 2 6\\n0 4 3\\n0 8 2') == '6.000000\\n'\n"
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 10\\n1 2 6\\n0 4 3\\n0 8 2\") == \"6.000000\"\n"
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n0 0\\n0 0\\n1. \\n.. \\n0\") == \"1. \\n.. \\n0\\n\"\nassert solution(\"3\\n0 0\\n0 0\\n1. \\n.. \\n0\") == \"1. \\n.. \\n0\\n\"\nassert solution(\"4\\n0 0\\n0 0\\n1. \\n.. \\n0\") == \"1. \\n.. \\n0\\n\"\nassert solution(\"5\\n0 0\\n0 0\\n1. \\n.. \\n0\") == \"1. \\n.. \\n0\\n\"\nassert solution(\"6\\n0 0\\n0 0\\n1. \\n.. \\n0\") == \"1. \\n.. \\n0\\n\"\nassert solution(\"7\\n0 0\\n0 0\\n1. \\n.. \\n0\") == \"1. \\n.. \\n0\\n\"\nassert solution(\"8\\n0 0\\n0 0\\n1. \\n.. \\n0\") == \"1. \\n.. \\n0\\n\"\nassert solution(\"9\\n0 0\\n0 0\\n1. \\n.. \\n0\") == \"1. \\n.. \\n0\\n\"\nassert solution(\"10\\n0 0\\n0 0\\n1. \\n.. \\n0\") == \"1. \\n.. \\n0\\n\"\nassert solution(\"11\\n0 0\\n0 0\\n1. \\n.. \\n0\") == \"1. \\n.. \\n0\\n\"\nassert solution(\"12\\n0 0\\n0 0\\n1. \\n.. \\n0\") == \"1. \\n.. \\n0\\n\"\nassert solution(\"13\\n0 0\\n0 0\\n1. \\n.. \\n0\") == \"1. \\n.. \\n0\\n\"\nassert solution(\"14\\n0 0\\n0 0\\n1. \\n.. \\n0\") == \"1. \\n.. \\n0\\n\"\nassert solution(\"15\\n0 0\\n0 0\\n1. \\n.. \\n0\") == \"1. \\n.. \\n0\\n\"\nassert solution(\"16\\n0 0\\n0 0\\n1. \\n.. \\n0\") == \"1. \\n.. \\n0\\n\"\nassert solution(\"17\\n0 0\\n0 0\\n1. \\n.. \\n0\") == \"1. \\n.. \\n0\\n\"\nassert solution(\"18\\n0 0\\n0 0\\n1. \\n.. \\n0\") == \"1. \\n.. \\n0\\n\"\nassert solution(\"19\\n0 0\\n0 0\\n1. \\n.. \\n0\") == \"1. \\n.. \\n0\\n\"\nassert solution(\"20\\n0 0\\n0 0\\n1. \\n.. \\n0\") == \"1. \\n.. \\n0\\n\"\nassert solution(\"21\\n0 0\\n0 0\\n1. \\n.. \\n0\") == \"1. \\n.. \\n0\\n\"\nassert solution(\"22\\n0 0\\n0 0\\n1. \\n.. \\n0\") == \"1. \\n.. \\n0\\n\"\nassert solution(\"23\\n0 0\\n0 0\\n1. \\n.. \\n0\") == \"1. \\n.. \\n0\\n\"\nassert solution(\"24\\n0 0\\n0 0\\n1. \\n.. \\n0\") == \"1. \\n.. \\n0\\n\"\nassert solution(\"25\\n0 0\\n0 0\\n1. \\n.. \\n0\") == \"1. \\n.. \\n0\\n\"\nassert solution(\"26\\n0 0\\n0 0\\n1. \\n.. \\n0\") == \"1. \\n.. \\n0\\n\"\nassert solution(\"27\\n0 0\\n0 0\\n1. \\n.. \\n0\") == \"1. \\n.. \\"
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\n0 0\\n0 0\\n1.\\n....\\n0\\n') == '1.\\n....\\n0\\n'"
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == sample_output, f\"The solution is incorrect. Expected: {sample_output}, Received: {solution(sample_input)}\""
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1.\\n..\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2\\n0 0\\n0 0\\n1\\n..\\n0') == '1\\n..\\n\\n'\nassert solution('2\\n0 0\\n0 0\\n2\\n..\\n0') == '2\\n..\\n\\n'\nassert solution('2\\n0 0\\n0 0\\n1\\n..\\n0') == '1\\n..\\n\\n'\nassert solution('2\\n0 0\\n0 0\\n1\\n..\\n0\\n3') == '1\\n..\\n\\n'\nassert solution('2\\n0 0\\n0 0\\n1\\n..\\n0\\n2') == '1\\n..\\n\\n'\nassert solution('2\\n0 0\\n0 0\\n1\\n..\\n0\\n1') == '1\\n..\\n\\n'\nassert solution('2\\n0 0\\n0 0\\n1\\n..\\n0\\n0') == '1\\n..\\n\\n'\nassert solution('2\\n0 0\\n0 0\\n1\\n..\\n0\\n-1') == '1\\n..\\n\\n'\nassert solution('2\\n0 0\\n0 0\\n1\\n..\\n0\\n401') == '1\\n..\\n\\n'\nassert solution('2\\n0 0\\n0 0\\n1\\n..\\n0\\n400') == '1\\n..\\n\\n'\nassert solution('2\\n0 0\\n0 0\\n1\\n..\\n0\\n-401') == '1\\n..\\n\\n'\nassert solution('2\\n0 0\\n0 0\\n1\\n..\\n0\\n-400') == '1\\n..\\n\\n'\nassert solution('2\\n0 0\\n0 0\\n1\\n..\\n0\\n400\\n1') == '1\\n..\\n\\n'\nassert solution('2\\n0 0\\n0 0\\n1\\n..\\n0\\n400\\n2') == '2\\n..\\n\\n'\nassert solution('2\\n0 0\\n0 0\\n1\\n..\\n0\\n400\\n1') == '2\\n..\\n\\n'\nassert solution('2\\n0 0\\n0 0\\n1\\n..\\n0\\n400\\n2') == '2\\n..\\n\\n'\nassert solution('2\\n0 0\\n0 0\\n1\\n..\\n0\\n400\\n1') == '2\\n..\\n\\n'\nassert solution('2\\n0 0\\n0 0\\n1\\n..\\n0\\n400\\n2') == '2\\n..\\n\\n'\nassert solution('2\\n0 0\\n0 0\\n1\\n..\\n0\\n400\\n1') == '2\\n..\\n\\n'\nassert solution('2\\n0 0\\n0 0\\n1\\n..\\n0\\n400\\n2') == '2\\n..\\n\\n'\nassert solution('2\\n0 0\\n0 0\\n1\\n..\\n0\\n400\\n1') == '2\\n..\\n\\n'\nassert solution('2\\n0 0\\n0 0\\n1\\n..\\n0\\n400\\n2') == '2\\n..\\n\\n'\nassert solution('2\\n0 0\\n0 0\\n1\\n..\\n0\\n400\\n1') == '2\\n..\\n\\n'\nassert solution('2\\n0 0\\n0 0\\n1\\n..\\n0\\n400\\n2') == '2\\n..\\n\\n'\nassert solution('2\\n0 0\\n0 0\\n1\\n..\\n0\\n400"
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"\"\"\n1.\n..\n\"\"\""
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0') == '1.\\n..\\n\\n'\nassert solution('2\\n0 0\\n0 0\\n1.1\\n11\\n2.\\n3.3\\n
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n1000\") == \"1.\\n..\\n\"\nassert solution(\"2\\n1000 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n1000\") == \"1.\\n..\\n\"\nassert solution(\"2\\n1000 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n1000\") == \"1.\\n..\\n\"\nassert solution(\"2\\n1000 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n1000\") == \"1.\\n..\\n\"\nassert solution(\"2\\n1000 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1.\\n..\\n\""
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == expected_solution, f\"Solution does not match expected solution: got {solution}, expected {expected_solution}\""
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n0 0\\n0 0\\n1.\\n....\\n0\") == \"1.\\n....\\n0\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n....\\n0\") == \"1.\\n....\\n0\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n....\\n0\") == \"1.\\n....\\n0\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n....\\n0\") == \"1.\\n....\\n0\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n....\\n0\") == \"1.\\n....\\n0\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n....\\n0\") == \"1.\\n....\\n0\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n....\\n0\") == \"1.\\n....\\n0\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n....\\n0\") == \"1.\\n....\\n0\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n....\\n0\") == \"1.\\n....\\n0\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n....\\n0\") == \"1.\\n....\\n0\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n....\\n0\") == \"1.\\n....\\n0\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n....\\n0\") == \"1.\\n....\\n0\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n....\\n0\") == \"1.\\n....\\n0\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n....\\n0\") == \"1.\\n....\\n0\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n....\\n0\") == \"1.\\n....\\n0\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n....\\n0\") == \"1.\\n....\\n0\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n....\\n0\") == \"1.\\n....\\n0\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n....\\n0\") == \"1.\\n....\\n0\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n....\\n0\") == \"1.\\n....\\n0\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n....\\n0\") == \"1.\\n....\\n0\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n....\\n0\") == \"1.\\n....\\n0\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n....\\n0\") == \"1.\\n....\\n0\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n....\\n0\") == \"1.\\n....\\n0\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n....\\n0\") == \"1.\\n....\\n0\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n....\\n0\") == \"1.\\n....\\n0\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n....\\n0\") == \"1.\\n....\\n0\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n....\\n0\") == \"1.\\n....\\n0\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n....\\n0\") == \"1.\\n....\\n0\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n....\\n0\") == \"1.\\n....\\n0\"\nassert solution(\"2\\n0 0\\n"
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed for the following input:\\n{stdin}\\nExpected output:\\n{expected_output}\\nGot output:\\n{solution(stdin)}\""
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == [\"1\", \"1\", \"def\"]\n"
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n"
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\na\\nbc\\nabc\\n3\\n1 abca\\n2 1\\n2 3\\n') == '1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1\\n1\\nabc\\ndef\\n\"\n"
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '1\\n1\\nabc\\nabc'\n"
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\na\\nbc\\nabc\\n3\\n1 abca\\n2 1\\n2 3') == ['1', '1', 'def']\nassert solution('3\\na\\nbc\\nabc\\n3\\n1 abca\\n2 1\\n2 2\\n2 3\\n3 2\\n2 1\\n2 2\\n2 3\\n3 2\\n2 1\\n2 2\\n2 3\\n3 2\\n2 1\\n2 2\\n2 3\\n3 2\\n2 1\\n2 2\\n2 3\\n3 2\\n2 1\\n2 2\\n2 3\\n3 2\\n2 1\\n2 2\\n2 3\\n3 2\\n2 1\\n2 2\\n2 3\\n3 2\\n2 1\\n2 2\\n2 3\\n3 2\\n2 1\\n2 2\\n2 3\\n3 2\\n2 1\\n2 2\\n2 3\\n3 2\\n2 1\\n2 2\\n2 3\\n3 2\\n2 1\\n2 2\\n2 3\\n3 2\\n2 1\\n2 2\\n2 3\\n3 2\\n2 1\\n2 2\\n2 3\\n3 2\\n2 1\\n2 2\\n2 3\\n3 2\\n2 1\\n2 2\\n2 3\\n3 2\\n2 1\\n2 2\\n2 3\\n3 2\\n2 1\\n2 2\\n2 3\\n3 2\\n2 1\\n2 2\\n2 3\\n3 2\\n2 1\\n2 2\\n2 3\\n3 2\\n2 1\\n2 2\\n2 3\\n3 2\\n2 1\\n2 2\\n2 3\\n3 2\\n2 1\\n2 2\\n2 3\\n3 2\\n2 1\\n2 2\\n2 3\\n3 2\\n2 1\\n2 2\\n2 3\\n3 2\\n2 1\\n2 2\\n2 3\\n3 2\\n2 1\\n2 2\\n2 3\\n3 2\\n2 1\\n2 2\\n2 3\\n3 2\\n2 1\\n2 2\\n2 3\\n3 2\\n2 1\\n2 2\\n2 3\\n3 2\\n2 1\\n2 2\\n2 3\\n3 2\\n2 1\\n2 2\\n2 3\\n3 2\\n2 1\\n2 2\\n2 3\\n3 2\\n2 1\\n2 2\\n2 3\\n3 2\\n2 1\\n2 2\\n2 3\\n3 2\\n2 1\\n2 2\\n2 3\\n3 2\\n2 1\\n2 2\\n2 3\\n3 2\\n2 1\\n2 2\\n2 3\\n3 2\\n2 1\\n2 2\\n2 3\\n3 2\\n2 1\\n2 2\\n2 3\\n3 2\\n2 1\\n2 2\\n2 3\\n3 2\\n2 1\\n2 2\\n2 3\\n3 2\\n2 1\\n2 2\\n2 3\\n3 2\\n2 1\\n2 2\\n2 3\\n3 2\\n2 1\\n2 2\\n2 3\\n3 2\\n2 1\\n2 2\\n2 3\\n3 2\\n2 1\\n2 2\\n2 3\\n3 2\\n2 "
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test failed: Expected output {expected_output}, but got {solution(input())}\""
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abc\") == \"def\"\nassert solution(\"acb\") == \"acb\"\nassert solution(\"abcabc\") == \"def\"\nassert solution(\"a\") == \"a\""
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Expected output: {output}, Received: {solution(input())}\""
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1 1 1\") == \"YES\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == 'YES'"
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"YES\", \"No solution provided\""
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1 1 1\") == \"YES\"\nassert solution(\"2 3 4 5\") == \"NO\"\nassert solution(\"6 7 8 9\") == \"YES\"\nassert solution(\"10 11 12 13\") == \"NO\""
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1 1 1\") == \"YES\"\nassert solution(\"2 2 2 1\") == \"NO\"\nassert solution(\"10 10 10 10\") == \"NO\""
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1 1\") == \"YES\\n\"\nassert solution(\"2 2 2 2\") == \"YES\\n\"\nassert solution(\"3 3 3 3\") == \"YES\\n\"\nassert solution(\"4 4 4 4\") == \"YES\\n\"\nassert solution(\"5 5 5 5\") == \"YES\\n\"\nassert solution(\"6 6 6 6\") == \"NO\\n\"\nassert solution(\"1 2 3 4\") == \"NO\\n\"\nassert solution(\"0 0 0 0\") == \"NO\\n\""
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1 1 1\") == \"YES\"\nassert solution(\"2 2 2 2\") == \"NO\"\nassert solution(\"3 3 3 3\") == \"YES\"\nassert solution(\"4 4 4 4\") == \"YES\"\nassert solution(\"5 5 5 5\") == \"NO\""
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1 1 1\") == \"YES\"\nassert solution(\"5 5 5 5\") == \"NO\""
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1 1 1\") == \"YES\"\nassert solution(\"5 5 5 5\") == \"NO\"\n"
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 96\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000') == '80.5696'"
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 96\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000') == '80.5696000000'"
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"80.5696000000\"\n"
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 96\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\") == \"80.5696000000\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == expected_output, f\"Your solution is '{solution}', but the expected output is '{expected_output}'.\""
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 96\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\") == \"80.5696000000\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 96\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000') == '80.5696000000\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"80.5696000000\\n\"\n"
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"80.5696000000\"\n"
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"80.5696000000\\n\"\n"
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 0 0 1 1 1 0 0 1\") == \"2\"\n\nfrom typing import List"
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"2\""
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2\\n\""
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 0 0 1 1 1 0 0 1') == '2\\n'\nassert solution('5 0 0 1 0 1 0 1 1') == '2\\n'\nassert solution('6 0 0 1 0 0 0 1 1') == '2\\n'\nassert solution('7 0 0 1 1 1 0 1 1') == '2\\n'\nassert solution('8 0 0 1 1 0 0 0 1') == '2\\n'"
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 0 0 1 1 1 0 0 1\") == \"2\", \"Test 1\"\nassert solution(\"5 1 1 1 1 1 1 1 1 1\") == \"5\", \"Test 2\"\nassert solution(\"6 1 1 1 1 1 1 1 1 1 1 1\") == \"10\", \"Test 3\"\nassert solution(\"7 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"15\", \"Test 4\"\nassert solution(\"8 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"20\", \"Test 5\""
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2\\n3 4\\n5 6\") == \"2\"\nassert solution(\"4 0 0 1 1 1 0 0 1\") == \"2\"\nassert solution(\"5 5 0 5 1 5 1 5 5 5 5 5 0\") == \"3\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 0 0 1 1 1 0 0 1\") == \"2\"\n\nfrom typing import List"
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 0 0 1 1 1 0 0 1\") == 2\nassert solution(\"2 3 4 5 6 7 8 9\") == 2\nassert solution(\"4 2 -1 3 -2 -3\") == 1\n\nfrom typing import List"
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n    4 0 0 1 1 1 0 0 1\n\"\"\") == \"\"\"\n    2\n\"\"\""
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 0 0 1 1 1 0 0 1\") == \"2\"\nassert solution(\"5 0 0 1 1 1 0 0 1 0 1 1 0\") == \"4\""
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\") == \"1400\"\n"
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == expected_output\nprint(\"Tests passed!\")"
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\") == 1400\n"
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\") == \"1400\"\nassert solution(\"1 1 1\\n0 0 1\") == \"0\"\nassert solution(\"1 1 100\") == \"impossible\"\nassert solution(\"1 1 1000\") == \"impossible\""
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\") == \"1400\"\nassert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\\n3000 0 150\") == \"impossible\"\n"
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\") == 1400\nassert solution(\"5 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\") == \"impossible\"\nassert solution(\"2 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\") == \"impossible\"\nassert solution(\"5 2 4\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\") == \"impossible\""
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 1400\n"
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1400\""
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\") == \"1400\"\nassert solution(\"1 1 1\\n0 0 1\") == \"0\"\nassert solution(\"1 2 3\\n0 0 400\") == \"impossible\"\nassert solution(\"5 4 5\") == \"impossible\""
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\") == \"3907\\n\"\nassert solution(\"10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo 415\\nstockholm helsinki 396\\noslo london 1153\\noslo copenhagen 485\\nstockholm copenhagen 522\\ncopenhagen berlin 354\\ncopenhagen amsterdam 622\\nhelsinki berlin 1107\\nlondon amsterdam 356\\nberlin amsterdam 575\\nlondon dublin 463\\nreykjavik dublin 1498\\nreykjavik oslo 1748\\nlondon brussels 318\\nbruzsels amsterdam 173\\nstockholm amsterdam\\noslo london\\nreykjavik dublin\\nbruzsels helsinki\") == \"4812\\n\"\nassert solution(\"10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbrussels\\nostrlo\\nstockholm amsterdam\\noslo london\\nreykjavik dublin\\nbruzsels helsinki\") == \"1017\\n\"\nassert solution(\"10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbrussels\\nostrlo\\nstockholm amsterdam\\noslo london\\nreykjavik dublin\\nbruzsels helsinki 1498\") == \"1618\\n\""
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbrussels\\noslo stockholm 415\\nstockholm helsinki 396\\noslo london 1153\\noslo copenhagen 485\\nstockholm copenhagen 522\\ncopenhagen berlin 354\\ncopenhagen amsterdam 622\\nhelsinki berlin 1107\\nlondon amsterdam 356\\nberlin amsterdam 575\\nlondon dublin 463\\nreykjavik dublin 1498\\nreykjavik oslo 1748\\nlondon brussels 318\\nbrussels amsterdam 173\\nstockholm amsterdam\\noslo london\\nreykjavik dublin\\nbrussels helsinki') == '3907'\nassert solution('1 1\\n') == '1'\nassert solution('5 5\\napple\\nbanana\\nbanana\\nbanana\\nbanana') == '0'\nassert solution('10 20\\napple\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana') == '0'\nassert solution('10 20\\napple\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana') == '24'\nassert solution('10 10\\napple\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana') == '24'\nassert solution('1 1\\napple\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana') == '0'\nassert solution('10 20\\napple\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana') == '24'\nassert solution('10 10\\napple\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana') == '24'\nassert solution('1 1\\napple\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana') == '0'\nassert solution('10 20\\napple\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana') == '24'\nassert solution('10 10\\napple\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana\\nbanana') == '24'"
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 3907\n"
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbrussels\\noslo stockholm 415\\nstockholm helsinki 396\\noslo london 1153\\noslo copenhagen 485\\nstockholm copenhagen 522\\ncopenhagen berlin 354\\ncopenhagen amsterdam 622\\nhelsinki berlin 1107\\nlondon amsterdam 356\\nberlin amsterdam 575\\nlondon dublin 463\\nreykjavik dublin 1498\\nreykjavik oslo 1748\\nlondon brussels 318\\nbrussels amsterdam 173\\nstockholm amsterdam\\noslo london\\nreykjavik dublin\\nbrussels helsinki\") == \"3907\\n\"\nassert solution(\"10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbrussels\\noslo stockholm 415\\nstockholm helsinki 396\\noslo london 1153\\noslo copenhagen 485\\nstockholm copenhagen 522\\ncopenhagen berlin 354\\ncopenhagen amsterdam 622\\nhelsinki berlin 1107\\nlondon amsterdam 356\\nberlin amsterdam 575\\nlondon dublin 463\\nreykjavik dublin 1498\\nreykjavik oslo 1748\\nlondon brussels 318\\nbrussels amsterdam 173\\nstockholm amsterdam\\noslo london\\nreykjavik dublin\\nbrussels helsinki\") == \"3907\\n\"\nassert solution(\"10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbrussels\\noslo stockholm 415\\nstockholm helsinki 396\\noslo london 1153\\noslo copenhagen 485\\nstockholm copenhagen 522\\ncopenhagen berlin 354\\ncopenhagen amsterdam 622\\nhelsinki berlin 1107\\nlondon amsterdam 356\\nberlin amsterdam 575\\nlondon dublin 463\\nreykjavik dublin 1498\\nreykjavik oslo 1748\\nlondon brussels 318\\nbrussels amsterdam 173\\nstockholm amsterdam\\noslo london\\nreykjavik dublin\\nbrussels helsinki\") == \"3907\\n\"\nassert solution(\"10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbrussels\\noslo stockholm 415\\nstockholm helsinki 396\\noslo london 1153\\noslo copenhagen 485\\nstockholm copenhagen 522\\ncopenhagen berlin 354\\ncopenhagen amsterdam 622\\nhelsinki berlin 1107\\nlondon amsterdam 356\\nberlin amsterdam 575\\nlondon dublin 463\\nreykjavik dublin 1498\\"
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 3907, \"Incorrect output\""
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbrussels\\noslo stockholm 415\\nstockholm helsinki 396\\noslo london 1153\\noslo copenhagen 485\\nstockholm copenhagen 522\\ncopenhagen berlin 354\\ncopenhagen amsterdam 622\\nhelsinki berlin 1107\\nlondon amsterdam 356\\nberlin amsterdam 575\\nlondon dublin 463\\nreykjavik dublin 1498\\nreykjavik oslo 1748\\nlondon brussels 318\\nbrusssels amsterdam 173\\nstockholm amsterdam\\noslo london\\nreykjavik dublin\\nbrussels helsinki\") == 3907, \"Incorrect answer\""
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('10 15\\nstockholm\\namsterdam\\nstockholm\\nhelsinki\\nbruges\\nhelsinki\\nberlin\\ncopenhagen\\nostrava\\nberlin\\nbrussels\\ncopenhagen\\norlando\\nberlin\\nbrazil\\nbrazil\\nberlin\\norlando\\nberlin\\nbrazil\\nbrazil\\nbrazil\\n') == '3907'\nassert solution('10 15\\nstockholm\\namsterdam\\nstockholm\\nhelsinki\\nbruges\\nhelsinki\\nberlin\\ncopenhagen\\nostrava\\nberlin\\nbrussels\\ncopenhagen\\norlando\\nberlin\\nbrazil\\nbrazil\\nberlin\\norlando\\nberlin\\nbrazil\\nbrazil\\nbrazil\\n') == '3907'\nassert solution('10 15\\nstockholm\\namsterdam\\nstockholm\\nhelsinki\\nbruges\\nhelsinki\\nberlin\\ncopenhagen\\nostrava\\nberlin\\nbrussels\\ncopenhagen\\norlando\\nberlin\\nbrazil\\nbrazil\\nberlin\\norlando\\nberlin\\nbrazil\\nbrazil\\nbrazil\\n') == '3907'\nassert solution('10 15\\nstockholm\\namsterdam\\nstockholm\\nhelsinki\\nbruges\\nhelsinki\\nberlin\\ncopenhagen\\nostrava\\nberlin\\nbrussels\\ncopenhagen\\norlando\\nberlin\\nbrazil\\nbrazil\\nberlin\\norlando\\nberlin\\nbrazil\\nbrazil\\nbrazil\\n') == '3907'\nassert solution('10 15\\nstockholm\\namsterdam\\nstockholm\\nhelsinki\\nbruges\\nhelsinki\\nberlin\\ncopenhagen\\nostrava\\nberlin\\nbrussels\\ncopenhagen\\norlando\\nberlin\\nbrazil\\nbrazil\\nberlin\\norlando\\nberlin\\nbrazil\\nbrazil\\nbrazil\\n') == '3907'\nassert solution('10 15\\nstockholm\\namsterdam\\nstockholm\\nhelsinki\\nbruges\\nhelsinki\\nberlin\\ncopenhagen\\nostrava\\nberlin\\nbrussels\\ncopenhagen\\norlando\\nberlin\\nbrazil\\nbrazil\\nberlin\\norlando\\nberlin\\nbrazil\\nbrazil\\nbrazil\\n') == '3907'\nassert solution('10 15\\nstockholm\\namsterdam\\nstockholm\\nhelsinki\\nbruges\\nhelsinki\\nberlin\\ncopenhagen\\nostrava\\nberlin\\nbrussels\\ncopenhagen\\norlando\\nberlin\\nbrazil\\nbrazil\\nberlin\\norlando\\nberlin\\nbrazil\\nbrazil\\nbrazil\\n') == '3907'\nassert solution('10 15\\nstockholm\\namsterdam\\nstockholm\\nhelsinki\\nbruges\\nhelsinki\\nberlin\\ncopenhagen\\nostrava\\nberlin\\nbrussels\\ncopenhagen\\norlando\\nberlin\\nbrazil\\nbrazil\\nberlin\\norlando\\nberlin\\nbrazil\\nbrazil\\nbrazil\\n') == '3907'\nassert solution('10 15\\nstockholm\\namsterdam\\nstockholm\\nhelsinki\\nbruges\\nhelsinki\\nberlin\\ncopenhagen\\nostrava\\nberlin\\nbrussels\\ncopenhagen\\norlando\\nberlin\\nbrazil\\nbrazil\\nberlin\\norlando"
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbrussels\\noslo stockholm 415\\nstockholm helsinki 396\\noslo london 1153\\noslo copenhagen 485\\nstockholm copenhagen 522\\ncopenhagen berlin 354\\ncopenhagen amsterdam 622\\nhelsinki berlin 1107\\nlondon amsterdam 356\\nberlin amsterdam 575\\nlondon dublin 463\\nreykjavik dublin 1498\\nreykjavik oslo 1748\\nlondon brussels 318\\nbrussels amsterdam 173\\nstockholm amsterdam\\noslo london\\nreykjavik dublin\\nbrussels helsinki\") == \"3907\\ndef solution(stdin: str) -> str:\n    pass\""
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbrussels\\noslo stockholm 415\\nstockholm helsinki 396\\noslo london 1153\\noslo copenhagen 485\\nstockholm copenhagen 522\\ncopenhagen berlin 354\\ncopenhagen amsterdam 622\\nhelsinki berlin 1107\\nlondon amsterdam 356\\nberlin amsterdam 575\\nlondon dublin 463\\nreykjavik dublin 1498\\nreykjavik oslo 1748\\nlondon brussels 318\\nbruessls amsterdam 173\\nstockholm amsterdam\") == 3907\nassert solution(\"10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbrussels\\noslo stockholm 415\\nstockholm helsinki 396\\noslo london 1153\\noslo copenhagen 485\\nstockholm copenhagen 522\\ncopenhagen berlin 354\\ncopenhagen amsterdam 622\\nhelsinki berlin 1107\\nlondon amsterdam 356\\nberlin amsterdam 575\\nlondon dublin 463\\nreykjavik dublin 1498\\nreykjavik oslo 1748\\nlondon brussels 318\\nbruessls amsterdam 173\\nstockholm amsterdam\") == 3907\nassert solution(\"10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbrussels\\noslo stockholm 415\\nstockholm helsinki 396\\noslo london 1153\\noslo copenhagen 485\\nstockholm copenhagen 522\\ncopenhagen berlin 354\\ncopenhagen amsterdam 622\\nhelsinki berlin 1107\\nlondon amsterdam 356\\nberlin amsterdam 575\\nlondon dublin 463\\nreykjavik dublin 1498\\nreykjavik oslo 1748\\nlondon brussels 318\\nbruessls amsterdam 173\\nstockholm amsterdam\") == 3907\nassert solution(\"10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbrussels\\noslo stockholm 415\\nstockholm helsinki 396\\noslo london 1153\\noslo copenhagen 485\\nstockholm copenhagen 522\\ncopenhagen berlin 354\\ncopenhagen amsterdam 622\\nhelsinki berlin 1107\\nlondon amsterdam 356\\nberlin amsterdam 575\\nlondon dublin 463\\nreykjavik dublin 1498\\nreykjavik oslo 1748\\nlondon brussels 318\\nbruessls amsterdam 173\\nstockholm amsterdam\") == 3907"
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbrussels\\noslo stockholm 415\\nstockholm helsinki 396\\noslo london 1153\\noslo copenhagen 485\\nstockholm copenhagen 522\\ncopenhagen berlin 354\\ncopenhagen amsterdam 622\\nhelsinki berlin 1107\\nlondon amsterdam 356\\nberlin amsterdam 575\\nlondon dublin 463\\nreykjavik dublin 1498\\nreykjavik oslo 1748\\nlondon brussels 318\\nbrusels amsterdam 173\\nstockholm amsterdam\\noslo london\\nreykjavik dublin\\nbrussels helsinki') == '3907\\n'\nassert solution('10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbrussels\\noslo stockholm 415\\nstockholm helsinki 396\\noslo london 1153\\noslo copenhagen 485\\nstockholm copenhagen 522\\ncopenhagen berlin 354\\ncopenhagen amsterdam 622\\nhelsinki berlin 1107\\nlondon amsterdam 356\\nberlin amsterdam 575\\nlondon dublin 463\\nreykjavik dublin 1498\\nreykjavik oslo 1748\\nlondon brussels 318\\nbrussels amsterdam 173\\nstockholm amsterdam\\noslo london\\nreykjavik dublin\\nbrussels helsinki') == '3907\\n'\nassert solution('10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbrussels\\noslo stockholm 415\\nstockholm helsinki 396\\noslo london 1153\\noslo copenhagen 485\\nstockholm copenhagen 522\\ncopenhagen berlin 354\\ncopenhagen amsterdam 622\\nhelsinki berlin 1107\\nlondon amsterdam 356\\nberlin amsterdam 575\\nlondon dublin 463\\nreykjavik dublin 1498\\nreykjavik oslo 1748\\nlondon brussels 318\\nbrussels amsterdam 173\\nstockholm amsterdam\\noslo london\\nreykjavik dublin\\nbrussels helsinki') == '3907\\n'\nassert solution('10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbrussels\\noslo stockholm 415\\nstockholm helsinki 396\\noslo london 1153\\noslo copenhagen 485\\nstockholm copenhagen 522\\ncopenhagen berlin 354\\ncopenhagen amsterdam 622\\nhelsinki berlin 1107\\nlondon amsterdam 356\\nberlin amsterdam 575\\nlondon dublin 463\\nreykjavik dublin 1498\\nreykjavik oslo "
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1') == '2\\n1\\n2\\n1'"
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1') == ['2', '1']\nassert solution('1 2\\n3 4\\n5 6\\n7 8') == ['7', '5']\nassert solution('1 3\\n2 5\\n4 7\\n6 9') == ['9', '7', '5']\nassert solution('1 1\\n2 1\\n3 1\\n4 1\\n5 1') == ['1', '1', '1', '1', '1']\nassert solution('1 2\\n3 4\\n5 6\\n7 8') == ['8', '6']\nassert solution('1 3\\n2 5\\n4 7\\n6 9') == ['7', '5']\nassert solution('1 1\\n2 1\\n3 1\\n4 1\\n5 1') == ['1', '1', '1', '1', '1']"
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1') == '2\\n1\\n2\\n1'\nassert solution('2 3\\n4 1\\n5 2\\n6 3\\n7 4\\n8 5') == '2\\n1\\n2\\n1'\nassert solution('3 1 2 1\\n4 3\\n5 4\\n6 5') == '1\\n2\\n3\\n4'\nassert solution('5 2\\n2 2\\n3 1\\n1 3\\n4 5\\n5 5\\n4 4\\n3 3\\n2 2\\n1 1') == '1\\n2\\n3\\n4'\nassert solution('5 4\\n5 5\\n4 3\\n3 2\\n2 1\\n1 1\\n2 2\\n3 3\\n4 4') == '4\\n3\\n2\\n1'\n"
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == 'Output Here'\n"
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, but got {solution(input())}\""
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\") == \"2\\n1\\n2\\n1\"\n"
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\") == \"2\\n1\\n2\\n1\\n\""
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1') == '2\\n1\\n2\\n1\\n'"
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input) == expected, f\"Test failed with input {input}, expected output {expected}\""
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"5 4\n3 1 3 4 2\n0 5\n0 9\n4 5\n2 1\"\"\") == \"2\\n1\\n2\\n1\"\n\nassert solution(\"\"\"5 4\n3 1 3 4 2\n0 5\n0 9\n4 5\n2 1\"\"\") == \"2\\n1\\n2\\n1\"\n\nassert solution(\"\"\"5 4\n3 1 3 4 2\n0 5\n0 9\n4 5\n2 1\"\"\") == \"2\\n1\\n2\\n1\"\n\nassert solution(\"\"\"5 4\n3 1 3 4 2\n0 5\n0 9\n4 5\n2 1\"\"\") == \"2\\n1\\n2\\n1\"\n\nassert solution(\"\"\"5 4\n3 1 3 4 2\n0 5\n0 9\n4 5\n2 1\"\"\") == \"2\\n1\\n2\\n1\""
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 5\\n01001\\n11100\\n10111\") == \"00010\"\nassert solution(\"3 5\\n11100\\n01001\\n10111\") == \"11011\"\nassert solution(\"3 5\\n11100\\n11100\\n10111\") == \"11011\"\nassert solution(\"3 5\\n11100\\n11100\\n01001\") == \"11011\"\n"
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 5\\n01001\\n11100\\n10111\") == \"00010\"\n\nassert solution(\"3 5\\n01001\\n11100\\n00111\") == \"01011\"\n\nassert solution(\"3 5\\n11001\\n11100\\n01010\") == \"01001\""
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 5\\n01001\\n11100\\n10111') == '00010\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n"
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"00010\"\n"
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r')) == '00010'\n"
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '00010'\nprint('All tests passed')"
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 5\\n01001\\n11100\\n10111\") == \"00010\""
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 5\\n01001\\n11100\\n10111\\n\") == \"00010\""
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 5\\n01001\\n11100\\n10111\\n') == '00010'"
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 5\\n01001\\n11100\\n10111\\n') == '00010'"
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1\\n6 2\\n0 4\\n6 12\\n') == 'possible\\n'"
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n6 2\\n0 4\\n6 12\\n\") == \"possible\""
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 2\\n0 4\\n6 12\\n\") == \"possible\"\n"
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=None) == \"possible\""
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"1\\n6 2\\n0 4\\n6 12\") == \"possible\\n\"\nassert solution(stdin=\"3\\n2 1\\n2 3\") == \"impossible\\n\"\nassert solution(stdin=\"2\\n1 1\") == \"possible\\n\"\nassert solution(stdin=\"1\\n2 2\") == \"impossible\\n\""
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1') == 'possible'\nassert solution('6 2\\n0 4\\n6 12') == 'impossible'\nassert solution('6 2\\n3 5\\n6 12\\n3 4') == 'impossible'"
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 2\\n0 4\\n6 12\") == \"possible\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"possible\""
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1\\n6 2\\n0 4\\n6 12') == 'possible'"
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1\\n6 2\\n0 4\\n6 12\\n') == 'possible'\nassert solution('1\\n6 3\\n0 3\\n6 12\\n') == 'impossible'"
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    stdin=\n) == \"\"\"\n2\n"
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\") == \"2\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"The given code is incorrect.\""
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_data) == expected_output, f\"Incorrect output: {solution(input_data)}!= {expected_output}\"\nfor input_data, expected_output in [\n    (\"5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\", \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\"),\n]:\n    assert solution(input_data) == expected_output, f\"Incorrect output: {solution(input_data)}!= {expected_output}\""
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1') == '2\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\\n') == '2\\n'\n"
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1') == 2"
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n''') == 'Yes\\n3 Just A Dream\\nYes'\n\nassert solution('''\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\nD 3\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\nD 2\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n''') == 'Plot Error\\nPlot Error\\nPlot Error'\n\nassert solution('''\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\nD 3\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\nD 2\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\nD 1\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n''') == 'Plot Error\\nPlot Error\\nPlot Error'\n\nassert solution('''\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\nD 3\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\nD 2\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\nD 1\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\nD 5\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n''') == 'Yes\\n3 Just A Dream\\nYes'\n\nassert solution('''\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\nD 3\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\nD 2\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\nD 1\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\nD 5\nS 1!bobby_dies"
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n''') == 'Plot Error\\n3 Just A Dream\\nYes'\n\nassert solution('''\n2\nE happy_birthday\nD 2\nS 1 happy_birthday\nE birthday_special\nD 3\nS 1 happy_birthday birthday_special\nE birthday_special\nS 2 happy_birthday\n''') == 'Plot Error\\n2 Just A Dream\\nNo'"
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n') == 'Plot Error\\n3 Just A Dream\\nYes'\n\nassert solution('20\\nS 1!bobby_dies business_as_usual\\nS 2!bobby_dies it_goes_on_and_on\\nS 3!business_as_usual jr_does_bad_things\\nS 4!it_goes_on_and_on stuff_happens\\n') == 'Plot Error\\n4 Just A Dream\\nYes'\n\nassert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nE terror_kills_people\\nD 2\\nS 1!business_as_usual\\nS 2!it_goes_on_and_on\\n') == 'Plot Error\\n3 Just A Dream\\nYes'\n\nassert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nE terror_kills_people\\nD 2\\nS 1!business_as_usual\\nS 2!it_goes_on_and_on\\nE pizza_scene\\n') == 'Plot Error\\n4 Just A Dream\\nYes'\n\nassert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nE terror_kills_people\\nD 2\\nS 1!business_as_usual\\nS 2!it_goes_on_and_on\\nE pizza_scene\\nE a_dream_exists\\nS 1!business_as_usual\\nS 2!it_goes_on_and_on\\n') == 'Plot Error\\n3 Just A Dream\\nYes'\n\nassert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nE terror_kills_people\\nD 2\\nS 1!business_as_usual\\nS 2!it_goes_on_and_on\\nE pizza_scene\\nE a_dream_exists\\nS 1!business_as_usual\\nS 2!it_goes_on_and_on\\nE a_dream_exists\\nS 1!"
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n    10\n     E business_as_usual\n     E bobby_dies\n     S 1 bobby_died\n     E stuff_happens\n     E jr_does_bad_things\n     S 2!bobby_dies business_as_usual\n     E it_goes_on_and_on\n     D 4\n     S 1!bobby_dies\n     S 2!bobby_dies it_goes_on_and_on\n     \"\"\") == \"\"\"\nPlot Error\n3 Just A Dream\nYes\n\"\"\""
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    '''\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n'''\n) == 'Plot Error'\nassert solution(\n    '''\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n'''\n) == '3 Just A Dream'\nassert solution(\n    '''\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n'''\n) == 'Yes'\nassert solution(\n    '''\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n'''\n) == 'Plot Error'\nassert solution(\n    '''\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n'''\n) == '3 Just A Dream'\nassert solution(\n    '''\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n'''\n) == 'Yes'"
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n\") == \"Yes\\n3 Just A Dream\\n\"\nassert solution(\"10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n\") == \"Plot Error\""
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution =='solution(stdin: str) -> str:\\n    pass\\n\\n'"
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n') == 'Plot Error\\n3 Just A Dream\\nYes'\nassert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nE ignore_me\\nD 2\\nE it_goes_on_and_on\\nS 2!bobby_dies\\n') == 'Plot Error\\n2 Just A Dream\\nNo'\n"
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"sample_input.txt\", \"r\").read()) == \"Yes\\n3 Just A Dream\\n\""
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == 'Plot Error'\nassert solution(sample_input_2) == 'Yes'\nassert solution(sample_input_3) == 'Yes'\n\nfrom typing import List\n"
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_str) == expected_output\nprint(\"All tests passed!\")"
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\") == \"+------------------------+-+|\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+-+\""
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Solution for {input()} expected to be {expected_output}, but got {solution(input())} instead.\""
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\") == \"+------------------------+-+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+-+\""
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"24 5 8 7\") == \"\\n+------------------------+-+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+-+\\n\""
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod\\ntempor incididunt ut labore et dolore magna aliqua\\nUt enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip\\nex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\") == \"\\x1b[32m\\x1b[4mLorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod\\x1b[0m\\n\\x1b[32m\\x1b[4mtempor incididunt ut labore et dolore magna aliqua\\x1b[0m\\n\\x1b[32m\\x1b[4mUt enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip\\x1b[0m\\n\\x1b[32m\\x1b[4mex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\\x1b[0m\"\n\nassert solution(\"10 4 10 4 5 5 5 5 5 5\\nThe quick brown fox jumps over the lazy dog\\nThe quick brown fox jumps over the lazy dog\\nThe quick brown fox jumps over the lazy dog\\nThe quick brown fox jumps over the lazy dog\\nThe quick brown fox jumps over the lazy dog\") == \"\\x1b[32m\\x1b[4mThe quick brown fox jumps over the lazy dog\\x1b[0m\\n\\x1b[32m\\x1b[4mThe quick brown fox jumps over the lazy dog\\x1b[0m\\n\\x1b[32m\\x1b[4mThe quick brown fox jumps over the lazy dog\\x1b[0m\\n\\x1b[32m\\x1b[4mThe quick brown fox jumps over the lazy dog\\x1b[0m\\n\\x1b[32m\\x1b[4mThe quick brown fox jumps over the lazy dog\\x1b[0m\\n\\x1b[32m\\x1b[4mThe quick brown fox jumps over the lazy dog\\x1b[0m\\n\\x1b[32m\\x1b[4mThe quick brown fox jumps over the lazy dog\\x1b[0m\\n\\x1b[32m\\x1b[4mThe quick brown fox jumps over the lazy dog\\x1b[0m\\n\\x1b[32m\\x1b[4mThe quick brown fox jumps over the lazy dog\\x1b[0m\\n\\x1b[32m\\x1b[4mThe quick brown fox jumps over the lazy dog\\x1b[0m\\n\\x1b[32m\\x1b[4mThe quick brown fox jumps over the lazy dog\\x1b[0m\\n\\x1b[32m\\x1b[4mThe quick brown fox jumps over the lazy dog\\x1b[0m\\n\\x1b[32m\\x1b[4mThe quick brown fox jumps over the lazy dog\\x1b[0m\\n\\x1b[32m\\x1b[4mThe quick brown fox jumps over the lazy dog\\x1b[0m\\n\\x1b[32m\\x1b[4mThe quick brown fox jumps over the lazy dog\\x1b[0m\\n\\x1b[32m\\x1b[4mThe quick brown fox jumps over the lazy dog\\x1b[0m\\n\\x1b[32m\\x1b[4mThe quick brown fox jumps over the lazy dog\\x1b[0m\\n\\x1b[32m\\x1b[4mThe quick brown fox jumps over the lazy dog\\x1b[0m\\n\\x1b[32m\\x1b[4mThe quick brown fox jumps over the lazy dog\\x1b[0m\\n\\x1b[32m\\x1b[4mThe quick brown fox jumps over the lazy"
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    24 5 8 7\n    Lorem ipsum dolor sit amet consectetur adipisicing elit sed do\n    eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad\n    minim veniam quis nostrud exercitation ullamco laboris nisi ut\n    aliquip ex ea commodo consequat Duis aute irure dolor in\n    reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n    pariatur Excepteur sint occaecat cupidatat non proident sunt in\n    culpa qui officia deserunt mollit anim id est laborum\n    \"\"\"\n) == \"\"\"\n+------------------------+-+\n|exercitation ullamco    |^|\n|laboris nisi ut aliquip | |\n|ex ea commodo consequat |X|\n|Duis aute irure dolor in| |\n|reprehenderit in        |v|\n+------------------------+-+\n"
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_string) == expected_output, f\"Test failed for solution: {solution(input_string)}\"\n\ninput_string = \"\"\"\n24 5 8 7\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do\neiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad\nminim veniam quis nostrud exercitation ullamco laboris nisi ut\naliquip ex ea commodo consequat Duis aute irure dolor in\nreprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\npariatur Excepteur sint occaecat cupidatat non proident sunt in\nculpa qui officia deserunt mollit anim id est laborum\n\"\"\"\n\nexpected_output = \"\"\"\n+------------------------+-+\n|exercitation ullamco    |^|\n|laboris nisi ut aliquip | |\n|ex ea commodo consequat |X|\n|Duis aute irure dolor in| |\n|reprehenderit in        |v|\n+------------------------+-+\n"
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\\n') == '+------------------------+-+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+-+'\n\nassert solution('24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\\n') == '+------------------------+-+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+-+'"
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do\\neiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad\\nminim veniam quis nostrud exercitation ullamco laboris nisi ut\\nalquip ex ea commodo consequat Duis aute irure dolor in\\nreprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\\npariatur Excepteur sint occaecat cupidatat non proident sunt in\\nculpa qui officia deserunt mollit anim id est laborum\\nSample Output:\\n+------------------------+-+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+-+\\ndef solution(stdin: str) -> str:\\n    pass\\n\") == \"exercitation ullamco    ^\\nlaboratoris nisi ut aliquip |\\nex ea commodo consequat |X|\\nDuis aute irure dolor in\\nreprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"possible\"\n\nfrom typing import List"
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0') == 'possible'"
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"possible\", \"The output is incorrect.\"\n"
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"possible\"\nassert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n\\n4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n\\n4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n\\n4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n\\n4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n\\n4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n\\n4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n\\n4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n\\n4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n\\n4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n\\n4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"possible\"\nassert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n\\n4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n\\n4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n\\n4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n\\n4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n\\n4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n\\n4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n\\n4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n\\n4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n\\n4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n\\n4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n\\n4"
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n4 10\n0 3 2 1\n3 0 1 3\n2 1 0 2\n1 3 2 0\n''') == 'possible'\n\nassert solution('''\n5 12\n-1 1 2 -1 1\n-2 1 1 1 1\n2 -1 1 -1 1\n-1 2 -1 1 1\n1 -1 1 1 -1\n''') == 'impossible'"
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"possible\"\n"
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 'possible'"
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"possible\"\n\nfrom typing import List"
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"possible\""
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"2 1 1\\n1\\n2\\n\") == \"1.00000000\\n\""
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 1 1\\n1\\n2\\n') == '1.00000000'\nassert solution('1\\n1\\n1\\n') == '1.00000000'\nassert solution('1 2\\n1 1\\n') == '1.00000000'\nassert solution('1 1\\n1\\n1\\n') == '1.00000000'"
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 1 1\\n1\\n2') == '1.00000000'"
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"2 1 1\\n1\\n2\"\n) == \"1.00000000\"\nassert solution(\n    \"10 1 2\\n1\\n2\\n3\\n10\"\n) == \"2.50000000\"\nassert solution(\n    \"10 1 2\\n1\\n2\\n3\\n10\\n\"\n) == \"2.50000000\"\nassert solution(\n    \"5 1 3\\n1\\n2\\n3\\n\"\n) == \"0.00000000\"\nassert solution(\n    \"100 100 100\\n1\\n2\\n3\\n\"\n) == \"2.50000000\""
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1.00000000\\n\", \"Test case 1 failed\"\n\nCesar and Raul like betting and good food, in no particular order. They want to try out a new fancy restaurant and they decided to make a bet \u2013 they are going to play a game and the loser pays for dinner.\n\nThey have a box with $N$ balls. Each ball contains a distinct number between $1$ and $N$. Then, the game proceeds with these steps:\n\n1. Initially, each person picks $C$ distinct numbers between $1$ and $N$ and writes them down on a separate card.\n2. In each round, $D$ balls are drawn from the box uniformly at random. Cesar and Raul mark the ball numbers that appear on their respective card. The $D$ balls are then returned to the box.\n3. The game stops when a player has marked all the numbers he chose. That player is the winner. If both players finish at the same time, it is a draw and they will split the dinner.\n\nThey are quite eager to try out this new restaurant and they\u2019re now wondering: how many rounds will the game last until at least one of the players has marked all his numbers?\n\n-----Task-----\nGiven the number $N$ of balls, the number $D$ of balls they draw from the box in each round, the amount $C$ of numbers in their cards and the numbers they wrote down, find the expected number of rounds the game will last.\n\n-----Input-----\nThe first line of the input consists of three space separated integers: $N$, $D$, and $C$. $N$ is the number of balls, $D$ is the number of balls drawn in each round, and $C$ is the cards\u2019 size. Each of the following two lines contains $C$ space separated integers: the numbers Cesar and Raul wrote down, respectively.\n\n-----Constraints-----\n\n$1$\n\n$\\leq $\n\n$N$\n\n$\\leq $\n\n$50$\n\nNumber of balls in the box\n\n$1$\n\n$\\leq $\n\n$D$\n\n$\\leq $\n\n$\\min (10, N)$\n\nNumber of balls drawn in each round\n\n$1$\n\n$\\leq $\n\n$C$\n\n$\\leq $\n\n$\\min (10, N)$\n\nCards\u2019 sizeOutput\n\nThe output is the expected number of rounds of the game.\n\nThe result will be considered correct as long as the absolute error does not exceed $10^{-3}$.\n\n-----Explanation for Sample Input 1-----\nThere are $2$ balls. Cesar picked number $1$ and Raul picked number $2$. In the first round, either number $1$ or $2$ will be drawn and so one of them wins right away.\n\n-----Examples-----\nSample Input:\n2 1 1\n1\n2\nSample Output:\n1.00000000\n"
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1.00000000\""
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"1.00000000\""
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1 1\\n1\\n2\\n\") == \"1.00000000\\n\"\n"
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 1 1\\n1\\n2\\n') == '1.00000000'"
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1 1\\n1\\n2\\n\") == \"1.00000000\"\nassert solution(\"4 2 2\\n1\\n2\\n3\\n\") == \"1.00000000\"\nassert solution(\"1 5 5\\n1\\n2\\n3\\n\") == \"1.00000000\"\nassert solution(\"1 1 1\\n1\\n2\\n3\\n\") == \"1.00000000\"\nassert solution(\"1 2 3\\n1\\n2\\n3\\n\") == \"1.00000000\"\nassert solution(\"1 4 5\\n1\\n2\\n3\\n\") == \"1.00000000\"\nassert solution(\"1 3 5\\n1\\n2\\n3\\n\") == \"1.00000000\"\nassert solution(\"1 4 6\\n1\\n2\\n3\\n\") == \"1.00000000\"\nassert solution(\"1 5 7\\n1\\n2\\n3\\n\") == \"1.00000000\"\nassert solution(\"1 6 8\\n1\\n2\\n3\\n\") == \"1.00000000\"\nassert solution(\"1 7 9\\n1\\n2\\n3\\n\") == \"1.00000000\"\nassert solution(\"1 8 10\\n1\\n2\\n3\\n\") == \"1.00000000\"\nassert solution(\"1 9 11\\n1\\n2\\n3\\n\") == \"1.00000000\"\nassert solution(\"1 10 12\\n1\\n2\\n3\\n\") == \"1.00000000\"\nassert solution(\"1 11 13\\n1\\n2\\n3\\n\") == \"1.00000000\"\nassert solution(\"1 12 14\\n1\\n2\\n3\\n\") == \"1.00000000\"\nassert solution(\"1 13 15\\n1\\n2\\n3\\n\") == \"1.00000000\"\nassert solution(\"1 14 16\\n1\\n2\\n3\\n\") == \"1.00000000\"\nassert solution(\"1 15 17\\n1\\n2\\n3\\n\") == \"1.00000000\"\nassert solution(\"1 16 18\\n1\\n2\\n3\\n\") == \"1.00000000\"\nassert solution(\"1 17 19\\n1\\n2\\n3\\n\") == \"1.00000000\"\nassert solution(\"1 18 20\\n1\\n2\\n3\\n\") == \"1.00000000\"\nassert solution(\"1 19 21\\n1\\n2\\n3\\n\") == \"1.00000000\"\nassert solution(\"1 20 22\\n1\\n2\\n3\\n\") == \"1.00000000\"\nassert solution(\"1 21 23\\n1\\n2\\n3\\n\") == \"1.00000000\"\nassert solution(\"1 22 24\\n1\\n2\\n3\\n\") == \"1.00000000\"\nassert solution(\"1 23 25\\n1\\n2\\n3\\n\") == \"1.00000000\"\nassert solution(\"1 24 26\\n1\\n2\\n3\\n\") == \"1.00000000\"\nassert solution(\"1 25 27\\n1\\n2\\n3\\n\") == \"1.00000000\"\nassert solution(\"1 26 2"
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin='5\\n5 4 3 3 2\\n3\\n1 2\\n1 1\\n2 4') == '2\\n1\\n3\\n'\n"
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input) == expected_output, f\"For input {input}, expected output {expected_output}, but got {solution(input)}\""
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected_output, f\"Solution is incorrect. Please see the provided examples and the problem statement for more details.\""
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"2\\n1\\n3\\n\"\nassert solution(open(\"sample_input.txt\", \"r\")) == \"2\\n1\\n3\\n\"\nassert solution(open(\"sample_output.txt\", \"r\")) == \"2\\n1\\n3\\n\""
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n5 4 3 3 2\\n3\\n1 2\\n1 1\\n2 4') == '2\\n1\\n3\\n'\nassert solution('3\\n1\\n2\\n3\\n') == '3\\n'"
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2\\n1\\n3\""
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '2\\n1\\n3\\n', 'The solution should return \"2\\n1\\n3\\n\".'"
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == [\"2\", \"1\", \"3\"]"
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n5 4 3 3 2\\n3\\n1 2\\n1 1\\n2 4\") == \"2\\n1\\n3\""
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n5 4 3 3 2\\n3\\n1 2\\n1 1\\n2 4') == '2\\n1\\n3\\n'\nassert solution('5\\n1 4 3 3 2\\n3\\n1 2\\n1 1\\n2 4') == '3\\n2\\n1\\n'\nassert solution('5\\n1 1 3 3 2\\n3\\n1 2\\n1 1\\n2 4') == '3\\n3\\n2\\n'\nassert solution('5\\n1 1 3 3 2\\n3\\n2 2\\n1 1\\n2 4') == '3\\n3\\n3\\n'"
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 2\\n0 1\\n1 2\\n0 2') == 1.0\nprint('All test cases pass')"
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1\", \"Solution should return '1' for the given sample input.\""
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"1\", \"Expected output: 1\""
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 2\\n0 1\\n1 2\\n0 2') == '1\\n'\n"
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n3 2\n0 1\n1 2\n0 2\n''') == '1\\n'"
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 2\\n0 1\\n1 2\\n0 2') == '1'\nassert solution('4 4\\n0 1\\n1 2\\n1 3') == '0.5'\nassert solution('5 3\\n0 1\\n1 2\\n2 3') == '1.2'\nassert solution('2 1\\n0 1\\n1 1\\n2 0') == 'never meet'"
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n3 2\n0 1\n1 2\n0 2\n''') == '1'\n\nassert solution('''\n3 2\n1 2\n0 1\n2 0\n''') == '1'\n\nassert solution('''\n3 2\n0 1\n1 2\n0 2\n''') == 'never meet'\n\nassert solution('''\n3 2\n1 2\n0 1\n2 0\n''') == '0'\n\nassert solution('''\n3 2\n0 1\n1 2\n0 2\n''') == 'never meet'\n\nassert solution('''\n3 2\n1 2\n0 1\n2 0\n''') == 'never meet'\n\nassert solution('''\n3 2\n1 0\n0 1\n2 0\n''') == '1'\n\nassert solution('''\n3 2\n0 1\n1 2\n0 2\n''') == '1'\n\nassert solution('''\n3 2\n0 1\n1 2\n0 2\n''') == 'never meet'\n\nassert solution('''\n3 2\n1 2\n0 1\n2 0\n''') == 'never meet'\n\nassert solution('''\n3 2\n1 0\n0 1\n2 0\n''') == 'never meet'\n\nassert solution('''\n3 2\n1 2\n0 1\n2 0\n''') == 'never meet'\n\nassert solution('''\n3 2\n1 0\n0 1\n2 0\n''') == 'never meet'\n\nassert solution('''\n3 2\n1 2\n0 1\n2 0\n''') == 'never meet'\n\nassert solution('''\n3 2\n1 0\n0 1\n2 0\n''') == 'never meet'"
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == 1\nassert solution(\"3 2\\n0 1\\n1 2\\n0 3\") == 1\nassert solution(\"3 2\\n0 1\\n1 2\\n0 4\") == 0\nassert solution(\"3 2\\n0 1\\n1 2\\n0 5\") == 1\nassert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == 1\nassert solution(\"3 2\\n0 1\\n1 2\\n0 2\\n0 3\") == 1\nassert solution(\"3 2\\n0 1\\n1 2\\n0 2\\n0 4\") == 1\nassert solution(\"3 2\\n0 1\\n1 2\\n0 2\\n0 5\") == 1\nassert solution(\"3 2\\n0 1\\n1 2\\n0 3\\n0 4\") == 1\nassert solution(\"3 2\\n0 1\\n1 2\\n0 3\\n0 5\") == 1\nassert solution(\"3 2\\n0 1\\n1 2\\n0 4\\n0 5\") == 1\nassert solution(\"3 2\\n0 1\\n1 2\\n0 5\\n0 6\") == 1\nassert solution(\"3 2\\n0 1\\n1 2\\n0 6\\n0 7\") == 1\nassert solution(\"3 2\\n0 1\\n1 2\\n0 7\\n0 8\") == 1\nassert solution(\"3 2\\n0 1\\n1 2\\n0 8\\n0 9\") == 1\nassert solution(\"3 2\\n0 1\\n1 2\\n0 9\\n0 10\") == 1\nassert solution(\"3 2\\n0 1\\n1 2\\n0 10\\n0 11\") == 1\nassert solution(\"3 2\\n0 1\\n1 2\\n0 11\\n0 12\") == 1\nassert solution(\"3 2\\n0 1\\n1 2\\n0 12\\n0 13\") == 1\nassert solution(\"3 2\\n0 1\\n1 2\\n0 13\\n0 14\") == 1\nassert solution(\"3 2\\n0 1\\n1 2\\n0 14\\n0 15\") == 1\nassert solution(\"3 2\\n0 1\\n1 2\\n0 15\\n0 16\") == 1\nassert solution(\"3 2\\n0 1\\n1 2\\n0 16\\n0 17\") == 1\nassert solution(\"3 2\\n0 1\\n1 2\\n0 17\\n0 18\") == 1\nassert solution(\"3 2\\n0 1\\n1 2\\n0 18\\n0 19\") == 1\nassert solution(\"3 2\\n0 1\\n1 2\\n0 19\\n0 20\") == 1\nassert solution(\"3 2\\n0 1\\n1 2\\n0 20\\n0 21\") == 1\nassert solution(\"3 2\\n0 1\\n1 2\\n0 21\\n0 22\") == 1\nassert solution(\"3 2\\n0 1\\n1 2\\n0 22\\n0 23\") == 1\nassert solution(\"3 2\\n0 1\\n1 2\\n0 23\\n0 24\") == 1\nassert solution(\"3 2\\n0 1\\n1 2\\n0 24\\n0 25\") == 1\nassert solution(\"3 2\\n0 1\\n1 2\\n0 25\\n0 26\") == 1\nassert solution(\"3 2\\n0 1\\n1 2\\n0 26\\n0 "
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == 1\nassert solution(\"4 4\\n0 1\\n1 2\\n0 2\") == 1\nassert solution(\"3 2\\n0 1\\n1 2\\n0 3\") == 1\nassert solution(\"3 2\\n0 1\\n1 2\\n1 3\") == 1\nassert solution(\"4 4\\n0 1\\n1 2\\n0 3\") == 1\nassert solution(\"5 4\\n0 1\\n1 2\\n0 3\") == 1\nassert solution(\"3 2\\n0 1\\n1 2\\n1 3\") == 1\nassert solution(\"5 4\\n0 1\\n1 2\\n0 3\") == 1\nassert solution(\"4 4\\n0 1\\n1 2\\n1 3\") == 1\nassert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == 2\nassert solution(\"4 4\\n0 1\\n1 2\\n1 3\") == 2\nassert solution(\"5 4\\n0 1\\n1 2\\n0 2\") == 2\nassert solution(\"4 4\\n0 1\\n1 2\\n0 2\") == 2\nassert solution(\"5 4\\n0 1\\n1 2\\n0 2\") == 2\nassert solution(\"4 4\\n0 1\\n1 2\\n0 3\") == 2\nassert solution(\"3 2\\n0 1\\n1 2\\n1 3\") == 2\nassert solution(\"4 4\\n0 1\\n1 2\\n0 3\") == 2\nassert solution(\"5 4\\n0 1\\n1 2\\n1 3\") == 2\nassert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == 3\nassert solution(\"4 4\\n0 1\\n1 2\\n1 3\") == 3\nassert solution(\"5 4\\n0 1\\n1 2\\n0 3\") == 3\nassert solution(\"4 4\\n0 1\\n1 2\\n0 3\") == 3\nassert solution(\"5 4\\n0 1\\n1 2\\n0 3\") == 3\nassert solution(\"3 2\\n0 1\\n1 2\\n1 3\") == 3\nassert solution(\"4 4\\n0 1\\n1 2\\n0 3\") == 3\nassert solution(\"5 4\\n0 1\\n1 2\\n1 3\") == 3\nassert solution(\"4 4\\n0 1\\n1 2\\n1 3\") == 3\nassert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == 4\nassert solution(\"4 4\\n0 1\\n1 2\\n1 3\") == 4\nassert solution(\"5 4\\n0 1\\n1 2\\n0 3\") == 4\nassert solution(\"4 4\\n0 1\\n1 2\\n0 3\") == 4\nassert solution(\"5 4\\n0 1\\n1 2\\n0 3\") == 4\nassert solution(\"4 4\\n0 1\\n1 2\\n0 3\") == 4\nassert solution(\"3 2\\n0 1\\n1 2\\n1 3\") == 4\nassert solution(\"4 4\\n0 1\\n1 2\\n0 3\") == 4\nassert solution(\"5 4\\n0 1\\n1 2\\n1 3\") == 4\nassert solution(\"4 4\\n0 1\\n1 2\\n0 3\") == 4\nassert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == 5\nassert solution(\"4 4\\n0 1\\n1 2\\n1 3\") == 5\nassert solution(\"5 4\\n0 1\\"
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == \"1\""
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 4 2\") == 14500000001, \"The probability of evading capture can be uniquely represented as an irreducible fraction 14500000001\""
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 4 2\") == \"14500000001\", \"Expected Output: 14500000001, but got: \" + solution(\"5 4 2\")"
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 4 2\") == 14500000001, \"The given code is incorrect\""
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 4 2\") == \"14500000001\""
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 4 2\") == 14500000001, \"The output should be 14500000001\"\nassert solution(\"10 4 4\") == 10000000000, \"The output should be 10000000000\""
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(10, 10, 10) == 14500000001"
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '14500000001'\nassert solution('5 4 2\\n5 4 3') == '14500000001'"
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 4 2\") == \"14500000001\", \"The output should be '14500000001', but it is: '{}'.\".format(solution(\"5 4 2\"))\nassert solution(\"7 5 4\") == \"16380000001\", \"The output should be '16380000001', but it is: '{}'.\".format(solution(\"7 5 4\"))\nassert solution(\"3 4 5\") == \"6710886401\", \"The output should be '6710886401', but it is: '{}'.\".format(solution(\"3 4 5\"))\nassert solution(\"7 6 3\") == \"21390000001\", \"The output should be '21390000001', but it is: '{}'.\".format(solution(\"7 6 3\"))\nassert solution(\"4 2 5\") == \"15500000001\", \"The output should be '15500000001', but it is: '{}'.\".format(solution(\"4 2 5\"))"
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 4 2\") == \"14500000001\"\nassert solution(\"1000000 1000000 1000000\") == \"10000000001\"\nassert solution(\"3 3 2\") == \"30\"\nassert solution(\"5 5 5\") == \"10\"\nassert solution(\"1000000000000 1000000000000 1000000000000\") == \"1000000000000\""
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"5 4 2\") == \"14500000001\""
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\\n1\\n3\\n1\\n2\\n\") == \"0\\n1\\n1\\n2\\n\"\nassert solution(\"10\\n2\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\") == \"0\\n1\\n1\\n1\\n2\\n\"\nassert solution(\"5\\n0\\n0\\n1\\n1\\n1\\n1\\n\") == \"0\\n1\\n1\\n1\\n1\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"0\\n1\\n1\\n2\\n\""
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n1 4\\n3 7\\n1 6\\n2 6') == '0\\n1\\n1\\n2'"
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 4\\n3 7\\n1 6\\n2 6\") == \"0\\n1\\n1\\n2\""
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == expected_output, f\"Test failed. Expected output: {expected_output}, but got: {solution(sample_input)}\""
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"0\\n1\\n1\\n2\""
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Incorrect output. Expected: '{output}', got: '{solution(input())}'\"\n"
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin='4\\n1 4\\n3 7\\n1 6\\n2 6') == '0\\n1\\n1\\n2'"
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"0\\n1\\n1\\n2\\n\""
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n4\\n1\\n6\\n2\\n6\\n\") == \"0\\n1\\n1\\n2\\n\", \"Example 1\"\n\nassert solution(\"1\\n4\\n1\\n6\\n2\\n6\\n\") == \"0\\n1\\n1\\n2\\n\", \"Example 2\"\n\nassert solution(\"1\\n4\\n3\\n7\\n1\\n6\\n2\\n6\\n\") == \"0\\n1\\n1\\n2\\n\", \"Example 3\"\n\nassert solution(\"1\\n4\\n1\\n6\\n2\\n6\\n\") == \"0\\n1\\n1\\n2\\n\", \"Example 4\""
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"3100\""
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '3100\\n'"
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"3100\""
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution\n"
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '3100'\n"
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == \"3100\\n\""
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300') == '3100'\nassert solution('5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n') == '3100'"
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Solution({input()}) is incorrect. Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"3100\\n\""
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n\") == \"3100\"\nassert solution(\"5 2\\n1 2 1000\\n2 3 1000\\n4 5 500\\n1\\n1 2 1000\\n2 3 1000\\n\") == \"1000\"\nassert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n1\\n1 2 1000\\n2 3 1000\\n\") == \"1000\"\nassert solution(\"5 2\\n1 2 1000\\n2 3 1000\\n4 5 500\\n1\\n1 2 1000\\n2 3 1000\\n\") == \"1000\"\nassert solution(\"5 2\\n1 2 1000\\n2 3 1000\\n4 5 500\\n1\\n1 2 1000\\n2 3 1000\\n\") == \"1000\"\nassert solution(\"5 2\\n1 2 1000\\n2 3 1000\\n4 5 500\\n1\\n1 2 1000\\n2 3 1000\\n\") == \"1000\"\nassert solution(\"5 2\\n1 2 1000\\n2 3 1000\\n4 5 500\\n1\\n1 2 1000\\n2 3 1000\\n\") == \"1000\"\nassert solution(\"5 2\\n1 2 1000\\n2 3 1000\\n4 5 500\\n1\\n1 2 1000\\n2 3 1000\\n\") == \"1000\"\nassert solution(\"5 2\\n1 2 1000\\n2 3 1000\\n4 5 500\\n1\\n1 2 1000\\n2 3 1000\\n\") == \"1000\"\nassert solution(\"5 2\\n1 2 1000\\n2 3 1000\\n4 5 500\\n1\\n1 2 1000\\n2 3 1000\\n\") == \"1000\"\nassert solution(\"5 2\\n1 2 1000\\n2 3 1000\\n4 5 500\\n1\\n1 2 1000\\n2 3 1000\\n\") == \"1000\"\nassert solution(\"5 2\\n1 2 1000\\n2 3 1000\\n4 5 500\\n1\\n1 2 1000\\n2 3 1000\\n\") == \"1000\"\nassert solution(\"5 2\\n1 2 1000\\n2 3 1000\\n4 5 500\\n1\\n1 2 1000\\n2 3 1000\\n\") == \"1000\"\nassert solution(\"5 2\\n1 2 1000\\n2 3 1000\\n4 5 500\\n1\\n1 2 1000\\n2 3 1000\\n\") == \"1000\"\nassert solution(\"5 2\\n1 2 1000\\n2 3 1000\\n4 5 500\\n1\\n1 2 1000\\n2 3 1000\\n\") =="
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13') == '5.250000000\\n'\nassert solution('4 3\\n2 10') == '2.000000000\\n'\nassert solution('4 4\\n1 16') == '1.666666667\\n'\nassert solution('4 6\\n1 32') == '1.666666667\\n'\nassert solution('4 8\\n1 64') == '1.666666667\\n'"
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13') == '5.250000000\\n'"
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"5.25\\n\""
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_str), \"Test Failed\""
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\") == \"5.250000000\\n\"\n\nimport math"
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\\n\") == \"5.250000000\""
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\") == \"5.250000000\""
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"5.250000000\\n\""
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\") == \"5.250000000\\n\"\nassert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\") == \"5.250000000\\n\""
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\") == \"5.250000000\"\n"
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '7\\n2\\n2\\n0\\n4'\n"
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"7\\n1 2 3 1 2 1 1\\n5\\n1 3 1 2 3\\n1 2 1 2\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2\") == \"7\\n2\\n2\\n0\\n4\""
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected, f\"Expected '{expected}', got '{solution(stdin)}'\""
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"7\\n2\\n2\\n0\\n4\""
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7\\n1 2 3 1 2 1 1\\n5\\n1 3 1 2 3\\n1 2 1 2\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2\\n\") == \"7\\n2\\n2\\n0\\n4\""
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(stdin)}\"\n"
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('7\\n1 2 3 1 2 1 1\\n5\\n1 3 1 2 3\\n1 2 1 2\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2') == '7\\n2\\n2\\n0\\n4'"
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"7\\n2\\n2\\n0\\n4\\n\""
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3 1 2 1 1\\n5\\n1 3 1 2 3\\n1 2 1 2\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2\") == \"7\\n2\\n2\\n0\\n4\"\n\nassert solution(\"7\\n1 2 3 1 2 1 1\\n5\\n1 3 1 2 3\\n1 2 1 2\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2\") == \"7\\n2\\n2\\n0\\n4\"\n\nassert solution(\"2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('7\\n1 2 3 1 2 1 1\\n5\\n1 3 1 2 3\\n1 2 1 2\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2\\n') == '7\\n2\\n2\\n0\\n4'"
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"The expected output is {expected}, but got {solution(input())}.\""
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"32.6405451448\""
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n40 30 30 40 20 40 50 30 30 50\\n0.0 0.0 0.45 0.45 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.2 0.2 0.2 0.2 0.2\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.8 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.8 0.0 0.0 0.0 0.2\") == 32.6405451448\n"
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    4\n    40 30 30 40 20 40 50 30 30 50\n    0.0 0.0 0.45 0.45 0.1\n    0.0 0.3 0.3 0.3 0.1\n    0.3 0.0 0.3 0.3 0.1\n    0.0 0.3 0.3 0.3 0.1\n    0.2 0.2 0.2 0.2 0.2\n    0.3 0.0 0.3 0.3 0.1\n    0.0 0.8 0.0 0.0 0.2\n    0.4 0.4 0.0 0.0 0.2\n    0.4 0.4 0.0 0.0 0.2\n    0.8 0.0 0.0 0.0 0.2\n    \"\"\"\n) == \"32.6405451448\"  # expected output\n"
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    4\n    40 30 30 40 20 40 50 30 30 50\n    0.0 0.0 0.45 0.45 0.1\n    0.0 0.3 0.3 0.3 0.1\n    0.3 0.0 0.3 0.3 0.1\n    0.0 0.3 0.3 0.3 0.1\n    0.2 0.2 0.2 0.2 0.2\n    0.3 0.0 0.3 0.3 0.1\n    0.0 0.8 0.0 0.0 0.2\n    0.4 0.4 0.0 0.0 0.2\n    0.4 0.4 0.0 0.0 0.2\n    0.8 0.0 0.0 0.0 0.2\n    \"\"\"\n) == \"32.6405451448\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n40 30 30 40 20 40 50 30 30 50\\n0.0 0.0 0.45 0.45 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.2 0.2 0.2 0.2 0.2\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.8 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.8 0.0 0.0 0.0 0.2\") == \"32.6405451448\\n\"\nassert solution(\"4\\n40 30 30 40 20 40 50 30 30 50\\n0.0 0.0 0.45 0.45 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.2 0.2 0.2 0.2 0.2\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.8 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.8 0.0 0.0 0.0 0.2\") == \"32.6405451448\\n\"\nassert solution(\"4\\n40 30 30 40 20 40 50 30 30 50\\n0.0 0.0 0.45 0.45 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.2 0.2 0.2 0.2 0.2\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.8 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.8 0.0 0.0 0.0 0.2\") == \"32.6405451448\\n\"\n"
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}, Received: {solution(input())}\""
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n40 30 30 40 20 40 50 30 30 50\\n0.0 0.0 0.45 0.45 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.2 0.2 0.2 0.2 0.2\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.8 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.8 0.0 0.0 0.0 0.2\") == \"32.6405451448\"\n"
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n40 30 30 40 20 40 50 30 30 50\\n0.0 0.0 0.45 0.45 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.2 0.2 0.2 0.2 0.2\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.8 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.8 0.0 0.0 0.0 0.2\") == \"32.6405451448\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n40 30 30 40 20 40 50 30 30 50\\n0.0 0.0 0.45 0.45 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.2 0.2 0.2 0.2 0.2\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.8 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.8 0.0 0.0 0.0 0.2\") == \"32.6405451448\\n\", \"Expected output: 32.6405451448, but got: \" + solution(\"4\\n40 30 30 40 20 40 50 30 30 50\\n0.0 0.0 0.45 0.45 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.2 0.2 0.2 0.2 0.2\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.8 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.8 0.0 0.0 0.0 0.2\")"
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n4\n2 1 4 3\n''') == '''\n2 3 4 1\n'''\n\nassert solution('''\n4\n1 2 3 4\n''') == '''\n1 4 2 3\n'''\n\nassert solution('''\n4\n1 2 3 4\n''') == '''\n1 4 2 3\n'''\n\nassert solution('''\n4\n1 2 3 4\n''') == '''\n1 4 2 3\n'''"
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n4\n2 1 4 3\n\"\"\") == \"\"\"\n2 3 4 1\n\"\"\""
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '''\n2\n3\n4\n1\n'''\n\nfrom typing import List"
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '''2 3 4 1'''"
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n    4\n    2 1 4 3\n    \"\"\") == \"\"\"\n    2 3 4 1\n    \"\"\"\n\nassert solution(\"\"\"\n    4\n    2 1 4 3\n    2 4 3 1\n    \"\"\") == \"\"\"\n    3 4 1 2\n    \"\"\"\n\nassert solution(\"\"\"\n    4\n    2 1 4 3\n    2 4 3 1\n    2 5 3 1\n    \"\"\") == \"\"\"\n    3 4 2 1\n    \"\"\"\n\nassert solution(\"\"\"\n    4\n    2 1 4 3\n    2 4 3 1\n    2 5 3 1\n    2 6 3 1\n    \"\"\") == \"\"\"\n    3 5 2 1\n    \"\"\"\n\nassert solution(\"\"\"\n    4\n    2 1 4 3\n    2 4 3 1\n    2 5 3 1\n    2 6 3 1\n    2 7 3 1\n    \"\"\") == \"\"\"\n    3 6 2 1\n    \"\"\""
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n2 1 4 3\\n') == '2 3 4 1'"
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\na_1, a_2, \\ldots, a_n\\n1\\na_1, a_3, a_4, a_2\\n2\\na_2, a_4, a_1, a_3\\n3\\na_1, a_3, a_4, a_2\\n4\\na_2, a_4, a_1, a_3\\n1\\na_1, a_3, a_4, a_2\\n2\\na_2, a_4, a_1, a_3\\n3\\na_1, a_3, a_4, a_2\\n4\\na_2, a_4, a_1, a_3\\n1\\na_1, a_3, a_4, a_2\\n2\\na_2, a_4, a_1, a_3\\n3\\na_1, a_3, a_4, a_2\\n4\\na_2, a_4, a_1, a_3\\n1\\na_1, a_3, a_4, a_2\\n2\\na_2, a_4, a_1, a_3\\n3\\na_1, a_3, a_4, a_2\\n4\\na_2, a_4, a_1, a_3\\n1\\na_1, a_3, a_4, a_2\\n2\\na_2, a_4, a_1, a_3\\n3\\na_1, a_3, a_4, a_2\\n4\\na_2, a_4, a_1, a_3\\n1\\na_1, a_3, a_4, a_2\\n2\\na_2, a_4, a_1, a_3\\n3\\na_1, a_3, a_4, a_2\\n4\\na_2, a_4, a_1, a_3\\n1\\na_1, a_3, a_4, a_2\\n2\\na_2, a_4, a_1, a_3\\n3\\na_1, a_3, a_4, a_2\\n4\\na_2, a_4, a_1, a_3\\n1\\na_1, a_3, a_4, a_2\\n2\\na_2, a_4, a_1, a_3\\n3\\na_1, a_3, a_4, a_2\\n4\\na_2, a_4, a_1, a_3\\n1\\na_1, a_3, a_4, a_2\\n2\\na_2, a_4, a_1, a_3\\n3\\na_1, a_3, a_4, a_2\\n4\\na_2, a_4, a_1, a_3\\n1\\na_1, a_3, a_4, a_2\\n2\\na_2, a_4, a_1, a_3\\n3\\na_1, a_3, a_4, a_2\\n4\\na_2, a_4, a_1, a_3\\n1\\na_1, a_3, a_4, a_2\\n2\\na_2, a_4, a_1, a_3\\n3\\na_1, a_3, a_4, a_2\\n4\\na_2, a_4, a_1, a_3\\n1\\na_1, a_3, a_4, a_2\\n2\\na_2, a_4, a_1, a_3\\n3\\na_1, a_3, a_4, a_2\\n4\\na_2, a_4, a_1, a_3\\n1\\na_1, a_3, a_4, a_2\\n2\\na_2, a_4, a_1, a_3\\n3\\na_1, a_3, a_4, a_2\\n4\\na_2, a_4, a_1, a_3\\n1\\na_1, a_3, a_4, a_2"
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n2 1 4 3\") == \"2 3 4 1\""
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt').read()) == '2 3 4 1'"
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Expected: {output}, got: {solution(input())}\"\nprint(output)"
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n\") == \"7.656854249492381\""
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n\"\n"
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"7.656854249492381\"\nassert solution(stdin) == \"7.656854249492381\"\nassert solution(stdin) == \"7.656854249492381\"\nassert solution(stdin) == \"7.656854249492381\"\nassert solution(stdin) == \"7.656854249492381\"\nassert solution(stdin) == \"7.656854249492381\""
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\") == \"7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\""
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\") == \"7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\""
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n\") == \"7.656854249492381\"\nassert solution(\"4\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n\") == \"10.129725423000538\"\nassert solution(\"7\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n\") == \"13.186645830391302\"\nassert solution(\"5\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n\") == \"11.80160924164058\"\nassert solution(\"8\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n\") == \"14.822562689120137\"\nassert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n\") == \"12.05185283762955\"\nassert solution(\"10\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n\") == \"15.167206915651502\"\nassert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n\") == \"10.832793084348498\"\nassert solution(\"10\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n\") == \"15.167206915651502\"\nassert solution(\"5\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n\") == \"9.972561251398943\"\nassert solution(\"10\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n\") == \"15.167206915651502\"\nassert solution(\"5\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n\") == \"9.972561251398943\"\nassert solution(\"10\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n\") == \"15.167206915651502\"\nassert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n\") == \"10.832793084348498\"\nassert solution(\"10\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n\") == \"15.167206915651502\"\nassert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n\") == \"10.832793084348498\"\nassert solution(\"10\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n\") == \"15.167206915651502\"\nassert solution(\"6\\n1 2\\n1 3\\n2 4\\n3"
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n\") == \"7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n\"\nassert solution(\"6\\n2 3\\n1 4\\n1 5\\n3 6\\n2 7\\n\") == \"12.603570667796602\\n12.603570667796602\\n12.603570667796602\\n12.603570667796602\\n12.603570667796602\\n12.603570667796602\\n\""
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n\") == \"7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n\"\nassert solution(\"1000\\n1 2\\n3 4\\n7 8\\n5 6\\n9 10\\n11 12\\n13 14\\n15 16\\n17 18\\n19 20\\n21 22\\n23 24\\n25 26\\n27 28\\n31 32\\n33 34\\n35 36\\n37 38\\n39 40\\n41 42\\n43 44\\n45 46\\n47 48\\n51 52\\n53 54\\n55 56\\n57 58\\n59 60\\n61 62\\n63 64\\n65 66\\n67 68\\n71 72\\n73 74\\n75 76\\n77 78\\n81 82\\n83 84\\n85 86\\n87 88\\n91 92\\n93 94\\n95 96\\n97 98\\n101 102\\n103 104\\n105 106\\n107 108\\n111 112\\n113 114\\n115 116\\n117 118\\n121 122\\n123 124\\n125 126\\n127 128\\n131 132\\n133 134\\n135 136\\n137 138\\n141 142\\n143 144\\n145 146\\n147 148\\n151 152\\n153 154\\n155 156\\n157 158\\n161 162\\n163 164\\n165 166\\n167 168\\n171 172\\n173 174\\n175 176\\n177 178\\n181 182\\n183 184\\n185 186\\n187 188\\n191 192\\n193 194\\n195 196\\n197 198\\n201 202\\n203 204\\n205 206\\n207 208\\n211 212\\n213 214\\n215 216\\n217 218\\n221 222\\n223 224\\n225 226\\n227 228\\n231 232\\n233 234\\n235 236\\n237 238\\n241 242\\n243 244\\n245 246\\n247 248\\n251 252\\n253 254\\n255 2"
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1') == 7.656854249492381, \"Incorrect Answer\""
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0') == 2\nassert solution('1 1\\n2 2\\n3 3\\n4 4\\n5 5') == 5\nassert solution('5 5\\n1 1\\n2 2\\n3 3\\n4 4') == 0"
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2"
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2, \"The output should be 2\"\n"
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == \"2\""
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2\n"
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2"
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(None) == \"Please enter the number of onions and fence posts\"\nassert solution(\"\") == \"Please enter the number of onions and fence posts\"\nassert solution(\"3 5 3\") == \"Please enter the number of onions and fence posts\"\nassert solution(\"2 5 3\") == \"Please enter the number of onions and fence posts\"\nassert solution(\"3 3 3\") == \"Please enter the number of onions and fence posts\""
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 2\nprint(\"Test Passed\")"
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2"
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 2\n"
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 1') == '9\\n'"
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 9, \"Incorrect output for the given input.\""
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1\") == \"9\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"9\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1\\n\") == \"9\\n\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == sample_output, f\"Test failed: {solution(sample_input)}!= {sample_output}\""
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1\") == \"9\"\n"
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 1') == '9'\n"
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1\\n\") == \"9\\n\"\nassert solution(\"3 1\\n\") == \"9\\n\"\nassert solution(\"2 2\\n\") == \"9\\n\"\nassert solution(\"3 2\\n\") == \"9\\n\"\nassert solution(\"1 2\\n\") == \"3\\n\"\nassert solution(\"1 3\\n\") == \"3\\n\"\nassert solution(\"1 4\\n\") == \"3\\n\"\nassert solution(\"1 5\\n\") == \"3\\n\"\nassert solution(\"1 6\\n\") == \"3\\n\"\nassert solution(\"1 7\\n\") == \"3\\n\"\nassert solution(\"1 8\\n\") == \"3\\n\"\nassert solution(\"1 9\\n\") == \"3\\n\"\nassert solution(\"2 3\\n\") == \"9\\n\"\nassert solution(\"2 4\\n\") == \"9\\n\"\nassert solution(\"2 5\\n\") == \"9\\n\"\nassert solution(\"2 6\\n\") == \"9\\n\"\nassert solution(\"2 7\\n\") == \"9\\n\"\nassert solution(\"2 8\\n\") == \"9\\n\"\nassert solution(\"2 9\\n\") == \"9\\n\"\nassert solution(\"3 4\\n\") == \"9\\n\"\nassert solution(\"3 5\\n\") == \"9\\n\"\nassert solution(\"3 6\\n\") == \"9\\n\"\nassert solution(\"3 7\\n\") == \"9\\n\"\nassert solution(\"3 8\\n\") == \"9\\n\"\nassert solution(\"3 9\\n\") == \"9\\n\"\nassert solution(\"4 5\\n\") == \"9\\n\"\nassert solution(\"4 6\\n\") == \"9\\n\"\nassert solution(\"4 7\\n\") == \"9\\n\"\nassert solution(\"4 8\\n\") == \"9\\n\"\nassert solution(\"4 9\\n\") == \"9\\n\"\nassert solution(\"5 6\\n\") == \"9\\n\"\nassert solution(\"5 7\\n\") == \"9\\n\"\nassert solution(\"5 8\\n\") == \"9\\n\"\nassert solution(\"5 9\\n\") == \"9\\n\"\nassert solution(\"6 7\\n\") == \"9\\n\"\nassert solution(\"6 8\\n\") == \"9\\n\"\nassert solution(\"6 9\\n\") == \"9\\n\"\nassert solution(\"7 8\\n\") == \"9\\n\"\nassert solution(\"7 9\\n\") == \"9\\n\"\nassert solution(\"8 9\\n\") == \"9\\n\"\nassert solution(\"9 10\\n\") == \"9\\n\"\nassert solution(\"10 10\\n\") == \"9\\n\"\nassert solution(\"1 11\\n\") == \"3\\n\"\nassert solution(\"10 11\\n\") == \"9\\n\"\nassert solution(\"11 10\\n\") == \"9\\n\"\nassert solution(\"1 12\\n\") == \"3\\n\"\nassert solution(\"11 12\\n\") == \"9\\n\"\nassert solution(\"12 11\\n\") == \"9\\n\"\nassert solution(\"1 13\\n\") == \"3\\n\"\nassert solution(\"12 13\\n\") == \"9\\n\"\nassert solution(\"13 12\\n\") == \"9\\n\"\nassert solution(\"1 14\\n\") == \"3\\n\"\nassert solution(\"13 14\\n\") == \"9\\n\"\nassert solution(\"14 13\\n\") == \"9\\n\"\nassert solution(\"1 15\\n\") == \"3\\n\"\nassert solution(\"14 15\\n\") == \"9\\n\"\nassert solution(\"15 14\\n\") == \"9\\n\"\nassert solution(\"1 16\\n\") == \"3\\n\"\nassert solution(\"15 16\\n\") == \"9\\n\"\nassert solution(\"16 15\\n\") == \"9\\n\"\nassert solution(\"1 17\\n\") == \"3\\n\"\nassert solution(\"16 17\\n\") == \"9\\n"
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 1') == 9\n"
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(None) == ''\nassert solution('5\\n2\\n3\\n5\\n7\\n12') == '12\\n'\nassert solution('5\\n2\\n3\\n5\\n7\\n13\\n') == 'no solution\\n'\nassert solution('5\\n2\\n3\\n5\\n7\\n13\\n9') == 'no solution\\n'\nassert solution('5\\n2\\n3\\n5\\n7\\n13\\n10') == 'no solution\\n'"
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input) == output, \"Test case failed\"\nfor i in range(5):\n    input = f\"5\\n\"\n    output = \"12\\n\"\n    assert solution(input) == output, f\"Test case failed for input {i}\""
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=input()) == output, f\"Test case {i+1} failed\" for i, (input, output) in enumerate(zip(input_data, output_data))"
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution([5, 2, 3, 5, 7, 12]) == '12'\nassert solution([1, 2, 3, 4, 5]) == '5'\nassert solution([1, 2, 3, 4, 5, 6]) == 'no solution'\nassert solution([2, 1, 2, 3, 4]) == 'no solution'\nassert solution([1, 1, 1]) == 'no solution'"
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n2\\n3\\n5\\n7\\n12\") == \"12\""
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n2\\n3\\n5\\n7\\n12\") == \"12\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt').read()) == '12\\n'"
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"12\"\nassert solution(1) == \"no solution\"\nassert solution(4) == \"no solution\"\nassert solution(10) == \"no solution\"\nassert solution(100) == \"no solution\""
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\n2\\n3\\n5\\n7\\n12') == '12'\nprint('Correct')"
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2\\n3\\n5\\n7\\n12\\n\") == \"12\""
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n00\\n01\\n10\\n110\\n111\") == \"11\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"11\""
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(None) == \"def solution(stdin: str) -> str: \\n    pass\\n\"\nassert solution(\"\") == \"def solution(stdin: str) -> str: \\n    pass\\n\"\nassert solution(\"00\") == \"def solution(stdin: str) -> str: \\n    pass\\n\"\nassert solution(\"01\") == \"def solution(stdin: str) -> str: \\n    pass\\n\"\nassert solution(\"10\") == \"def solution(stdin: str) -> str: \\n    pass\\n\"\nassert solution(\"110\") == \"def solution(stdin: str) -> str: \\n    pass\\n\"\nassert solution(\"111\") == \"def solution(stdin: str) -> str: \\n    pass\\n\"\nassert solution
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n    5\n    00\n    01\n    10\n    110\n    111\n''') == '11'"
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"00\") == \"11\"\nassert solution(\"01\") == \"11\"\nassert solution(\"10\") == \"11\"\nassert solution(\"110\") == \"11\"\nassert solution(\"111\") == \"11\"\n\nfrom functools import cmp_to_key"
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n00\\n01\\n10\\n110\\n111\") == 11\nassert solution(\"5\\n00\\n01\\n10\\n110\\n111\\n111\\n110\\n010\\n100\\n111\\n100\\n101\\n101\\n101\\n011\\n111\\n110\\n101\\n111\\n111\\n010\\n011\\n101\\n101\\n001\\n110\\n110\\n110\\n010\\n110\\n111\\n101\\n100\\n000\\n001\\n100\\n011\\n101\\n101\\n000\\n110\\n111\\n111\\n011\\n101\\n101\\n001\\n100\\n001\\n001\\n010\\n110\\n011\\n111\\n100\\n110\\n101\\n110\\n110\\n110\\n010\\n011\\n101\\n101\\n001\\n100\\n001\\n001\\n010\\n110\\n011\\n111\\n100\\n110\\n101\\n110\\n110\\n110\\n010\\n011\\n101\\n101\\n001\\n100\\n001\\n001\\n010\\n110\\n011\\n111\\n100\\n110\\n101\\n110\\n110\\n110\\n010\\n011\\n101\\n101\\n001\\n100\\n001\\n001\\n010\\n110\\n011\\n111\\n100\\n110\\n101\\n110\\n110\\n110\\n010\\n011\\n101\\n101\\n001\\n100\\n001\\n001\\n010\\n110\\n011\\n111\\n100\\n110\\n101\\n110\\n110\\n110\\n010\\n011\\n101\\n101\\n001\\n100\\n001\\n001\\n010\\n110\\n011\\n111\\n100\\n110\\n101\\n110\\n110\\n110\\n010\\n011\\n101\\n101\\n001\\n100\\n001\\n001\\n010\\n110\\n011\\n111\\n100\\n110\\n101\\n110\\n110\\n110\\n010\\n011\\n101\\n101\\n001\\n100\\n001\\n001\\n010\\n110\\n011\\n111\\n100\\n110\\n101\\n110\\n110\\n110\\n010\\n011\\n101\\n101\\n001\\n100\\n001\\n001\\n010\\n110\\n011\\n111\\n1"
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"00\\n01\\n10\\n110\\n111\") == \"11\"\nassert solution(\"00\\n01\\n10\\n110\\n111\\n
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('00\\n01\\n10\\n110\\n111\\n') == 11, \"The output should be 11.\""
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\n00\\n01\\n10\\n110\\n111\\n') == '11'\nassert solution('5\\n00\\n01\\n10\\n110\\n111\\n00\\n01\\n10\\n110\\n111\\n') == '11'\nassert solution('5\\n00\\n01\\n10\\n110\\n111\\n111\\n00\\n01\\n10\\n110\\n111\\n') == '11'\nassert solution('5\\n00\\n01\\n10\\n110\\n111\\n111\\n111\\n00\\n01\\n10\\n110\\n111\\n') == '11'\nassert solution('5\\n00\\n01\\n10\\n110\\n111\\n111\\n111\\n111\\n00\\n01\\n10\\n110\\n111\\n') == '11'"
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n00\\n01\\n10\\n110\\n111\") == \"11\"\n"
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2\\n20 100\\n100 10\\n1\\n150 50\\n1\\n150 100\") == \"100 250 320\""
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n2\\n20 100\\n100 10\\n1\\n150 50\\n1\\n150 100') == '100 250 320\\n'"
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n2\\n20 100\\n100 10\\n1\\n150 50\\n1\\n150 100') == '100 250 320'"
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    3\n    2\n    20 100\n    100 10\n    1\n    150 50\n    1\n    150 100\n    \"\"\"\n) == \"100 250 320\""
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n2\\n20 100\\n100 10\\n1\\n150 50\\n1\\n150 100\\n') == '100 250 320\\n'"
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input) == output, f\"Input:\\n{input}\\nOutput:\\n{output}\\nSolution:\\n{solution(input)}\""
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"100 250 320\\n\""
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '100 250 320'"
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"100 250 320\""
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n2\\n20 100\\n100 10\\n1\\n150 50\\n1\\n150 100\") == \"100 250 320\"\n"
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('50 100') == '3 7 4 6 5 7 2 15 2'\n"
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    50 100\n    \"\"\"\n) == \"3 7 4 6 5 7 2 15 2\\n\"\n\nassert solution(\n    \"\"\"\n    3 50\n    \"\"\"\n) == \"3 7 4 6 5 7 2 15 2\\n\"\n\nassert solution(\n    \"\"\"\n    1000000000\n    \"\"\"\n) == \"9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 "
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"50 100\") == \"3 7 4 6 5 7 2 15 2\"\n"
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin='50 100') == '3 7 4 6 5 7 2 15 2'\n"
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"50 100\") == \"3 7 4 6 5 7 2 15 2\\n\""
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"50 100\") == \"3 7 4 6 5 7 2 15 2\\n\""
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"50 100\") == \"3 7 4 6 5 7 2 15 2\"\nassert solution(\"45 123\") == \"0 0 0 0 0 0 0 0 0 1\"\nassert solution(\"808 809\") == \"1 1 1 1 1 1 1 1 1 1\"\nassert solution(\"0 100\") == \"0 0 0 0 0 0 0 0 0 0\"\nassert solution(\"0 0\") == \"0 0 0 0 0 0 0 0 0 0\""
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"50 100\") == \"3 7 4 6 5 7 2 15 2\""
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(50, 100) == \"3 7 4 6 5 7 2 15 2\"\n\nassert solution(100, 150) == \"4 7 3 6 5 12 11 9 14 13\"\n\nassert solution(200, 300) == \"3 7 4 6 5 7 2 15 2\"\n\nassert solution(300, 400) == \"4 7 3 6 5 7 2 15 2\"\n\nassert solution(400, 500) == \"4 7 3 6 5 7 2 15 2\"\n\nassert solution(500, 600) == \"4 7 3 6 5 7 2 15 2\"\n\nassert solution(600, 700) == \"3 7 4 6 5 7 2 15 2\"\n\nassert solution(700, 800) == \"4 7 3 6 5 7 2 15 2\"\n\nassert solution(800, 900) == \"3 7 4 6 5 7 2 15 2\""
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('50 100') == '3 7 4 6 5 7 2 15 2', \"Test failed\""
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"40.0000000000\"\n"
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n4\n0 0\n0 14\n15 14\n15 0\n4\n8 3\n4 6\n7 10\n11 7\n\"\"\"\n) == \"40.0000000000\\n\""
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7\") == 40.0000000000, \"Test case 1 failed\"\nassert solution(\"0 0\\n0 15\\n15 15\\n15 14\\n4\\n8 3\\n4 6\\n7 10\\n11 7\") == 40.0000000000, \"Test case 2 failed\"\nassert solution(\"0 0\\n0 15\\n15 15\\n15 14\\n4\\n8 3\\n4 6\\n7 10\\n11 7\") == 40.0000000000, \"Test case 3 failed\"\nassert solution(\"0 0\\n0 15\\n15 15\\n15 14\\n4\\n8 3\\n4 6\\n7 10\\n11 7\") == 40.0000000000, \"Test case 4 failed\"\nassert solution(\"0 0\\n0 15\\n15 15\\n15 14\\n4\\n8 3\\n4 6\\n7 10\\n11 7\") == 40.0000000000, \"Test case 5 failed\""
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(4) == 40.0"
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7\") == 40.0\nprint(\"All tests passed successfully!\")"
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7\") == \"40.0000000000\\n\""
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 40.0, \"The solution should be 40.0\"\n\nfrom typing import List\nimport math"
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == 40.0"
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7\") == \"40.0000000000\""
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7\\n\") == \"40.0000000000\""
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1\\n1\\n\""
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"1\\n1\\n1\\n\""
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n1\n3\n2 1 3\n\"\"\"\n) == \"\"\"\n1\n1\n\"\"\"\n\nassert solution(\n    \"\"\"\n2\n3\n1 2 3\n\"\"\"\n) == \"\"\"\n2\n2\n\"\"\"\n\nassert solution(\n    \"\"\"\n3\n3\n1 2 3\n\"\"\"\n) == \"\"\"\n3\n3\n\"\"\"\n\nassert solution(\n    \"\"\"\n4\n3\n1 2 3 4\n\"\"\"\n) == \"\"\"\n3\n1\n\"\"\"\n\nassert solution(\n    \"\"\"\n5\n4\n1 2 3 4 5\n\"\"\"\n) == \"\"\"\n5\n1\n\"\"\"\n\nassert solution(\n    \"\"\"\n6\n5\n1 2 3 4 5 6\n\"\"\"\n) == \"\"\"\n6\n1\n\"\"\"\n\nassert solution(\n    \"\"\"\n7\n6\n1 2 3 4 5 6 7\n\"\"\"\n) == \"\"\"\n7\n1\n\"\"\"\n\nassert solution(\n    \"\"\"\n8\n7\n1 2 3 4 5 6 7 8\n\"\"\"\n) == \"\"\"\n8\n1\n\"\"\"\n\nassert solution(\n    \"\"\"\n9\n8\n1 2 3 4 5 6 7 8 9\n\"\"\"\n) == \"\"\"\n9\n1\n\"\"\"\n\nassert solution(\n    \"\"\"\n10\n9\n1 2 3 4 5 6 7 8 9 10\n\"\"\"\n) == \"\"\"\n9\n1\n\"\"\"\n\nassert solution(\n    \"\"\"\n11\n10\n1 2 3 4 5 6 7 8 9 10 11\n\"\"\"\n) == \"\"\"\n11\n1\n\"\"\"\n\nassert solution(\n    \"\"\"\n12\n11\n1 2 3 4 5 6 7 8 9 10 11 12\n\"\"\"\n) == \"\"\"\n11\n1\n\"\"\"\n\nassert solution(\n    \"\"\"\n13\n12\n1 2 3 4 5 6 7 8 9 10 11 12 13\n\"\"\"\n) == \"\"\"\n13\n1\n\"\"\"\n\nassert solution(\n    \"\"\"\n14\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13 14\n\"\"\"\n) == \"\"\"\n13\n1\n\"\"\"\n\nassert solution(\n    \"\"\"\n15\n14\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\n\"\"\"\n) == \"\"\"\n13\n1\n\"\"\"\n\nassert solution(\n    \"\"\"\n16\n15\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\n\"\"\"\n) == \"\"\"\n15\n1\n\"\"\"\n\nassert solution(\n    \"\"\"\n17\n16\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\n\"\"\"\n) == \"\"\"\n15\n1\n\"\"\"\n\nassert solution(\n    \"\"\"\n18\n17\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18\n\"\"\"\n) == \"\"\"\n15\n1\n\"\"\"\n\nassert solution(\n    \"\"\"\n19\n18\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\n\"\"\"\n) == \"\"\"\n15\n1\n\"\"\"\n\nassert solution(\n    \"\"\"\n20\n19\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n\"\"\"\n) == \"\"\"\n15\n1\n\"\"\"\n\nassert solution(\n    \"\"\"\n21\n20\n1 2 3 4 5 6 7 8 9 10 11 12 13 1"
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n3\\n2 1 3\") == \"1\\n1\\n\"\nassert solution(\"2\\n3\\n2 1 3\") == \"1\\n2\\n\"\n\nfrom collections import Counter"
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n3\\n2 1 3\") == \"1\\n1\\n\"\nassert solution(\"3\\n1\\n1 2\") == \"1\\n2\\n\"\nassert solution(\"2\\n2\\n1 2 3 4\") == \"2\\n1\\n2\\n3\\n\"\nassert solution(\"1\\n5\\n3 2 4 1\") == \"1\\n3\\n4\\n1\\n\"\nassert solution(\"1\\n2\\n1 1 1\") == \"1\\n1\\n\"\nassert solution(\"3\\n4\\n2 1 3 2\") == \"1\\n2\\n3\\n2\\n\"\nassert solution(\"1\\n1\\n1 1\") == \"1\\n1\\n\"\nassert solution(\"1\\n1\\n1 1\") == \"1\\n1\\n\""
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '1\\n1\\n'"
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n2 1 3\\n') == '1\\n1\\n'\nassert solution('1\\n3\\n2 1 3\\n') == '1\\n1\\n'\nassert solution('2\\n1\\n1 1\\n') == '2\\n2\\n'"
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"\"\"\n1\n1\n\"\"\"\n"
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output"
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n3\\n2 1 3\\n\") == \"1\\n1\\n\"\nprint(solution(\"1\\n3\\n2 1 3\\n\"))"
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '199 162', 'Test Case 1 Failed'\nassert solution() == '199 162', 'Test Case 2 Failed'\nassert solution() == 'None', 'Test Case 3 Failed'"
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"725.85 1.71 2.38\") == \"199 162\\n\""
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"725.85 1.71 2.38\") == \"199 162\"\n"
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"725.85 1.71 2.38\") == \"199 162\\n\"\nassert solution(\"10000.00 1000.00 200.00\") == \"0 0\\n\""
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"725.85 1.71 2.38\") == \"199 162\\n\"\nassert solution(\"10000.00 100.00 200.00\") == \"none\\n\""
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == output, f\"Incorrect output.\\nExpected: {output}\\nGot: {solution(stdin)}\""
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=None) == \"Output not provided\\n\""
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('725.85 1.71 2.38') == '199 162'\nassert solution('250.00 300.00 200.00') == '0 0'"
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"725.85 1.71 2.38\") == \"199 162\\n\"\nassert solution(\"1000.00 1000.00 1000.00\") == \"None\\n\"\nassert solution(\"1000.00 1000.00 500.00\") == \"None\\n\"\nassert solution(\"1000.00 1000.00 1000.00\") == \"None\\n\"\nassert solution(\"500.00 500.00 500.00\") == \"None\\n\"\nassert solution(\"500.00 500.00 1000.00\") == \"None\\n\"\nassert solution(\"500.00 500.00 500.00\") == \"None\\n\"\n"
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"199 162\\n\"\nprint(\"All tests passed successfully!\")"
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0') == '16\\ndef solution(stdin: str) -> str:\\n    pass'\n\nfrom typing import List"
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"16\""
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0\") == \"16\""
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == \"16\""
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Got {solution(input())}, expected {expected_output}\""
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0\") == \"16\\n\"\n"
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n5 3\n2 1 -1\n1 3 2\n0 2 3\n2 1 1\n3 3 0\n\"\"\") == \"16\""
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0\") == \"16\\n\"\n"
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0\") == 16, \"Incorrect result.\""
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 16, \"Please implement the solution\"\n"
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\nO 4\") == \"2 1 4\"\nassert solution(\"2\\nO 8\") == \"1 3 1\"\nassert solution(\"3\\nE 7\") == \"3 1 2\"\nassert solution(\"4\\nE 4\") == \"2 2 1\"\nassert solution(\"5\\nE 2\") == \"2 2 2\"\nassert solution(\"6\\nE 1\") == \"2 2 2\""
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2 1 4\"\n"
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == '2 1 4', 'Your solution is incorrect.'"
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2 1 4\\n\", \"Test failed\""
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\nO 4\") == \"2 1 4\", \"Test case 1 failed\"\n\nassert solution(\"2\\nE 10\\nE 20\\nO 5\\nO 30\\nO 40\") == \"2 20 40\", \"Test case 2 failed\"\n\nassert solution(\"2\\nO 10\\nE 20\\nI 30\") == \"2 20 30\", \"Test case 3 failed\"\n\nassert solution(\"3\\nO 30\\nI 40\\nO 20\\nO 10\") == \"2 30 40\", \"Test case 4 failed\"\n\nassert solution(\"4\\nE 15\\nE 25\\nO 40\\nO 30\\nI 20\\nI 10\") == \"2 30 40\", \"Test case 5 failed\""
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\nO 4\") == \"2 1 4\\n\", \"Test Case 1\"\n\nassert solution(\"2\\nO 1\\nE 8\\nE 2\") == \"2 1 4\\n\", \"Test Case 2\"\n\nassert solution(\"3\\nO 8\\nO 4\\nO 2\") == \"2 2 4\\n\", \"Test Case 3\"\n\nassert solution(\"4\\nO 4\\nE 2\\nO 2\\nE 1\") == \"2 1 4\\n\", \"Test Case 4\"\n\nassert solution(\"5\\nO 2\\nE 1\\nO 4\\nE 2\") == \"2 2 4\\n\", \"Test Case 5\"\n\nassert solution(\"6\\nO 1\\nE 4\\nO 8\\nE 2\") == \"2 2 4\\n\", \"Test Case 6\"\n\nassert solution(\"7\\nO 7\\nE 2\\nO 6\\nE 1\") == \"2 1 4\\n\", \"Test Case 7\"\n\nassert solution(\"8\\nO 3\\nE 4\\nO 7\\nE 1\\nE 8\") == \"2 2 4\\n\", \"Test Case 8\""
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"2 1 4\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\nO 4\") == \"2 1 4\"\nassert solution(\"2\\nO 10\\nO 20\\nE 5\\nI 10\\nO 15\\nE 15\\nI 10\") == \"2 1 4 15\"\nassert solution(\"3\\nO 6\\nE 3\\nI 12\\nE 10\\nO 20\\nI 7\\nO 4\\nE 2\") == \"2 1 4 7 3 12 10 20\"\nassert solution(\"4\\nO 10\\nE 10\\nI 5\\nO 15\\nE 7\\nO 12\\nI 12\\nE 8\\nO 9\") == \"2 1 4 15 10 9 8 12 7\"\nassert solution(\"5\\nO 12\\nE 14\\nO 10\\nI 16\\nO 6\\nI 8\\nO 10\\nE 6\\nO 10\") == \"2 1 4 8 10 12 14 6 10\""
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '2 1 4\\n', \"The solution is not correct\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\nO 4\") == \"2 1 4\"\nassert solution(\"2\\nE 10\\nI 3\") == \"2 10 3\"\nassert solution(\"4\\nE 6\\nI 12\\nO 10\") == \"2 6 12 10\"\nassert solution(\"6\\nI 2\\nO 12\\nE 8\") == \"1 2 8 12\"\nassert solution(\"10\\nO 10\\nE 12\\nI 6\") == \"2 10 6 12\"\nassert solution(\"1000\\nO 10000\\nE 10000\\nI 10000\") == \"10000 10000 10000 10000\"\nassert solution(\"1001\\nO 1001\\nE 1001\\nI 1001\") == \"1001 1001 1001 1001\"\nassert solution(\"1002\\nO 1002\\nE 1002\\nI 1002\") == \"1002 1002 1002 1002\""
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\") == \"4\"\nassert solution(\"5 10\\n3 1 4 1\") == \"5\"\nassert solution(\"1 5\\n5 1 6 1\") == \"4\"\nassert solution(\"1 10\\n5 5 10 5\") == \"5\"\nassert solution(\"2 3\\n2 3 4 4\") == \"4\""
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input) == output, f\"Expected {output}, got {solution(input)}\"\n"
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\") == \"4\\n\"\n"
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == \"4\\n\", \"Sample Output not correct\"\n\nfrom typing import List"
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14') == '4'\nassert solution('5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14') == '5'\nassert solution('5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14') == '6'\nassert solution('5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14') == '6'\nassert solution('5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14') == '7'\nassert solution('5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14') == '7'\nassert solution('5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14') == '7'\nassert solution('5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14') == '8'\nassert solution('5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14') == '8'\nassert solution('5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14') == '8'\nassert solution('5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14') == '9'\nassert solution('5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14') == '9'\nassert solution('5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14') == '9'\nassert solution('5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14') == '10'\nassert solution('5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14') == '10'\nassert solution('5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14') == '10'\nassert solution('5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 "
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    5 8\n    2 1 4 5\n    5 1 12 4\n    5 5 9 10\n    1 6 4 10\n    2 11 7 14\n    \"\"\"\n) == \"4\"\n\nassert solution(\n    \"\"\"\n    1 5\n    6 2\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    3 1\n    2 2\n    3 3\n    \"\"\"\n) == \"3\"\n\nassert solution(\n    \"\"\"\n    1 100\n    0 1\n    10 100\n    0 0\n    10 0\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    1 1\n    2 2\n    3 3\n    \"\"\"\n) == \"1\"\n\nassert solution(\n    \"\"\"\n    1 10\n    2 20\n    3 30\n    4 40\n    5 50\n    6 60\n    7 70\n    8 80\n    9 90\n    10 100\n    \"\"\"\n) == \"1\"\n\nassert solution(\n    \"\"\"\n    1 1000\n    0 1\n    10 1000\n    0 0\n    10 0\n    \"\"\"\n) == \"3\"\n\nassert solution(\n    \"\"\"\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 100\n    1 "
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == 1\nassert solution(2) == 2\nassert solution(3) == 2\nassert solution(4) == 3\nassert solution(5) == 4\nassert solution(6) == 4\nassert solution(7) == 4\nassert solution(8) == 4\nassert solution(9) == 5\nassert solution(10) == 5\nassert solution(11) == 5\nassert solution(12) == 5\nassert solution(13) == 5\nassert solution(14) == 5\nassert solution(15) == 5\nassert solution(16) == 5\nassert solution(17) == 5\nassert solution(18) == 5\nassert solution(19) == 5\nassert solution(20) == 6\nassert solution(21) == 7\nassert solution(22) == 8\nassert solution(23) == 9\nassert solution(24) == 10\nassert solution(25) == 10\nassert solution(26) == 10\nassert solution(27) == 11\nassert solution(28) == 12\nassert solution(29) == 13\nassert solution(30) == 14\nassert solution(31) == 15"
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"4\\n\"\n"
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\") == \"4\\n\"\n"
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_str) == output_str, f\"Test case {test_case} failed\"\nprint(output_str)"
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"99.99 99.99 9999.99\\n99 9 999 9999\") == \"9.585073\"\nassert solution(\"99.99 99.99 9999.99\\n99 9 999 9999\") == \"9.585073\""
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"9.585073\\n\", \"The solution is incorrect\""
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n-99.99 99.99 9999.99\n99 9 999 9999\n9 99 9 99 9\n''') == '9.585073'"
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"-99.99 99.99 9999.99\") == \"9.585073\""
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('-99.99 99.99 9999.99') == '9.585073'"
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n-99.99 99.99 9999.99\n99 9 999 9999\n9 99 9 99 9\n''') == '9.585073\\n'\n\nassert solution('''\n-100.00 100.00 10000.00\n100 10 1000 10000\n10 100 10 100 10\n''') == '9.585073\\n'"
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"-99.99 99.99 9999.99\") == \"9.585073\"\nassert solution(\"-99.99 99.99 9999.99 99 9 999 9999\") == \"9.585073\"\nassert solution(\"-99.99 99.99 9999.99 99 9 999 9999\") == \"9.585073\"\nassert solution(\"-99.99 99.99 9999.99 99 9 999 9999\") == \"9.585073\"\nassert solution(\"-99.99 99.99 9999.99 99 9 999 9999\") == \"9.585073\"\n"
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"9.585073\""
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('99.99 99.99 9999.99\\n99 9 999 9999') == '9.585073\\n'"
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"99.99 99.99 9999.99\\n99 9 999 9999\\n9 99 9 99 9\") == \"9.585073\"\n"
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('20 30\\n2 10 20 2 24 18 28 10') == '12.74 127.83'"
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '12.74 127.83\\n'\n"
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == sample_output, f\"Your solution does not match the expected output.\\nExpected: {sample_output}\\nGot: {solution(sample_input)}\"\n\nprint(\"All test cases pass.\")"
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"20 30\\n2 10 20 2 24 18 28 10\") == \"12.74 127.83\"\nprint(\"All test cases pass\")"
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(20, 30) == \"12.74 127.83\""
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected, f\"Test failed for {stdin}\"\n\nfor i, test_case in enumerate(tests):\n    stdin, expected = test_case\n    actual = solution(stdin)\n    print(f\"Test Case {i+1}: {actual}\")"
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"20 30\\n2 10 20 2 24 18 28 10\") == \"12.74 127.83\"\nassert solution(\"20 20\\n2 2 2 2 2 2 2 2\") == \"impossible\"\nassert solution(\"20 20\\n2 2 2 2 2 2 2 2\") == \"impossible\"\nassert solution(\"20 20\\n2 2 2 2 2 2 2 2\") == \"impossible\"\nassert solution(\"20 20\\n2 2 2 2 2 2 2 2\") == \"impossible\"\nassert solution(\"20 20\\n2 2 2 2 2 2 2 2\") == \"impossible\"\nassert solution(\"20 20\\n2 2 2 2 2 2 2 2\") == \"impossible\"\nassert solution(\"20 20\\n2 2 2 2 2 2 2 2\") == \"impossible\"\nassert solution(\"20 20\\n2 2 2 2 2 2 2 2\") == \"impossible\"\nassert solution(\"20 20\\n2 2 2 2 2 2 2 2\") == \"impossible\"\nassert solution(\"20 20\\n2 2 2 2 2 2 2 2\") == \"impossible\"\nassert solution(\"20 20\\n2 2 2 2 2 2 2 2\") == \"impossible\"\nassert solution(\"20 20\\n2 2 2 2 2 2 2 2\") == \"impossible\"\nassert solution(\"20 20\\n2 2 2 2 2 2 2 2\") == \"impossible\"\nassert solution(\"20 20\\n2 2 2 2 2 2 2 2\") == \"impossible\"\nassert solution(\"20 20\\n2 2 2 2 2 2 2 2\") == \"impossible\"\nassert solution(\"20 20\\n2 2 2 2 2 2 2 2\") == \"impossible\"\nassert solution(\"20 20\\n2 2 2 2 2 2 2 2\") == \"impossible\"\nassert solution(\"20 20\\n2 2 2 2 2 2 2 2\") == \"impossible\"\nassert solution(\"20 20\\n2 2 2 2 2 2 2 2\") == \"impossible\"\nassert solution(\"20 20\\n2 2 2 2 2 2 2 2\") == \"impossible\"\nassert solution(\"20 20\\n2 2 2 2 2 2 2 2\") == \"impossible\"\nassert solution(\"20 20\\n2 2 2 2 2 2 2 2\") == \"impossible\"\nassert solution(\"20 20\\n2 2 2 2 2 2 2 2\") == \"impossible\"\nassert solution(\"20 20\\n2 2 2 2 2 2 2 2\") == \"impossible\"\nassert solution(\"20 20\\n2 2 2 2 2 2 2 2\") == \"impossible\"\nassert solution(\"20 20\\n2 2 2 2 2 2 2 2\") == \"impossible\"\nassert solution(\"20 20\\n2 2 2 2 2 2 2 2\") == \"impossible\"\nassert solution(\"20 20\\n2 2 2 2 2 2 2 2\") == \"impossible\"\nassert solution(\"20 20\\n2 2 2 2 2 2 2 2\") == \"impossible\"\nassert solution(\"20 20\\n2 2 2 2 2 2 2 2\") == \"impossible\"\nassert solution(\"20 20\\n2 2 2 2 "
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"12.74 127.83\", \"The output should be '12.74 127.83', but it is '\"+str(solution(stdin))+\"'.\""
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('20 30\\n2 10 20 2 24 18 28 10') == '12.74 127.83'\n"
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"20 30\\n2 10 20 2 24 18 28 10\") == \"12.74 127.83\\n\"\n"
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0116\", \"The correct solution is not present.\""
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\n110\\n6\\n') == '0116\\n'"
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin='2\\n110\\n6\\n') == '0116\\n'"
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n110\\n6\\n\") == \"0116\\n\"\nassert solution(\"2\\n110\\n06\\n\") == \"0110\\n\"\nassert solution(\"3\\n110\\n6\\n7\\n\") == \"0116\\n0006\\n0110\\n\"\nassert solution(\"3\\n110\\n6\\n8\\n\") == \"0110\\n0008\\n0116\\n\"\nassert solution(\"1\\n22\\n33\\n44\\n55\\n66\\n77\\n88\\n99\\n\") == \"00000\\n00002\\n00004\\n00006\\n00008\\n00010\\n00012\\n00014\\n00016\\n\""
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"0116\""
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"0116\""
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\n110\\n6') == '0116'"
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"1\\n110\\n6\\n\") == \"0116\\n\"\nprint(solution(stdin=\"1\\n110\\n6\\n\"))"
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin='2\\n110\\n6\\n') == '0116\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\n110\\n6\\n') == '0116'\n"
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 3\\n4 4 4\") == \"0 2 4\"\n"
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(None) == 'No solution exists for the given input'"
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == [\"0\", \"2\", \"4\"]"
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Expected output {expected_output}, got {solution(input())}\"\n"
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 3\\n4 4 4\") == \"0 2 4\"\n"
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 3\\n4 4 4\") == \"0 2 4\"\n"
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 3\\n4 4 4\") == \"0 2 4\"\nassert solution(\"10 5\\n4 3 5 2\") == \"3 1 4\"\nassert solution(\"10 5\\n3 2 3 2\") == \"3 1 4\"\nassert solution(\"10 5\\n2 1 2 2\") == \"4 2 2 1\"\nassert solution(\"10 5\\n2 2 2 2\") == \"2 1 1 1\"\nassert solution(\"10 5\\n2 3 2 2\") == \"4 2 2 1\"\nassert solution(\"10 5\\n2 2 2 3\") == \"2 1 1 2\"\nassert solution(\"10 5\\n2 3 2 3\") == \"4 2 2 2\"\nassert solution(\"10 5\\n2 4 2 3\") == \"4 2 2 2\"\nassert solution(\"10 5\\n2 2 2 4\") == \"2 1 1 3\"\nassert solution(\"10 5\\n2 3 2 4\") == \"4 2 2 3\"\nassert solution(\"10 5\\n2 4 2 4\") == \"4 2 2 3\"\nassert solution(\"10 5\\n2 2 2 5\") == \"2 1 1 4\"\nassert solution(\"10 5\\n2 3 2 5\") == \"4 2 2 4\"\nassert solution(\"10 5\\n2 4 2 5\") == \"4 2 2 4\""
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == sample_output, f\"Solution does not match. Output: {solution(sample_input)}, Expected: {sample_output}\""
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"0 2 4\"\n"
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"0 2 4\""
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == 'impossible'"
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\") == \"impossible\"\nassert solution(\"4\\n2\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\") == \"possible\""
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\") == \"impossible\\n\"\nassert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\\n1\\n3\\n1\\n2\\n3\\n4\") == \"impossible\\n\"\nassert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\\n2 1 2\\n2 2 1\\n2 3 1\\n2 3 2\\n2 3 3\\n2 3 4\\n2 4 1\\n2 4 2\\n2 4 3\\n2 4 4\\n2 4 5\\n2 5 1\\n2 5 2\\n2 5 3\\n2 5 4\\n2 5 5\\n2 6 1\\n2 6 2\\n2 6 3\\n2 6 4\\n2 6 5\\n2 7 1\\n2 7 2\\n2 7 3\\n2 7 4\\n2 7 5\\n2 7 6\\n2 7 7\\n2 7 8\\n2 8 1\\n2 8 2\\n2 8 3\\n2 8 4\\n2 8 5\\n2 8 6\\n2 8 7\\n2 8 8\\n2 9 1\\n2 9 2\\n2 9 3\\n2 9 4\\n2 9 5\\n2 9 6\\n2 9 7\\n2 9 8\\n2 9 9\\n2 9 10\\n2 9 11\\n2 9 12\\n2 9 13\\n2 9 14\\n2 9 15\\n2 9 16\\n2 9 17\\n2 9 18\\n2 9 19\\n2 9 20\\n2 9 21\\n2 9 22\\n2 9 23\\n2 9 24\\n2 9 25\\n2 9 26\\n2 9 27\\n2 9 28\\n2 9 29\\n2 9 30\\n2 9 31\\n2 9 32\\n2 9 33\\n2 9 34\\n2 9 35\\n2 9 36\\n2 9 37\\n2 9 38\\n2 9 39\\n2 9 40\\n2 9 41\\n2 9 42\\n2 9 43\\n2 9 44\\n2 9 45\\n2 9 46\\n2 9 47\\n2 9 48\\n2 9 49\\n2 9 50\\n2 9 51\\n2 9 52\\n2 9 53\\n2 9 54\\n2 9 55\\n2 9 56\\n2 9 57\\n2 9 58\\n2 9 59\\n2 9 60\\n2 9 61\\n2 9 62\\n2 9 63\\n2 9 64\\n2 9 65\\n2 9 66\\n2 9 67\\n2 9 68\\n2 9 69\\n2 9 70"
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == 'possible', 'Sample Input Error'\n\nfrom typing import List"
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_str) == output_str, f\"Input: {input_str}, Output: {output_str}, Solution: {solution(input_str)}\""
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\") == \"impossible\""
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\") == \"impossible\\n\"\nassert solution(\"5\\n3\\n1 1 2 2\\n2 2\\n4\\n3 1 3 5\") == \"impossible\\n\"\nassert solution(\"3\\n2\\n1 1 2 2\\n3 1\\n1 1 2 2 3 3\") == \"possible\\n\"\nassert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\\n6\\n1 1 1 1 1 1 1 1 1 1\") == \"possible\\n\"\nassert solution(\"1\\n1\\n1 1 1 1 1 1 1 1 1\") == \"possible\\n\""
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\") == \"impossible\""
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_str) == expected_output, f\"Test Case {test_case_num}: Incorrect output.\\nGot: {solution(input_str)}\\nExpected: {expected_output}\""
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    4\n    7\n    \"\"\"\n) == \"impossible\"\n\nassert solution(\n    \"\"\"\n    4\n    7\n    \"\"\"\n) == \"impossible\"\n\nassert solution(\n    \"\"\"\n    4\n    7\n    \"\"\"\n) == \"impossible\"\n\nassert solution(\n    \"\"\"\n    4\n    7\n    \"\"\"\n) == \"impossible\"\n\nassert solution(\n    \"\"\"\n    4\n    7\n    \"\"\"\n) == \"impossible\"\n\nassert solution(\n    \"\"\"\n    4\n    7\n    \"\"\"\n) == \"impossible\""
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"4.00000\"\nassert solution(10) == \"inf\"\nassert solution(2) == \"0.00000\"\nassert solution(30000) == \"inf\"\nassert solution(30001) == \"inf\"\nassert solution(300000) == \"inf\"\nassert solution(300001) == \"inf\"\nassert solution(50000) == \"inf\"\nassert solution(50001) == \"inf\"\nassert solution(500000) == \"inf\"\nassert solution(500001) == \"inf\"\nassert solution(600000) == \"inf\"\nassert solution(600001) == \"inf\"\nassert solution(6000000) == \"inf\"\nassert solution(6000001) == \"inf\"\nassert solution(7000000) == \"inf\"\nassert solution(7000001) == \"inf\"\nassert solution(8000000) == \"inf\"\nassert solution(8000001) == \"inf\"\nassert solution(9000000) == \"inf\"\nassert solution(9000001) == \"inf\"\nassert solution(10000000) == \"inf\"\nassert solution(10000001) == \"inf\"\nassert solution(11000000) == \"inf\"\nassert solution(11000001) == \"inf\"\nassert solution(12000000) == \"inf\"\nassert solution(12000001) == \"inf\"\nassert solution(13000000) == \"inf\"\nassert solution(13000001) == \"inf\"\nassert solution(14000000) == \"inf\"\nassert solution(14000001) == \"inf\"\nassert solution(15000000) == \"inf\"\nassert solution(15000001) == \"inf\"\nassert solution(16000000) == \"inf\"\nassert solution(16000001) == \"inf\"\nassert solution(17000000) == \"inf\"\nassert solution(17000001) == \"inf\"\nassert solution(18000000) == \"inf\"\nassert solution(18000001) == \"inf\"\nassert solution(19000000) == \"inf\"\nassert solution(19000001) == \"inf\"\nassert solution(20000000) == \"inf\"\nassert solution(20000001) == \"inf\"\nassert solution(21000000) == \"inf\"\nassert solution(21000001) == \"inf\"\nassert solution(22000000) == \"inf\"\nassert solution(22000001) == \"inf\"\nassert solution(23000000) == \"inf\"\nassert solution(23000001) == \"inf\"\nassert solution(24000000) == \"inf\"\nassert solution(24000001) == \"inf\"\nassert solution(25000000) == \"inf\"\nassert solution(25000001) == \"inf\"\nassert solution(26000000) == \"inf\"\nassert solution(26000001) == \"inf\"\nassert solution(27000000) == \"inf\"\nassert solution(27000001) == \"inf\"\nassert solution(28000000) == \"inf\"\nassert solution(28000001) == \"inf\"\nassert solution(29000000) == \"inf\"\nassert solution(29000001) == \"inf\"\nassert solution(30000000) == \"inf\"\nassert solution(30000001)"
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n0 0\\n0 10\\n2\\n4 10\\n4 0\") == 4.0"
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n        2\n        0 0\n        0 10\n        2\n        4 10\n        4 0\n        ''') == '4.00000'\n\nfrom typing import List\nimport math"
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '4.00000\\n', solution(stdin)"
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"sample_input.txt\")) == \"4.00000\""
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n0 0\\n0 10\\n2\\n4 10\\n4 0') == '4.00000'"
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''2\n0 0\n0 10\n2\n4 10\n4 0''') == '4.00000'\n\nassert solution('''3\n0 0\n0 10\n2\n4 10\n4 0\n5\n15 10\n15 0\n6\n30 10\n30 0''') == 'Impossible'\n\nassert solution('''3\n0 0\n0 10\n2\n4 10\n4 0\n1\n0 10\n1 0\n6\n30 10\n30 0''') == 'Impossible'\n\nassert solution('''3\n0 0\n0 10\n2\n4 10\n4 0\n0\n0 10\n0 0\n6\n30 10\n30 0''') == 'Impossible'\n\nassert solution('''3\n0 0\n0 10\n2\n4 10\n4 0\n1\n0 10\n1 0\n2\n3 10\n3 0''') == 'Impossible'\n\nassert solution('''3\n0 0\n0 10\n2\n4 10\n4 0\n1\n0 10\n1 0\n2\n3 10\n3 0\n4\n5 10\n5 0\n''') == 'Impossible'\n\nassert solution('''3\n0 0\n0 10\n2\n4 10\n4 0\n1\n0 10\n1 0\n2\n3 10\n3 0\n4\n5 10\n5 0\n6\n7 10\n7 0''') == 'Impossible'\n\nassert solution('''3\n0 0\n0 10\n2\n4 10\n4 0\n1\n0 10\n1 0\n2\n3 10\n3 0\n4\n5 10\n5 0\n6\n7 10\n7 0\n8\n9 10\n9 0''') == 'Impossible'\n\nassert solution('''3\n0 0\n0 10\n2\n4 10\n4 0\n1\n0 10\n1 0\n2\n3 10\n3 0\n4\n5 10\n5 0\n6\n7 10\n7 0\n8\n9 10\n9 0\n10\n11 10\n11 0''') == 'Impossible'\n\nassert solution('''3\n0 0\n0 10\n2\n4 10\n4 0\n1\n0 10\n1 0\n2\n3 10\n3 0\n4\n5 10\n5 0\n6\n7 10\n7 0\n8\n9 10\n9 0\n10\n11 10\n11 0\n12\n13 10\n13 0''') == 'Impossible'\n\nassert solution('''3\n0 0\n0 10\n2\n4 10\n4 0\n1\n0 10\n1 0\n2\n3 10\n3 0\n4\n5 10\n5 0\n6\n7 10\n7 0\n8\n9 10\n9 0\n10\n11 10\n11 0\n12\n13 10\n13 0\n14\n15 10\n15 0''') == 'Impossible'\n\nassert solution('''3\n0 0\n0 10\n2\n4 10\n4 0\n1\n0 10\n1 0\n2\n3 10\n3 0\n4\n5 10\n5 0\n6\n7 10\n7 0\n8\n9 10\n9 0\n10\n11 10\n11 0\n12\n13 10\n13 0\n14\n15 10\n15 0\n16\n17 10\n17 0''') == 'Impossible'\n\nassert solution('''3\n0 0\n0 10\n2\n4 10\n4 0\n1\n0 10\n1 0\n"
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n0 0\\n0 10\\n2\\n4 10\\n4 0\") == \"4.00000\"\n"
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2\\n0 0\\n0 10\\n2\\n4 10\\n4 0') == '4.00000\\nimpossible'\nassert solution('2\\n0 0\\n0 10\\n2\\n-1 -1\\n-1 10') == 'impossible'\nassert solution('2\\n0 0\\n0 10\\n2\\n0 0\\n0 10') == '0.00000'\nassert solution('2\\n0 0\\n0 10\\n2\\n-1 -1\\n-1 10') == 'impossible'"
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"0\\n0\\n2\\n4 10\\n4 0\\n\") == \"4.00000\\nimpossible\\n\""
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2') == '1'\nassert solution('6 4 5\\n2 1\\n2 3\\n3 2\\n3 4\\n4 3\\n5 4') == '0'\nassert solution('10 8 6\\n3 3\\n3 4\\n4 4\\n5 4\\n6 5\\n7 6') == '0'\nassert solution('1 1\\n3 1\\n5 3\\n7 1\\n9 7\\n11 5') == '1'"
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\\n') == '1'"
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2') == '1'"
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\") == 1, \"Expected 1, but got {}\".format(solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\"))"
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 1, \"The solution is incorrect.\"\n\nfrom typing import List"
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    input=\n\"\"\"\n3 2 5\n1 1\n1 3\n3 1\n3 3\n2 2\n\"\"\"\n) == \"1\"\n\nassert solution(\n    input=\n\"\"\"\n3 2 5\n1 1\n2 3\n3 1\n3 3\n2 2\n\"\"\"\n) == \"0\"\n\nassert solution(\n    input=\n\"\"\"\n3 2 5\n1 1\n1 3\n2 3\n2 2\n\"\"\"\n) == \"0\"\n\nassert solution(\n    input=\n\"\"\"\n3 2 5\n1 1\n1 3\n2 3\n3 1\n\"\"\"\n) == \"1\"\n\nassert solution(\n    input=\n\"\"\"\n3 2 5\n1 1\n1 3\n2 3\n3 1\n3 3\n\"\"\"\n) == \"1\""
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\\n\") == 1, \"Test case 1 failed\"\nassert solution(\"5 4 3\\n3 3\\n1 2\\n2 1\\n4 3\\n\") == 0, \"Test case 2 failed\"\nassert solution(\"5 4 3\\n3 3\\n1 2\\n2 1\\n4 3\\n\") == 0, \"Test case 3 failed\"\nassert solution(\"5 4 3\\n3 3\\n1 2\\n2 1\\n4 3\\n\") == 0, \"Test case 4 failed\"\nassert solution(\"5 4 3\\n3 3\\n1 2\\n2 1\\n4 3\\n\") == 0, \"Test case 5 failed\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2') == 1\nassert solution('5 3 1\\n1 1\\n1 2\\n3 1\\n3 2\\n1 3') == 0\n"
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(solution_input) == expected_output, f\"Test case {test_case_num}: Solution does not match expected output.\" for test_case_num, solution_input, expected_output in enumerate(tests)"
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\\n\") == \"1\"\n"
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"impossible\"\nassert solution() == \"impossible\"\nassert solution() == \"impossible\"\nassert solution() == \"impossible\"\nassert solution() == \"impossible\""
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\") == \"5 3\\n1 0\\n2 4\"\nassert solution(\"3 1\\n2 2\") == \"impossible\"\nassert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n5 4\") == \"5 4\\n1 0\\n2 4\"\n"
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(5, 6) == '5 3\\n1 0\\n2 4\\n'"
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\") == \"5 3\\n1 0\\n2 4\""
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '5 3\\n1 0\\n2 4\\n'"
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''5 6\n0 1\n0 2\n1 3\n2 3\n1 2\n4 3''') == '''5 3\n1 0\n2 4'''"
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"5 3\\n1 0\\n2 4\"\n\nimport math\nfrom typing import List"
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\") == \"5 3\\n1 0\\n2 4\""
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n5 6\n0 1\n0 2\n1 3\n2 3\n1 2\n4 3\n\"\"\") == \"\"\"\n5 3\n1 0\n2 4\nimpossible\n\"\"\""
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == sample_output, f\"The function should return {sample_output}, but it returned {solution(sample_input)}.\""
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 1\\n0 0\\n0 1\\n1 0\\n1 1\") == \"2\\n1 2\"\n"
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 1\\n0 0\\n0 1\\n1 0\\n1 1\\n') == '2\\n1 2\\n'"
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '2\\n1 2'\n\nfrom typing import List"
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 2\n"
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 1\\n0 0\\n0 1\\n1 0\\n1 1\") == \"2\\n1 2\""
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"2\\n1 2\""
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '2\\n1 2', 'Test case 1 failed'"
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 1\\n0 0\\n0 1\\n1 0\\n1 1\") == \"2\\n1 2\""
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n4 1\n0 0\n0 1\n1 0\n1 1\n''') == '''\n2\n1 2\n'''"
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 1\\n0 0\\n0 1\\n1 0\\n1 1\") == 2\nassert solution(\"4 1\\n0 0\\n1 0\\n1 1\") == 2\nassert solution(\"4 1\\n0 0\\n1 1\\n1 0\") == 2\nassert solution(\"4 1\\n0 0\\n0 1\\n1 1\") == 2\nassert solution(\"4 1\\n0 0\\n1 0\\n0 1\") == 2\nassert solution(\"4 1\\n0 0\\n1 1\\n0 1\") == 2\nassert solution(\"4 1\\n0 0\\n0 1\\n0 1\") == 2\nassert solution(\"4 1\\n0 0\\n0 0\\n0 1\") == 2\nassert solution(\"4 1\\n0 0\\n0 1\\n1 1\") == 2\nassert solution(\"4 1\\n0 0\\n1 0\\n1 1\") == 2\nassert solution(\"4 1\\n0 0\\n1 1\\n1 0\") == 2\nassert solution(\"4 1\\n0 0\\n0 0\\n0 0\") == 2\nassert solution(\"4 1\\n0 0\\n0 0\\n0 0\") == 2\nassert solution(\"4 1\\n0 0\\n1 0\\n1 1\") == 2\nassert solution(\"4 1\\n0 0\\n1 1\\n1 0\") == 2\nassert solution(\"4 1\\n0 0\\n0 0\\n0 1\") == 2\nassert solution(\"4 1\\n0 0\\n0 0\\n0 1\") == 2\nassert solution(\"4 1\\n0 0\\n0 0\\n0 1\") == 2\nassert solution(\"4 1\\n0 0\\n0 0\\n0 1\") == 2\nassert solution(\"4 1\\n0 0\\n0 0\\n0 1\") == 2\nassert solution(\"4 1\\n0 0\\n0 0\\n0 1\") == 2\nassert solution(\"4 1\\n0 0\\n0 0\\n0 1\") == 2\nassert solution(\"4 1\\n0 0\\n0 0\\n0 1\") == 2\nassert solution(\"4 1\\n0 0\\n0 0\\n0 1\") == 2\nassert solution(\"4 1\\n0 0\\n0 0\\n0 1\") == 2\nassert solution(\"4 1\\n0 0\\n0 0\\n0 1\") == 2\nassert solution(\"4 1\\n0 0\\n0 0\\n0 1\") == 2\nassert solution(\"4 1\\n0 0\\n0 0\\n0 1\") == 2\nassert solution(\"4 1\\n0 0\\n0 0\\n0 1\") == 2\nassert solution(\"4 1\\n0 0\\n0 0\\n0 1\") == 2\nassert solution(\"4 1\\n0 0\\n0 0\\n0 1\") == 2\nassert solution(\"4 1\\n0 0\\n0 0\\n0 1\") == 2\nassert solution(\"4 1\\n0 0\\n0 0\\n0 1\") == 2\nassert solution(\"4 1\\n0 0\\n0 0\\n0 1\") == 2\nassert solution(\"4 1\\n0 0\\n0 0\\n0 1\") == 2\nassert solution(\"4 1\\n0 0\\n0 0\\n0 1\") == 2\nassert solution(\"4 1\\n0 0\\n0 0\\n0 1\") == 2\nassert solution(\"4 1\\n0 0\\n0 0\\n0 1\") == 2\nassert solution(\"4 1\\n0 0\\n0 0\\n0 1\") == 2\nassert solution(\"4 1\\"
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 2\\n1 3 5 7 9 11 13 15 17 16\") == 1"
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(str(3)) == 1\nassert solution(str(4)) == 1\nassert solution(str(5)) == 1\nassert solution(str(6)) == 1\nassert solution(str(7)) == 1\nassert solution(str(8)) == 1\nassert solution(str(9)) == 1\nassert solution(str(10)) == 1\nassert solution(str(11)) == 1\nassert solution(str(12)) == 1\nassert solution(str(13)) == 1\nassert solution(str(14)) == 1\nassert solution(str(15)) == 1\nassert solution(str(16)) == 1\nassert solution(str(17)) == 1\nassert solution(str(18)) == 1\nassert solution(str(19)) == 1\nassert solution(str(20)) == 1\nassert solution(str(21)) == 1\nassert solution(str(22)) == 1\nassert solution(str(23)) == 1\nassert solution(str(24)) == 1\nassert solution(str(25)) == 1\nassert solution(str(26)) == 1\nassert solution(str(27)) == 1\nassert solution(str(28)) == 1\nassert solution(str(29)) == 1\nassert solution(str(30)) == 1\nassert solution(str(31)) == 1\nassert solution(str(32)) == 1\nassert solution(str(33)) == 1\nassert solution(str(34)) == 1\nassert solution(str(35)) == 1\nassert solution(str(36)) == 1\nassert solution(str(37)) == 1\nassert solution(str(38)) == 1\nassert solution(str(39)) == 1\nassert solution(str(40)) == 1\nassert solution(str(41)) == 1\nassert solution(str(42)) == 1\nassert solution(str(43)) == 1\nassert solution(str(44)) == 1\nassert solution(str(45)) == 1\nassert solution(str(46)) == 1\nassert solution(str(47)) == 1\nassert solution(str(48)) == 1\nassert solution(str(49)) == 1\nassert solution(str(50)) == 1\nassert solution(str(51)) == 1\nassert solution(str(52)) == 1\nassert solution(str(53)) == 1\nassert solution(str(54)) == 1\nassert solution(str(55)) == 1\nassert solution(str(56)) == 1\nassert solution(str(57)) == 1\nassert solution(str(58)) == 1\nassert solution(str(59)) == 1\nassert solution(str(60)) == 1\nassert solution(str(61)) == 1\nassert solution(str(62)) == 1\nassert solution(str(63)) == 1\nassert solution(str(64)) == 1\nassert solution(str(65)) == 1\nassert solution(str(66)) == 1\nassert solution(str(67)) == 1\nassert solution(str(68)) == 1\nassert solution(str(69)) == 1\nassert solution(str(70)) == 1\nassert solution(str(71)) == 1\nassert solution(str(72)) == 1\nassert solution(str(73)) == 1\nassert solution(str(74)) == 1\nassert solution(str(75)) == 1\nassert solution(str(76)) == 1\nassert solution(str(77)) == 1\nassert solution(str(78)) == 1\nassert solution(str(79)) == 1\nassert solution(str(80)) == 1\nassert solution(str(81)) == 1\nassert solution(str(82)) == 1\nassert solution(str(83)) == 1\nassert solution(str(84)) == 1\nassert solution(str(85)) == 1\nassert solution(str(86)) == 1\nassert solution(str(87)) == 1\nassert solution(str(88)) == 1\n"
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"your_function_name\"\n"
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 2\\n1 3 5 7 9 11 13 15 17 16\") == \"1\\n\"\nassert solution(\"10 2\\n1 2 4 6 8 10 12 14 16 18\") == \"2\\n\"\nassert solution(\"10 3\\n1 3 5 7 9 11 13 15 17 19\") == \"1\\n\"\nassert solution(\"10 2\\n1 3 5 7 9 11 13 15 17 19\") == \"3\\n\"\nassert solution(\"10 2\\n1 3 5 7 9 11 13 15 17 21\") == \"2\\n\""
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '1\\n', 'Incorrect output'"
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"1\""
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 2\\n1 3 5 7 9 11 13 15 17 16\") == \"1\\n\"\nassert solution(\"5 2\\n1 3 5 7 9 11 13 15 17 16\") == \"1\\n\"\nassert solution(\"10 3\\n1 3 5 7 9 11 13 15 17 16\") == \"0\\n\"\nassert solution(\"10 4\\n1 3 5 7 9 11 13 15 17 16\") == \"2\\n\""
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 2\\n1 3 5 7 9 11 13 15 17 16\") == \"1\\n1\""
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(None) == \"Test Case Failed\""
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"7 4\\ndef solution(stdin: str) -> str:\\npass\\n\", \"The solution is incorrect\""
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\") == \"7 4\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"7 4\", \"Output should be '7 4', but got '{}'.\".format(solution())"
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\\n10 9\\n3 7\") == \"7 4\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == expected_output, \"Test failed. Expected output: '{}', got '{}'.\""
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(solution) == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"7 4\", \"Your solution is incorrect\"\n"
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\\n10 9\\n3 7\") == \"7 4\\ndef solution(stdin: str) -> str: pass\\n\""
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\") == \"7 4\\ndef solution(stdin: str) -> str:\\npass\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"Output: []\\n\", \"The function should return the correct output for an empty input.\""
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n\""
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n\"\n"
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n\""
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n\"\n"
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n\"\nassert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n\""
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n\"\n\nassert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n\""
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\""
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\\n\\\"\") == \"HELLO THERE \\\\n\"\nassert solution(\"20 PRINT \\\"HELLO THERE \\\\n\\\"\\n30 PRINT A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE \\\\n\\nDONE\""
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n\"\n\nprint(\"All test cases passed\")"
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == sample_output, f\"Test failed: {solution(sample_input)}\""
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3 0 1\\n0 1\") == 3, \"Expected 3, got {}\".format(solution(\"3\\n3 0 1\\n0 1\"))\n"
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n3 0 1\\n0 1\") == 3\nassert solution(\"5\\n3 0 1\\n1 2\") == 1\nassert solution(\"3\\n3 1 3\\n2 1\") == 6\nassert solution(\"4\\n3 1 3\\n2 2\") == 10\n\nfrom functools import reduce"
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n3 0 1\\n0 1\") == 3"
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 3, \"Expected 3 ways, got: {}\".format(solution(3))"
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n3 0 1\\n0 1\") == 3"
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n3 0 1\\n0 1') == 3"
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"3\"\nassert solution(3, 0, 1) == \"3\"\nassert solution(3, 0, 2) == \"4\""
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution([3, 0, 1]) == 3\nassert solution([0, 1]) == 1\nassert solution([1]) == 1\nassert solution([1, 2, 3]) == 2\nassert solution([1, 3]) == 3"
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3 0 1\\n0 1\") == 3\n\nfrom itertools import combinations"
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Solution is {solution(input())}, but expected {expected_output}.\""
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"The given input is not correct. Expected output: '{output}', but got: '{solution(input())}'\""
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n5\n1 2\n2 5\n2 3\n1 3\n3 5\n4 5\n3 4\n1 3\n''') == 'LLRRRRLL'"
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"impossible\"\nassert solution() == \"impossible\"\nassert solution() == \"impossible\"\nassert solution() == \"impossible\"\nassert solution() == \"impossible\""
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution([5, 1, 2, 2, 5, 2, 3, 1, 3, 3, 5, 4, 5, 3, 4, 1, 3]) == 'LLRRRRLL\\n'"
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\") == \"LLRRRRLL\"\nassert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n1 3\") == \"impossible\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"LLRRRRLL\"\n"
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n') == 'LLRRRRLL\\n'\nassert solution('5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n') == 'impossible\\n'\nassert solution('5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n') == 'impossible\\n'\nassert solution('5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n') == 'impossible\\n'\nassert solution('5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n') == 'impossible\\n'\nassert solution('5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n') == 'impossible\\n'\nassert solution('5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n') == 'impossible\\n'\nassert solution('5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n') == 'impossible\\n'\nassert solution('5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n') == 'impossible\\n'\nassert solution('5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n') == 'impossible\\n'\nassert solution('5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n') == 'impossible\\n'"
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"LLRRRRLL\\n\"\n"
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n\") == \"LLRRRRLL\\n\""
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1\\n2011\\n\"\n"
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n2\\n1009 2011\\n1017 2011\") == \"1\\n2011\\n\""
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1009 2011\\n1017 2011\") == \"1\\n2011\"\nassert solution(\"3\\n1019 2011\\n1005 2011\\n1001 2011\") == \"1\\n2011\"\nassert solution(\"4\\n1009 2012\\n1017 2012\\n1011 2012\\n1007 2012\") == \"1\\n2011\"\nassert solution(\"5\\n1017 2012\\n1012 2012\\n1007 2012\\n1001 2012\\n1005 2012\") == \"2\\n2011\\n2012\"\nassert solution(\"6\\n1009 2011\\n1015 2011\\n1019 2011\\n1005 2011\\n1003 2011\") == \"1\\n2011\"\nassert solution(\"7\\n1015 2011\\n1013 2011\\n1007 2011\\n1009 2011\\n1011 2011\") == \"2\\n2011\\n2012\"\nassert solution(\"8\\n1009 2011\\n1017 2011\\n1005 2011\\n1003 2011\\n1019 2011\\n1013 2011\") == \"1\\n2011\"\nassert solution(\"9\\n1009 2011\\n1017 2011\\n1005 2011\\n1003 2011\\n1019 2011\\n1013 2011\\n1007 2011\\n1011 2011\") == \"2\\n2011\\n2012\\n2013\"\nassert solution(\"10\\n1009 2011\\n1017 2011\\n1005 2011\\n1003 2011\\n1019 2011\\n1013 2011\\n1007 2011\\n1011 2011\\n1009 2012\\n1017 2012\\n1012 2012\\n1007 2012\\n1001 2012\\n1005 2012\") == \"3\\n2011\\n2012\\n2013\"\n"
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1009 2011\\n1017 2011\") == \"1\\n2011\"\nassert solution(\"1009 2011\\n1017 2010\\n1017 2011\\n1017 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\") == \"1\\n2011\"\nassert solution(\"1009 2011\\n1009 2010\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n1009 20"
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1009 2011\\n1017 2011\") == \"1\\n2011\""
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected_output\nfor stdin, expected_output in zip(test_cases, expected_output_cases):\n    assert solution(stdin) == expected_output"
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2011\\n2011\\n1009\""
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1009 2011\\n1017 2011') == '1\\n2011'\nassert solution('1009 2011\\n1018 2011\\n1019 2011\\n1020 2011\\n1021 2011\\n1022 2011\\n1023 2011\\n1024 2011\\n1025 2011\\n1026 2011\\n1027 2011\\n1028 2011\\n1029 2011\\n1030 2011\\n1031 2011\\n1032 2011\\n1033 2011\\n1034 2011\\n1035 2011\\n1036 2011\\n1037 2011\\n1038 2011\\n1039 2011\\n1040 2011\\n1041 2011\\n1042 2011\\n1043 2011\\n1044 2011\\n1045 2011\\n1046 2011\\n1047 2011\\n1048 2011\\n1049 2011\\n1050 2011\\n1051 2011\\n1052 2011\\n1053 2011\\n1054 2011\\n1055 2011\\n1056 2011\\n1057 2011\\n1058 2011\\n1059 2011\\n1060 2011\\n1061 2011\\n1062 2011\\n1063 2011\\n1064 2011\\n1065 2011\\n1066 2011\\n1067 2011\\n1068 2011\\n1069 2011\\n1070 2011\\n1071 2011\\n1072 2011\\n1073 2011\\n1074 2011\\n1075 2011\\n1076 2011\\n1077 2011\\n1078 2011\\n1079 2011\\n1080 2011\\n1081 2011\\n1082 2011\\n1083 2011\\n1084 2011\\n1085 2011\\n1086 2011\\n1087 2011\\n1088 2011\\n1089 2011\\n1090 2011\\n1091 2011\\n1092 2011\\n1093 2011\\n1094 2011\\n1095 2011\\n1096 2011\\n1097 2011\\n1098 2011\\n1099 2011\\n1100 2011\\n1101 2011\\n1102 2011\\n1103 2011\\n1104 2011\\n1105 2011\\n1106 2011"
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1009 2011\\n1017 2011\") == \"1\\n2011\"\nassert solution(\"3\\n1009 2011\\n1017 2011\\n1010 2011\") == \"2\\n1011\"\nassert solution(\"4\\n1009 2011\\n1017 2011\\n1010 2011\\n1012 2011\") == \"3\\n1011\"\nassert solution(\"5\\n1009 2011\\n1017 2011\\n1010 2011\\n1012 2011\\n1014 2011\") == \"4\\n1011\"\nassert solution(\"6\\n1009 2011\\n1017 2011\\n1010 2011\\n1012 2011\\n1014 2011\\n1015 2011\") == \"5\\n1011\"\nassert solution(\"7\\n1009 2011\\n1017 2011\\n1010 2011\\n1012 2011\\n1014 2011\\n1015 2011\\n1016 2011\") == \"6\\n1011\"\nassert solution(\"8\\n1009 2011\\n1017 2011\\n1010 2011\\n1012 2011\\n1014 2011\\n1015 2011\\n1016 2011\\n1017 2011\") == \"7\\n1012\"\nassert solution(\"9\\n1009 2011\\n1017 2011\\n1010 2011\\n1012 2011\\n1014 2011\\n1015 2011\\n1016 2011\\n1017 2011\\n1019 2011\") == \"8\\n1011\"\nassert solution(\"10\\n1009 2011\\n1017 2011\\n1010 2011\\n1012 2011\\n1014 2011\\n1015 2011\\n1016 2011\\n1017 2011\\n1019 2011\\n1020 2011\") == \"9\\n1011\"\n\nfrom typing import List\n"
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n4 4\n0 1 100\n0 2 100\n1 3 100\n2 3 100\n0 3\n\"\"\"\n) == \"0 3\"\n\nassert solution(\n\"\"\"\n3 3\n0 1 100\n0 2 100\n0 3 100\n1 2 100\n2 3 100\n3 2 100\n\"\"\"\n) == \"0 1 2\"\n\nassert solution(\n\"\"\"\n3 3\n0 1 100\n0 2 100\n0 3 100\n1 2 100\n2 3 100\n3 2 100\n\"\"\"\n) == \"0 1 2 3\""
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3\") == [\"0 3\"]"
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n4 4\n0 1 100\n0 2 100\n1 3 100\n2 3 100\n0 3\n''') == '0 3\\n'\n\nassert solution('''\n3 3\n0 1 100\n0 2 100\n1 3 100\n2 3 100\n0 3\n''') == '0 3\\n'\n\nassert solution('''\n4 5\n0 1 100\n0 2 100\n1 3 100\n2 3 100\n3 4 100\n4 4 100\n''') == '0 4\\n'\n\nassert solution('''\n4 6\n0 1 100\n0 2 100\n1 3 100\n2 3 100\n3 4 100\n4 5 100\n5 5 100\n''') == '0 5\\n'\n\nassert solution('''\n5 6\n0 1 100\n0 2 100\n1 3 100\n2 3 100\n3 4 100\n4 5 100\n5 6 100\n6 6 100\n''') == '0 6\\n'"
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3') == '0 3'\nassert solution('4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3') == '0 3'\nassert solution('0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3\\n0 4') == '0 4'\nassert solution('4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3\\n0 4') == '0 4'\nassert solution('0 0 100\\n0 0 100\\n0 0 100\\n0 0 100\\n0 0 100') == ''"
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), \"Test failed\"\n\nfrom typing import List"
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"0 3\\n\""
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3\\n\") == \"0 3\\n\", \"Your solution is incorrect. Please check the prompt and examples.\""
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3\") == \"0 3\\n\", \"The output should be 0 3, but it is {}\".format(solution(\"4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3\"))"
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n4 4\n0 1 100\n0 2 100\n1 3 100\n2 3 100\n0 3\n''') == '0 3'\nassert solution('''\n4 4\n0 1 100\n0 2 100\n1 3 100\n2 3 100\n1 3\n''') == '1 3'\nassert solution('''\n4 4\n0 1 100\n0 2 100\n1 3 100\n2 3 100\n1 3 100\n''') == '2 3'\nassert solution('''\n4 4\n0 1 100\n0 2 100\n1 3 100\n2 3 100\n1 3 100\n2 4\n''') == '0 4'\nassert solution('''\n4 4\n0 1 100\n0 2 100\n1 3 100\n2 3 100\n1 3 100\n2 4 100\n''') == '0 4'\nassert solution('''\n4 4\n0 1 100\n0 2 100\n1 3 100\n2 3 100\n1 3 100\n2 4 100\n2 4\n''') == '1 3'\nassert solution('''\n4 4\n0 1 100\n0 2 100\n1 3 100\n2 3 100\n1 3 100\n2 4 100\n2 4 100\n''') == '2 3'\nassert solution('''\n4 4\n0 1 100\n0 2 100\n1 3 100\n2 3 100\n1 3 100\n2 4 100\n2 4 100\n2 4\n''') == '2 4'\nassert solution('''\n4 4\n0 1 100\n0 2 100\n1 3 100\n2 3 100\n1 3 100\n2 4 100\n2 4 100\n2 4 100\n''') == '2 4'"
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"0 3\", \"The solution is not correct.\""
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == \"20\", \"Incorrect output: {}!= {}\".format(solution(sample_input), \"20\")"
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\\n\""
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"20\\n\""
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"20\\n\""
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\""
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\"\n\nassert solution(\"1.0 1.0\\n1 1 0 0\\n100 100 0\\n0 0 0\") == \"1\"\n\nassert solution(\"1.0 1.0\\n1 1 0 0\\n100 100 0\\n100 100 0\") == \"0\"\n\nassert solution(\"1.0 1.0\\n1 1 0 0\\n100 100 0\\n9999 10000\") == \"9999\"\n\nassert solution(\"1.0 1.0\\n1 1 0 0\\n100 100 0\\n10000 10000\") == \"10000\""
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0') == '20'"
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\"\nassert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\"\nassert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\""
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\") == 4\nassert solution(\"5\\n0 1 2 3 4\\n0 2 3 4 5\\n1 3 4 5 6\\n2 4 5 6 7\\n3 5 6 7 8\") == 6\nassert solution(\"5\\n0 1 2 3 4\\n0 2 3 4 5\\n1 3 4 5 6\\n2 4 5 6 7\\n3 5 6 7 8\\n4 6 7 8 9\\n5 7 8 9 10\") == 10\nassert solution(\"5\\n0 1 2 3 4\\n0 2 3 4 5\\n1 3 4 5 6\\n2 4 5 6 7\\n3 5 6 7 8\\n4 6 7 8 9\\n5 7 8 9 10\\n6 8 9 10 11\\n7 9 10 11 12\") == 12\nassert solution(\"5\\n0 1 2 3 4\\n0 2 3 4 5\\n1 3 4 5 6\\n2 4 5 6 7\\n3 5 6 7 8\\n4 6 7 8 9\\n5 7 8 9 10\\n6 8 9 10 11\\n7 9 10 11 12\\n8 10 11 12 13\\n9 11 12 13 14\\n10 12 13 14 15\\n11 13 14 15 16\\n12 14 15 16 17\\n13 15 16 17 18\\n14 16 17 18 19\\n15 17 18 19 20\\n16 18 19 20 21\\n17 19 20 21 22\\n18 20 21 22 23\\n19 21 22 23 24\\n20 22 23 24 25\\n21 23 24 25 26\\n22 24 25 26 27\\n23 25 26 27 28\\n24 26 27 28 29\\n25 27 28 29 30\\n26 28 29 30 31\\n27 29 30 31 32\\n28 30 31 32 33\\n29 31 32 33 34\\n30 32 33 34 35\\n31 33 34 35 36\\n32 34 35 36 37\\n33 35 36 37 38\\n34 36 37 38 39\\n35 37 38 39 40\\n36 38 39 40 41\\n37 39 40 41 42\\n38 40 41 42 43\\n39 41 42 43 44\\n40 42 43 44 45\\n41 43 44 45 46\\n42 44 45 46 47\\n43 "
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\") == \"4\\n4\""
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\") == 4, \"Incorrect output\""
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5') == 4"
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5') == 4"
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\") == 4, \"Test case 1 failed\"\nassert solution(\"6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\\n\") == 3, \"Test case 2 failed\"\nassert solution(\"6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\\n6 1 2 3 4 5\") == 2, \"Test case 3 failed\"\nassert solution(\"1\\n1 2 3 4 5 6\\n2 1 2 3 4 5\\n3 2 1 4 5 6\\n4 1 2 3 6 5\\n5 2 3 4 5 6\\n6 1 2 3 4 5\\n\") == 4, \"Test case 4 failed\"\nassert solution(\"6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\\n6 1 2 3 4 5\\n\") == 3, \"Test case 5 failed\"\n"
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\") == \"4\"\n\nprint(\"Test Passed\")"
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\") == \"4\"\n"
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5') == '4'"
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"4\\n\"\n"
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n') == '4\\n'"
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7') == '4'"
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n\") == \"4\\n\"\nassert solution(\"8\\n1 1\\n1 2 3 4 5 6 7 8\\n2 3 4 5 6 7 8 9\\n3 4 5 6 7 8 9 10\\n4 5 6 7 8 9 10 11\\n5 6 7 8 9 10 11 12\\n6 7 8 9 10 11 12 13\\n7 8 9 10 11 12 13 14\\n8 9 10 11 12 13 14 15\") == \"16\\n\"\n"
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n4'"
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7') == '4\\n'\n\nfrom typing import List"
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"4\\n4\\n4\\n4\""
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7') == '4'\n"
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\") == \"4\\n4\""
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"4\\n4\\n4\\n4\\n\""
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\") == 6"
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '6\\n'"
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n\") == 6"
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n\") == 6"
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('sample_input.txt').read()) == 6\n\nsolution = \"\"\"def solution(stdin: str) -> int:\n    n = int(stdin.strip())\n    towers = []\n    for _ in range(n):\n        x, y = map(float, stdin.split())\n        towers.append((x, y))\n    max_coverage = sum([max(towers[i].x - towers[i + 1].x, towers[i + 1].x - towers[i + 2].x) for i in range(len(towers) - 1)])\n    max_towers = max([len(towers) - 1])\n    return max_towers\n\"\"\""
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\""
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\") == \"6\""
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\") == 6"
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '6'"
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"5\\n\", \"Invalid solution\""
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == \"The shortest test scheme that satisfies allergies has a duration of 2 days.\"\nassert solution(2) == \"The shortest test scheme that satisfies allergies has a duration of 4 days.\"\nassert solution(3) == \"The shortest test scheme that satisfies allergies has a duration of 6 days.\"\nassert solution(4) == \"The shortest test scheme that satisfies allergies has a duration of 8 days.\"\nassert solution(5) == \"The shortest test scheme that satisfies allergies has a duration of 10 days.\""
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"5\"\n"
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"5\\ndef solution(stdin: str) -> str:\\n\\treturn '5'\\n\""
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n2\\n2\\n2\") == 5\nassert solution(\"2\\n2\\n2\\n2\") == 10\nassert solution(\"1\\n3\\n5\\n1\") == 15\nassert solution(\"2\\n3\\n3\\n1\") == 16\nassert solution(\"2\\n4\\n2\\n1\") == 20\n"
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(2) == 5, \"Incorrect output.\""
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"3\\n2\\n2\\n2\"\n) == \"5\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n2\\n2\\n2\") == 5"
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"5\"\n"
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 5\nassert solution(4) == 5\nassert solution(5) == 5\nassert solution(6) == 5\nassert solution(7) == 5\nassert solution(8) == 5\nassert solution(9) == 5\nassert solution(10) == 5\nassert solution(11) == 5\nassert solution(12) == 5\nassert solution(13) == 5\nassert solution(14) == 5\nassert solution(15) == 5\nassert solution(16) == 5\nassert solution(17) == 5\nassert solution(18) == 5\nassert solution(19) == 5\nassert solution(20) == 5\nassert solution(21) == 5\nassert solution(22) == 5\nassert solution(23) == 5\nassert solution(24) == 5\nassert solution(25) == 5\nassert solution(26) == 5\nassert solution(27) == 5\nassert solution(28) == 5\nassert solution(29) == 5\nassert solution(30) == 5\nassert solution(31) == 5\nassert solution(32) == 5\nassert solution(33) == 5\nassert solution(34) == 5\nassert solution(35) == 5\nassert solution(36) == 5\nassert solution(37) == 5\nassert solution(38) == 5\nassert solution(39) == 5\nassert solution(40) == 5\nassert solution(41) == 5\nassert solution(42) == 5\nassert solution(43) == 5\nassert solution(44) == 5\nassert solution(45) == 5\nassert solution(46) == 5\nassert solution(47) == 5\nassert solution(48) == 5\nassert solution(49) == 5\nassert solution(50) == 5\nassert solution(51) == 5\nassert solution(52) == 5\nassert solution(53) == 5\nassert solution(54) == 5\nassert solution(55) == 5\nassert solution(56) == 5\nassert solution(57) == 5\nassert solution(58) == 5\nassert solution(59) == 5\nassert solution(60) == 5\nassert solution(61) == 5\nassert solution(62) == 5\nassert solution(63) == 5\nassert solution(64) == 5\nassert solution(65) == 5\nassert solution(66) == 5\nassert solution(67) == 5\nassert solution(68) == 5\nassert solution(69) == 5\nassert solution(70) == 5\nassert solution(71) == 5\nassert solution(72) == 5\nassert solution(73) == 5\nassert solution(74) == 5\nassert solution(75) == 5\nassert solution(76) == 5\nassert solution(77) == 5\nassert solution(78) == 5\nassert solution(79) == 5\nassert solution(80) == 5\nassert solution(81) == 5\nassert solution(82) == 5\nassert solution(83) == 5\nassert solution(84) == 5\nassert solution(85) == 5\nassert solution(86) == 5\nassert solution(87) == 5\nassert solution(88) == 5\nassert solution(89) == 5\nassert solution(90) == 5\nassert solution(91) == 5\nassert solution(92) == 5\nassert solution(93) == 5\nassert solution(94) == 5\nassert solution(95) == 5\nassert solution(96) == 5\nassert solution(97) == 5\nassert solution(98) == 5\nassert solution(99) == 5\nassert solution(100) == 5\nassert solution(101) == 5\nassert solution(102) == 5\nassert solution(103) == 5\nassert solution(104) == 5\nassert solution(105) =="
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 3\\n2 2 2 1') == '1 1\\ndef solution(stdin: str) -> str:\\npass\\n'"
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1 1\\n\"\nprint(\"Correct\")"
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"1 1\"\nassert solution(4) == \"2 1\"\nassert solution(5) == \"3 1\"\nassert solution(6) == \"3 2\""
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 3\\n2 2 2 1\") == \"1 1\""
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 3\\n2 2 2 1\") == \"1 1\\ndef solution(stdin: str) -> str:\\npass\""
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 3\\n2 2 2 1\\n') == '1 1\\n'\n"
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 3\\n2 2 2 1\") == \"1 1\""
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 3\\n2 2 2 1\") == \"1 1\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"1 1\\n\"\nassert solution(input()) == \"1 1\\n\"\nassert solution(input()) == \"1 1\\n\"\nassert solution(input()) == \"1 1\\n\"\n"
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '1 1'"
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '10'\n"
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\""
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1') == '10'"
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"123\") == \"1\"\nassert solution(\"12345\") == \"1\"\nassert solution(\"987654321\") == \"10\"\nassert solution(\"12345678901234567890\") == \"10\"\nassert solution(\"9876543210\") == \"10\""
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"10\"\nassert solution(\"2\") == \"10\"\nassert solution(\"3\") == \"11\"\nassert solution(\"4\") == \"12\"\nassert solution(\"5\") == \"13\""
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"10\""
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1') == '10'\nassert solution('2') == '20'\nassert solution('3') == '30'\nassert solution('4') == '40'\nassert solution('5') == '50'\nassert solution('6') == '60'\nassert solution('7') == '70'\nassert solution('8') == '80'\nassert solution('9') == '90'\nassert solution('10') == '100'\nassert solution('11') == '110'\nassert solution('12') == '120'\nassert solution('13') == '130'\nassert solution('14') == '140'\nassert solution('15') == '150'\nassert solution('16') == '160'\nassert solution('17') == '170'\nassert solution('18') == '180'\nassert solution('19') == '190'\nassert solution('20') == '200'\nassert solution('21') == '210'\nassert solution('22') == '220'\nassert solution('23') == '230'\nassert solution('24') == '240'\nassert solution('25') == '250'\nassert solution('26') == '260'\nassert solution('27') == '270'\nassert solution('28') == '280'\nassert solution('29') == '290'\nassert solution('30') == '300'\nassert solution('31') == '310'\nassert solution('32') == '320'\nassert solution('33') == '330'\nassert solution('34') == '340'\nassert solution('35') == '350'\nassert solution('36') == '360'\nassert solution('37') == '370'\nassert solution('38') == '380'\nassert solution('39') == '390'\nassert solution('40') == '400'\nassert solution('41') == '410'\nassert solution('42') == '420'\nassert solution('43') == '430'\nassert solution('44') == '440'\nassert solution('45') == '450'\nassert solution('46') == '460'\nassert solution('47') == '470'\nassert solution('48') == '480'\nassert solution('49') == '490'\nassert solution('50') == '500'\nassert solution('51') == '510'\nassert solution('52') == '520'\nassert solution('53') == '530'\nassert solution('54') == '540'\nassert solution('55') == '550'\nassert solution('56') == '560'\nassert solution('57') == '570'\nassert solution('58') == '580'\nassert solution('59') == '590'\nassert solution('60') == '600'\nassert solution('61') == '610'\nassert solution('62') == '620'\nassert solution('63') == '630'\nassert solution('64') == '640'\nassert solution('65') == '650'\nassert solution('66') == '660'\nassert solution('67') == '670'\nassert solution('68') == '680'\nassert solution('69') == '690'\nassert solution('70') == '700'\nassert solution('71') == '710'\nassert solution('72') == '720'\nassert solution('73') == '730'\nassert solution('74') == '740'\nassert solution('75') == '750'\nassert solution('76') == '760'\nassert solution('77') == '770'\nassert solution('78') == '780'\nassert solution('79') == '790'\nassert solution('80') == '800'\nassert solution('8"
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\") == 10\nassert solution(\"5\") == 5\nassert solution(\"10\") == 5\nassert solution(\"100\") == 15\nassert solution(\"1000\") == 65\nassert solution(\"10000\") == 120\nassert solution(\"100000\") == 165\nassert solution(\"1000000\") == 205\nassert solution(\"10000000\") == 255\nassert solution(\"100000000\") == 305\nassert solution(\"1000000000\") == 355\nassert solution(\"10000000000\") == 405\nassert solution(\"100000000000\") == 455\nassert solution(\"1000000000000\") == 505\nassert solution(\"10000000000000\") == 555\nassert solution(\"100000000000000\") == 605\nassert solution(\"1000000000000000\") == 655\nassert solution(\"10000000000000000\") == 705\nassert solution(\"100000000000000000\") == 755\nassert solution(\"1000000000000000000\") == 805\nassert solution(\"10000000000000000000\") == 855\nassert solution(\"100000000000000000000\") == 905\nassert solution(\"1000000000000000000000\") == 955\nassert solution(\"10000000000000000000000\") == 1005\nassert solution(\"100000000000000000000000\") == 1055\nassert solution(\"1000000000000000000000000\") == 1105\nassert solution(\"1000000000000000000000000\") == 1155\nassert solution(\"10000000000000000000000000\") == 1205\nassert solution(\"100000000000000000000000000\") == 1255\nassert solution(\"1000000000000000000000000000\") == 1305\nassert solution(\"10000000000000000000000000000\") == 1355\nassert solution(\"1000000000000000000000000000000\") == 1405\nassert solution(\"1000000000000000000000000000000\") == 1455\nassert solution(\"10000000000000000000000000000000\") == 1505\nassert solution(\"1000000000000000000000000000000000\") == 1555\nassert solution(\"100000000000000000000000000000000\") == 1605\nassert solution(\"1000000000000000000000000000000000\")"
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n\") == \"10\"\n"
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n\") == \"10\""
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 0.001\n"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2\\n1000 1 0\\n1 1000 1\") == 0.001"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"0.001\\n\""
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2\\n1000 1 0\\n1 1000 1\") == \"0.001\"  # expected output: 0.001\n"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2\\n1000 1 0\\n1 1000 1\") == 0.001\nassert solution(\"1 2\\n1000 1 1\\n1 1000 0\") == 0.001\nassert solution(\"1 2\\n1000 1 0\\n1 1000 2\") == 0.001\nassert solution(\"1 2\\n1000 1 0\\n1 1000 3\") == 0.001\nassert solution(\"1 2\\n1000 1 0\\n1 1000 4\") == 0.001\nassert solution(\"1 2\\n1000 1 0\\n1 1000 5\") == 0.001\nassert solution(\"1 2\\n1000 1 0\\n1 1000 6\") == 0.001\nassert solution(\"1 2\\n1000 1 0\\n1 1000 7\") == 0.001\nassert solution(\"1 2\\n1000 1 0\\n1 1000 8\") == 0.001\nassert solution(\"1 2\\n1000 1 0\\n1 1000 9\") == 0.001\nassert solution(\"1 2\\n1000 1 0\\n1 1000 10\") == 0.001\nassert solution(\"1 2\\n1000 1 0\\n1 1000 11\") == 0.001\nassert solution(\"1 2\\n1000 1 0\\n1 1000 12\") == 0.001\nassert solution(\"1 2\\n1000 1 0\\n1 1000 13\") == 0.001\nassert solution(\"1 2\\n1000 1 0\\n1 1000 14\") == 0.001\nassert solution(\"1 2\\n1000 1 0\\n1 1000 15\") == 0.001\nassert solution(\"1 2\\n1000 1 0\\n1 1000 16\") == 0.001\nassert solution(\"1 2\\n1000 1 0\\n1 1000 17\") == 0.001\nassert solution(\"1 2\\n1000 1 0\\n1 1000 18\") == 0.001\nassert solution(\"1 2\\n1000 1 0\\n1 1000 19\") == 0.001\nassert solution(\"1 2\\n1000 1 0\\n1 1000 20\") == 0.001\nassert solution(\"1 2\\n1000 1 0\\n1 1000 21\") == 0.001\nassert solution(\"1 2\\n1000 1 0\\n1 1000 22\") == 0.001\nassert solution(\"1 2\\n1000 1 0\\n1 1000 23\") == 0.001\nassert solution(\"1 2\\n1000 1 0\\n1 1000 24\") == 0.001\nassert solution(\"1 2\\n1000 1 0\\n1 1000 25\") == 0.001\nassert solution(\"1 2\\n1000 1 0\\n1 1000 26\") == 0.001\nassert solution(\"1 2\\n1000 1 0\\n1 1000 27\") == 0.001\nassert solution(\"1 2\\n1000 1 0\\n1 1000 28\")"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"0.001\", \"The expected output is not correct.\"\n"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0.001\"\nassert solution() == \"0"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2\\n1000 1 0\\n1 1000 1\") == 0.001"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == \"0.001\""
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == 'Output:\\n0\\n', 'Your code is not correct'"
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 0"
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3 2 10000\\n1 2\\n2 3\\n3 1\") == \"0\\n\"\nassert solution(\"4 6 4 10000\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\") == \"2\\n\"\nassert solution(\"7 8 6 10000\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\") == \"5\\n\""
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3 2 10000\\n1 2\\n2 3\\n3 1\") == 0\nassert solution(\"5 4 3 5000\\n1 2\\n2 3\\n3 4\\n4 5\") == 3"
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 0, \"Test failed\"\n"
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3 2 10000\\n1 2\\n2 3\\n3 1\") == \"0\\n\""
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"0\\n\", \"The solution should be 0.\""
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 'Output:\\n0\\n'"
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Error in solution: {output}!= {result}\"\n"
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3 2 10000\\n1 2\\n2 3\\n3 1\") == 0\nassert solution(\"3 3 2 10000\\n1 2\\n2 3\\n3 2\") == 1\nassert solution(\"3 3 2 10000\\n1 2\\n2 3\\n3 1\") == 1\nassert solution(\"3 3 2 10000\\n1 2\\n2 3\\n3 2\") == 2\n"
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\") == 26, \"Test case 1 failed\""
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"26\", \"The output is incorrect.\""
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 26, \"The expected output is not correct.\""
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output() # check if the given code is correct\n"
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 26\n"
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\") == \"26\""
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 26"
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 26, \"Incorrect output\""
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\") == \"26\""
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n4\n0 1 1 1\n1 0 2 2\n1 2 0 3\n1 2 3 0\n''') == '26'\n"
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == \"0.333333333\\n0.666666667\\n\"\nassert solution(open('input.txt', 'r')) == \"0.333333333\\n0.666666667\\n\"\nassert solution(open('input.txt', 'r')) == \"0.333333333\\n0.666666667\\n\"\nassert solution(open('input.txt', 'r')) == \"0.333333333\\n0.666666667\\n\"\nassert solution(open('input.txt', 'r')) == \"0.333333333\\n0.666666667\\n\"\nassert solution(open('input.txt', 'r')) == \"0.333333333\\n0.666666667\\n\"\nassert solution(open('input.txt', 'r')) == \"0.333333333\\n0.666666667\\n\"\nassert solution(open('input.txt', 'r')) == \"0.333333333\\n0.666666667\\n\"\nassert solution(open('input.txt', 'r')) == \"0.333333333\\n0.666666667\\n\"\nassert solution(open('input.txt', 'r')) == \"0.333333333\\n0.666666667\\n\"\nassert solution(open('input.txt', 'r')) == \"0.333333333\\n0.666666667\\n\"\nassert solution(open('input.txt', 'r')) == \"0.333333333\\n0.666666667\\n\"\nassert solution(open('input.txt', 'r')) == \"0.333333333\\n0.666666667\\n\"\nassert solution(open('input.txt', 'r')) == \"0.333333333\\n0.666666667\\n\"\nassert solution(open('input.txt', 'r')) == \"0.333333333\\n0.666666667\\n\"\nassert solution(open('input.txt', 'r')) == \"0.333333333\\n0.666666667\\n\"\nassert solution(open('input.txt', 'r')) == \"0.333333333\\n0.666666667\\n\"\nassert solution(open('input.txt', 'r')) == \"0.333333333\\n0.666666667\\n\"\nassert solution(open('input.txt', 'r')) == \"0.333333333\\n0.666666667\\n\"\nassert solution(open('input.txt', 'r')) == \"0.333333333\\n0.666666667\\n\"\nassert solution(open('input.txt', 'r')) == \"0.333333333\\n0.666666667\\n\"\nassert solution(open('input.txt', 'r')) == \"0.333333333\\n0.666666667\\n\"\nassert solution(open('input.txt', 'r')) == \"0.333333333\\n0.666666667\\n\"\nassert solution(open('input.txt', 'r')) == \"0.333333333\\n0.666666667\\n\"\nassert solution(open('input.txt', 'r')) == \"0.33"
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == '''\n0.333333333\n0.666666667\n'''"
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin='3 2\\n20 20 20 40\\nX.X\\nT.T') == '0.333333333\\n0.666666667\\n'\n\nimport random"
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '''0.333333333\n0.666666667'''\n"
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected_output, f\"The output is {solution(stdin)}, but expected {expected_output}\"\n"
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2\\n20 20 20 40\\nX.X\\nT.T\") == \"0.333333333\\n0.666666667\""
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin='3 2\\n20 20 20 40\\nX.X\\nT.T\\n') == '0.333333333\\n0.666666667\\n'\nassert solution(stdin='3 2\\n20 20 20 40\\nX.X\\nT.T\\n') == '0.333333333\\n0.666666667\\n'"
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 2\\n20 20 20 40\\nX.X\\nT.T') == '0.333333333\\n0.666666667'"
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"\"\"0.333333333\n0.666666667\n\"\"\"\n"
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"0.333333333\\n0.666666667\\n\"\n"
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('45 45 0 0') == '0.75', \"Test 1 failed\""
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"45 45 0 0\") == \"0.75\"\n"
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"45 45 0 0\") == \"0.75\""
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"45 45 0 0\") == \"0.75\""
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"45 45 0 0\") == 0.75"
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('45 45 0 0') == '0.75'\n"
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"45 45 0 0\") == \"0.75\""
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"0.75\""
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"The output does not match the expected output. Input: {input()}, Output: {output}\""
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"45 45 0 0\") == 0.75"
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\") == 4, \"Test failed\"\n"
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(0, 1, 2) == 4\nassert solution(0, 3, 8) == 6\nassert solution(1, 2, 11) == 6\nassert solution(2, 3, 5) == 13\nassert solution(2, 4, 2) == 21\nassert solution(4, 3, 9) == 32"
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9') == 4\nprint('All tests passed')"
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9') == 4, \"The output should be 4, but it's actually {}.\".format(solution('5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9'))\n"
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\") == 4, \"Expected 4, but got {}\".format(solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\"))"
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\") == \"4\\n\""
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n\") == 4\nassert solution(\"1 1000000\\n5000000\\n10000000\\n10000000\\n20000000\\n30000000\\n\") == 30000000"
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n\") == 4, \"The correctness of the solution is not verified.\""
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n\") == 4"
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"4\\n\""
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n10 10 0 5\") == \"100\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n10 10 0 5\") == \"100\"\n"
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == sample_output, f\"Expected {sample_output}, got {solution(sample_input)}\""
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '100'"
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"100\", \"The function should return 100.\"\n"
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"100\""
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n10 10 0 5\") == \"100\"\nassert solution(\"2\\n5 0 10 5\") == \"20\"\nassert solution(\"3\\n10 5 0 5\") == \"15\"\nassert solution(\"4\\n5 5 10 0\") == \"50\"\nassert solution(\"5\\n10 10 10 10\") == \"250\"\nassert solution(\"6\\n5 10 0 10\") == \"150\"\nassert solution(\"7\\n10 5 5 0\") == \"50\"\nassert solution(\"8\\n10 10 10 5\") == \"300\"\nassert solution(\"9\\n10 5 0 0\") == \"100\"\nassert solution(\"10\\n5 10 10 0\") == \"350\""
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '100'"
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n10 10 0 5\") == \"100\"\n\nfrom typing import List"
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1\\n10 10 0 5\\n') == '100\\n'"
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == 1, \"Your solution is incorrect.\""
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 0 2 2\\n1 1 3 4\\n5 7 6 8\") == \"1\"\nassert solution(\"0 0 2 2\\n1 1 3 4\\n1 2 3 4\") == \"0\"\nassert solution(\"0 0 1 1\\n1 1 3 4\") == \"0\"\nassert solution(\"0 0 2 2\\n1 1 2 2\") == \"1\"\nassert solution(\"0 0 2 2\\n1 1 2 2\\n1 2 2 2\") == \"1\""
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 0 2 2\\n1 1 3 4\\n5 7 6 8\\n\") == \"1\""
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 0 2 2\\n1 1 3 4\\n5 7 6 8\") == 1\nassert solution(\"0 0 2 2\\n1 1 3 5\\n5 7 6 8\") == 0\nassert solution(\"0 0 2 2\\n1 1 3 4\\n5 7 6 8\\n10 10 10 10\") == 0\n"
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 0 2 2\\n1 1 3 4\\n5 7 6 8\") == \"1\"\nassert solution(\"0 0 2 2\\n1 1 3 4\\n10 10 10 10\") == \"0\"\nassert solution(\"0 0 2 2\\n1 1 3 4\\n-1000 1000 2000 3000\") == \"0\"\nassert solution(\"0 0 2 2\\n1 1 3 4\\n-1000 1000 2000 3000\") == \"0\"\nassert solution(\"0 0 2 2\\n1 1 3 4\\n-1000 1000 2000 3000\") == \"0\""
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution([3, 0, 2, 2, 1, 1, 3, 4, 5, 7, 6, 8]) == 1\nassert solution([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6]) == 1\nassert solution([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7]) == 0\nassert solution([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 8]) == 0"
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 0 2 2\\n1 1 3 4\\n5 7 6 8\") == 1\nassert solution(\"0 0 1 1\") == 0\n"
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 0 2 2\\n1 1 3 4\\n5 7 6 8\") == 1\nassert solution(\"0 0 2 2\\n1 1 3 4\\n5 7 6 9\") == 0\nassert solution(\"0 0 2 2\\n1 1 3 4\\n5 7 6 8\\n0 0 2 2\\n1 1 3 4\\n5 7 6 9\") == 0\nassert solution(\"0 0 2 2\\n1 1 3 4\\n5 7 6 8\\n0 0 2 2\\n1 1 3 4\\n5 7 6 8\") == 0"
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, \"The output is incorrect.\""
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 0 2 2\\n1 1 3 4\\n5 7 6 8\") == 1\n\nassert solution(\"0 0 3 4\\n1 2 5 6\\n2 3 7 8\") == 1\n\nassert solution(\"0 0 1 3\\n0 1 2 3\") == 0"
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S') == 17\nassert solution('10 10\\nW W W W W\\n1 2 3 4 5\\n6 5 4 3 2\\n7 6 5 4 3\\n8 7 6 5 4\\n9 8 7 6 5\\n10 9 8 7 6\\n11 10 9 8 7\\n12 11 10 9 8\\n13 12 11 10 9\\n14 13 12 11 10\\n15 14 13 12 11\\n16 15 14 13 12\\n17 16 15 14 13\\n18 17 16 15 14\\n19 18 17 16 15\\n20 19 18 17 16\\n21 20 19 18 17\\n22 21 20 19 18\\n23 22 21 20 19\\n24 23 22 21 20\\n25 24 23 22 21\\n26 25 24 23 22\\n27 26 25 24 23\\n28 27 26 25 24\\n29 28 27 26 25\\n30 29 28 27 26\\n31 30 29 28 27\\n32 31 30 29 28\\n33 32 31 30 29\\n34 33 32 31 30\\n35 34 33 32 31\\n36 35 34 33 32\\n37 36 35 34 33\\n38 37 36 35 34\\n39 38 37 36 35\\n40 39 38 37 36\\n41 40 39 38 37\\n42 41 40 39 38\\n43 42 41 40 39\\n44 43 42 41 40\\n45 44 43 42 41\\n46 45 44 43 42\\n47 46 45 44 43\\n48 47 46 45 44\\n49 48 47 46 45\\n50 49 48 47 46\\n51 50 49 48 47\\n52 51 50 49 48\\n53 52 51 50 49\\n54 53 52 51 50\\n55 54 53 52 51\\n56 55 54 53 52\\n57 56 55 54 53\\n58 57 56 55 54\\n59 58 57 56 55\\n60 59 58 57 56\\n61 60 59 58 57\\n62 61 60 59 58\\n63 62 61 60 59\\n64 63 62 61 60\\n65"
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == 17, \"The function should return 17, but it returns {}.\".format(solution)"
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n    5 5\n        E E E E E\n    1 2 3 4 5\n    5 4 3 2 1\n        -2 -2 -2 -2 -2\n    8 8 8 8 8\n    9 9 9 9 9\n        S S S S S\n    ''') == '17'\n"
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S') == 17, \"Incorrect output\"\nprint(\"All test cases passed successfully!\")"
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\") == \"17\""
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"17\\n\", \"Expected output: 17\\nActual output: {}\".format(solution(stdin))"
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S') == 17, \"The output is incorrect.\""
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''5 5\nE E E E E\n1 2 3 4 5\n5 4 3 2 1\n-2 -2 -2 -2 -2\n8 8 8 8 8\n9 9 9 9 9\nS S S S S''') == '17'\nassert solution('''5 5\nE E E E E\n1 2 3 4 5\n5 4 3 2 1\n-2 -2 -2 -2 -2\n8 8 8 8 8\n9 9 9 9 9\nS S S S S''') == '18'\nassert solution('''5 5\nE E E E E\n1 2 3 4 5\n5 4 3 2 1\n-2 -2 -2 -2 -2\n8 8 8 8 8\n9 9 9 9 9\nS S S S S''') == '19'\nassert solution('''5 5\nE E E E E\n1 2 3 4 5\n5 4 3 2 1\n-2 -2 -2 -2 -2\n8 8 8 8 8\n9 9 9 9 9\nS S S S S''') == '20'\nassert solution('''5 5\nE E E E E\n1 2 3 4 5\n5 4 3 2 1\n-2 -2 -2 -2 -2\n8 8 8 8 8\n9 9 9 9 9\nS S S S S''') == '21'\nassert solution('''5 5\nE E E E E\n1 2 3 4 5\n5 4 3 2 1\n-2 -2 -2 -2 -2\n8 8 8 8 8\n9 9 9 9 9\nS S S S S''') == '22'\nassert solution('''5 5\nE E E E E\n1 2 3 4 5\n5 4 3 2 1\n-2 -2 -2 -2 -2\n8 8 8 8 8\n9 9 9 9 9\nS S S S S''') == '23'\nassert solution('''5 5\nE E E E E\n1 2 3 4 5\n5 4 3 2 1\n-2 -2 -2 -2 -2\n8 8 8 8 8\n9 9 9 9 9\nS S S S S''') == '24'\nassert solution('''5 5\nE E E E E\n1 2 3 4 5\n5 4 3 2 1\n-2 -2 -2 -2 -2\n8 8 8 8 8\n9 9 9 9 9\nS S S S S''') == '25'\nassert solution('''5 5\nE E E E E\n1 2 3 4 5\n5 4 3 2 1\n-2 -2 -2 -2 -2\n8 8 8 8 8\n9 9 9 9 9\nS S S S S''') == '26'\nassert solution('''5 5\nE E E E E\n1 2 3 4 5\n5 4 3 2 1\n-2 -2 -2 -2 -2\n8 8 8 8 8\n9 9 9 9 9\nS S S S S''') == '27'\nassert solution('''5 5\nE E E E E\n1 2 3 4 5\n5 4 3 2 1\n-2 -2 -2 -2 -2\n8 8 8 8 8\n9 9 9 9 9\nS S S S S''') == '28'\nassert solution('''5 5\nE E E E E\n1 2 3 4 5\n5 4 3 2 1\n-2 -2 -2 -2 -2\n8 8 8 8 8\n9 9 9 9 9\nS S S S S''') == '29'\nassert solution('''5 5\nE E E E E\n1 2 3 4 5\n5 "
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\") == \"17\""
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"5 5\nE E E E E\n1 2 3 4 5\n5 4 3 2 1\n-2 -2 -2 -2 -2\n8 8 8 8 8\n9 9 9 9 9\nS S S S S\"\"\") == 17"
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n3 2 3 1 1\\n\") == \"1 4 3 5 2\\n2 3 5 1 4\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9\\n\") == \"impossible\"\n"
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"impossible\""
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n3 2 3 1 1') == '1 4 3 5 2\\n2 3 5 1 4\\n'\n"
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n3 2 3 1 1\") == \"1 4 3 5 2\\n2 3 5 1 4\"\nassert solution(\"5\\n3 2 4 1 1\") == \"impossible\"\nassert solution(\"5\\n1 2 3 4 5\") == \"impossible\""
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n3 2 3 1 1') == '1 4 3 5 2\\n2 3 5 1 4'\nassert solution('6\\n1 2 3 4 5 6') == 'impossible'"
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"impossible\""
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '1 4 3 5 2\\n2 3 5 1 4\\n'"
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n3 2 3 1 1\\n\") == \"1 4 3 5 2\\n2 3 5 1 4\""
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n3 2 3 1 1\") == \"1 4 3 5 2\\n2 3 5 1 4\"\nassert solution(\"5\\n1 1 2 3 4\") == \"impossible\""
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1\\n3 0 1\\n1 4') == 0.76772047\nassert solution('1\\n3 0 1\\n1 1') == 0.0\nassert solution('1\\n3 0 1\\n1 0.5') == 0.76772047\nassert solution('1\\n3 0 1\\n1 -1') == 1.0\nassert solution('1\\n3 0 1\\n1 10000') == 1.0\nassert solution('1\\n3 0 1\\n1 -10000') == 1.0\nassert solution('1\\n3 0 1\\n1 1000000') == 0.76772047\nassert solution('1\\n3 0 1\\n1 -1000000') == 0.0"
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == sample_output, f\"The solution is incorrect. Please fix the code and re-run the tests.\""
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 0.76772047, \"The probability is incorrect.\""
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"0.76772047\", \"Test failed\"\n\nfrom typing import List\nimport random"
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    1\n    3 0 1\n    1 4\n    \"\"\"\n) == \"0.76772047\\n\"\n"
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected\nfor _ in range(tests):\n    expected = input()\n    stdin = input()\n    actual = solution(stdin)\n    assert abs(float(actual) - float(expected)) <= 10**-6, f\"Actual: {actual}, Expected: {expected}\""
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1\\n3 0 1\\n1 4') == 0.76772047, \"The correct output is: 0.76772047\""
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n3 0 1\\n1 4\") == 0.76772047"
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1\\n3 0 1\\n1 4\\n') == 0.76772047\nassert solution('2\\n3 0 1\\n1 4\\n') == 0.76772047\nassert solution('3\\n3 0 1\\n1 4\\n') == 0.76772047\nassert solution('4\\n3 0 1\\n1 4\\n') == 0.76772047\nassert solution('5\\n3 0 1\\n1 4\\n') == 0.76772047\nassert solution('6\\n3 0 1\\n1 4\\n') == 0.76772047\nassert solution('7\\n3 0 1\\n1 4\\n') == 0.76772047\nassert solution('8\\n3 0 1\\n1 4\\n') == 0.76772047\nassert solution('9\\n3 0 1\\n1 4\\n') == 0.76772047\nassert solution('10\\n3 0 1\\n1 4\\n') == 0.76772047\nassert solution('11\\n3 0 1\\n1 4\\n') == 0.76772047\nassert solution('12\\n3 0 1\\n1 4\\n') == 0.76772047\nassert solution('13\\n3 0 1\\n1 4\\n') == 0.76772047\nassert solution('14\\n3 0 1\\n1 4\\n') == 0.76772047\nassert solution('15\\n3 0 1\\n1 4\\n') == 0.76772047\nassert solution('16\\n3 0 1\\n1 4\\n') == 0.76772047\nassert solution('17\\n3 0 1\\n1 4\\n') == 0.76772047\nassert solution('18\\n3 0 1\\n1 4\\n') == 0.76772047\nassert solution('19\\n3 0 1\\n1 4\\n') == 0.76772047\nassert solution('20\\n3 0 1\\n1 4\\n') == 0.76772047\nassert solution('21\\n3 0 1\\n1 4\\n') == 0.76772047\nassert solution('22\\n3 0 1\\n1 4\\n') == 0.76772047\nassert solution('23\\n3 0 1\\n1 4\\n') == 0.76772047\nassert solution('24\\n3 0 1\\n1 4\\n') == 0.76772047\nassert solution('25\\n3 0 1\\n1 4\\n') == 0.76772047\nassert solution('26\\n3 0 1\\n1 4\\n') == 0.76772047\nassert solution('27\\n3 0 1\\n1 4\\n') == 0.76772047\nassert solution('28\\n3 0 1\\n1 4\\n') == 0.76772047\nassert solution('29\\n3 0 1\\n1 4\\n') == 0.76772047\nassert solution('30\\n3 0 1\\n1 4\\n') == 0.76772047\nassert solution('31\\n3 0 1\\n1 4\\n') == 0.76772047\nassert solution('32\\n3 0 1"
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input) == output, f\"The output does not match the expected output. Expected: {output}, Received: {solution(input)}\""
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('hello teams') == '27'\n\nSolution:\n\nThe problem can be solved by using dynamic programming approach. We can create a 2D array `dp` of size (len(s_1), len(s_2)) where `dp[i][j]` represents the minimum number of moves needed to modify s_1 into s_2. We can fill this array in a bottom-up manner.\n\nFor each position `i` and substring `s_2[:i]`, we can calculate the number of moves using the following table:\n\n| Move 1 | Move 2 | Move 3 | Move 4 | Move 5 | Total Moves |\n|--------|--------|--------|--------|--------|------------|\n|     1 |     1 |     1 |     1 |     1 |          5 |\n|     1 |     0 |     1 |     0 |     1 |          5 |\n|     1 |     1 |     1 |     1 |     0 |          5 |\n|     1 |     1 |     1 |     1 |     1 |          5 |\n|     0 |     1 |     1 |     1 |     1 |          5 |\n\nWe can fill the `dp` array in a bottom-up manner by iterating through the substrings and using the above table to calculate the minimum number of moves.\n\nThe final answer can be found by tracing the minimum number of moves by tracing the bottom-right corner of the dp array. The smallest element in the dp array represents the answer.\n\nHere's the Python code:\n\n```python\n"
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"hello teams\") == \"27\", \"The solution should return 27\"\n"
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"hello teams\") == \"27\""
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"hello teams\") == \"27\\n\", \"Your solution is not correct\"\nassert solution(\"aaa\") == \"1\\n\", \"Your solution is not correct\"\nassert solution(\"zzz\") == \"1\\n\", \"Your solution is not correct\"\nassert solution(\"abcde\") == \"27\\n\", \"Your solution is not correct\"\nassert solution(\"abcdef\") == \"1\\n\", \"Your solution is not correct\""
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"hello teams\") == \"27\""
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"hello teams\") == \"27\""
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"hello teams\") == \"27\"\n"
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"hello teams\") == \"27\"\n"
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"hello teams\") == \"27\\n\", \"First sample input should be '27\\n', but got '{}'.\".format(solution(\"hello teams\"))\n\nassert solution(\"test\") == \"1\\n\", \"Second sample input should be '1\\n', but got '{}'.\".format(solution(\"test\"))"
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('hello teams') == '27'"
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == 2\nassert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\\n3 0 0\") == 0"
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '2' # Change this line to test the solution"
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 2, \"Test failed\""
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 2, \"Test failed\"\n"
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == 2, \"Testcase failed\""
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == 2, \"Test 1\""
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3') == 2, \"The output should be 2.\"\n"
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == 2\nprint(\"All tests passed!\")"
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin: str) == \"2\", \"Your solution is incorrect. Please see the sample output and test cases for the correctness.\""
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncad\\n\") == \"26\""
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncad\") == \"26\"\nassert solution(\"5 3\\nabc\\ndef\\nghi\\n\") == \"26\"\nassert solution(\"5 3\\nabcd\\nefg\\nhij\\n\") == \"26\"\nassert solution(\"5 3\\nabcdefghijk\\n\") == \"26\"\nassert solution(\"5 3\\nabcdefghijklmnopqrstuvwxyz\\n\") == \"26\"\n"
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 3\\na\\nb\\nc\\nd\\ne\\ncad') == 26\n"
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 3\\na\\nb\\nc\\nd\\ne\\n\\n\\n\\n') == '26'"
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncad\") == \"26\"\n"
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\na\\nb\\nc\\nd\\ne\") == \"26\\ndef solution(stdin: str) -> str:\\npass\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\") == \"26\\ndef solution(stdin: str) -> str:\\npass\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\") == \"26\\ndef solution(stdin: str) -> str:\\npass\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\") == \"26\\ndef solution(stdin: str) -> str:\\npass\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\") == \"26\\ndef solution(stdin: str) -> str:\\npass\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\") == \"26\\ndef solution(stdin: str) -> str:\\npass\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\") == \"26\\ndef solution(stdin: str) -> str:\\npass\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\") == \"26\\ndef solution(stdin: str) -> str:\\npass\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\") == \"26\\ndef solution(stdin: str) -> str:\\npass\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\") == \"26\\ndef solution(stdin: str) -> str:\\npass\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\") == \"26\\ndef solution(stdin: str) -> str:\\npass\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\") == \"26\\ndef solution(stdin: str) -> str:\\npass\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\") == \"26\\ndef solution(stdin: str) -> str:\\npass\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\") == \"26\\ndef solution(stdin: str) -> str:\\npass\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\") == \"26\\ndef solution(stdin: str) -> str:\\npass\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\") == \"26\\ndef solution(stdin: str) -> str:\\npass\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\") == \"26\\ndef solution(stdin: str) -> str:\\npass\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\") == \"26\\ndef solution(stdin: str) -> str:\\npass\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\") == \"26\\ndef solution(stdin: str) -> str:\\npass\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\") == \"26\\ndef solution(stdin: str) -> str:\\npass\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\") == \"26\\ndef solution(stdin: str) -> str:\\npass\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\") == \"26\\ndef solution(stdin: str) -> str:\\npass\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\") == \"26\\ndef solution(stdin: str) -> str:\\npass\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\") == \"26\\ndef solution(stdin: str) -> str:\\npass\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\") == \"26\\ndef solution(stdin: str) -> str:\\npass\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\") == \"26\\ndef solution(stdin: str) -> str:\\npass\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\") == \"26\\ndef solution(stdin: str) -> str:\\npass\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\") == \"26\\ndef solution(stdin: str) -> str:\\npass\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\") =="
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"26\"\nassert solution(input()) == \"def\"\nassert solution(input()) == \"ab\"\nassert solution(input()) == \"ab\"\nassert solution(input()) == \"a\""
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(5, 3) == \"26\"\nassert solution(10, 3) == \"30\"\nassert solution(15, 4) == \"35\""
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '26'"
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"26\"\n"
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 10 30\\n10 5 3 1 3\") == \"3 5 2 1 4\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 10 30\\n10 5 3 1 3\") == \"3 5 2 1 4\"\nassert solution(\"6 10 30\\n10 5 3 1 3\") == \"impossible\"\nassert solution(\"5 5 30\\n10 5 3 1 3\") == \"impossible\""
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 10 30\\n10 5 3 1 3\") == \"3 5 2 1 4\"\nassert solution(\"5 10 30\\n10 5 3 1 2\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 1 3\\n10 5 3 1 4\\n10 5 3 1 5\\n10 5 3 1 6\\n10 5 3 1 7\\n10 5 3 1 8\\n10 5 3 1 9\\n10 5 3 1 10\\n10 5 3 1 11\\n10 5 3 1 12\\n10 5 3 1 13\\n10 5 3 1 14\\n10 5 3 1 15\\n10 5 3 1 16\\n10 5 3 1 17\\n10 5 3 1 18\\n10 5 3 1 19\\n10 5 3 1 20\\n10 5 3 1 21\\n10 5 3 1 22\\n10 5 3 1 23\\n10 5 3 1 24\\n10 5 3 1 25\\n10 5 3 1 26\\n10 5 3 1 27\\n10 5 3 1 28\\n10 5 3 1 29\\n10 5 3 1 30\\n10 5 3 1 31\\n10 5 3 1 32\\n10 5 3 1 33\\n10 5 3 1 34\\n10 5 3 1 35\\n10 5 3 1 36\\n10 5 3 1 37\\n10 5 3 1 38\\n10 5 3 1 39\\n10 5 3 1 40\\n10 5 3 1 41\\n10 5 3 1 42\\n10 5 3 1 43\\n10 5 3 1 44\\n10 5 3 1 45\\n10 5 3 1 46\\n10 5 3 1 47\\n10 5 3 1 48\\n10 5 3 1 49\\n10 5 3 1 50\\n10 5 3 1 51\\n10 5 3 1 52\\n10 5 3 1 53\\n10 5 3 1 54\\n10 5 3 1 55\\n10 5 3 1 56\\n10 5 3 1 57\\n10 5 3 1 58\\n10 5 3 1 59\\n10 5 3 1 60\\n10 5 3 1 61\\n10 5 3 1 62\\n10 5 3 1 63\\n10 5 3 1 64\\n10 5 3 1 65\\n10 5 3 1 66\\n10 5 3 1 67\\n10 5 3 1 68\\n10 5 3 1 69\\n10 5 3 1 70\\n10 5 3 1 71\\n10 5 3 1 72\\n10 5 3 1 73\\n10 5 3 1 74\\n10 5 3 1 75\\n10 5 3 "
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 10 30\\n10 5 3 1 3\") == \"3 5 2 1 4\"\nassert solution(\"5 10 30\\n10 5 3 1 1\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 1 2\") == \"impossible\"\nassert solution(\"5 10 30\\n10 5 3 100 10\") == \"impossible\"\n"
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 10 30\\n10 5 3 1 3\") == \"3 5 2 1 4\""
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input) == output, f\"The output {solution(input)} is incorrect.\" for input, output in [\n    (input, output) for input in [\n        (3, 5, 2, 1, 4),\n        (1, 2, 3, 4, 5),\n        (1, 2, 3, 4, 6),\n        (1, 2, 3, 4, 7),\n        (1, 2, 3, 4, 8),\n    ]\n]"
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 10 30\\n10 5 3 1 3\") == \"3 5 2 1 4\""
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 10 30\\n10 5 3 1 3\") == \"3 5 2 1 4\"\n"
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 10 30\\n10 5 3 1 3') == '3 5 2 1 4'\n"
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 10 30\\n10 5 3 1 3\") == \"3 5 2 1 4\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(None) == 2\nassert solution(\"3\") == 2\nassert solution(\"1 1\\n2 3\\n2 3\") == 2"
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 1\\n2 3\\n2 3\") == \"2\""
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 2, \"Test failed for function solution()\""
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"2\"\n"
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Test case failed. Expected {expected}, got {solution(input())}\"\n"
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 1\\n2 3\\n2 3\\n\") == \"2\"\nprint(\"All tests pass\")"
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 1\\n2 3\\n2 3\") == \"2\"\n"
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n1 1\\n2 3\\n2 3') == '2\\n'\nassert solution('10\\n5 10\\n15 30\\n5 15\\n20 40\\n10 20\\n') =='shovel time!\\n'"
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 1\\n2 3\\n2 3\") == 2\nassert solution(\"4\\n1 1\\n2 3\\n2 4\") == 1\nassert solution(\"1\\n2 3\\n3 4\") == 1\nassert solution(\"1\\n2 3\\n3 4\\n4 5\") == 1\n"
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 1\\n2 3\\n2 3\") == 2\n\nfrom math import modpow"
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == sample_output, f\"Test case {i + 1} failed.\"\nfor i in range(2, 3):\n    assert solution(sample_input) == sample_output, f\"Test case {i + 1} failed.\""
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 2 1 2\") == \"3\\n\"\nassert solution(\"5\\n1 2 1 2\") == \"4\\n\""
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(4) == \"3\\n\"\nassert solution(5) == \"4\\n\"\nassert solution(6) == \"6\\n\"\nassert solution(7) == \"9\\n\"\nassert solution(8) == \"12\\n\"\nassert solution(9) == \"15\\n\"\nassert solution(10) == \"18\\n\""
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 2 1 2\") == \"3\"\n"
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '3', 'Please implement the solution for the given problem statement'"
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n1 2 1 2') == '3'\nassert solution('5\\n1 2 1 2\\n2 3 1 2\\n3 1 1 1') == '3'\nassert solution('6\\n1 2 1 2\\n2 3 1 2\\n3 1 1 1\\n4 1 1 1\\n5 1 1 1\\n6 1 1 1') == '3'"
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected, f\"Expected '{expected}', but got '{solution(stdin)}'.\""
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\"\n"
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"3\\n\"\n"
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(4) == 3\n"
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4 999999937\") == \"79\\n\"\nassert solution(\"10 10 1000000007\") == \"24669\\n\"\nassert solution(\"2 2 1000000007\") == \"1\\n\"\nassert solution(\"2 3 1000000007\") == \"5\\n\""
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4 999999937\") == \"79\""
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4 999999937\") == 79, \"The output is incorrect.\""
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4 999999937\") == 79\nassert solution(\"10 10 1000000007\") == 2"
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4 999999937\") == \"79\", \"The output should be 79.\"\n"
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4 999999937\") == \"79\""
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4 999999937\") == 79, \"The answer is incorrect\"\n"
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4 999999937\") == \"79\\n\"\n"
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4 999999937\") == 79\nassert solution(\"4 3 999999937\") == 0\n"
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4 999999937\") == \"79\""
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"zucchini\"\nassert solution(stdin) == \"mozzarella\"\nassert solution(stdin) == \"mushrooms\"\nassert solution(stdin) == \"artichoke\""
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n4 +zucchini +mozzarella +mushrooms -artichoke\") == \"zucchini\\nmozzarella\\nmushrooms\\nartichoke\""
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == 'zucchini\\nmozzarella\\nmushrooms\\nartichoke', \"Invalid Output\"\n"
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n4 +zucchini +mozzarella +mushrooms -artichoke\") == \"zucchini mozzarella mushrooms artichoke\""
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n4 +zucchini +mozzarella +mushrooms -artichoke\") == \"zucchini\\nmozzarella\\nmushrooms\\nartichoke\\n\""
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n4 +zucchini +mozzarella +mushrooms -artichoke\") == \"zucchini\\nmozzarella\\nmushrooms\\nartichoke\\n\"\n\nsolution(\"1\\n4 +zucchini +mozzarella +mushrooms -artichoke\")"
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n4 +zucchini +mozzarella +mushrooms -artichoke\\n\") == \"zucchini\\nmozzarella\\nmushrooms\\nartichoke\"\nassert solution(\"2\\n1 +apple -banana -orange -pear -apple\\n\") == \"apple\\nbanana\\noctopus\\nbanana\\nbanana\\noctopus\"\nassert solution(\"3\\n5 +strawberries +bread +apple -banana -orange\\n\") == \"strawberries\\nbread\\napple\\nbanana\\noctopus\\noctopus\"\nassert solution(\"4\\n1 +apple\\n2 +banana\\n3 +orange\\n4 +pear\\n5 +strawberries\\n\") == \"apple\\nbanana\\noctopus\\nbanana\\nbanana\\noctopus\"\nassert solution(\"5\\n1 +apple -banana -orange -pear -apple\\n2 +banana -orange -pear -apple\\n3 +orange -banana -pear -apple\\n4 +pear -banana -orange -apple\\n5 +banana -orange -pear -apple\\n\") == \"banana\\nbanana\\noctopus\\nbanana\\nbanana\\noctopus\"\nassert solution(\"6\\n1 +apple\\n2 +banana\\n3 +orange\\n4 +pear\\n5 +strawberries\\n6 +watermelon\\n7 +mango\\n8 +orange\\n9 +pineapple\\n10 +kiwi\\n\") == \"apple\\nbanana\\noctopus\\nbanana\\nbanana\\noctopus\\nwatermelon\\nmango\\noctopus\\npineapple\\nkiwi\"\n"
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    1\n    4 +zucchini +mozzarella +mushrooms -artichoke\n    \"\"\"\n) == \"zucchini mozzarella mushrooms artichoke\\n\"\n\nassert solution(\n    \"\"\"\n    2\n    5 +pineapple -orange\n    \"\"\"\n) == \"pineapple orange\\n\"\n\nassert solution(\n    \"\"\"\n    3\n    6 +carrot +corn +apple -tomatoes +carrots +broccoli -spinach\n    \"\"\"\n) == \"carrot corn apple tomato carrots broccoli spinach\\n\"\n\nassert solution(\n    \"\"\"\n    4\n    7 +kiwi -peach +banana +strawberry -orange -kiwi -kiwi -peach +strawberry\n    \"\"\"\n) == \"banana strawberry kiwi peach strawberry\\n\"\n\nassert solution(\n    \"\"\"\n    5\n    8 +lemon +orange +banana +apple -kiwi -watermelon -grapefruit -grapefruit -lemon -orange\n    \"\"\"\n) == \"lemon orange banana apple kiwifruit watermelon grapefruit grapefruit lemon orange\\n\""
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"zucchini\"\n"
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n4 +zucchini +mozzarella +mushrooms -artichoke\") == \"zucchini\\nmozzarella\\nmushrooms\\nartichoke\""
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\nPP\\nRR\\nPS\\nSS\") == \"PS\\nPP\\nRR\\nSS\""
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4\\nPP\\nRR\\nPS\\nSS\\n\") == \"PS\\nPP\\nRR\\nSS\\n\"\n"
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=solution.__doc__) == \"\"\"\nPS\nPP\nRR\nSS\n\"\"\""
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"PS\\nPP\\nRR\\nSS\\n\""
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"PS\\nPP\\nRR\\nSS\"\n"
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 4\\nPP\\nRR\\nPS\\nSS') == ['PS', 'PP', 'RR', 'SS']"
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4\\nPP\\nRR\\nPS\\nSS\") == \"PS\\nPP\\nRR\\nSS\"\nassert solution(\"2 4\\nPP\\nSS\\nRR\\nP\") == \"PP\\nRR\\nSS\"\nassert solution(\"2 3\\nP\\nSS\\nRR\\nP\") == \"PP\\nRR\\nSS\"\nassert solution(\"3 5\\nP\\nRR\\nSS\\nRR\\nP\") == \"PP\\nRR\\nSS\"\nassert solution(\"3 5\\nPP\\nRR\\nSS\\nRR\\nP\") == \"PP\\nRR\\nSS\"\nassert solution(\"2 4\\nPP\\nSS\\nRR\\nP\\nP\") == \"PP\\nRR\\nSS\""
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\nPP\\nRR\\nPS\\nSS\") == \"PS\\nPP\\nRR\\nSS\"\nassert solution(\"10 5\\nP\\nS\\nP\\nR\\nS\\nS\\nR\\nR\\nP\\nP\\nP\\nS\\nS\\nR\\nS\\nS\\nR\\nR\\nS\\nS\\nS\\nS\\nR\\nS\\nS\\nS\\nR\\nS\\nS\\nS\\nR\\nR\\nP\\nS\\nR\\nS\\nS\\nP\\nP\\nS\\nP\\nS\\nR\\nP\\nP\\nP\\nS\\nS\\nS\\nS\\nS\\nS\\nR\\nR\\nS\\nS\\nR\\nS\\nS\\nS\\nS\\nS\\nR\\nR\\nS\\nS\\nR\\nR\\nP\\nP\\nS\\nP\\nS\\nP\\nS\\nS\\nS\\nS\\nR\\nS\\nS\\nS\\nS\\nR\\nR\\nS\\nS\\nS\\nS\\nS\\nR\\nR\\nS\\nS\\nR\\nR\\nP\\nS\\nP\\nS\\nP\\nS\\nP\\nS\\nP\\nS\\nP\\nS\\nS\\nR\\nS\\nS\\nS\\nR\\nR\\nS\\nS\\nR\\nS\\nS\\nS\\nS\\nS\\nR\\nS\\nS\\nS\\nR\\nR\\nP\\nS\\nP\\nS\\nP\\nS\\nP\\nS\\nP\\nS\\nP\\nS\\nP\\nS\\nS\\nS\\nS\\nS\\nR\\nS\\nS\\nS\\nR\\nS\\nS\\nS\\nS\\nS\\nS\\nR\\nR\\nP\\nS\\nP\\nS\\nP\\nS\\nP\\nS\\nP\\nS\\nP\\nS\\nP\\nS\\nP\\nS\\nS\\nR\\nS\\nS\\nS\\nR\\nR\\nP\\nS\\nP\\nS\\nP\\nS\\nP\\nS\\nP\\nS\\nP\\nS\\nP\\nS\\nP\\nS\\nP\\nS\\nP\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nR\\nS\\nS\\nS\\nR\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nR\\nR\\nP\\nS\\nP\\nS\\nP\\nS\\nP\\nS\\nP\\nS\\nP\\nS\\nP\\nS\\nP\\nS\\nP\\nS\\nS\\nR\\nS\\nS\\nS\\nR\\nR\\nP\\nS\\nP\\nS\\nP\\nS\\nP\\nS\\nP\\nS\\nP\\nS\\nP\\nS\\nP\\nS\\nP\\nS\\nP\\nS\\nP\\nS\\nS\\nR\\nS\\nS\\nS\\nR\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nR\\nR\\nP\\nS\\nP\\nS\\nP\\nS\\nP\\nS\\nP\\nS\\nP\\nS\\nP\\nS\\nP\\nS\\nP\\nS\\nP\\nS\\nP\\nS\\nP\\nS\\nS\\nS\\nS\\nS\\nS\\nR\\nS\\nS\\nS\\nR\\nS\\nS\\nS\\nS\\nS\\nS\\nS\\nR\\nR\\nP\\nS\\nP\\"
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4\\nPP\\nRR\\nPS\\nSS\") == \"PS\\nPP\\nRR\\nSS\"\nassert solution(\"3 4\\nPP\\nRR\\nSS\\nP\") == \"PP\\nRR\\nSS\"\nassert solution(\"3 4\\nPP\\nRR\\nSS\\nP\\nP\") == \"PP\\nRR\\nSS\"\nassert solution(\"3 4\\nPP\\nRR\\nSS\\nP\\nP\\nPP\") == \"PP\\nRR\\nSS\"\nassert solution(\"3 4\\nPP\\nRR\\nSS\\nP\\nP\\nPP\\nSS\") == \"PP\\nRR\\nSS\"\nassert solution(\"3 4\\nPP\\nRR\\nSS\\nP\\nP\\nPP\\nSS\\nPP\") == \"PP\\nRR\\nSS\""
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == \"PP\\nRR\\nSS\\n\"\n"
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n0\") == 288.0"
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n0') == 288.0\nassert solution('5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n0') == 288.0\nassert solution('5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n0') == 288.0\nassert solution('5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n0') == 288.0\nassert solution('5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n0') == 288.0\nassert solution('5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n0') == 288.0"
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 288"
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"288\", \"Your solution is not correct\""
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('0\\n0.1 2.0\\n0\\n0\\n0\\n0\\n0\\n') == 288"
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"288.0\\n\"\n"
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0.1 2.0\\n0\\n0\\n0\\n0\\n0\") == 288\nassert solution(\"5\\n0\\n0\\n0\\n0\\n0\") == 288\nassert solution(\"5\\n0\\n0\\n0\\n0\\n100\") == 288.0\nassert solution(\"5\\n0\\n0\\n0\\n0\\n100\") == 288.0\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"288\", \"Your solution is incorrect.\""
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '288'\nprint('All tests passed!')"
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n0\\n\") == \"288.0\\n\""
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"pastimeofwhimsy\") == \"1\""
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"The solution should be '{expected_output}' but it is '{solution(input())}'.\"\n"
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"pastimeofwhimsy\") == 1\n"
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"pastimeofwhimsy\") == 1\n"
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"pastimeofwhimsy\") == 1"
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"pastimeofwhimsy\") == \"1\"\n\nclass Solution:\n    def meow_factor(self, S: str) -> str:\n        meow_count = 0\n        meow_char = \"\"\n        \n        for char in S:\n            if char == \"meow\":\n                meow_count += 1\n                meow_char = char\n        \n        return str(meow_count)"
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"pastimeofwhimsy\") == \"1\""
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1\""
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('pastimeofwhimsy') == '1'"
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\n1 2 2 1 \") == \"YES\"\nassert solution(\"3 4\\n1 3 1 1 \") == \"NO\"\nassert solution(\"3 5\\n1 2 2 1 1 2 \") == \"YES\"\nassert solution(\"3 5\\n1 3 1 1 1 3 \") == \"NO\"\nassert solution(\"3 4\\n1 2 2 1 2 \") == \"NO\"\n"
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4\\n1 2 2 1 \") == \"YES\"\nassert solution(\"3 4\\n1 2 2 1 2 3 \") == \"NO\"\nassert solution(\"3 4\\n1 2 2 1 2 3 4 \") == \"NO\""
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4\\n1 2 2 1 \") == \"YES\", \"Test 1 failed\"\nassert solution(\"4 4\\n1 1 1 1 \") == \"YES\", \"Test 2 failed\"\nassert solution(\"5 5\\n1 1 1 1 1 \") == \"YES\", \"Test 3 failed\"\nassert solution(\"4 3\\n2 1 1 \") == \"NO\", \"Test 4 failed\"\nassert solution(\"1 1\\n1 1 \") == \"YES\", \"Test 5 failed\""
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4\\n1 2 2 1 \\n\") == \"YES\"\nassert solution(\"2 3\\n1 3 1 1 \\n\") == \"NO\"\nassert solution(\"3 5\\n1 2 2 1 2 \\n\") == \"YES\"\nassert solution(\"3 4\\n1 2 2 1 \\n\") == \"NO\"\nassert solution(\"3 4\\n1 2 2 1 \\n\") == \"YES\""
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Test case {index + 1} failed.\\nExpected: {expected}\\nGot: {solution(input())}\"\n"
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\n1 2 2 1 \\n\") == \"YES\" # Test case 1\nassert solution(\"3 4\\n5 3 1 5 2 \\n\") == \"NO\" # Test case 2\nassert solution(\"3 4\\n10 2 5 3 4 \\n\") == \"YES\" # Test case 3\nassert solution(\"3 4\\n20 10 5 3 4 \\n\") == \"NO\" # Test case 4\nassert solution(\"3 4\\n5 3 1 5 2 \\n\") == \"NO\" # Test case 5"
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Output {solution(input())} does not match expected output {output()}\""
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\n1 2 2 1 \\n\") == \"YES\\n\"\nassert solution(\"2 4\\n1 2 3 1 2 \\n\") == \"NO\\n\""
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4\\n1 2 2 1 \") == \"YES\""
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 4\\n1 2 2 1 ') == 'YES', \"Test case 1 failed\"\nassert solution('3 4\\n1 2 2 1 2 3 ') == 'NO', \"Test case 2 failed\"\nassert solution('3 4\\n1 2 2 1 2 1 ') == 'NO', \"Test case 3 failed\"\nassert solution('3 4\\n1 2 2 1 ') == 'YES', \"Test case 4 failed\"\nassert solution('3 4\\n1 2 2 1 1 ') == 'NO', \"Test case 5 failed\""
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2\\n3\\n4\\n\") == \"3/1\""
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1 2\\n3\\n4\\n\") == \"3/1\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(2) == \"3/1\"\n\nfrom sympy.ntheory.is_prime import is_prime"
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n1 2\\n3\\n4\\n') == '3/1'\n"
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == solution_output, f\"The provided solution does not match the expected output for the given test case. Please check the given code and try again.\""
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == '3/1'\nprint('All tests passed!')"
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"The output is {solution(input())}, but it should be {expected}\"\n"
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Output '{solution(input())}' is incorrect, expected '{output()}'\""
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\"\n"
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"3/1\"\nassert solution(4) == \"6/1\"\nassert solution(5) == \"6/2\"\nassert solution(6) == \"12/2\"\nassert solution(7) == \"12/4\""
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1.2 10.2\\n2.2 15.2\") == 1.114672365\nprint(\"All tests passed!\")"
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\n1.2 10.2\\n2.2 15.2') == '1.114672365\\n'\n"
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1.2 10.2\\n2.2 15.2\") == \"1.114672365\\n\""
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 1.114672365"
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2\\n1.2 10.2\\n2.2 15.2') == '1.114672365\\n'\n"
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n1.2 10.2\\n2.2 15.2') == '1.114672365'\nprint('All test cases passed!')"
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 1.114672365"
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n2\n1.2 10.2\n2.2 15.2\n\"\"\") == \"1.114672365\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1.2 10.2\\n2.2 15.2\\n\") == \"1.114672365\\n\""
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1.2 10.2\\n2.2 15.2\") == \"1.114672365\\n\""
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('0 3\\n1 1\\n2 1\\n2 0') == '3\\n1 2 3 2'\n\nfrom typing import List"
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n0 3\\n1 1\\n2 1\\n2 0') == '3\\n1 2 3 2'"
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n0 3\\n1 1\\n2 1\\n2 0\") == \"3\\n1 2 3 2\"\nassert solution(\"5\\n0 3\\n1 1\\n2 1\\n2 0\") == \"4\\n1 2 3 4 2\"\nassert solution(\"2\\n0 3\\n1 1\\n2 1\\n2 0\") == \"1\\n1 2 3 2\"\nassert solution(\"3\\n0 3\\n1 1\\n2 1\\n2 0\") == \"1\\n2 3 3 2\"\nassert solution(\"4\\n0 3\\n1 1\\n2 1\\n2 0\") == \"2\\n1 3 3 2\"\nassert solution(\"5\\n0 3\\n1 1\\n2 1\\n2 0\") == \"2\\n3 3 3 3 2\"\nassert solution(\"6\\n0 3\\n1 1\\n2 1\\n2 0\") == \"2\\n3 4 4 4 4 2\""
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n0 3\\n1 1\\n2 1\\n2 0\") == \"3\\n1 2 3 2\"\nassert solution(\"5\\n1 3\\n2 2\\n2 0\\n2 1\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2 0\\n2"
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == expected, f\"Your solution is {solution}, but the expected output is {expected}\""
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n0 3\\n1 1\\n2 1\\n2 0') == '3\\n1 2 3 2'\nassert solution('7\\n0 10\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7') == '2\\n1 2 3 4 5 6'\nassert solution('10\\n0 10\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10') == '3\\n1 2 3 4 5 6 7 8 9'"
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('0 3\\n1 1\\n2 1\\n2 0') == '3\\n1 2 3 2'\nassert solution('4\\n0 3\\n1 1\\n2 1\\n2 0') == '3\\n1 2 3 2'\nassert solution('4\\n0 3\\n1 1\\n2 1\\n3 0') == '3\\n1 2 3 2'\nassert solution('4\\n0 3\\n1 1\\n2 1\\n3 1') == '3\\n1 2 3 2'\nassert solution('4\\n0 3\\n1 1\\n2 1\\n3 2') == '3\\n1 2 3 2'\nassert solution('4\\n0 3\\n1 1\\n2 1\\n3 3') == '3\\n1 2 3 2'\nassert solution('4\\n0 3\\n1 1\\n2 1\\n4 0') == '3\\n1 2 3 2'\nassert solution('4\\n0 3\\n1 1\\n2 1\\n4 1') == '3\\n1 2 3 2'\nassert solution('4\\n0 3\\n1 1\\n2 1\\n4 2') == '3\\n1 2 3 2'\nassert solution('4\\n0 3\\n1 1\\n2 1\\n4 3') == '3\\n1 2 3 2'\nassert solution('4\\n0 3\\n1 1\\n2 1\\n5 0') == '3\\n1 2 3 2'\nassert solution('4\\n0 3\\n1 1\\n2 1\\n5 1') == '3\\n1 2 3 2'\nassert solution('4\\n0 3\\n1 1\\n2 1\\n5 2') == '3\\n1 2 3 2'\nassert solution('4\\n0 3\\n1 1\\n2 1\\n5 3') == '3\\n1 2 3 2'\nassert solution('4\\n0 3\\n1 1\\n2 1\\n6 0') == '3\\n1 2 3 2'\nassert solution('4\\n0 3\\n1 1\\n2 1\\n6 1') == '3\\n1 2 3 2'\nassert solution('4\\n0 3\\n1 1\\n2 1\\n6 2') == '3\\n1 2 3 2'\nassert solution('4\\n0 3\\n1 1\\n2 1\\n6 3') == '3\\n1 2 3 2'\nassert solution('4\\n0 3\\n1 1\\n2 1\\n7 0') == '3\\n1 2 3 2'\nassert solution('4\\n0 3\\n1 1\\n2 1\\n7 1') == '3\\n1 2 3 2'\nassert solution('4\\n0 3\\n1 1\\n2 1\\n7 2') == '3\\n1 2 3 2'\nassert solution('4\\n0 3\\n1 1\\n2 1\\n7 3') == '3\\n1 2 3 2'\nassert solution('4\\n0 3\\n1 1\\n2 1\\n8 0') == '3\\n1 2 3 2'\nassert solution('4\\n0 3\\n1 1\\n2 1\\n8 1') == '3\\n1 2 3 2'\nassert solution('4\\n0 3\\n1 1\\n2 1\\n8 2') == '3\\n1 2 3 2'\nassert solution('4\\n0 3\\n1 1\\n2 1\\n8 3') == '3\\n1 2 3 2'\nassert solution('4\\n0 3\\n1 1\\"
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"3\\n1 2 3 2\""
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n0 3\\n1 1\\n2 1\\n2 0\") == \"3\\n1 2 3 2\"\nassert solution(\"5\\n0 3\\n1 1\\n2 2\\n2 1\\n2 0\\n3 0\\n4 0\\n5 0\") == \"3\\n1 2 3 2\\n1 2 3 2\\n1 2 3 2\""
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"\"\"3\n1 2 3 2\n\"\"\""
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2\\n1\\n2\\n3\\n\"\nassert solution() == \"none\\n\"\nassert solution() == \"1\\n\""
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3\n1 2 3\n\"\"\") == \"1\\n2\\n3\"\n\nassert solution(\"\"\"\n3\n1 1 2\n\"\"\") == \"none\"\n\nassert solution(\"\"\"\n4\n1 2 1 3\n\"\"\") == \"none\""
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n3\n1 2 3\n''') == ['1', '2', '3']\n\nassert solution('''\n3\n1 1 2\n''') == ['none']\n\nassert solution('''\n4\n1 2 1 3\n''') == ['none']"
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1\\n2\\n3\\n\", \"Test 1 failed\"\nassert solution() == \"none\\nnone\\nnone\\n\", \"Test 2 failed\"\nassert solution() == \"none\\nnone\\nnone\\n\", \"Test 3 failed\""
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1\\n2\\n3\\n\"\nassert solution(stdin) == \"none\\nnone\\n\"\nassert solution(stdin) == \"none\\n1\\n2\\n3\\n\""
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == expected, f\"The solution is incorrect. Please check the example cases and implement the solution according to the problem statement.\""
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == [\"1\", \"2\", \"3\"]\nassert solution(\"3\\n1 1 2\\n\") == [\"none\"]\nassert solution(\"4\\n1 2 1 3\\n\") == [\"none\"]"
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == [\"1\", \"2\", \"3\"]\nassert solution(\"3\\n1 1 2\\n\") == [\"none\"]\nassert solution(\"4\\n1 2 1 3\\n\") == [\"none\"]"
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"Alf and Beata were two young adults living together a long, long time ago, before you could spend all your afternoons competing in programming. Their lives were thus much more boring than those of today\u2019s young adults. How could you even survive back then, you might ask yourself. The answer is simple: you write down numbers on pieces of paper! Our two cohabitants loved writing integers on papers, and often had huge piles of them each afternoon. To avoid filling their entire living room with integers, Beata challenged her friend to a game every evening to determine who should take the trash out \u2013 the Guessing Circle game.\n\nThe Guessing Circle game is played by two players (in our case, Alf and Beata) using a large circle of $n$ pieces of papers, each paper labelled with some integer. Alf starts by choosing an integer $x$ that appears on some piece of paper. Beata then tries to figure out what this integer is by asking a series of questions. In each question, Beata picks an integer $y$ that appears on a piece of paper and asks if $y$ is closest to $x$ on the circle when going clockwise or counter-clockwise (measured in the number of pieces of paper between them). If both directions give the same distance, for instance if $y = x$, Alf can choose which one of the two possible answers to provide.\n\nThey had initially agreed that no two pieces of paper may have the same integer written on them, but Alf found this hugely unfair \u2013 it was quite easy for Beata to figure out $x$. Instead, he suggested a variant where some integers can appear multiple times in the circle. When providing the answer to a question $y$ from Beata, he is instead allowed to choose any pair of papers on which $x$ and $y$ appear, and give his answer for these two papers.\n\nBeata reluctantly agreed to play the new variant, as long as Alf promises to choose an integer in the circle such that Beata can eventually figure it out. Knowing which these integers are turned out to be quite a tricky task for Alf, and he often had to spend hours before the game proving that Beata would be able to deduce which number he had chosen. Write a program to help Alf determine which numbers he can choose.\n\n-----Input-----\nThe first line of integers contains $n$ ($2 \\le n \\le 15000$), the number of pieces of paper in the circle. The next line contains $n$ integers, the integers written on the pieces of paper, each between $1$ and $15000$. They are given clockwise in the order they appear on the circle, and are not necessarily unique.\n\n-----Output-----\nOutput all integers $x$ that Alf can choose in the game such that given enough guesses, Beata can uniquely determine the value of $x$. List these values in increasing order. If there is no such integer $x$, output \u201cnone\u201d.\n\n-----Examples-----\nSample Input 1:\n3\n1 2 3\nSample Output 1:\n1\n2\n3\n\nSample Input 2:\n3\n1 1 2\nSample Output 2:\nnone\n\nSample Input 3:\n4\n1 2 1 3\nSample Output 3:\nnone\n"
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input1) == \"1\\n2\\n3\"\nassert solution(sample_input2) == \"none\"\nassert solution(sample_input3) == \"none\""
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5\\n\""
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1 0 1 2 3 3\") == \"5\""
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=input()) == expected, f\"The solution {solution(stdin=input())} does not match the expected output.\\nExpected: {expected}\\nActual: {solution(stdin=input())}\""
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=open('input.txt', 'r')) == '5\\n'"
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Test failed: {solution(input())}!= {output}\"\nfor i in range(len(input().split())):\n    input_list = [int(x) for x in input().split()]\n    assert solution(input_list) == output, f\"Test failed for case {i+1}:\\n{solution(input_list)}\\nExpected: {output}\\nGot: {solution(input_list)}\""
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1 0 1 2 3 3\") == \"5\", \"Your solution is incorrect\""
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    7\n    2 1 0 1 2 3 3\n    \"\"\"\n) == \"5\\n\"\n\nassert solution(\n    \"\"\"\n    1\n    0\n    \"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n    1\n    1000000\n    \"\"\"\n) == \"1000000\\n\"\n\nassert solution(\n    \"\"\"\n    3\n    1 2 3\n    4 5 6\n    \"\"\"\n) == \"5\\n\"\n\nassert solution(\n    \"\"\"\n    2\n    3 1 4\n    3 4 5\n    \"\"\"\n) == \"2\\n\""
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1 0 1 2 3 3\") == \"5\""
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1 0 1 2 3 3\") == \"5\", \"Test failed\""
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7\\n2 1 0 1 2 3 3\") == 5\nassert solution(\"10\\n5 5 2 3 5 1 4 2\") == 4\nassert solution(\"7\\n5 5 2 3 5 1 4 2\") == 5\nassert solution(\"10\\n2 4 3 5 3 1 2 4\") == 3\nassert solution(\"7\\n1 5 2 3 4 6 5 7\") == 3\nassert solution(\"10\\n1 2 3 5 4 6 7 8\") == 2\nassert solution(\"7\\n2 2 2 2 2 2 2 2\") == 1\nassert solution(\"10\\n1 1 1 1 1 1 1 1\") == 0"
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\\n') == '''\n-1 -1 -1 -1 -1\n-1 4 5 6 -1\n-1 4 -1 -1 -1\n-1 1 0 1 -1\n-1 3 1 2 -1\n-1 -1 -1 -1 -1\n'''"
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\") == [1, 4, 5, 6, -1]\nassert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\\n\") == [1, 4, 5, 6, -1]\nassert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\\n1 2\") == [1, 4, 5, 6, -1]\nassert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\\n1 2 3\") == [1, 4, 5, 6, -1]\nassert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\\n1 2 3\\n\") == [1, 4, 5, 6, -1]\nassert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\\n1 2 3\\n1 2\") == [1, 4, 5, 6, -1]\nassert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\\n1 2 3\\n1 2 3\") == [1, 4, 5, 6, -1]\nassert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\\n1 2 3\\n1 2 3\\n1 2 3\") == [1, 4, 5, 6, -1]\nassert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\") == [1, 4, 5, 6, -1]\nassert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\") == [-1, -1, -1, -1, -1]"
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####') == '-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1'\nprint('All test cases pass')"
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 6\\n#####\\n#_###\\n#_M.#\\n#__.#\\n#####\\n\") == \"-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1\"\nassert solution(\"5 6\\n#####\\n#.#\\n#_###\\n#_M.#\\n#__.#\\n#####\\n\") == \"-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1\"\nassert solution(\"5 6\\n#####\\n#.#\\n#....\\n#_###\\n#_M.#\\n#__.#\\n#####\\n\") == \"-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1\"\nassert solution(\"5 6\\n#####\\n#.#\\n#....\\n#....\\n#_###\\n#_M.#\\n#__.#\\n#####\\n\") == \"-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1\"\nassert solution(\"5 6\\n#####\\n#.#\\n#....\\n#....\\n#....\\n#_###\\n#_M.#\\n#__.#\\n#####\\n\") == \"-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1\""
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == [1, 4, 5, 6, -1]\nassert solution() == [1, 4, 5, 6, -1]\nassert solution() == [1, 4, 5, 6, -1]\nassert solution() == [1, 1, 0, 1, -1]\nassert solution() == [1, 3, 1, 2, -1]\nassert solution() == [-1, -1, -1, -1, -1]\nassert solution() == [-1, -1, -1, -1, -1]\nassert solution() == [-1, -1, -1, -1, -1]\nassert solution() == [-1, -1, -1, -1, -1]"
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#') == '-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1\\n'\n"
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#') == '2 2\\n2 4'\nassert solution('5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#') == '2 2\\n3 5'\nassert solution('5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#') == '-1 -1'\nassert solution('5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#') == '2 2\\n-1'"
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#') == '-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1'\nassert solution('5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#') == '-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1'\nassert solution('5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#') == '-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1'\nassert solution('5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#') == '-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1'\nassert solution('5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#') == '-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1'"
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\") == \"-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1\""
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\\n\") == \"-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\"\nassert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\\n\") == \"-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\"\nassert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\\n\") == \"-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\"\nassert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\\n\") == \"-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\""
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n\") == \"6\"\nassert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n\\n\") == \"impossible\""
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"6\"\nprint(\"Passed\")"
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n') == '6'"
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\") == \"6\"\nassert solution(\"4 6 1\\n2\\n1 2 1\\n1 3 1\\n1 4 1\\n3 4 3\") == \"impossible\"\nassert solution(\"4 6 1\\n2\\n1 2 1\\n1 3 1\\n1 4 1\\n3 4 3\\n2 5 2\") == \"impossible\"\nassert solution(\"4 6 1\\n2\\n1 2 1\\n1 3 1\\n1 4 1\\n3 4 3\\n2 5 2\\n1 5 1\") == \"impossible\"\nassert solution(\"4 6 1\\n2\\n1 2 1\\n1 3 1\\n1 4 1\\n3 4 3\\n2 5 2\\n1 5 1\\n1 6 1\") == \"impossible\""
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n') == '6\\n'\nassert solution('5 4 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n1 2\\n') == 'impossible\\n'"
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"6\\n\""
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n\") == \"6\""
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n4 6 1\n1\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4\n3 4 3\n''') == 6\nassert solution('''\n4 6 1\n1\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4\n3 4 3\n1 4 10000\n2 1 10000\n3 1 10000\n4 1 10000\n5 1 10000\n6 1 10000\n7 1 10000\n8 1 10000\n9 1 10000\n10 1 10000\n11 1 10000\n12 1 10000\n13 1 10000\n14 1 10000\n15 1 10000\n16 1 10000\n17 1 10000\n18 1 10000\n19 1 10000\n20 1 10000\n21 1 10000\n22 1 10000\n23 1 10000\n24 1 10000\n25 1 10000\n26 1 10000\n27 1 10000\n28 1 10000\n29 1 10000\n30 1 10000\n31 1 10000\n32 1 10000\n33 1 10000\n34 1 10000\n35 1 10000\n36 1 10000\n37 1 10000\n38 1 10000\n39 1 10000\n40 1 10000\n41 1 10000\n42 1 10000\n43 1 10000\n44 1 10000\n45 1 10000\n46 1 10000\n47 1 10000\n48 1 10000\n49 1 10000\n50 1 10000\n51 1 10000\n52 1 10000\n53 1 10000\n54 1 10000\n55 1 10000\n56 1 10000\n57 1 10000\n58 1 10000\n59 1 10000\n60 1 10000\n61 1 10000\n62 1 10000\n63 1 10000\n64 1 10000\n65 1 10000\n66 1 10000\n67 1 10000\n68 1 10000\n69 1 10000\n70 1 10000\n71 1 10000\n72 1 10000\n73 1 10000\n74 1 10000\n75 1 10000\n76 1 10000\n77 1 10000\n78 1 10000\n79 1 10000\n80 1 10000\n81 1 10000\n82 1 10000\n83 1 10000\n84 1 10000\n85 1 1000"
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\") == 6\nassert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n4 4 2\\n2 4 4\\n3 4 3\") == \"Impossible\"\nassert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n4 4 2\\n2 4 4\\n3 4 3\\n4 4 2\\n1 2 1\") == \"Impossible\""
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 6\n"
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4 2 1\") == \"01001\"\nprint(solution)"
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4 2 1\") == \"01001\""
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3, 4, 2, 1) == '01001'"
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '01001'\nassert solution(\"1\") == \"impossible\""
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '01001'"
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4 2 1\") == \"01001\"\nassert solution(\"2 3 1 5\") == \"10110\"\nassert solution(\"1 1 1 1\") == \"00000\"\nassert solution(\"5 5 5 5\") == \"00000\"\nassert solution(\"0 0 0 0\") == \"impossible\""
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 4, 2, 1) == \"01001\"\n"
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4 2 1\") == \"01001\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin='3 4 2 1') == '01001'\n"
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4 2 1\") == \"01001\"\n\nsolution(\"2 4 1 3\") # incorrect answer\nsolution(\"1 1 1 1\") # incorrect answer\nsolution(\"2 3 4 5\") # incorrect answer"
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3, 4, 6) == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\"\nassert solution(3, 4, 5) == \"impossible\"\nassert solution(2, 2, 3) == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\"\nassert solution(4, 6, 3) == \"impossible\""
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\\n\"\nassert solution(stdin=\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\\n\""
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"possible\"\n"
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4') == 'possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3'\n"
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\"\nassert solution() == \"impossible\"\n"
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\""
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 4, 6) == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\""
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\"\nassert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n3 2\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\"\nassert solution(\"5 6 4\\n3 2\\n4 1\\n5 6\\n1 3\\n2 4\") == \"possible\\n< 3\\n^ 1\\n> 2\\n^ 4\"\nassert solution(\"5 6 4\\n3 2\\n4 1\\n5 6\\n1 3\\n2 4\") == \"impossible\"\n"
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\""
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"possible\"\nassert solution == \"impossible\""
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\") == \"2.0\"\nassert solution(\"0 0 0\\n0 1 0\\n1 0 0\\n1 1 0\\n2 0 0\\n2 1 0\\n3 0 0\\n3 1 0\\n4 0 0\\n4 1 0\") == \"7.76\""
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2.0\\n\""
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    4\n    0 0 1\n    0 1 1\n    2 0 3\n    2 1 3\n    \"\"\"\n) == \"2.0\\n\""
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\") == \"2.0\"\nassert solution(\"0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n0 0 1\") == \"2.0\"\nassert solution(\"0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n1 1 2\") == \"2.0\"\nassert solution(\"0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n2 2 2\") == \"1.0\"\nassert solution(\"0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n1 2 2\") == \"1.0\""
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=open('input.txt').read()) == '2.0\\n'\n\nfrom typing import List"
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=input()) == \"2.0\"\nassert solution(stdin=\"4\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\") == \"2.0\""
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == '2.0'"
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2.0\""
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('0 0 1\\n0 1 1\\n2 0 3\\n2 1 3') == 2.0\n"
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2.0\\n\"\n"
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('7\\n5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2') == '4\\n'\nassert solution('7\\n5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2\\n5 1 4 2 6 3 5') == '1\\n'\nassert solution('7\\n5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2\\n5 1 4 2 6 3 5\\n2 4 6 1 5 3 7') == '1\\n'"
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7\\n5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2\") == 4, \"The smallest number of columns Luka must delete is 4.\""
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7\\n5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2\") == \"4\""
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '4\\n'"
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7\\n5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2\") == \"4\\n\", \"The output should be 4, but it is \" + solution(\"7\\n5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2\")\n"
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7\\n5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2\") == 4\nassert solution(\"10\\n3 2 4 1 3 5 6 7 8\\n7 1 5 8 2 4 6 3 9\\n1 5 7 3 8 4 9 2 6\") == 3\nassert solution(\"9\\n1 1 1 1 1 1 1 1\\n2 2 2 2 2 2 2 2\") == 1\nassert solution(\"3\\n1 1 1\\n1 1 1\\n1 1 1\") == 1\nassert solution(\"1\\n2 3 4\\n5 6 7\") == 0"
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"4\\n\", \"Output must be 4\"\n"
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\\n5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2\") == 4, \"Incorrect output\"\nassert solution(\"7\\n5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 1\") == 3, \"Incorrect output\"\nassert solution(\"7\\n5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2\") == 4, \"Incorrect output\""
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7\\n5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2\") == 4, \"Luka can delete the second, fourth, sixth and seventh columns.\""
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2\\n\") == \"4\\n\"\nassert solution(\"7\\n5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2\\n\") == \"4\\n\"\nassert solution(\"10 8 4 5 1 7 3 9 6\\n4 2 6 5 9 3 7 8 1\\n3 4 5 7 1 9 8 2 6\\n5 7 2 9 4 1 8 3 6\\n\") == \"1\\n\"\nassert solution(\"7\\n5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2\\n7\\n5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2\\n\") == \"1\\n\"\nassert solution(\"10 8 4 5 1 7 3 9 6\\n4 2 6 5 9 3 7 8 1\\n3 4 5 7 1 9 8 2 6\\n5 7 2 9 4 1 8 3 6\\n8\\n5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2\\n\") == \"1\\n\""
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n-10 0\\n-10 10\") == \"2\""
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=input()) == expected_output, f\"Test failed: {solution(stdin=input())}!= {expected_output}\"\n"
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n-10 0\\n-10 10\") == \"2\\n\"\n"
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n-10 0\\n-10 10\") == 2\nassert solution(\"10\\n0 0\\n20 20\") == 10\nassert solution(\"5\\n0 0\\n10 10\") == 12\nassert solution(\"10\\n0 0\\n10 10\") == 10\nassert solution(\"5\\n0 0\\n10 10\") == 12\n\nassert solution(\"5\\n10000 10000\\n10000 10000\") == 20000\nassert solution(\"5\\n10000 10000\\n10000 10000\") == 20000"
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n-10 0\\n-10 10\") == \"2\\n2\""
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n-10 0\\n-10 10\") == \"2\\n\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n-10 0\\n-10 10\") == \"2\\n2\""
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"-10 0\\n-10 10\") == \"2\\n\"\n\nHere's the correct code to test the correctness of the solution:\n\n```python\n"
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n-10 0\\n-10 10\") == \"2\\n2\""
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n-10 0\\n-10 10\") == \"2\"\n\nassert solution(\"3\\n1 2\\n-5 3\") == \"0\"\n\nassert solution(\"1\\n10\") == \"1\"\n\nassert solution(\"5\\n-10 0\\n-10 10\\n-5 5\\n0 0\\n0 0\") == \"2\""
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 0, \"Expected output 0, but got: \" + str(solution())\n"
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"0\\n\"\n"
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"0\\n\"\n"
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 5') == '0\\n'"
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(None) == '0'\nassert solution('2 5') == '0'\nassert solution('1 5') == '0'\nassert solution('10 5') == '12'\nassert solution('7 15') == '12'\nassert solution('10 10') == '10'\nassert solution('15 10') == '10'\nassert solution('7 10') == '10'\nassert solution('7 5') == '0'\nassert solution('2 7') == '0'\nassert solution('10 7') == '0'\nassert solution('15 7') == '0'\nassert solution('7 2') == '0'\nassert solution('2 10') == '0'\nassert solution('10 15') == '0'\nassert solution('7 15') == '0'\nassert solution('7 10') == '0'\nassert solution('10 7') == '0'\nassert solution('15 7') == '0'\nassert solution('7 7') == '0'\nassert solution('7 5') == '0'\nassert solution('10 5') == '0'\nassert solution('15 5') == '0'\nassert solution('7 10') == '0'\nassert solution('7 15') == '0'\nassert solution('7 20') == '0'\nassert solution('2 5') == '0'\nassert solution('5 10') == '0'\nassert solution('10 15') == '0'\nassert solution('5 15') == '0'\nassert solution('5 20') == '0'\nassert solution('1 10') == '12'\nassert solution('1 15') == '12'\nassert solution('1 20') == '12'\nassert solution('10 5') == '12'\nassert solution('10 10') == '10'\nassert solution('10 15') == '10'\nassert solution('10 20') == '10'\nassert solution('15 5') == '10'\nassert solution('15 10') == '10'\nassert solution('15 15') == '10'\nassert solution('15 20') == '10'\nassert solution('2 10') == '10'\nassert solution('2 15') == '10'\nassert solution('2 20') == '10'\nassert solution('5 10') == '10'\nassert solution('5 15') == '10'\nassert solution('5 20') == '10'\nassert solution('7 10') == '10'\nassert solution('7 15') == '10'\nassert solution('7 20') == '10'\nassert solution('10 10') == '10'\nassert solution('10 15') == '10'\nassert solution('10 20') == '10'\nassert solution('15 10') == '10'\nassert solution('15 15') == '10'\nassert solution('15 20') == '10'\nassert solution('7 5') == '0'\nassert solution('7 10') == '0'\nassert solution('7 15') == '0'\nassert solution('7 20') == '0'\nassert solution('2 7') == '0'\nassert solution('2 10') == '0'\nassert solution('2 15') == '0'\nassert solution('2 20') == '0'\nassert solution('10 7') == '0'\nassert solution('10 10') == '0'\nassert solution('10 15') == '0'\nassert solution('10 20') == '0'\nassert solution('15 7') == '0'\nassert solution('15 10') == '0'\nassert solution('15 15') == '0'\nassert solution('15 20') == '0'\nassert solution('7 5') == '0'\nassert solution('7 10') == '0'\nassert solution('7 15') == '0'"
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 0, \"Expected output: 0, Actual output: {}\".format(solution())"
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\") == 0\nassert solution(\"1 5\") == 0\nassert solution(\"1 10\") == 0"
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 5\") == \"0\\n\", \"Expected output: 0\\nActual output: \" + solution(\"1 5\")"
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 5') == '0'\nprint(\"All tests passed\")"
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 5\") == \"0\\n\", \"The output should be 0.\""
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1') == '0 0\\n1 1\\n'"
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0 0\\n1 1\""
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0 0\\n1 1\\n\""
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == sample_output, f\"Expected output: {sample_output}, Got: {solution(sample_input)}\"\n\nsample_input = \"\"\"2 2\n1 0\n0 1\n3 3\n1 0 0\n0 1 0\n0 0 1\"\"\"\nsample_output = \"\"\"0 0\n1 1\"\"\""
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0') == '0 0\\n1 1\\n'\nassert solution('5 4\\n0 0\\n0 0\\n0 0\\n0 0\\n') == '0 0\\n0 1\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n'\nassert solution('7 6\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n"
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"0 0\\n1 1\\n\", \"Test 1 failed\"\nassert solution(input()) == \"0 1\\n0 0\\n\", \"Test 2 failed\"\nassert solution(input()) == \"0 1\\n1 0\\n\", \"Test 3 failed\"\nassert solution(input()) == \"1 1\\n1 0\\n\", \"Test 4 failed\"\nassert solution(input()) == \"1 0\\n0 1\\n\", \"Test 5 failed\""
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\\n\") == \"0 0\\n1 1\"\nassert solution(\"2 3\\n0 0\\n1 1\\n0 1\\n1 0\\n\") == \"0 0\\n1 2\""
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\") == \"0 0\\n1 1\""
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == '''\n0 0\n1 1\n'''"
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\") == \"0 0\\n1 1\\n\""
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"44.975\", \"Your solution is not correct.\""
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input) == expected_output, f\"The output is incorrect. Expected: {expected_output}, Received: {solution(input)}\"\n"
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '44.975', \"Incorrect output\"\n"
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 0.950000\\n0.700000 50\\n\") == \"44.975\\n\"\n"
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin='1 2 0.950000\\n0.700000 50') == '44.975\\n'"
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 44.975, \"Please implement the `solution` function\""
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 0.950000\\n0.700000 50\") == \"44.975\""
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 0.950000\\n0.700000 50\") == \"44.975\""
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 0.950000\\n0.700000 50\") == \"44.975\\n\"\nassert solution(\"1 2 0.950000\\n0.699999 50\") == \"45.950000\\n\"\nassert solution(\"1 2 0.950000\\n0.699999 49\") == \"45.975\\n\"\nassert solution(\"1 2 0.950000\\n0.700001 50\") == \"45.950000\\n\"\nassert solution(\"1 2 0.950000\\n0.700000 51\") == \"45.975\\n\"\nassert solution(\"1 2 0.950000\\n0.700000 49\") == \"45.975\\n\"\nassert solution(\"1 2 0.950000\\n0.700000 50\") == \"45.950000\\n\"\nassert solution(\"1 2 0.950000\\n0.699999 50\") == \"45.950000\\n\"\nassert solution(\"1 2 0.950000\\n0.700001 50\") == \"45.950000\\n\"\nassert solution(\"1 2 0.950000\\n0.700000 51\") == \"45.975\\n\"\nassert solution(\"1 2 0.950000\\n0.700000 49\") == \"45.975\\n\"\nassert solution(\"1 2 0.950000\\n0.700000 50\") == \"45.950000\\n\""
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 0.950000\\n0.700000 50\") == 44.975"
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '2'"
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\\n\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n4\") == \"IMPOSSIBLE\\n\""
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1') == '2'\nassert solution('3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1') == '2'\nassert solution('3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1') == '2'\nassert solution('3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1') == 'IMPOSSIBLE'\nassert solution('3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1') == '2'\nassert solution('3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1') == '2'\nassert solution('3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1') == '2'\nassert solution('3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1') == 'IMPOSSIBLE'\nassert solution('3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1') == '2'\nassert solution('3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1') == '2'\nassert solution('3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1') == '2'\nassert solution('3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1') == 'IMPOSSIBLE'\nassert solution('3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1') == '2'\nassert solution('3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1') == '2'\nassert solution('3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1') == 'IMPOSSIBLE'"
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\\n\"\n"
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '2\\n'"
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\\n\""
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n\") == \"2\"\nassert solution(\"10 10\\n1 10\\n10 10\\n2 2\\n1 2\\n\") == \"IMPOSSIBLE\"\nassert solution(\"1 2\\n3 4\\n10 20\\n4 10\\n10 10\\n\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\\n\"\n"
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n') == '2'\nassert solution('3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n') == '2'\nassert solution('3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n') == '2'\nassert solution('3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n') == 'IMPOSSIBLE'\nassert solution('3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n') == 'IMPOSSIBLE'\nassert solution('3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n') == 'IMPOSSIBLE'\nassert solution('3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n') == 'IMPOSSIBLE'\nassert solution('3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n') == 'IMPOSSIBLE'\nassert solution('3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n') == 'IMPOSSIBLE'\nassert solution('3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n') == 'IMPOSSIBLE'\nassert solution('3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n') == 'IMPOSSIBLE'\nassert solution('3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n') == 'IMPOSSIBLE'\nassert solution('3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n') == 'IMPOSSIBLE'\nassert solution('3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n') == 'IMPOSSIBLE'\nassert solution('3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n') == 'IMPOSSIBLE'\nassert solution('3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n') == 'IMPOSSIBLE'\nassert solution('3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n') == 'IMPOSSIBLE'\nassert solution('3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n') == 'IMPOSSIBLE'\nassert solution('3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n') == 'IMPOSSIBLE'\nassert solution('3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n') == 'IMPOSSIBLE'\nassert solution('3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n') == 'IMPOSSIBLE'\nassert solution('3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n') == 'IMPOSSIBLE'\nassert solution('3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n') == 'IMPOSS"
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3, 3) == \"4.0\"\nassert solution(3, 4) == \"0.0\"\nassert solution(3, 5) == \"4.0\"\nassert solution(4, 3) == \"0.0\"\nassert solution(4, 4) == \"4.0\"\nassert solution(4, 5) == \"4.0\""
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=input()) == expected\n"
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\") == \"4.0\"\n"
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''3 3\n0.0 6.0\n6.0 0.0\n6.0 6.0\n4.0 4.0\n10.0 4.0\n4.0 10.0''') == '4.0'\n\nassert solution('''3 2\n1.0 1.0\n1.0 2.0\n1.0 3.0\n2.0 3.0\n1.0 4.0\n1.0 5.0\n5.0 5.0\n5.0 4.0\n4.0 4.0''') == '8.0'\n\nassert solution('''4 5\n1.0 1.0\n2.0 2.0\n3.0 3.0\n4.0 4.0\n5.0 5.0\n6.0 6.0\n7.0 7.0\n8.0 8.0\n9.0 9.0\n10.0 10.0\n11.0 11.0\n12.0 12.0\n13.0 13.0\n14.0 14.0\n15.0 15.0\n16.0 16.0\n17.0 17.0\n18.0 18.0\n19.0 19.0\n20.0 20.0''') == '151.0'\n\nassert solution('''3 5\n0.0 1.0\n0.0 2.0\n0.0 3.0\n0.0 4.0\n0.0 5.0\n0.0 6.0\n0.0 7.0\n0.0 8.0\n0.0 9.0\n0.0 10.0\n0.0 11.0\n0.0 12.0\n0.0 13.0\n0.0 14.0\n0.0 15.0\n0.0 16.0\n0.0 17.0\n0.0 18.0\n0.0 19.0\n0.0 20.0''') == '318.0'\n\nassert solution('''5 5\n0.0 0.0\n0.0 0.0\n0.0 0.0\n0.0 0.0\n0.0 0.0\n0.0 0.0\n0.0 0.0\n0.0 0.0\n0.0 0.0\n0.0 0.0\n0.0 0.0\n0.0 0.0\n0.0 0.0\n0.0 0.0\n0.0 0.0\n0.0 0.0\n0.0 0.0\n0.0 0.0\n0.0 0.0\n0.0 0.0\n0.0 0.0\n0.0 0.0\n0.0 0.0\n0.0 0.0\n0.0 0.0\n0.0 0.0\n0.0 0.0\n0.0 0.0\n0.0 0.0\n0.0 0.0\n0.0 0.0\n0.0 0.0\n0.0 0.0\n0.0 0.0\n0.0 0.0\n0.0 0.0\n0.0 0.0\n0.0 0.0\n0.0 0.0\n0.0 0.0\n0.0 0.0\n0.0 0.0\n0.0 0.0\n0.0 0.0\n0.0 0.0\n0.0 0.0\n0.0 0.0\n0.0 0.0\n0.0 0.0\n0.0 0.0\n0.0 0.0\n0.0 0.0\n0.0 0.0\n0.0 0.0\n0.0 0.0\n0.0 0.0\n0.0 0.0\n0.0 0.0\n0.0 0.0\n0.0 "
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"4.0\""
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\") == 4.0, \"The solution should return the area covered by both species in square metres.\"\n\nassert solution(\"3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\\n5.0 5.0\\n5.0 5.0\\n5.0 5.0\\n5.0 5.0\\n5.0 5.0\") == 14.0, \"The solution should return the area covered by both species in square metres.\"\n\nassert solution(\"3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\") == 4.0, \"The solution should return the area covered by both species in square metres.\"\n\nassert solution(\"3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\\n5.0 5.0\\n5.0 5.0\\n5.0 5.0\\n5.0 5.0\\n5.0 5.0\") == 14.0, \"The solution should return the area covered by both species in square metres.\""
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\") == \"4.0\""
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\") == \"4.0\\n\"\nassert solution(\"3 4\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\") == \"16.0\\n\"\nassert solution(\"1 1\\n0.0 0.0\\n0.0 0.0\") == \"0.0\\n\""
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"3 3\n0.0 6.0\n6.0 0.0\n6.0 6.0\n4.0 4.0\n10.0 4.0\n4.0 10.0\"\"\") == 4.0\n"
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\") == \"4.0\\n\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n220 29\\n195 20\\n200 9\\n180 30\\n') == '18000'\n"
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n220 29\\n195 20\\n200 9\\n180 30\\n\") == \"18000\\n\""
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == '18000'"
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 18000"
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"18000\""
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '18000\\n', 'Incorrect output'"
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"18000\\n\"\n"
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n220 29\\n195 20\\n200 9\\n180 30\") == \"18000\\n\"\n"
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '18000\\n', 'Incorrect output'"
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == expected_output, \"The solution is incorrect.\"\n"
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\\n\") == 28\nassert solution(\"BUYSTICKERS\\n5\\nBUYER 20\\nSTICKY 20\\nSTICKY 20\\nSTICKY 20\\nSTICKY 20\\n\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8') == 28\nassert solution('BUYSTICKERS\\n10\\nSTICKY 1\\nSTICKY 2\\nSTICKY 3\\nSTICKY 4\\nSTICKY 5\\nSTICKY 6\\nSTICKY 7\\nSTICKY 8\\nSTICKY 9\\nSTICKY 10\\nSTICKY 11\\nSTICKY 12\\nSTICKY 13\\nSTICKY 14\\nSTICKY 15\\nSTICKY 16\\nSTICKY 17\\nSTICKY 18\\nSTICKY 19\\nSTICKY 20\\nSTICKY 21\\nSTICKY 22\\nSTICKY 23\\nSTICKY 24\\nSTICKY 25\\nSTICKY 26\\nSTICKY 27\\nSTICKY 28\\nSTICKY 29\\nSTICKY 30\\nSTICKY 31\\nSTICKY 32\\nSTICKY 33\\nSTICKY 34\\nSTICKY 35\\nSTICKY 36\\nSTICKY 37\\nSTICKY 38\\nSTICKY 39\\nSTICKY 40\\nSTICKY 41\\nSTICKY 42\\nSTICKY 43\\nSTICKY 44\\nSTICKY 45\\nSTICKY 46\\nSTICKY 47\\nSTICKY 48\\nSTICKY 49\\nSTICKY 50\\nSTICKY 51\\nSTICKY 52\\nSTICKY 53\\nSTICKY 54\\nSTICKY 55\\nSTICKY 56\\nSTICKY 57\\nSTICKY 58\\nSTICKY 59\\nSTICKY 60\\nSTICKY 61\\nSTICKY 62\\nSTICKY 63\\nSTICKY 64\\nSTICKY 65\\nSTICKY 66\\nSTICKY 67\\nSTICKY 68\\nSTICKY 69\\nSTICKY 70\\nSTICKY 71\\nSTICKY 72\\nSTICKY 73\\nSTICKY 74\\nSTICKY 75\\nSTICKY 76\\nSTICKY 77\\nSTICKY 78\\nSTICKY 79\\nSTICKY 80\\nSTICKY 81\\nSTICKY 82\\nSTICKY 83\\nSTICKY 84\\nSTICKY 85\\nSTICKY 86\\nSTICKY 87\\nSTICKY 88\\nSTICKY 89\\nSTICKY 90\\nSTICKY 91\\nSTICKY 92\\nSTICKY 93\\nSTICKY 94\\nSTICKY 95\\nSTICKY 96\\nSTICKY 97\\nSTICKY 98\\nSTICKY 99\\nSTICKY 100\\nSTICKY 101\\nSTICKY 102\\nSTICKY 103\\nSTICKY 104\\nSTICKY 105\\nSTICKY 106\\nSTICKY 107\\nSTICKY 108\\nSTICKY 109\\nSTICKY 110\\nSTICKY 111\\nSTICKY 112\\nSTICKY 113\\nSTICKY 114\\nSTICKY 115\\nSTICKY 116\\nSTICKY 117\\nSTICKY 118\\nSTICKY 119\\nSTICKY 120\\nSTICKY 121\\nSTICKY 122\\nSTICKY 123\\nSTICKY 124\\nSTICKY 125\\nSTICKY 126\\nSTICKY 127\\nSTICKY 128\\nSTICKY 129\\nSTICKY 130\\nSTICKY 131\\nSTICKY 132\\nSTICKY 133\\nSTICKY 134\\nSTICKY 135\\"
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8') == '28\\n'"
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8') == '28\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\\n\") == \"28\"\n\nfrom typing import List\n"
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\") == \"28\"\n"
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\") == \"28\"\nassert solution(\"BUYSTICKERS\\n4\\nBUYER 20\\nSTICKY 20\\nSTICKY 10\\nSTICKY 2\\nERS 8\") == \"def solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 10\\nSTICKY 1\\nERS 8\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8') == '28\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8') == 28\nassert solution('BUYSTICKERS\\n5\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8') == 'IMPOSSIBLE'"
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\") == \"28\"\n\nassert solution(\"BUYSTICKERS\\n5\\nSTICKY 10\\nSTICKY 5\\nSTICKY 20\\nSTICKY 15\\nSTICKY 25\\nSTICKY 30\\nSTICKY 40\\nSTICKY 50\\nSTICKY 60\\nSTICKY 70\\nSTICKY 80\\nSTICKY 90\\nSTICKY 100\\nSTICKY 120\\nSTICKY 150\\nSTICKY 200\\nSTICKY 250\\nSTICKY 300\\nSTICKY 350\\nSTICKY 400\\nSTICKY 450\\nSTICKY 500\\nSTICKY 600\\nSTICKY 700\\nSTICKY 800\\nSTICKY 900\\nSTICKY 1000\\nSTICKY 1200\\nSTICKY 1500\\nSTICKY 2000\\nSTICKY 2500\\nSTICKY 3000\\nSTICKY 3500\\nSTICKY 4000\\nSTICKY 4500\\nSTICKY 5000\\nSTICKY 6000\\nSTICKY 7000\\nSTICKY 8000\\nSTICKY 9000\\nSTICKY 10000\\nSTICKY 12000\\nSTICKY 15000\\nSTICKY 20000\\nSTICKY 25000\\nSTICKY 30000\\nSTICKY 35000\\nSTICKY 40000\\nSTICKY 45000\\nSTICKY 50000\\nSTICKY 60000\\nSTICKY 70000\\nSTICKY 80000\\nSTICKY 90000\\nSTICKY 100000\\nSTICKY 120000\\nSTICKY 150000\\nSTICKY 200000\\nSTICKY 250000\\nSTICKY 300000\\nSTICKY 350000\\nSTICKY 400000\\nSTICKY 450000\\nSTICKY 500000\\nSTICKY 600000\\nSTICKY 700000\\nSTICKY 800000\\nSTICKY 900000\\nSTICKY 1000000\\nSTICKY 1200000\\nSTICKY 1500000\\nSTICKY 2000000\\nSTICKY 2500000\\nSTICKY 3000000\\nSTICKY 3500000\\nSTICKY 4000000\\nSTICKY 4500000\\nSTICKY 5000000\\nSTICKY 6000000\\nSTICKY 7000000\\nSTICKY 8000000\\nSTICKY 9000000\\nSTICKY 10000000\\nSTICKY 12000000\\nSTICKY 15000000\\nSTICKY 20000000\\nSTICKY 25000000\\nSTICKY 30000000\\nSTICKY 35000000\\nSTICKY 40000000\\nSTICKY 45000000\\nSTICKY 50000000\\nSTICKY 60000000\\nSTICKY 70000000\\nSTICKY 80000000\\nSTICKY 90000000\\nSTICKY 10"
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == sample_output, \"Incorrect output\""
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\"\n"
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n5 3 8\n1 1\n2 1\n3 1\n4 2\n5 2\n3 3\n4 3\n5 3\n''') == '''\nINDV 1\nINDV 2\nINDV 3\nINDV 4\nINDV 5\n'''"
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"\"\"\nINDV 1\nINDV 2\nCORP 1\nINDV 4\nCORP 2\nINDV 3\nCORP 3\nINDV 5\n\"\"\""
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\\n\") == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\\n\"\n"
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\") == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\""
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"\"\"\nINDV 1\nINDV 2\nCORP 1\nINDV 4\nCORP 2\nINDV 3\nCORP 3\nINDV 5\n\"\"\""
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(r'5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3') == \"\"\"\nINDV 1\nINDV 2\nCORP 1\nINDV 4\nCORP 2\nINDV 3\nCORP 3\n\"\"\".strip()\n"
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\") == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\\n\"\nassert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\\n6 2\") == \"INDV 1\\nINDV 2\\nINDV 3\\nINDV 4\\nINDV 5\\n\"\nassert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\\n6 2\\n1 2\") == \"INDV 1\\nINDV 2\\nINDV 3\\nINDV 4\\nINDV 5\\n\"\nassert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\\n6 2\\n1 2\\n7 2\") == \"INDV 1\\nINDV 2\\nINDV 3\\nINDV 4\\nINDV 5\\nINDV 7\\n\"\nassert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\\n6 2\\n1 2\\n7 2\\n8 1\") == \"INDV 1\\nINDV 2\\nINDV 3\\nINDV 4\\nINDV 5\\nINDV 7\\n\"\n"
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}\\nGot: {solution(input())}\""
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\""
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == 2.4142135624\nassert solution(\"4\\n10 1\\n20 2\\n10\\n10\\n\") == 2.4142135624\nassert solution(\"4\\n10 1\\n1\\n20\\n10\\n\") == 2.4142135624\nassert solution(\"4\\n10 1\\n1\\n20\\n10\\n\") == 2.4142135624\nassert solution(\"4\\n10 1\\n1\\n20\\n10\\n\") == 2.4142135624\nassert solution(\"4\\n10 1\\n1\\n20\\n10\\n\") == 2.4142135624\nassert solution(\"4\\n10 1\\n1\\n20\\n10\\n\") == 2.4142135624\nassert solution(\"4\\n10 1\\n1\\n20\\n10\\n\") == 2.4142135624\nassert solution(\"4\\n10 1\\n1\\n20\\n10\\n\") == 2.4142135624\nassert solution(\"4\\n10 1\\n1\\n20\\n10\\n\") == 2.4142135624\nassert solution(\"4\\n10 1\\n1\\n20\\n10\\n\") == 2.4142135624\nassert solution(\"4\\n10 1\\n1\\n20\\n10\\n\") == 2.4142135624\nassert solution(\"4\\n10 1\\n1\\n20\\n10\\n\") == 2.4142135624\nassert solution(\"4\\n10 1\\n1\\n20\\n10\\n\") == 2.4142135624\nassert solution(\"4\\n10 1\\n1\\n20\\n10\\n\") == 2.4142135624\nassert solution(\"4\\n10 1\\n1\\n20\\n10\\n\") == 2.4142135624\nassert solution(\"4\\n10 1\\n1\\n20\\n10\\n\") == 2.4142135624\nassert solution(\"4\\n10 1\\n1\\n20\\n10\\n\") == 2.4142135624\nassert solution(\"4\\n10 1\\n1\\n20\\n10\\n\") == 2.4142135624\nassert solution(\"4\\n10 1\\n1\\n20\\n10\\n\") == 2.4142135624\nassert solution(\"4\\n10 1\\n1\\n20\\n10\\n\") == 2.4142135624\nassert solution(\"4\\n10 1\\n1\\n20\\n10\\n\") == 2.4142135624\nassert solution(\"4\\n10 1\\n1\\n20\\n10\\n\") == 2.4142135624\nassert solution(\"4\\n10 1\\n1\\n20\\n10\\n\") == 2.4142135624\nassert solution(\"4\\n10 1\\n1\\n20\\n10\\n\") == 2.4142135624\nassert solution(\"4\\n10 1\\n1\\n20\\n10\\n\") == 2.4142135624\nassert solution(\"4\\n"
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Test failed: solution({input()})!= expected ({expected})\"\n"
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\\n\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\\n\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\\n\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\\n\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\\n\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\\n\""
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\n10 1\\n1\\n0\\n10\\n10\\n') == 2.4142135624\nassert solution('4\\n10 1\\n1\\n20\\n10\\n10\\n') == 2.4142135624\nassert solution('4\\n10 1\\n1\\n0\\n10\\n20\\n') == 2.4142135624\nassert solution('4\\n10 1\\n1\\n20\\n10\\n20\\n') == 2.4142135624\nassert solution('4\\n10 1\\n1\\n0\\n10\\n10\\n') == 2.4142135624\nassert solution('4\\n10 1\\n1\\n20\\n10\\n10\\n') == 2.4142135624\n"
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\"\n"
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\\n\""
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 2.4142135624, \"Output should be 2.4142135624\""
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_string) == expected_output, \"The output is not as expected.\""
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\""
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\\n\") == \"15\"\n"
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\") == 15\nassert solution(\"1 3\\n3 1\\n2 5\\n2 3\\n1 2\\n0 4\\n0 5\\n3 4\\n4 5\") == 130\nassert solution(\"1 1\\n2 1\\n3 1\\n4 1\\n5 1\\n6 1\\n7 1\\n8 1\\n9 1\\n10 1\\n11 1\\n12 1\\n13 1\\n14 1\\n15 1\\n16 1\\n17 1\\n18 1\\n19 1\\n20 1\\n21 1\\n22 1\\n23 1\\n24 1\\n25 1\\n26 1\\n27 1\\n28 1\\n29 1\\n30 1\\n31 1\\n32 1\\n33 1\\n34 1\\n35 1\\n36 1\\n37 1\\n38 1\\n39 1\\n40 1\\n41 1\\n42 1\\n43 1\\n44 1\\n45 1\\n46 1\\n47 1\\n48 1\\n49 1\\n50 1\\n51 1\\n52 1\\n53 1\\n54 1\\n55 1\\n56 1\\n57 1\\n58 1\\n59 1\\n60 1\\n61 1\\n62 1\\n63 1\\n64 1\\n65 1\\n66 1\\n67 1\\n68 1\\n69 1\\n70 1\\n71 1\\n72 1\\n73 1\\n74 1\\n75 1\\n76 1\\n77 1\\n78 1\\n79 1\\n80 1\\n81 1\\n82 1\\n83 1\\n84 1\\n85 1\\n86 1\\n87 1\\n88 1\\n89 1\\n90 1\\n91 1\\n92 1\\n93 1\\n94 1\\n95 1\\n96 1\\n97 1\\n98 1\\n99 1\\n100 1\\n101 1\\n102 1\\n103 1\\n104 1\\n105 1\\n106 1\\n107 1\\n108 1\\n109 1\\n110 1\\n111 1\\n112 1\\n113 1\\n114 1\\n115 1\\n116 1\\n117 1\\n118 1\\n119 1\\n120 1\\n121 1\\n122 1\\n123 1\\n124 1\\n125 1\\n126 1\\n127 1\\n128 1\\n129 1\\n130 1\\n131 1\\n132 1\\n133 1\\n134 1\\n135 1\\n136 1\\n137 1\\n138 1\\n139 1\\n140 1\\n141 1\\n142 1\\n143 1\\n144 1\\n145 1\\n146 1\\n147 1\\n148 1\\n149 1\\"
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3') == '15'\nassert solution('5\\n1 0\\n1 1\\n0 1\\n1 2') == '10'\nassert solution('1\\n2') == '2'\nassert solution('1\\n0') == '0'\nassert solution('0') == '0'"
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(solution) == 15, \"The solution is not correct\""
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"15\\n\""
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\") == \"15\\n\"\n"
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\") == 15\nassert solution(\"3\\n1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\") == 15\n\nfrom typing import List"
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\\n') == '15'"
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\") == 15\n"
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\") == \"15\\n\""
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\" for input, output in [\n    ([5, 5, 3, 3, 4], ['.....', '..BBC', '..A.C', '....C', '@DDDD', 'def solution(stdin: str) -> str:\\n    pass']),\n    ([5, 5, 5, 3, 3], ['.....', '..A.C', '..A.C', '@DDDD', '..A.C']),\n    ([5, 5, 3, 4, 4], ['.....', '..BBC', '@DDDD', '@DDDD', '@DDDD']),\n    ([5, 5, 3, 3, 5], ['.....', '..BBC', '..A.C', '@DDDD', '@DDDD']),\n    ([5, 5, 3, 4, 5], ['.....', '..BBC', '@DDDD', '@DDDD', '@DDDD']),\n    ([5, 5, 3, 3, 6], ['.....', '..BBC', '..A.C', '@DDDD', '@DDDD']),\n]"
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"\"\".....\n..BBC\n..A.C\n....C\n@DDDD\n"
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 5 3 3 4') == '.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n\nfrom typing import List\n"
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 5 3 3 4\") == \"..BBC\\nA.C....C@\\nDDDD\\n\""
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 5 3 3 4\") == \".....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 5 3 3 4') == '.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass'\nassert solution('1 1 1 1 1') == '.....\\n.....\\n.....\\n.....\\n.....\\ndef solution(stdin: str) -> str:\\n    pass'\nassert solution('1 1 1 1 2') == '.....\\n.....\\n.....\\n.....\\n.....\\ndef solution(stdin: str) -> str:\\n    pass'\nassert solution('1 1 1 2 1') == '.....\\n.....\\n.....\\n.....\\n.....\\ndef solution(stdin: str) -> str:\\n    pass'\nassert solution('1 1 1 2 2') == '.....\\n.....\\n.....\\n.....\\n.....\\ndef solution(stdin: str) -> str:\\n    pass'\nassert solution('1 1 2 1 1') == '.....\\n.....\\n.....\\n.....\\n.....\\ndef solution(stdin: str) -> str:\\n    pass'\nassert solution('1 1 2 1 2') == '.....\\n.....\\n.....\\n.....\\n.....\\ndef solution(stdin: str) -> str:\\n    pass'\nassert solution('1 1 2 2 1') == '.....\\n.....\\n.....\\n.....\\n.....\\ndef solution(stdin: str) -> str:\\n    pass'\nassert solution('1 1 2 2 2') == '.....\\n.....\\n.....\\n.....\\n.....\\ndef solution(stdin: str) -> str:\\n    pass'\nassert solution('1 2 1 1 1') == '.....\\n.....\\n.....\\n.....\\n.....\\ndef solution(stdin: str) -> str:\\n    pass'\nassert solution('1 2 1 1 2') == '.....\\n.....\\n.....\\n.....\\n.....\\ndef solution(stdin: str) -> str:\\n    pass'\nassert solution('1 2 1 2 1') == '.....\\n.....\\n.....\\n.....\\n.....\\ndef solution(stdin: str) -> str:\\n    pass'\nassert solution('1 2 1 2 2') == '.....\\n.....\\n.....\\n.....\\n.....\\ndef solution(stdin: str) -> str:\\n    pass'\nassert solution('1 2 2 1 1') == '.....\\n.....\\n.....\\n.....\\n.....\\ndef solution(stdin: str) -> str:\\n    pass'\nassert solution('1 2 2 1 2') == '.....\\n.....\\n.....\\n.....\\n.....\\ndef solution(stdin: str) -> str:\\n    pass'\nassert solution('1 2 2 2 1') == '.....\\n.....\\n.....\\n.....\\n.....\\ndef solution(stdin: str) -> str:\\n    pass'\nassert solution('1 2 2 2 2') == '.....\\n.....\\n.....\\n.....\\n.....\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 5 3 3 4') == '.B.C.D@'\nassert solution('5 5 1 1 4') == '.B.C.D@'\nassert solution('5 5 1 1 4') == '.B.C.D@'\nassert solution('5 5 1 1 4') == '.B.C.D@'\nassert solution('5 5 1 1 4') == '.B.C.D@'\n"
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"5 5 3 3 4\") == \".B..C..D.\"\nassert solution(\"5 5 1 2 4\") == \"....A.B....C.D....\"\nassert solution(\"5 5 4 1 2\") == \".@....B....C.D....\"\nassert solution(\"5 5 4 2 3\") == \".A....C....D.E....\"\nassert solution(\"5 5 1 3 4\") == \"....A.B....C.D....\"\nassert solution(\"5 5 2 4 1\") == \".@....B....C.D....\"\nassert solution(\"5 5 2 1 3\") == \".A....C....D.E....\"\nassert solution(\"5 5 3 4 2\") == \".B....C....D.E....\"\nassert solution(\"5 5 1 2 4\") == \"....A.B....C.D....\""
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 5 3 3 4\") == \".....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\n# Test case 1\\nprint(solution(\\\"5 5 3 3 4\\\"))\\n# Expected output: '.....\\n#..BBC\\n#..A.C\\n#....C\\n# @DDDD\\n# def solution(stdin: str) -> str:\\n#     pass\\n\\n# Test case 2\\nprint(solution(\\\"10 10 5 5 4\\\"))\\n# Expected output: '....@D\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test case 3\\nprint(solution(\\\"15 5 5 5 20\\\"))\\n# Expected output: '.@...B\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test case 4\\nprint(solution(\\\"25 20 20 20 20\\\"))\\n# Expected output: '...BB@B\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test case 5\\nprint(solution(\\\"25 10 10 10 10\\\"))\\n# Expected output: '....B....\\ndef solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 3\\n111\\n001\\n000\\n111\\n000') == '001\\n001\\n001\\n111\\n200\\n'"
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 3\\n111\\n001\\n000\\n111\\n000') == '001\\n001\\n001\\n111\\n200'\nassert solution('5 3\\n111\\n001\\n000\\n111\\n000') == '001\\n001\\n001\\n111\\n200'\nassert solution('5 3\\n111\\n001\\n000\\n111\\n000') == '001\\n001\\n001\\n111\\n200'"
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\"\nassert solution(\"3 5\\n200\\n100\\n050\\n010\") == \"000\\n050\\n100\\n200\\n300\"\nassert solution(\"1 1\\n10\") == \"10\""
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"5 3\\n111\\n001\\n000\\n111\\n000\"\n) == \"001\\n001\\n001\\n111\\n200\"\n\nassert solution(\n    \"5 3\\n111\\n001\\n000\\n111\\n000\"\n) == \"001\\n001\\n001\\n111\\n200\"\n\nassert solution(\n    \"5 3\\n111\\n001\\n000\\n111\\n000\"\n) == \"001\\n001\\n001\\n111\\n200\"\n\nassert solution(\n    \"5 3\\n111\\n001\\n000\\n111\\n000\"\n) == \"001\\n001\\n001\\n111\\n200\"\n\nassert solution(\n    \"5 3\\n111\\n001\\n000\\n111\\n000\"\n) == \"001\\n001\\n001\\n111\\n200\"\n\nassert solution(\n    \"5 3\\n111\\n001\\n000\\n111\\n000\"\n) == \"001\\n001\\n001\\n111\\n200\"\n\nassert solution(\n    \"5 3\\n111\\n001\\n000\\n111\\n000\"\n) == \"001\\n001\\n001\\n111\\n200\"\n\nassert solution(\n    \"5 3\\n111\\n001\\n000\\n111\\n000\"\n) == \"001\\n001\\n001\\n111\\n200\"\n\nassert solution(\n    \"5 3\\n111\\n001\\n000\\n111\\n000\"\n) == \"001\\n001\\n001\\n111\\n200\"\n\nassert solution(\n    \"5 3\\n111\\n001\\n000\\n111\\n000\"\n) == \"001\\n001\\n001\\n111\\n200\"\n\nassert solution(\n    \"5 3\\n111\\n001\\n000\\n111\\n000\"\n) == \"001\\n001\\n001\\n111\\n200\"\n\nassert solution(\n    \"5 3\\n111\\n001\\n000\\n111\\n000\"\n) == \"001\\n001\\n001\\n111\\n200\"\n\nassert solution(\n    \"5 3\\n111\\n001\\n000\\n111\\n000\"\n) == \"001\\n001\\n001\\n111\\n200\"\n\nassert solution(\n    \"5 3\\n111\\n001\\n000\\n111\\n000\"\n) == \"001\\n001\\n001\\n111\\n200\"\n\nassert solution(\n    \"5 3\\n111\\n001\\n000\\n111\\n000\"\n) == \"001\\n001\\n001\\n111\\n200\"\n\nassert solution(\n    \"5 3\\n111\\n001\\n000\\n111\\n000\"\n) == \"001\\n001\\n001\\n111\\n200\"\n\nassert solution"
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == sample_output, f\"Expected output: {sample_output}, but got: {solution(sample_input)}\""
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n5 3\n111\n001\n000\n111\n000\n''') == '001\\n001\\n001\\n111\\n200\\n'\n\nassert solution('''\n5 3\n111\n001\n000\n111\n000\n''') == '001\\n001\\n001\\n111\\n200\\n'\n\nassert solution('''\n5 3\n111\n001\n000\n111\n000\n''') == '001\\n001\\n001\\n111\\n200\\n'\n\nassert solution('''\n5 3\n111\n001\n000\n111\n000\n''') == '001\\n001\\n001\\n111\\n200\\n'\n\nassert solution('''\n5 3\n111\n001\n000\n111\n000\n''') == '001\\n001\\n001\\n111\\n200\\n'\n\nassert solution('''\n5 3\n111\n001\n000\n111\n000\n''') == '001\\n001\\n001\\n111\\n200\\n'\n\nassert solution('''\n5 3\n111\n001\n000\n111\n000\n''') == '001\\n001\\n001\\n111\\n200\\n'\n\nassert solution('''\n5 3\n111\n001\n000\n111\n000\n''') == '001\\n001\\n001\\n111\\n200\\n'\n\nassert solution('''\n5 3\n111\n001\n000\n111\n000\n''') == '001\\n001\\n001\\n111\\n200\\n'"
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\"\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\\n200\") == \"001\\n001\\n001\\n111\\n200\"\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\\n200\") == \"001\\n001\\n001\\n111\\n200\"\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\\n200\") == \"001\\n001\\n001\\n111\\n200\"\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\\n200\") == \"001\\n001\\n001\\n111\\n200\""
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(solution_input) == solution_output, \"Test failed\""
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 3\\n111\\n001\\n000\\n111\\n000') == '001\\n001\\n001\\n111\\n200'"
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\\n\"\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\\n\"\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\\n\""
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17') == '19 20\\n17 15 14 13 7 2'\nassert solution('19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n20/1"
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17') == '19 20\\n17 15 14 13 7 2'\nassert solution('1/1\\n2/2\\n3/3\\n4/4\\n5/5\\n6/6\\n7/7\\n8/8\\n9/9\\n10/10\\n11/11\\n12/12\\n13/13\\n14/14\\n15/15\\n16/16\\n17/17\\n18/18\\n19/19\\n20/20\\n21/21\\n22/22\\n23/23\\n24/24\\n25/25\\n26/26\\n27/27\\n28/28\\n29/29\\n30/30\\n31/31\\n32/32\\n33/33\\n34/34\\n35/35\\n36/36\\n37/37\\n38/38\\n39/39\\n40/40\\n41/41\\n42/42\\n43/43\\n44/44\\n45/45\\n46/46\\n47/47\\n48/48\\n49/49\\n50/50\\n51/51\\n52/52\\n53/53\\n54/54\\n55/55\\n56/56\\n57/57\\n58/58\\n59/59\\n60/60\\n61/61\\n62/62\\n63/63\\n64/64\\n65/65\\n66/66\\n67/67\\n68/68\\n69/69\\n70/70\\n71/71\\n72/72\\n73/73\\n74/74\\n75/75\\n76/76\\n77/77\\n78/78\\n79/79\\n80/80\\n81/81\\n82/82\\n83/83\\n84/84\\n85/85\\n86/86\\n87/87\\n88/88\\n89/89\\n90/90\\n91/91\\n92/92\\n93/93\\n94/94\\n95/95\\n96/96\\n97/97\\n98/98\\n99/99\\n100/100\\n101/101\\n102/102\\n103/103\\n104/104\\n105/105\\n106/106\\n107/107\\n108/108\\n109/109\\n110/110\\n111/111\\n112/112') == 'impossible'"
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_str) == output_str, f\"Test failed. Expected '{output_str}', got '{solution(input_str)}'.\""
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\") == \"19 20\\n17 15 14 13 7 2\""
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\") == \"19 20\\n17 15 14 13 7 2\"\nassert solution(\"10/1\\n2/2\\n3/3\") == \"impossible\"\nassert solution(\"10/1\\n2/3\\n3/2\") == \"impossible\"\nassert solution(\"10/1\\n2/3\\n3/4\") == \"impossible\"\nassert solution(\"10/1\\n2/3\\n3/5\") == \"impossible\"\nassert solution(\"10/1\\n2/3\\n3/6\") == \"impossible\"\nassert solution(\"10/1\\n2/3\\n3/7\") == \"impossible\"\nassert solution(\"10/1\\n2/3\\n3/8\") == \"impossible\"\nassert solution(\"10/1\\n2/3\\n3/9\") == \"impossible\"\nassert solution(\"10/1\\n2/3\\n3/10\") == \"impossible\"\nassert solution(\"10/1\\n2/3\\n3/11\") == \"impossible\"\nassert solution(\"10/1\\n2/3\\n3/12\") == \"impossible\"\nassert solution(\"10/1\\n2/3\\n3/13\") == \"impossible\"\nassert solution(\"10/1\\n2/3\\n3/14\") == \"impossible\"\nassert solution(\"10/1\\n2/3\\n3/15\") == \"impossible\"\nassert solution(\"10/1\\n2/3\\n3/16\") == \"impossible\"\nassert solution(\"10/1\\n2/3\\n3/17\") == \"impossible\"\nassert solution(\"10/1\\n2/3\\n3/18\") == \"impossible\"\nassert solution(\"10/1\\n2/3\\n3/19\") == \"impossible\"\nassert solution(\"10/1\\n2/3\\n3/20\") == \"impossible\"\nassert solution(\"10/1\\n2/3\\n3/21\") == \"impossible\"\nassert solution(\"10/1\\n2/3\\n3/22\") == \"impossible\"\nassert solution(\"10/1\\n2/3\\n3/23\") == \"impossible\"\nassert solution(\"10/1\\n2/3\\n3/24\") == \"impossible\"\nassert solution(\"10/1\\n2/3\\n3/25\") == \"impossible\"\nassert solution(\"10/1\\n2/3\\n3/26\") == \"impossible\"\nassert solution(\"10/1\\n2/3\\n3/27\") == \"impossible\"\nassert solution(\"10/1\\n2/3\\n3/28\") == \"impossible\"\nassert solution(\"10/1\\n2/3\\n3/29\") == \"impossible\"\nassert solution(\"10/1\\n2/3\\n3/30\") == \"impossible\"\nassert solution(\"10/1\\n2/3\\n3/31\") == \"impossible\"\nassert solution(\"10/1\\n2/3\\n3/32\") == \"impossible\"\nassert solution(\"10/1\\n2/3\\n3/33\") == \"impossible\"\nassert solution(\"10/1\\n2/3\\n3/34\") == \"impossible\"\nassert solution(\"10/1\\n2/3\\n3/35\") == \"impossible\"\nassert solution(\"10/1\\n2/3\\n3/36\") == \"impossible\"\nassert solution(\"10/1\\n2/3\\n3/37\") == \"impossible\"\nassert solution(\"10/1\\n2/3\\n3/38\") == \"impossible\"\nassert solution(\"1"
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n\") == \"19 20\\n17 15 14 13 7 2\"\nassert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/13\\n19/14\\n19/15\\n19/16\\n19/17\\n10/7\\n19/18\\n19/19\\n19/20\\n20/8\\n20/9\\n20/10\\n20/11\\n20/12\\n20/13\\n20/14\\n20/15\\n20/16\\n20/17\\n\") == \"19 20\\n17 15 14 13 7 2\"\nassert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/13\\n19/14\\n19/15\\n19/16\\n19/17\\n10/7\\n19/18\\n19/19\\n19/20\\n20/8\\n20/9\\n20/10\\n20/11\\n20/12\\n20/13\\n20/14\\n20/15\\n20/16\\n20/17\\n20/18\\n20/19\\n20/20\\n\") == \"impossible\"\nassert solution(\"20/13\\n19/13\\n19/14\\n19/15\\n19/16\\n19/17\\n19/18\\n19/19\\n19/20\\n20/8\\n20/9\\n20/10\\n20/11\\n20/12\\n20/13\\n20/14\\n20/15\\n20/16\\n20/17\\n20/18\\n20/19\\n20/20\\n19/13\\n19/14\\n19/15\\n19/16\\n19/17\\n19/18\\n19/19\\n19/20\\n20/8\\n20/9\\n20/10\\n20/11\\n20/12\\n20/13\\n20/14\\n20/15\\n20/16\\n20/17\\n20/18\\n20/19\\n20/20\\n\") == \"impossible\""
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\") == \"19 20\\n17 15 14 13 7 2\""
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\") == \"19 20\\n17 15 14 13 7 2\"\nassert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n\\nImpossible\" == \"Impossible\")"
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''19/13\n10/1\n19/14\n4/3\n20/7\n19/7\n20/13\n19/15\n10/7\n20/17\n19/2\n19/17''') == '19 20\\n17 15 14 13 7 2'\nassert solution('''19/13\n10/1\n19/14\n4/3\n20/7\n19/7\n20/13\n19/15\n10/7\n20/17\n19/2\n19/17''') == '19 20\\n17 15 14 13 7 2'\nassert solution('''19/13\n10/1\n19/14\n4/3\n20/7\n19/7\n20/13\n19/15\n10/7\n20/17\n19/2\n19/17''') == 'impossible'"
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\") == \"19 20\\n17 15 14 13 7 2\"\nassert solution(\"19/13\\n21/14\\n18/15\\n3/2\\n22/7\\n19/8\\n20/14\\n19/18\\n19/15\\n11/8\\n20/16\\n19/3\\n19/19\\n19/16\\n12/8\\n20/18\\n19/4\\n19/20\\n19/17\\n13/8\\n20/19\\n19/5\\n19/21\\n19/18\\n14/8\\n20/20\\n19/6\\n19/22\\n19/19\\n15/8\\n20/21\\n19/7\\n19/23\\n19/20\\n16/8\\n20/22\\n19/8\\n19/24\\n19/21\\n17/8\\n20/23\\n19/9\\n19/25\\n19/22\\n18/8\\n20/24\\n19/10\\n19/26\\n19/23\\n19/24\\n19/25\\n20/25\\n19/11\\n19/27\\n19/24\\n19/26\\n19/27\\n21/27\\n19/12\\n19/28\\n19/25\\n19/27\\n19/28\\n22/28\\n19/13\\n19/29\\n19/26\\n19/28\\n19/29\\n23/29\\n19/14\\n19/30\\n19/27\\n19/29\\n19/30\\n24/30\\n19/15\\n19/31\\n19/28\\n19/30\\n19/31\\n25/31\\n19/16\\n19/32\\n19/29\\n19/30\\n19/32\\n26/32\\n19/17\\n19/33\\n19/30\\n19/32\\n19/33\\n27/33\\n19/18\\n19/34\\n19/31\\n19/33\\n19/34\\n28/34\\n19/19\\n19/35\\n19/32\\n19/34\\n19/35\\n29/35\\n19/20\\n19/36\\n19/33\\n19/35\\n19/36\\n30/36\\n19/21\\n19/37\\n19/34\\n19/36\\n19/37\\n31/37\\n19/22\\n19/38\\n19/35\\n19/37\\n19/38\\n32/38\\n19/23\\n19/39\\n19/36\\n19/38\\n19/39\\n33/39\\n19/24\\n19/40\\n19/37\\n19/39\\"
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n    3 3\n    0 0\n    0 2\n    2 0\n    1 2 3\n    2 2 2\n    3 0 3\n    \"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n    3 3\n    0 0\n    0 2\n    2 0\n    1 2 3\n    2 2 2\n    3 0 3\n    \"\"\") == \"possible\""
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\") == \"impossible\""
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n    3 3\n    0 0\n    0 2\n    2 0\n    1 2 3\n    2 2 2\n    3 0 3\n    ''') == 'impossible'\n\nassert solution('''\n    3 3\n    0 0\n    0 2\n    2 0\n    1 2 3\n    2 2 2\n    3 0 3\n    ''') == 'possible'"
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\\n\") == \"possible\""
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\\n\") == \"impossible\"\nassert solution(\"5 5\\n0 0\\n0 1\\n1 0\\n2 0\\n3 0\\n4 0\\n5 0\\n\") == \"possible\"\nassert solution(\"1 1\\n1 1\\n\") == \"possible\"\nassert solution(\"1 0\\n0 1\\n1 1\\n1 1\\n0 1\\n\") == \"impossible\"\nassert solution(\"1 0\\n0 1\\n1 1\\n1 1\\n0 1\\n1 1\\n\") == \"impossible\"\nassert solution(\"1 0\\n0 1\\n1 1\\n1 1\\n0 1\\n1 1\\n1 1\\n\") == \"possible\"\nassert solution(\"1 0\\n0 1\\n1 1\\n1 1\\n0 1\\n1 1\\n1 1\\n1 1\\n1 1\\n\") == \"possible\"\nassert solution(\"1 0\\n0 1\\n1 1\\n1 1\\n0 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1"
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"possible\""
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    '''\n    3 3\n    0 0\n    0 2\n    2 0\n    1 2 3\n    2 2 2\n    3 0 3\n    '''\n) == 'possible'\n\nassert solution(\n    '''\n    5 5\n    0 0\n    0 1\n    1 0\n    2 2\n    3 3\n    4 4\n    5 5\n    '''\n) == 'impossible'\n\nassert solution(\n    '''\n    3 3\n    0 0\n    0 2\n    2 0\n    1 2 3\n    2 2 2\n    3 0 3\n    4 0 4\n    5 0 5\n    '''\n) == 'possible'"
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\\n\") == \"possible\"\nassert solution(\"3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\\n\") == \"impossible\""
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3 3\n0 0\n0 2\n2 0\n1 2 3\n2 2 2\n3 0 3\n\"\"\") == \"possible\"\n"
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\nr\"\"\"\n3 3\n0 0\n0 2\n2 0\n1 2 3\n2 2 2\n3 0 3\n\"\"\"\n) == \"possible\""
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == expected\n"
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\n2\\n2\\n\") == \"4\\n\""
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 4, \"Your solution is incorrect\"\nprint(\"All good\")"
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n2\\n2\") == \"4\"\nassert solution(\"5 3\\n1\\n2\\n3\") == \"4\"\nassert solution(\"6 2\\n1\\n2\\n3\\n4\") == \"5\"\nassert solution(\"7 2\\n1\\n2\\n3\\n4\\n1\") == \"6\"\nassert solution(\"8 4\\n1\\n2\\n3\\n4\\n5\\n1\") == \"7\"\nassert solution(\"9 6\\n1\\n2\\n3\\n4\\n5\\n1\\n1\") == \"7\""
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n2\\n2\\n\") == \"4\\n\"\nassert solution(\"5 2\\n1\\n3\\n\") == \"1\\n\"\nassert solution(\"1 3\\n2\\n1\\n\") == \"3\\n\""
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"4\\n\""
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n2\\n2\") == 4\nassert solution(\"6 3\\n3\\n1\\n2\\n2\\n1\") == 5\nassert solution(\"5 3\\n4\\n1\\n2\\n2\") == 5\nassert solution(\"7 4\\n2\\n3\\n1\\n2\\n1\\n2\") == 6"
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"4\", \"Test failed\""
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 2\\n2\\n2\\n') == '4\\n'\nassert solution('4 2\\n1\\n1\\n') == '4\\n'\nassert solution('4 2\\n2\\n1\\n') == '4\\n'\nassert solution('4 2\\n1\\n2\\n') == '4\\n'\nassert solution('4 2\\n3\\n2\\n') == '4\\n'\nassert solution('4 2\\n1\\n3\\n') == '4\\n'\nassert solution('4 2\\n3\\n1\\n') == '4\\n'"
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n2\\n2\\n\") == \"4\"\nassert solution(\"3 2\\n1\\n2\\n\") == \"3\"\nassert solution(\"4 3\\n2\\n2\\n1\\n\") == \"4\""
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 1\\n1 2\\n1 3\\n') == 'Mirko\\n'\n"
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 1\\n1 2\\n1 3') == 'Mirko\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 1\\n1 2\\n1 3\") == \"Mirko\""
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1\\n1 2\\n1 3\") == \"Mirko\"\nassert solution(\"4 4\\n1 2\\n2 3\") == \"Slavko\"\nassert solution(\"1 1\\n4 4\\n1 2\") == \"Slavko\""
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 'Mirko'"
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\\n1 2\\n1 3\") == \"Mirko\"\n"
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"Mirko\""
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"Mirko\""
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n1\\n1\\n1\\n1\") == \"Mirko\"\nassert solution(\"2\\n2\\n2\\n2\\n2\") == \"Slavko\"\nassert solution(\"3\\n1\\n2\\n3\\n4\") == \"Mirko\"\nassert solution(\"5\\n1\\n2\\n3\\n4\") == \"Slavko\"\nassert solution(\"6\\n1\\n2\\n3\\n4\") == \"Mirko\"\nassert solution(\"7\\n1\\n2\\n3\\n4\") == \"Slavko\"\nassert solution(\"8\\n1\\n2\\n3\\n4\") == \"Mirko\"\nassert solution(\"9\\n1\\n2\\n3\\n4\") == \"Slavko\"\nassert solution(\"10\\n1\\n2\\n3\\n4\") == \"Mirko\""
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 1\\n1 2\\n1 3\\n\") == \"Mirko\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n6\\n34\\n38') == '2 4\\n'"
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(None) == \"\""
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n6\\n34\\n38\\n\") == \"2 4\\n\", \"The solution should be '2 4\\n'.\""
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output() for input_, output in zip(sample_input, sample_output)"
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Solution for {input()} expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == [\"2 4\"]\nassert solution(6) == [\"2 4\", \"2 2\"]\nassert solution(34) == [\"2 2\", \"2 4\"]\nassert solution(38) == [\"2 2\", \"2 4\", \"2 6\"]"
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n6\\n34\\n38\") == \"2 4\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\") == \"1 32 37 42 47 52 57 62 67 72 77 82 87 92 97 102 107 112 117 122 127 132 137 142 147 152 157 162 167 172 177 182 187 192 197 202 207 212 217 222 227 232 237 242 247 252 257 262 267 272 277 282 287 292 297 302 307 312 317 322 327 332 337 342 347 352 357 362 367 372 377 382 387 392 397 402 407 412 417 422 427 432 437 442 447 452 457 462 467 472 477 482 487 492 497 502 507 512 517 522 527 532 537 542 547 552 557 562 567 572 577 582 587 592 597 602 607 612 617 622 627 632 637 642 647 652 657 662 667 672 677 682 687 692 697 702 707 712 717 722 727 732 737 742 747 752 757 762 767 772 777 782 787 792 797 802"
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n6\\n34\\n38') == '2 4'\nassert solution('1000000000\\n9999999999\\n1000000000\\n9999999999') == '2 4'\nassert solution('1000000001\\n9999999999\\n1000000000\\n9999999999') == '4 2'\nassert solution('1000000002\\n9999999999\\n1000000000\\n9999999999') == '4 2'\nassert solution('1000000003\\n9999999999\\n1000000000\\n9999999999') == '4 2'\nassert solution('1000000004\\n9999999999\\n1000000000\\n9999999999') == '4 2'\nassert solution('1000000005\\n9999999999\\n1000000000\\n9999999999') == '4 2'"
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n3\n6\n34\n38\n''') == '''\n2 4\n'''\nassert solution('''\n4\n5\n3\n4\n''') == '''\n2 4\n3 5\n'''"
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2 4\"\n"
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    4\n    10000 400000 500000 900000\n    \"\"\"\n) == \"12\"\n\nassert solution(\n    \"\"\"\n    5\n    8 10 2 1000000 30556926000\n    \"\"\"\n) == \"12\""
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"12\" #Sample Output 1"
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Test case {test_case} failed. Expected output: {expected_output}, but got: {solution(input())}\"\n\ntest_case += 1\n"
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    4\n    10000 400000 500000 900000\n    \"\"\"\n) == \"12\"\n\nassert solution(\n    \"\"\"\n    5\n    8 10 2 1000000 30556926000\n    \"\"\"\n) == \"12\""
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input(1)) == \"12\"\nassert solution(sample_input(2)) == \"12\""
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 12"
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"12\""
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(5) == '12' # Sample Output 1"
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Incorrect output. Expected: {expected_output}, Received: {solution(input())}\""
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"12\"\nassert solution(stdin) == \"12\""
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin='8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0') == 'YES'"
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\") == \"YES\""
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\") == \"YES\"\nassert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\\n8 4 0\\n9 7 0\") == \"YES\"\nassert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\\n8 4 0\\n9 7 0\\n10 10 0\\n11 13 0\\n12 15 0\") == \"YES\"\nassert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\\n8 4 0\\n9 7 0\\n10 10 0\\n11 13 0\\n12 15 0\\n13 18 0\\n14 21 0\\n15 24 0\\n16 27 0\\n17 30 0\\n18 33 0\\n19 36 0\\n20 39 0\\n21 42 0\\n22 45 0\\n23 48 0\\n24 51 0\\n25 54 0\\n26 57 0\\n27 60 0\\n28 63 0\\n29 66 0\\n30 69 0\\n31 72 0\\n32 75 0\\n33 78 0\\n34 81 0\\n35 84 0\\n36 87 0\\n37 90 0\\n38 93 0\\n39 96 0\\n40 99 0\") == \"YES\"\nassert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\\n8 4 0\\n9 7 0\\n10 10 0\\n11 13 0\\n12 15 0\\n13 18 0\\n14 21 0\\n15 24 0\\n16 27 0\\n17 30 0\\n18 33 0\\n19 36 0\\n20 39 0\\n21 42 0\\n22 45 0\\n23 48 0\\n24 51 0\\n25 54 0\\n26 57 0\\n27 60 0\\n28 63 0\\n29 66 0\\n30 69 0\\n31 72 0\\n32 75 0\\n33 78 0\\n34 81 0\\n35 84 0\\n36 87 0\\n37 90 0\\n38 93 0\\n39 96 0\\n40 99 0\\n41 102 0\\n42 105 0\\n43 108 0\\n44 111 0\\n45 114 0\\"
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\") == \"YES\""
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\") == \"YES\""
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"YES\"\nprint(\"YES\")"
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == \"YES\"\n\nsample_input = \"\"\"\n8 8\n0\n2 4 0\n1 8 0\n8 5 0\n4 3 7 0\n5 2 6 0\n1 6 0\n7 3 0\n\"\"\""
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0') == 'YES'\nassert solution('8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\\n8 1 9\\n9 2 8') == 'YES'\nassert solution('10 9\\n1 2 3\\n4 5 6\\n7 8 9\\n0 1 2\\n3 4 5\\n6 7 8\\n9 10 11\\n12 13 14\\n15 16 17') == 'NO'"
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\") == \"YES\"\n"
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\") == \"YES\"\nassert solution(\"10 10\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\\n2 0 0\\n5 0 0\\n8 0 0\\n4 0 0\\n7 0 0\\n9 0 0\") == \"YES\"\nassert solution(\"2 2\\n1 1 0\\n0 1 1\") == \"NO\"\nassert solution(\"5 5\\n1 1 1 1 1 0\\n1 1 1 1 1 0\\n1 1 1 1 1 0\\n1 1 1 1 1 0\\n1 1 1 1 1 0\") == \"YES\"\nassert solution(\"8 5\\n5 4 3 2 1 0\\n1 1 1 1 0 0\\n1 1 1 1 0 0\\n1 1 1 1 0 0\\n1 1 1 1 0 0\\n1 1 1 1 0 0\") == \"YES\"\nassert solution(\"7 10\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\") == \"YES\""
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"Impossible\"\n"
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\\n\""
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\\n\""
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 'Impossible'"
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == expected_output, f\"Test failed. Expected output: {expected_output}, Received output: {solution}\"\n\nsolution = '''\n"
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\\n\"\nassert solution(\"4 1\\n2 4\") == \"2 4\\n\"\nassert solution(\"5 2\\n4 4\") == \"Impossible\\n\"\nassert solution(\"1 3 4 5 6\") == \"Impossible\\n\"\nassert solution(\"1 1 2\") == \"1 2\\n\"\nassert solution(\"1 1 1\") == \"1 1\\n\"\nassert solution(\"1 1 2 2 2 1\") == \"2 2 1\\n\"\n\nfrom typing import List\n"
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"Impossible\" # this solution should always return \"Impossible\""
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '5 6 1 2 3 4', \"Expected: '5 6 1 2 3 4', but got: '{}'.\".format(solution(stdin))"
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"Marek loves dancing and he has danced a lot in the last couple of years. He has actually danced so much that he became too good in all of the traditional dances like swing, salsa, ballroom, and hip-hop and now all partners he dances with can not keep up with him. Therefore he started to invent his own dances and even tries to convince other people to dance these new dances with him.\\nImpossible\""
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 2 8 4\") == \"20512\"\nassert solution(\"100 50 0 0\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 2 8 4\") == \"20512\""
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 2 8 4\") == \"20512\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"5 2 8 4\\n\"\n) == \"20512\""
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"20512\", \"The solution is incorrect.\""
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2 8 4\") == \"20512\", \"Incorrect output\""
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 2 8 4') == '20512'\nassert solution('1 1 1 1') == 'IMPOSSIBLE'\nassert solution('5 1 2 4') == 'IMPOSSIBLE'\nassert solution('5 3 7 1') == '38712'"
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=input()) == '20512\\n'"
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 2 8 4') == '20512'"
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin='5 2 8 4') == '20512'\nassert solution(stdin='3 2 7 4') == 'IMPOSSIBLE'"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\nBAC\\nABC\") == 2\nassert solution(\"3 8\\nHGBDFCAE\\nADBGHFCE\\nHCFGBDAE\") == 3"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\nBAC\\nABC\") == 2\nassert solution(\"3 8\\nHGBDFCAE\\nADBGHFCE\\nHCFGBDAE\") == 3"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\nBAC\\nABC\") == 2\nassert solution(\"3 8\\nHGBDFCAE\\nADBGHFCE\\nHCFGBDAE\") == 3\n"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\nBAC\\nABC\\n\") == \"2\\n\"\nassert solution(\"3 8\\nHGBDFCAE\\nADBGHFCE\\nHCFGBDAE\\n\") == \"3\\ndef solution(stdin: str) -> str:pass\\n\"\n"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2\\nBAC\\nABC\\n2 3\\nBAC\\nABC\\n\") == \"2\"\nassert solution(\"2 3\\nBAC\\nABC\\n2 3\\nBAC\\nABC\\n\") == \"2\"\nassert solution(\"1 2\\nBAC\\nABC\\n2 3\\nBAC\\nABC\\n\") == \"2\"\nassert solution(\"3 8\\nHGBDFCAE\\nADBGHFCE\\nHCFGBDAE\\n\") == \"3\"\nassert solution(\"2 3\\nBAC\\nABC\\n2 3\\nBAC\\nABC\\n\") == \"2\""
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 2\n\nassert solution() == 3\n\nassert solution() == 1"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\nBAC\\nABC\") == 2\nassert solution(\"3 8\\nHGBDFCAE\\nADBGHFCE\\nHCFGBDAE\") == 3"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\nBAC\\nABC\\n\") == 2\nassert solution(\"3 8\\nHGBDFCAE\\nADBGHFCE\\nHCFGBDAE\\n\") == 3"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('test_input.txt', 'r')) == 2\nassert solution(open('test_input.txt', 'r')) == 3"
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 224732\n"
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2\\n\") == \"3\\n\"  # Correct\nassert solution(\"3 4\\n\") == \"4\\n\"  # Correct\nassert solution(\"5 6\\n\") == \"6\\n\"  # Correct\nassert solution(\"1 3\\n\") == \"3\\n\"  # Correct"
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2\") == \"3\""
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"3\""
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '3\\n'\n"
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"3\"\n"
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2\\n\") == \"3\\n\"  # Example 1\nassert solution(\"3 4\\n\") == \"1\\n\"  # Example 2\nassert solution(\"4 5\\n\") == \"2\\n\"  # Example 3\nassert solution(\"6 6\\n\") == \"3\\n\"  # Example 4\nassert solution(\"7 7\\n\") == \"4\\n\"  # Example 5"
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2\\n\") == \"3\\n\", \"Test case 1 failed\"\nassert solution(\"3 4\\n\") == \"6\\n\", \"Test case 2 failed\"\nassert solution(\"5 6\\n\") == \"10\\n\", \"Test case 3 failed\"\nassert solution(\"7 8\\n\") == \"15\\n\", \"Test case 4 failed\"\nassert solution(\"9 10\\n\") == \"20\\n\", \"Test case 5 failed\"\nassert solution(\"11 12\\n\") == \"25\\n\", \"Test case 6 failed\"\nassert solution(\"13 14\\n\") == \"30\\n\", \"Test case 7 failed\"\nassert solution(\"15 16\\n\") == \"35\\n\", \"Test case 8 failed\"\nassert solution(\"17 18\\n\") == \"40\\n\", \"Test case 9 failed\"\nassert solution(\"19 20\\n\") == \"45\\n\", \"Test case 10 failed\"\nassert solution(\"21 22\\n\") == \"50\\n\", \"Test case 11 failed\"\nassert solution(\"23 24\\n\") == \"55\\n\", \"Test case 12 failed\"\nassert solution(\"25 26\\n\") == \"60\\n\", \"Test case 13 failed\"\nassert solution(\"27 28\\n\") == \"65\\n\", \"Test case 14 failed\"\nassert solution(\"29 30\\n\") == \"70\\n\", \"Test case 15 failed\"\nassert solution(\"31 32\\n\") == \"75\\n\", \"Test case 16 failed\"\nassert solution(\"33 34\\n\") == \"80\\n\", \"Test case 17 failed\"\nassert solution(\"35 36\\n\") == \"85\\n\", \"Test case 18 failed\"\nassert solution(\"37 38\\n\") == \"90\\n\", \"Test case 19 failed\"\nassert solution(\"39 40\\n\") == \"95\\n\", \"Test case 20 failed\"\nassert solution(\"41 42\\n\") == \"100\\n\", \"Test case 21 failed\"\nassert solution(\"43 44\\n\") == \"105\\n\", \"Test case 22 failed\"\nassert solution(\"45 46\\n\") == \"110\\n\", \"Test case 23 failed\"\nassert solution(\"47 48\\n\") == \"115\\n\", \"Test case 24 failed\"\nassert solution(\"49 50\\n\") == \"120\\n\", \"Test case 25 failed\"\nassert solution(\"51 52\\n\") == \"125\\n\", \"Test case 26 failed\"\nassert solution(\"53 54\\n\") == \"130\\n\", \"Test case 27 failed\"\nassert solution(\"55 56\\n\") == \"135\\n\", \"Test case 28 failed\"\nassert solution(\"57 58\\n\") == \"140\\n\", \"Test case 29 failed\"\nassert solution(\"59 60\\n\") == \"145\\n\", \"Test case 30 failed\"\nassert solution(\"61 62\\n\") == \"150\\n\", \"Test case 31 failed\"\nassert solution(\"63 64\\n\") == \"155\\n\", \"Test case 32 failed\"\nassert solution(\"65 66\\n\") == \"160\\n\", \"Test case 33 failed\"\nassert solution(\"67 68\\n\") == \"165\\n\", \"Test case 34 failed\"\nassert solution(\"69 70\\n\") == \"170\\n\", \"Test case 35 failed\"\nassert solution(\"71 72\\n\") == \"175\\n\", \"Test case 36 failed\"\nassert solution(\"73 74\\n\") == \"180\\n\", \"Test case 37 failed\"\nassert solution(\"75 76\\n\") == \"185\\n\", \"Test case 38 failed\"\nassert solution"
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2\") == \"3\\n\""
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"3\\n\"\nassert solution(\"3 4\") == \"6\\n\"\nassert solution(\"5 6\") == \"9\\n\"\nassert solution(\"2 3\") == \"3\\n\"\nassert solution(\"1 1\") == \"1\\n\"\nassert solution(\"1 1 1\") == \"1\\n\"\nassert solution(\"1 1 1 1\") == \"1\\n\""
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 3, \"The given solution is incorrect.\""
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3') == 3, 'Incorrect Output'"
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3') == '3'\n"
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3\") == 3\nassert solution(\"5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3\") == 3\n"
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n    5 3\n    2 1 2\n    3 0 2 3\n    3 0 1 4\n    2 1 4\n    2 2 3\n    ''') == '3'"
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3\") == 3, \"Incorrect Output\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3') == '3\\n'"
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\npass\\n\"\n"
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3\") == 3\nassert solution(\"5 1\\n0 1 0 0\\n0 1 0 0\\n0 1 0 0\\n0 1 0 0\") == 1\nassert solution(\"10 20\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\") == 20"
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_data) == expected_output, f\"Test case {i+1} failed: {solution(input_data)}!= {expected_output}\""
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n6\\n1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3\\n1 1\\n1 2\\n2 1\") == \"YES\""
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n6\\n1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3\") == \"YES\""
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == 'YES', 'Invalid output'"
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(data) == expected, f\"Test case {i+1} failed. Expected {expected}, got {solution(data)}\" for i, data, expected in enumerate(test_cases)"
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3\\n1 1\\n1 2\\n2 1\\n') == 'YES\\nNO'"
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n6\\n1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3\") == 'YES\\nNO\\n'\nassert solution(\"1\\n4\\n1 1\\n1 2\\n2 1\\n2 2\") == 'NO\\nYES\\n'\nassert solution(\"1\\n5\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n3 1\\n3 2\\n3 3\\n4 1\\n4 2\\n4 3\\n5 1\\n5 2\\n5 3\") == 'NO\\nYES\\n'"
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n6\\n1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3\") == \"YES\""
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n        2\n        6\n        1 1\n        1 3\n        2 2\n        2 3\n        3 1\n        3 2\n        3\n        1 1\n        1 2\n        2 1\n        ''') == 'YES'\n\nassert solution('''\n        3\n        6\n        1 1\n        1 3\n        2 2\n        2 3\n        3 1\n        3 2\n        3\n        1 1\n        1 2\n        2 1\n        ''') == 'NO'"
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n6\\n1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3\\n1 1\\n1 2\\n2 1\") == \"YES\"\nassert solution(\"2\\n6\\n1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3\\n1 1\\n1 2\\n2 1\\n\") == \"NO\"\n"
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"YES\""
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3.000000000\\n\", \"Test case failed.\""
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(None) == \"Output the expected total number of gifts taken out of the bag, accurate to within an absolute error of at most 10^{-6}\\n\""
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n\") == \"3.000000000\"\n\nfrom math import exp"
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"3.000000000\\n\"\nassert solution(\"3\") == \"7.000000000\\n\"\nassert solution(\"4\") == \"9.000000000\\n\"\nassert solution(\"5\") == \"10.000000000\\n\"\nassert solution(\"6\") == \"12.000000000\\n\"\nassert solution(\"7\") == \"14.000000000\\n\"\nassert solution(\"8\") == \"16.000000000\\n\"\nassert solution(\"9\") == \"18.000000000\\n\"\nassert solution(\"10\") == \"20.000000000\\n\"\nassert solution(\"11\") == \"22.000000000\\n\"\nassert solution(\"12\") == \"24.000000000\\n\"\nassert solution(\"13\") == \"26.000000000\\n\"\nassert solution(\"14\") == \"28.000000000\\n\"\nassert solution(\"15\") == \"30.000000000\\n\"\nassert solution(\"16\") == \"32.000000000\\n\"\nassert solution(\"17\") == \"34.000000000\\n\"\nassert solution(\"18\") == \"36.000000000\\n\"\nassert solution(\"19\") == \"38.000000000\\n\"\nassert solution(\"20\") == \"40.000000000\\n\"\nassert solution(\"21\") == \"42.000000000\\n\"\nassert solution(\"22\") == \"44.000000000\\n\"\nassert solution(\"23\") == \"46.000000000\\n\"\nassert solution(\"24\") == \"48.000000000\\n\"\nassert solution(\"25\") == \"50.000000000\\n\"\nassert solution(\"26\") == \"52.000000000\\n\"\nassert solution(\"27\") == \"54.000000000\\n\"\nassert solution(\"28\") == \"56.000000000\\n\"\nassert solution(\"29\") == \"58.000000000\\n\"\nassert solution(\"30\") == \"60.000000000\\n\"\nassert solution(\"31\") == \"62.000000000\\n\"\nassert solution(\"32\") == \"64.000000000\\n\"\nassert solution(\"33\") == \"66.000000000\\n\"\nassert solution(\"34\") == \"68.000000000\\n\"\nassert solution(\"35\") == \"70.000000000\\n\"\nassert solution(\"36\") == \"72.000000000\\n\"\nassert solution(\"37\") == \"74.000000000\\n\"\nassert solution(\"38\") == \"76.000000000\\n\"\nassert solution(\"39\") == \"78.000000000\\n\"\nassert solution(\"40\") == \"80.000000000\\n\"\nassert solution(\"41\") == \"82.000000000\\n\"\nassert solution(\"42\") == \"84.000000000\\n\"\nassert solution(\"43\") == \"86.000000000\\n\"\nassert solution(\"44\") == \"88.000000000\\n\"\nassert solution(\"45"
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"3.000000000\"\nassert solution(\"3\\n\") == \"3.000000000\"\nassert solution(\"4\\n\") == \"3.000000000\"\nassert solution(\"5\\n\") == \"3.000000000\"\nassert solution(\"6\\n\") == \"3.000000000\"\nassert solution(\"7\\n\") == \"3.000000000\"\nassert solution(\"8\\n\") == \"3.000000000\"\nassert solution(\"9\\n\") == \"3.000000000\"\nassert solution(\"10\\n\") == \"3.000000000\"\nassert solution(\"11\\n\") == \"3.000000000\"\nassert solution(\"12\\n\") == \"3.000000000\"\nassert solution(\"13\\n\") == \"3.000000000\"\nassert solution(\"14\\n\") == \"3.000000000\"\nassert solution(\"15\\n\") == \"3.000000000\"\nassert solution(\"16\\n\") == \"3.000000000\"\nassert solution(\"17\\n\") == \"3.000000000\"\nassert solution(\"18\\n\") == \"3.000000000\"\nassert solution(\"19\\n\") == \"3.000000000\"\nassert solution(\"20\\n\") == \"3.000000000\"\nassert solution(\"21\\n\") == \"3.000000000\"\nassert solution(\"22\\n\") == \"3.000000000\"\nassert solution(\"23\\n\") == \"3.000000000\"\nassert solution(\"24\\n\") == \"3.000000000\"\nassert solution(\"25\\n\") == \"3.000000000\"\nassert solution(\"26\\n\") == \"3.000000000\"\nassert solution(\"27\\n\") == \"3.000000000\"\nassert solution(\"28\\n\") == \"3.000000000\"\nassert solution(\"29\\n\") == \"3.000000000\"\nassert solution(\"30\\n\") == \"3.000000000\"\nassert solution(\"31\\n\") == \"3.000000000\"\nassert solution(\"32\\n\") == \"3.000000000\"\nassert solution(\"33\\n\") == \"3.000000000\"\nassert solution(\"34\\n\") == \"3.000000000\"\nassert solution(\"35\\n\") == \"3.000000000\"\nassert solution(\"36\\n\") == \"3.000000000\"\nassert solution(\"37\\n\") == \"3.000000000\"\nassert solution(\"38\\n\") == \"3.000000000\"\nassert solution(\"39\\n\") == \"3.000000000\"\nassert solution(\"40\\n\") == \"3.000000000\"\nassert solution(\"41\\n\") == \"3.000000000\"\nassert solution(\"42\\n\") == \"3.000000000\"\nassert solution(\"43\\n\") == \"3.000000000\"\nassert solution(\"44\\n\") == \"3.000000000\"\nassert solution(\"45\\n\") == \"3.000000000\"\nassert solution(\"46\\n\") == \"3.000000000\"\n"
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '3.000000000'"
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n\") == \"3.000000000\\n\"\nassert solution(\"3\\n\") == \"5.000000000\\n\"\nassert solution(\"4\\n\") == \"6.000000000\\n\"\nassert solution(\"5\\n\") == \"7.000000000\\n\"\nassert solution(\"6\\n\") == \"8.000000000\\n\"\nassert solution(\"7\\n\") == \"9.000000000\\n\"\nassert solution(\"8\\n\") == \"10.000000000\\n\"\nassert solution(\"9\\n\") == \"12.000000000\\n\"\nassert solution(\"10\\n\") == \"14.000000000\\n\"\nassert solution(\"11\\n\") == \"16.000000000\\n\"\nassert solution(\"12\\n\") == \"18.000000000\\n\"\nassert solution(\"13\\n\") == \"20.000000000\\n\"\nassert solution(\"14\\n\") == \"22.000000000\\n\"\nassert solution(\"15\\n\") == \"24.000000000\\n\"\nassert solution(\"16\\n\") == \"26.000000000\\n\"\nassert solution(\"17\\n\") == \"28.000000000\\n\"\nassert solution(\"18\\n\") == \"30.000000000\\n\"\nassert solution(\"19\\n\") == \"32.000000000\\n\"\nassert solution(\"20\\n\") == \"34.000000000\\n\"\nassert solution(\"21\\n\") == \"36.000000000\\n\"\nassert solution(\"22\\n\") == \"38.000000000\\n\"\nassert solution(\"23\\n\") == \"40.000000000\\n\"\nassert solution(\"24\\n\") == \"42.000000000\\n\"\nassert solution(\"25\\n\") == \"44.000000000\\n\"\nassert solution(\"26\\n\") == \"46.000000000\\n\"\nassert solution(\"27\\n\") == \"48.000000000\\n\"\nassert solution(\"28\\n\") == \"50.000000000\\n\"\nassert solution(\"29\\n\") == \"52.000000000\\n\"\nassert solution(\"30\\n\") == \"54.000000000\\n\"\nassert solution(\"31\\n\") == \"56.000000000\\n\"\nassert solution(\"32\\n\") == \"58.000000000\\n\"\nassert solution(\"33\\n\") == \"60.000000000\\n\"\nassert solution(\"34\\n\") == \"62.000000000\\n\"\nassert solution(\"35\\n\") == \"64.000000000\\n\"\nassert solution(\"36\\n\") == \"66.000000000\\n\"\nassert solution(\"37\\n\") == \"68.000000000\\n\"\nassert solution(\"38\\n\") == \"70.000000000\\n\"\nassert solution(\"39\\n\") == \"72.000000000\\n\"\nassert solution(\"40\\n\") == \"74.000000000\\n\"\nassert solution(\"41\\n\") == \"76.000000000\\n\"\n"
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"0.5\"\nassert solution(\"2\") == \"2.0\"\nassert solution(\"3\") == \"2.5\"\nassert solution(\"4\") == \"3.0\"\nassert solution(\"5\") == \"3.5\""
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n\") == \"3.000000000\\n\"\nassert solution(\"3\\n\") == \"4.000000000\\n\"\nassert solution(\"4\\n\") == \"5.000000000\\n\"\nassert solution(\"5\\n\") == \"6.000000000\\n\"\nassert solution(\"6\\n\") == \"7.000000000\\n\"\nassert solution(\"7\\n\") == \"8.000000000\\n\"\nassert solution(\"8\\n\") == \"9.000000000\\n\"\nassert solution(\"9\\n\") == \"10.000000000\\n\"\nassert solution(\"10\\n\") == \"11.000000000\\n\"\nassert solution(\"11\\n\") == \"12.000000000\\n\"\nassert solution(\"12\\n\") == \"13.000000000\\n\"\nassert solution(\"13\\n\") == \"14.000000000\\n\"\nassert solution(\"14\\n\") == \"15.000000000\\n\"\nassert solution(\"15\\n\") == \"16.000000000\\n\"\nassert solution(\"16\\n\") == \"17.000000000\\n\"\nassert solution(\"17\\n\") == \"18.000000000\\n\"\nassert solution(\"18\\n\") == \"19.000000000\\n\"\nassert solution(\"19\\n\") == \"20.000000000\\n\"\nassert solution(\"20\\n\") == \"21.000000000\\n\"\nassert solution(\"21\\n\") == \"22.000000000\\n\"\nassert solution(\"22\\n\") == \"23.000000000\\n\"\nassert solution(\"23\\n\") == \"24.000000000\\n\"\nassert solution(\"24\\n\") == \"25.000000000\\n\"\nassert solution(\"25\\n\") == \"26.000000000\\n\"\nassert solution(\"26\\n\") == \"27.000000000\\n\"\nassert solution(\"27\\n\") == \"28.000000000\\n\"\nassert solution(\"28\\n\") == \"29.000000000\\n\"\nassert solution(\"29\\n\") == \"30.000000000\\n\"\nassert solution(\"30\\n\") == \"31.000000000\\n\"\nassert solution(\"31\\n\") == \"32.000000000\\n\"\nassert solution(\"32\\n\") == \"33.000000000\\n\"\nassert solution(\"33\\n\") == \"34.000000000\\n\"\nassert solution(\"34\\n\") == \"35.000000000\\n\"\nassert solution(\"35\\n\") == \"36.000000000\\n\"\nassert solution(\"36\\n\") == \"37.000000000\\n\"\nassert solution(\"37\\n\") == \"38.000000000\\n\"\nassert solution(\"38\\n\") == \"39.000000000\\n\"\nassert solution(\"39\\n\") == \"40.000000000\\n\"\nassert solution(\"40\\n\") == \"41.000000000\\n\"\nassert solution(\"41\\n\") == \"42.000000000\\n\"\n"
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n\") == \"3.000000000\\n\""
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2\\n3\") == \"1\\n\"\nassert solution(\"2 3\\n2 4\\n3 1\\n4 1\") == \"2\\n\"\nassert solution(\"3 2\\n4 1\\n5 1\\n6 2\\n7 1\\n8 1\\n9 2\\n10 1\\n11 1\\n12 2\\n13 1\\n14 2\\n15 1\\n16 1\\n17 2\\n18 1\\n19 2\\n20 1\\n21 1\\n22 2\\n23 1\\n24 1\\n25 2\\n26 1\\n27 1\\n28 2\\n29 1\\n30 2\\n31 1\\n32 2\\n33 1\\n34 2\\n35 1\\n36 2\\n37 1\\n38 2\\n39 1\\n40 2\\n41 1\\n42 1\\n43 2\\n44 1\\n45 2\\n46 1\\n47 2\\n48 1\\n49 2\\n50 1\\n51 2\\n52 1\\n53 2\\n54 1\\n55 2\\n56 1\\n57 2\\n58 1\\n59 2\\n60 1\\n61 2\\n62 1\\n63 2\\n64 1\\n65 2\\n66 1\\n67 2\\n68 1\\n69 2\\n70 1\\n71 2\\n72 1\\n73 2\\n74 1\\n75 2\\n76 1\\n77 2\\n78 1\\n79 2\\n80 1\\n81 2\\n82 1\\n83 2\\n84 1\\n85 2\\n86 1\\n87 2\\n88 1\\n89 2\\n90 1\\n91 2\\n92 1\\n93 2\\n94 1\\n95 2\\n96 1\\n97 2\\n98 1\\n99 2\\n100 1\\n101 2\\n102 1\\n103 2\\n104 1\\n105 2\\n106 1\\n107 2\\n108 1\\n109 2\\n110 1\\n111 2\\n112 1\\n113 2\\n114 1\\n115 2\\n116 1\\n117 2\\n118 1\\n119 2\\n120 1\\n121 2\\n122 1\\n123 2\\n124 1\\n125 2\\n126 1\\n127 2\\n128 1\\n129 2\\n130 1\\n131 2\\n132 1\\n133 2\\n134 1\\n135 2\\n136 1\\n137 2\\n138 1\\n139 2\\n140 1\\n141 2\\n142 1\\n143 2\\n144 1\\n145 2\\n146 1\\n147 2\\n148 1\\n149 2\\n150 1\\n151 2\\n152 1\\n153 2\\n154 1\\n155 2\\n156 1\\n157"
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"1 2\\n3\\n\") == \"1\\n\""
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2\\n3\") == \"1\\n\"\nassert solution(\"1 3\\n4\") == \"1\\n\"\nassert solution(\"1 4\\n5\") == \"1\\n\"\nassert solution(\"2 1\\n1\") == \"2\\n\"\nassert solution(\"2 3\\n2\") == \"2\\n\"\nassert solution(\"2 4\\n3\") == \"2\\n\"\nassert solution(\"3 2\\n4\") == \"2\\n\"\nassert solution(\"3 4\\n5\") == \"2\\n\"\nassert solution(\"4 3\\n6\") == \"2\\n\"\nassert solution(\"4 5\\n7\") == \"2\\n\"\nassert solution(\"5 4\\n8\") == \"2\\n\"\nassert solution(\"5 6\\n9\") == \"2\\n\"\nassert solution(\"6 5\\n10\") == \"2\\n\"\nassert solution(\"6 7\\n11\") == \"2\\n\"\nassert solution(\"7 6\\n12\") == \"2\\n\"\nassert solution(\"7 8\\n13\") == \"2\\n\"\nassert solution(\"8 7\\n14\") == \"2\\n\"\nassert solution(\"8 9\\n15\") == \"2\\n\"\nassert solution(\"9 8\\n16\") == \"2\\n\"\nassert solution(\"9 10\\n17\") == \"2\\n\"\nassert solution(\"10 9\\n18\") == \"2\\n\"\nassert solution(\"10 11\\n19\") == \"2\\n\"\nassert solution(\"11 10\\n20\") == \"2\\n\"\nassert solution(\"11 12\\n21\") == \"2\\n\"\nassert solution(\"12 11\\n22\") == \"2\\n\"\nassert solution(\"12 13\\n23\") == \"2\\n\"\nassert solution(\"13 12\\n24\") == \"2\\n\"\nassert solution(\"13 14\\n25\") == \"2\\n\"\nassert solution(\"14 13\\n26\") == \"2\\n\"\nassert solution(\"14 15\\n27\") == \"2\\n\"\nassert solution(\"15 14\\n28\") == \"2\\n\"\nassert solution(\"15 16\\n29\") == \"2\\n\"\nassert solution(\"16 15\\n30\") == \"2\\n\"\nassert solution(\"16 17\\n31\") == \"2\\n\"\nassert solution(\"17 16\\n32\") == \"2\\n\"\nassert solution(\"17 18\\n33\") == \"2\\n\"\nassert solution(\"18 17\\n34\") == \"2\\n\"\nassert solution(\"18 19\\n35\") == \"2\\n\"\nassert solution(\"19 18\\n36\") == \"2\\n\"\nassert solution(\"19 20\\n37\") == \"2\\n\"\nassert solution(\"20 19\\n38\") == \"2\\n\"\nassert solution(\"20 21\\n39\") == \"2\\n\"\nassert solution(\"21 20\\n40\") == \"2\\n\"\nassert solution(\"21 22\\n41\") == \"2\\n\"\nassert solution(\"22 21\\n42\") == \"2\\n\"\nassert solution(\"22 23\\n43\") == \"2\\n\"\nassert solution(\"23 22\\n44\") == \"2\\n\"\nassert solution(\"23 24\\n45\") == \"2\\n\"\nassert solution(\"24 23\\n46\") == \"2\\n\"\nassert solution(\"24 25\\n47\") == \"2\\n\"\nassert solution(\"25 24\\n48\") == \"2\\n\"\nassert solution(\"25 26\\n49\") == \"2\\n\"\nassert solution(\"26 25\\n50\") == \"2\\n\"\nassert solution(\"26 27\\n51\") == \"2\\n"
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"1\\n\"\nassert solution(input()) == \"2\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"5\\n\""
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2\\n3\\n\") == \"1\\n\""
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2\\n3\\n\") == \"1\\n\"\nassert solution(\"3\\n5\\n6\\n\") == \"2\\n\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"3\\n\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"3\\n\""
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"1\\n\", \"Testcase 1 failed\""
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=None) == '1\\n'"
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2\\n3\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\""
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''3 4 5\n1 3 4\n0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4''') == '''3\n2\n3\n1\n'''"
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"3\"\nassert solution(4) == \"2\"\nassert solution(5) == \"3\"\nassert solution(6) == \"1\"\n\nassert solution(1) == \"1\"\nassert solution(2) == \"2\"\nassert solution(3) == \"3\"\nassert solution(4) == \"1\"\n\nassert solution(0) == \"1\"\nassert solution(0) == \"2\"\nassert solution(0) == \"3\"\nassert solution(0) == \"4\"\n\nassert solution(0) == \"1\"\nassert solution(0) == \"2\"\nassert solution(0) == \"3\"\nassert solution(0) == \"4\"\n\nassert solution(0) == \"1\"\nassert solution(0) == \"2\"\nassert solution(0) == \"3\"\nassert solution(0) == \"4\"\n\nassert solution(1) == \"1\"\nassert solution(1) == \"2\"\nassert solution(1) == \"3\"\nassert solution(1) == \"4\"\n\nassert solution(0) == \"1\"\nassert solution(0) == \"2\"\nassert solution(0) == \"3\"\nassert solution(0) == \"4\"\n\nassert solution(0) == \"1\"\nassert solution(0) == \"2\"\nassert solution(0) == \"3\"\nassert solution(0) == \"4\"\n\nassert solution(0) == \"1\"\nassert solution(0) == \"2\"\nassert solution(0) == \"3\"\nassert solution(0) == \"4\""
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input) == output, f\"Test case failed: {input} -> {output}\" for input, output in [\n    ([3, 4, 5], [3, 2, 3]),\n    ([1, 3, 4], [3, 2, 3]),\n    ([0, 2, 2, 3, 2], [2, 3, 3]),\n    ([1, 3, 2], [3, 3, 3]),\n    ([1, 2, 4], [3, 3, 3]),\n    ([1, 1, 4], [3, 3, 3]),\n]"
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\"\n\nassert solution(\"4 5 10\\n2 1 1 2 3 2 4 5 6\\n1 2 3 4 5 6 7 8 9\\n0 1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8 9\\n2 3 4 5 6 7 8 9 10\") == \"3\\n1\"\n\nassert solution(\"2 10 10\\n2 1 1 2 3 2 4 5 6\\n1 2 3 4 5 6 7 8 9\\n0 1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8 9\\n2 3 4 5 6 7 8 9 10\") == \"3\\n2\""
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\""
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"3\\n2\\n3\\n1\\n\", \"Test case 1 failed.\"\n\nassert solution() == \"3\\n2\\n3\\n1\\n\", \"Test case 2 failed.\"\n\nassert solution() == \"3\\n2\\n3\\n1\\n\", \"Test case 3 failed.\"\n\nassert solution() == \"3\\n2\\n3\\n1\\n\", \"Test case 4 failed.\"\n\nassert solution() == \"3\\n2\\n3\\n1\\n\", \"Test case 5 failed.\""
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input()) == sample_output(), \"Expected Output: {}\\nActual Output: {}\".format(sample_output(), solution(sample_input()))"
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\nr\"\"\"\n3 4 5\n1 3 4\n0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4\n\"\"\") == \"3\\n2\\n3\\n1\\n\"\n\nassert solution(\nr\"\"\"\n3 4 5\n1 3 4\n0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4\n\"\"\") == \"3\\n2\\n3\\n1\\n\"\n\nassert solution(\nr\"\"\"\n3 4 5\n1 3 4\n0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4\n\"\"\") == \"3\\n2\\n3\\n1\\n\"\n\nassert solution(\nr\"\"\"\n3 4 5\n1 3 4\n0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4\n\"\"\") == \"3\\n2\\n3\\n1\\n\"\n\nassert solution(\nr\"\"\"\n3 4 5\n1 3 4\n0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4\n\"\"\") == \"3\\n2\\n3\\n1\\n\"\n\nassert solution(\nr\"\"\"\n3 4 5\n1 3 4\n0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4\n\"\"\") == \"3\\n2\\n3\\n1\\n\""
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3,4,5) == '3\\n2\\n3\\n1'\nassert solution(1,3,4) == '3\\n2\\n3\\n1'\nassert solution(0,2,2,3,2) == '3\\n2\\n3\\n1'\nassert solution(1,3,2) == '2\\n3\\n1'\nassert solution(1,2,4) == '1\\n3\\n2'\nassert solution(1,1,4) == '1\\n2\\n3'"
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, \"Test case not passed\"\n"
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"HelloWorld.c\") == \"def solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"Add.c\") == \"int Main() {\\n    for (int i=0; i<10; i++)\\n        sum += i;\\n    printf(\\\"SUM %d\\\", sum);\\n}\"\nassert solution(\"int Main() {\\n  printf(\\\"Hello %d\\\");\\n}\\n***END***\") == \"def solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"def solution(stdin: str) -> str:\\n    pass\\n***END***\") == \"def solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"\") == \"0\"\n"
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\").read()) == \"0 def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(r'''\n1\nint Main() {\n  printf(\"Hello %d\\n\",i);\n}\n***END***\n2\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n***END***\n3\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n***END***\n4\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n***END***\n5\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n***END***\n6\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n***END***\n7\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n***END***\n8\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n***END***\n9\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n***END***\n10\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n***END***\n11\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n***END***\n12\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n***END***\n13\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n***END***\n14\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n***END***\n15\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n***END***\n16\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n***END***\n17\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n***END***\n18\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n***END***\n19\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n***END***\n20\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n***END***\n21\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n***END***\n22\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n***END***\n23\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n***END***\n24\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n***END***\n25\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n***END***\n26\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n***END***\n27\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n***END***\n28\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n***END***\n29\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n***END***\n30\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n***END***\n31\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n***END***\n32\nint Main() {\n  printf(\"Hello %d\\"
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Actual output: {solution(input())}\"\n"
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin: str) -> str:\n    pass\n\nsample_input = \"\"\"\n2\nHelloWorld.c\nint Main() {\n    printf(\"Hello %d\\n\",i);\n}\n***END***\nAdd.c\nint Main() {\n  for (int i=0; i<10; i++)\n    sum += i;\n  printf(\"SUM %d\", sum);\n}\n***END***\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n***END***\n\"\"\""
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_code) == expected_output, f\"For input code: {input_code}, expected output: {expected_output}, got: {solution(input_code)}\""
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\").read()) == [\"HelloWorld.c\", \"def solution(stdin: str) -> str: pass\"]\nassert solution(open(\"input2.txt\").read()) == [\"Add.c\", \"int Main() { for i=0; i<10; i++) sum += i; printf(\\\"SUM %d\\\", sum); }\"]"
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"HelloWorld.c\\nint Main() {\\n\\tprintf(\\\"Hello %d\\\\n\\\", i);\\n}\\n***END***\\n\\n\\nint Main() {\\n\\tprintf(\\\"Hello %d\\\\n\\\", i);\\n\\tprintf(\\\"THE END\\\\n\\\");\\n}\\n***END***\") == \"2 HelloWorld.c\\n3 def solution(stdin: str) -> str:\\n4 pass\""
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    int Main() {\n        printf(\"Hello %d\\n\", i);\n        printf(\"THE END\\n\");\n    }\n    ***END***\n    int Main() {\n        int i = 0;\n        printf(\"Hello %d\\n\", i);\n    }\n    ***END***\n    \"\"\"\n) == \"2 HelloWorld.c\\n\" + \"def solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n2 2 2\\n4 2 1\\n4 4 1\") == \"1\\n2\\n2\\n2\""
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input) == output, f\"The output is incorrect. Expected '{output}', but got '{solution(input)}'.\" for input, output in [\n    (\"3 3\", \"1\"),\n    (\"2 2 2\", \"1\"),\n    (\"4 2 1\", \"2\"),\n    (\"4 4 1\", \"2\"),\n]"
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 3\\n2 2 2\\n4 2 1\\n4 4 1') == '1\\n2\\n2'\n\nassert solution('3 3\\n2 2 1\\n4 3 1\\n3 4 2') == '1\\n2\\n3'\n\nassert solution('3 3\\n2 2 3\\n4 2 1\\n4 4 1') == '2\\n2\\n2'\n\nassert solution('3 3\\n2 2 2\\n4 2 1\\n4 4 1') == '1\\n2\\n2'\n\nassert solution('3 3\\n2 2 2\\n4 2 1\\n4 4 1') == '1\\n2\\n2'\n\nassert solution('3 3\\n2 2 2\\n4 2 1\\n4 4 1') == '1\\n2\\n2'"
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1\\n2\\n2\\n2\\n\""
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('example_input.txt', 'r')) == '1\\n2\\n2\\n2'\nassert solution(open('input.txt', 'r')) == '1\\n2\\n2\\n2'\n"
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 3\\n2 2 2\\n4 2 1\\n4 4 1') == '1\\n2\\n2\\n2'\nassert solution('3 4\\n1 1 2\\n1 2 3\\n2 3 2') == '1\\n1\\n1\\n1'"
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 3\\n2 2 2\\n4 2 1\\n4 4 1') == '1\\n2\\n2\\n'\nassert solution('3 3\\n3 3 3\\n4 4 4\\n4 3 2\\n4 4 3\\n5 5 5\\n6 6 6\\n7 7 7\\n8 8 8\\n') == '1\\n2\\n2\\n'"
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r')) == '1\\n2\\n2\\n2'\n"
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n2 2 2\\n4 2 1\\n4 4 1\") == \"1\\n2\\n2\"\n"
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\nfor i in range(2):\n    assert solution(stdin) == expected"
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\\n\") == \"5\\n\"\nassert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\\n\") == \"5\\n\"\nassert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\\n\") == \"5\\n\"\nassert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\\n\") == \"5\\n\"\nassert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\\n\") == \"5\\n\"\nassert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\\n\") == \"5\\n\"\nassert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\\n\") == \"5\\n\"\nassert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\\n\") == \"5\\n\"\nassert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\\n\") == \"5\\n\"\nassert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\\n\") == \"5\\n\"\nassert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\\n\") == \"5\\n\"\nassert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\\n\") == \"5\\n\"\nassert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\\n\") == \"5\\n\"\nassert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\\n\") == \"5\\n\"\nassert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\\n\") == \"5\\n\"\nassert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\\n\") == \"5\\n\"\nassert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\\n\") == \"5\\n\"\nassert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\\n\") == \"5\\n\"\nassert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\\n\") == \"5\\n\"\nassert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\\n\") == \"5\\n\"\nassert solution(\"3 20\\n50 70 10\\n100 110"
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\\n\") == \"5\"\nassert solution(\"2 10\\n25 35 45\\n50 60 70\\n100 120 130\\n200 250 260\\n\") == \"5\"\nassert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\\n\") == \"5\"\nassert solution(\"1 5\\n5 10\\n10 15\\n20 25\\n30 35\\n40 45\\n50 55\\n\") == \"10\"\nassert solution(\"10 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n1"
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\") == \"5\""
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 5, \"Test failed\""
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\") == \"5\\n\""
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 20\\n50 70 10\\n100 110 4\\n150 190 16') == '5\\n'\n"
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\\n\") == \"5\\n\""
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\") == \"5\\n\""
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n    5 5\n(2 5) (5 3)\n.....\n.#.#.\n.#.#.\n....#\n.#.##\n1\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\n''') == '26'\nassert solution('''\n    5 5\n(2 5) (5 3)\n.....\n"
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 5\\n(2 5) (5 3)\\n.....\\n.#.#. \\n.#.#. \\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\") == \"26\\ndef solution(stdin: str) -> str:\n    pass\""
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 5\\n(2 5) (5 3)\\n.....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\") == \"26\\nIMPOSSIBLE\\n\""
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 5\\n(2 5) (5 3)\\n.....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)') == '26'"
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 5\\n(2 5) (5 3)\\n.....\\n.#.#\\n.#.#\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)') == '26\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'"
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 5\\n(2 5) (5 3).....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)') == '26\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test case\\nassert solution(\"5 5\\n(2 5) (5 3).....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\") == \"26\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test case\\nassert solution(\"5 5\\n(2 5) (5 3).....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\") == \"IMPOSSIBLE\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test case\\nassert solution(\"5 5\\n(2 5) (5 3).....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2) (2)\") == \"26\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test case\\nassert solution(\"5 5\\n(2 5) (5 3).....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2) (1 2 1 1)\") == \"IMPOSSIBLE\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test case\\nassert solution(\"5 5\\n(2 5) (5 3).....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2) (1 2 1 1)\") == \"26\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test case\\nassert solution(\"5 5\\n(2 5) (5 3).....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2) (1 2 1 1) (1 3 1 1)\") == \"IMPOSSIBLE\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test case\\nassert solution(\"5 5\\n(2 5) (5 3).....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2) (1 2 1 1) (1 3 1 1) (1 3 1 2)\") == \"IMPOSSIBLE\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test case\\nassert solution(\"5 5\\n(2 5) (5 3).....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2) (1 2 1 1) (1 3 1 1) (1 3 1 2) (1 3 1 2 1)\") == \"IMPOSSIBLE\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test case\\nassert solution(\"5 5\\n(2 5) (5 3).....\\n.#.#.\\n.#.#.\\n....#\\n.#."
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n5 5\n(2 5) (5 3)\n.....\n.#.#.\n.#.#.\n....#\n.#.##\n1\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\n''') == '26\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 5\\n(2 5) (5 3)\\n.....\\n.#.#\\n.#.#\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\") == \"26\\n\""
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, \"Test failed\""
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(6) == \"failure\""
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"success\""
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"success\""
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"failure\"\n"
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1\\n\") == \"failure\""
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('6\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1') == 'failure'"
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) =='success'"
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"failure\""
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('6\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1\\n') == 'failure'"
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('6\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1') == 'failure'\n"
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == sample_output\n\nfrom typing import List"
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"possible\""
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\") == \"possible\"\nassert solution(\"2 1 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\") == \"impossible\""
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\\n\") == \"possible\""
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2') == 'possible'"
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"possible\"\nprint(solution(input()))"
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2') == 'possible'"
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"possible\""
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\") == \"possible\"\n"
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\") == \"possible\""
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n1 1 2\\n1 2 1\\n-1 1 2\") == \"0\\n\"\nassert solution(\"1 1 2\\n1 2 1\\n-1 1 2\") == \"0\\n\"\nassert solution(\"1 1 2\\n1 2 1\\n-1 1 2\") == \"0\\n\"\nassert solution(\"1 1 2\\n1 2 1\\n-1 1 2\") == \"0\\n\""
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\\n1 1 2\\n1 2 1\\n-1 1 2\") == \"0\\n0\""
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == expected, f\"The solution is {solution}, but the expected output is {expected}.\""
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2\\n1 1 2\\n1 2 1\\n-1 1 2\\n\") == 0\nassert solution(\"2 3\\n1 1 1\\n2 1 2\\n3 2 3\\n\") == 1\nassert solution(\"1 1000000000\\n\") == 1000000000\nassert solution(\"5 5\\n1 1 1\\n2 1 2\\n3 1 3\\n4 1 4\\n5 1 5\\n\") == 5\n"
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2\\n1 1 2\\n1 2 1\\n-1 1 2\") == \"0\\n\"\nassert solution(\"6 4\\n1 1 1\\n2 2 2\\n3 3 3\\n4 4 4\") == \"1\\n\"\nassert solution(\"3 3\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\nA 1\\nB 2\\nC 3\\nD 4\\nE 5\\nF 6\\nG 7\\nH 8\\nI 9\\nJ 10\\nK 11\\nL 12\\nM 13\\nN 14\\nO 15\\nP 16\") == \"1\\n\""
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 2\\n1 1 2\\n1 2 1\\n-1 1 2') == '0\\n'\nassert solution('3 3\\n1 1 2\\n2 1 1\\n1 2 1\\n-1 1 2') == '0\\n'\nassert solution('3 4\\n1 1 2\\n2 1 1\\n1 2 1\\n-1 1 2') == '3\\n'\nassert solution('3 5\\n1 1 2\\n2 1 1\\n1 2 1\\n-1 1 2') == '3\\n'\nassert solution('3 6\\n1 1 2\\n2 1 1\\n1 2 1\\n-1 1 2') == '6\\n'\nassert solution('3 7\\n1 1 2\\n2 1 1\\n1 2 1\\n-1 1 2') == '6\\n'\nassert solution('3 8\\n1 1 2\\n2 1 1\\n1 2 1\\n-1 1 2') == '9\\n'\nassert solution('3 9\\n1 1 2\\n2 1 1\\n1 2 1\\n-1 1 2') == '9\\n'\nassert solution('3 10\\n1 1 2\\n2 1 1\\n1 2 1\\n-1 1 2') == '12\\n'\nassert solution('3 11\\n1 1 2\\n2 1 1\\n1 2 1\\n-1 1 2') == '12\\n'\nassert solution('3 12\\n1 1 2\\n2 1 1\\n1 2 1\\n-1 1 2') == '15\\n'\nassert solution('3 13\\n1 1 2\\n2 1 1\\n1 2 1\\n-1 1 2') == '15\\n'\nassert solution('3 14\\n1 1 2\\n2 1 1\\n1 2 1\\n-1 1 2') == '18\\n'\nassert solution('3 15\\n1 1 2\\n2 1 1\\n1 2 1\\n-1 1 2') == '18\\n'\nassert solution('3 16\\n1 1 2\\n2 1 1\\n1 2 1\\n-1 1 2') == '21\\n'\nassert solution('3 17\\n1 1 2\\n2 1 1\\n1 2 1\\n-1 1 2') == '21\\n'\nassert solution('3 18\\n1 1 2\\n2 1 1\\n1 2 1\\n-1 1 2') == '24\\n'\nassert solution('3 19\\n1 1 2\\n2 1 1\\n1 2 1\\n-1 1 2') == '24\\n'\nassert solution('3 20\\n1 1 2\\n2 1 1\\n1 2 1\\n-1 1 2') == '27\\n'\nassert solution('3 21\\n1 1 2\\n2 1 1\\n1 2 1\\n-1 1 2') == '27\\n'\nassert solution('3 22\\n1 1 2\\n2 1 1\\n1 2 1\\n-1 1 2') == '30\\n'\nassert solution('3 23\\n1 1 2\\n2 1 1\\n1 2 1\\n-1 1 2') == '30\\n'\nassert solution('3 24\\n1 1 2\\n2 1 1\\n1 2 1\\n-1 1 2') == '33\\n'\nassert solution('3 25\\n1 1 2"
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 0, \"Incorrect output for the given input\"\nassert solution() == 0, \"Incorrect output for the given input\"\nassert solution() == 0, \"Incorrect output for the given input\"\nassert solution() == 0, \"Incorrect output for the given input\"\nassert solution() == 0, \"Incorrect output for the given input\"\nassert solution() == 0, \"Incorrect output for the given input\""
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\\n1 1 2\\n1 2 1\\n-1 1 2\") == \"0\\n\"\nassert solution(\"3 2\\n1 1 1\\n1 2 2\\n-1 1 2\") == \"1\\n\"\nassert solution(\"3 2\\n1 2 1\\n1 1 2\\n-1 1 2\") == \"2\\n\""
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\\n1 1 2\\n1 2 1\\n-1 1 2\") == \"0\\n\"\nassert solution(\"5 3\\n1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\") == \"10\\n\"\nassert solution(\"10 12\\n1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\") == \"20\\n\""
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '''3\n353\n'''\n\nassert solution() == '''4\n1313\n'''"
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3, 2) == \"3\"\nassert solution(4, 2) == \"4\""
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(353) == '3'\nassert solution(1313) == '4'"
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"\"\"\n3\n353\n4\n1313\n\"\"\""
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2\\n353\\n\\n4 2\\n1234\\n\") == \"3\\n353\\n\\n4\\n1313\\n\""
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 2\\n353\\n4 2\\n1234\\n') == '3\\n353\\n4\\n1313'"
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\n353\") == \"3\\n353\"\nassert solution(\"4 2\\n1234\") == \"4\\n1313\""
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\\n353\\n\\n4 2\\n1234\\n\") == \"3\\n353\\n\\n4\\n1313\\n\""
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Test failed: expected {expected_output}, got {solution(input())}\"\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nbeautiful = [0] * n\nbeautiful[k:] = [i for i in a if i == beautiful[k+1:]]\n\nx = int(input())\ny = 0\n\nfor i in range(n):\n    if beautiful[i] == beautiful[i+k]:\n        y += a[i]\n    else:\n        break\n\nm = n - y\n\nfor i in range(m):\n    print(beautiful[i], end=\"\")\n\nprint(beautiful[m:])"
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('12 30 45 3 11') == 'NO'\nassert solution('12 0 1 12 1') == 'YES'\nassert solution('3 47 0 4 9') == 'YES'"
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Expected '{output()}', got '{solution(input())}'\"\n"
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"NO\", \"Expected output: 'NO', but got: '{}'.\".format(solution(stdin))"
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('12 30 45 3 11') == 'NO'\nassert solution('12 0 1 12 1') == 'YES'\nassert solution('3 47 0 4 9') == 'YES'"
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\""
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\""
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\""
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\"\n"
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('12 30 45 3 11') == 'NO', \"Test 1 failed\"\nassert solution('12 0 1 12 1') == 'YES', \"Test 2 failed\"\nassert solution('3 47 0 4 9') == 'YES', \"Test 3 failed\"\n\nprint(\"All tests passed\")"
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(r'''\n    1 1 2 3 1 0\n    2 4 20\n''') == '3'\n\nassert solution(r'''\n    1 1 2 3 1 0\n    15 27 26\n''') == '2'\n\nassert solution(r'''\n    1 1 2 3 1 0\n    2 2 1\n''') == '0'"
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"3\""
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1 2 3 1 0\\n2 4 20\") == \"3\"\nassert solution(\"1 1 2 3 1 0\\n15 27 26\") == \"2\"\nassert solution(\"1 1 2 3 1 0\\n2 2 1\") == \"0\""
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1 2 3 1 0\\n2 4 20\") == \"3\"\nassert solution(\"1 1 2 3 1 0\\n15 27 26\") == \"2\"\nassert solution(\"1 1 2 3 1 0\\n2 2 1\") == \"0\""
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1 2 3 1 0\\n2 4 20\\n\") == \"3\"\nassert solution(\"1 1 2 3 1 0\\n15 27 26\\n\") == \"2\"\nassert solution(\"1 1 2 3 1 0\\n2 2 1\\n\") == \"0\""
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 2 3 1 0\\n2 4 20\") == \"3\"\nassert solution(\"1 1 2 3 1 0\\n15 27 26\") == \"2\"\nassert solution(\"1 1 2 3 1 0\\n2 2 1\") == \"0\""
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_str), \"Test failed\""
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 1 2 3 1 0\\n2 4 20') == '3'\nassert solution('1 1 2 3 1 0\\n15 27 26') == '2'\nassert solution('1 1 2 3 1 0\\n2 2 1') == '0'"
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 1 2 3 1 0\\n2 4 20') == '3'\nassert solution('1 1 2 3 1 0\\n15 27 26') == '2'\nassert solution('1 1 2 3 1 0\\n2 2 1') == '0'\n"
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1 2 3 1 0\\n2 4 20\") == \"3\"\nassert solution(\"1 1 2 3 1 0\\n15 27 26\") == \"2\"\nassert solution(\"1 1 2 3 1 0\\n2 2 1\") == \"0\""
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Test case failed: {input()}\\nExpected output: {output}\\nReceived output: {solution(input())}\""
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '4\\n'\nassert solution() == '6\\n'\nassert solution() == '8\\n'"
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n0 0 1\\n2 0 1\\n4 0 1\") == \"4\\n\"\nassert solution(\"3\\n0 0 2\\n3 0 2\\n6 0 2\") == \"6\\n\"\nassert solution(\"3\\n0 0 2\\n2 0 2\\n1 1 2\") == \"8\\n\""
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n0 0 1\\n2 0 1\\n4 0 1') == 4\nassert solution('3\\n0 0 2\\n3 0 2\\n6 0 2') == 6\nassert solution('3\\n0 0 2\\n2 0 2\\n1 1 2') == 8"
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"Output: 4\\n\"\n"
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"3\\n0 0 1\\n2 0 1\\n4 0 1\\n\") == \"4\"\nassert solution(stdin=\"3\\n0 0 2\\n3 0 2\\n6 0 2\\n\") == \"6\"\nassert solution(stdin=\"3\\n0 0 2\\n2 0 2\\n1 1 2\\n\") == \"8\""
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 0 1\\n2 0 1\\n4 0 1\") == 4\nassert solution(\"0 0 2\\n3 0 2\\n6 0 2\") == 6\nassert solution(\"0 0 2\\n2 0 2\\n1 1 2\") == 8"
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n0 0 1\\n2 0 1\\n4 0 1\") == \"4\"\nassert solution(\"3\\n0 0 2\\n3 0 2\\n6 0 2\") == \"6\"\nassert solution(\"3\\n0 0 2\\n2 0 2\\n1 1 2\") == \"8\""
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output\nassert solution(input()) == output"
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\\n\") == \"YES\"\nassert solution(\"0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\\n\") == \"NO\"\nassert solution(\"6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\\n\") == \"YES\""
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\") == \"YES\\n\"\nassert solution(\"0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\") == \"NO\\n\"\nassert solution(\"6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\") == \"YES\\n\""
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\") == \"YES\"\nassert solution(\"0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\") == \"NO\"\nassert solution(\"6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\") == \"YES\""
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\") == \"YES\"\nassert solution(\"0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\") == \"NO\"\nassert solution(\"6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\") == \"YES\""
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\") == \"YES\"\nassert solution(\"0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\") == \"NO\"\nassert solution(\"6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\") == \"YES\""
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"YES\\n\", \"The solution should return 'YES'.\""
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\\n\") == \"YES\"\nassert solution(\"0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\\n\") == \"NO\"\nassert solution(\"6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\\n\") == \"YES\""
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\") == \"YES\"\nassert solution(\"0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\") == \"NO\"\nassert solution(\"6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\") == \"YES\"\n\nfrom typing import List"
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Yes\", \"Test case 1 should output Yes\"\nassert solution(input()) == \"No\", \"Test case 2 should output No\"\nassert solution(input()) == \"No\", \"Test case 3 should output No\"\nassert solution(input()) == \"No\", \"Test case 4 should output No\""
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\") == \"YES\"\nassert solution(\"0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\") == \"NO\"\nassert solution(\"6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\") == \"YES\""
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n0\\n\") == \"cslnb\\n\"\nassert solution(\"2\\n1 0\\n\") == \"cslnb\\n\"\nassert solution(\"2\\n2 2\\n\") == \"sjfnb\\n\"\nassert solution(\"3\\n2 3 1\\n\") == \"sjfnb\\n\"\n"
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"sjfnb\"\nassert solution(input()) == \"cslnb\"\nassert solution(input()) == \"sjfnb\"\nassert solution(input()) == \"cslnb\"\n"
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1\\n0\\n\\n2\\n1 0\\n\\n2\\n2 2\\n\\n3\\n2 3 1\\n\\n') == 'cslnb'\nassert solution('2\\n1 0\\n\\n2\\n2 2\\n\\n3\\n2 3 1\\n\\n') == 'cslnb'\nassert solution('2\\n2 2\\n\\n3\\n2 3 1\\n\\n') =='sjfnb'\nassert solution('3\\n2 3 1\\n\\n') =='sjfnb'"
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n0\\n\") == \"cslnb\"\nassert solution(\"2\\n1 0\\n\") == \"cslnb\"\nassert solution(\"2\\n2 2\\n\") == \"sjfnb\"\nassert solution(\"3\\n2 3 1\\n\") == \"sjfnb\""
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"sjfnb\""
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n0\\n\") == \"cslnb\"\nassert solution(\"2\\n1 0\\n\") == \"cslnb\"\nassert solution(\"2\\n2 2\\n\") == \"sjfnb\"\nassert solution(\"3\\n2 3 1\\n\") == \"sjfnb\""
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(str(input())) == \"cslnb\"\nassert solution(str(input())) == \"sjfnb\""
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"sjfnb\""
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n0\\n\") == \"cslnb\"\nassert solution(\"2\\n1 0\\n\") == \"cslnb\"\nassert solution(\"2\\n2 2\\n\") == \"sjfnb\"\nassert solution(\"3\\n2 3 1\\n\") == \"sjfnb\""
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 'cslnb'"
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 5\\n1 5 3\\n\") == 2\nassert solution(\"1 2\\n1\\n\") == 1\nassert solution(\"1 1\\n1\\n\") == 0"
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 5\\n1 5 3\\n\") == \"2\\n\"\nassert solution(\"1 2\\n1\\n\") == \"1\\n\"\nassert solution(\"1 1\\n1\\n\") == \"0\\n\""
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin: str) == 'Output\\n2'\nprint(\"All tests pass\")"
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\") == 0\nassert solution(\"1 5 3\") == 2\nassert solution(\"1 2\") == 1\nassert solution(\"1 1\") == 0"
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 5\\n1 5 3\") == \"2\\n\"\nassert solution(\"1 2\\n1\\n\") == \"1\\n\"\nassert solution(\"1 1\\n1\\n\") == \"0\\n\""
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '2'\n"
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 5\\n1 5 3\") == \"2\"\nassert solution(\"1 2\\n1\") == \"1\"\nassert solution(\"1 1\\n1\") == \"0\""
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 5\\n1 5 3\\n\") == \"2\\n\"\nassert solution(\"1 2\\n1\\n\") == \"1\\n\"\nassert solution(\"1 1\\n1\\n\") == \"0\\n\""
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 5\\n1 5 3\\n\") == \"2\\n\"\nassert solution(\"1 2\\n1\\n\") == \"1\\n\"\nassert solution(\"1 1\\n1\\n\") == \"0\\n\""
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 5\\n1 5 3\") == 2\nassert solution(\"1 2\\n1\") == 1\nassert solution(\"1 1\\n1\") == 0"
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == '1\\n0 1\\n0\\n1'\nassert solution(2) == '2\\n-1 0 1\\n1\\n0 1'"
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == '1'\nassert solution(2) == '2'\nassert solution(3) == '1'\nassert solution(4) == '0'\nassert solution(5) == '2'\nassert solution(6) == '3'\nassert solution(7) == '-1'\nassert solution(8) == '-2'\nassert solution(9) == '0'\nassert solution(10) == '-1'\nassert solution(11) == '1'\nassert solution(12) == '0'\nassert solution(13) == '-1'\nassert solution(14) == '-1'\nassert solution(15) == '1'\nassert solution(16) == '0'\nassert solution(17) == '-1'\nassert solution(18) == '-1'\nassert solution(19) == '1'\nassert solution(20) == '0'\nassert solution(21) == '-1'\nassert solution(22) == '-1'\nassert solution(23) == '1'\nassert solution(24) == '0'\nassert solution(25) == '-1'\nassert solution(26) == '-1'\nassert solution(27) == '1'\nassert solution(28) == '0'\nassert solution(29) == '-1'\nassert solution(30) == '-1'\nassert solution(31) == '1'\nassert solution(32) == '0'\nassert solution(33) == '-1'\nassert solution(34) == '-1'\nassert solution(35) == '1'\nassert solution(36) == '0'\nassert solution(37) == '-1'\nassert solution(38) == '-1'\nassert solution(39) == '1'\nassert solution(40) == '0'\nassert solution(41) == '-1'\nassert solution(42) == '-1'\nassert solution(43) == '1'\nassert solution(44) == '0'\nassert solution(45) == '-1'\nassert solution(46) == '-1'\nassert solution(47) == '1'\nassert solution(48) == '0'\nassert solution(49) == '-1'\nassert solution(50) == '-1'\nassert solution(51) == '1'\nassert solution(52) == '0'\nassert solution(53) == '-1'\nassert solution(54) == '-1'\nassert solution(55) == '1'\nassert solution(56) == '0'\nassert solution(57) == '-1'\nassert solution(58) == '-1'\nassert solution(59) == '1'\nassert solution(60) == '0'\nassert solution(61) == '-1'\nassert solution(62) == '-1'\nassert solution(63) == '1'\nassert solution(64) == '0'\nassert solution(65) == '-1'\nassert solution(66) == '-1'\nassert solution(67) == '1'\nassert solution(68) == '0'\nassert solution(69) == '-1'\nassert solution(70) == '-1'\nassert solution(71) == '1'\nassert solution(72) == '0'\nassert solution(73) == '-1'\nassert solution(74) == '-1'\nassert solution(75) == '1'\nassert solution(76) == '0'\nassert solution(77) == '-1'\nassert solution(78) == '-1'\nassert solution(79) == '1'\nassert solution(80) == '0'\nassert solution(81) == '-1'\nassert solution(82) == '-1'\nassert solution(83) == '1'\nassert solution(84) == '0'\nassert solution(85) == '-1'\nassert solution(86) == '-1'\nassert solution(87) == '1'\nassert solution(88) == '0'\nassert solution(89) == '-1'\nassert solution(90) == '-1'\nassert solution(91) == '1'\nassert solution(92) == '0'\nassert solution(93) == '-1'\nassert solution(94) == '-1'\n"
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == \"1\\n0 1\\n0\\n1\\n\"\nassert solution(2) == \"2\\n-1 0 1\\n1\\n0 1\\n\"\n"
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == \"1\\n0 1\\n0\"\nassert solution(2) == \"2\\n-1 0 1\\n1\"\nassert solution(3) == \"3\\n-2 0 1\\n1\"\nassert solution(4) == \"4\\n-3 0 1\\n1\"\nassert solution(5) == \"5\\n-4 0 1\\n1\"\nassert solution(6) == \"5\\n-5 0 1\\n1\"\nassert solution(7) == \"6\\n-6 0 1\\n1\"\nassert solution(8) == \"6\\n-7 0 1\\n1\"\nassert solution(9) == \"7\\n-8 0 1\\n1\"\nassert solution(10) == \"7\\n-9 0 1\\n1\"\nassert solution(11) == \"8\\n-10 0 1\\n1\"\nassert solution(12) == \"8\\n-11 0 1\\n1\"\nassert solution(13) == \"9\\n-12 0 1\\n1\"\nassert solution(14) == \"9\\n-13 0 1\\n1\"\nassert solution(15) == \"10\\n-14 0 1\\n1\"\nassert solution(16) == \"10\\n-15 0 1\\n1\"\nassert solution(17) == \"11\\n-16 0 1\\n1\"\nassert solution(18) == \"11\\n-17 0 1\\n1\"\nassert solution(19) == \"12\\n-18 0 1\\n1\"\nassert solution(20) == \"12\\n-19 0 1\\n1\"\nassert solution(21) == \"13\\n-20 0 1\\n1\"\nassert solution(22) == \"13\\n-21 0 1\\n1\"\nassert solution(23) == \"14\\n-22 0 1\\n1\"\nassert solution(24) == \"14\\n-23 0 1\\n1\"\nassert solution(25) == \"15\\n-24 0 1\\n1\"\nassert solution(26) == \"15\\n-25 0 1\\n1\"\nassert solution(27) == \"16\\n-26 0 1\\n1\"\nassert solution(28) == \"16\\n-27 0 1\\n1\"\nassert solution(29) == \"17\\n-28 0 1\\n1\"\nassert solution(30) == \"17\\n-29 0 1\\n1\"\nassert solution(31) == \"18\\n-30 0 1\\n1\"\nassert solution(32) == \"18\\n-31 0 1\\n1\"\nassert solution(33) == \"19\\n-32 0 1\\n1\"\nassert solution(34) == \"19\\n-33 0 1\\n1\"\nassert solution(35) == \"20\\n-34 0 1\\n1\"\nassert solution(36) == \"20\\n-35 0 1\\n1\"\nassert solution(37) == \"21\\n-36 0 1\\n1\"\nassert solution(38) == \"21\\n-37 0 1\\n1\"\nassert solution(39) == \"22\\n-38 0 1\\n1\"\nassert solution(40) == \"22\\n-39 0 1\\n1\"\nassert solution(41) == \"23\\n-40 0 1\\n1\"\nassert solution(42) == \"23\\n-41 0 1\\n1\"\nassert solution(43) == \"24\\n-42 0 1\\n1\"\nassert solution(44) == \"24\\n-43 0 1\\n1\"\nassert solution(45)"
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"0 1\"\nassert solution(\"5\") == \"0\"\nassert solution(\"6\") == \"1\"\nassert solution(\"7\") == \"0 1\"\nassert solution(\"8\") == \"0\"\nassert solution(\"9\") == \"1\"\nassert solution(\"10\") == \"0 1\"\nassert solution(\"11\") == \"0\"\nassert solution(\"12\") == \"1\"\nassert solution(\"13\") == \"0 1\"\nassert solution(\"14\") == \"0\"\nassert solution(\"15\") == \"1\"\nassert solution(\"16\") == \"-1\"\nassert solution(\"17\") == \"0\"\nassert solution(\"18\") == \"1\"\nassert solution(\"19\") == \"-1\"\nassert solution(\"20\") == \"0\"\nassert solution(\"21\") == \"1\"\nassert solution(\"22\") == \"-1\"\nassert solution(\"23\") == \"0\"\nassert solution(\"24\") == \"1\"\nassert solution(\"25\") == \"-1\"\nassert solution(\"26\") == \"0\"\nassert solution(\"27\") == \"1\"\nassert solution(\"28\") == \"-1\"\nassert solution(\"29\") == \"0\"\nassert solution(\"30\") == \"1\"\nassert solution(\"31\") == \"-1\"\nassert solution(\"32\") == \"0\"\nassert solution(\"33\") == \"1\"\nassert solution(\"34\") == \"-1\"\nassert solution(\"35\") == \"0\"\nassert solution(\"36\") == \"1\"\nassert solution(\"37\") == \"-1\"\nassert solution(\"38\") == \"0\"\nassert solution(\"39\") == \"1\"\nassert solution(\"40\") == \"-1\"\nassert solution(\"41\") == \"0\"\nassert solution(\"42\") == \"1\"\nassert solution(\"43\") == \"-1\"\nassert solution(\"44\") == \"0\"\nassert solution(\"45\") == \"1\"\nassert solution(\"46\") == \"-1\"\nassert solution(\"47\") == \"0\"\nassert solution(\"48\") == \"1\"\nassert solution(\"49\") == \"-1\"\nassert solution(\"50\") == \"0\"\nassert solution(\"51\") == \"1\"\nassert solution(\"52\") == \"-1\"\nassert solution(\"53\") == \"0\"\nassert solution(\"54\") == \"1\"\nassert solution(\"55\") == \"-1\"\nassert solution(\"56\") == \"0\"\nassert solution(\"57\") == \"1\"\nassert solution(\"58\") == \"-1\"\nassert solution(\"59\") == \"0\"\nassert solution(\"60\") == \"1\"\nassert solution(\"61\") == \"-1\"\nassert solution(\"62\") == \"0\"\nassert solution(\"63\") == \"1\"\nassert solution(\"64\") == \"-1\"\nassert solution(\"65\") == \"0\"\nassert solution(\"66\") == \"1\"\nassert solution(\"67\") == \"-1\"\nassert solution(\"68\") == \"0\"\nassert solution(\"69\") == \"1\"\nassert solution(\"70\") == \"-1\"\nassert solution(\"71\") == \"0\"\nassert solution(\"72\") == \"1\"\nassert solution(\"73\") == \"-1\"\nassert solution(\"74\") == \"0\"\nassert solution(\"75\") == \"1\"\nassert solution(\"76\") == \"-1\"\nassert solution(\"77\") == \"0\"\nassert solution(\"78\") == \"1\"\nassert solution(\"79\") == \"-1\"\nassert solution(\"80\") == \"0\"\nassert solution(\"81\") == \"1\"\nassert solution(\"82\") == \"-1\"\nassert solution(\"83\") == \"0\"\nassert solution(\"84\") == \"1\"\nassert solution(\"85\") == \"-1\"\nassert solution(\"86\") == \"0\"\nassert solution(\"87\") == \"1\"\nassert solution(\"88\") == \"-1\"\nassert solution(\"89\") == \"0\"\nassert solution(\"90\") == \"1\"\nassert solution(\"91\") == \"-1\"\nassert solution(\"92\") == \"0\"\nassert solution(\"93\") == \"1\"\nassert solution(\"9"
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\\n0 1\\n0\\n1\"\nassert solution(\"2\") == \"2\\n-1 0 1\\n1\\n0 1\""
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\\n0 1\\n0\\n1\\n\"\nassert solution(\"2\") == \"2\\n-1 0 1\\n1\\n0 1\\n\""
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == \"1\\n0 1\\n0\"\nassert solution(2) == \"2\\n-1 0 1\\n1\"\nassert solution(3) == \"-1\\n-1 0\\n0\"\nassert solution(4) == \"-1\\n0\\n0\"\nassert solution(5) == \"-1\\n0\\n0\"\nassert solution(6) == \"-1\\n0\\n0\"\nassert solution(7) == \"-1\\n0\\n0\"\nassert solution(8) == \"-1\\n0\\n0\"\nassert solution(9) == \"-1\\n0\\n0\"\nassert solution(10) == \"-1\\n0\\n0\"\nassert solution(11) == \"-1\\n0\\n0\"\nassert solution(12) == \"-1\\n0\\n0\"\nassert solution(13) == \"-1\\n0\\n0\"\nassert solution(14) == \"-1\\n0\\n0\"\nassert solution(15) == \"-1\\n0\\n0\"\nassert solution(16) == \"-1\\n0\\n0\"\nassert solution(17) == \"-1\\n0\\n0\"\nassert solution(18) == \"-1\\n0\\n0\"\nassert solution(19) == \"-1\\n0\\n0\"\nassert solution(20) == \"-1\\n0\\n0\"\nassert solution(21) == \"-1\\n0\\n0\"\nassert solution(22) == \"-1\\n0\\n0\"\nassert solution(23) == \"-1\\n0\\n0\"\nassert solution(24) == \"-1\\n0\\n0\"\nassert solution(25) == \"-1\\n0\\n0\"\nassert solution(26) == \"-1\\n0\\n0\"\nassert solution(27) == \"-1\\n0\\n0\"\nassert solution(28) == \"-1\\n0\\n0\"\nassert solution(29) == \"-1\\n0\\n0\"\nassert solution(30) == \"-1\\n0\\n0\"\nassert solution(31) == \"-1\\n0\\n0\"\nassert solution(32) == \"-1\\n0\\n0\"\nassert solution(33) == \"-1\\n0\\n0\"\nassert solution(34) == \"-1\\n0\\n0\"\nassert solution(35) == \"-1\\n0\\n0\"\nassert solution(36) == \"-1\\n0\\n0\"\nassert solution(37) == \"-1\\n0\\n0\"\nassert solution(38) == \"-1\\n0\\n0\"\nassert solution(39) == \"-1\\n0\\n0\"\nassert solution(40) == \"-1\\n0\\n0\"\nassert solution(41) == \"-1\\n0\\n0\"\nassert solution(42) == \"-1\\n0\\n0\"\nassert solution(43) == \"-1\\n0\\n0\"\nassert solution(44) == \"-1\\n0\\n0\"\nassert solution(45) == \"-1\\n0\\n0\"\nassert solution(46) == \"-1\\n0\\n0\"\nassert solution(47) == \"-1\\n0\\n0\"\nassert solution(48) == \"-1\\n0\\n0\"\nassert solution(49) == \"-1\\n0\\n0\"\nassert solution(50) == \"-1\\n0\\n0\"\nassert solution(51) == \"-1\\n0\\n0\"\nassert solution(52) == \"-1\\n0\\n0\"\nassert solution(53) == \"-1\\n0\\n0\"\nassert solution(54) == \"-1\\n0\\n0\"\nassert solution(55) == \"-1\\n0\\n0\"\nassert solution(56) == \"-1\\n0\\n0\"\nassert solution(57) == \"-1\\n0\\n0\"\nassert solution(58) == \"-1\\n0\\n0\"\nassert solution(59) == \"-1\\n0\\n0\"\nassert solution(60) == \"-1\\n0\\n0\"\nassert solution(61"
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == [1, 0, 1]\nassert solution(2) == [-1, 0, 1]"
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == 1, \"1\"\nassert solution(2) == 1, \"2\"\nassert solution(3) == 2, \"3\"\nassert solution(4) == 2, \"4\"\nassert solution(5) == 3, \"5\"\nassert solution(6) == 3, \"6\"\nassert solution(7) == 3, \"7\"\nassert solution(8) == 3, \"8\"\nassert solution(9) == 3, \"9\"\nassert solution(10) == 3, \"10\"\nassert solution(11) == 3, \"11\"\nassert solution(12) == 3, \"12\"\nassert solution(13) == 3, \"13\"\nassert solution(14) == 3, \"14\"\nassert solution(15) == -1, \"15\"\nassert solution(16) == -1, \"16\"\nassert solution(17) == -1, \"17\"\nassert solution(18) == -1, \"18\"\nassert solution(19) == -1, \"19\"\nassert solution(20) == -1, \"20\"\nassert solution(21) == -1, \"21\"\nassert solution(22) == -1, \"22\"\nassert solution(23) == -1, \"23\"\nassert solution(24) == -1, \"24\"\nassert solution(25) == -1, \"25\"\nassert solution(26) == -1, \"26\"\nassert solution(27) == -1, \"27\"\nassert solution(28) == -1, \"28\"\nassert solution(29) == -1, \"29\"\nassert solution(30) == -1, \"30\"\nassert solution(31) == -1, \"31\"\nassert solution(32) == -1, \"32\"\nassert solution(33) == -1, \"33\"\nassert solution(34) == -1, \"34\"\nassert solution(35) == -1, \"35\"\nassert solution(36) == -1, \"36\"\nassert solution(37) == -1, \"37\"\nassert solution(38) == -1, \"38\"\nassert solution(39) == -1, \"39\"\nassert solution(40) == -1, \"40\"\nassert solution(41) == -1, \"41\"\nassert solution(42) == -1, \"42\"\nassert solution(43) == -1, \"43\"\nassert solution(44) == -1, \"44\"\nassert solution(45) == -1, \"45\"\nassert solution(46) == -1, \"46\"\nassert solution(47) == -1, \"47\"\nassert solution(48) == -1, \"48\"\nassert solution(49) == -1, \"49\"\nassert solution(50) == -1, \"50\"\nassert solution(51) == -1, \"51\"\nassert solution(52) == -1, \"52\"\nassert solution(53) == -1, \"53\"\nassert solution(54) == -1, \"54\"\nassert solution(55) == -1, \"55\"\nassert solution(56) == -1, \"56\"\nassert solution(57) == -1, \"57\"\nassert solution(58) == -1, \"58\"\nassert solution(59) == -1, \"59\"\nassert solution(60) == -1, \"60\"\nassert solution(61) == -1, \"61\"\nassert solution(62) == -1, \"62\"\nassert solution(63) == -1, \"63\"\nassert solution(64) == -1, \"64\"\nassert solution(65) == -1, \"65\"\nassert solution(66) == -1, \"66\"\nassert solution(67) == -1, \"67\"\nassert solution(68) == -1, \"68\"\nassert solution(69) == -1, \"69\"\nassert solution(70) == -1"
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1 3 3 1 3 2 2 1\", \"The solution is incorrect\"\nassert solution() == \"1 2 2\", \"The solution is incorrect\"\nassert solution() == \"1 2 2 1 2 3\", \"The solution is incorrect\""
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1 5 4\\n1 2 1 3\\n\") == [\"1 3 3 \", \"1 3 3 \", \"1 3 3 \"]\nassert solution(\"3 1 5 3\\n1 3 1\\n\") == [\"2 3 2 \", \"2 3 2 \", \"2 3 2 \"]\nassert solution(\"3 2 5 3\\n1 3 1\\n\") == [\"1 2 2\"]"
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n3 1 5 4\n1 2 1 3\n''') == '1 3 3 '\n\nassert solution('''\n3 1 5 3\n1 3 1\n''') == '2 3 2 '\n\nassert solution('''\n3 2 5 3\n1 3 1\n''') == '1 2 2'"
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Test failed. Expected: {expected}, Received: {solution(input())}\"\n"
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1 5 4\\n1 2 1 3\\n\") == \"1 3 3 3 \\n\"\nassert solution(\"3 1 5 3\\n1 3 1\\n\") == \"2 3 2 1 \\n\"\nassert solution(\"3 2 5 3\\n1 3 1\\n\") == \"1 2 2\""
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1 5 4\\n1 2 1 3\\n\") == \"1 3 3 \\n2 3 2 \\n1 2 2\"\nassert solution(\"3 1 5 3\\n1 3 1\\n\") == \"2 3 2 \\n1 2 2\""
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 1 5 4\\n1 2 1 3\\n') == '1 3 3 3\\n'\nassert solution('3 1 5 3\\n1 3 1\\n') == '2 3 2 2\\n'\nassert solution('3 2 5 3\\n1 3 1\\n') == '1 2 2\\n'"
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 1 5 4\\n1 2 1 3\\n') == '1 3 3 '\nassert solution('3 1 5 3\\n1 3 1\\n') == '2 3 2 '\nassert solution('3 2 5 3\\n1 3 1\\n') == '1 2 2 '"
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '''1 3 3\n2 3 2\n1 2 2'''\n\nfrom typing import List"
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1 5 4\\n1 2 1 3\\n\") == \"1 3 3 \"\nassert solution(\"3 1 5 3\\n1 3 1\\n\") == \"2 3 2 \"\nassert solution(\"3 2 5 3\\n1 3 1\\n\") == \"1 2 2\""
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"110\\n2\") == \"3\"\nassert solution(\"111111011\\n2\") == \"169\""
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('110') == '3'\nassert solution('111111011') == '169'\n"
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"110\\n2\\n\") == \"3\\n\"\nassert solution(\"111111011\\n2\\n\") == \"169\\n\"\n"
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"110\\n2\\n\") == \"3\"\nassert solution(\"111111011\\n2\\n\") == \"169\"\n\nimport math"
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"110\\n2\\n\") == \"3\"\nassert solution(\"111111011\\n2\\n\") == \"169\""
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"110\\n2\\n\", ) == \"3\\n\"\nassert solution(\"111111011\\n2\\n\", ) == \"169\\n\"\n\nimport math"
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"110\\n2\\n\") == \"3\"\nassert solution(\"111111011\\n2\\n\") == \"169\"\n"
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"3\"\nassert solution(111111011) == \"169\"\nassert solution(110) == \"3\"\n"
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('110\\n2\\n') == '3'\nassert solution('111111011\\n2\\n') == '169'\n"
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"110\\n2\\n\") == \"3\"\nassert solution(\"111111011\\n2\\n\") == \"169\"\nassert solution(\"110\\n0\\n\") == \"0\"\nassert solution(\"110\\n1000000000\\n\") == \"398859934398\""
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == expected, f\"Expected solution: {expected}, got: {solution}\""
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '33.121375178000'"
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"11.084259940083\"\nassert solution(stdin) == \"33.121375178000\""
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n3 1 1 2 0 0\n3\n1 1\n2 1\n2 3\n''') == '11.084259940083'\nassert solution('''\n5 0 4 2 2 0\n5\n5 2\n3 0\n5 5\n3 5\n3 3\n''') == '33.121375178000'"
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Input:\\n{input()}\\nOutput:\\n{output()}\""
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '11.084259940083', 'Your solution is incorrect. Please check the provided examples and the problem statement.'"
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"11.084259940083\", \"Expected output: 11.084259940083, but got: \" + solution(stdin)"
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    3 1 1 2 0 0\n    3\n    1 1\n    2 1\n    2 3\n    \"\"\"\n) == \"11.084259940083\"\n\nassert solution(\n    \"\"\"\n    5 0 4 2 2 0\n    5\n    5 2\n    3 0\n    5 5\n    3 5\n    3 3\n    \"\"\"\n) == \"33.121375178000\"\n\nprint(\"All tests passed\")"
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1 1 2 0 0\\n3\\n1 1\\n2 1\\n2 3\") == 11.084259940083\nassert solution(\"5 0 4 2 2 0\\n5\\n5 2\\n3 0\\n5 5\\n3 5\\n3 3\") == 33.121375178000\n"
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"11.084259940083\"\n\nfrom math import sqrt"
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 5\\n\") == \"2\\n\"\nassert solution(\"8 15\\n\") == \"1\\n\"\nassert solution(\"7 20\\n\") == \"0\\n\"\nassert solution(\"1000000000000 1000000000001\\n\") == \"500000000000\\n\""
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 5\") == \"2\"\nassert solution(\"8 15\") == \"1\"\nassert solution(\"7 20\") == \"0\"\nassert solution(\"1000000000000 1000000000001\") == \"500000000000\""
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 5\\n\") == \"2\\n\"\nassert solution(\"8 15\\n\") == \"1\\n\"\nassert solution(\"7 20\\n\") == \"0\\n\"\nassert solution(\"1000000000000 1000000000001\\n\") == \"500000000000\\n\""
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Solution does not match. Expected: {expected}, got: {solution(stdin)}\""
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(8, 5) == \"2\"\nassert solution(8, 15) == \"1\"\nassert solution(7, 20) == \"0\"\nassert solution(1000000000000, 1000000000001) == \"500000000000\""
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('8 5') == '2'\nassert solution('8 15') == '1'\nassert solution('7 20') == '0'\nassert solution('1000000000000 1000000000001') == '500000000000'"
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"0\"\nassert solution(input()) == \"500000000000\""
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == expected, f\"Expected: {expected}\\nGot: {solution(stdin=input())}\""
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 5\\n\") == \"2\\n\"\nassert solution(\"8 15\\n\") == \"1\\n\"\nassert solution(\"7 20\\n\") == \"0\\n\"\nassert solution(\"1000000000000 1000000000001\\n\") == \"500000000000\\n\""
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 1 10\\n01000\\n\") == \"11\\n\"\nassert solution(\"5 10 1\\n01000\\n\") == \"2\\n\"\nassert solution(\"7 2 3\\n1111111\\n\") == \"0\\n\""
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 1 10\\n01000\\n\") == \"11\"\nassert solution(\"5 10 1\\n01000\\n\") == \"2\"\nassert solution(\"7 2 3\\n1111111\\n\") == \"0\"\n"
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Solution failed for input {input()} and expected output {output()}\""
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 1 10\\n01000\\n\") == \"11\"\nassert solution(\"5 10 1\\n01000\\n\") == \"2\"\nassert solution(\"7 2 3\\n1111111\\n\") == \"0\""
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 1 10\\n01000\") == \"11\", \"Test failed\"\nassert solution(\"5 10 1\\n01000\") == \"2\", \"Test failed\"\nassert solution(\"7 2 3\\n1111111\") == \"0\", \"Test failed\""
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 1 10\\n01000\") == \"11\"\nassert solution(\"5 10 1\\n01000\") == \"2\"\nassert solution(\"7 2 3\\n1111111\") == \"0\"\n"
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 1 10\\n01000\\n\") == \"11\"\nassert solution(\"5 10 1\\n01000\\n\") == \"2\"\nassert solution(\"7 2 3\\n1111111\\n\") == \"0\""
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 1 10\\n01000\\n\") == \"11\\n\"\nassert solution(\"5 10 1\\n01000\\n\") == \"2\\n\"\nassert solution(\"7 2 3\\n1111111\\n\") == \"0\\n\"\n"
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, \"The output is incorrect. Expected: {}, but got: {}\".format(expected_output, solution(input()))"
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1 1\\n5 1 2\\n\") == \"2 1\\n19 5\\n\"\nassert solution(\"3 2 3\\n5 3 2\\n\") == \"1 1\\n24 5\\n\"\nassert solution(\"3 3 4\\n5 4 3\\n\") == \"-1\\n\"\n"
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1 1\\n\") == \"2 1\\n\"\nassert solution(\"5 1 2\\n\") == \"19 5\\n\""
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1 1\") == \"2 1\"\nassert solution(\"5 1 2\") == \"19 5\"\nassert solution(\"4 2 1\") == \"-1\"\nassert solution(\"7 1 1\") == \"11 1\"\nassert solution(\"2 1\") == \"2 1\"\nassert solution(\"3 1 2\") == \"3 1\""
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"sample.in\", \"r\").read()) == \"Output\\n19 5\""
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1 1\\n5 1 2\\n\") == \"2 1\\n19 5\\n\"\nassert solution(\"3 5 1\\n3 1 2\\n\") == \"-1\\n\"\nassert solution(\"3 5 1\\n3 2 1\\n\") == \"-1\\n\"\nassert solution(\"3 1 2\\n3 2 2\\n\") == \"2 1\\n19 5\\n\"\nassert solution(\"3 5 2\\n3 1 3\\n\") == \"-1\\n\"\nassert solution(\"3 5 2\\n3 2 2\\n\") == \"2 1\\n19 5\\n\"\nassert solution(\"3 1 3\\n3 2 3\\n\") == \"2 1\\n19 5\\n\""
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1 1\") == \"2 1\"\nassert solution(\"5 1 2\") == \"19 5\"\nassert solution(\"6 1 3\") == \"-1\"\nassert solution(\"7 1 4\") == \"17 6\"\nassert solution(\"8 1 5\") == \"59 10\"\nassert solution(\"9 1 6\") == \"123 15\"\nassert solution(\"10 1 7\") == \"165 18\"\nassert solution(\"11 1 8\") == \"231 20\"\nassert solution(\"12 1 9\") == \"293 25\"\nassert solution(\"13 1 10\") == \"357 28\"\nassert solution(\"14 1 11\") == \"425 30\"\nassert solution(\"15 1 12\") == \"497 35\"\nassert solution(\"16 1 13\") == \"573 40\"\nassert solution(\"17 1 14\") == \"653 43\"\nassert solution(\"18 1 15\") == \"737 48\"\nassert solution(\"19 1 16\") == \"825 52\"\nassert solution(\"20 1 17\") == \"917 56\"\nassert solution(\"21 1 18\") == \"1013 60\"\nassert solution(\"22 1 19\") == \"1113 64\"\nassert solution(\"23 1 20\") == \"1217 68\"\nassert solution(\"24 1 21\") == \"1325 72\"\nassert solution(\"25 1 22\") == \"1437 76\"\nassert solution(\"26 1 23\") == \"1553 80\"\nassert solution(\"27 1 24\") == \"1673 84\"\nassert solution(\"28 1 25\") == \"1797 88\"\nassert solution(\"29 1 26\") == \"1925 92\"\nassert solution(\"30 1 27\") == \"2057 96\"\nassert solution(\"31 1 28\") == \"2193 100\"\nassert solution(\"32 1 29\") == \"2333 104\"\nassert solution(\"33 1 30\") == \"2477 108\"\nassert solution(\"34 1 31\") == \"2625 112\"\nassert solution(\"35 1 32\") == \"2777 116\"\nassert solution(\"36 1 33\") == \"2933 120\"\nassert solution(\"37 1 34\") == \"3093 124\"\nassert solution(\"38 1 35\") == \"3257 128\"\nassert solution(\"39 1 36\") == \"3425 132\"\nassert solution(\"40 1 37\") == \"3597 136\"\nassert solution(\"41 1 38\") == \"3773 140\"\nassert solution(\"42 1 39\") == \"3953 144\"\nassert solution(\"43 1 40\") == \"4137 148\"\nassert solution(\"44 1 41\") == \"4325 152\"\nassert solution(\"45 1 42\") == \"4517 156\"\nassert solution(\"46 1 43\") == \"4713 160\"\nassert solution(\"47 1 44\") == \"4913 164\"\nassert solution(\"48 1 45\") == \"5117 168\"\nassert solution(\"49 1 46\") == \"5325 172\"\nassert solution(\"50 1 47\") == \"5537 176\"\nassert solution(\"51 1 48\") == \"5753"
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1 1\\n5 1 2\\n\") == \"2 1\\n19 5\\n\"\nassert solution(\"4 1 2\\n5 1 3\\n\") == \"-1\\n\"\nassert solution(\"5 1 3\\n6 1 4\\n7 1 5\\n\") == \"19 5\\n\"\nassert solution(\"5 1 1\\n6 1 2\\n7 1 3\\n8 1 4\\n9 1 5\\n\") == \"-1\\n\"\nassert solution(\"10 1 1\\n11 1 2\\n12 1 3\\n13 1 4\\n14 1 5\\n\") == \"19 5\\n\"\n"
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 1 1\\n5 1 2\\n') == '2 1\\n19 5'\nassert solution('10 1 2\\n10 2 1\\n') == '-1'\nassert solution('5 1 2\\n') == '-1'\nassert solution('1 2 3\\n1 3 2\\n') == '0 3'\nassert solution('1 0 1\\n2 1 2\\n') == '-1'\nassert solution('1 1 1\\n1 2 1\\n') == '-1'\nassert solution('5 1 2\\n6 2 1\\n') == '17 5'\nassert solution('1 2 3\\n2 3 4\\n') == '-1'\nassert solution('1 0 1\\n2 1 2\\n3 2 3\\n') == '-1'\nassert solution('1 1 1\\n2 1 2\\n3 2 3\\n') == '-1'"
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1 1\") == \"2 1\"\nassert solution(\"5 1 2\") == \"19 5\"\n"
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1 1\\n5 1 2\\n\") == \"2 1\\n19 5\"\nassert solution(\"5 1 2\\n\") == \"-1\"\nassert solution(\"6 1 3\\n7 2 4\\n8 3 6\\n9 4 12\\n10 5 24\\n11 6 48\\n12 7 96\\n13 8 192\\n14 9 384\\n15 10 768\\n16 11 1536\\n17 12 3072\\n18 13 6144\\n19 14 12288\\n20 15 24576\\n21 16 49152\\n22 17 98304\\n23 18 196608\\n24 19 393216\\n25 20 786432\\n26 21 1572864\\n27 22 3145728\\n28 23 6291456\\n29 24 12582912\\n30 25 25165824\\n31 26 50331648\\n32 27 100663296\\n33 28 201326592\\n34 29 402653184\\n35 30 805306368\\n36 31 1610612736\\n37 32 3221225472\\n38 33 6442450944\\n39 34 12884901888\\n40 35 25769803776\\n41 36 51539607552\\n42 37 103079215104\\n43 38 206158430208\\n44 39 412316860416\\n45 40 824633720832\\n46 41 1649267441664\\n47 42 3298534883328\\n48 43 6597069766656\\n49 44 13194139533312\\n50 45 26388279066624\\n51 46 52776558133248\\n52 47 105553116266496\\n53 48 211106232532992\\n54 49 422212465065984\\n55 50 844424930131968\\n56 51 1688849860263936\\n57 52 3377699720527872\\n58 53 6755399441055744\\n59 54 13510798882111552\\n60 55 27021597764223104\\n61 56 54043195528446208\\n62 57 108086391056892416\\n63 58 2161727"
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 1\") == \"6\"\nassert solution(\"10 2\") == \"4\""
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 1\\n10 2\\n\") == \"6\\n4\"\nassert solution(\"10 2\\n7 1\\n\") == \"6\\n4\"\nassert solution(\"10 2\\n7 1\\n\") == \"6\\n4\""
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 1\") == \"6\\n\", \"The solution should be 6.\"\nassert solution(\"10 2\") == \"4\\n\", \"The solution should be 4.\""
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 1\\n\") == \"6\\n\"\nassert solution(\"10 2\\n\") == \"4\\n\""
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 1\") == \"6\\n\"\nassert solution(\"10 2\") == \"4\\n\""
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 1\\n10 2\\n\") == \"6\\n4\"\nassert solution(\"10 2\\n\") == \"4\"\nassert solution(\"1 1\\n\") == \"1\""
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 1\\n10 2\\n\") == \"6\\n4\"\nassert solution(\"100 1\\n\") == \"5\"\nassert solution(\"1 1\\n1000000006\\n\") == \"6\"\nassert solution(\"4 1\\n\") == \"5\"\nassert solution(\"1 1\\n10000000006\\n\") == \"6\""
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 1\\n\") == \"6\"\nassert solution(\"10 2\\n\") == \"4\"\nassert solution(\"7 3\\n\") == \"6\"\nassert solution(\"10 4\\n\") == \"4\"\nassert solution(\"10 2\\n\") == \"4\"\nassert solution(\"10 3\\n\") == \"5\"\nassert solution(\"10 5\\n\") == \"5\"\nassert solution(\"10 7\\n\") == \"5\""
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 1\\n\") == \"6\"\nassert solution(\"10 2\\n\") == \"4\""
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 1\") == \"6\\n\", \"Test 1 failed\"\nassert solution(\"10 2\") == \"4\\n\", \"Test 2 failed\""
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Output\\n2\\n149.154.167.99\\n149.154.167.120/29\""
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\\n# Test cases\\n\\n# Test case 1\\nassert solution('-149.154.167.99') == '1 0.0.0.0/0'\\n\\n# Test case 2\\nassert solution('+149.154.167.100/30\\n+149.154.167.128/25\\n-149.154.167.120/29') == '2 149.154.167.99 149.154.167.120/29'\\n\\n# Test case 3\\nassert solution('-127.0.0.4/31\\n+127.0.0.8\\n+127.0.0.0/30\\n-195.82.146.208/29\\n-127.0.0.6/31') == '2 195.0.0.0/8 127.0.0.4/30'\\n\\n# Test case 4\\nassert solution('+127.0.0.1/32\\n-127.0.0.1') == '-1'\\n\""
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n-149.154.167.99\") == \"1\\n0.0.0.0/0\\n\"\nassert solution(\"4\\n-149.154.167.99\\n+149.154.167.100/30\\n+149.154.167.128/25\\n-149.154.167.120/29\") == \"2\\n149.154.167.99\\n149.154.167.120/29\\n\"\nassert solution(\"5\\n-127.0.0.4/31\\n+127.0.0.8\\n+127.0.0.0/30\\n-195.82.146.208/29\\n-127.0.0.6/31\") == \"2\\n195.0.0.0/8\\n127.0.0.4/30\\n\"\nassert solution(\"2\\n+127.0.0.1/32\\n-127.0.0.1\") == \"-1\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"Test failed for input: {}, expected: {}, actual: {}\".format(input(), output(), solution(input()))"
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Got: {solution(stdin)}, Expected: {expected}\"\n"
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''1\n-149.154.167.99\n''') == '1\\n0.0.0.0/0'\nassert solution('''4\n-149.154.167.99\n+149.154.167.100/30\n+149.154.167.128/25\n-149.154.167.120/29\n''') == '2\\n149.154.167.99\\n149.154.167.120/29'\nassert solution('''5\n-127.0.0.4/31\n+127.0.0.8\n+127.0.0.0/30\n-195.82.146.208/29\n-127.0.0.6/31\n''') == '2\\n195.0.0.0/8\\n127.0.0.4/30'\nassert solution('''2\n+127.0.0.1/32\n-127.0.0.1\n''') == '-1\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, \\\nf\"Output: {solution(input())}\\nExpected Output: {expected_output}\""
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 'Output\\n2\\n149.154.167.99\\n149.154.167.120/29'"
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('11\\n00000000008') == '1\\n'\nassert solution('22\\n0011223344556677889988') == '2\\n'\nassert solution('11\\n31415926535') == '0\\n'"
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"11\") == 1\nassert solution(\"22\") == 2\nassert solution(\"11\") == 0"
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"11\\n00000000008\") == \"1\"\nassert solution(\"22\\n0011223344556677889988\") == \"2\"\nassert solution(\"11\\n31415926535\") == \"0\""
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"11\") == \"1\"\nassert solution(\"22\") == \"2\"\nassert solution(\"11\") == \"0\""
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"11\") == \"1\"\nassert solution(\"22\") == \"2\"\nassert solution(\"11\") == \"0\""
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"11\\n00000000008\\n\") == \"1\\n\"\nassert solution(\"22\\n0011223344556677889988\\n\") == \"2\\n\"\nassert solution(\"11\\n31415926535\\n\") == \"0\\n\""
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"The solution does not match the expected output\\nExpected: {output}\\nActual: {solution(input())}\""
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Solution for the given test cases failed: {solution(input())} should be {expected_output}\""
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\""
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n3 5\n2 2 2 3 2\n0 0 0 1 0\n1 1 1 2 1\n''') == '''\n4\nrow 1\nrow 1\ncol 4\nrow 3\n'''\n\nassert solution('''\n3 3\n0 0 0\n0 1 0\n0 0 0\n''') == '''\n-1\n'''\n\nassert solution('''\n3 3\n1 1 1\n1 1 1\n1 1 1\n''') == '''\n3\nrow 1\nrow 2\nrow 3\n'''"
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 4 # expected output: 4"
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5\\n2 2 2 3 2\\n0 0 0 1 0\\n1 1 1 2 1\") == \"4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\"\nassert solution(\"3 3\\n0 0 0\\n0 1 0\\n0 0 0\") == \"-1\"\nassert solution(\"3 3\\n1 1 1\\n1 1 1\\n1 1 1\") == \"3\\nrow 1\\nrow 2\\nrow 3\""
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\nprint(f\"{len(stdin)}\")"
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Test case {tc} failed. Expected output: {expected_output}, Received: {solution(input())}\"\nfor tc, input_data, expected_output in zip(range(1, 6), test_cases, expected_outputs):\n    assert solution(input_data) == expected_output, f\"Test case {tc} failed. Expected output: {expected_output}, Received: {solution(input_data)}\""
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 5\\n2 2 2 3 2\\n0 0 0 1 0\\n1 1 1 2 1\\n\") == \"4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\\n\\n-1\\n\\n3\\nrow 1\\nrow 2\\nrow 3\\n\"\nassert solution(\"3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\") == \"-1\\n\"\nassert solution(\"3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"3\\nrow 1\\nrow 2\\nrow 3\\n\"\n"
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Test failed. Expected: {output()}, Actual: {solution(input())}\""
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Input\\n3 5\\n2 2 2 3 2\\n0 0 0 1 0\\n1 1 1 2 1\\n\\nOutput\\n4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\\n\\nInput\\n3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\\nOutput\\n-1\\n\\nInput\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\nOutput\\n3\\nrow 1\\nrow 2\\nrow 3\\n\\nInput\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\nOutput\\n3\") == \"Output\\n4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\\n\\nInput\\n3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\\nOutput\\n-1\\n\\nInput\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\nOutput\\n3\\nrow 1\\nrow 2\\nrow 3\\n\"\n\nassert solution(\"Input\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\nOutput\\n3\\nrow 1\\nrow 2\\nrow 3\\n\") == \"Output\\n3\\nrow 1\\nrow 2\\nrow 3\\n\"\n\nassert solution(\"Input\\n3 5\\n2 2 2 3 2\\n0 0 0 1 0\\n1 1 1 2 1\\n\\nOutput\\n4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\\n\\nInput\\n3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\\nOutput\\n-1\\n\\nInput\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\nOutput\\n3\\nrow 1\\nrow 2\\nrow 3\\n\") == \"Output\\n3\\nrow 1\\nrow 2\\nrow 3\\n\""
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Test failed: {expected}\"\n\nfrom typing import List"
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 5\\n2 2 2 3 2\\n0 0 0 1 0\\n1 1 1 2 1\\n\") == \"4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\\n\\n-1\\n\\n3\\nrow 1\\nrow 2\\nrow 3\\n\"\nassert solution(\"3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\") == \"-1\\n\"\nassert solution(\"3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"3\\nrow 1\\nrow 2\\nrow 3\\n\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\\n\"\nassert solution(\"8 6 4 6\") == \"NO\\n\"\nassert solution(\"10 3 11 4\") == \"NO\\n\"\nassert solution(\"4 2 1 4\") == \"YES\\n\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\"\n"
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"8 6 4 5\\n\") == \"YES\"\nassert solution(stdin=\"8 6 4 6\\n\") == \"NO\"\nassert solution(stdin=\"10 3 11 4\\n\") == \"NO\"\nassert solution(stdin=\"4 2 1 4\\n\") == \"YES\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"8 6 4 5\\n8 6 4 6\\n10 3 11 4\\n4 2 1 4\\n\") == \"YES\\nNO\\nNO\\nYES\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\""
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n1 3\\n1 4\\n\") == 6\nassert solution(\"7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n\") == 12\nassert solution(\"2 2\\n1 2\\n2 1\\n\") == -1\n"
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 2\\n1 3\\n1 4\\n') == '6\\n'\nassert solution('7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n') == '12\\n'\nassert solution('2 2\\n1 2\\n2 1\\n') == '-1\\n'"
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Expected output: '{expected}', got: '{solution(input())}'\""
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n1 3\\n1 4\\n\\n7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n\\n2 2\\n1 2\\n2 1\\n\\n2 2\\n1 2\\n2 1\\n\") == \"6\"\nassert solution(\"7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n\\n2 2\\n1 2\\n2 1\\n\") == \"12\"\nassert solution(\"2 2\\n1 2\\n2 1\\n\\n2 2\\n1 2\\n2 1\\n\") == \"-1\""
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output() for input, output in zip(sample_inputs, sample_outputs)"
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 2\\n1 3\\n1 4\\n') == 6\nassert solution('7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n') == 12\nassert solution('2 2\\n1 2\\n2 1\\n') == -1"
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n1 3\\n1 4\\n\") == \"6\\n\"\nassert solution(\"7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n\") == \"12\\n\"\nassert solution(\"2 2\\n1 2\\n2 1\\n\") == \"-1\\n\""
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n1 3\\n1 4\\n\\n7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n\\n2 2\\n1 2\\n2 1\\n\\n2 2\\n1 2\\n2 1\\n\\n2 2\\n1 2\\n2 1\\n\\n2 2\\n1 2\\n2 1\\n\") == \"6\\n\"\nassert solution(\"7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n\\n2 2\\n1 2\\n2 1\\n\\n2 2\\n1 2\\n2 1\\n\") == \"12\\n\"\nassert solution(\"2 2\\n1 2\\n2 1\\n\\n2 2\\n1 2\\n2 1\\n\\n2 2\\n1 2\\n2 1\\n\\n2 2\\n1 2\\n2 1\\n\") == \"-1\\n\""
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), \"Incorrect output.\""
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 2\\n1 3\\n1 4') == '6'\nassert solution('7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3') == '12'\nassert solution('2 2\\n1 2\\n2 1') == '-1'"
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(solution('5 3\\n1 0 1\\n1 1 0\\n1 0 0\\n1 0 0\\n1 0 0')) == 'NO'\\n\nassert solution(solution('3 2\\n1 0\\n1 1\\n0 1')) == 'YES'"
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('Input') == 'YES'\nassert solution('Input\\n5 3\\n1 0 1\\n1 1 0\\n1 0 0\\n1 0 0\\n1 0 0') == 'NO'\nassert solution('Input\\n3 2\\n1 0\\n1 1\\n0 1') == 'YES'"
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n1 0 1\\n1 1 0\\n1 0 0\\n1 0 0\\n1 0 0\") == \"YES\"\nassert solution(\"3 2\\n1 0\\n1 1\\n0 1\") == \"YES\""
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(solution(solution(solution(stdin)))) == \"YES\""
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"YES\"\n"
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n1 0 1\\n1 1 0\\n1 0 0\\n1 0 0\\n1 0 0\") == \"NO\"\nassert solution(\"3 2\\n1 0\\n1 1\\n0 1\") == \"YES\""
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n1 0 1\\n1 1 0\\n1 0 0\\n1 0 0\\n1 0 0\") == \"YES\"\nassert solution(\"3 2\\n1 0\\n1 1\\n0 1\") == \"YES\"\nassert solution(\"5 3\\n1 0 1\\n1 1 0\\n1 0 0\\n1 0 0\\n1 0 0\") == \"NO\""
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n1 0 1\\n1 1 0\\n1 0 0\\n1 0 0\\n1 0 0\") == \"NO\"\n\nassert solution(\"3 2\\n1 0\\n1 1\\n0 1\") == \"YES\""
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 3\\n1 0 1\\n1 1 0\\n1 0 0\\n1 0 0\\n1 0 0') == 'NO'"
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5\\n2 3 5 12\\n\") == \"Yes\\n\"\nassert solution(\"2 7\\n2 3\\n\") == \"No\\n\""
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5\\n2 3 5 12\\n\") == \"Yes\"\nassert solution(\"2 7\\n2 3\\n\") == \"No\"\n"
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output() for input, output in [\n    (\"4 5\\n2 3 5 12\\n\", \"Yes\"),\n    (\"2 7\\n2 3\\n\", \"No\"),\n]"
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5\\n2 3 5 12\\n\") == \"Yes\"\nassert solution(\"2 7\\n2 3\\n\") == \"No\"\n"
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5\\n2 3 5 12\\n\") == \"Yes\"\nassert solution(\"2 7\\n2 3\\n\") == \"No\""
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5\\n2 3 5 12\\n\") == \"Yes\"\nassert solution(\"2 7\\n2 3\\n\") == \"No\"\n"
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5\\n2 3 5 12\") == \"Yes\"\nassert solution(\"2 7\\n2 3\") == \"No\"\n"
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"2 5\") == \"Yes\\n\"\nassert solution(stdin=\"2 7\") == \"No\\n\""
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 5\\n2 3 5 12') == 'Yes\\n'\nassert solution('2 7\\n2 3') == 'No\\n'"
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5\\n2 3 5 12\\n2 7\\n2 3\\n\") == \"Yes\"\nassert solution(\"2 7\\n2 3\\n\") == \"No\""
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4 1\") == \"6\"\nassert solution(\"6 4 2\") == \"8\"\nassert solution(\"2 3 4\") == \"-1\""
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=stdin) == \"6\", \"Expected 6, got: \" + solution(stdin=stdin)"
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4 1\") == \"6\"\nassert solution(\"6 4 2\") == \"8\"\nassert solution(\"2 3 4\") == \"-1\""
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 6, \"Output: 6\" # expected output: 6\nassert solution() == 8, \"Output: 8\" # expected output: 8\nassert solution() == -1, \"Output: -1\" # expected output: -1"
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4 1\") == \"6\"\nassert solution(\"6 4 2\") == \"8\"\nassert solution(\"2 3 4\") == \"-1\"\n\nfrom typing import List"
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"3 4 1\") == \"6\"\nassert solution(stdin=\"6 4 2\") == \"8\"\nassert solution(stdin=\"2 3 4\") == \"-1\""
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4 1\") == 6\nassert solution(\"6 4 2\") == 8\nassert solution(\"2 3 4\") == -1"
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"8\\n\"\nassert solution(stdin) == \"-1\\n\""
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4 1\") == \"6\"\nassert solution(\"6 4 2\") == \"8\"\nassert solution(\"2 3 4\") == \"-1\""
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '6', 'Your implementation is incorrect'"
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 2 2 4 3\\n\") == \"2\"\nassert solution(\"3\\n4 1 1\\n\") == \"2\"\nassert solution(\"4\\n0 3 0 4\\n\") == \"0\""
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 2 2 4 3\\n\") == \"2\"\nassert solution(\"3\\n4 1 1\\n\") == \"2\"\nassert solution(\"4\\n0 3 0 4\\n\") == \"0\"\n\nfrom typing import List"
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\n1 2 2 4 3\\n') == '2\\n'\nassert solution('3\\n4 1 1\\n') == '2\\n'\nassert solution('4\\n0 3 0 4\\n') == '0\\n'\nassert solution('') == '-1\\n'\n"
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 2 2 4 3\\n\\n3\\n4 1 1\\n\\n4\\n0 3 0 4\\n\") == 2\nassert solution(\"3\\n4 1 1\\n\\n4\\n0 3 0 4\\n\") == 2\nassert solution(\"4\\n0 3 0 4\\n\") == 0"
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, but got {solution(input())}\""
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 2 2 4 3\\n\\n3\\n4 1 1\\n\\n4\\n0 3 0 4\\n\") == \"2\\n\"\nassert solution(\"5\\n1 2 2 4 3\\n\\n3\\n4 1 1\\n\\n4\\n0 3 0 4\\n\") == \"-1\\n\"\nassert solution(\"3\\n4 1 1\\n\\n4\\n0 3 0 4\\n\") == \"2\\n\""
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 2 2 4 3\") == \"2\"\nassert solution(\"3\\n4 1 1\") == \"2\"\nassert solution(\"4\\n0 3 0 4\") == \"0\""
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Test failed: {input()}!= {output}\\nInput: {input()}\\nOutput: {output}\""
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2\\n\" # expected output: 2\n\nassert solution(stdin) == \"2\\n\" # expected output: 2\n\nassert solution(stdin) == \"2\\n\" # expected output: 2\n\nassert solution(stdin) == \"0\\n\" # expected output: 0\n\nassert solution(stdin) == \"2\\n\" # expected output: 2"
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 2 2 4 3\") == 2\nassert solution(\"3\\n4 1 1\") == 2\nassert solution(\"4\\n0 3 0 4\") == 0"
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8\\n10000011\") == \"5\"\nassert solution(\"2\\n01\") == \"2\""
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"tests/sample_input.txt\", \"r\")) == \"5\"\nassert solution(open(\"tests/sample_input.txt\", \"r\").read()) == \"5\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8\\n10000011\") == \"5\"\nassert solution(\"2\\n01\") == \"2\"\n"
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8\\n10000011\\n\") == \"5\\n\"\nassert solution(\"2\\n01\\n\") == \"2\\n\""
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10000011\") == \"5\"\nassert solution(\"01\") == \"2\""
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8\\n10000011\") == \"5\"\nassert solution(\"2\\n01\") == \"2\""
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8\\n10000011\") == \"5\"\nassert solution(\"2\\n01\") == \"2\""
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8\\n10000011\") == \"5\\n\"\nassert solution(\"2\\n01\") == \"2\\n\""
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n10000011\\n\") == \"5\"\nassert solution(\"2\\n01\\n\") == \"2\""
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8\\n10000011\") == \"5\"\nassert solution(\"2\\n01\") == \"2\""
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n2 3 1 4\") == \"3\"\nassert solution(\"4\\n4 4 4 4\") == \"-1\"\nassert solution(\"4\\n2 1 4 3\") == \"1\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n2 3 1 4\") == \"3\"\nassert solution(\"4\\n4 4 4 4\") == \"-1\"\nassert solution(\"4\\n2 1 4 3\") == \"1\""
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Your solution is incorrect. Please provide the correct output for the given input.\""
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n2 3 1 4\") == \"3\"\nassert solution(\"4\\n4 4 4 4\") == \"-1\"\nassert solution(\"4\\n2 1 4 3\") == \"1\""
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_data) == expected_output, f\"Test case failed. Expected output: {expected_output}, got: {solution(input_data)}\""
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n2 3 1 4\\n\\n4\\n4 4 4 4\\n\\n4\\n2 1 4 3\\n') == '3\\n'\nassert solution('4\\n4 4 4 4\\n\\n4\\n2 1 4 3\\n') == '-1\\n'\nassert solution('4\\n2 1 4 3\\n\\n4\\n2 3 1 4\\n') == '1\\n'"
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n2 3 1 4\\n\") == \"3\"\nassert solution(\"4\\n4 4 4 4\\n\") == \"-1\"\nassert solution(\"4\\n2 1 4 3\\n\") == \"1\""
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n2 3 1 4\\n\") == \"3\"\nassert solution(\"4\\n4 4 4 4\\n\") == \"-1\"\nassert solution(\"4\\n2 1 4 3\\n\") == \"1\""
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n2 3 1 4\\n\") == \"3\"\nassert solution(\"4\\n4 4 4 4\\n\") == \"-1\"\nassert solution(\"4\\n2 1 4 3\\n\") == \"1\""
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 3 2 0\\n\") == \"2\"\nassert solution(\"7\\n1 3 3 2 1 2 3\\n\") == \"0\"\nassert solution(\"2\\n2 2\\n\") == \"1\""
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 3 2 0\\n\") == \"2\"\nassert solution(\"7\\n1 3 3 2 1 2 3\\n\") == \"0\"\nassert solution(\"2\\n2 2\\n\") == \"1\""
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Solution: {solution(input())}, Expected Output: {output}\""
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 3 2 0\\n2\") == \"2\"\nassert solution(\"7\\n1 3 3 2 1 2 3\\n0\") == \"0\"\nassert solution(\"2\\n2 2\\n1\") == \"1\"\n\nfrom typing import List\n"
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 3 2 0\\n2\") == \"2\"\nassert solution(\"7\\n1 3 3 2 1 2 3\\n0\") == \"0\"\nassert solution(\"2\\n2 2\\n1\") == \"1\""
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 3 2 0\\n\") == \"2\"\nassert solution(\"7\\n1 3 3 2 1 2 3\\n\") == \"0\"\nassert solution(\"2\\n2 2\\n\") == \"1\""
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 3 2 0\\n\") == \"2\"\nassert solution(\"7\\n1 3 3 2 1 2 3\\n\") == \"0\"\nassert solution(\"2\\n2 2\\n\") == \"1\""
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"0\"\nassert solution(input()) == \"1\""
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 3 2 0\\n\") == \"2\\n\"\nassert solution(\"7\\n1 3 3 2 1 2 3\\n\") == \"0\\n\"\nassert solution(\"2\\n2 2\\n\") == \"1\\n\""
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\") == 0, \"The solution should return 0 for an empty input\"\nassert solution(\"1\\n\") == 1, \"The solution should return 1 for a single day input\"\nassert solution(\"2\\n1 3\\n\") == 2, \"The solution should return 2 for a single day input with sport option\"\nassert solution(\"3\\n1 3 2\\n\") == 3, \"The solution should return 3 for a single day input with rest option\"\nassert solution(\"4\\n1 3 2 0\\n\") == 0, \"The solution should return 0 for a single day input with sport and rest options\"\nassert solution(\"5\\n1 3 2 0 0\\n\") == 0, \"The solution should return 0 for a single day input with sport and rest options\"\nassert solution(\"6\\n1 3 2 0 0 0\\n\") == 2, \"The solution should return 2 for a single day input with sport and rest options\"\nassert solution(\"7\\n1 3 2 1 2 3\\n\") == 1, \"The solution should return 1 for a single day input with sport and rest options\"\nassert solution(\"8\\n1 3 3 2 1 2 3\\n\") == 0, \"The solution should return 0 for a single day input with sport and rest options\"\nassert solution(\"9\\n2 2 2 2 2 2 2\\n\") == 1, \"The solution should return 1 for a single day input with sport and rest options\"\nassert solution(\"10\\n2 2 2 2 2 2 2\\n\") == 0, \"The solution should return 0 for a single day input with sport and rest options\""
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(9) == 504\nassert solution(7) == 210"
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"9\\n\") == \"504\\n\"\nassert solution(\"7\\n\") == \"210\\n\"\n\nHere's the code to test the correctness of the solution:"
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(9) == '504'\nassert solution(7) == '210'"
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"9\\n\") == \"504\\n\"\nassert solution(\"7\\n\") == \"210\\n\""
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(9) == \"504\"\nassert solution(7) == \"210\""
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(7) == \"210\"\nassert solution(9) == \"504\"\nassert solution(7) == \"210\"\nassert solution(10) == \"2100\""
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(9) == 504\nassert solution(7) == 210"
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(9) == 504, \"Your solution is not correct.\"\nassert solution(7) == 210, \"Your solution is not correct.\""
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('9\\n') == '504\\n'\nassert solution('7\\n') == '210\\n'"
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"9\") == \"504\", \"Test case 1 failed\"\nassert solution(\"7\") == \"210\", \"Test case 2 failed\""
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n0 0 1 1\\n1 1 2 2\\n3 0 4 1\") == \"1 1\\n\"\nassert solution(\"3\\n0 0 1 1\\n0 1 1 2\\n1 0 2 1\") == \"1 1\\n\"\nassert solution(\"4\\n0 0 5 5\\n0 0 4 4\\n1 1 4 4\\n1 1 4 4\") == \"1 1\\n\"\nassert solution(\"5\\n0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2\") == \"3 4\\n\""
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_data) == output_data, f\"Expected {output_data}, got {solution(input_data)}\"\n\ninput_data = \"\"\"\n3\n0 0 1 1\n1 1 2 2\n3 0 4 1\n\"\"\"\n\noutput_data = \"\"\"\n1 1\n\"\"\"\n\ninput_data = \"\"\"\n3\n0 0 1 1\n0 1 1 2\n1 0 2 1\n\"\"\"\n\noutput_data = \"\"\"\n1 1\n\"\"\"\n\ninput_data = \"\"\"\n4\n0 0 5 5\n0 0 4 4\n1 1 4 4\n1 1 4 4\n\"\"\"\n\noutput_data = \"\"\"\n1 1\n\"\"\"\n\ninput_data = \"\"\"\n5\n0 0 10 8\n1 2 6 7\n2 3 5 6\n3 4 4 5\n8 1 9 2\n\"\"\"\n\noutput_data = \"\"\"\n3 4\n\"\"\""
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n0 0 1 1\\n1 1 2 2\\n3 0 4 1\\n') == '1 1\\n'\nassert solution('3\\n0 0 1 1\\n0 1 1 2\\n1 0 2 1\\n') == '1 1\\n'\nassert solution('4\\n0 0 5 5\\n0 0 4 4\\n1 1 4 4\\n1 1 4 4\\n') == '1 1\\n'\nassert solution('5\\n0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2\\n') == '3 4\\n'"
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n0 0 1 1\\n1 1 2 2\\n3 0 4 1\\n') == '1 1\\n'\nassert solution('3\\n0 0 1 1\\n0 1 1 2\\n1 0 2 1\\n') == '1 1\\n'\nassert solution('4\\n0 0 5 5\\n0 0 4 4\\n1 1 4 4\\n1 1 4 4\\n') == '1 1\\n'\nassert solution('5\\n0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2\\n') == '3 4\\n'"
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == expected_output, f\"Solution is not correct. Expected output: {expected_output}, Actual output: {solution()}\""
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n0 0 1 1\\n1 1 2 2\\n3 0 4 1\\n') == '1 1\\n'\nassert solution('3\\n0 0 1 1\\n0 1 1 2\\n1 0 2 1\\n') == '1 1\\n'\nassert solution('4\\n0 0 5 5\\n0 0 4 4\\n1 1 4 4\\n1 1 4 4\\n') == '1 1\\n'\nassert solution('5\\n0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2\\n') == '3 4\\n'"
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 0 1 1\\n1 1 2 2\\n3 0 4 1\\n\") == \"1 1\\n\"\nassert solution(\"0 0 1 1\\n0 1 1 2\\n1 0 2 1\\n\") == \"1 1\\n\"\nassert solution(\"0 0 1 1\\n1 1 2 2\\n3 0 4 1\\n\") == \"1 1\\n\"\nassert solution(\"0 0 1 1\\n1 1 2 2\\n1 1 2 2\\n\") == \"1 1\\n\"\nassert solution(\"0 0 5 5\\n0 0 4 4\\n1 1 4 4\\n1 1 4 4\\n\") == \"1 1\\n\"\nassert solution(\"0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2\\n\") == \"3 4\\n\""
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n0 0 1 1\\n1 1 2 2\\n3 0 4 1') == '1 1\\n'\nassert solution('3\\n0 0 1 1\\n0 1 1 2\\n1 0 2 1') == '1 1\\n'\nassert solution('4\\n0 0 5 5\\n0 0 4 4\\n1 1 4 4\\n1 1 4 4') == '1 1\\n'\nassert solution('5\\n0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2') == '3 4\\n'"
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n0 0 1 1\\n1 1 2 2\\n3 0 4 1\\n') == '1 1\\n'\nassert solution('3\\n0 0 1 1\\n0 1 1 2\\n1 0 2 1\\n') == '1 1\\n'\nassert solution('4\\n0 0 5 5\\n0 0 4 4\\n1 1 4 4\\n1 1 4 4\\n') == '1 1\\n'\nassert solution('5\\n0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2\\n') == '3 4\\n'"
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 0 1 1\\n1 1 2 2\\n3 0 4 1\\n\") == \"1 1\\n\"\nassert solution(\"0 0 1 1\\n0 1 1 2\\n1 0 2 1\\n\") == \"1 1\\n\"\nassert solution(\"0 0 5 5\\n0 0 4 4\\n1 1 4 4\\n1 1 4 4\\n\") == \"1 1\\n\"\nassert solution(\"0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2\\n\") == \"3 4\\n\""
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n18 55 16 17\\n\") == \"YES\"\nassert solution(\"6\\n40 41 43 44 44 44\\n\") == \"NO\"\nassert solution(\"8\\n5 972 3 4 1 4 970 971\\n\") == \"YES\""
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(r'4\\n18 55 16 17\\n') == 'YES'\nassert solution(r'6\\n40 41 43 44 44 44\\n') == 'NO'\nassert solution(r'8\\n5 972 3 4 1 4 970 971\\n') == 'YES'\n"
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n18 55 16 17\") == \"YES\"\nassert solution(\"6\\n40 41 43 44 44 44\") == \"NO\"\nassert solution(\"8\\n5 972 3 4 1 4 970 971\") == \"YES\""
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n18 55 16 17\\n6\\n40 41 43 44 44 44\\n8\\n5 972 3 4 1 4 970 971\") == \"YES\"\nassert solution(\"6\\n40 41 43 44 44 44\\n8\\n5 972 3 4 1 4 970 971\") == \"NO\"\nassert solution(\"8\\n5 972 3 4 1 4 970 971\") == \"YES\""
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=r\"4\\n18 55 16 17\\n6\\n40 41 43 44 44 44\\n8\\n5 972 3 4 1 4 970 971\") == \"YES\\n\""
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n18 55 16 17\") == \"YES\"\nassert solution(\"6\\n40 41 43 44 44 44\") == \"NO\"\nassert solution(\"8\\n5 972 3 4 1 4 970 971\") == \"YES\"\nassert solution(\"10\\n6 7 8 9 10 11\") == \"NO\""
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"YES\\n\"\nassert solution() == \"NO\\n\"\nassert solution() == \"YES\\n\""
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n18 55 16 17') == 'YES'\nassert solution('6\\n40 41 43 44 44 44') == 'NO'\nassert solution('8\\n5 972 3 4 1 4 970 971') == 'YES'"
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n18 55 16 17') == 'YES'\nassert solution('6\\n40 41 43 44 44 44') == 'NO'\nassert solution('8\\n5 972 3 4 1 4 970 971') == 'YES'\n\nsolution('4\\n18 55 16 17') == 'YES'\nsolution('6\\n40 41 43 44 44 44') == 'NO'\nsolution('8\\n5 972 3 4 1 4 970 971') == 'YES'"
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n18 55 16 17\\n\") == \"YES\"\nassert solution(\"6\\n40 41 43 44 44 44\\n\") == \"NO\"\nassert solution(\"8\\n5 972 3 4 1 4 970 971\\n\") == \"YES\""
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 9\\n1 2 3\\n1 2 3 7 8 9 11 12 13\") == \"9\\n\"\nassert solution(\"5 5\\n1 2 3 4 5\\n1 2 3 4 5\") == \"10\\n\""
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 9\\n1 2 3\\n1 2 3 7 8 9 11 12 13\") == 9\nassert solution(\"5 5\\n1 2 3 4 5\\n1 2 3 4 5\") == 10\n"
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '9'\n"
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 9\\n1 2 3\\n1 2 3 7 8 9 11 12 13\\n\") == \"9\"\nassert solution(\"5 5\\n1 2 3 4 5\\n1 2 3 4 5\\n\") == \"10\""
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"9\\n\", \"Expected output: 9\\nActual output: \" + solution()"
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3 9\n1 2 3\n1 2 3 7 8 9 11 12 13\n\"\"\") == \"9\"\n\nassert solution(\"\"\"\n5 5\n1 2 3 4 5\n1 2 3 4 5\n\"\"\") == \"10\""
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"3 9\n1 2 3\n1 2 3 7 8 9 11 12 13\"\"\"\n) == \"9\\n\"\n\nassert solution(\n    \"\"\"5 5\n1 2 3 4 5\n1 2 3 4 5\"\"\"\n) == \"10\\n\""
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 9\\n1 2 3\\n1 2 3 7 8 9 11 12 13\") == \"9\"\nassert solution(\"5 5\\n1 2 3 4 5\\n1 2 3 4 5\") == \"10\""
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 9\\n1 2 3\\n1 2 3 7 8 9 11 12 13\\n\") == \"9\\n\"\nassert solution(\"5 5\\n1 2 3 4 5\\n1 2 3 4 5\\n\") == \"10\\n\""
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 9\\n1 2 3\\n1 2 3 7 8 9 11 12 13') == '9'\nassert solution('5 5\\n1 2 3 4 5\\n1 2 3 4 5') == '10'"
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == \"Vasya\"\nassert solution(2) == \"Petya\"\nassert solution(8) == \"Petya\""
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1') == 'Vasya'\nassert solution('2') == 'Petya'\nassert solution('8') == 'Petya'"
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == \"Vasya\"\nassert solution(2) == \"Petya\"\nassert solution(8) == \"Petya\""
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == 'Vasya'\nassert solution(2) == 'Petya'\nassert solution(8) == 'Petya'"
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == \"Vasya\"\nassert solution(2) == \"Petya\"\nassert solution(8) == \"Petya\"\n"
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == \"Vasya\"\nassert solution(2) == \"Petya\"\nassert solution(8) == \"Petya\""
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"Vasya\"\nassert solution(\"2\") == \"Petya\"\nassert solution(\"8\") == \"Petya\""
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"Vasya\"\nassert solution(\"2\") == \"Petya\"\nassert solution(\"8\") == \"Petya\""
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == 'Vasya'\nassert solution(2) == 'Petya'\nassert solution(8) == 'Petya'"
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n\") == \"Vasya\\n\"\nassert solution(\"2\\n\") == \"Petya\\n\"\nassert solution(\"8\\n\") == \"Petya\\n\""
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\nr\"2 2 3\n1 2\n2 2\n2 1\"\n) == \"0\\n\"\n\nassert solution(\nr\"1 5 3\n1 3\n1 1\n1 5\"\n) == \"2\\n\"\n\nassert solution(\nr\"4 3 6\n1 2\n1 3\n2 2\n2 3\n3 1\n3 3\"\n) == \"1\\n\""
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2 3\\n1 2\\n2 2\\n2 1\\n\") == \"0\\n\"\nassert solution(\"1 5 3\\n1 3\\n1 1\\n1 5\\n\") == \"2\\n\"\nassert solution(\"4 3 6\\n1 2\\n1 3\\n2 2\\n2 3\\n3 1\\n3 3\\n\") == \"1\\n\""
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 2 3\\n1 2\\n2 2\\n2 1\\n') == '0\\n'\nassert solution('1 5 3\\n1 3\\n1 1\\n1 5\\n') == '2\\n'\nassert solution('4 3 6\\n1 2\\n1 3\\n2 2\\n2 3\\n3 1\\n3 3\\n') == '1\\n'"
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(example_1) == \"0\", \"Test 1 failed\"\nassert solution(example_2) == \"0\", \"Test 2 failed\"\nassert solution(example_3) == \"0\", \"Test 3 failed\""
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 0, \"Test 1 failed\"\nassert solution == 2, \"Test 2 failed\"\nassert solution == 1, \"Test 3 failed\""
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2 3\\n1 2\\n2 2\\n2 1\\n\") == \"0\\n\"\nassert solution(\"1 5 3\\n1 3\\n1 1\\n1 5\\n\") == \"2\\n\"\nassert solution(\"4 3 6\\n1 2\\n1 3\\n2 2\\n2 3\\n3 1\\n3 3\\n\") == \"1\\n\""
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2 3\\n1 2\\n2 2\\n2 1\\n\") == \"0\\n\"\nassert solution(\"1 5 3\\n1 3\\n1 1\\n1 5\\n\") == \"2\\n\"\nassert solution(\"4 3 6\\n1 2\\n1 3\\n2 2\\n2 3\\n3 1\\n3 3\\n\") == \"1\\n\""
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"Test {index + 1} failed: expected {output()}, got {solution(input())}\"\nfor index, input_ in enumerate(inputs):\n    output_ = solution(input_)\n    assert output_ == output, f\"Test {index + 1} failed: expected {output}, got {output_}\""
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2 3\\n1 2\\n2 2\\n2 1\\n\") == \"0\\n\"\nassert solution(\"1 5 3\\n1 3\\n1 1\\n1 5\\n\") == \"2\\n\"\nassert solution(\"4 3 6\\n1 2\\n1 3\\n2 2\\n2 3\\n3 1\\n3 3\\n\") == \"1\\n\""
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '2'\nprint(0)"
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2\"\n"
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\"\n"
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\"\nassert solution(\"4\\nA\\nB\\nB\\nA\") == \"1\"\nassert solution(\"4\\nA\\nB\\nA\\nB\") == \"2\"\nassert solution(\"4\\nA\\nA\\nA\\nB\") == \"1\"\nassert solution(\"4\\nA\\nA\\A\\yB\") == \"1\"\nassert solution(\"4\\nA\\A\\yB\\yB\") == \"1\"\nassert solution(\"4\\nA\\A\\yB\\yB\\yB\") == \"1\"\nassert solution(\"4\\nA\\A\\yB\\yB\\yB\\yB\") == \"1\""
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\nA\\nB\\nB\\nA') == '2'\n"
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\"\nassert solution(\"5\\nA\\nA\\nA\\nA\\nB\\nB\\nB\\nB\\nB\") == \"2\"\nassert solution(\"6\\nA\\nA\\nA\\nA\\nB\\nA\\nA\\nA\\nA\") == \"2\"\nassert solution(\"7\\nA\\nA\\nA\\nA\\nB\\nA\\nA\\nA\\nB\") == \"2\"\nassert solution(\"8\\nA\\nA\\nA\\nA\\nB\\nA\\nA\\nA\\nB\\nB\\nA\\nA\\nA\\nB\") == \"2\"\nassert solution(\"9\\nA\\nA\\nA\\nA\\nB\\nA\\nA\\nA\\nB\\nB\\nA\\nA\\nA\\nB\\nA\\nA\\nA\\nB\\nA\\nA\\nA\\nB\") == \"4\"\nassert solution(\"10\\nA\\nA\\nA\\nA\\nB\\nA\\nA\\nA\\nB\\nB\\nA\\nA\\nA\\nB\\nA\\nA\\nA\\nB\\nA\\nA\\nA\\nB\\nA\\nA\\nA\\nB\\nA\\nA\\nA\\nB\\nA\\nA\\nA\\nB\\nA\\nA\\nA\\nB\\nA\\nA\\nA\\nB\\nA\\nA\\nA\\nB\") == \"4\""
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(4) == \"2\"\nprint(\"All tests pass\")"
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, but got {solution(input())}\""
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\"\nassert solution(\"2\\nA\\nB\\nB\\nA\") == \"1\"\nassert solution(\"5\\nA\\nB\\nB\\nA\\nC\\nD\\nE\\nF\\nG\") == \"2\"\nassert solution(\"1000\\nA\\nB\\nB\\nA\\nC\\nD\\nE\\nF\\nG\\nH\\nI\\nJ\\nK\\nL\\nM\\nN\\nO\\nP\\nQ\\nR\\nS\\nT\\nU\\nV\\nW\\nX\\nY\\nZ\\nA\\nB\\nB\\nA\\nC\\nD\\nE\\nF\\nG\\nH\\nI\\nJ\\nK\\nL\\nM\\nN\\nO\\nP\\nQ\\nR\\nS\\nT\\nU\\nV\\nW\\nX\\nY\\nZ\\nA\\nB\\nB\\nA\\nC\\nD\\nE\\nF\\nG\\nH\\nI\\nJ\\nK\\nL\\nM\\nN\\nO\\nP\\nQ\\nR\\nS\\nT\\nU\\nV\\nW\\nX\\nY\\nZ\\nA\\nB\\nB\\nA\\nC\\nD\\nE\\nF\\nG\\nH\\nI\\nJ\\nK\\nL\\nM\\nN\\nO\\nP\\nQ\\nR\\nS\\nT\\nU\\nV\\nW\\nX\\nY\\nZ\\nA\\nB\\nB\\nA\\nC\\nD\\nE\\nF\\nG\\nH\\nI\\nJ\\nK\\nL\\nM\\nN\\nO\\nP\\nQ\\nR\\nS\\nT\\nU\\nV\\nW\\nX\\nY\\nZ\\nA\\nB\\nB\\nA\\nC\\nD\\nE\\nF\\nG\\nH\\nI\\nJ\\nK\\nL\\nM\\nN\\nO\\nP\\nQ\\nR\\nS\\nT\\nU\\nV\\nW\\nX\\nY\\nZ\\nA\\nB\\nB\\nA\\nC\\nD\\nE\\nF\\nG\\nH\\nI\\nJ\\nK\\nL\\nM\\nN\\nO\\nP\\nQ\\nR\\nS\\nT\\nU\\nV\\nW\\nX\\nY\\nZ\\nA\\nB\\nB\\xA\\nC\\nD\\nE\\nF\\nG\\nH\\nI\\nJ\\nK\\nL\\nM\\nN\\nO\\nP\\nQ\\nR\\nS\\nT\\nU\\nV\\nW\\nX\\nY\\nZ\\nA\\nB\\nB\\xA\\nC\\nD\\nE\\nF\\nG\\nH\\nI\\nJ\\nK\\nL\\nM\\nN\\nO\\nP\\nQ\\nR\\nS\\nT\\nU\\nV\\nW\\nX\\nY\\nZ\\nA\\nB\\xB\\nA\\nC\\nD\\nE\\nF\\nG\\nH\\nI\\nJ\\nK\\nL\\nM\\nN\\nO\\nP\\nQ\\nR\\nS\\nT\\nU\\nV\\nW\\nX\\nY\\nZ\\nA\\nB\\xB\\xA\\nC\\nD\\nE\\nF\\nG\\nH\\nI\\nJ\\nK\\nL\\nM\\nN\\nO\\nP\\nQ\\nR\\nS\\nT\\nU\\nV\\nW\\nX\\nY\\nZ\\xA\\nB\\xB\\xA\\nC\\nD\\nE\\nF\\nG\\nH\\nI\\nJ\\nK\\nL\\nM\\nN\\nO\\nP\\nQ\\nR\\nS\\nT\\nU\\nV"
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected_output, f\"Expected {expected_output}, but got {solution(stdin)}\""
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2 3 4\") == \"2\"\nassert solution(\"5\\n2 3 4 6 7\") == \"3\""
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n2 3 4') == '2\\n', \"Your solution is incorrect.\"\nassert solution('5\\n2 3 4 6 7') == '3\\n', \"Your solution is incorrect.\"\n\nsolution('3\\n2 3 4') # should return '2'\nsolution('5\\n2 3 4 6 7') # should return '3'"
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Input {input()}, Output {output}\""
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"2\"\nassert solution(5) == \"3\""
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n2 3 4\\n\") == \"2\\n\"\nassert solution(\"5\\n2 3 4 6 7\\n\") == \"3\\n\"\n\nprint(\"All tests passed\")"
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n2 3 4\\n\") == \"2\\n\"\nassert solution(\"3\\n2 3 4\\n\") == \"3\\n\"\nassert solution(\"2\\n2 3 4\\n\") == \"2\\n\"\n"
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"3\""
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\""
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Input\") == \"Output\""
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\nABAAC\") == \"11\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\nABAAC\") == \"11\"\n"
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\nAABC\\n\") == \"11\\n\""
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\nABAAC') == '11\\n'"
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\nABAAC\") == \"11\\n\"\n"
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\nABAAC\") == \"11\"\nassert solution(\"10\\nABAC\") == \"11\"\nassert solution(\"10\\nABC\") == \"11\"\nassert solution(\"10\\nABCDE\") == \"11\"\nassert solution(\"10\\nABCD\") == \"11\""
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == '11'"
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\nABAAC\") == \"11\\n\", \"The output is not correct\""
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\nABAAC\") == \"11\\n\", \"Testcase 1 Failed\"\nassert solution(\"5\\nAAA\\nB\") == \"1\\n\", \"Testcase 2 Failed\"\nassert solution(\"5\\nAAA\\nB\\n\") == \"2\\n\", \"Testcase 3 Failed\"\nassert solution(\"5\\nAAA\\nB\\nC\") == \"3\\n\", \"Testcase 4 Failed\"\nassert solution(\"5\\nAAA\\nB\\nCC\") == \"5\\n\", \"Testcase 5 Failed\"\n\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\nABAAC\") == \"11\""
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '3\\n', \"Expected output: 3\\nGot: \" + str(solution())\n"
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"3\\n\", \"Output: {}\\nExpected output: {}\".format(solution(stdin), \"3\\n\")"
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n4 2\\n1 1\\n0 1\\n2 3\\n\") == \"3\"\nassert solution(\"1023\\n1 2\\n1 0\\n1 2\\n1 1\\n\") == \"-1\""
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n4 2\\n1 1\\n0 1\\n2 3\\n\") == \"3\\n\"\nassert solution(\"1023\\n1 2\\n1 0\\n1 2\\n1 1\\n\") == \"-1\\n\"\n"
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Test failed for input {input()} and expected {expected}\"\nprint(\"Test passed\")"
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n4 2\\n1 1\\n0 1\\n2 3\\n\") == \"3\"\nassert solution(\"1023\\n1 2\\n1 0\\n1 2\\n1 1\\n\") == \"-1\""
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n4 2\\n1 1\\n0 1\\n2 3\\n\") == 3\nassert solution(\"1023\\n1 2\\n1 0\\n1 2\\n1 1\\n\") == -1"
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n4 2\\n1 1\\n0 1\\n2 3\\n') == '3\\n'\nassert solution('1023\\n1 2\\n1 0\\n1 2\\n1 1\\n') == '-1\\n'"
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n4 2\\n1 1\\n0 1\\n2 3\\n\") == \"3\\n\"\nassert solution(\"1023\\n1 2\\n1 0\\n1 2\\n1 1\\n\") == \"-1\\n\"\n"
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"3\", \"Output not matching.\""
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2\\n4 5') == '2'\n"
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n4 5\") == \"2\\n\"\nassert solution(\"1\\n1 2 3 4 5\") == \"1\\n\"\nassert solution(\"1\\n6 7 8 9 10\") == \"1\\n\"\nassert solution(\"1\\n2 3 4\") == \"2\\n\"\nassert solution(\"1\\n\") == \"1\\n\"\nassert solution(\"2\\n\") == \"2\\n\"\n"
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n4 5\") == \"2\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n4 5\\n\") == \"2\\n\", \"Solution should return 2.\"\n"
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2\\n\", \"Incorrect output\""
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n4 5\\n\") == \"2\\n\", \"Test 1\"\nassert solution(\"3\\n4 5\\n\") == \"1\\n\", \"Test 2\"\nassert solution(\"4\\n4 5\\n\") == \"0\\n\", \"Test 3\"\nassert solution(\"5\\n4 5\\n\") == \"0\\n\", \"Test 4\"\nassert solution(\"6\\n4 5\\n\") == \"0\\n\", \"Test 5\"\nassert solution(\"7\\n4 5\\n\") == \"0\\n\", \"Test 6\"\nassert solution(\"8\\n4 5\\n\") == \"0\\n\", \"Test 7\"\nassert solution(\"9\\n4 5\\n\") == \"0\\n\", \"Test 8\"\nassert solution(\"10\\n4 5\\n\") == \"0\\n\", \"Test 9\"\n"
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"2\", \"The minimum number of operations required to achieve the objective is 2.\""
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"2\\n4 5\") == \"2\\n\""
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n4 5\") == \"2\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"2\\n\"\nassert solution(\"10\\n1 2 3 4 5\") == \"10\\n\"\nassert solution(\"6\\n3 4 5\") == \"4\\n\""
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n4 5\") == \"2\\n\", \"Input is not valid.\"\n\nN = int(stdin.readline().strip())\n\ncards = []\nfor _ in range(N):\n    x = int(stdin.readline().strip())\n    cards.append(x)\n\np = 3\n\nfor i in range(p):\n    cards[0] = cards[0] + 1\n    cards.pop()\n\nfor i in range(p):\n    cards[i] = cards[i] - 1\n    cards.insert(0, cards[i] + 1)\n\nfor i in range(N):\n    if cards[i] == 1:\n        print(\"0\", end=\" \")\n    else:\n        print(\"1\", end=\" \")"
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2 2 1\") == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"NO\""
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2 2 1\") == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"NO\""
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\"\n\ninput_ = \"\"\"\n2 2 2 1\n\"\"\"\n\nexpected = \"\"\"\nYES\n0 1 0 1 2 3 2\n\"\"\"\n\ninput_ = \"\"\"\n1 2 3 4\n\"\"\"\n\nexpected = \"\"\"\nNO\n\"\"\"\n\ninput_ = \"\"\"\n2 2 2 3\n\"\"\"\n\nexpected = \"\"\"\nNO\n\"\"\""
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2 2 1\") == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"NO\""
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2 2 1\") == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"NO\""
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"NO\""
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2 2 1\") == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"NO\""
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 4\\n1 3 2 4\\n1 3 4 2\\n') == 'YES\\n'\nassert solution('4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\\n') == 'NO\\n'\nassert solution('3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\\n') == 'YES\\n'"
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(solution_test_input) == \"YES\""
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 4\\n1 3 2 4\\n1 3 4 2\") == \"YES\"\nassert solution(\"4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\") == \"NO\"\nassert solution(\"3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\") == \"YES\""
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 4\\n1 3 2 4\\n1 3 4 2\\n\") == \"YES\"\nassert solution(\"4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\\n\") == \"NO\"\nassert solution(\"3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\\n\") == \"YES\""
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 4\\n1 3 2 4\\n1 3 4 2\") == \"YES\"\nassert solution(\"4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\") == \"NO\"\nassert solution(\"3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\") == \"YES\"\n\nfor test_case in [(\"2 4\", \"YES\"), (\"4 4\", \"NO\"), (\"3 6\", \"YES\")]:\n    assert solution(test_case[0]) == test_case[1]\n\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\""
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 4\\n1 3 2 4\\n1 3 4 2\") == \"YES\"\nassert solution(\"4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\") == \"NO\"\nassert solution(\"3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\") == \"YES\"\n\nfrom typing import List"
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 4\\n1 3 2 4\\n1 3 4 2\") == \"YES\"\nassert solution(\"4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\") == \"NO\"\nassert solution(\"3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\") == \"YES\""
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 4\\n1 3 2 4\\n1 3 4 2\") == \"YES\"\nassert solution(\"4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\") == \"NO\"\nassert solution(\"3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\") == \"YES\""
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 'YES'"
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1 1\") == \"0\"\nassert solution(\"1 2 1\") == \"666666672\"\n"
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1 1\") == \"0\"\nassert solution(\"1 2 1\") == \"666666672\""
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1 1\") == 0\nassert solution(\"1 2 1\") == 666666672"
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1 1\") == \"0\\n\"  # Jon Snow doesn't like the arrangement if all stacks have height less than or equal to 1.\nassert solution(\"1 2 1\") == \"666666672\\n\"  # Jon Snow likes the arrangement if all stacks have height greater than or equal to 1.\nassert solution(\"3 4 1\") == \"666666672\\n\"  # Jon Snow likes the arrangement if all stacks have height greater than or equal to 1."
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1,1,1) == 0\nassert solution(1,2,1) == 666666672"
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1\") == \"0\"\nassert solution(\"1 2 1\") == \"666666672\""
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1 1\") == \"0\"\nassert solution(\"1 2 1\") == \"666666672\""
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1 1\\n\") == \"0\"\nassert solution(\"1 2 1\\n\") == \"666666672\""
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '0'"
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"0\\n\" # The first example\nassert solution(stdin) == \"666666672\\n\" # The second example"
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == 'Output\\n5'"
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"5\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"6\"\nassert solution(input()) == \"6\"\nassert solution(input()) == \"6\""
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(6, \"7 2 3 1 5 6\") == \"5\""
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"5\\n\"\n"
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"Output\""
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('6\\n7 2 3 1 5 6') == '5' # correct output\nassert solution('6\\n7 2 3 1 5 6\\n2') == '5' # correct output\nassert solution('6\\n7 2 3 1 5 6\\n4') == '5' # correct output\nassert solution('6\\n7 2 3 1 5 6\\n10') == '5' # correct output"
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n7 2 3 1 5 6') == '5\\n'\nassert solution('6\\n7 2 3 1 5 6') == '6\\n'\nassert solution('7\\n7 2 3 1 5 6') == '7\\n'\nassert solution('8\\n7 2 3 1 5 6') == '7\\n'\nassert solution('9\\n7 2 3 1 5 6') == '7\\n'"
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n7 2 3 1 5 6\") == \"5\"\nassert solution(\"6\\n7 4 3 1 5 6\") == \"1\"\nassert solution(\"6\\n7 2 3 1 5 6\") == \"5\"\nassert solution(\"6\\n7 2 3 1 5 6\") == \"5\"\nassert solution(\"6\\n7 2 3 1 5 6\") == \"5\""
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"5\""
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n7 2 3 1 5 6\") == \"5\"\nassert solution(\"4\\n2 2 2 2 2\") == \"4\"\nassert solution(\"5\\n1 2 3 4 5\") == \"5\"\nassert solution(\"3\\n1 2 3 4\") == \"4\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"5\""
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1 1 8\") == \"2\", \"Sample test 1 failed\"\nassert solution(\"4 2 2 6\") == \"3\", \"Sample test 2 failed\"\nassert solution(\"3 7 4 6\") == \"1\", \"Sample test 3 failed\""
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1 1 8\") == \"2\"\nassert solution(\"4 2 2 6\") == \"3\"\nassert solution(\"3 7 4 6\") == \"1\"\n"
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Test failed\"\nfor i in range(1, 10):\n    assert solution(input()) == output(), \"Test failed for input {}\".format(i)"
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1 1 8\") == \"2\\n\"\nassert solution(\"4 2 2 6\") == \"3\\n\"\nassert solution(\"3 7 4 6\") == \"1\\n\"\n"
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, but got: {solution(input())}\""
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1 8\") == \"2\", \"Test Case 1\"\nassert solution(\"4 2 2 6\") == \"3\", \"Test Case 2\"\nassert solution(\"3 7 4 6\") == \"1\", \"Test Case 3\""
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1 1 8\") == \"2\"\nassert solution(\"4 2 2 6\") == \"3\"\nassert solution(\"3 7 4 6\") == \"1\""
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1 1 8\") == \"2\", \"Incorrect output for the first sample test\"\nassert solution(\"4 2 2 6\") == \"3\", \"Incorrect output for the second sample test\"\nassert solution(\"3 7 4 6\") == \"1\", \"Incorrect output for the third sample test\"\n"
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1 1 8\") == \"2\\n\"\nassert solution(\"4 2 2 6\") == \"3\\n\"\nassert solution(\"3 7 4 6\") == \"1\\n\"\nassert solution(\"5 5 5 5\") == \"2\\n\"\nassert solution(\"7 5 3 1\") == \"0\\n\"\nassert solution(\"3 10 4 6\") == \"2\\n\"\nassert solution(\"4 2 6 8\") == \"1\\n\"\nassert solution(\"1 5 1 5\") == \"0\\n\""
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1 1 8\") == \"2\"\nassert solution(\"4 2 2 6\") == \"3\"\nassert solution(\"3 7 4 6\") == \"1\""
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 5\") == \"2\"\nassert solution(\"-1 4 15\") == \"4\"\nassert solution(\"0 -1 5\") == \"-1\""
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 5\") == \"2\"\nassert solution(\"-1 4 15\") == \"4\"\nassert solution(\"0 -1 5\") == \"-1\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2 5\") == \"2\"\nassert solution(\"-1 4 15\") == \"4\"\nassert solution(\"0 -1 5\") == \"-1\""
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 5\") == \"2\"\nassert solution(\"-1 4 15\") == \"4\"\nassert solution(\"0 -1 5\") == \"-1\""
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 5\") == \"2\"\nassert solution(\"-1 4 15\") == \"4\"\nassert solution(\"0 -1 5\") == \"-1\""
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"-1 4 15\") == \"4\"\nassert solution(\"0 -1 5\") == \"-1\"\nassert solution(\"1 2 5\") == \"2\"\nassert solution(\"0 -5 10\") == \"-1\""
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(str(1) + \" \" + str(2) + \" \" + str(5)) == \"2\"\nassert solution(str(-1) + \" \" + str(4) + \" \" + str(15)) == \"4\"\nassert solution(str(0) + \" \" + str(-1) + \" \" + str(5)) == \"-1\""
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 5\") == \"2\"\nassert solution(\"-1 4 15\") == \"4\"\nassert solution(\"0 -1 5\") == \"-1\"\n"
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 5\") == \"2\"\nassert solution(\"-1 4 15\") == \"4\"\nassert solution(\"0 -1 5\") == \"-1\""
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 1\\n2 1 2 3 4 3\\n\") == \"2\"\nassert solution(\"6 2\\n2 1 2 3 4 3\\n\") == \"0\"\nassert solution(\"6 1\\n1 1 2 2 3 3\\n\") == \"2\""
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 1\\n2 1 2 3 4 3\") == \"2\\n\"\nassert solution(\"6 2\\n2 1 2 3 4 3\") == \"0\\n\"\nassert solution(\"6 1\\n1 1 2 2 3 3\") == \"2\\n\""
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Test failed for input\""
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6 1\\n2 1 2 3 4 3') == '2\\n'\nassert solution('6 2\\n2 1 2 3 4 3') == '0\\n'\nassert solution('6 1\\n1 1 2 2 3 3') == '2\\n'"
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 1\\n2 1 2 3 4 3\\n\") == \"2\"\nassert solution(\"6 2\\n2 1 2 3 4 3\\n\") == \"0\"\nassert solution(\"6 1\\n1 1 2 2 3 3\\n\") == \"2\""
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(solution(solution(\"Input\\n6 1\\n2 1 2 3 4 3\\n\"))) == \"2\\n\"\nassert solution(solution(solution(\"Input\\n6 2\\n2 1 2 3 4 3\\n\"))) == \"0\\n\"\nassert solution(solution(solution(\"Input\\n6 1\\n1 1 2 2 3 3\\n\"))) == \"2\\n\""
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == output, f\"Expected {output}, got {solution(stdin)}\""
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Expected: {expected_output}, Got: {solution(input())}\"\n\ninput_data = \"\"\"6 1\n2 1 2 3 4 3\n6 2\n2 1 2 3 4 3\n6 1\n1 1 2 2 3 3\"\"\"\n\nexpected_output = \"\"\"2\n0\n2\"\"\"\n\nsolution = \"\"\"def solution(stdin: str) -> str:\n    n, I = map(int, stdin.split())\n    arr = [int(x) for x in input().split()]\n    k = int(log2(n) + 1)\n    \n    changed_elements = 0\n    for i in range(n):\n        for j in range(k):\n            if arr[i] == j:\n                continue\n            arr[i], arr[j] = arr[j], arr[i]\n            changed_elements += 1\n    \n    if changed_elements == 0:\n        return \"0\"\n    else:\n        return str(changed_elements)\"\"\""
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 1\\n2 1 2 3 4 3\\n\") == \"2\"\nassert solution(\"6 2\\n2 1 2 3 4 3\\n\") == \"0\"\nassert solution(\"6 1\\n1 1 2 2 3 3\\n\") == \"2\""
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 1\\n2 1 2 3 4 3\\n\") == \"2\\n\"\nassert solution(\"6 2\\n2 1 2 3 4 3\\n\") == \"0\\n\"\nassert solution(\"6 1\\n1 1 2 2 3 3\\n\") == \"2\\n\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"tuesday\") == \"NO\"\nassert solution(\"sunday\") == \"NO\"\nassert solution(\"saturday\") == \"YES\"\nassert solution(\"tuesday\") == \"YES\"\nassert solution(\"sunday\") == \"YES\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"tuesday\") == \"NO\"\nassert solution(\"sunday\") == \"YES\"\nassert solution(\"saturday\") == \"YES\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"tuesday\") == \"NO\"\nassert solution(\"wednesday\") == \"YES\"\nassert solution(\"thursday\") == \"YES\"\nassert solution(\"friday\") == \"YES\"\nassert solution(\"saturday\") == \"YES\"\nassert solution(\"sunday\") == \"NO\"\nassert solution(\"saturday\") == \"YES\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"tuesday\") == \"YES\"\nassert solution(\"sunday\") == \"YES\"\nassert solution(\"saturday\") == \"YES\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('monday') == 'NO'\nassert solution('sunday') == 'YES'\nassert solution('saturday') == 'YES'"
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"sunday\") == \"YES\"\nassert solution(\"saturday\") == \"YES\"\nassert solution(\"tuesday\") == \"NO\"\nassert solution(\"wednesday\") == \"YES\"\nassert solution(\"thursday\") == \"YES\"\nassert solution(\"friday\") == \"NO\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"tuesday\") == \"YES\"\nassert solution(\"sunday\") == \"NO\"\nassert solution(\"saturday\") == \"YES\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"monday\") == \"YES\"\nassert solution(\"tuesday\") == \"YES\"\nassert solution(\"sunday\") == \"NO\"\nassert solution(\"saturday\") == \"YES\"\n"
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"monday\") == \"YES\"\nassert solution(\"tuesday\") == \"NO\"\nassert solution(\"sunday\") == \"YES\"\nassert solution(\"saturday\") == \"YES\"\n"
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"tuesday\") == \"NO\"\nassert solution(\"wednesday\") == \"NO\"\nassert solution(\"thursday\") == \"NO\"\nassert solution(\"friday\") == \"NO\"\nassert solution(\"saturday\") == \"NO\"\nassert solution(\"sunday\") == \"NO\"\nassert solution(\"saturday\") == \"YES\"\nassert solution(\"tuesday\") == \"YES\"\nassert solution(\"monday\") == \"YES\""
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(35) == \"17\"\nassert solution(10000000000) == \"91\""
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(35) == '17'\nassert solution(10000000000) == '91'"
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(35) == \"17\"\nassert solution(10000000000) == \"91\""
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"35\") == \"17\"\nassert solution(\"10000000000\") == \"91\""
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(35) == \"17\"\nassert solution(10000000000) == \"91\""
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"35\") == \"17\"\nassert solution(\"10000000000\") == \"91\""
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"35\") == \"17\"\nassert solution(\"10000000000\") == \"91\""
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(35) == \"17\"\nassert solution(10000000000) == \"91\""
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\nassert solution(\"10\") == \"3\"\nassert solution(\"1234567890\") == \"33\"\nassert solution(\"9999999999\") == \"999\"\nassert solution(\"10000000000\") == \"91\""
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('AHA') == 'YES'\nassert solution('Z') == 'NO'\nassert solution('XO') == 'NO'"
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('AHA') == 'YES'\nassert solution('Z') == 'NO'\nassert solution('XO') == 'NO'"
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('AHA') == 'YES'\nassert solution('Z') == 'NO'\nassert solution('XO') == 'NO'"
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\"\n\nfrom typing import List"
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('AHA') == 'YES'\nassert solution('Z') == 'NO'\nassert solution('XO') == 'NO'"
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\"\n\nfrom typing import List"
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\""
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1 5\\n\") == \"0\\n\"\nassert solution(\"3\\n1 2 5\\n\") == \"1\\n\""
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1 5\\n\") == \"0\\n\"\nassert solution(\"3\\n1 2 5\\n\") == \"1\\n\""
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '0', 'The number of stewards with Jon Snow cannot be 0.'\nassert solution(input()) == '1', 'Jon Snow cannot support steward with strength 1.'\nassert solution(input()) == '1', 'Jon Snow cannot support steward with strength 2.'"
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1 5\\n\") == \"0\\n\"\nassert solution(\"3\\n1 2 5\\n\") == \"1\\n\""
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2\\n1 5\\n') == '0'\nassert solution('3\\n1 2 5\\n') == '1'"
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1 5\\n\") == \"0\\n\"\nassert solution(\"3\\n1 2 5\\n\") == \"1\\n\""
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 5\\n\") == \"0\"\nassert solution(\"3\\n1 2 5\\n\") == \"1\""
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1 5\") == \"0\"\nassert solution(\"3\\n1 2 5\") == \"1\""
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1 5\") == \"0\\n\"\nassert solution(\"3\\n1 2 5\") == \"1\\n\""
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1 5\\n\") == \"0\"\nassert solution(\"3\\n1 2 5\\n\") == \"1\""
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\nRU\") == \"Yes\\n\", \"Expected 'Yes', but got '{}'\".format(solution(\"2 2\\nRU\"))\nassert solution(\"1 2\\nRU\") == \"No\\n\", \"Expected 'No', but got '{}'\".format(solution(\"1 2\\nRU\"))\nassert solution(\"-1 1000000000\\nLRRLU\") == \"Yes\\n\", \"Expected 'Yes', but got '{}'\".format(solution(\"-1 1000000000\\nLRRLU\"))\nassert solution(\"0 0\\nD\") == \"Yes\\n\", \"Expected 'Yes', but got '{}'\".format(solution(\"0 0\\nD\"))"
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\nRU\") == \"Yes\\n\"\nassert solution(\"1 2\\nRU\") == \"No\\n\"\nassert solution(\"-1 1000000000\\nLRRLU\") == \"Yes\\n\"\nassert solution(\"0 0\\nD\") == \"Yes\\n\""
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 2\\nRU') == 'Yes', \"Test case 1 incorrect\"\nassert solution('1 2\\nRU') == 'No', \"Test case 2 incorrect\"\nassert solution('-1 1000000000\\nLRRLU') == 'Yes', \"Test case 3 incorrect\"\nassert solution('0 0\\nD') == 'Yes', \"Test case 4 incorrect\""
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\nRU\") == \"Yes\"\nassert solution(\"1 2\\nRU\") == \"No\"\nassert solution(\"-1 1000000000\\nLRRLU\") == \"Yes\"\nassert solution(\"0 0\\nD\") == \"Yes\""
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\nRU\") == \"Yes\"\nassert solution(\"1 2\\nRU\") == \"No\"\nassert solution(\"-1 1000000000\\nLRRLU\") == \"Yes\"\nassert solution(\"0 0\\nD\") == \"Yes\""
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\nRU\") == \"Yes\", \"Test 1 Failed\"\nassert solution(\"1 2\\nRU\") == \"No\", \"Test 2 Failed\"\nassert solution(\"-1 1000000000\\nLRRLU\") == \"Yes\", \"Test 3 Failed\"\nassert solution(\"0 0\\nD\") == \"Yes\", \"Test 4 Failed\"\n\nprint(\"All Tests Passed!\")"
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 2\\nRU') == 'Yes'\nassert solution('1 2\\nRU') == 'No'\nassert solution('-1 1000000000\\nLRRLU') == 'Yes'\nassert solution('0 0\\nD') == 'Yes'\n\nprint(\"All test cases pass\")"
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\nRU\") == \"Yes\\n\"\nassert solution(\"1 2\\nRU\") == \"No\\n\"\nassert solution(\"-1 1000000000\\nLRRLU\") == \"Yes\\n\"\nassert solution(\"0 0\\nD\") == \"Yes\\n\"\n\nassert solution(\"2 2\\nUDLR\\nRURU\") == \"Yes\\n\"\nassert solution(\"1 2\\nURDL\\nRUDR\\nURDRU\") == \"No\\n\"\nassert solution(\"-1 1000000000\\nLRRLU\\nDRDLRU\") == \"Yes\\n\"\nassert solution(\"0 0\\nURDLRU\\nDRDLUR\\nURDRDRU\") == \"No\\n\""
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\nRU\") == \"Yes\"\nassert solution(\"1 2\\nRU\") == \"No\"\nassert solution(\"-1 1000000000\\nLRRLU\") == \"Yes\"\nassert solution(\"0 0\\nD\") == \"Yes\"\n"
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 2\\nRU') == 'Yes\\n'\nassert solution('1 2\\nRU') == 'No\\n'\nassert solution('-1 1000000000\\nLRRLU') == 'Yes\\n'\nassert solution('0 0\\nD') == 'Yes\\n'"
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 3 7\") == \"1\\n\"\nassert solution(\"10   3   7\") == \"1\\n\"\nassert solution(\"314\") == \"0\\n\"\nassert solution(\"22 19 3\") == \"1\\n\"\nassert solution(\"60\\n29\\n31\\n358\") == \"1\\n\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 3 7\") == \"1\"\nassert solution(\"10   3   7\") == \"1\"\nassert solution(\"314\") == \"0\"\nassert solution(\"22 19 3\") == \"1\"\nassert solution(\"60\\n29\\n\\n31\\n\\n\\n\\n\") == \"1\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 3 7\") == \"1\\n\"\nassert solution(\"10   3   7\") == \"1\\n\"\nassert solution(\"314\") == \"0\\n\"\nassert solution(\"22 19 3\") == \"1\\n\"\nassert solution(\"60\\n29\\n   31\\n    \\n\\t\\t\\n\") == \"1\\n\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 3 7\") == \"1\\n\"\nassert solution(\"10   3   7\") == \"1\\n\"\nassert solution(\"314\") == \"0\\n\"\nassert solution(\"22 19 3\") == \"1\\n\"\nassert solution(\"60\\n29\\n   31\\n    \\n    \\n    \\n\") == \"1\\n\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('10 3 7') == '1\\n'\nassert solution('10   3   7') == '1\\n'\nassert solution('314') == '0\\n'\nassert solution('22 19 3') == '1\\n'\nassert solution('   60\\n29\\n\\t31\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t358\\n') == '1\\n'"
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 3 7\") == \"1\", \"Sample Input 1\"\nassert solution(\"10   3   7\") == \"1\", \"Sample Input 2\"\nassert solution(\"314\") == \"0\", \"Sample Input 3\"\nassert solution(\"22 19 3\") == \"1\", \"Sample Input 4\"\nassert solution(\"   60\\n29\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n"
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 3 7\") == \"1\"\nassert solution(\"10   3   7\") == \"1\"\nassert solution(\"314\") == \"0\"\nassert solution(\"22 19 3\") == \"1\"\nassert solution(\"   60\\n29\\n   31\\n   31\\n   31\") == \"1\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 3 7\") == \"1\", \"Test Case 1 Failed\"\nassert solution(\"10   3   7\") == \"1\", \"Test Case 2 Failed\"\nassert solution(\"314\") == \"0\", \"Test Case 3 Failed\"\nassert solution(\"22 19 3\") == \"1\", \"Test Case 4 Failed\"\nassert solution(\"   60\\n 29\\n\\t\\t\\t\\t31\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\") == \"1\", \"Test Case 5 Failed\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 3 7\") == \"1\"\nassert solution(\"10   3   7\") == \"1\"\nassert solution(\"314\") == \"0\"\nassert solution(\"22 19 3\") == \"1\"\nassert solution(\"   60\\n29\\n\\n31\\n\\n\\n\\n358\") == \"1\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 3 7\") == \"1\"\nassert solution(\"10   3   7\") == \"1\"\nassert solution(\"314\") == \"0\"\nassert solution(\"22 19 3\") == \"1\"\nassert solution(\"   60\\n29\\n\\t31\\n\\t\\t\\t\\t\\t\\t\\t\") == \"1\""
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"9\"\nassert solution(\"1234\") == \"9\"\nassert solution(\"12345\") == \"9\"\nassert solution(\"123456\") == \"9\"\nassert solution(\"1234567\") == \"9\"\nassert solution(\"12345678\") == \"9\"\nassert solution(\"123456789\") == \"9\"\n"
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n\") == \"9\\n\", \"Test case 1 failed.\"\nassert solution(\"1000000000\\n\") == \"1999999999\\n\", \"Test case 2 failed.\"\nassert solution(\"1000000001\\n\") == \"1000000010\\n\", \"Test case 3 failed.\"\nassert solution(\"1000000002\\n\") == \"1000000003\\n\", \"Test case 4 failed.\"\nassert solution(\"1000000003\\n\") == \"1000000004\\n\", \"Test case 5 failed.\"\nassert solution(\"1000000004\\n\") == \"1000000005\\n\", \"Test case 6 failed.\"\nassert solution(\"1000000005\\n\") == \"1000000006\\n\", \"Test case 7 failed.\"\nassert solution(\"1000000006\\n\") == \"1000000007\\n\", \"Test case 8 failed.\"\nassert solution(\"1000000007\\n\") == \"1000000008\\n\", \"Test case 9 failed.\"\n\nfor _ in range(10):\n    assert solution(str(int(input()))) == str(int(input()) + int(input()) +... + int(input()) % 10**9 + 7), \"Test case {} failed.\".format(_)\n\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n\") == \"9\\n\", \"Test case 1 failed\"\nassert solution(\"2\\n\") == \"9\\n\", \"Test case 2 failed\"\nassert solution(\"3\\n\") == \"9\\n\", \"Test case 3 failed\"\nassert solution(\"4\\n\") == \"9\\n\", \"Test case 4 failed\"\nassert solution(\"5\\n\") == \"9\\n\", \"Test case 5 failed\"\nassert solution(\"6\\n\") == \"9\\n\", \"Test case 6 failed\"\nassert solution(\"7\\n\") == \"9\\n\", \"Test case 7 failed\"\nassert solution(\"8\\n\") == \"9\\n\", \"Test case 8 failed\"\nassert solution(\"9\\n\") == \"9\\n\", \"Test case 9 failed\"\nassert solution(\"10\\n\") == \"9\\n\", \"Test case 10 failed\"\nassert solution(\"11\\n\") == \"9\\n\", \"Test case 11 failed\"\nassert solution(\"12\\n\") == \"9\\n\", \"Test case 12 failed\"\nassert solution(\"13\\n\") == \"9\\n\", \"Test case 13 failed\"\nassert solution(\"14\\n\") == \"9\\n\", \"Test case 14 failed\"\nassert solution(\"15\\n\") == \"9\\n\", \"Test case 15 failed\"\nassert solution(\"16\\n\") == \"9\\n\", \"Test case 16 failed\"\nassert solution(\"17\\n\") == \"9\\n\", \"Test case 17 failed\"\nassert solution(\"18\\n\") == \"9\\n\", \"Test case 18 failed\"\nassert solution(\"19\\n\") == \"9\\n\", \"Test case 19 failed\"\nassert solution(\"20\\n\") == \"9\\n\", \"Test case 20 failed\"\nassert solution(\"21\\n\") == \"9\\n\", \"Test case 21 failed\"\nassert solution(\"22\\n\") == \"9\\n\", \"Test case 22 failed\"\nassert solution(\"23\\n\") == \"9\\n\", \"Test case 23 failed\"\nassert solution(\"24\\n\") == \"9\\n\", \"Test case 24 failed\"\nassert solution(\"25\\n\") == \"9\\n\", \"Test case 25 failed\"\nassert solution(\"26\\n\") == \"9\\n\", \"Test case 26 failed\"\nassert solution(\"27\\n\") == \"9\\n\", \"Test case 27 failed\"\nassert solution(\"28\\n\") == \"9\\n\", \"Test case 28 failed\"\nassert solution(\"29\\n\") == \"9\\n\", \"Test case 29 failed\"\nassert solution(\"30\\n\") == \"9\\n\", \"Test case 30 failed\"\nassert solution(\"31\\n\") == \"9\\n\", \"Test case 31 failed\"\nassert solution(\"32\\n\") == \"9\\n\", \"Test case 32 failed\"\nassert solution(\"33\\n\") == \"9\\n\", \"Test case 33 failed\"\nassert solution(\"34\\n\") == \"9\\n\", \"Test case 34 failed\"\nassert solution(\"35\\n\") == \"9\\n\", \"Test case 35 failed\"\nassert solution(\"36\\n\") == \"9\\n\", \"Test case 36 failed\"\nassert solution(\"37\\n\") == \"9\\n\", \"Test case 37 failed\"\nassert solution(\"38\\n\") == \"9\\n\", \"Test case 38 failed\"\nassert solution(\"39\\n\") == \"9\\n\", \"Test case 39 failed\"\nassert solution(\"40\\n\") == \"9\\n\", \"Test case 40 failed\"\nassert solution(\"41\\n\") == \"9\\n\", \"Test case 41 failed\"\nassert solution(\"42\\n\") == \"9\\n\", \"Test case 42 failed\"\nassert solution(\"43\\n\") == \"9\\n\", \"Test case 43 failed\"\nassert solution(\"44\\n\") == \"9\\n\", \"Test case 44 failed\"\nassert solution(\"45\\n\") == \"9\\n\", \"Test case 45 failed\"\nassert solution(\"46\\n\") =="
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n\") == \"9\\n\", \"Test 1\"\nassert solution(\"2\\n\") == \"9\\n\", \"Test 2\"\nassert solution(\"3\\n\") == \"9\\n\", \"Test 3\"\nassert solution(\"4\\n\") == \"18\\n\", \"Test 4\"\nassert solution(\"5\\n\") == \"21\\n\", \"Test 5\"\nassert solution(\"6\\n\") == \"16\\n\", \"Test 6\"\nassert solution(\"7\\n\") == \"19\\n\", \"Test 7\"\nassert solution(\"8\\n\") == \"18\\n\", \"Test 8\"\nassert solution(\"9\\n\") == \"10\\n\", \"Test 9\"\n"
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"1\\n\") == \"9\\n\", \"Test Case 1\"\nassert solution(stdin=\"2\\n\") == \"9\\n\", \"Test Case 2\"\nassert solution(stdin=\"3\\n\") == \"9\\n\", \"Test Case 3\"\nassert solution(stdin=\"4\\n\") == \"9\\n\", \"Test Case 4\"\nassert solution(stdin=\"5\\n\") == \"9\\n\", \"Test Case 5\"\nassert solution(stdin=\"6\\n\") == \"9\\n\", \"Test Case 6\"\nassert solution(stdin=\"7\\n\") == \"9\\n\", \"Test Case 7\"\nassert solution(stdin=\"8\\n\") == \"9\\n\", \"Test Case 8\"\nassert solution(stdin=\"9\\n\") == \"9\\n\", \"Test Case 9\""
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n\") == \"9\\n\""
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"9\", \"The output should be 9\"\nassert solution(\"2\") == \"18\", \"The output should be 18\"\nassert solution(\"3\") == \"27\", \"The output should be 27\"\nassert solution(\"4\") == \"36\", \"The output should be 36\"\nassert solution(\"5\") == \"45\", \"The output should be 45\"\n\nprint(solution(\"6\"))"
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == \"9\""
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == \"9\""
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1') == '9'"
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n5 12 9 16 48\") == \"3\"\nassert solution(\"4\\n1 2 4 8\") == \"4\"\nassert solution(\"4\\n3 6 28 9\") == \"-1\"\n\nprint(\"All tests passed\")"
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n3 6 28 9\\n\") == \"4\\n4\\n3\\n-1\\n\"\nassert solution(\"5\\n5 12 9 16 48\\n\") == \"3\\n-1\\n\"\nassert solution(\"4\\n1 2 4 8\\n\") == \"-1\\n\""
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '-1'\nassert solution() == '3'\nassert solution() == '4'\nassert solution() == '4'\nassert solution() == '-1'"
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received: {solution(input())}\""
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n3 6 28 9\\n\") == \"4\\n3\\n\"\nassert solution(\"5\\n5 12 9 16 48\\n\") == \"3\\n\"\nassert solution(\"4\\n1 2 4 8\\n\") == \"-1\\n\""
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=input()) == expected_output, f\"Solution should return {expected_output}, but got {solution(stdin=input())}\""
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, got: {solution(input())}\""
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '4'\nassert solution() == '3'\nassert solution() == '-1'"
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Input\\n4\\n3 6 28 9\") == \"4\\n3\"\nassert solution(\"Input\\n5\\n5 12 9 16 48\") == \"3\\n-1\"\nassert solution(\"Input\\n4\\n1 2 4 8\") == \"-1\""
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == expected, f\"Expected solution {expected}, but got {solution}\""
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 2, \"Your solution is incorrect.\""
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2\\n\", \"Test 1 failed\"\nassert solution(stdin) == \"1\\n\", \"Test 2 failed\""
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\n0 5 0 2 3\\n') == '2\\n'\nassert solution('7\\n1 0 0 5 0 0 2\\n') == '1\\n'\n"
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Output\\n2\"\n\nassert solution(input()) == \"Output\\n1\""
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"5\\n0 5 0 2 3\\n7\\n1 0 0 5 0 0 2\\n\") == \"2\"\nassert solution(stdin=\"5\\n0 5 0 2 3\\n7\\n1 0 0 5 0 0 2\\n\") == \"1\""
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(5) == 2, \"Expected output: 2\"\nassert solution(7) == 1, \"Expected output: 1\""
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"Output\\n2\"\n"
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Your function is missing a test case. Please check the test cases and update the function accordingly.\""
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Test {test_num} failed. Expected output: {expected_output}, got {solution(input())}.\""
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(5) == 2\nassert solution(7) == 1"
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(4) == 2, \"Expected 2, got {}\".format(solution(4))\nassert solution(5) == 5, \"Expected 5, got {}\".format(solution(5))"
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n\") == \"2\\n\"\nassert solution(\"5\\n\") == \"5\\n\""
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(4) == 2\nassert solution(5) == 5"
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(4) == 2, \"Test Case 1\"\nassert solution(5) == 5, \"Test Case 2\""
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\") == \"2\\n\"\nassert solution(\"5\") == \"5\\n\""
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(4) == 2\nassert solution(5) == 5"
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"5\""
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n') == '2\\n'\nassert solution('5\\n') == '5\\n'"
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output() for input, output in [(\"4\\n\", \"2\\n\"), (\"5\\n\", \"5\\n\")]"
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n\") == \"2\"\nassert solution(\"5\\n\") == \"5\""
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 2 2\\n1 3 4 5 2\\n5 3 2 1 4\\n\") == \"18\\n3 4 \\n1 5 \\n\"\nassert solution(\"4 2 2\\n10 8 8 3\\n10 7 9 4\\n\") == \"31\\n1 2 \\n3 4 \\n\"\nassert solution(\"5 3 1\\n5 2 5 1 7\\n6 3 1 6 3\\n\") == \"23\\n1 3 5 \\n4\\n\""
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 2 2\\n1 3 4 5 2\\n5 3 2 1 4\") == 18\nassert solution(\"4 2 2\\n10 8 8 3\\n10 7 9 4\") == 31\nassert solution(\"5 3 1\\n5 2 5 1 7\\n6 3 1 6 3\") == 23"
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Your solution is incorrect. Please see the examples provided to get a starting point.\""
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 2 2\\n1 3 4 5 2\\n5 3 2 1 4') == '18\\n3 4\\n1 5\\n'\nassert solution('4 2 2\\n10 8 8 3\\n10 7 9 4') == '31\\n1 2\\n3 4\\n'\nassert solution('5 3 1\\n5 2 5 1 7\\n6 3 1 6 3') == '23\\n1 3 5\\n4'"
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 2 2\\n1 3 4 5 2\\n5 3 2 1 4\\n\") == \"18\\n3 4\\n1 5\\n\"\nassert solution(\"4 2 2\\n10 8 8 3\\n10 7 9 4\\n\") == \"31\\n1 2\\n3 4\\n\"\nassert solution(\"5 3 1\\n5 2 5 1 7\\n6 3 1 6 3\\n\") == \"23\\n1 3 5\\n4\\n\""
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n5 2 2\n1 3 4 5 2\n5 3 2 1 4\n\"\"\") == \"\"\"\n18\n3 4 \n1 5 \n\"\"\"\n\nassert solution(\"\"\"\n4 2 2\n10 8 8 3\n10 7 9 4\n\"\"\") == \"\"\"\n31\n1 2 \n3 4 \n1 5 \n\"\"\"\n\nassert solution(\"\"\"\n5 3 1\n5 2 5 1 7\n6 3 1 6 3\n\"\"\") == \"\"\"\n23\n1 3 5 \n\"\"\""
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 2 2\\n1 3 4 5 2\\n5 3 2 1 4\") == \"18\\n3 4 \\n1 5 \\n\", \"Example 1\"\nassert solution(\"4 2 2\\n10 8 8 3\\n10 7 9 4\") == \"31\\n1 2 \\n3 4 \\n\", \"Example 2\"\nassert solution(\"5 3 1\\n5 2 5 1 7\\n6 3 1 6 3\") == \"23\\n1 3 5 \\n4\", \"Example 3\""
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2 2\\n1 3 4 5 2\\n5 3 2 1 4\\n\") == \"18\\n3 4\\n1 5\\n\"\nassert solution(\"4 2 2\\n10 8 8 3\\n10 7 9 4\\n\") == \"31\\n1 2\\n3 4\\n\"\nassert solution(\"5 3 1\\n5 2 5 1 7\\n6 3 1 6 3\\n\") == \"23\\n1 3 5\\n4\\n\""
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 18\nassert solution() == 3 4\nassert solution() == 1 5"
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2 2\\n1 3 4 5 2\\n5 3 2 1 4\") == \"18\\n3 4 \\n1 5 \\n\", \"Test 1\"\nassert solution(\"4 2 2\\n10 8 8 3\\n10 7 9 4\") == \"31\\n1 2 \\n3 4 \\n\", \"Test 2\"\nassert solution(\"5 3 1\\n5 2 5 1 7\\n6 3 1 6 3\") == \"23\\n1 3 5 \\n4\\n\", \"Test 3\"\n"
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"Yes\\naa\" # pass\nassert solution() == \"No\" # pass\nassert solution() == \"No\" # pass"
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"tests/test_cases/ex3.txt\", \"r\")) == \"Yes\"\nassert solution(open(\"tests/test_cases/ex4.txt\", \"r\")) == \"No\"\n"
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"Yes\" # Check if the solution is correct."
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 'Yes\\naa\\nNo\\n'\n"
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1\\n1 2\\n\") == \"Yes\\naa\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\\n\") == \"No\""
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1\\n1 2\\n\") == \"Yes\\na\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\\n\") == \"No\""
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Input\\n2 1\\n1 2\\n\\nInput\\n4 3\\n1 2\\n1 3\\n1 4\\n\\nOutput\\nNo\\n\") == \"Yes\\na\\n\"\nassert solution(\"Input\\n3 2\\n1 2\\n1 3\\n\\nOutput\\nYes\\naaa\\n\") == \"No\\n\""
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(r'''\n    2 1\n    1 2\n''') == 'Yes\\na'\n\nassert solution(r'''\n    4 3\n    1 2\n    1 3\n    1 4\n''') == 'No'"
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aa\") == \"Yes\"\nassert solution(\"aa\") == \"aa\"\nassert solution(\"aa\") == \"aa\"\nassert solution(\"aa\") == \"aa\"\nassert solution(\"aa\") == \"aa\""
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1\\n1 2\") == \"Yes\\na\\n\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\") == \"No\""
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"7\", \"Incorrect output.\""
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"7\", \"The solution is not correct.\""
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 1 1\\n1 0 1\\n1 1 0\\n3\") == \"7\"\nassert solution(\"0 2 2\\n1 0 100\\n1 2 0\\n3\") == \"19\"\nassert solution(\"0 2 1\\n1 0 100\\n1 2 0\\n5\") == \"87\"\n"
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, but got {solution(stdin)}\""
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(0,1,1) == 7, \"Test 1\"\nassert solution(0,2,2) == 19, \"Test 2\"\nassert solution(0,2,1) == 87, \"Test 3\""
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('0 1 1\\n1 0 1\\n1 1 0\\n3\\n') == '7'\nassert solution('0 2 2\\n1 0 100\\n1 2 0\\n3\\n') == '19'\nassert solution('0 2 1\\n1 0 100\\n1 2 0\\n5\\n') == '87'"
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('0 1 1\\n1 0 1\\n1 1 0\\n3\\n') == '7'\nassert solution('0 2 2\\n1 0 100\\n1 2 0\\n3\\n') == '19'\nassert solution('0 2 1\\n1 0 100\\n1 2 0\\n5\\n') == '87'"
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 7, \"Incorrect output\"\nassert solution() == 19, \"Incorrect output\"\nassert solution() == 87, \"Incorrect output\""
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 1 1\\n1 0 1\\n1 1 0\\n3\\n\") == \"7\\n\"\nassert solution(\"0 2 2\\n1 0 100\\n1 2 0\\n3\\n\") == \"19\\n\"\nassert solution(\"0 2 1\\n1 0 100\\n1 2 0\\n5\\n\") == \"87\\n\"\n"
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 1 1\\n1 0 1\\n1 1 0\\n3\") == \"7\"\nassert solution(\"0 2 2\\n1 0 100\\n1 2 0\\n3\") == \"19\"\nassert solution(\"0 2 1\\n1 0 100\\n1 2 0\\n5\") == \"87\""
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Bulbbasaur\") == \"1\"\nassert solution(\"F\") == \"0\"\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == \"2\""
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Bulbbasaur\") == \"1\"\nassert solution(\"F\") == \"0\"\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == \"2\""
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Bulbbasaur\") == 1\nassert solution(\"F\") == 0\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == 2"
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('Bulbbasaur') == '1'\nassert solution('F') == '0'\nassert solution('aBddulbasaurrgndgbualdBdsagaurrgndbb') == '2'"
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('Bulbbasaur') == '1'\nassert solution('F') == '0'\nassert solution('aBddulbasaurrgndgbualdBdsagaurrgndbb') == '2'\n"
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('Bulbbasaur') == '1'\nassert solution('F') == '0'\nassert solution('aBddulbasaurrgndgbualdBdsagaurrgndbb') == '2'"
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Bulbbasaur\") == \"1\"\nassert solution(\"F\") == \"0\"\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == \"2\""
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Bulbbasaur\") == \"1\"\nassert solution(\"F\") == \"0\"\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == \"2\""
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Bulbbasaur\") == 1\nassert solution(\"F\") == 0\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == 2"
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Bulbbasaur\") == \"1\"\nassert solution(\"F\") == \"0\"\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == \"2\""
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 3\\narc\\nrac\\n') == 'YES'\nassert solution('2 3\\ncba\\nbab\\n') == 'NO'\n"
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"YES\""
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Solution is incorrect. Expected '{output()}', got '{solution(input())}'.\""
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 3\\narc\\nrac') == 'YES'\nassert solution('2 3\\nabc\\nxyz') == 'NO'\nassert solution('3 4\\n123\\n456') == 'NO'\nassert solution('2 2\\nabc\\ndef') == 'YES'"
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\narc\\nrac\") == \"YES\"\nassert solution(\"2 3\\nbla\\nabc\") == \"NO\""
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\narc\\nrac\\n\") == \"YES\"\nassert solution(\"2 3\\nabc\\nbcd\\n\") == \"NO\"\n\nfrom typing import List"
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 3\\narc\\nrac') == 'YES'\nassert solution('2 3\\nabc\\nbcd') == 'NO'\nassert solution('3 3\\nabc\\nbcd') == 'NO'"
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\narc\\nrac\") == \"YES\"\nassert solution(\"2 3\\nabc\\ndef\") == \"NO\"\nassert solution(\"3 3\\nabc\\ndef\") == \"YES\""
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\narc\\nrac\") == \"YES\"\nassert solution(\"4 3\\nabc\\nbcd\") == \"NO\"\nassert solution(\"5 3\\nabc\\nxyz\") == \"YES\"\nassert solution(\"1 5\\nabc\\nxyz\") == \"YES\"\nassert solution(\"3 4\\nbcd\\nxyz\") == \"NO\""
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"2 3\\narc\\nrac\\n\") == \"YES\\n\"\nassert solution(stdin=\"4 3\\npao\\ncar\\n\") == \"NO\\n\"\nassert solution(stdin=\"5 5\\nabc\\ndef\\n\") == \"YES\\n\""
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\\n\") == \"4\\n\"\nassert solution(\"4 111\\n1111\\n10111\\n10010\\n\") == \"4\\n\"\nassert solution(\"2 111\\n1111\\n10111\\n10010\\n\") == \"1\\n\"\nassert solution(\"1 111\\n1111\\n10111\\n10010\\n\") == \"0\\n\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\\n2\\n\") == \"3\\n\"\n\nfrom functools import reduce"
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\"\nassert solution(\"2 3\\n5 7\\n1 2\") == \"3\"\nassert solution(\"3 5\\n8 9\\n0 1\") == \"4\"\nassert solution(\"3 7\\n4 3\\n5 6\") == \"0\"\n\nfrom functools import lru_cache\n\n@lru_cache(maxsize=None)\n"
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\\n\"\nassert solution(\"2 111\\n1111\\n10111\\n10010\") == \"3\\n\""
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n3 111\n1111\n10111\n10010\n\"\"\") == \"4\\n\"\n\nassert solution(\n\"\"\"\n4 222\n1111\n1111\n1111\n\"\"\") == \"0\\n\"\n\nassert solution(\n\"\"\"\n6 333\n1001\n0100\n0110\n1010\n1100\n\"\"\") == \"1\\n\"\n\nassert solution(\n\"\"\"\n8 444\n1111\n10101\n01110\n10110\n10000\n\"\"\") == \"1\\n\""
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\\n\") == \"4\\n\"\nassert solution(\"5 10010\\n11111\\n10111\\n10010\\n\") == \"4\\n\"\nassert solution(\"5 111\\n11111\\n10111\\n10010\\n\") == \"4\\n\""
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 111\\n1111\\n10111\\n10010') == '4\\n'\nassert solution('3 110\\n1010\\n1011\\n00101') == '2\\n'\nassert solution('3 110\\n1010\\n1011\\n00101') == '4\\n'\nassert solution('3 111\\n1111\\n10111\\n10010') == '4\\n'\nassert solution('3 111\\n1111\\n10111\\n10010') == '4\\n'"
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\"\nassert solution(\"5 111\\n1111\\n10111\\n10010\") == \"4\"\nassert solution(\"5 111\\n1111\\n1111\\n10010\") == \"6\"\n"
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\\n\"\nassert solution(\"10 1\\n000\\n010\\n100\") == \"1\\n\"\nassert solution(\"1 1\\n00\\n10\\n01\") == \"3\\n\"\nassert solution(\"1 1\\n001\\n011\\n110\") == \"0\\n\"\nassert solution(\"2 2\\n01\\n10\\n11\\n10\\n01\\n00\") == \"3\\n\""
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\\n\") == \"4\\n\"\nassert solution(\"2 111\\n1111\\n10111\\n10010\\n\") == \"2\\n\"\nassert solution(\"2 111\\n1111\\n10111\\n10010\\n3 111\\n1111\\n10111\\n10010\\n\") == \"2\\n\"\nassert solution(\"2 111\\n1111\\n10111\\n10010\\n3 111\\n1111\\n10111\\n10010\\n4 111\\n1111\\n10111\\n10010\\n\") == \"4\\n\"\n"
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 111\\n1111\\n10111\\n10010\\n') == '4\\n'\nassert solution('3 111\\n1111\\n10111\\n10010\\n') == '4\\n'\nassert solution('3 111\\n1111\\n10111\\n10010\\n') == '4\\n'\nassert solution('3 111\\n1111\\n10111\\n10010\\n') == '4\\n'\nassert solution('3 111\\n1111\\n10111\\n10010\\n') == '4\\n'"
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"11 11 5\") == \"1\\n\"\nassert solution(\"11 2 3\") == \"-1\\n\"\nassert solution(\"10 10 10\") == \"1\\n\"\nassert solution(\"10 10 0\") == \"-1\\n\"\nassert solution(\"1 100 100\") == \"2\\n\"\nassert solution(\"1 100 0\") == \"-1\\n\""
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('11 11 5') == '1\\n'\nassert solution('11 2 3') == '-1\\n'"
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 2 3\") == \"-1\""
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('11 11 5') == '1'\nassert solution('11 2 3') == '-1'"
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"11 11 5\\n\") == \"1\\n\"\nassert solution(\"11 2 3\\n\") == \"-1\\n\""
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"11 11 5\") == \"1\\n\"\nassert solution(\"11 2 3\") == \"-1\\n\""
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == 'Output'"
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 2 3\") == \"-1\"\n\nfrom typing import List"
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 2 3\") == \"-1\"\nassert solution(\"5 10 3\") == \"4\"\nassert solution(\"2 6 3\") == \"2\"\nassert solution(\"3 6 9\") == \"2\"\nassert solution(\"9 6 3\") == \"2\""
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Test {test_case_num} failed\"\n"
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\"\n"
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('abacaba') == 'YES'\nassert solution('jinotega') == 'NO'"
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('abacaba') == 'YES'\nassert solution('jinotega') == 'NO'"
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('abacaba') == 'YES'\nassert solution('jinotega') == 'NO'"
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2 6\") == \"6.5\"\nassert solution(\"4 2 20\") == \"20.0\"\n\nfrom math import ceil"
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3, 2, 6) == \"6.5\"\nassert solution(4, 2, 20) == \"20.0\""
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 2 20') == '20.0'\nassert solution('3 2 6') == '6.5'"
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2 6\") == \"6.5\"\nassert solution(\"4 2 20\") == \"20.0\"\n\nfrom typing import List"
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2 6\") == \"6.5\"\nassert solution(\"4 2 20\") == \"20.0\""
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 2 6') == '6.5'\nassert solution('4 2 20') == '20.0'\n\nfrom typing import List"
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 2 6') == '6.5'\nassert solution('4 2 20') == '20.0'"
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"6.5\"\nassert solution(stdin) == \"20.0\""
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Test failed. Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n..\\n..\\n\") == \"2\"\nassert solution(\"4 4\\n....\\n.#.#\\n....\\n.#..\\n\") == \"1\"\nassert solution(\"3 4\\n....\\n.##.\\n....\\n\") == \"2\""
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 2\\n..\\n..\\n\\n4 4\\n....\\n#.#. \\n....\\n.#..') == '2'\nassert solution('4 4\\n....\\n.##. \\n....\\n') == '1'\nassert solution('3 4\\n....\\n.##. \\n....\\n') == '2'\n\nSolution:\n\nWe can solve this problem by calculating the minimum number of cells Vasya has to turn into impassable forests in order to prevent Vasya from reaching the treasure. To do this, we can use a depth-first search algorithm to find all the cells that are impassable and then find the smallest possible number of cells that have to be turned into impassable forests to get Vasya to reach the treasure.\n\nThe depth-first search algorithm works by iterating through the island and marking cells as visited or not. If a cell is not visited, we can start a new level and mark it as visited. We can then mark all the neighboring cells as visited as well and continue the depth-first search recursively until we reach the treasure.\n\nOnce we reach the treasure, we can return the minimum number of cells Vasya has to turn into impassable forests to prevent them from reaching the treasure.\n\nHere's the Python code to implement the solution:\n\n```python\n"
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"2\\n\""
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\n..\\n..\") == \"2\\n\"\nassert solution(\"4 4\\n....\\n#.#.\\n....\\n.#..\\n\") == \"1\\n\"\nassert solution(\"3 4\\n....\\n.##.\\n....\\n\") == \"2\\n\""
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\n..\\n..\\n\") == \"2\"\nassert solution(\"4 4\\n....\\n#.#.\\n....\\n.#..\\n\") == \"1\"\nassert solution(\"3 4\\n....\\n.##.\\n....\\n\") == \"2\"\nassert solution(\"1 1\\n.##\\n...\\n\") == \"1\""
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 2\\n..\\n..\\n\\n4 4\\n....\\n#.#.\\n....\\n.#..\\n') == '2'\nassert solution('4 4\\n....\\n.##.\\n....\\n\\n3 4\\n....\\n.##.\\n....\\n') == '1'\nassert solution('3 4\\n....\\n.##.\\n....\\n\\n') == '2'\n"
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n..\\n..\\n\") == \"2\"\nassert solution(\"4 4\\n....\\n#.#.\\n....\\n.#..\\n\") == \"1\"\nassert solution(\"3 4\\n....\\n.##.\\n....\\n\") == \"2\"\n\nfrom collections import defaultdict"
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\n..\\n..\\n\\n4 4\\n....\\n#.#.\\n....\\n.#..\") == \"2\"\nassert solution(\"4 4\\n....\\n.##.\\n....\\n\") == \"1\"\nassert solution(\"3 4\\n....\\n.##.\\n....\\n\") == \"2\"\nassert solution(\"5 5\\n....\\n#....\\n....\\n\") == \"3\"\nassert solution(\"6 6\\n....\\n.##...\\n....\\n\") == \"4\"\nassert solution(\"7 7\\n....\\n#...#\\n....\\n\") == \"5\"\nassert solution(\"8 8\\n....\\n....#\\n....\\n\") == \"6\"\nassert solution(\"9 9\\n....\\n...##\\n....\\n\") == \"7\"\nassert solution(\"10 10\\n....\\n...##\\n....\\n\") == \"8\"\nassert solution(\"11 11\\n....\\n...##\\n....\\n\") == \"9\"\nassert solution(\"12 12\\n....\\n...##\\n....\\n\") == \"10\"\nassert solution(\"13 13\\n....\\n...##\\n....\\n\") == \"11\"\nassert solution(\"14 14\\n....\\n...##\\n....\\n\") == \"12\"\nassert solution(\"15 15\\n....\\n...##\\n....\\n\") == \"13\"\nassert solution(\"16 16\\n....\\n...##\\n....\\n\") == \"14\"\nassert solution(\"17 17\\n....\\n...##\\n....\\n\") == \"15\"\nassert solution(\"18 18\\n....\\n...##\\n....\\n\") == \"16\"\nassert solution(\"19 19\\n....\\n...##\\n....\\n\") == \"17\"\nassert solution(\"20 20\\n....\\n...##\\n....\\n\") == \"18\"\nassert solution(\"21 21\\n....\\n...##\\n....\\n\") == \"19\"\nassert solution(\"22 22\\n....\\n...##\\n....\\n\") == \"20\"\nassert solution(\"23 23\\n....\\n...##\\n....\\n\") == \"21\"\nassert solution(\"24 24\\n....\\n...##\\n....\\n\") == \"22\"\nassert solution(\"25 25\\n....\\n...##\\n....\\n\") == \"23\"\nassert solution(\"26 26\\n....\\n...##\\n....\\n\") == \"24\"\nassert solution(\"27 27\\n....\\n...##\\n....\\n\") == \"25\"\nassert solution(\"28 28\\n....\\n...##\\n....\\n\") == \"26\"\nassert solution(\"29 29\\n....\\n...##\\n....\\n\") == \"27\"\nassert solution(\"30 30\\n....\\n...##\\n....\\n\") == \"28\"\nassert solution(\"31 31\\n....\\n...##\\n....\\n\") == \"29\"\nassert solution(\"32 32\\n....\\n...##\\n....\\n\") == \"30\"\nassert solution(\"33 33\\n....\\n...##\\n....\\n\") == \"31\"\nassert solution(\"34 34\\n....\\n...##\\n....\\n\") == \"32\"\nassert solution(\"35 35\\n....\\n...##\\n....\\n\") == \"33\"\nassert solution(\"36 36\\n....\\n...##\\n....\\n\") == \"34\"\nassert solution(\"37 37\\n....\\n...##\\n....\\n\") == \"35\"\nassert solution(\"38 38\\n....\\n...##\\n....\\n\") == \"36\"\nassert solution(\"39 39\\n....\\n...##\\n....\\n\") == \"37\"\nassert solution(\"40 40\\n....\\"
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(r'2 2\\n..\\n..\\n') == '2'\nassert solution(r'4 4\\n....\\n#.#.\\n....\\n.#..\\n') == '1'\nassert solution(r'3 4\\n....\\n.##.\\n....\\n') == '2'"
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"1\\n2\""
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 1 3\") == \"6\\n\", \"Your solution is incorrect.\""
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 1 3\") == \"6\\n\"\nassert solution(\"5\\n1 1 1 1 2\") == \"9\\n\"\nassert solution(\"6\\n2 2 3\") == \"10\\n\"\nassert solution(\"7\\n1 2 1 3\") == \"28\\n\"\nassert solution(\"8\\n1 2 2 1\") == \"47\\n\"\nassert solution(\"9\\n1 1 2 2 3\") == \"145\\n\"\nassert solution(\"10\\n1 1 3 3 3\") == \"162\\n\"\nassert solution(\"11\\n1 1 1 1 1\") == \"4688\\n\"\nassert solution(\"12\\n1 1 2 2 1\") == \"65536\\n\"\nassert solution(\"13\\n2 2 2 1 1\") == \"65536\\n\"\nassert solution(\"14\\n1 1 3 3 2\") == \"131072\\n\"\nassert solution(\"15\\n1 1 1 1 2\") == \"536870912\\n\"\nassert solution(\"16\\n1 1 2 2 3\") == \"1073741824\\n\"\nassert solution(\"17\\n1 1 3 3 1\") == \"2147483648\\n\"\nassert solution(\"18\\n1 1 1 1 3\") == \"16777216\\n\"\nassert solution(\"19\\n1 1 1 1 1\") == \"33554432\\n\"\nassert solution(\"20\\n1 1 2 2 2\") == \"2147483648\\n\"\nassert solution(\"21\\n1 1 3 3 2\") == \"4294967296\\n\"\nassert solution(\"22\\n1 1 1 1 1\") == \"8589934592\\n\"\nassert solution(\"23\\n1 1 2 2 1\") == \"17179869184\\n\"\nassert solution(\"24\\n1 1 3 3 3\") == \"34359738368\\n\"\nassert solution(\"25\\n1 1 1 1 1\") == \"68719476736\\n\"\nassert solution(\"26\\n1 1 2 2 2\") == \"536870912\\n\"\nassert solution(\"27\\n1 1 3 3 1\") == \"137438953472\\n\"\nassert solution(\"28\\n1 1 1 1 3\") == \"274877906944\\n\"\nassert solution(\"29\\n1 1 1 1 1\") == \"549755813888\\n\"\nassert solution(\"30\\n1 1 2 2 2\") == \"1099511627776\\n\"\nassert solution(\"31\\n1 1 3 3 3\") == \"2199023255552\\n\"\nassert solution(\"32\\n1 1 1 1 1\") == \"4398046511104\\n\"\nassert solution(\"33\\n1 1 2 2 1\") == \"8796093022208\\n\"\nassert solution(\"34\\n1 1 3 3 2\") == \"17592186044416\\n\"\nassert solution(\"35\\n1 1 1 1 3\") == \"35184372088832\\n\"\nassert solution(\"36\\n1 1 1 1 1\") == \"70368744177664\\n\"\nassert solution(\"3"
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 1 3\") == \"6\"\nassert solution(\"5\\n1 3 2 4 5\") == \"10\""
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 1 3\") == \"6\\n\"\nassert solution(\"4\\n1 1 1 2 2 1 3 3 1\") == \"60\\n\"\nassert solution(\"3\\n1 1 2 3\") == \"6\\n\"\nassert solution(\"3\\n1 1 2 3 4 5 6 7 8 9\") == \"773\\n\"\nassert solution(\"5\\n1 1 1 1 1 1 1\") == \"256\\n\""
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 1 3\") == \"6\\n\""
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n1 1 3') == '6'\nassert solution('4\\n3 2 1 2') == '10'\nassert solution('5\\n4 4 3 2 1') == '15'\nassert solution('6\\n4 3 2 1 1') == '18'\nassert solution('7\\n5 5 4 3 2 1') == '25'\nassert solution('8\\n5 4 3 2 1 1') == '30'\nassert solution('9\\n6 5 4 3 2 1 1') == '42'\nassert solution('10\\n6 4 3 2 1 1 1') == '54'\nassert solution('11\\n6 5 5 4 3 2 1 1') == '66'\nassert solution('12\\n6 5 5 4 3 2 1 1 1') == '84'\nassert solution('13\\n6 5 5 4 3 2 1 1 1 1') == '96'\nassert solution('14\\n6 5 5 4 3 2 1 1 1 1 1') == '126'\nassert solution('15\\n6 5 5 4 3 2 1 1 1 1 1 1') == '144'\nassert solution('16\\n6 5 5 4 3 2 1 1 1 1 1 1 1') == '162'\nassert solution('17\\n6 5 5 4 3 2 1 1 1 1 1 1 1 1') == '192'\nassert solution('18\\n6 5 5 4 3 2 1 1 1 1 1 1 1 1 1') == '224'\nassert solution('19\\n6 5 5 4 3 2 1 1 1 1 1 1 1 1 1 1') == '256'\nassert solution('20\\n6 5 5 4 3 2 1 1 1 1 1 1 1 1 1 1 1') == '296'\nassert solution('21\\n6 5 5 4 3 2 1 1 1 1 1 1 1 1 1 1 1 1') == '344'\nassert solution('22\\n6 5 5 4 3 2 1 1 1 1 1 1 1 1 1 1 1 1 1') == '396'\nassert solution('23\\n6 5 5 4 3 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1') == '452'\nassert solution('24\\n6 5 5 4 3 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1') == '512'\nassert solution('25\\n6 5 5 4 3 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1') == '584'\nassert solution('26\\n6 5 5 4 3 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1') == '660'\nassert solution('27\\n6 5 5 4 3 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1') == '748'\nassert solution('28\\n6 5 5 4 3 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 "
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 1 3\\n\") == \"6\\n\""
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 1 3\") == \"6\\n\", \"The output is incorrect.\""
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 1 3\") == \"6\\n\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 1 3\") == \"6\"\n"
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=input()) == \"\"\"11\n3\n1\n4\n2\"\"\""
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 4 3 7 5\") == \"11\\n3\\n1\\n4\\n2\""
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"5\\n1 4 3 7 5\") == \"11\\n3\\n1\\n4\\n2\"\nassert solution(stdin=\"5\\n1 4 3 7 5\") == \"11\\n3\\n1\\n4\\n2\"\nassert solution(stdin=\"5\\n1 4 3 7 5\") == \"11\\n3\\n1\\n4\\n2\""
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 4 3 7 5\") == \"11\\n3\\n1\\n4\\n2\"\nassert solution(\"1 2 3 4 5\") == \"11\\n3\\n1\\n2\"\nassert solution(\"1 4 6 8 10\") == \"12\\n3\\n1\\n4\"\nassert solution(\"1 2 3 6 8 10\") == \"12\\n3\\n1\\n2\"\nassert solution(\"1 5 9 10\") == \"15\\n3\\n1\\n5\""
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"\"\"11\n3\n1\n4\n2\n\"\"\""
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 4 3 7 5\") == \"11\\n3\\n1\\n4\\n2\\n\""
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 4 3 7 5\") == \"11\\n3\\n1\\n4\\n2\"\nassert solution(\"5\\n1 4 3 7 5\") == \"11\\n3\\n1\\n4\\n2\""
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 4 3 7 5\\n\") == \"11\\n3\\n1\\n4\\n2\\n\""
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 4 3 7 5\") == \"11\\n3\\n1\\n4\\n2\"\nassert solution(\"5\\n1 4 3 7 6\") == \"11\\n3\\n1\\n4\\n2\"\nassert solution(\"5\\n1 4 3 7 5\\n2 6 5 4 3\") == \"11\\n3\\n1\\n4\\n2\"\nassert solution(\"5\\n1 4 3 7 5\\n2 6 5 4 3\\n1 6 5 4 3\") == \"11\\n3\\n1\\n4\\n2\"\nassert solution(\"5\\n1 4 3 7 5\\n2 6 5 4 3\\n1 6 5 4 3\\n2 6 5 4 3\") == \"11\\n3\\n1\\n4\\n2\"\nassert solution(\"5\\n1 4 3 7 5\\n2 6 5 4 3\\n1 6 5 4 3\\n2 6 5 4 3\\n1 6 5 4 3\") == \"11\\n3\\n1\\n4\\n2\""
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(6, 1) == \"10.25\"\nassert solution(6, 2) == \"10.3\"\nassert solution(3, 100) == \"9.2\""
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 1\\n10.245\") == \"10.25\\n\"\nassert solution(\"6 2\\n10.245\") == \"10.3\\n\"\nassert solution(\"3 100\\n9.2\") == \"9.2\\n\""
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"10.25\", \"Expected '10.25', got '{}'.\".format(solution(input()))"
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 1\\n10.245\\n\") == \"10.25\\n\"\nassert solution(\"6 2\\n10.245\\n\") == \"10.3\\n\"\nassert solution(\"3 100\\n9.2\\n\") == \"9.2\\n\""
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"The given solution is wrong.\\nExpected: {output}\\nActual: {solution(input())}\""
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(r'6 1') == r'10.25'\nassert solution(r'6 2') == r'10.3'\nassert solution(r'3 100') == r'9.2'"
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '10.25'"
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 1\\n10.245\") == \"10.25\"\nassert solution(\"6 2\\n10.245\") == \"10.3\"\nassert solution(\"3 100\\n9.2\") == \"9.2\""
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 1\\n10.245\") == \"10.25\"\nassert solution(\"6 2\\n10.245\") == \"10.3\"\nassert solution(\"3 100\\n9.2\") == \"9.2\""
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 1\\n10.245\\n\") == \"10.25\\n\"\nassert solution(\"6 2\\n10.245\\n\") == \"10.3\\n\"\nassert solution(\"3 100\\n9.2\\n\") == \"9.2\\n\""
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"\nassert solution(\"1 2 2 1\") == \"0110\""
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4') == 'Impossible'\nassert solution('1 2 2 1') == '0110'"
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"\n\nassert solution(\"1 2 2 1\") == \"0110\""
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Impossible\"\nassert solution(\"1 2 2 1\") == \"0110\""
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"\nassert solution(\"1 2 2 1\") == \"0110\""
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"\n\nassert solution(\"1 2 2 1\") == \"0110\""
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"\nassert solution(\"1 2 2 1\") == \"0110\""
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"\nassert solution(\"1 2 2 1\") == \"0110\""
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"\nassert solution(\"1 2 2 1\") == \"0110\"\n"
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"\nassert solution(\"1 2 2 1\") == \"0110\""
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7\\n*..P*P*\\n\") == \"3\"\nassert solution(\"10\\n.**PP.*P.*\\n\") == \"2\"\n"
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"7\n*..P*P*\"\"\") == \"3\"\nassert solution(\"\"\"10\n.**PP.*P.*\"\"\") == \"2\""
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(solution_input) == solution_output, f\"Solution should return {solution_output}, not {solution(solution_input)}\""
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '3'"
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"output\""
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7\\n*..P*P*\\n\") == \"3\\n\"\nassert solution(\"10\\n.**PP.*P.*\\n\") == \"2\\n\""
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(solution(solution(solution(solution(solution(\"Input\\n7\\n*..P*P*\")))))) == \"Output\\n3\"\nassert solution(solution(solution(solution(solution(solution(\"Input\\n10\\n.**PP.*P.*\")))))) == \"Output\\n2\""
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '3'\n"
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Output\", \"Test failed\"\n"
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"7\n*..P*P*\"\"\") == \"3\"\nassert solution(\"\"\"10\n.**PP.*P.*\"\"\") == \"2\""
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1') == '4\\n'\nassert solution('2') == '8\\n'\nassert solution('3') == '16\\n'"
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Expected {} but got {}\".format(output(), solution(input()))"
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == 4\nassert solution(2) == 8\nassert solution(3) == 16"
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == 4\nassert solution(2) == 8\nassert solution(3) == 16"
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"4\"\nassert solution(\"2\") == \"8\"\nassert solution(\"3\") == \"16\"\n"
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1') == '4'\nassert solution('2') == '8'\nassert solution('3') == '16'"
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == '4'\nassert solution(2) == '8'\nassert solution(3) == '16'"
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '4', \"Incorrect output. Please fix the code.\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == 4\nassert solution(2) == 8\nassert solution(3) == 16"
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n\") == \"4\\n\"\nassert solution(\"2\\n\") == \"8\\n\"\nassert solution(\"3\\n\") == \"16\\n\""
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 10 5 5 2 1\") == \"1 3 9 7\"\nassert solution(\"100 100 52 50 46 56\") == \"17 8 86 92\""
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"Input\") == \"Output\"\n\nfrom typing import List"
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"9 9 5 5 2 1\") == \"1 3 9 7\\n\"\nassert solution(\"100 100 52 50 46 56\") == \"17 8 86 92\\n\""
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1 1 1 1 1\") == \"1 3 9 7\"\nassert solution(\"100 100 52 50 46 56\") == \"17 8 86 92\""
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution('9 9 5 5 2 1') == '1 3 9 7'\\nassert solution('100 100 52 50 46 56') == '17 8 86 92'\\n\"\n"
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('9 9 5 5 2 1') == '1 3 9 7'\nassert solution('100 100 52 50 46 56') == '17 8 86 92'\n\nfrom typing import List"
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"\"\"1 3 9 7\n17 8 86 92\"\"\""
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"9 9 5 5 2 1\") == \"1 3 9 7\"\nassert solution(\"100 100 52 50 46 56\") == \"17 8 86 92\""
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"1 3 9 7\\n17 8 86 92\""
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"FTFFTFFF\") == \"No\" # Invalid input format\nassert solution(\"FTFFT\") == \"No\" # Invalid input format\nassert solution(\"FTFFTFF\") == \"No\" # Invalid input format\nassert solution(\"FTF\") == \"No\" # Invalid input format"
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Yes\""
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"FTFFTFFF\\n4 2\") == \"Yes\"\nassert solution(\"TFTTFFTT\\n4 2\") == \"No\"\nassert solution(\"TTFFTTFF\\n4 2\") == \"No\"\nassert solution(\"FDFDFDF\\n4 2\") == \"No\"\nassert solution(\"TTFFTTFT\\n4 2\") == \"No\"\n"
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"FTFFTFFF\") == \"Yes\"\nassert solution(\"4 2\") == \"No\""
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"FTFFTFFF\\n4 2\") == \"Yes\""
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"FTFFTFFF\\n4 2\") == \"Yes\""
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"FTFFTFFF\") == \"Yes\""
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"FTFFTFFF\") == \"Yes\", \"Solution should return Yes\"\nassert solution(\"FTFFTFF\") == \"No\", \"Solution should return No\"\nassert solution(\"FTHTHTF\") == \"No\", \"Solution should return No\"\nassert solution(\"TFTFTFF\") == \"Yes\", \"Solution should return Yes\"\nassert solution(\"TFTFTFT\") == \"Yes\", \"Solution should return Yes\""
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('FTFFTFFF\\n4 2') == 'Yes', 'Expected Yes, got {}'.format(solution('FTFFTFFF\\n4 2'))"
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"FTFFTFFF\") == \"Yes\"\nassert solution(\"4 2\") == \"No\""
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == 2\nassert solution(2) == 3\nassert solution(3) == 5\nassert solution(4) == 6\n\nfor _ in range(10):\n    k = random.randint(0, 10**9)\n    assert solution(k) <= 10**9\n\nprint(solution(1000000007))  # Should be 6 (0, 1, 2, 3, 4)"
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == 2\nassert solution(2) == 3\nassert solution(3) == 5\nassert solution(4) == 6"
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == 2\nassert solution(2) == 3\nassert solution(3) == 5\nassert solution(4) == 6\n"
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == 2\nassert solution(2) == 3\nassert solution(3) == 5\nassert solution(4) == 6\n\nfrom functools import lru_cache\n\n@lru_cache(maxsize=None)\n"
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 3\nassert solution(4) == 6\nassert solution(5) == 5\nassert solution(6) == 6"
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == 2\nassert solution(2) == 3\nassert solution(3) == 5\nassert solution(4) == 6"
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"5\"\nassert solution(\"4\") == \"6\"\nprint(1)"
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(2) == \"2\", \"Fox Ciel studies number theory.\\nShe thinks a non-empty set S contains non-negative integers is perfect if and only if for any a, b in S, (a ^ b) in S.\"\nassert solution(3) == \"3\", \"Fox Ciel studies number theory.\\nShe thinks a non-empty set S contains non-negative integers is perfect if and only if for any a, b in S, (a ^ b) in S.\"\nassert solution(4) == \"6\", \"Fox Ciel studies number theory.\\nShe thinks a non-empty set S contains non-negative integers is perfect if and only if for any a, b in S, (a ^ b) in S.\"\nassert solution(5) == \"10\", \"Fox Ciel studies number theory.\\nShe thinks a non-empty set S contains non-negative integers is perfect if and only if for any a, b in S, (a ^ b) in S.\"\n"
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == '2'\nassert solution(2) == '3'\nassert solution(3) == '5'\nassert solution(4) == '6'"
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == 2\nassert solution(2) == 3\nassert solution(3) == 5\nassert solution(4) == 6\n\nfrom collections import Counter"
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 2 3\\n3\") == \"1.3333333333\"\n"
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n\") == \"1.3333333333\\n\"\nassert solution(\"3\\n1 2 3\\n3\\n\") == \"1.3333333333\\n\"\nassert solution(\"3\\n1 2 3\\n3\\n\") == \"1.3333333333\\n\"\nassert solution(\"3\\n1 2 3\\n3\\n\") == \"1.3333333333\\n\"\nassert solution(\"3\\n1 2 3\\n3\\n\") == \"1.3333333333\\n\"\nassert solution(\"3\\n1 2 3\\n3\\n\") == \"1.3333333333\\n\""
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 2 3\\n3\") == \"1.3333333333\"\nassert solution(\"6\\n1 2 3\\n4\") == \"1.3333333333\"\nassert solution(\"4\\n1 2 3\\n2\") == \"1.3333333333\"\nassert solution(\"6\\n1 2 3\\n3\") == \"1.3333333333\"\nassert solution(\"6\\n1 2 3\\n1\") == \"1.3333333333\""
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n\") == \"1.3333333333\"\nassert solution(\"5\\n1 2 3 4 5\\n2\\n\") == \"1.25\"\nassert solution(\"3\\n1 2 3\\n1\\n\") == \"1\"\nassert solution(\"5\\n1 2 3 4 5\\n1\\n\") == \"1\"\nassert solution(\"5\\n1 2 3 4 5\\n1 1 1\\n\") == \"0.0\""
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 2 3\\n3\") == \"1.3333333333\"\n"
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 2 3\\n3\") == 1.3333333333\nassert solution(\"4\\n1 2 3\\n2\") == 1.3333333333\nassert solution(\"5\\n1 2 3\\n4\") == 1.3333333333\nassert solution(\"6\\n1 2 3\\n5\") == 1.3333333333\nassert solution(\"7\\n1 2 3\\n6\") == 1.3333333333\nassert solution(\"8\\n1 2 3\\n7\") == 1.3333333333\nassert solution(\"9\\n1 2 3\\n8\") == 1.3333333333\nassert solution(\"10\\n1 2 3\\n9\") == 1.3333333333"
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"1.3333333333\", \"Your solution is not correct.\""
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 2 3\\n3\") == \"1.3333333333\"\nassert solution(\"5\\n1 2 3 4 5\\n3\") == \"4.0\"\nassert solution(\"1\\n1\\n1\") == \"1.0\"\nassert solution(\"5\\n1 1 1 1 1\\n3\") == \"1.0\""
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"1.3333333333\"\nprint(\"Correct\")"
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n1 2 3\\n3') == '1.3333333333'\nassert solution('1\\n1 1\\n1') == '1.0'"
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == ['13 7', '986 605']"
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 1 2\\n9 7 11 15 5\\n\\n2 100000 569\\n605 986\\n') == '13 7\\n986 605\\n'"
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 1 2\\n9 7 11 15 5\\n\\n2 100000 569\\n605 986\\n\") == \"13 7\\n986 605\""
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 1 2\\n9 7 11 15 5\\n\") == \"13 7\\n\"\nassert solution(\"2 100000 569\\n605 986\\n\") == \"986 605\\n\"\n"
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 1 2\\n9 7 11 15 5\\n2 100000 569\\n605 986\\n\") == \"13 7\\n986 605\""
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 1 2\\n9 7 11 15 5\\n\") == \"13 7\\n\"\nassert solution(\"2 100000 569\\n605 986\\n\") == \"986 605\\n\""
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Expected {output}, but got {solution(input())}\""
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 1 2\\n9 7 11 15 5\\n\") == \"13 7\\n\"\nassert solution(\"2 100000 569\\n605 986\\n\") == \"986 605\\n\""
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 1 2\\n9 7 11 15 5\\n2 100000 569\\n605 986\") == \"13 7\\n986 605\"\nassert solution(\"5 3 4\\n8 9 10 11\\n12 13 14 15\\n16 17 18 19\") == \"4 5\\n12 13 14 15\""
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n5 1 2\n9 7 11 15 5\n''') == '13 7\\n'\n\nassert solution('''\n2 100000 569\n605 986\n''') == '986 605\\n'"
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3 2 4 4\\n2 5 4 10\\n\") == \"1\"\nassert solution(\"3 3 3 3 5\\n2 3 5 4 2\\n\") == \"0\"\nassert solution(\"5 5 1 2 3\\n2 2 3\\n\") == \"-1\"\nassert solution(\"3 4 1 1 3\\n2 3 2\\n\") == \"3\"\n"
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 3 2 4 4\\n2 5 4 10') == '1'\nassert solution('3 3 3 3 5\\n2 3 5 4 2') == '0'\nassert solution('5 5 1 2 3\\n2 2 3') == '-1'\nassert solution('3 4 1 1 3\\n2 3 2') == '3'"
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3 2 4 4\") == \"1\\n\"\nassert solution(\"3 3 3 3 5\") == \"0\\n\"\nassert solution(\"5 5 1 2 3\") == \"-1\\n\"\nassert solution(\"3 4 1 1 3\") == \"3\\n\"\n"
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Solution should return {expected_output}, but it returned {solution(input())}\"\n"
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 3 2 4 4') == '1'\nassert solution('3 3 3 3 5') == '0'\nassert solution('5 5 1 2 3') == '-1'\nassert solution('3 4 1 1 3') == '3'"
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3 2 4 4\") == \"1\\n\"\nassert solution(\"3 3 3 3 5\") == \"0\\n\"\nassert solution(\"5 5 1 2 3\") == \"-1\\n\"\nassert solution(\"3 4 1 1 3\") == \"3\\n\"\n"
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3 2 4 4\\n2 5 4 10\") == \"1\\n\"\nassert solution(\"3 3 3 3 5\\n2 3 5 4 2\") == \"0\\n\"\nassert solution(\"5 5 1 2 3\\n2 2 3\") == \"-1\\n\"\nassert solution(\"3 4 1 1 3\\n2 3 2\") == \"3\\n\""
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3 2 4 4\\n2 5 4 10\\n\") == \"1\"\nassert solution(\"3 3 3 3 5\\n2 3 5 4 2\\n\") == \"0\"\nassert solution(\"5 5 1 2 3\\n2 2 3\\n\") == \"-1\"\nassert solution(\"3 4 1 1 3\\n2 3 2\\n\") == \"3\""
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 3 2 4 4\\n2 5 4 10\\n\\n3 3 3 3 5\\n2 3 5 4 2\\n\\n5 5 1 2 3\\n2 2 3\\n\\n3 4 1 1 3\\n2 3 2\\n\\n5 5 1 2 3\\n2 2 3\\n\\n3 3 2 4 4\\n2 5 4 10\\n\\n3 3 3 3 5\\n2 3 5 4 2\\n\\n5 5 1 2 3\\n2 2 3\\n\\n3 4 1 1 3\\n2 3 2\\n\\n5 5 1 2 3\\n2 2 3\\n\\n3 3 2 4 4\\n2 5 4 10\\n\\n3 3 3 3 5\\n2 3 5 4 2\\n\\n5 5 1 2 3\\n2 2 3\\n\\n3 4 1 1 3\\n2 3 2\\n\\n5 5 1 2 3\\n2 2 3\\n\\n3 3 2 4 4\\n2 5 4 10\\n\\n3 3 3 3 5\\n2 3 5 4 2\\n\\n5 5 1 2 3\\n2 2 3') == 1\nassert solution('3 3 3 3 5\\n2 3 5 4 2\\n\\n5 5 1 2 3\\n2 2 3\\n\\n3 4 1 1 3\\n2 3 2\\n\\n5 5 1 2 3\\n2 2 3\\n\\n3 3 2 4 4\\n2 5 4 10\\n\\n3 3 3 3 5\\n2 3 5 4 2\\n\\n5 5 1 2 3\\n2 2 3\\n\\n3 4 1 1 3\\n2 3 2\\n\\n5 5 1 2 3\\n2 2 3\\n\\n3 3 2 4 4\\n2 5 4 10\\n\\n3 3 3 3 5\\n2 3 5 4 2\\n\\n5 5 1 2 3\\n2 2 3\\n\\n3 4 1 1 3\\n2 3 2\\n\\n5 5 1 2 3\\n2 2 3\\n\\n3 3 2 4 4\\n2 5 4 10\\n\\n3 3 3 3 5\\n2 3 5 4 2\\n\\n5 5 1 2 3\\n2 2 3') == 0\nassert solution('5 5 1 2 3\\n2 2 3\\n\\n3 4 1 1 3\\n2 3 2\\n\\n5 5 1 2 3\\n2 2 3\\n\\n3 3 2 4 4\\n2 5 4 10\\n\\n3 3 3 3 5\\n2 3 5 4 2\\n\\n5 5 1 2 3\\n2 2 3\\n\\n3 4 1 1 3\\n2 3 2\\n\\n5 5 1 2 3\\n2 2 3\\n\\n3 3 2 4 4\\n2 5 4 10\\n\\n3 3 3 3 5\\n2 3 5 4 2\\n\\n5 5 1 2 3\\n2 2 3') == -1\nassert solution('3 4 1 1 3\\n2 3 2\\n\\n5 5 "
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n3 3 2 4 4\n2 5 4 10\n''') == '1'\nassert solution('''\n3 3 3 3 5\n2 3 5 4 2\n''') == '0'\nassert solution('''\n5 5 1 2 3\n2 2 3\n''') == '-1'\nassert solution('''\n3 4 1 1 3\n2 3 2\n''') == '3'"
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"G3 G3\") == \"0\\n\"\nassert solution(\"G4 R4 R3 B3\") == \"2\\n\"\nassert solution(\"B1 Y1 W1 G1 R1\") == \"4\\n\""
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\nG3 G3\\n') == '0\\n'\nassert solution('4\\nG4 R4 R3 B3\\n') == '2\\n'\nassert solution('5\\nB1 Y1 W1 G1 R1\\n') == '4\\n'"
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\nG3 G3\\n\\n4\\nG4 R4 R3 B3\\n\\n5\\nB1 Y1 W1 G1 R1\\n\") == \"0\\n\"\nassert solution(\"4\\nG4 R4 R3 B3\\n\\nB1 Y1 W1 G1 R1\\n\\n2\\nG3 G3\\n\") == \"2\\n\"\nassert solution(\"5\\nB1 Y1 W1 G1 R1\\n\\n4\\nG4 R4 R3 B3\\n\\n2\\nG3 G3\\n\") == \"4\\n\""
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Solution does not match expected output. Input: {input()}, Output: {output()}\""
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"0\\n\", \"Please provide the minimum number of hints for Borya to be certain about each card's color and value\""
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for input {input()} and expected output {expected_output}\""
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(solution(solution(solution(solution(stdin))))) == 0\nassert solution(solution(stdin)) == 0\nassert solution(\"G3 G3\") == 0\nassert solution(\"G4 R4 R3 B3\") == 2\nassert solution(\"B1 Y1 W1 G1 R1\") == 4"
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '0'"
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"G3 G3\") == 0, \"You should provide the correct input.\"\nassert solution(\"G4 R4 R3 B3\") == 2, \"You should provide the correct input.\"\nassert solution(\"B1 Y1 W1 G1 R1\") == 4, \"You should provide the correct input.\"\nassert solution(\"G4 R4 R3 B3\") == 2, \"You should provide the correct input.\"\n"
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('Input\\n4\\n3 3 4 3\\n4 7 6 5\\n\\nInput\\n2\\n1 1\\n100 100\\n\\nInput\\n5\\n10 30 5 6 24\\n10 41 7 8 24\\n\\nOutput\\n2 6\\n1 1\\n3 11') == 'Output\\n2 6\\n1 1\\n3 11'"
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n3 3 4 3\\n4 7 6 5\\n2\\n1 1\\n100 100\\n5\\n10 30 5 6 24\\n10 41 7 8 24\") == \"2 6\\n1 1\\n\"\n\nassert solution(\"2\\n1 1\\n100 100\\n5\\n10 30 5 6 24\\n10 41 7 8 24\") == \"1 1\\n\"\n\nassert solution(\"5\\n10 30 5 6 24\\n10 41 7 8 24\\n\") == \"3 11\\n\""
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n3 3 4 3\\n4 7 6 5\\n\") == \"2 6\\n\"\nassert solution(\"2\\n1 1\\n100 100\\n\") == \"1 1\\n\"\nassert solution(\"5\\n10 30 5 6 24\\n10 41 7 8 24\\n\") == \"3 11\\n\""
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n3 3 4 3\\n4 7 6 5\\n2\\n1 1\\n100 100\\n5\\n10 30 5 6 24\\n10 41 7 8 24\") == \"2 6\\n\"\nassert solution(\"2\\n1 1\\n100 100\\n\") == \"1 1\\n\"\nassert solution(\"5\\n10 30 5 6 24\\n10 41 7 8 24\") == \"3 11\\n\""
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n3 3 4 3\\n4 7 6 5\\n2\\n1 1\\n100 100\\n5\\n10 30 5 6 24\\n10 41 7 8 24\") == \"2 6\\n1 1\\n\""
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '2 6'"
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n4\n3 3 4 3\n4 7 6 5\n''') == '''\n2 6\n'''\n\nassert solution('''\n2\n1 1\n100 100\n''') == '''\n1 1\n'''\n\nassert solution('''\n5\n10 30 5 6 24\n10 41 7 8 24\n''') == '''\n3 11\n'''"
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Solution is incorrect. Expected: {output()}, got: {solution(input())}\""
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(4) == '2 6'\nassert solution(2) == '1 1'\nassert solution(5) == '3 11'"
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n3 3 4 3\\n4 7 6 5\\n\\n2\\n1 1\\n100 100\\n\\n5\\n10 30 5 6 24\\n10 41 7 8 24\") == \"2 6\\n1 1\\n3 11\""
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 4') == '3B'\nassert solution('2 2') == 'Impossible'\nassert solution('3 2') == '1A1B'"
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 4') == '3B'\nassert solution('2 2') == 'Impossible'\nassert solution('3 2') == '1A1B'\n\nfrom typing import List"
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 4\") == \"3B\"\nassert solution(\"2 2\") == \"Impossible\"\nassert solution(\"3 2\") == \"1A1B\""
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 4\") == \"3B\"\nassert solution(\"2 2\") == \"Impossible\"\nassert solution(\"3 2\") == \"1A1B\""
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 4\") == \"3B\"\nassert solution(\"2 2\") == \"Impossible\"\nassert solution(\"3 2\") == \"1A1B\""
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 4\") == \"3B\"\nassert solution(\"2 2\") == \"Impossible\"\nassert solution(\"3 2\") == \"1A1B\""
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input(\"1 4\\n\")) == \"3B\"\nassert solution(input(\"2 2\\n\")) == \"Impossible\"\nassert solution(input(\"3 2\\n\")) == \"1A1B\""
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 4\") == \"3B\"\nassert solution(\"2 2\") == \"Impossible\"\nassert solution(\"3 2\") == \"1A1B\""
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 4\\n2 2\\n3 2\\n\") == \"3B\\n\"\nassert solution(\"1 4\\n2 2\\n3 2\\n4 2\\n\") == \"Impossible\\n\"\nassert solution(\"1 4\\n1 3\\n2 1\\n3 1\\n\") == \"1A1B\\n\"\nassert solution(\"1 4\\n1 3\\n2 1\\n3 1\\n4 1\\n\") == \"1A1B\\n\"\nassert solution(\"1 4\\n1 3\\n2 1\\n3 1\\n4 1\\n\") == \"1A1B\\n\"\nassert solution(\"1 4\\n1 3\\n2 1\\n3 1\\n4 1\\n\") == \"1A1B\\n\"\nassert solution(\"1 4\\n1 3\\n2 1\\n3 1\\n4 1\\n\") == \"1A1B\\n\"\nassert solution(\"1 4\\n1 3\\n2 1\\n3 1\\n4 1\\n\") == \"1A1B\\n\"\nassert solution(\"1 4\\n1 3\\n2 1\\n3 1\\n4 1\\n\") == \"1A1B\\n\"\nassert solution(\"1 4\\n1 3\\n2 1\\n3 1\\n4 1\\n\") == \"1A1B\\n\"\nassert solution(\"1 4\\n1 3\\n2 1\\n3 1\\n4 1\\n\") == \"1A1B\\n\"\nassert solution(\"1 4\\n1 3\\n2 1\\n3 1\\n4 1\\n\") == \"1A1B\\n\"\nassert solution(\"1 4\\n1 3\\n2 1\\n3 1\\n4 1\\n\") == \"1A1B\\n\"\nassert solution(\"1 4\\n1 3\\n2 1\\n3 1\\n4 1\\n\") == \"1A1B\\n\"\nassert solution(\"1 4\\n1 3\\n2 1\\n3 1\\n4 1\\n\") == \"1A1B\\n\"\nassert solution(\"1 4\\n1 3\\n2 1\\n3 1\\n4 1\\n\") == \"1A1B\\n\"\nassert solution(\"1 4\\n1 3\\n2 1\\n3 1\\n4 1\\n\") == \"1A1B\\n\"\nassert solution(\"1 4\\n1 3\\n2 1\\n3 1\\n4 1\\n\") == \"1A1B\\n\"\nassert solution(\"1 4\\n1 3\\n2 1\\n3 1\\n4 1\\n\") == \"1A1B\\n\"\nassert solution(\"1 4\\n1 3\\n2 1\\n3 1\\n4 1\\n\") == \"1A1B\\n\"\nassert solution(\"1 4\\n1 3\\n2 1\\n3 1\\n4 1\\n\") == \"1A1B\\n\"\nassert solution(\"1 4\\n1 3\\n2 1\\n3 1\\n4 1\\n\") == \"1A1B\\n\"\nassert solution(\"1 4\\n1 3\\n2 1\\n3 1\\n4 1\\n\") == \"1A1B\\n\"\nassert solution(\"1 4\\n1 3\\n2 1\\n3 1\\n4 1\\n\") == \"1A1B\\n\"\nassert solution(\"1 4\\n1 3\\n2 1\\n3 1\\n4 1\\n\") == \"1A1B\\n\"\nassert solution(\"1 4\\n1 3\\n2 1\\n3 1\\n4 1\\n\") == \"1A1B\\n\"\nassert solution(\"1 4\\n1 3\\n2 1\\n3 1\\n4 1\\n\") == \"1A1B\\"
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 4\") == \"3B\", \"Expected 3B, got {}\".format(solution(\"1 4\"))\nassert solution(\"2 2\") == \"Impossible\", \"Expected Impossible, got {}\".format(solution(\"2 2\"))\nassert solution(\"3 2\") == \"1A1B\", \"Expected 1A1B, got {}\".format(solution(\"3 2\"))"
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"3\\n\"\nassert solution(\"5 4\") == \"25\\n\""
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\") == \"3\\n\"\nassert solution(\"5 4\") == \"25\\n\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3, 2) == 3\nassert solution(5, 4) == 25\nassert solution(3, 3) == 0\nassert solution(3, 5) == 1\nassert solution(3, 7) == 2\nassert solution(3, 10) == 3\n\nprint(1)"
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2\\n\") == \"3\\n\"\nassert solution(\"5 4\\n\") == \"25\\n\""
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2\") == \"3\\n\"\nassert solution(\"5 4\") == \"25\\n\"\n"
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\") == \"3\\n\"\nassert solution(\"5 4\") == \"25\\n\""
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3, 2) == 3\nassert solution(5, 4) == 25"
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\") == \"3\"\nassert solution(\"5 4\") == \"25\""
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\") == \"1\\n\"\nassert solution(\"5 5\\n5 1 2 3 4\\n1 1\\n2 2\\n3 3\\n4 4\\n5 2\") == \"2\\n\"\nassert solution(\"1 1\\n1 1\") == \"1\\n\"\nassert solution(\"2 1\\n2 2\") == \"2\\n\"\nassert solution(\"3 1\\n3 3\") == \"3\\n\"\nassert solution(\"4 1\\n4 4\") == \"4\\n\"\nassert solution(\"5 1\\n5 5\") == \"5\\n\"\nassert solution(\"5 1\\n5 5\\n1 1\\n1 1\\n2 2\\n2 2\") == \"5\\n\"\nassert solution(\"2 1\\n2 2\\n2 3\\n3 3\") == \"5\\n\""
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_str) == \"1\\n\", \"Expected output: 1\\n, Received output: %s\" % solution(input_str)"
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\") == \"1\"\nassert solution(stdin=\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\") == \"1\""
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '1\\n', \"Expected output: 1\\nActual output: {}\".format(solution(input()))\n"
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1\""
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1\\n\""
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_data) == expected_output, \"Test failed\""
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\") == \"1\"\nassert solution(\"1 1\\n1 2\") == \"2\"\nassert solution(\"5 5\\n1 1 2 2 3\\n4 -2 1 4 3\\n5 3 1\") == \"1\"\nassert solution(\"10 10\\n1 2 3 4 5\\n6 -2 1 4 3\\n7 4 1 2 3\\n8 5 1 2 3\") == \"1\"\nassert solution(\"1 1\\n1 2\\n1 3\") == \"4\""
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\") == \"1\\n\"\nassert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\\n1 2\") == \"1\\n\"\nassert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\\n1 2\\n4 2\") == \"1\\n\""
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\") == \"1\\n\\nDeleting Vertex 2 costs 1.\\nAfter that, the graph is separated into two connected components.\\nThe score of the component consisting of Vertex 1 is |0| = 0. The score of the component consisting of Vertices 3 and 4 is |(-3) + 1| = 2. Therefore, Snuke's profit is 0 + 2 - 1 = 1.\\nHe cannot gain more than 1, so the answer is 1.\""
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\nS.o\\n.o.o\\no.T\\n\") == \"2\\n\"\nassert solution(\"4 4\\nS.S.S.o\\no.o.o.o\\no.T.T.T\\no.o.o.o\\no.T.T.T\\n\") == \"-1\\n\""
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\nS.o\\n.o.o\\nT\") == \"2\\nRemove the upper-right and lower-left leaves.\""
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\nS.o\\n.o.o\\no.T\\n\") == \"2\\nRemove the upper-right and lower-left leaves.\""
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\ns.o\\no.o.\\no.T\") == \"2\\nRemove the upper-right and lower-left leaves.\"\nassert solution(\"5 6\\nS.o\\no.o.\\no.T\\n.\") == \"-1\"\n"
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2\\n\"\nassert solution(input()) == \"-1\\n\""
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\nS.o\\n.o.o\\no.T\\n\") == \"2\\nRemove the upper-right and lower-left leaves.\"\nassert solution(\"3 3\\nS.o\\n.o.o\\no.T\\nS\") == \"-1\"\nassert solution(\"3 3\\nS.o\\n.o.o\\no.T\\n.o.o\\no.T\\n.o.o\\no.T\\nS.o\\n\") == \"-1\""
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\nS.o\\n.o.o\\nT.o\") == \"2\"\nassert solution(\"3 3\\nS.o\\n.o.o\\nT.o\") == \"2\"\nassert solution(\"3 3\\nS.o\\n.o.o\\nT.o\") == \"2\"\nassert solution(\"3 3\\nS.o\\n.o.o\\nT.o\") == \"-1\"\n"
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\nS.o\\n.o.o\\no.T\") == \"2\"\nassert solution(\"3 3\\nS.o\\n.o.T\\no\") == \"-1\"\nassert solution(\"3 3\\nS.o\\n.o.T\\n.o.T\") == \"2\"\nassert solution(\"3 3\\nS.o\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o.T\\n.o"
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\nS.o\\n.o.o\\no.T\\n\") == \"2\\nRemove the upper-right and lower-left leaves.\"\n\nassert solution(\"3 3\\nS.o\\n.o.T\\n\") == \"2\\nRemove the upper-right and lower-left leaves.\"\n\nassert solution(\"3 3\\nS.o\\no.T\\n\") == \"-1\""
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 3\\nS.o\\no.o.o\\noT\\n') == '2\\nRemove the upper-right and lower-left leaves.'\nassert solution('3 3\\nS.o\\n.o.o\\nT\\n') == '2\\nRemove the upper-right and lower-left leaves.'\nassert solution('3 3\\nS.o\\n.o.o\\noT\\n') == '2\\nRemove the upper-right and lower-left leaves.'\nassert solution('3 3\\nS.o\\n.o.o\\nT\\n') == '2\\nRemove the upper-right and lower-left leaves.'\nassert solution('3 3\\nS.o\\n.o.o\\noT\\n') == '-1\\n'"
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, but got {solution(input())}\"\n\nfrom typing import List"
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1\\n\") == \"1\\n\", \"Expected 1, got {}\".format(solution(\"1 1\\n\"))\nassert solution(\"3 2\\n\") == \"3\\n\", \"Expected 3, got {}\".format(solution(\"3 2\\n\"))\nassert solution(\"199 200\\n\") == \"200\\n\", \"Expected 200, got {}\".format(solution(\"199 200\\n\"))"
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1\\n\") == \"1\"\nassert solution(\"3 2\\n\") == \"3\"\nassert solution(\"199 200\\n\") == \"200\""
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == \"1\", \"The expected output is '1', but it is actually '{}'.\".format(solution(\"1 1\"))\nassert solution(\"3 2\") == \"3\", \"The expected output is '3', but it is actually '{}'.\".format(solution(\"3 2\"))\nassert solution(\"199 200\") == \"200\", \"The expected output is '200', but it is actually '{}'.\".format(solution(\"199 200\"))"
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Test case {test_case} failed: {solution(input())}!= {output()}\"\nfor test_case in range(1, 5):\n    test_input = input()\n    output = solution(test_input)\n    print(f\"Test case {test_case}: {output}\")"
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == 1\nassert solution(3) == 3\nassert solution(199) == 200"
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == 1\nassert solution(3) == 3\nassert solution(199) == 200"
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(10) == \"1\"\nassert solution(20) == \"3\"\nassert solution(199) == \"200\""
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1 1) == 1, \"1 1\"\nassert solution(3 2) == 3, \"3 2\"\nassert solution(199 200) == 200, \"199 200\""
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n5 2\\n3 3\") == \"Aoki\""
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n5 2\\n3 3\\n\") == \"Aoki\"\nassert solution(\"2\\n5 2\\n3 3\\n4 4\\n\") == \"Takahashi\"\nassert solution(\"3\\n1 5\\n2 4\\n\") == \"Aoki\"\nassert solution(\"3\\n1 5\\n2 4\\n5 4\\n\") == \"Takahashi\"\nassert solution(\"4\\n1 1\\n2 2\\n\") == \"Aoki\"\nassert solution(\"4\\n1 1\\n2 2\\n3 3\\n\") == \"Takahashi\"\n"
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input(\"Enter the number of piles: \")) == \"Aoki\\n\", \"The output should be 'Aoki', but got {}\".format(solution(input(\"Enter the number of piles: \"))))"
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n5 2\\n3 3') == 'Aoki'\nassert solution('4\\n3 2\\n2 4') == 'Takahashi'\nassert solution('5\\n3 2\\n2 3\\n1 1\\n5 4') == 'Takahashi'"
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n5 2\\n3 3\") == \"Aoki\"\nassert solution(\"3\\n5 2\\n4 3\") == \"Takahashi\"\nassert solution(\"2\\n1 2\\n3 3\") == \"Aoki\"\nassert solution(\"2\\n5 2\\n10 3\") == \"Takahashi\""
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n5 2\\n3 3\\n\") == \"Aoki\\n\"\nassert solution(\"5\\n5 2\\n3 3\\n\") == \"Takahashi\\n\"\nassert solution(\"10\\n10 2\\n3 3\\n\") == \"Aoki\\n\"\nassert solution(\"10\\n5 2\\n3 3\\n\") == \"Takahashi\\n\"\nassert solution(\"10\\n5 2\\n1 3\\n\") == \"Takahashi\\n\"\nassert solution(\"5\\n5 2\\n1 3\\n\") == \"Aoki\\n\"\nassert solution(\"10\\n5 2\\n1 3\\n\") == \"Takahashi\\n\"\nassert solution(\"10\\n5 2\\n2 3\\n\") == \"Takahashi\\n\"\nassert solution(\"10\\n5 2\\n1 2\\n\") == \"Aoki\\n\"\nassert solution(\"10\\n5 2\\n2 3\\n\") == \"Takahashi\\n\"\nassert solution(\"10\\n5 2\\n2 1\\n\") == \"Aoki\\n\"\nassert solution(\"10\\n5 2\\n1 1\\n\") == \"Takahashi\\n\""
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n5 2\\n3 3\\n\") == \"Aoki\\n\"\nassert solution(\"3\\n3 3\\n2 2\\n\") == \"Takahashi\\n\"\nassert solution(\"4\\n5 2\\n3 3\\n\") == \"Takahashi\\nAoki\\n\"\nassert solution(\"5\\n5 2\\n3 3\\n\") == \"Takahashi\\nAoki\\nTakahashi\\nAoki\\n\"\nassert solution(\"6\\n5 2\\n3 3\\n\") == \"Takahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\n\"\nassert solution(\"7\\n5 2\\n3 3\\n\") == \"Takahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\n\"\nassert solution(\"8\\n5 2\\n3 3\\n\") == \"Takahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki\\nTakahashi\\nAoki"
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(None) == \"Error: Please enter input to the solution\""
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n5 2\\n3 3\") == \"Aoki\\n\"\nassert solution(\"3\\n2 3\\n4 4\") == \"Takahashi\\n\"\nassert solution(\"4\\n2 3\\n1 1\") == \"Takahashi\\n\"\nassert solution(\"5\\n1 1\\n1 1\") == \"Takahashi\\n\"\nassert solution(\"6\\n1 1\\n1 1\") == \"Aoki\\n\""
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    2\n    5 2\n    3 3\n    \"\"\"\n) == \"Aoki\"\n\nassert solution(\n    \"\"\"\n    3\n    5 3\n    4 4\n    2 2\n    \"\"\"\n) == \"Takahashi\"\n\nassert solution(\n    \"\"\"\n    4\n    1 2\n    3 4\n    5 6\n    7 8\n    \"\"\"\n) == \"Aoki\"\n\nassert solution(\n    \"\"\"\n    5\n    1 2\n    3 4\n    5 6\n    7 8\n    9 10\n    \"\"\"\n) == \"Takahashi\"\n\nassert solution(\n    \"\"\"\n    6\n    1 3\n    2 4\n    4 5\n    6 7\n    8 9\n    10 11\n    \"\"\"\n) == \"Aoki\"\n\nassert solution(\n    \"\"\"\n    7\n    1 3\n    2 4\n    4 5\n    6 7\n    8 9\n    10 11\n    12 13\n    \"\"\"\n) == \"Takahashi\"\n\nassert solution(\n    \"\"\"\n    8\n    1 4\n    2 5\n    4 6\n    6 7\n    8 9\n    10 11\n    12 13\n    14 15\n    \"\"\"\n) == \"Aoki\"\n\nassert solution(\n    \"\"\"\n    9\n    1 5\n    2 6\n    4 6\n    6 7\n    8 9\n    10 11\n    12 13\n    14 15\n    16 17\n    \"\"\"\n) == \"Takahashi\"\n\nassert solution(\n    \"\"\"\n    10\n    1 6\n    2 7\n    4 7\n    6 8\n    8 9\n    10 11\n    12 13\n    14 15\n    16 17\n    18 19\n    \"\"\"\n) == \"Aoki\"\n\nassert solution(\n    \"\"\"\n    11\n    1 7\n    2 8\n    4 8\n    6 9\n    8 10\n    10 11\n    12 13\n    14 15\n    16 17\n    18 19\n    20 21\n    \"\"\"\n) == \"Takahashi\"\n\nassert solution(\n    \"\"\"\n    12\n    1 8\n    2 9\n    4 9\n    6 10\n    8 11\n    10 12\n    12 13\n    14 15\n    16 17\n    18 19\n    20 21\n    22 23\n    \"\"\"\n) == \"Aoki\"\n\nassert solution(\n    \"\"\"\n    13\n    1 9\n    2 10\n    4 10\n    6 11\n    8 12\n    10 13\n    12 14\n    14 16\n    16 18\n    18 20\n    20 22\n    22 24\n    \"\"\"\n) == \"Takahashi\"\n\nassert solution(\n    \"\"\"\n    14\n    1 10\n    2 11\n    4 11\n    6 12\n    8 13\n    10 14\n    12 15\n    14 17\n    16 19\n    18 21\n    20 23\n    22 25\n    \"\"\"\n) == \"Aoki\"\n\nassert solution(\n    \"\"\"\n    15\n    1 11\n    2 12\n    4 12\n    6 13\n    8 14\n    10 15\n    12 16\n    14 18\n    16 20\n    18 22\n    20 24\n    22 26\n    \"\"\"\n) == \"Takahashi\"\n\nassert solution(\n    \"\"\"\n    16\n    1 12\n    2 13\n    4 13\n    6 14\n    8 15\n    10 16\n    12 17\n    14 19\n    16 21\n    18 23\n    20 25\n    22 27\n    \"\"\"\n) == \"Aoki\"\n\nassert solution(\n    \"\"\"\n    17\n    1 13\n    2 14\n    4 14\n    6 15\n    8 16\n    10 17\n    12 18\n    14 20\n    16 22\n    18 24\n    20 26\n    22 28\n    \"\"\"\n) == \"Takahashi\"\n\nassert solution(\n    \"\"\"\n    18\n    1 1"
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"0\"\nassert solution(\"3 3\") == \"8\""
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"0\"  # Correct Answer: 0"
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 2') == '0'\nassert solution('3 3') == '8'\n"
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\n3 3\\n\") == 0\nassert solution(\"3 3\\n\") == 8\n"
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 2') == '0\\n'\nassert solution('3 3') == '8\\n'"
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 2') == 0\nassert solution('3 3') == 8"
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n3 3\\n\") == \"0\"\nassert solution(\"3 3\\n\") == \"8\""
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"0\"\nassert solution(\"3 3\") == \"8\""
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 2') == '0'\nassert solution('3 3') == '8'\n"
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"0\"\nassert solution(input()) == \"8\"\n"
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n1 2 3 4\\n1 5 3 4\") == \"1\"\nassert solution(\"2 2\\n1 2 3 4\\n1 5 6 4\") == \"0\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 3\") == \"-1\""
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\n1 2 3 4\\n1 5 3 4\") == \"1\"\nassert solution(\"2 2\\n1 2 3 4\\n1 5 6 4\") == \"0\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 3\") == \"-1\""
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\n1 2 3 4\\n1 5 3 4\\n\") == \"1\\n\"\nassert solution(\"2 2\\n1 2 3 4\\n1 5 6 4\\n\") == \"0\\n\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 3\\n\") == \"-1\\n\"\nassert solution(\"2 2\\n1 2 3 4\\n1 5 6 4\\n\") == \"0\\n\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 3\\n\") == \"-1\\n\""
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\n1 2 3 4\\n1 5 3 4\") == \"1\"\nassert solution(\"2 2\\n1 2 3 4\\n1 5 6 4\") == \"0\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 3\") == \"-1\"\nassert solution(\"2 2\\n1 2 3 4\\n1 2 1 3 2 3\") == \"0\""
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''2 2\n1 2 3 4\n1 5 3 4''') == '1'\nassert solution('''2 2\n1 2 3 4\n1 5 6 4''') == '0'\nassert solution('''2 3\n1 2 4 5\n1 2 1 3 2 3''') == '-1'"
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 2\\n1 2 3 4\\n1 5 3 4\\n') == '1\\n'\nassert solution('2 2\\n1 2 3 4\\n1 5 6 4\\n') == '0\\n'\nassert solution('2 3\\n1 2 4 5\\n1 2 1 3 2 3\\n') == '-1\\n'\nassert solution('2 3\\n1 2 4 5\\n1 2 5 6 2 3\\n') == '2\\n'"
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n1 2 3 4\\n1 5 3 4\") == \"1\"\nassert solution(\"2 2\\n1 2 3 4\\n1 5 6 4\") == \"0\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 3\") == \"-1\""
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\n1 2 3 4\\n1 5 3 4\") == \"1\\n\"\nassert solution(\"2 2\\n1 2 3 4\\n1 5 6 4\") == \"0\\n\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 3\") == \"-1\\n\""
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\n1 2 3 4\\n1 5 3 4\\n\") == \"1\\n\"\nassert solution(\"2 2\\n1 2 3 4\\n1 5 6 4\\n\") == \"0\\n\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 3\\n\") == \"-1\\n\""
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n1 2 3 4\\n1 5 3 4\") == \"1\\n\"\nassert solution(\"2 2\\n1 2 3 4\\n1 5 6 4\") == \"0\\n\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 3\") == \"-1\\n\""
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(12) == '07:30'\nassert solution(24) == '17:30'\nassert solution(12) == '07:30'\nassert solution(24) == '09:09'"
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"24\") == \"17:30\", \"Error: Solution 1\"\nassert solution(\"12\") == \"07:30\", \"Error: Solution 2\"\nassert solution(\"24\") == \"09:09\", \"Error: Solution 3\""
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin='24\\n17:30') == '17:30'\nassert solution(stdin='12\\n17:30') == '07:30'\nassert solution(stdin='24\\n99:99') == '09:09'"
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"24\") == \"09:00\"\nassert solution(\"12\") == \"07:30\"\nassert solution(\"24\") == \"09:09\""
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"24\\n17:30\\n\") == \"17:30\"\nassert solution(\"12\\n17:30\\n\") == \"07:30\"\nassert solution(\"24\\n99:99\\n\") == \"09:09\""
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"24\\n17:30\") == \"17:30\"\nassert solution(\"12\\n17:30\") == \"07:30\"\nassert solution(\"24\\n99:99\") == \"09:09\""
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"24\") == \"17:30\"\nassert solution(\"12\") == \"07:30\"\nassert solution(\"24\") == \"09:09\""
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"12\") == \"07:30\"\nassert solution(\"24\") == \"09:09\"\n"
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"24\") == \"17:30\"\nassert solution(\"12\") == \"07:30\"\nassert solution(\"24\") == \"09:09\""
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\") == \"6\"\nassert solution(\"4 3\\n1\\n2 3\\n3 4 1\") == \"5\"\nassert solution(\"5 4\\n2\\n3 4\\n4 5 1\") == \"6\"\nassert solution(\"3 2\\n2\\n1 2 1\\n2 2 1\") == \"3\"\nassert solution(\"3 4\\n1\\n2 3\\n3 4 1\") == \"5\"\n"
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"6\\n\"\n"
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\") == \"6\""
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1') == '6'"
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\") == \"6\\n\""
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\\n\") == \"6\\n\"\nassert solution(stdin=\"3 2\\n1\\n2\\n3\\n\") == \"1\\n\"\nassert solution(stdin=\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\\n\") == \"6\\n\""
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 6\n"
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1') == '6\\n'\n"
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\") == \"6\\n\""
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"-1\"\nassert solution(stdin) == \"0\\n0\"\nassert solution(stdin) == \"5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6\"\nassert solution(stdin) == \"2 1\\n2 5\\n3 3\\n3 6\\n5 6\"\nassert solution(stdin) == \"2 1\\n2 5\\n3 3\\n3 6\\n5 6\"\nassert solution(stdin) == \"-1\"\nassert solution(stdin) == \"2 1\\n2 5\\n3 3\\n3 6\\n5 6\""
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6\\n'\nassert solution(stdin) == '0\\n'\nassert solution(stdin) == '-1\\n'\nassert solution(stdin) == '5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6\\n'\nassert solution(stdin) == '5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6\\n'"
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n2 0 3 0 1 1\") == \"5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"6\\n3 2 2 2 1 1\") == \"-1\""
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n2 0 3 0 1 1\") == \"5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"6\\n3 2 2 2 1 1\") == \"-1\"\n\nfrom typing import List\n"
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n2 0 3 0 1 1\") == 5\nassert solution(\"1\\n0\") == 0\nassert solution(\"6\\n3 2 2 2 1 1\") == -1"
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}, got: {solution(stdin)}\""
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n2 0 3 0 1 1\") == \"5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"6\\n3 2 2 2 1 1\") == \"-1\""
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n2 0 3 0 1 1\\n\\n5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6\\n\") == \"5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6\\n\"\nassert solution(\"1\\n0\\n\\n0\\n\\n\\n\") == \"0\\n\"\nassert solution(\"6\\n3 2 2 2 1 1\\n\\n-1\\n\\n-1\\n\\n-1\\n\\n-1\\n\\n-1\\n\") == \"-1\\n\""
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n2 0 3 0 1 1\\n\") == \"5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6\"\nassert solution(\"1\\n0\\n\") == \"0\\n\"\nassert solution(\"6\\n3 2 2 2 1 1\\n\") == \"-1\"\n"
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 8\\n12 20\") == \"2\\n0 4\\n\", \"Test case 1 failed\"\nassert solution(\"3 10\\n10 20 30\") == \"1\\n0 \", \"Test case 2 failed\""
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''2 8\n12 20\n''') == '2\\n0 4'\nassert solution('''3 10\n10 20 30\n''') == '1\\n0'"
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 8\\n12 20\\n\") == \"2\\n0 4 \\n\"\nassert solution(\"3 10\\n10 20 30\\n\") == \"1\\n0\""
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 8\\n12 20\\n\\n3 10\\n10 20 30\\n\\n0\") == \"2\\n0 4 0\\n\"\nassert solution(\"3 10\\n10 20 30\\n\\n0\") == \"1\\n0 0 0\\n\""
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"\"\"\n2\n0 4 \n\"\"\"\n\nassert solution(stdin) == \"\"\"\n1\n0 \n\"\"\""
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2\\n0 4 0\\n1\\n0\""
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 8\\n12 20\\n\") == \"2\\n0 4 \\n\"\nassert solution(\"3 10\\n10 20 30\\n\") == \"1\\n0\""
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == expected_output, f\"The solution is {solution}, but the expected output is {expected_output}.\""
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 8\\n12 20\\n3 10\\n10 20 30\") == \"2\\n0 4\\n1\\n0\"\nassert solution(\"2 16\\n12 34\\n13 56\\n21 78\") == \"0\\n0 4 8\\n0 12 24 32\"\nassert solution(\"4 4\\n16 16\\n32 32\\n64 64\") == \"0\\n0 0 0 4\""
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == expected_output, f\"The output is incorrect. Expected output: {expected_output}, but got: {solution}\"\n"
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n0 0 5 5\n3 2\n-1 -1\n-1 0\n\"\"\") == 3.729935587093555327\n\nassert solution(\"\"\"\n0 0 0 1000\n100 1000\n-50 0\n50 0\n\"\"\") == 11.547005383792516398"
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 0 5 5\\n3 2\\n-1 -1\\n-1 0\") == \"3.729935587093555327\"\nassert solution(\"0 0 0 1000\\n100 1000\\n-50 0\\n50 0\") == \"11.547005383792516398\""
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"3.729935587093555327\"\nassert solution(stdin) == \"11.547005383792516398\""
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 0 5 5\\n3 2\\n-1 -1\\n-1 0\") == 3.729935587093555327\nassert solution(\"0 0 0 1000\\n100 1000\\n-50 0\\n50 0\") == 11.547005383792516398\n"
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 0 5 5\\n3 2\\n-1 -1\\n-1 0\") == \"3.729935587093555327\"\nassert solution(\"0 0 0 1000\\n100 1000\\n-50 0\\n50 0\") == \"11.547005383792516398\"\n"
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''0 0 5 5\n3 2\n-1 -1\n-1 0''') == '3.729935587093555327'\n\nassert solution('''0 0 0 1000\n100 1000\n-50 0\n50 0''') == '11.547005383792516398'"
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('0 0 5 5\\n3 2\\n-1 -1\\n-1 0') == '3.73'\nassert solution('0 0 0 1000\\n100 1000\\n-50 0\\n50 0') == '11.55'\n"
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 3.729935587093555327, \"The solution is incorrect. Please, check the code provided.\"\n"
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('0 0 5 5\\n3 2\\n-1 -1\\n-1 0') == '3.729935587093555327'\nassert solution('0 0 0 1000\\n100 1000\\n-50 0\\n50 0') == '11.547005383792516398'"
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '3.729935587093555327'\n"
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 'Second\\nFirst\\nSecond\\n', \"Testcase 1 failed\"\n\nprint(\"Testcase 1 passed\")"
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\\n\") == \"Second\\nFirst\\nSecond\""
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"First\\nSecond\\nSecond\\nFirst\\nSecond\\nSecond\"\nassert solution(stdin) == \"First\\nSecond\\nSecond\\nFirst\\nSecond\\nSecond\"\nassert solution(stdin) == \"Second\\nFirst\\nSecond\\nFirst\\nSecond\\nSecond\"\nassert solution(stdin) == \"Second\\nFirst\\nSecond\\nFirst\\nSecond\\nSecond\"\nassert solution(stdin) == \"Second\\nFirst\\nSecond\\nFirst\\nSecond\\nSecond\"\nassert solution(stdin) == \"First\\nSecond\\nSecond\\nFirst\\nSecond\\nSecond\"\nassert solution(stdin) == \"First\\nSecond\\nSecond\\nFirst\\nSecond\\nSecond\"\nassert solution(stdin) == \"First\\nSecond\\nSecond\\nFirst\\nSecond\\nSecond\"\nassert solution(stdin) == \"First\\nSecond\\nSecond\\nFirst\\nSecond\\nSecond\"\nassert solution(stdin) == \"Second\\nFirst\\nSecond\\nFirst\\nSecond\\nSecond\"\nassert solution(stdin) == \"Second\\nFirst\\nSecond\\nFirst\\nSecond\\nSecond\"\nassert solution(stdin) == \"Second\\nFirst\\nSecond\\nFirst\\nSecond\\nSecond\"\nassert solution(stdin) == \"Second\\nFirst\\nSecond\\nFirst\\nSecond\\nSecond\"\nassert solution(stdin) == \"First\\nSecond\\nSecond\\nFirst\\nSecond\\nSecond\"\nassert solution(stdin) == \"First\\nSecond\\nSecond\\nFirst\\nSecond\\nSecond\"\nassert solution(stdin) == \"First\\nSecond\\nSecond\\nFirst\\nSecond\\nSecond\"\nassert solution(stdin) == \"Second\\nFirst\\nSecond\\nFirst\\nSecond\\nSecond\"\nassert solution(stdin) == \"Second\\nFirst\\nSecond\\nFirst\\nSecond\\nSecond\"\nassert solution(stdin) == \"Second\\nFirst\\nSecond\\nFirst\\nSecond\\nSecond\"\nassert solution(stdin) == \"Second\\nFirst\\nSecond\\nFirst\\nSecond\\nSecond\"\nassert solution(stdin) == \"First\\nSecond\\nSecond\\nFirst\\nSecond\\nSecond\"\nassert solution(stdin) == \"First\\nSecond\\nSecond\\nFirst\\nSecond\\nSecond\"\nassert solution(stdin) == \"First\\nSecond\\nSecond\\nFirst\\nSecond\\nSecond\"\nassert solution(stdin) == \"Second\\nFirst\\nSecond\\nFirst\\nSecond\\nSecond\"\nassert solution(stdin) == \"Second\\nFirst\\nSecond\\nFirst\\nSecond\\nSecond\"\nassert solution(stdin) == \"Second\\nFirst\\nSecond\\nFirst\\nSecond\\nSecond\"\nassert solution(stdin) == \"Second\\nFirst\\nSecond\\nFirst\\nSecond\\nSecond\"\nassert solution(stdin) == \"First\\nSecond\\nSecond\\nFirst\\nSecond\\nSecond\"\nassert solution(stdin) == \"First\\nSecond\\nSecond\\nFirst\\nSecond\\nSecond\"\nassert solution(stdin) == \"First\\nSecond\\nSecond\\nFirst\\nSecond\\nSecond\"\nassert solution(stdin) == \"Second\\nFirst\\nSecond\\nFirst\\nSecond\\nSecond\"\nassert solution(stdin) == \"Second\\nFirst\\nSecond\\nFirst\\nSecond\\nSecond\"\nassert solution(stdin) == \"Second\\nFirst\\nSecond\\nFirst\\nSecond\\nSecond\"\nassert solution(stdin) == \"Second\\nFirst\\nSecond\\nFirst\\nSecond\\nSecond\"\nassert solution(stdin) == \"First\\nSecond\\nSecond\\nFirst\\nSecond\\nSecond\"\nassert solution(stdin) == \"First\\nSecond\\nSecond\\nFirst\\nSecond\\nSecond\"\nassert solution(stdin) == \"First\\nSecond\\nSecond\\nFirst\\nSecond\\nSecond\"\nassert solution(stdin) == \"Second\\nFirst\\nSecond\\nFirst\\nSecond\\nSecond\"\nassert solution(stdin) == \"Second\\nFirst\\nSecond\\nFirst\\nSecond\\nSecond\"\nassert solution(stdin) == \"Second\\nFirst\\nSecond\\nFirst\\nSecond\\nSecond\"\nassert solution(stdin) == \"Second\\nFirst\\nSecond\\nFirst\\nSecond\\nSecond\"\n"
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n1\\n2\\n2\") == \"Second\\nSecond\"\nassert solution(\"3\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\\n\") == \"Second\\nFirst\""
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_str) == output_str, f\"Test case failed: Expected output {output_str}, but got {solution(input_str)}.\"\n"
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"Second\""
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n1\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\\n\") == \"Second\\nFirst\\nSecond\"\n\nprint(\"All test cases pass\")"
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output() for input, output in zip(stdin.split('\\n'), stdout.split('\\n'))\n"
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"Second\\nFirst\\nSecond\\n\""
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == 'Second\\nFirst\\nSecond\\n', \"Testcase 1 failed\""
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=input()) == \"1\""
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1\\n\""
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3 2\\n4 3 1 5 2\") == \"1\\n\"\n\nassert solution(\"5 3 2\\n4 3 1 5 2\") == \"1\\n\""
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3 2\\n4 3 1 5 2\") == \"1\"\nassert solution(\"5 3 2\\n4 3 1 5 3\") == \"2\"\nassert solution(\"5 3 2\\n4 3 1 5 4\") == \"3\"\nassert solution(\"5 3 2\\n4 3 1 5 5\") == \"4\"\nassert solution(\"5 3 2\\n4 3 1 5 6\") == \"5\"\nassert solution(\"5 3 2\\n4 3 1 5 7\") == \"6\"\nassert solution(\"5 3 2\\n4 3 1 5 8\") == \"7\"\nassert solution(\"5 3 2\\n4 3 1 5 9\") == \"8\"\nassert solution(\"5 3 2\\n4 3 1 5 10\") == \"9\"\nassert solution(\"5 3 2\\n4 3 1 5 11\") == \"10\"\nassert solution(\"5 3 2\\n4 3 1 5 12\") == \"11\"\nassert solution(\"5 3 2\\n4 3 1 5 13\") == \"12\"\nassert solution(\"5 3 2\\n4 3 1 5 14\") == \"13\"\nassert solution(\"5 3 2\\n4 3 1 5 15\") == \"14\"\nassert solution(\"5 3 2\\n4 3 1 5 16\") == \"15\"\nassert solution(\"5 3 2\\n4 3 1 5 17\") == \"16\"\nassert solution(\"5 3 2\\n4 3 1 5 18\") == \"17\"\nassert solution(\"5 3 2\\n4 3 1 5 19\") == \"18\"\nassert solution(\"5 3 2\\n4 3 1 5 20\") == \"19\"\nassert solution(\"5 3 2\\n4 3 1 5 21\") == \"20\"\nassert solution(\"5 3 2\\n4 3 1 5 22\") == \"21\"\nassert solution(\"5 3 2\\n4 3 1 5 23\") == \"22\"\nassert solution(\"5 3 2\\n4 3 1 5 24\") == \"23\"\nassert solution(\"5 3 2\\n4 3 1 5 25\") == \"24\"\nassert solution(\"5 3 2\\n4 3 1 5 26\") == \"25\"\nassert solution(\"5 3 2\\n4 3 1 5 27\") == \"26\"\nassert solution(\"5 3 2\\n4 3 1 5 28\") == \"27\"\nassert solution(\"5 3 2\\n4 3 1 5 29\") == \"28\"\nassert solution(\"5 3 2\\n4 3 1 5 30\") == \"29\"\nassert solution(\"5 3 2\\n4 3 1 5 31\") == \"30\"\nassert solution(\"5 3 2\\n4 3 1 5 32\") == \"31\"\nassert solution(\"5 3 2\\n4 3 1 5 33\") == \"32\"\nassert solution(\"5 3 2\\n4 3 1 5 34\") == \"33\"\nassert solution(\"5 3 2\\n4 3 1 5 35\") == \"34\"\nassert solution(\"5 3 2\\n4 3 1 5 36\") == \"35\"\nassert solution(\"5 3 2\\n4 3 1 5 37\") == \"36\"\nassert solution(\"5 3 2\\n4 3 1 5 38\") == \"37\"\nassert solution(\"5 3 2\\n4 3 1 5 39\") == \"38\"\nassert solution(\"5 3 2\\n4 3 1 5"
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=open('input.txt', 'r')) == '1'"
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(r'''\n5 3 2\n4 3 1 5 2\n''') == '1'"
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"1\\n\", \"Expected output: 1\\nGot: \" + solution(stdin)"
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3 2\\n4 3 1 5 2\") == \"1\"\nassert solution(\"5 3 2\\n4 3 1 5 2\\n\") == \"1\"\nassert solution(\"5 3 2\\n4 3 1 5 2\\n5\") == \"1\"\nassert solution(\"5 3 2\\n4 3 1 5 2\\n5 4\") == \"3\"\nassert solution(\"5 3 2\\n4 3 1 5 2\\n5 4 6\") == \"9\""
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3 2\\n4 3 1 5 2\") == \"1\"\nassert solution(\"5 3 2\\n4 3 1 5 2\\n3 4 5\") == \"1\"\nassert solution(\"5 3 2\\n4 3 1 5 2\\n3 4 5\\n2 3 4\") == \"1\"\nassert solution(\"5 3 2\\n4 3 1 5 2\\n3 4 5\\n2 3 4\\n1 2 3\") == \"1\"\nassert solution(\"5 3 2\\n4 3 1 5 2\\n3 4 5\\n2 3 4\\n1 2 3\\n0 1 2\") == \"1\"\nassert solution(\"5 3 2\\n4 3 1 5 2\\n3 4 5\\n2 3 4\\n1 2 3\\n0 1 2\\n1 2 3\") == \"1\"\nassert solution(\"5 3 2\\n4 3 1 5 2\\n3 4 5\\n2 3 4\\n1 2 3\\n0 1 2\\n1 2 3\\n2 3 4\") == \"1\"\nassert solution(\"5 3 2\\n4 3 1 5 2\\n3 4 5\\n2 3 4\\n1 2 3\\n0 1 2\\n1 2 3\\n2 3 4\\n3 4 5\") == \"1\"\nassert solution(\"5 3 2\\n4 3 1 5 2\\n3 4 5\\n2 3 4\\n1 2 3\\n0 1 2\\n1 2 3\\n2 3 4\\n3 4 5\\n4 5 6\") == \"1\"\nassert solution(\"5 3 2\\n4 3 1 5 2\\n3 4 5\\n2 3 4\\n1 2 3\\n0 1 2\\n1 2 3\\n2 3 4\\n3 4 5\\n4 5 6\\n5 6 7\") == \"1\"\nassert solution(\"5 3 2\\n4 3 1 5 2\\n3 4 5\\n2 3 4\\n1 2 3\\n0 1 2\\n1 2 3\\n2 3 4\\n3 4 5\\n4 5 6\\n5 6 7\\n6 7 8\") == \"1\"\nassert solution(\"5 3 2\\n4 3 1 5 2\\n3 4 5\\n2 3 4\\n1 2 3\\n0 1 2\\n1 2 3\\n2 3 4\\n3 4 5\\n4 5 6\\n5 6 7\\n6 7 8\\n7 8 9\") == \"1\""
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=input()) == \"1\"\nprint(\"pass\")"
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), \"Incorrect output.\""
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"24\"\nassert solution(\"1000 500\") == \"1073077625524\""
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Output: 24\""
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 2') == '24'\nassert solution('1 5') == '0'\nassert solution('4 6') == '0'\nassert solution('6 7') == '0'\nassert solution('5 7') == '0'"
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"24\""
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=input()) == 'Output: 24\\n'"
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1\") == \"1\\n\"\nassert solution(\"3 2\") == \"24\\n\""
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"24\\n\""
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"24\"\nassert solution(\"5 1\") == \"1\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"3 3\") == \"9\"\n\nfrom typing import List"
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3, 2) == 6\nassert solution(4, 4) == 3\nassert solution(7, 3) == 1196\nassert solution(31, 8) == 64921457\nassert solution(1, 3) == 1\n\nfrom typing import List"
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(31) == \"1196\"\nassert solution(4) == \"3\"\nassert solution(7) == \"1196\"\n"
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\") == \"6\"\nassert solution(\"4 4\") == \"3\"\nassert solution(\"7 3\") == \"1196\"\nassert solution(\"31 8\") == \"64921457\"\nassert solution(\"\") == \"0\"\n"
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3 2) == \"6\"\nassert solution(4 4) == \"3\"\nassert solution(7 3) == \"1196\"\nassert solution(31 8) == \"64921457\""
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3 2) == \"6\\n\"\nassert solution(4 4) == \"3\\n\"\nassert solution(7 3) == \"1196\\n\"\nassert solution(31 8) == \"64921457\\n\"\nassert solution(\"3 2\") == \"6\\n\"\nassert solution(\"4 4\") == \"3\\n\"\nassert solution(\"7 3\") == \"1196\\n\"\nassert solution(\"31 8\") == \"64921457\\n\""
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '6', 'Test Failed'"
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected, f\"Your solution is incorrect. Expected: {expected}, Received: {solution(stdin)}\"\n"
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(31, 8) == 64921457"
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3, 2) == 6\nassert solution(4, 4) == 3\nassert solution(7, 3) == 1196\nassert solution(31, 8) == 64921457"
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3, 2) == 6\nassert solution(4, 4) == 3\nassert solution(7, 3) == 1196\nassert solution(31, 8) == 64921457"
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4 2\\n#..#\\n..#.\\n#...\\n\") == \"#XXX\\n#X#.\\nX#..\\n...#\\n.#.#\\n\"\nassert solution(\"5 4 5\\n#...#\\n#.#.#\\n.#..#\\n...#\\n.#.#\\n\") == \"#XXX\\n#X#.\\nX#..\\n...#\\n.#.#\\n\"\nassert solution(\"3 4 1\\n#..#\\n..#.\\n#...\\n\") == \"#XXX\\n#X#.\\nX#..\\n...#\\n.#.#\\n\"\n"
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Incorrect output for input: {input()}, expected: {expected_output}\""
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == 'X#.\\nX#.\\nX#.'"
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n3 4 2\n"
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4 2\\n#..#\\n..#.\\n#...\") == \"#X#\"\nassert solution(\"5 4 5\\n#...\\n#.#.\\n.#..\\n...#\\n.#.#\") == \"#XXX\""
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4 2\\n#..#\\n..#.\\n#...\\n\") == \"#XXX\\n#X#.\\nX#..\\n...#\\n.#.#\\n\"\nassert solution(\"5 4 5\\n#...#\\n#.#.#\\n.#..#\\n...##\\n.#.#\\n\") == \"#XXX\\n#X#.\\nX#..\\n...#\\n.#.#\\n\""
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"\"\"\n"
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '''#XXX\n"
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4 2\\n#..#\\n..#.\\n#...\") == '#.X#\\nX.#.\\n#...\\n'\nassert solution(\"5 4 5\\n#...\\n#.#.\\n.#..\\n...#\\n.#.#\") == '#XXX\\n#X#.\\nX#..\\n...#\\n.#.#\\n'\n\nfrom typing import List"
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '''#XXX\n"
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected_output, f\"Incorrect output: {solution(stdin)}!= {expected_output}\""
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 1\\n\") == \"1\\n\"\nassert solution(\"5\\n1 2 2 2\\n\") == \"3\\n\"\nassert solution(\"18\\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4\\n\") == \"4\\n\"\n"
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"1\\n\", \"Test case 1 failed\"\nassert solution(\"5\\n1 2 2 2\") == \"3\\n\", \"Test case 2 failed\"\nassert solution(\"18\\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4\") == \"4\\n\", \"Test case 3 failed\""
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 1\\n5\\n1 2 2 2\\n18\\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4\") == \"1\\n\"\nassert solution(\"1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\"
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"1\\n\", \"Your solution is incorrect.\""
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'Output\\n4', \"Invalid output\""
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 1\") == \"1\\n\"\nassert solution(\"5\\n1 2 2 2\") == \"3\\n\"\nassert solution(\"18\\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4\") == \"4\\n\"\n"
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 1\") == \"1\\n\"\nassert solution(\"5\\n1 2 2 2\") == \"3\\n\"\nassert solution(\"18\\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4\") == \"4\\n\""
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '3'\nassert solution('18') == '4'"
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3 2\") == \"2 4 1 5 3\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3 2\") == \"2 4 1 5 3\"\n"
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2 4 1 5 3\\n\", \"The output is incorrect.\""
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2 4 1 5 3\\n\"\nassert solution(input()) == \"-1\\n\"\nassert solution(input()) == \"-1\\n\"\nassert solution(input()) == \"2 4 1 5 3\\n\""
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 2, \"Expected 2, got {}\".format(solution())  # Expected 2, got 2\n"
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3 2\") == \"2 4 1 5 3\"\nassert solution(\"1 2 3\") == \"1 2 3\"\nassert solution(\"4 5 6\") == \"-1\"\nassert solution(\"7 6 5 4 3\") == \"2 3 4 5 6\"\n"
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin='5 3 2\\n') == '2 4 1 5 3\\n'\nassert solution(stdin='10 4 2\\n') == '-1\\n'\nassert solution(stdin='1 3 2\\n') == '2 3 1\\n'\nassert solution(stdin='5 3 2\\n') == '-1\\n'\nassert solution(stdin='1 1 1\\n') == '1\\n'\nassert solution(stdin='1 1 0\\n') == '-1\\n'\nassert solution(stdin='0 1 1\\n') == '-1\\n'"
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3 2\") == \"2 4 1 5 3\""
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3 2\") == \"2 4 1 5 3\"\nassert solution(\"1 2 3\") == \"1 2 3\"\nassert solution(\"5 1 3\") == \"-1\"\nassert solution(\"1 1 1\") == \"1\""
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3 2\") == \"2 4 1 5 3\"\nassert solution(\"7 5 3\") == \"5 3 7 1 2 6\"\nassert solution(\"3 3 2\") == \"2 2 3 3 3\"\nassert solution(\"6 4 2\") == \"2 4 6 2 1\"\nassert solution(\"10 8 6\") == \"-1\"\n"
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"Yes\", \"The output should be Yes\""
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n3 6 9 18 36 108\") == \"Yes\"\nassert solution(\"2\\n7 17\") == \"No\"\nassert solution(\"9\\n4 8 10 12 15 18 33 44 81\") == \"Yes\"\n"
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n3 6 9 18 36 108\") == \"Yes\\n\"\nassert solution(\"2\\n7 17\") == \"No\\n\"\nassert solution(\"9\\n4 8 10 12 15 18 33 44 81\") == \"Yes\\n\""
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"Yes\"\nassert solution() == \"No\"\nassert solution() == \"Yes\""
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n3 6 9 18 36 108\") == \"Yes\"\nassert solution(\"2\\n7 17\") == \"No\"\nassert solution(\"9\\n4 8 10 12 15 18 33 44 81\") == \"Yes\""
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 6 9 18 36 108\") == \"Yes\"\nassert solution(\"2 7 17\") == \"No\"\nassert solution(\"9 4 8 10 12 15 18 33 44 81\") == \"Yes\""
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"Yes\""
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"Yes\"\nassert solution() == \"No\"\nassert solution() == \"No\"\nassert solution() == \"Yes\""
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Solution should return '{output}', but returned '{solution(input())}'\""
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('6\\n3 6 9 18 36 108\\n') == 'Yes'\nassert solution('2\\n7 17\\n') == 'No'\nassert solution('9\\n4 8 10 12 15 18 33 44 81\\n') == 'Yes'\n"
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 -6 4 5 3\") == \"12\""
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n1 2 -6 4 5 3\\n\") == \"12\"\n"
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"12\", \"Your solution is incorrect.\"\n"
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"12\\n\", \"Output: \" + solution(stdin)"
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"12\""
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n1 2 -6 4 5 3\") == \"12\"\nassert solution(\"5\\n-2 -3 4 -5 6\") == \"10\""
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n1 2 -6 4 5 3\") == \"12\""
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6\\n1 2 -6 4 5 3') == '12'"
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n1 2 -6 4 5 3\") == \"12\""
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n1 2 -6 4 5 3\\n\") == \"12\\n\", \"Test Case 1 failed\"\n\nassert solution(\"6\\n1 2 -6 4 5\\n\") == \"10\\n\", \"Test Case 2 failed\"\n\nassert solution(\"6\\n1 2 -6 4 5 3 4\\n\") == \"12\\n\", \"Test Case 3 failed\"\n\nassert solution(\"6\\n1 2 -6 4 5 3 4 5\\n\") == \"14\\n\", \"Test Case 4 failed\"\n\nassert solution(\"6\\n1 2 -6 4 5 3 4 5 6\\n\") == \"16\\n\", \"Test Case 5 failed\""
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n3 1 4 2\\n\") == \"5\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n3 1 4 2\\n\") == \"5\""
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 3\\n3 1 4 2') == 5\nassert solution('6 3\\n3 1 4 2 5 1 4 2') == 7\nassert solution('3 1\\n1') == 0\nassert solution('10 2\\n3 1 4 2 5 1 4 2') == 10\nassert solution('3 1\\n1 2 3 4 5 6 7 8 9') == 0"
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3\\n3 1 4 2\\n\") == \"5\\n\", \"The solution is incorrect\"\nassert solution(\"5 5\\n3 1 4 2 3 1 4 2 3 1 4\\n\") == \"16\\n\", \"The solution is incorrect\"\nassert solution(\"3 1\\n1 3\\n\") == \"2\\n\", \"The solution is incorrect\"\nassert solution(\"5 5\\n3 1 4 2 3 1 4 2\\n\") == \"10\\n\", \"The solution is incorrect\""
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 3\\n3 1 4 2') == 5, \"Invalid output\"\nprint(\"Correct!\")"
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n3 1 4 2\") == \"5\", \"Your code is incorrect. Please fix it.\""
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n3 1 4 2\") == \"5\", \"Input does not match the expected output.\""
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n3 1 4 2\\n\") == \"5\\n\""
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n3 1 4 2\\n\") == 5, \"Incorrect output.\""
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 3\\n3 1 4 2\\n') == '5'"
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n2 3 1\\n3\\n3 2 1\") == \"0 0\\n0 1\\n2 1\"\nassert solution(\"3\\n2 3 1\\n3\\n3 2 1\\n3\\n3 2 1\") == \"0 0\\n0 1\\n2 1\"\nassert solution(\"3\\n3 2 1\\n3\\n3 2 1\\n3\\n3 2 1\") == \"2 1\""
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '''0 0\n0 1'''\n\nassert solution(stdin) == '''0 1\n2 1'''\n\nassert solution(stdin) == '''2 1\n1 0'''\n\nfrom typing import List"
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '0 0\\n'\nassert solution() == '0 1\\n'\nassert solution() == '2 1\\n'"
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n2 3 1\\n3\\n3 2 1\") == \"0 0\\n0 1\\n2 1\""
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('tests/test_0225.txt', 'r').read()) == '0 0\\n'\nassert solution(open('tests/test_0226.txt', 'r').read()) == '0 1\\n'\nassert solution(open('tests/test_0227.txt', 'r').read()) == '2 1\\n'"
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Input\\n3\\n1 2 3\\n\") == \"0 0\\n\", \"Sample Test 1\"\nassert solution(\"Input\\n3\\n2 3 1\\n\") == \"0 1\\n\", \"Sample Test 2\"\nassert solution(\"Input\\n3\\n3 2 1\\n\") == \"2 1\\n\", \"Sample Test 3\""
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n2 3 1\\n3\\n3 2 1\") == \"0 0\"\nassert solution(\"3\\n2 3 1\\n3\\n3 2 1\") == \"0 1\"\nassert solution(\"3\\n3 2 1\\n3\\n3 2 1\") == \"2 1\""
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n2 3 1\\n3\\n3 2 1\") == \"0 0\\n\"\nassert solution(\"3\\n2 3 1\\n3\\n3 2 1\") == \"0 1\\n\"\nassert solution(\"3\\n3 2 1\\n3\\n3 2 1\") == \"2 1\\n\""
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2 3\\n3 2 1\\n3 3 2\") == \"0 0\\n0 1\\n2 1\"\nassert solution(\"3\\n2 3 1\\n3 2 1\") == \"0 1\\n2 1\"\nassert solution(\"3\\n3 2 1\") == \"2 1\""
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"Test failed\""
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 4\\na\\nb\\n\") == \"6\\n\"\nassert solution(\"3 3\\naba\\nbba\\n\") == \"8\\n\"\nassert solution(\"4 5\\nabbb\\nabba\\n\") == \"8\\n\""
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 4\\na\\nb\\n\") == \"6\"\nassert solution(\"3 3\\naba\\nbba\\n\") == \"8\"\nassert solution(\"4 5\\nabbb\\nbaaa\\n\") == \"8\"\n\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 4\\na\\nb\\n') == '6'\nassert solution('3 3\\na\\nb\\n') == '8'\nassert solution('4 5\\nabbb\\naaaa\\n') == '8'"
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 4\\na\\nb\") == \"6\"\nassert solution(\"3 3\\na\\nb\\nc\") == \"8\"\nassert solution(\"4 5\\na\\nb\\nc\") == \"8\""
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 4\\naa\\nbb\\n\") == \"6\"\nassert solution(\"3 3\\naba\\nbba\\n\") == \"8\"\nassert solution(\"4 5\\nabbb\\nbaaa\\n\") == \"8\""
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 4\\na\\nb\\n\") == \"6\\n\"\nassert solution(\"3 3\\naba\\nbba\\n\") == \"8\\n\"\nassert solution(\"4 5\\nabbb\\nbaaa\\n\") == \"8\\n\"\n"
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\""
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 4\\na\\nbb\\n\") == \"6\\n\"\nassert solution(\"3 3\\naba\\nbba\\n\") == \"8\\n\"\nassert solution(\"4 5\\nabbb\\nbaaa\\n\") == \"8\\n\""
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 4\\na\\nb\\n\") == \"6\\n\"\nassert solution(\"3 3\\naba\\nbba\\n\") == \"8\\n\"\nassert solution(\"4 5\\nabbb\\nbaaa\\n\") == \"8\\n\""
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 4\\na\\nb\\n\") == \"6\"\nassert solution(\"3 3\\naba\\nbba\\n\") == \"8\"\nassert solution(\"4 5\\nabbb\\nabba\\n\") == \"8\""
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"NO\""
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n') == 'YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1\\n'\nassert solution('0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n') == 'NO'"
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"NO\""
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"0 0 0\n0 0 1\n0 0 1\n0 0 1\n0 1 1\n0 1 1\n0 1 1\n1 1 1\n\"\"\") == \"YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1\"\nassert solution(\"\"\"0 0 0\n0 0 0\n0 0 0\n0 0 0\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n\"\"\") == \"NO\""
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n') == 'YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1\\n'\n\nassert solution('0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n') == 'NO'"
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"NO\""
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\") == \"YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"NO\""
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"NO\""
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == 'YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1'\nassert solution('0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == 'NO'"
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n') == 'YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1\\n'\n\nassert solution('0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n') == 'NO'"
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(4) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"NO\"\nassert solution(5) == \"YES\""
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 3 6 7') == 'YES\\n2 2 1 1'\nassert solution('5 6 15 35 77 22') == 'YES\\n2 1 2 1 1'\nassert solution('5 6 10 15 1000 75') == 'NO'"
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n3\\n6\\n7\\n\") == \"YES\\n2 2 1 1\"\nassert solution(\"5\\n6\\n15\\n35\\n77\\n22\\n\") == \"YES\\n2 1 2 1 1\"\nassert solution(\"5\\n6\\n10\\n15\\n1000\\n75\\n\") == \"NO\""
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(4) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(6) == \"YES\"\nassert solution(7) == \"YES\"\nassert solution(8) == \"NO\""
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 'YES\\n2 2 1 1\\nNO\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'"
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n2 3 6 7\\n\") == \"YES\\n2 2 1 1\\n\"\nassert solution(\"5\\n6 15 35 77 22\\n\") == \"YES\\n2 1 2 1 1\\n\"\nassert solution(\"5\\n6 10 15 1000 75\\n\") == \"NO\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3 6 7\") == \"YES\"\nassert solution(\"5\") == \"YES\"\nassert solution(\"5 6 15 35 77\") == \"YES\"\nassert solution(\"5 6 10 15 1000\") == \"NO\""
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3 6 7\") == \"YES\\n2 2 1 1\"\nassert solution(\"5 6 15 35 77\") == \"YES\\n2 1 2 1 1\"\nassert solution(\"5 6 10 15 1000\") == \"NO\""
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"YES\\n2 2 1 1 \"\nassert solution() == \"YES\\n2 1 2 1 1 \"\nassert solution() == \"YES\\n2 1 2 1 1 \"\nassert solution() == \"YES\\n2 1 2 1 1 \"\nassert solution() == \"YES\\n2 1 2 1 1 \""
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(5) == \"YES\"\nassert solution(6) == \"YES\"\nassert solution(7) == \"YES\"\nassert solution(8) == \"YES\"\nassert solution(9) == \"YES\""
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"100\\n60\\n70\") == \"40\"\nassert solution(\"410\\n55\\n70\") == \"5\"\nassert solution(\"600\\n60\\n70\") == \"0\""
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"100\\n60\\n70\") == \"40\"\nassert solution(\"410\\n55\\n70\") == \"5\"\nassert solution(\"600\\n60\\n70\") == \"0\"\n"
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"100\\n60\\n70\\n\") == \"40\\n\"\nassert solution(\"410\\n55\\n70\\n\") == \"5\\n\"\nassert solution(\"600\\n60\\n70\\n\") == \"0\\n\""
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 40\nassert solution() == 5\nassert solution() == 0"
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"100\\n60\\n70\\n\") == \"40\"\nassert solution(\"410\\n55\\n70\\n\") == \"5\"\nassert solution(\"600\\n60\\n70\\n\") == \"0\""
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"100\\n60\\n70\") == \"40\\n\"\nassert solution(\"410\\n55\\n70\") == \"5\\n\"\nassert solution(\"600\\n60\\n70\") == \"0\\n\""
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"100\\n60\\n70\") == \"40\"\nassert solution(\"410\\n55\\n70\") == \"5\"\nassert solution(\"600\\n60\\n70\") == \"0\"\n"
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"Test failed for {input()}, expected {expected}, got {solution(input())}\"\nprint(\"Test passed\")"
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"100\\n60\\n70\\n\") == \"40\"\nassert solution(\"410\\n55\\n70\\n\") == \"5\"\nassert solution(\"600\\n60\\n70\\n\") == \"0\""
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=input()) == output, f\"Solution is incorrect. Input: {stdin}, Output: {output}\""
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Got {solution(input())}, expected {output}\""
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('12\\n3 1 4 1 5 9 2 6 5 3 5 8') == '12\\n3 4\\n1 2 3 5\\n3 1 5 4\\n5 6 8 9'"
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('12\\n3 1 4 1 5 9 2 6 5 3 5 8') == '12\\n3 4\\n1 2 3 5\\n3 1 5 4\\n5 6 8 9'\nassert solution('5\\n1 1 1 1 1') == '1\\n1 1 1'"
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 'Output', \"Solution should return 'Output'.\""
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Got '{solution(input())}', expected '{expected_output}'\"\n"
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"12\\n3 1 4 1 5 9 2 6 5 3 5 8\") == \"12\\n3 4\\n1 2 3 5\\n3 1 5 4\\n5 6 8 9\"\nassert solution(\"5\\n1 1 1 1 1\") == \"1\\n1 1\""
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"12\\n3 1 4 1 5 9 2 6 5 3 5 8\\n\\n12\\n3 4\\n1 2 3 5\\n3 1 5 4\\n5 6 8 9\") == \"12\\n3 4\\n1 2 3 5\\n3 1 5 4\\n5 6 8 9\"\n\ninput = \"\"\"12\n3 1 4 1 5 9 2 6 5 3 5 8\n\n12\n3 4\n1 2 3 5\n3 1 5 4\n5 6 8 9\"\"\"\n\nn = int(input.splitlines()[0].split()[0])\na = [int(x) for x in input.splitlines()[1].split()]\n\np = int(input.splitlines()[2].split()[0])\nq = p * q\n\nmatrix = [[] for _ in range(n)]\n\nfor i in range(p):\n    num = a[i]\n    matrix[i] = [num]\n\nfor i in range(p, n):\n    num = a[i]\n    if num!= matrix[i-p][-1]:\n        matrix[i].append(num)\n        matrix[i-p].append(num)\n\nfor i in range(p, n):\n    for j in range(i, n):\n        if matrix[i][j] == matrix[i-p][j] == matrix[i][j-i]:\n            matrix[i][j] = \"X\"\n\nprint(\"\\n\".join(str(x) for x in matrix))\n\nassert matrix == [[\"1\", \"2\", \"3\", \"X\"], [\"4\", \"5\", \"6\", \"X\"], [\"7\", \"8\", \"9\", \"X\"]]"
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"12\\n3 4\\n1 2 3 5\\n3 1 5 4\\n5 6 8 9\""
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"12\\n3 4\\n1 2 3 5\\n3 1 5 4\\n5 6 8 9\""
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(12, 3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5, 8) == 12\nassert solution(5, 1, 1, 1, 1) == 1"
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1\\n1 3 3\\n\") == \"6\"\nassert solution(\"4 2\\n1 3 2\\n2 3 1\\n\") == \"6\"\nassert solution(\"5 1\\n1 2 1\\n1 3 2\\n2 3 1\\n3 3 1\\n\") == \"6\"\nassert solution(\"6 2\\n1 2 1\\n2 2 1\\n2 3 2\\n2 4 1\\n3 3 1\\n\") == \"6\"\nassert solution(\"7 2\\n1 2 1\\n2 2 1\\n2 3 2\\n2 4 1\\n3 3 1\\n3 4 2\\n\") == \"6\"\nassert solution(\"8 2\\n1 2 1\\n2 2 1\\n2 3 2\\n2 4 1\\n3 3 1\\n3 4 2\\n4 4 1\\n\") == \"6\"\nassert solution(\"9 2\\n1 2 1\\n2 2 1\\n2 3 2\\n2 4 1\\n3 3 1\\n3 4 2\\n4 4 1\\n5 5 1\\n\") == \"6\"\n"
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\\n1 3 3\\n\") == \"6\\n\"\nassert solution(\"3 2\\n1 3 3\\n\") == \"8\\n\"\nassert solution(\"3 1\\n2 3 4\\n\") == \"20\\n\"\nassert solution(\"3 2\\n2 3 4\\n\") == \"16\\n\"\nassert solution(\"3 1\\n1 2 3\\n\") == \"10\\n\"\nassert solution(\"3 2\\n1 2 3\\n\") == \"12\\n\""
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\\n1 3 3\\n\") == \"6\"\nassert solution(\"5 2\\n3 4 2\\n\") == \"18\"\nassert solution(\"4 3\\n1 2 3\\n\") == \"12\"\nassert solution(\"10 4\\n1 3 2 4\\n\") == \"106\"\nassert solution(\"2 5\\n3 2 1\\n\") == \"1\"\n\nfrom typing import List"
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '6'\n\nfrom itertools import combinations"
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"3 1\\n1 3 3\\n\") == \"6\\n\""
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1\\n1 3 3\\n\") == \"6\"\nassert solution(\"1 1\\n2 2 2\\n\") == \"16\"\nassert solution(\"5 1\\n1 1 2 2 2\\n\") == \"168\""
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1\\n1 3 3\\n\") == \"6\"\nassert solution(\"5 2\\n1 2 3 4 5\\n\") == \"12\"\nassert solution(\"10 1\\n1 2 3 4 5 6 7 8 9\\n\") == \"10485760\"\n"
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1\\n1 3 3\\n\") == \"6\"\nassert solution(\"4 1\\n2 3 4\\n3 4 5\\n\") == \"4\"\nassert solution(\"6 2\\n1 4 5\\n2 5 6\\n3 6 7\\n4 7 8\\n5 8 9\\n6 9 10\\n\") == \"1\"\nassert solution(\"7 3\\n1 5 6\\n2 6 7\\n3 7 8\\n4 8 9\\n5 9 10\\n6 10 11\\n7 11 12\\n\") == \"3\"\n"
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1\\n1 3 3\\n\") == \"6\\n\"\nassert solution(\"3 1\\n2 3 1\\n\") == \"3\\n\"\nassert solution(\"3 1\\n1 3 3\\n2 2 3\\n\") == \"0\\n\"\n"
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1\\n1 3 3\\n\") == \"6\\n\"\nassert solution(\"5 2\\n1 2 1\\n1 3 2\\n\") == \"12\\n\"\nassert solution(\"6 3\\n2 3 2\\n2 4 1\\n3 4 2\\n4 5 3\\n\") == \"24\\n\"\nassert solution(\"7 3\\n3 3 3\\n4 3 4\\n5 3 5\\n6 3 6\\n\") == \"48\\n\"\nassert solution(\"8 2\\n1 2 2\\n1 3 1\\n2 3 2\\n3 4 3\\n4 5 4\\n5 6 5\\n\") == \"120\\n\""
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"87654\\n30\") == \"10\"\nassert solution(\"87655\\n30\") == -1\nassert solution(\"100\\n87654\") == \"138\""
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"87654\\n30\") == \"10\"\nassert solution(\"10000000000000000000\\n1234567890\") == \"-1\"\nassert solution(\"10\\n30\") == \"10\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"87654\\n30\") == \"10\"\n"
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"87654\\n30\") == \"10\""
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"87654 30\") == 10\nassert solution(\"87655 30\") == -1\nassert solution(\"87654 123\") == -1\nassert solution(\"87655 123\") == -1\nassert solution(\"123 123\") == 123\nassert solution(\"12345 123\") == 123\nassert solution(\"123 12\") == -1\nassert solution(\"1234 12\") == -1\nassert solution(\"12345 12\") == -1\n"
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"87654\") == \"10\"\nassert solution(\"30\") == \"-1\""
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"87654\") == 10\nassert solution(\"30\") == -1\n\nfrom math import floor"
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '10\\n'"
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"10\"\nassert solution(input()) == \"10\"\nassert solution(input()) == \"10\""
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"10\", \"Incorrect output\"\n"
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"aba\") == \"Second\"\nassert solution(\"abc\") == \"First\"\nassert solution(\"abcd\") == \"First\"\nassert solution(\"efgh\") == \"Second\"\nassert solution(\"ijkl\") == \"First\"\nassert solution(\"mnop\") == \"Second\""
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('aba') == 'Second'\nassert solution('aab') == 'First'\nassert solution('aac') == 'First'\nassert solution('aacb') == 'Second'\nassert solution('acbd') == 'Second'\nassert solution('acd') == 'Second'\nassert solution('ad') == 'First'\nassert solution('adb') == 'First'\nassert solution('adbdc') == 'Second'\nassert solution('adbc') == 'First'\nassert solution('adbcde') == 'Second'\nassert solution('adbe') == 'Second'\nassert solution('adbebf') == 'First'\nassert solution('adbebfg') == 'Second'\nassert solution('adbebfhg') == 'First'\nassert solution('adbebfhgc') == 'Second'\nassert solution('adbebfhgca') == 'First'\nassert solution('adbebfhgcai') == 'Second'\nassert solution('adbebfhgcaiu') == 'First'\nassert solution('adbebfhgcaiuq') == 'Second'\nassert solution('adbebfhgcaiuqr') == 'First'\nassert solution('adbebfhgcaiuqrs') == 'Second'\nassert solution('adbebfhgcaiuqrse') == 'First'\nassert solution('adbebfhgcaiuqrsf') == 'Second'\nassert solution('adbebfhgcaiuqrseg') == 'First'\nassert solution('adbebfhgcaiuqrsegf') == 'Second'\nassert solution('adbebfhgcaiuqrsegf') == 'Second'\nassert solution('adbebfhgcaiuqrsegf') == 'Second'\nassert solution('adbebfhgcaiuqrsegf') == 'Second'\nassert solution('adbebfhgcaiuqrsegf') == 'Second'\nassert solution('adbebfhgcaiuqrsegf') == 'Second'\nassert solution('adbebfhgcaiuqrsegf') == 'Second'\nassert solution('adbebfhgcaiuqrsegf') == 'Second'\nassert solution('adbebfhgcaiuqrsegf') == 'Second'\nassert solution('adbebfhgcaiuqrsegf') == 'Second'\nassert solution('adbebfhgcaiuqrsegf') == 'Second'\nassert solution('adbebfhgcaiuqrsegf') == 'Second'\nassert solution('adbebfhgcaiuqrsegf') == 'Second'\nassert solution('adbebfhgcaiuqrsegf') == 'Second'\nassert solution('adbebfhgcaiuqrsegf') == 'Second'\nassert solution('adbebfhgcaiuqrsegf') == 'Second'\nassert solution('adbebfhgcaiuqrsegf') == 'Second'\nassert solution('adbebfhgcaiuqrsegf') == 'Second'\nassert solution('adbebfhgcaiuqrsegf') == 'Second'\nassert solution('adbebfhgcaiuqrsegf') == 'Second'\nassert solution('adbebfhgcaiuqrsegf') == 'Second'\nassert solution('adbebfhgcaiuqrsegf') == 'Second'\nassert solution('adbebfhgcaiuqrsegf') == 'Second'\nassert solution('adbebfhgcaiuqrsegf') == 'Second'\nassert solution('adbebfhgcaiuqrsegf') == 'Second'\nassert solution('adbebfhgcaiuqrsegf') == 'Second'\nassert solution('adbebfhgcaiuqrsegf') == 'Second'\nassert solution('adbebfhgcaiuqrsegf') == 'Second'\nassert solution('adbebfhgcaiuqrsegf') == 'Second'\nassert solution('adbebfhgcaiuqrsegf') == 'Second'\nassert solution('adbebfhgcaiuqrsegf') == 'Second'\nassert solution('adbebfhgcaiuqrsegf') == 'Second'\nassert solution('adbebfhgcaiuqrsegf') == 'Second'\nassert solution('adbebfhgcaiuqrsegf') == 'Second'\nassert solution('adbebfhgcaiuqrsegf') == 'Second'\nassert solution('adbebfhgcaiuqrsegf') == 'Second'\nassert solution('adbebfhgcaiuqrsegf') == 'Second'\nassert solution('adbebfhgcaiuqrsegf') == 'Second'\nassert solution('adbebfhgcaiuqrsegf') == 'Second'\n"
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('aba') == 'Second'"
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"aba\") == \"Second\""
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"aba\") == \"Second\"\nassert solution(\"aab\") == \"First\"\nassert solution(\"aaab\") == \"Second\"\nassert solution(\"aaac\") == \"First\"\nassert solution(\"bbaa\") == \"First\""
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"aba\") == \"Second\""
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"aba\") == \"Second\""
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aba\") == \"Second\""
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aba\") == \"Second\"\n"
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"aba\") == \"Second\\n\""
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\\n12345\") == \"6\\n\", \"First test case failed.\"\nassert solution(\"16\\n439873893693495623498263984765\") == \"40\\n\", \"Second test case failed.\"\n"
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(10, \"12345\") == 6\nassert solution(16, \"439873893693495623498263984765\") == 40"
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(10) == 6\nassert solution(16) == 40"
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == 'Output'"
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(10, '12345') == 6\nassert solution(16, '439873893693495623498263984765') == 40"
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10\\n12345\\n\") == \"6\\n\", \"The expected output is incorrect.\"\nassert solution(\"16\\n439873893693495623498263984765\\n\") == \"40\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"The expected output is incorrect.\""
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10\\n12345\\n\") == \"6\\n\", \"Test case 1 failed\"\nassert solution(\"16\\n439873893693495623498263984765\\n\") == \"40\\n\", \"Test case 2 failed\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(10) == 6\nassert solution(16) == 40"
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == 'Output', \"Test failed\""
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10\\n12345\") == \"6\\n\", \"Test 1\"\nassert solution(\"16\\n439873893693495623498263984765\") == \"40\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test 2\""
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"332748119\\n332748119\\n3\\n160955686\\n185138929\\n974061117\""
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '332748119\\n332748119\\n'"
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n2 1\n0 1\n2 1\n''') == '332748119'\n\nassert solution('''\n1 2\n1\n1\n''') == '3'\n\nassert solution('''\n3 3\n0 1 1\n4 3 5\n''') == '160955686'"
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"332748119\""
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1\\n0 1\\n2 1\\n\") == \"332748119\\n332748119\\n\"\nassert solution(\"1 2\\n1\\n1\\n\") == \"3\\n\"\nassert solution(\"3 3\\n0 1 1\\n4 3 5\\n\") == \"160955686\\n185138929\\n974061117\\n\""
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n2 1\n0 1\n2 1\n''') == '''332748119'''\n\nassert solution('''\n1 2\n1\n1\n''') == '''3'''\n\nassert solution('''\n3 3\n0 1 1\n4 3 5\n''') == '''160955686'''"
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"example.in\", \"r\").read()) == \"332748119\\n332748119\\n\"\nassert solution(open(\"example.in\", \"r\").read()) == \"3\\n160955686\\n185138929\\n974061117\\n\"\nassert solution(open(\"example.in\", \"r\").read()) == \"332748119\\n332748119\\n\""
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1\\n0 1\\n2 1\\n\") == \"332748119\\n332748119\\n\"\nassert solution(\"1 2\\n1\\n1\\n\") == \"3\\n\"\nassert solution(\"3 3\\n0 1 1\\n4 3 5\\n\") == \"160955686\\n185138929\\n974061117\\n\""
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}\\nActual output: {solution(input())}\""
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 1\\n0 1\\n2 1\\n') == '332748119\\n332748119\\n'\nassert solution('1 2\\n1\\n1\\n') == '3\\n'\nassert solution('3 3\\n0 1 1\\n4 3 5\\n') == '160955686\\n185138929\\n974061117\\n'"
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Expected '{output()}', got '{solution(input())}'\""
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('AJKEQSLOBSROFGZ') == 'ORZ'\nassert solution('AA') == '0'"
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"AJKEQSLOBSROFGZ\" \"OVGURWZLWVLUXTH\" \"OZ\") == \"ORZ\", \"The correct output should be 'ORZ'\"\nassert solution(\"AA\" \"A\" \"A\") == \"0\", \"The correct output should be '0'\"\nassert solution(\"A\" \"B\" \"C\") == \"D\", \"The correct output should be 'D'\""
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"AJKEQSLOBSROFGZ\\nOVGURWZLWVLUXTH\\nOZ\") == \"ORZ\""
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('AJKEQSLOBSROFGZ') == 'ORZ'\nassert solution('AA') == 0"
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input(\"AJKEQSLOBSROFGZ\\nOVGURWZLWVLUXTH\\nOZ\\n\")) == \"ORZ\"\n\nassert solution(input(\"AA\\nA\\nA\\n\")) == \"0\""
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('AJKEQSLOBSROFGZ\\nOVGURWZLWVLUXTH\\nOZ') == 'ORZ\\n'\nassert solution('AA\\nA\\nA') == '0\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"AJKEQSLOBSROFGZ\") == \"ORZ\", \"Expected: ORZ, actual: {}\".format(solution(\"AJKEQSLOBSROFGZ\"))\nassert solution(\"OVGURWZLWVLUXTH\") == \"ORZ\", \"Expected: ORZ, actual: {}\".format(solution(\"OVGURWZLWVLUXTH\"))\nassert solution(\"AA\") == \"0\", \"Expected: 0, actual: {}\".format(solution(\"AA\"))"
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"AJKEQSLOBSROFGZ\") == \"ORZ\", \"The given input is invalid.\"\nassert solution(\"AA\") == 0, \"The given input is invalid.\""
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('AJKEQSLOBSROFGZ') == 'ORZ', \"Invalid output: {}\".format(solution('AJKEQSLOBSROFGZ'))\nassert solution('AA') == '0', \"Invalid output: {}\".format(solution('AA'))"
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 2 1\\n1 100 1\\n1 100 100') == '99'\nassert solution('100 100 100\\n1 1 1\\n1 1 1') == '0'"
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 1\\n1 100 1\\n1 100 100\") == \"99\"\n\nassert solution(\"100 100 100\\n1 1 1\\n1 1 1\") == \"0\""
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '99', 'The correct output should be 99.'"
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 2 1\\n1 100 1\\n1 100 100') == '99'\nassert solution('100 100 100\\n1 1 1\\n1 1 1') == '0'\n"
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 1\\n1 100 1\\n1 100 100\") == \"99\"\nassert solution(\"100 100 100\\n1 1 1\\n1 1 1\") == \"0\""
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 2 1\\n1 100 1\\n1 100 100') == '99'\nassert solution('100 100 100\\n1 1 1\\n1 1 1') == '0'"
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 2 1\\n1 100 1\\n1 100 100') == '99'\nassert solution('100 100 100\\n1 1 1\\n1 1 1') == '0'"
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 1\\n1 100 1\\n1 100 100\") == 99\nassert solution(\"100 100 100\\n1 1 1\\n1 1 1\") == 0"
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 1\\n1 100 1\\n1 100 100\") == 99, \"The first test case should output 99\"\nassert solution(\"100 100 100\\n1 1 1\\n1 1 1\") == 0, \"The second test case should output 0\""
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 1\\n1 100 1\\n1 100 100\") == \"99\"\nassert solution(\"100 100 100\\n1 1 1\\n1 1 1\") == \"0\"\nassert solution(\"1 2 1\\n100 100 100\\n100 100 100\") == \"99\""
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1000000000000, 1048576) == 118606527258, \"Expected 118606527258, got {}\".format(solution(1000000000000, 1048576))"
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"3 3\") == \"0\"\nassert solution(\"1000000000000 1048576\") == \"118606527258\""
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1, 1) == 1, \"Expected 1, but got {}\".format(solution(1, 1))\nassert solution(3, 2) == 1, \"Expected 1, but got {}\".format(solution(3, 2))\nassert solution(3, 3) == 0, \"Expected 0, but got {}\".format(solution(3, 3))\nassert solution(1000000000000, 1048576) == 118606527258, \"Expected 118606527258, but got {}\".format(solution(1000000000000, 1048576))"
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(f\"{1} 1\\n\") == \"1\\n\"\nassert solution(f\"{3} 2\\n\") == \"1\\n\"\nassert solution(f\"{3} 3\\n\") == \"0\\n\"\nassert solution(f\"{1000000000000 1048576\\n\") == \"118606527258\\n\""
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1\\n\") == \"1\\n\", \"1\"\nassert solution(\"3 2\\n\") == \"1\\n\", \"1\"\nassert solution(\"3 3\\n\") == \"0\\n\", \"0\"\nassert solution(\"1000000000000 1048576\\n\") == \"118606527258\\n\", \"118606527258\""
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == 1\nassert solution(2) == 1\nassert solution(3) == 0\nassert solution(1000000000000) == 118606527258"
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"1\\n\"\nassert solution(\"3 2\") == \"1\\n\"\nassert solution(\"3 3\") == \"0\\n\"\nassert solution(\"1000000000000 1048576\") == \"118606527258\\n\"\n"
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3, 2) == 1\nassert solution(3, 3) == 0\nassert solution(1000000000000, 1048576) == 118606527258\n"
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 1\\n') == '1'\nassert solution('3 2\\n') == '1'\nassert solution('3 3\\n') == '0'\nassert solution('1000000000000 1048576\\n') == '118606527258'\n"
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == 1, \"The expected output is 1.\"\nassert solution(3) == 1, \"The expected output is 1.\"\nassert solution(3, 1048576) == 118606527258, \"The expected output is 118606527258.\""
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"-++-\") == \"Yes\", \"First test case\"\nassert solution(\"+\") == \"No\", \"Second test case\"\nassert solution(\"++\") == \"Yes\", \"Third test case\"\nassert solution(\"-\") == \"No\", \"Fourth test case\"\n"
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"+-\") == \"No\", \"First testcase should not be valid.\"\nassert solution(\"-+\") == \"No\", \"Second testcase should not be valid.\"\nassert solution(\"++\") == \"Yes\", \"Third testcase should be valid.\"\nassert solution(\"-\") == \"No\", \"Fourth testcase should not be valid.\""
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Test case {input()} failed. Expected output: {expected_output}, Actual output: {solution(input())}\"\n\nexpected_output = \"Yes\"\n\nSolution:\nTo solve the problem, we need to traverse the given sequence and check if the wires can be untangled or not. We will perform this by moving the \"plus\" wire higher in the sequence and then drawing it under the \"minus\" wire. If the wires cannot be untangled, we will move the \"plus\" wire lower and then draw it under the \"minus\" wire.\n\nLet's write the code to solve this problem."
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"No\", \"Expected: 'No', but got: '{}'\".format(solution(\"\"))\nassert solution(\"++\") == \"Yes\", \"Expected: 'Yes', but got: '{}'\".format(solution(\"++\"))\nassert solution(\"-\") == \"No\", \"Expected: 'No', but got: '{}'\".format(solution(\"-\"))"
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"-++-\") == \"Yes\"\nassert solution(\"-+-\") == \"No\"\nassert solution(\"++\") == \"Yes\"\nassert solution(\"-\") == \"No\""
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"-++-\") == \"Yes\"\nassert solution(\"-\") == \"No\"\nassert solution(\"+\") == \"Yes\"\nassert solution(\"++\") == \"Yes\"\nassert solution(\"-\") == \"No\""
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"No\"\nassert solution(\"-+-\") == \"No\"\nassert solution(\"-+++\") == \"No\"\nassert solution(\"++\") == \"Yes\"\nassert solution(\"-\") == \"No\""
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"-++-\") == \"Yes\"\nassert solution(\"-\") == \"No\"\nassert solution(\"--\") == \"Yes\"\nassert solution(\"-\") == \"No\""
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"No\"\nassert solution(\"-\") == \"No\"\nassert solution(\"+\") == \"Yes\"\nassert solution(\"++\") == \"Yes\"\nassert solution(\"+-\") == \"No\""
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"+-\") == \"No\"\nassert solution(\"++\") == \"Yes\"\nassert solution(\"-\") == \"Yes\"\n\nprint(\"All tests pass\")"
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 0 0\\n0 1\\n-1 2\\n1 2\") == \"12.566370614359172464\"\nassert solution(\"4 1 -1\\n0 0\\n1 2\\n2 0\\n1 1\") == \"21.991148575128551812\""
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 12.566370614359172464\n\n### Explanation: \n\nThe first test case passes. The problem asks for the area of a region that is cleared from snow. We will find the area of a region that is cleared from snow by finding the convex hull of all the vertices of the polygon and then finding the area of the convex hull. \n\nTo find the convex hull of the polygon, we can use the concept of polygon hull. We start by finding the convex hull of the polygon by taking the boundary of the polygon and then finding the boundary of the convex hull by finding the convex hull of the convex hull of the boundary.\n\nThen, we can find the area of the convex hull by finding the area of the closed polygon formed by the vertices of the convex hull.\n\nLet's see the code for the solution."
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 0 0\\n0 1\\n-1 2\\n1 2\") == 12.566370614359172464\nassert solution(\"4 1 -1\\n0 0\\n1 2\\n2 0\\n1 1\") == 21.991148575128551812"
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 0 0\\n0 1\\n-1 2\\n1 2\") == 12.566370614359172464\nassert solution(\"4 1 -1\\n0 0\\n1 2\\n2 0\\n1 1\") == 21.991148575128551812"
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 0 0\\n0 1\\n-1 2\\n1 2') == 12.566370614359172464\nassert solution('4 1 -1\\n0 0\\n1 2\\n2 0\\n1 1') == 21.991148575128551812\n"
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 0, 0) == 12.566370614359172464, \"answer should be 12.566370614359172464\"\nassert solution(4, 1, -1) == 21.991148575128551812, \"answer should be 21.991148575128551812\""
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '12.566370614359172464'"
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n3 0 0\n0 1\n-1 2\n1 2\n\"\"\") == 12.566370614359172464\n\nassert solution(\n\"\"\"\n4 1 -1\n0 0\n1 2\n2 0\n1 1\n\"\"\") == 21.991148575128551812\n\nassert solution(\n\"\"\"\n3 0 0\n0 1\n-1 2\n1 2\n\"\"\") == 12.566370614359172464\n\nassert solution(\n\"\"\"\n4 1 -1\n0 0\n1 2\n2 0\n1 1\n\"\"\") == 21.991148575128551812"
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 0 0\\n0 1\\n-1 2\\n1 2\") == 12.566370614359172464\nassert solution(\"4 1 -1\\n0 0\\n1 2\\n2 0\\n1 1\") == 21.991148575128551812"
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"48\") == \"9 42\\n\"\nassert solution(\"6\") == \"6 6\\n\"\nassert solution(\"23\") == \"9 42\\n\"\nassert solution(\"42\") == \"9 42\\n\""
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"48\") == \"9 42\"\nassert solution(\"6\") == \"6 6\""
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"48\") == \"9 42\\n\", \"Test Case 1 Failed\"\nassert solution(\"6\") == \"6 6\\n\", \"Test Case 2 Failed\"\nassert solution(\"10\") == \"11 11\\n\", \"Test Case 3 Failed\""
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"48\\n\") == \"9 42\\n\"\nassert solution(\"6\\n\") == \"6 6\\n\""
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(48) == '9 42'\nassert solution(6) == '6 6'"
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"48\") == \"9 42\\n\"\nassert solution(\"6\") == \"6 6\\n\"\n"
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"9 42\\n6 6\\n\", \"Test case failed\"\n"
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('48') == '9 42', 'Test 1'\nassert solution('6') == '6 6', 'Test 2'"
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('48') == '9 42'\nassert solution('6') == '6 6'"
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"48\") == \"9 42\"\nassert solution(\"6\") == \"6 6\""
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2') == 'Yes'\nassert solution('3') == 'No'\nassert solution('2') == 'Yes'\nassert solution('10') == 'No'"
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for input: {input()}, expected output: {expected_output}\""
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2') == 'Yes'\nassert solution('3') == 'No'\nassert solution('2') == 'Yes'\nassert solution('10') == 'No'"
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n)(\") == \"Yes\"\nassert solution(\"3\\n(()\") == \"No\"\nassert solution(\"2\\n()\") == \"Yes\"\nassert solution(\"10\\n())))(((((\") == \"No\""
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n)(\\n\") == \"Yes\"\nassert solution(\"3\\n(()\\n\") == \"No\"\nassert solution(\"2\\n()\") == \"Yes\"\nassert solution(\"10\\n)))(((((\\n\") == \"No\""
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n)(\\n') == 'Yes\\n'\nassert solution('3\\n(()\\n') == 'No\\n'\nassert solution('2\\n()') == 'Yes\\n'\nassert solution('10\\n(((\\n') == 'No\\n'\n\nfor _ in range(10):\n    solution()"
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"Yes\"\nassert solution(\"3\") == \"No\"\nassert solution(\"2\") == \"Yes\"\nassert solution(\"10\") == \"No\""
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2') == 'Yes'\nassert solution('3') == 'No'\nassert solution('2') == 'Yes'\nassert solution('10') == 'No'"
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n)(\\n\") == \"Yes\"\nassert solution(\"3\\n(()\\n\") == \"No\"\nassert solution(\"2\\n()\") == \"Yes\"\nassert solution(\"10\\n)))(((((\\n\") == \"No\""
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(solution(solution(\"(()())\")) == \"Yes\"), \"Petya's friends made him a birthday present \u2014 a bracket sequence.\"\nassert solution(solution(solution(\"()()()\")) == \"No\"), \"Petya's friends made him a birthday present \u2014 a bracket sequence.\"\nassert solution(solution(solution(\"(())()\")) == \"Yes\"), \"Petya's friends made him a birthday present \u2014 a bracket sequence.\"\nassert solution(solution(solution(\"())())\")) == \"Yes\"), \"Petya's friends made him a birthday present \u2014 a bracket sequence.\"\nassert solution(solution(solution(\"(())()(\"))) == \"No\"), \"Petya's friends made him a birthday present \u2014 a bracket sequence.\"\nassert solution(solution(solution(\"(())()(\"))) == \"Yes\"), \"Petya's friends made him a birthday present \u2014 a bracket sequence.\"\nassert solution(solution(solution(\"(())()(\"))) == \"No\"), \"Petya's friends made him a birthday present \u2014 a bracket sequence.\"\nassert solution(solution(solution(\"(()())(\"))) == \"Yes\"), \"Petya's friends made him a birthday present \u2014 a bracket sequence.\"\nassert solution(solution(solution(\"(())())(\"))) == \"No\"), \"Petya's friends made him a birthday present \u2014 a bracket sequence.\"\nassert solution(solution(solution(\"(()())(\"))) == \"Yes\"), \"Petya's friends made him a birthday present \u2014 a bracket sequence.\"\nassert solution(solution(solution(\"(())())(\"))) == \"No\"), \"Petya's friends made him a birthday present \u2014 a bracket sequence.\"\nassert solution(solution(solution(\"(()())(\"))) == \"Yes\"), \"Petya's friends made him a birthday present \u2014 a bracket sequence.\"\nassert solution(solution(solution(\"(())())(\"))) == \"No\"), \"Petya's friends made him a birthday present \u2014 a bracket sequence.\"\nassert solution(solution(solution(\"(()())(\"))) == \"Yes\"), \"Petya's friends made him a birthday present \u2014 a bracket sequence.\"\nassert solution(solution(solution(\"(())())(\"))) == \"No\"), \"Petya's friends made him a birthday present \u2014 a bracket sequence.\""
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 0, \"Test 1\"\nassert solution(\"1 50\\n50\\n\") == 1, \"Test 2\"\nassert solution(\"3 100\\n50 50 100\\n\") == 5, \"Test 3\"\nassert solution(\"2 50\\n50 50\\n\") == -1, \"Test 4\"\n\nfrom typing import List"
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 50\\n50\\n') == '1\\n1\\n'\nassert solution('3 100\\n50 50 100\\n') == '5\\n2\\n'\nassert solution('2 50\\n50 50\\n') == '-1\\n0\\n'\n\nfrom collections import Counter"
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Got {solution(input())}, expected {expected_output}\""
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(str(input())) == solution(str(input()))\nassert solution(str(input())) == solution(str(input()))\nassert solution(str(input())) == solution(str(input()))\nassert solution(str(input())) == solution(str(input()))\nassert solution(str(input())) == solution(str(input()))\nassert solution(str(input())) == solution(str(input()))\nassert solution(str(input())) == solution(str(input()))\nassert solution(str(input())) == solution(str(input()))\nassert solution(str(input())) == solution(str(input()))\nassert solution(str(input())) == solution(str(input()))\nassert solution(str(input())) == solution(str(input()))\nassert solution(str(input())) == solution(str(input()))\nassert solution(str(input())) == solution(str(input()))\nassert solution(str(input())) == solution(str(input()))\nassert solution(str(input())) == solution(str(input()))\nassert solution(str(input())) == solution(str(input()))\nassert solution(str(input())) == solution(str(input()))\nassert solution(str(input())) == solution(str(input()))\nassert solution(str(input())) == solution(str(input()))\nassert solution(str(input())) == solution(str(input()))\nassert solution(str(input())) == solution(str(input()))\nassert solution(str(input())) == solution(str(input()))\nassert solution(str(input())) == solution(str(input()))\nassert solution(str(input())) == solution(str(input()))\nassert solution(str(input())) == solution(str(input()))\nassert solution(str(input())) == solution(str(input()))\nassert solution(str(input())) == solution(str(input()))\nassert solution(str(input())) == solution(str(input()))\nassert solution(str(input())) == solution(str(input()))\nassert solution(str(input())) == solution(str(input()))\nassert solution(str(input())) == solution(str(input()))\nassert solution(str(input())) == solution(str(input()))\nassert solution(str(input())) == solution(str(input()))\nassert solution(str(input())) == solution(str(input()))\nassert solution(str(input())) == solution(str(input()))\nassert solution(str(input())) == solution(str(input()))\nassert solution(str(input())) == solution(str(input()))\nassert solution(str(input())) == solution(str(input()))\nassert solution(str(input())) == solution(str(input()))\nassert solution(str(input())) == solution(str(input()))\nassert solution(str(input())) == solution(str(input()))\nassert solution(str(input())) == solution(str(input()))\nassert solution(str(input())) == solution(str(input()))\nassert solution(str(input())) == solution(str(input()))\nassert solution(str(input())) == solution(str(input()))\nassert solution(str(input())) == solution(str(input()))\nassert solution(str(input())) == solution(str(input()))\nassert solution(str(input())) == solution(str(input()))\nassert solution(str(input())) == solution(str(input()))\nassert solution(str(input())) == solution(str(input()))\nassert solution(str(input())) == solution(str(input()))\nassert solution(str(input())) == solution(str(input()))\nassert solution(str(input())) == solution(str(input()))\nassert solution(str(input())) == solution(str(input()))\nassert solution(str(input())) == solution(str(input()))\nassert solution(str(input())) == solution(str(input()))\nassert solution(str(input())) == solution(str(input()))\nassert solution(str(input())) == solution(str(input()))\nassert solution(str(input())) == solution(str(input()))\nassert solution(str(input())) == solution(str(input()))\nassert solution(str(input())) == solution(str(input()))\nassert solution(str(input())) == solution(str(input()))\nassert solution(str(input())) == solution(str(input()))\nassert solution(str(input())) == solution(str(input()))\nassert solution(str(input())) == solution(str(input()))\nassert solution(str(input())) == solution(str(input()))\nassert solution(str(input())) == solution(str(input()))\nassert solution(str(input())) == solution(str(input()))\nassert solution(str(input"
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 50\\n50\\n\") == \"1\"\nassert solution(\"3 100\\n50 50 100\\n\") == \"5\"\nassert solution(\"2 50\\n50 50\\n\") == \"-1\"\nassert solution(\"\") == \"0\"\nassert solution(\"1 50\\n50\\n\") == \"1\"\nassert solution(\"3 100\\n50 50 100\\n\") == \"5\"\nassert solution(\"2 50\\n50 50\\n\") == \"-1\"\nassert solution(\"\") == \"0\"\n"
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 50\\n50\") == \"1\\n1\"\nassert solution(\"3 100\\n50 50 100\") == \"5\\n2\"\nassert solution(\"2 50\\n50 50\") == \"-1\\n0\""
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 50\\n50\\n\") == \"1\\n1\\n\"\nassert solution(\"3 100\\n50 50 100\\n\") == \"5\\n2\\n\"\nassert solution(\"2 50\\n50 50\\n\") == \"-1\\n0\\n\""
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '1\\n1\\n5\\n2\\n'"
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 50') == '1\\n1\\n'\nassert solution('3 100') == '5\\n2\\n'\nassert solution('2 50') == '-1\\n0\\n'"
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 50\\n50\\n') == '1\\n1\\n'\nassert solution('3 100\\n50 50 100\\n') == '5\\n2\\n'\nassert solution('2 50\\n50 50\\n') == '-1\\n0\\n'"
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n2 6 8\\n') == '2\\n'\nassert solution('5\\n2 3 4 9 12\\n') == '4\\n'\nassert solution('4\\n5 7 2 9\\n') == '1\\n'"
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2 6 8\") == \"2\"\nassert solution(\"5\\n2 3 4 9 12\") == \"4\"\nassert solution(\"4\\n5 7 2 9\") == \"1\""
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n2 6 8') == '2\\n'\nassert solution('5\\n2 3 4 9 12') == '4\\n'\nassert solution('4\\n5 7 2 9') == '1\\n'\n"
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n2 6 8\\n\") == \"2\\n\"\nassert solution(\"5\\n2 3 4 9 12\\n\") == \"4\\n\"\nassert solution(\"4\\n5 7 2 9\\n\") == \"1\\n\""
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n2 6 8\") == \"2\\n\"\nassert solution(\"5\\n2 3 4 9 12\") == \"4\\n\"\nassert solution(\"4\\n5 7 2 9\") == \"1\\n\""
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n2 6 8\") == \"2\\n\"\nassert solution(\"5\\n2 3 4 9 12\") == \"4\\n\"\nassert solution(\"4\\n5 7 2 9\") == \"1\\n\""
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n2 6 8') == '2\\n'\nassert solution('5\\n2 3 4 9 12') == '4\\n'\nassert solution('4\\n5 7 2 9') == '1\\n'"
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(example1) == '2'\nassert solution(example2) == '4'\nassert solution(example3) == '1'"
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"3\n2 6 8\"\"\") == \"2\\n\"\nassert solution(\"\"\"5\n2 3 4 9 12\"\"\") == \"4\\n\"\nassert solution(\"\"\"4\n5 7 2 9\"\"\") == \"1\\n\""
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n2 6 8\\n\") == \"2\"\nassert solution(\"5\\n2 3 4 9 12\\n\") == \"4\"\nassert solution(\"4\\n5 7 2 9\\n\") == \"1\""
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 6\nassert solution() == -1\nassert solution() == 5"
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == expected_solution, \"The solution is not correct.\""
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\").read()) == \"6\\n\"\nassert solution(open(\"input_2.txt\").read()) == \"-1\\n\"\nassert solution(open(\"input_3.txt\").read()) == \"5\\n\"\nassert solution(open(\"input_4.txt\").read()) == \"5\\n\""
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == expected\n"
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin='3') == '6\\n'\nassert solution(stdin='2') == '-1\\n'\nassert solution(stdin='5') == '5\\n'"
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(solution.input) == solution.output, f\"Test failed. Expected output: {solution.output}, got: {solution(solution.input)}\""
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 6\nassert solution(2) == -1\nassert solution(5) == 5"
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3, 17, 15, 12) == 6\nassert solution(2, 10, 16) == -1\nassert solution(5, 90, 108, 45, 105, 75, 165, 33) == 5"
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(5) == 5\nassert solution(2) == -1\nassert solution(3) == 6\nassert solution(4) == 5\nassert solution(5) == 5\nassert solution(17) == 6\nassert solution(15) == 5\nassert solution(12) == 6\nassert solution(10) == 6\nassert solution(7) == 5\nassert solution(16) == 5\nassert solution(33) == 5\nassert solution(30) == 5\nassert solution(165) == 6\nassert solution(108) == 6\nassert solution(90) == 6"
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\\n1 0\\n1 3\\n\\n0\"\nassert solution(input()) == \"0\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('bab') == '1 0'\nassert solution('bb') == '1 3'\nassert solution('bbbb') == '0'"
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"The output and expected outputs are not the same.\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"bab\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bb\") == \"1 0\\n1 3\"\nassert solution(\"bbbb\") == \"0\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"bab\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bb\") == \"1\\n0\"\nassert solution(\"bbbb\") == \"0\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"bab\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bb\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bbbb\") == \"0\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"bab\") == \"2\"\nassert solution(\"bb\") == \"1 0\"\nassert solution(\"bbbb\") == \"0\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"bab\") == \"1 0\\n1 3\"\nassert solution(\"bb\") == \"1 0\\n1 3\"\nassert solution(\"bbbb\") == \"0\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('bab') == '2'\nassert solution('bb') == '1 0'\nassert solution('bbbb') == '0'"
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"bab\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bb\") == \"1\\n0\"\nassert solution(\"bbbb\") == \"0\""
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 'POSSIBLE', \"Solution should return 'POSSIBLE'.\"\nprint(\"Solution Passed\")"
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"POSSIBLE\"\n"
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 1\\n4 3 2\") == \"POSSIBLE\""
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 1\\n4 3 2\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 2\\n5 1 2\") == \"IMPOSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 2\\n1 2 1\\n1 2 3\") == \"IMPOSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 2\\n1 2 1\\n1 2 3\\n1 2 4\") == \"POSSIBLE\"\n"
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 1\\n4 3 2\\n\") == \"POSSIBLE\"\nassert solution(\"1\\n1 1\\n\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 2\\n5 4 2\\n\") == \"POSSIBLE\"\nassert solution(\"1\\n1 1\\n\") == \"POSSIBLE\"\nassert solution(\"1\\n1 1\\n\") == \"POSSIBLE\"\nassert solution(\"1\\n1 1\\n\") == \"POSSIBLE\"\nassert solution(\"1\\n1 1\\n\") == \"POSSIBLE\"\nassert solution(\"1\\n1 1\\n\") == \"POSSIBLE\""
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 1\\n4 3 2\") == \"POSSIBLE\\n\""
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'POSSIBLE'\n"
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n1 1\\n4 3 2\\n') == 'POSSIBLE'"
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 1\\n4 3 2\") == \"POSSIBLE\"\nassert solution(\"6\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\") == \"POSSIBLE\"\nassert solution(\"2\\n1 1\\n2 2\") == \"IMPOSSIBLE\"\nassert solution(\"5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 1\\n4 3 2\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n2 2\\n3 4\\n4 5 6\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 1000000007') == '2'\nassert solution('5 1000000007') == '5'\nassert solution('1 2000000007') == '1'\nassert solution('2 2000000007') == '2'\nassert solution('1 3000000007') == '3'"
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2\", \"Test case failed.\""
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2\""
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1000000007\") == \"2\\n\""
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1000000007\") == \"2\""
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1000000007\") == \"2\", \"Test case 1\"\nassert solution(\"3 1000000007\") == \"1\", \"Test case 2\"\nassert solution(\"5 1000000007\") == \"2\", \"Test case 3\"\nassert solution(\"7 1000000007\") == \"3\", \"Test case 4\"\nassert solution(\"9 1000000007\") == \"4\", \"Test case 5\""
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 1000000007') == '2', \"Test Case 1 Failed\"\nassert solution('3 1000000007') == '2', \"Test Case 2 Failed\"\nassert solution('4 1000000007') == '2', \"Test Case 3 Failed\"\nassert solution('5 1000000007') == '1', \"Test Case 4 Failed\"\nassert solution('6 1000000007') == '1', \"Test Case 5 Failed\""
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"2\""
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2\"\nassert solution() == \"4\""
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1000000007\") == \"2\"\n"
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=stdin) == expected, f\"The output '{solution(stdin=stdin)}' is not equal to the expected output '{expected}'.\"\n"
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2 3 3\\n+-+\") == \"7\"\nassert solution(\"4 1 5 1\\n-\") == \"999999228\""
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 2 3 3\\n+-+\\n') == '7'\nassert solution('4 1 5 1\\n-') == '999999228'"
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2 3 3\\n+-+\\n\") == \"7\"\nassert solution(\"4 1 5 1\\n-\") == \"999999228\""
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"7\" # Correct output"
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2 3 3\\n+-+\") == \"7\"\nassert solution(\"4 1 5 1\\n-\") == \"999999228\"\n"
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2 3 3\\n+-+\") == 7\nassert solution(\"4 1 5 1\\n-\") == 999999228"
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 2 3 3\\n+-+\\n') == '7\\n'\nassert solution('4 1 5 1\\n-') == '999999228\\n'"
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"7\\n\", \"The output is incorrect.\""
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1 1 2\") == \"4\\n\"\nassert solution(\"1 2 3 1\") == \"2\\n\"\nassert solution(\"10 2 1 7\") == \"0\\n\""
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Input does not match the expected output.\"\n"
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1 1 2\") == \"4\"\nassert solution(\"1 2 3 1\") == \"2\"\nassert solution(\"10 2 1 7\") == \"0\"\n"
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1 1 2\\n\") == \"4\\n\"\nassert solution(\"1 2 3 1\\n\") == \"2\\n\"\nassert solution(\"10 2 1 7\\n\") == \"0\\n\"\n\nassert solution(\"2 2 1 1\\n\") == \"4\\n\"\nassert solution(\"1 1 1 3\\n\") == \"1\\n\"\nassert solution(\"1 2 2 2\\n\") == \"3\\n\"\n\nassert solution(\"3 3 3 3\\n\") == \"6\\n\"\nassert solution(\"2 3 2 2\\n\") == \"4\\n\"\nassert solution(\"1 2 1 1\\n\") == \"1\\n\"\n\nassert solution(\"4 4 4 4\\n\") == \"16\\n\"\nassert solution(\"3 4 3 3\\n\") == \"9\\n\"\nassert solution(\"2 3 2 2\\n\") == \"6\\n\"\nassert solution(\"1 2 1 1\\n\") == \"1\\n\""
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1 1 2\\n1 2 3 1\\n10 2 1 7\\n\") == \"4\"\nassert solution(\"1 2 3 1\\n1 3 5 2\\n10 2 1 7\\n\") == \"2\"\nassert solution(\"10 2 1 7\\n10 3 2 8\\n10 3 3 9\\n\") == \"0\""
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1 2\") == \"4\"\nassert solution(\"1 2 3 1\") == \"2\"\nassert solution(\"10 2 1 7\") == \"0\""
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1 1 2\") == \"4\"\nassert solution(\"1 2 3 1\") == \"2\"\nassert solution(\"10 2 1 7\") == \"0\""
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1 1 2\\n\") == \"4\"\nassert solution(\"1 2 3 1\\n\") == \"2\"\nassert solution(\"10 2 1 7\\n\") == \"0\""
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1 1 2\") == 4, \"The number of ways to increase the sizes of the sticks by the total of at most 2 centimeters, so that you can make a non-degenerate triangle from them is incorrect.\"\n\nassert solution(\"1 2 3 1\") == 2, \"The number of ways to increase the sizes of the sticks by the total of at most 1 centimeter, so that you can make a non-degenerate triangle from them is incorrect.\"\n\nassert solution(\"10 2 1 7\") == 0, \"The number of ways to increase the sizes of the sticks by the total of at most 7 centimeters, so that you can make a non-degenerate triangle from them is incorrect.\""
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1 1 2\\n1 2 3 1\\n10 2 1 7\\n\") == \"4\\n\"\nassert solution(\"1 2 3 1\\n\") == \"2\\n\"\nassert solution(\"10 2 1 7\\n\") == \"0\\n\""
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 2') == '6'\nprint(\"All tests passed!\")"
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 2') == '6'"
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\") == \"6\""
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2\") == \"6\""
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3, 2) == \"6\\n\""
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 2') == '6\\n', \"Expected '6\\n', got '{}'\".format(solution('3 2'))"
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\") == \"6\\n\"\nassert solution(\"5 3\") == \"10\\n\"\nassert solution(\"1 2\") == \"3\\n\""
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"6\", \"Incorrect output\"\n"
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"6\\n\", \"Invalid solution\""
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3, 2) == \"6\"\n"
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\\n\", \"The output should be 2.\""
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '2\\n', \"Your code is incorrect.\""
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 2\n"
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\"\nassert solution(\"4\\n1 2\\n2 3\\n3 4\\n\") == \"20\""
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(None) == '0'  # empty input\nassert solution('2') == '2'  # edge case\nassert solution('3 4') == '6'  # edge case\nassert solution('1 2 3 4 5') == '6'  # edge case\nassert solution('1 2 3 4') == '6'  # edge case\nassert solution('1 2') == '0'  # edge case\nassert solution('1 1') == '0'  # edge case\nassert solution('1 3') == '1'  # edge case\nassert solution('1 2 3') == '2'  # edge case\nassert solution('1 2 3 1 2 3') == '6'  # edge case\nassert solution('1 2 3 1 2') == '5'  # edge case\nassert solution('1 2 3 1 2 4') == '6'  # edge case\nassert solution('1 2 3 1 2 5') == '7'  # edge case\nassert solution('1 2 3 1 2 4 5') == '7'  # edge case\nassert solution('1 2 3 1 2 4 5 6') == '10'  # edge case\nassert solution('1 2 3 1 2 4 5 6 7') == '12'  # edge case\nassert solution('1 2 3 1 2 4 5 6 7 8') == '15'  # edge case\nassert solution('1 2 3 1 2 4 5 6 7 8 9') == '18'  # edge case\nassert solution('1 2 3 1 2 4 5 6 7 8 9 10') == '21'  # edge case\nassert solution('1 2 3 1 2 4 5 6 7 8 9 10 11') == '25'  # edge case\nassert solution('1 2 3 1 2 4 5 6 7 8 9 10 11 12') == '29'  # edge case\nassert solution('1 2 3 1 2 4 5 6 7 8 9 10 11 12 13') == '34'  # edge case\nassert solution('1 2 3 1 2 4 5 6 7 8 9 10 11 12 13 14') == '40'  # edge case\nassert solution('1 2 3 1 2 4 5 6 7 8 9 10 11 12 13 14 15') == '47'  # edge case\nassert solution('1 2 3 1 2 4 5 6 7 8 9 10 11 12 13 14 15 16') == '56'  # edge case\nassert solution('1 2 3 1 2 4 5 6 7 8 9 10 11 12 13 14 15 16 17') == '67'  # edge case\nassert solution('1 2 3 1 2 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18') == '81'  # edge case\nassert solution('1 2 3 1 2 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19') == '98'  # edge case\nassert solution('1 2 3 1 2 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20') == '119'  # edge case\nassert solution('1 2 3 1 2 4 5 6 7 8 9 10 11 12 13 14 15"
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1 2\") == \"2\"\nassert solution(\"3\\n1 2\\n2 3\\n3 1\") == \"0\"\nassert solution(\"4\\n1 2\\n2 3\\n3 4\\n4 1\") == \"5\"\nassert solution(\"5\\n1 2\\n2 3\\n3 4\\n4 5\\n5 1\") == \"6\"\nassert solution(\"6\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 1\") == \"3\"\nassert solution(\"7\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 1\") == \"2\""
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\"\nassert solution(\"2\\n1 2\\n3 4\\n\") == \"0\\n\"\nassert solution(\"2\\n1 2\\n5 6\\n\") == \"3\\n\"\nassert solution(\"3\\n1 2\\n\") == \"1\\n\"\nassert solution(\"3\\n1 2\\n3 4\\n\") == \"0\\n\"\nassert solution(\"3\\n1 2\\n5 6\\n\") == \"2\\n\"\nassert solution(\"4\\n1 2\\n\") == \"2\\n\"\nassert solution(\"4\\n1 2\\n3 4\\n\") == \"1\\n\"\nassert solution(\"4\\n1 2\\n5 6\\n\") == \"3\\n\"\nassert solution(\"5\\n1 2\\n\") == \"4\\n\"\nassert solution(\"5\\n1 2\\n3 4\\n\") == \"2\\n\"\nassert solution(\"5\\n1 2\\n5 6\\n\") == \"5\\n\"\nassert solution(\"6\\n1 2\\n\") == \"8\\n\"\nassert solution(\"6\\n1 2\\n3 4\\n\") == \"4\\n\"\nassert solution(\"6\\n1 2\\n5 6\\n\") == \"7\\n\"\nassert solution(\"7\\n1 2\\n\") == \"10\\n\"\nassert solution(\"7\\n1 2\\n3 4\\n\") == \"6\\n\"\nassert solution(\"7\\n1 2\\n5 6\\n\") == \"9\\n\"\nassert solution(\"8\\n1 2\\n\") == \"14\\n\"\nassert solution(\"8\\n1 2\\n3 4\\n\") == \"8\\n\"\nassert solution(\"8\\n1 2\\n5 6\\n\") == \"11\\n\"\nassert solution(\"9\\n1 2\\n\") == \"18\\n\"\nassert solution(\"9\\n1 2\\n3 4\\n\") == \"12\\n\"\nassert solution(\"9\\n1 2\\n5 6\\n\") == \"15\\n\"\nassert solution(\"10\\n1 2\\n\") == \"20\\n\"\nassert solution(\"10\\n1 2\\n3 4\\n\") == \"16\\n\"\nassert solution(\"10\\n1 2\\n5 6\\n\") == \"19\\n\"\nassert solution(\"11\\n1 2\\n\") == \"24\\n\"\nassert solution(\"11\\n1 2\\n3 4\\n\") == \"20\\n\"\nassert solution(\"11\\n1 2\\n5 6\\n\") == \"23\\n\"\nassert solution(\"12\\n1 2\\n\") == \"28\\n\"\nassert solution(\"12\\n1 2\\n3 4\\n\") == \"24\\n\"\nassert solution(\"12\\n1 2\\n5 6\\n\") == \"27\\n\"\nassert solution(\"13\\n1 2\\n\") == \"32\\n\"\nassert solution(\"13\\n1 2\\n3 4\\n\") == \"28\\n\"\nassert solution(\"13\\n1 2\\n5 6\\n\") == \"31\\n\"\nassert solution(\"14\\n1 2\\n\") == \"36\\n\"\nassert solution(\"14\\n1 2\\n3 4\\n\") == \"32\\n\"\nassert solution(\"14\\n1 2\\n5 6\\n\") == \"35\\n\"\nassert solution(\"15\\n1 2\\n\") == \"40\\n\"\nassert solution(\"15\\n1 2\\n3 4\\n\") == \"36\\n\"\nassert solution(\"15\\n1 2\\n5 6\\n\") == \"39\\n\"\nassert solution(\"16\\n1 2\\n\") == \"44\\n\"\nassert solution(\"16\\n1 2\\n3 4\\n\") == \"40\\n\""
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\"\nassert solution(\"4\\n1 1\\n2 3\\n3 2\\n\") == \"16\""
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2\\n1 2\\n') == '2\\n'"
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\"\nassert solution(\"2\\n1 2\\n3 4\\n5 6\\n\") == \"6\\n\""
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"2\\n\", \"Test case 1 failed\"\nassert solution(11) == \"18\\n\", \"Test case 2 failed\""
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n3\n0 2 0\n3 0 1\n''') == '2'\n\nassert solution('''\n3\n0 2 0\n1 0 3\n''') == '4'\n\nassert solution('''\n11\n0 0 0 5 0 0 0 4 0 0 11\n9 2 6 0 8 1 7 0 3 0 10\n''') == '18'"
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''3\n0 2 0\n3 0 1\n''') == '2\\n'\n\nassert solution('''3\n0 2 0\n1 0 3\n''') == '4\\n'\n\nassert solution('''11\n0 0 0 5 0 0 0 4 0 0 11\n9 2 6 0 8 1 7 0 3 0 10\n''') == '18\\n'"
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin='3\\n0 2 0\\n3 0 1') == '2'\nassert solution(stdin='3\\n0 2 0\\n1 0 3') == '4'\nassert solution(stdin='11\\n0 0 0 5 0 0 0 4 0 0 11\\n9 2 6 0 8 1 7 0 3 0 10') == '18'"
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"3\\n0 2 0\\n3 0 1\\n\\n3\\n0 2 0\\n1 0 3\\n\\n11\\n0 0 0 5 0 0 0 4 0 0 11\\n9 2 6 0 8 1 7 0 3 0 10\\n\\n18\") == \"2\\n\"\nassert solution(stdin=\"3\\n0 2 0\\n1 0 3\\n\\n11\\n0 0 0 5 0 0 0 4 0 0 11\\n9 2 6 0 8 1 7 0 3 0 10\\n\\n18\") == \"4\\n\""
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(str(3)) == \"2\"\nassert solution(str(0) + \" \" + str(2) + \" \" + str(0)) == \"2\"\nassert solution(str(3) + \" \" + str(0) + \" \" + str(1)) == \"2\"\nassert solution(str(0) + \" \" + str(2) + \" \" + str(0) + \" \" + str(3) + \" \" + str(1)) == \"2\"\nassert solution(str(0) + \" \" + str(2) + \" \" + str(0) + \" \" + str(1) + \" \" + str(0) + \" \" + str(3)) == \"2\""
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n0 2 0\\n3 0 1\\n\") == \"2\\n\"\nassert solution(\"3\\n0 2 0\\n1 0 3\\n\") == \"4\\n\"\nassert solution(\"11\\n0 0 0 5 0 0 0 4 0 0 11\\n9 2 6 0 8 1 7 0 3 0 10\\n\") == \"18\\n\"\nassert solution(\"3\\n0 0 2 0\\n3 0 1\\n\") == \"1\\n\""
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 2"
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3') == '2'\nassert solution('11') == '19'\nassert solution('3 0 1') == '2'\nassert solution('0 2 0') == '2'\nassert solution('1 0 3') == '4'"
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 2, \"Example 1\"\nassert solution(3) == 2, \"Example 2\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=input()) == expected, f\"Test failed. Expected: {expected}, got: {solution(stdin=input())}\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"code*s\") == \"YES\"\nassert solution(\"codeforces\") == \"YES\"\nassert solution(\"vk*cup\") == \"YES\"\nassert solution(\"v\") == \"NO\"\nassert solution(\"k\") == \"NO\"\nassert solution(\"gfgf*gfgf\") == \"NO\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"aba*aba\") == \"YES\"\nassert solution(\"codeforces\") == \"YES\"\nassert solution(\"vk*cup\") == \"YES\"\nassert solution(\"v\") == \"NO\"\nassert solution(\"k\") == \"NO\"\nassert solution(\"gfgf*gfgf\") == \"NO\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"YES\" or solution(input()) == \"NO\", \"Test cases should be 'YES' or 'NO'.\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 10\\ncode*s\\ncodeforces\") == \"YES\\n\"\nassert solution(\"6 5\\nvk*cup\\nvkcup\") == \"YES\\n\"\nassert solution(\"1 1\\nv\\nk\") == \"NO\\n\"\nassert solution(\"9 6\\ngfgf*gfgf\\n gfgfgf\") == \"NO\\n\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 'YES'\nassert solution(input()) == 'YES'\nassert solution(input()) == 'YES'\nassert solution(input()) == 'YES'\nassert solution(input()) == 'NO'\nassert solution(input()) == 'NO'"
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('6 10\\ncode*s\\ncodeforces') == 'YES'\nassert solution('6 5\\nvk*cup\\nvkcup') == 'YES'\nassert solution('1 1\\nv\\nk') == 'NO'\nassert solution('9 6\\ngfgf*gfgf\\ngfgfgf') == 'NO'"
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 10\\ncode*s\\ncodeforces\") == \"YES\"\nassert solution(\"6 5\\nvk*cup\\nvkcup\") == \"YES\"\nassert solution(\"1 1\\nv\\nk\") == \"NO\"\nassert solution(\"9 6\\ngfgf*gfgf\\ngfgfgf\") == \"NO\"\n"
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 10\\ncode*s\\ncodeforces\\n\") == \"YES\\n\"\nassert solution(\"6 5\\nvk*cup\\nvkcup\\n\") == \"YES\\n\"\nassert solution(\"1 1\\nv\\nk\\n\") == \"NO\\n\"\nassert solution(\"9 6\\ngfgf*gfgf\\n gfgfgf\\n\") == \"NO\\n\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output() for input, output in [\n    (\"6 10\", \"YES\"),\n    (\"6 5\", \"YES\"),\n    (\"1 1\", \"NO\"),\n    (\"9 6\", \"NO\"),\n]"
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 0.26\nassert solution(4) == 0.26\nassert solution(5) == 0.26\nassert solution(6) == 0.26"
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Input\\n4\\n0.1 0.2 0.3 0.8\") == \"0.800000000000\\n\"\nassert solution(\"Input\\n2\\n0.1 0.2\") == \"0.260000000000\\n\""
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"0.800000000000\"\nassert solution(input()) == \"0.260000000000\""
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, \"Test failed: expected %s, got %s\" % (output, solution(input()))"
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n0.1 0.2 0.3 0.8\\n2\\n0.1 0.2\\n\") == \"0.800000000000\"\nassert solution(\"2\\n0.1 0.2\\n\") == \"0.260000000000\""
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"0.260000000000\"\n"
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"4\\n0.1 0.2 0.3 0.8\") == \"0.800000000000\\n\"\nassert solution(stdin=\"2\\n0.1 0.2\") == \"0.260000000000\\n\""
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n0.1 0.2 0.3 0.8\") == \"0.800000000000\", \"Test failed for the given input.\"\nassert solution(\"2\\n0.1 0.2\") == \"0.260000000000\", \"Test failed for the given input.\""
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n0.1 0.2 0.3 0.8\") == \"0.800000000000\"\nassert solution(\"2\\n0.1 0.2\") == \"0.260000000000\"\n"
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 0.8, \"Your code is incorrect.\""
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '5.0000000000\\n', \"The expected output is incorrect. Please check your solution.\"\nassert solution(\"5 10 1 2 5\") == '5.0000000000\\n', \"The expected output is incorrect. Please check your solution.\"\nassert solution(\"3 6 1 2 1\") == '4.7142857143\\n', \"The expected output is incorrect. Please check your solution.\""
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin: str) == \"5.0000000000\\n\"\nassert solution(stdin: str) == \"4.7142857143\\n\""
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 10 1 2 5\\n3 6 1 2 1\\n\") == \"5.0000000000\"\nassert solution(\"4 5 1 2 1\\n\") == \"4.7142857143\""
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(str(5) + \" \" + str(10) + \" \" + str(1) + \" \" + str(2) + \" \" + str(5)) == \"5.0000000000\"\nassert solution(str(3) + \" \" + str(6) + \" \" + str(1) + \" \" + str(2) + \" \" + str(1)) == \"4.7142857143\""
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 10 1 2 5\\n\") == \"5.0000000000\"\nassert solution(\"3 6 1 2 1\\n\") == \"4.7142857143\""
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 10 1 2 5\") == 5.0\nassert solution(\"3 6 1 2 1\") == 4.7142857143"
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=input()) == \"5.0000000000\\n\""
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"5 10 1 2 5\\n3 6 1 2 1\\n\") == \"5.0000000000\\n\"\nassert solution(stdin=\"5 10 2 3 6\\n3 8 1 2 1\\n\") == \"6.6666666667\\n\"\nassert solution(stdin=\"5 10 3 5 10\\n3 12 1 2 1\\n\") == \"7.8571428571\\n\"\nassert solution(stdin=\"5 10 4 10 20\\n3 16 1 2 1\\n\") == \"9.4285714286\\n\"\nassert solution(stdin=\"5 10 5 20 30\\n3 20 1 2 1\\n\") == \"11.0000000000\\n\""
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"5.0000000000\\n\"\nassert solution(input()) == \"4.7142857143\\n\""
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 10 1 2 5\") == 5.0\nassert solution(\"3 6 1 2 1\") == 4.7142857143\n\nfrom typing import List"
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n0.000 0.500 0.750 1.000 2.000 3.000\\n3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\") == \"0.250\\n\""
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n0.000 0.500 0.750 1.000 2.000 3.000\\n\") == \"0.250\\n\"\nassert solution(\"3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\\n\") == \"0.279\\n\""
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n0.000 0.500 0.750 1.000 2.000 3.000\\n3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\") == \"0.250\\n\"\nassert solution(\"3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\") == \"0.279\\n\""
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n0.000 0.500 0.750 1.000 2.000 3.000\") == \"0.250\"\nassert solution(\"3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\") == \"0.279\""
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n0.000 0.500 0.750 1.000 2.000 3.000\") == \"0.250\\n\"\nassert solution(\"3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\") == \"0.279\\n\""
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n0.000 0.500 0.750 1.000 2.000 3.000\\n') == '0.250\\n'\nassert solution('3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\\n') == '0.279\\n'"
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n0.000 0.500 0.750 1.000 2.000 3.000\") == \"0.250\\n\"\nassert solution(\"3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\") == \"0.279\\n\""
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n0.000 0.500 0.750 1.000 2.000 3.000\\n3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896') == '0.250\\n'\nassert solution('3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896') == '0.279\\n'"
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input) == output, f\"The function should return '{output}', but returned '{solution(input)}'.\" for input, output in zip(input_list, output_list)\n"
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n0.000 0.500 0.750 1.000 2.000 3.000\") == \"0.250\\n\"\n\nassert solution(\"3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\") == \"0.279\\n\""
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\") == 8"
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 5\\n5 2\") == \"18\"\nassert solution(\"0 1\\n0 0\") == \"8\""
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 5\\n5 2\\n') == 18\n\nassert solution('0 1\\n0 0\\n') == 8"
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_data) == expected_output, f\"Test {test_case} failed with output: {solution(input_data)}, expected {expected_output}\""
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 5\\n5 2\\n') == '18'\nassert solution('0 1\\n0 0\\n') == '8'"
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 5\\n5 2\\n\") == \"18\"\nassert solution(\"0 1\\n0 0\\n\") == \"8\"\n"
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 5\\n5 2\") == \"18\"\nassert solution(\"0 1\\n0 0\") == \"8\""
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Test {index + 1} failed: {solution(input())}!= {output}\\n\""
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"18\""
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 5\\n5 2\") == \"18\\n\"\nassert solution(\"0 1\\n0 0\") == \"8\\n\""
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == 4\nassert solution(2) == 10\nassert solution(10) == 244"
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == 4\nassert solution(2) == 10\nassert solution(10) == 244"
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == 4\nassert solution(2) == 10\nassert solution(10) == 244"
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == 4\nassert solution(2) == 10\nassert solution(10) == 244"
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == 4\nassert solution(2) == 10\nassert solution(10) == 244"
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == \"4\"\nassert solution(2) == \"10\"\nassert solution(10) == \"244\""
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == 4\nassert solution(2) == 10\nassert solution(10) == 244"
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\") == 4\nassert solution(\"2\") == 10\nassert solution(\"10\") == 244"
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n\") == \"4\\n\"\nassert solution(\"2\\n\") == \"10\\n\"\nassert solution(\"10\\n\") == \"244\\n\"\nassert solution(\"2\\n\") == \"10\\n\""
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"4\"\nassert solution(\"2\") == \"10\"\nassert solution(\"10\") == \"244\""
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('Input\\n3\\n1 2 3\\n\\nOutput\\n0\\n\\nInput\\n4\\n1 1 2 2\\n\\nOutput\\n2\\n\\nInput\\n5\\n1 4 1 4 9\\n\\nOutput\\n2') == 'Output\\n0\\n\\nOutput\\n2\\n\\nOutput\\n2\\n\\nOutput\\n2'"
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '0\\n', 'Incorrect output'"
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Testcase failed. Output: {}, Expected: {}\".format(solution(input()), output())"
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Test case {i + 1} failed. Expected output: {output}, got: {solution(input())}\""
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(4) == \"0\"\nassert solution(5) == \"2\"\nassert solution(1) == \"0\"\nassert solution(3) == \"0\"\nassert solution(2) == \"2\""
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n1 2 3') == '0\\n'\nassert solution('4\\n1 1 2 2') == '2\\n'\nassert solution('5\\n1 4 1 4 9') == '2\\n'\nassert solution('3\\n1 2 3 4 5') == '0\\n'"
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2 3\") == \"0\\n\"\nassert solution(\"4\\n1 1 2 2\") == \"2\\n\"\nassert solution(\"5\\n1 4 1 4 9\") == \"2\\n\""
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3') == '0'\nassert solution('4') == '2'\nassert solution('5') == '2'"
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2 3\\n\\n4\\n1 1 2 2\\n\\n5\\n1 4 1 4 9\\n\\n\") == \"0\\n\"\nassert solution(\"4\\n1 1 2 2\\n\\n5\\n1 4 1 4 9\\n\\n\") == \"2\\n\"\nassert solution(\"5\\n1 4 1 4 9\\n\\n\") == \"2\\n\""
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n1 2 3\\n') == '0\\n'\nassert solution('4\\n1 1 2 2\\n') == '2\\n'\nassert solution('5\\n1 4 1 4 9\\n') == '2\\n'"
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"aaabccc\") == \"YES\"\nassert solution(\"bbacc\") == \"NO\"\nassert solution(\"aabc\") == \"YES\""
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('aaabccc') == 'YES'\nassert solution('bbacc') == 'NO'\nassert solution('aabc') == 'YES'"
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('aaabccc') == 'YES'\nassert solution('bbacc') == 'NO'\nassert solution('aabc') == 'YES'\n"
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"aaabccc\") == \"YES\"\nassert solution(\"bbacc\") == \"NO\"\nassert solution(\"aabc\") == \"YES\""
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('aaabccc') == 'YES', \"The given input is incorrect\"\nassert solution('bbacc') == 'NO', \"The given input is incorrect\"\nassert solution('aabc') == 'YES', \"The given input is incorrect\"\nprint(\"YES\")"
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"aaabccc\") == \"YES\"\nassert solution(\"bbacc\") == \"NO\"\nassert solution(\"aabc\") == \"YES\"\n"
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"aaabccc\") == \"YES\"\nassert solution(\"bbacc\") == \"NO\"\nassert solution(\"aabc\") == \"YES\""
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('aaabccc') == 'YES', 'The given string is not possible to obtain.'\nassert solution('bbacc') == 'NO', 'The given string is not possible to obtain.'\nassert solution('aabc') == 'YES', 'The given string is not possible to obtain.'\n\nsolution('aaabccc') # Output: YES\nsolution('bbacc') # Output: NO\nsolution('aabc') # Output: YES"
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aaabccc\") == \"YES\"\nassert solution(\"bbacc\") == \"NO\"\nassert solution(\"aabc\") == \"YES\""
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('aaabccc') == 'YES'\nassert solution('bbacc') == 'NO'\nassert solution('aabc') == 'YES'"
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n4 1 2 5 3') == '2\\n', \"Example 1\"\nassert solution('4\\n4 1 3 2') == '2\\n', \"Example 2\""
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n4 1 2 5 3\") == \"2\"\nassert solution(\"4\\n4 1 3 2\") == \"2\""
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n4 1 2 5 3\\n\") == \"2\"\nassert solution(\"4\\n4 1 3 2\\n\") == \"2\"\n"
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n4 1 2 5 3\") == \"2\"\nassert solution(\"4\\n4 1 3 2\") == \"2\""
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n4 1 2 5 3\") == \"2\\n\"\nassert solution(\"4\\n4 1 3 2\") == \"2\\n\""
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2\", \"The output should be 2.\""
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(str(5)) == '2'\nassert solution(str(4)) == '2'\nassert solution(str(4)) == '2'\nassert solution(str(4)) == '2'\nassert solution(str(4)) == '2'\n\nprint(\"All tests passed\")"
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n4 1 2 5 3\\n4\\n4 1 3 2\") == 2\nassert solution(\"4\\n4 1 3 2\") == 2"
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 1 2 5 3') == 2\nassert solution('4 1 3 2') == 2"
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '2', 'The minimum number of actions needed to sort the train is not correct.'\nprint('All tests passed!')"
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 1\") == \"3.5\"\nassert solution(\"6 3\") == \"4.96\"\nassert solution(\"2 2\") == \"1.76\""
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 1\") == \"3.500000000000\"\nassert solution(\"6 3\") == \"4.958333333333\"\nassert solution(\"2 2\") == \"1.750000000000\""
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('6 1') == '3.5'\nassert solution('6 3') == '4.96'\nassert solution('2 2') == '1.76'"
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '3.5'\nassert solution() == '4.958333333333'\nassert solution() == '1.75'"
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"The expected output is {expected_output}, but the output is {solution(input())}.\""
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 1\") == \"3.500000000000\"\nassert solution(\"6 3\") == \"4.958333333333\"\nassert solution(\"2 2\") == \"1.750000000000\""
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 1\") == \"3.500000000000\"\nassert solution(\"6 3\") == \"4.958333333333\"\nassert solution(\"2 2\") == \"1.750000000000\""
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 1\") == 3.5, \"Input 1 incorrect\"\nassert solution(\"6 3\") == 4.96, \"Input 2 incorrect\"\nassert solution(\"2 2\") == 1.75, \"Input 3 incorrect\""
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_data) == expected_output, \\\n    f\"Test case failed: Input {input_data}, Expected output {expected_output}, but got {solution(input_data)}\"\n\ninput_data = \"6 1\"\nexpected_output = 3.5\n\ninput_data = \"6 3\"\nexpected_output = 4.958333333333\n\ninput_data = \"2 2\"\nexpected_output = 1.750000000000"
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 1\") == \"3.5\"\nassert solution(\"6 3\") == \"4.96\"\nassert solution(\"2 2\") == \"1.76\"\n\nimport math"
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n4\\n-><-\\n5\\n>>>>>\") == \"3\\n5\\n3\\n0\"\nassert solution(\"3\\n<--\\n2\\n<>\") == \"2\\n3\\n0\"\n\nprint(\"All test cases pass\")"
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_data) == expected_output, f\"Test case {i + 1} failed: expected {expected_output}, got {solution(input_data)}\""
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n4\\n-><-\\n5\\n>>>>>\\n3\\n<--\\n2\\n<>\") == \"3\\n5\\n3\\n0\\n\\n\\n\\n\\n\""
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n4\\n-><-\\n5\\n>>>>>\") == \"3\\n5\\n3\\n0\"\nassert solution(\"4\\n4\\n<-\\n5\\n>>>>>\") == \"3\\n5\\n3\\n0\"\nassert solution(\"4\\n4\\n>>\\n5\\n>>>>>\") == \"3\\n5\\n3\\n0\"\n\nsolution(\"4\\n4\\n-><-\\n5\\n>>>>>\")"
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(4) == \"3\"\nassert solution(5) == \"5\"\nassert solution(3) == \"0\""
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n4\\n-><-\\n5\\n>>>>>\\n3\\n<--\\n2\\n<>\") == \"3\\n5\\n3\\n0\"\nassert solution(\"3\\n2\\n5\\n\\n\\n\") == \"3\"\nassert solution(\"1000\\n1000\\n\") == \"0\""
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_data) == expected_output, f\"Test case {case_num}: Expected output {expected_output}, got {solution(input_data)}\""
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n4\\n-><-\\n5\\n>>>>>\") == \"3\\n5\\n3\\n0\"\n\nassert solution(\"4\\n4\\n<-\\n5\\n>>>>\") == \"3\\n5\\n3\\n0\"\n\nassert solution(\"3\\n2\\n<--\\n2\\n<--\") == \"0\"\n\nassert solution(\"3\\n2\\n<>\") == \"2\""
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input) == output, f\"Test case {t} failed. Input: {stdin}, Output: {output}\" for t, input, output in zip(range(1, 11), input_cases, output_cases)\n"
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n4\n4\n-><-\n5\n>>>>>\n3\n<--\n2\n<>\n''') == '3\\n5\\n3\\n0'"
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n4 5\\n4 5\\n4 10\") == \"16\"\nassert solution(\"4\\n1 100\\n100 1\\n1 100\\n100 1\") == \"202\"\nassert solution(\"3\\n1 1\\n100 100\\n1 1\") == \"-1\""
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n4 5\\n4 5\\n4 10\") == \"16\\n9 9 10\"\nassert solution(\"4\\n1 100\\n100 1\\n1 100\\n100 1\") == \"202\\n101 101 101 101\"\nassert solution(\"3\\n1 1\\n100 100\\n1 1\") == \"-1\""
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n4 5\\n4 5\\n4 10\") == \"16\"\nassert solution(\"4\\n1 100\\n100 1\\n1 100\\n100 1\") == \"202\"\nassert solution(\"3\\n1 1\\n100 100\\n1 1\") == \"-1\"\n"
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"3\n4 5\n4 5\n4 10\n\"\"\") == \"16\\n9 9 10\\n\"\n\nassert solution(\"\"\"4\n1 100\n100 1\n1 100\n100 1\n\"\"\") == \"202\\n101 101 101 101\\n\"\n\nassert solution(\"\"\"3\n1 1\n100 100\n1 1\n\"\"\") == \"-1\\n\""
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n4 5\\n4 5\\n4 10\\n\") == \"16\\n9 9 10 \\n202\\n101 101 101 101 \\n-1\"\nassert solution(\"4\\n1 100\\n100 1\\n1 100\\n100 1\\n\") == \"202\\n101 101 101 101 \\n-1\"\nassert solution(\"3\\n1 1\\n100 100\\n1 1\\n\") == \"1\\n-1\""
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n4 5\\n4 5\\n4 10\\n\") == \"16\\n9 9 10\\n202\\n101 101 101 101\\n\"\nassert solution(\"4\\n1 100\\n100 1\\n1 100\\n100 1\\n\") == \"202\\n101 101 101 101\\n\"\nassert solution(\"3\\n1 1\\n100 100\\n1 1\\n\") == \"-1\\n\"\nassert solution(\"\") == \"1\\n\"\n"
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n4 5\\n4 5\\n4 10\") == \"16\\n9 9 10 \\n\"\nassert solution(\"4\\n1 100\\n100 1\\n1 100\\n100 1\") == \"202\\n101 101 101 101 \\n\"\nassert solution(\"3\\n1 1\\n100 100\\n1 1\") == \"-1\\n\""
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n4 5\\n4 5\\n4 10\") == \"16\\n9 9 10\"\nassert solution(\"4\\n1 100\\n100 1\\n1 100\\n100 1\") == \"202\\n101 101 101 101\"\nassert solution(\"3\\n1 1\\n100 100\\n1 1\") == \"-1\""
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\") == -1\nassert solution(\"1\\n4 5\\n4 5\\n4 10\\n\") == 16\nassert solution(\"4\\n1 100\\n100 1\\n1 100\\n100 1\\n\") == 202\nassert solution(\"3\\n1 1\\n100 100\\n1 1\\n\") == -1"
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, \"Test case failed. Expected output: {}, Received output: {}\".format(expected_output, solution(input()))\n"
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(5) == '1 2 2\\n', 'Incorrect output for n = 5.'\nassert solution(3) == '0 2\\n', 'Incorrect output for n = 3.'\nassert solution(5) == '0 1 3\\n', 'Incorrect output for n = 5.'"
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 1 1 1 1\") == \"1 2 2\\n\", \"Test 1 failed\"\nassert solution(\"3\\n1 2 3\") == \"0 2\\n\", \"Test 2 failed\"\nassert solution(\"5\\n1 2 3 2 2\") == \"0 1 3\\n\", \"Test 3 failed\""
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(5) == \"1 2 2\"\nassert solution(3) == \"0 2\"\nassert solution(5) == \"0 1 3\""
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1\\n1 1 1 1 1\\n') == '1 2 2\\n'\nassert solution('3\\n1 2 3\\n') == '0 2\\n'\nassert solution('5\\n1 2 3 2 2\\n') == '0 1 3\\n'"
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 1 1 1 1\") == \"1 2 2\"\nassert solution(\"3\\n1 2 3\") == \"0 2\"\nassert solution(\"5\\n1 2 3 2 2\") == \"0 1 3\""
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"1 2 2\\n\"\nassert solution() == \"0 2\\n\"\nassert solution() == \"0 1 3\\n\""
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '1 2 2\\n'"
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 1 1 1 1\") == \"1 2 2\"\nassert solution(\"3\\n1 2 3\") == \"0 2 \"\nassert solution(\"5\\n1 2 3 2 2\") == \"0 1 3 \""
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n1 1 1 1 1') == '1 2 2\\n'\nassert solution('3\\n1 2 3') == '0 2\\n'\nassert solution('5\\n1 2 3 2 2') == '0 1 3\\n'"
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"101101\", \"110\") == \"110110\"\nassert solution(\"10010110\", \"100011\") == \"01100011\"\nassert solution(\"10\", \"11100\") == \"01\""
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('101101') == '110110', \"Incorrect output\"\nassert solution('10010110') == '01100011', \"Incorrect output\"\nassert solution('10') == '01', \"Incorrect output\""
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"101101\") == \"110110\"\nassert solution(\"10010110\") == \"01100011\"\nassert solution(\"10\") == \"01\""
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '110110', 'Expected output \"110110\", but got \"{}\"'.format(solution())"
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"101101\\n110\\n\") == \"110110\\n\"\nassert solution(\"10010110\\n100011\\n\") == \"01100011\\n\"\nassert solution(\"10\\n11100\\n\") == \"01\\n\""
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('101101', '110') == '110110'\nassert solution('10010110', '100011') == '01100011'\nassert solution('10', '11100') == '01'"
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"101101\") == \"110110\"\nassert solution(\"10010110\") == \"01100011\"\nassert solution(\"10\") == \"01\""
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"101101\") == \"110110\"\nassert solution(\"10010110\") == \"01100011\"\nassert solution(\"10\") == \"01\""
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('101101') == '110110'\nassert solution('10010110') == '01100011'\nassert solution('10') == '01'"
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 5 2\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1\\n1 1 1 1 1\") == 1, \"Test failed\"\nassert solution(\"3 4 1\\n1 0 0 0\\n0 1 1 1\\n1 1 1 0\\n1 0 0 1\\n0 1 1 0\") == -1, \"Test failed\"\nassert solution(\"3 4 1\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n0 1 1 0\") == 0, \"Test failed\""
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 5 2\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1\\n1 1 1 1 1') == '1'\nassert solution('3 4 1\\n1 0 0 0\\n0 1 1 1\\n1 1 1 0\\n1 0 0 1\\n1 0 0 1') == '-1'\nassert solution('3 4 1\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n1 0 0 1') == '0'"
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 5 2\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1\\n1 1 1 1 1\") == \"1\\n\"\nassert solution(\"3 4 1\\n1 0 0 0\\n0 1 1 1\\n1 1 1 0\\n1 0 0 1\\n1 0 0 1\") == \"-1\\n\"\nassert solution(\"3 4 1\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n1 0 0 1\") == \"0\\n\""
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 5 2\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1\\n1 1 1 1 1\") == 1\nassert solution(\"3 4 1\\n1 0 0 0\\n0 1 1 1\\n1 1 1 0\\n1 0 0 1\\n1 1 1 0\") == -1\nassert solution(\"3 4 1\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n1 1 1 0\\n1 0 0 1\") == 0"
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 1, \"Expected 1, but got {}\".format(solution())"
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 5 2\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n\") == \"1\"\nassert solution(\"3 4 1\\n1 0 0 0\\n0 1 1 1\\n1 1 1 0\\n1 0 0 1\\n1 0 0 1\\n\") == \"-1\"\nassert solution(\"3 4 1\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n1 0 0 1\\n\") == \"0\""
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 5 2\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1\\n1 1 1 1 1\") == 1\nassert solution(\"3 4 1\\n1 0 0 0\\n0 1 1 1\\n1 1 1 0\\n1 0 0 1\\n1 0 0 1\") == -1\nassert solution(\"3 4 1\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n1 0 0 1\\n1 0 0 1\") == 0"
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 0, \"Test case 1 failed\""
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 5 2\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n\") == \"1\"\nassert solution(\"3 4 1\\n1 0 0 0\\n0 1 1 1\\n1 1 1 0\\n1 0 0 1\\n0 1 1 0\\n\") == \"-1\"\nassert solution(\"3 4 1\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n\") == \"0\""
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n0 4 6 2 4\\n4 0 6 2 4\\n6 6 0 3 6\\n2 2 3 0 2\\n4 4 6 2 0\\n\") == \"2 2 3 1 2 0\"\nassert solution(\"3\\n0 99990000 99970002\\n99990000 0 99980000\\n99970002 99980000 0\\n\") == \"9999 10000 9998\""
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n0 4 6 2 4\\n4 0 6 2 4\\n6 6 0 3 6\\n2 2 3 0 2\\n4 4 6 2 0\") == \"2 2 3 1 2 2 3 1\"\nassert solution(\"3\\n0 99990000 99970002\\n99990000 0 99980000\\n99970002 99980000 0\") == \"9999 10000 9998\""
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"The output {solution(input())} does not match the expected output {output}.\""
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"The output does not match the expected output.\""
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n0 4 6 2 4\\n4 0 6 2 4\\n6 6 0 3 6\\n2 2 3 0 2\\n4 4 6 2 0\\n\") == \"2 2 3 1 2 4\"\nassert solution(\"3\\n0 99990000 99970002\\n99990000 0 99980000\\n99970002 99980000 0\\n\") == \"9999 10000 9998\""
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''5\n0 4 6 2 4\n4 0 6 2 4\n6 6 0 3 6\n2 2 3 0 2\n4 4 6 2 0''') == '2 2 3 1 2 '\nassert solution('''3\n0 99990000 99970002\n99990000 0 99980000\n99970002 99980000 0''') == '9999 10000 9998'"
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"The output is incorrect.\""
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n0 4 6 2 4\\n4 0 6 2 4\\n6 6 0 3 6\\n2 2 3 0 2\\n4 4 6 2 0\") == \"2 2 3 1 2 \"\nassert solution(\"3\\n0 99990000 99970002\\n99990000 0 99980000\\n99970002 99980000 0\") == \"9999 10000 9998\""
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n0 4 6 2 4\\n4 0 6 2 4\\n6 6 0 3 6\\n2 2 3 0 2\\n4 4 6 2 0\") == \"2 2 3 1 2\"\nassert solution(\"3\\n0 99990000 99970002\\n99990000 0 99980000\\n99970002 99980000 0\") == \"9999 10000 9998\""
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n0 4 6 2 4\\n4 0 6 2 4\\n6 6 0 3 6\\n2 2 3 0 2\\n4 4 6 2 0') == '2 2 3 1 2  \\n'\nassert solution('3\\n0 99990000 99970002\\n99990000 0 99980000\\n99970002 99980000 0') == '9999 10000 9998\\n'"
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output() for input, output in zip(input_data, expected_output)"
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"11 6\\n10 4\\n01 3\\n00 3\\n00 7\\n00 9\") == \"22\"\nassert solution(\"5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1\") == \"103\"\nassert solution(\"6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28\") == \"105\"\nassert solution(\"3\\n00 5000\\n00 5000\\n00 5000\") == \"0\""
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected\nfor input_ in [6, 5, 6, 3]:\n    with pytest.raises(AssertionError):\n        solution(str(input_))"
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6\\n11 6\\n10 4\\n01 3\\n00 3\\n00 7\\n00 9\\n') == '22\\n'\nassert solution('5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1\\n') == '103\\n'\nassert solution('6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28\\n') == '105\\n'\nassert solution('3\\n00 5000\\n00 5000\\n00 5000\\n') == '0\\n'\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Input\\n6\\n11 6\\n10 4\\n01 3\\n00 3\\n00 7\\n00 9\") == \"22\"\nassert solution(\"Input\\n5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1\") == \"103\"\nassert solution(\"Input\\n6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28\") == \"105\"\nassert solution(\"Input\\n3\\n00 5000\\n00 5000\\n00 5000\") == \"0\""
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"11 6\\n10 4\\n01 3\\n00 3\\n00 7\\n00 9\") == \"22\"\nassert solution(\"5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1\") == \"103\"\nassert solution(\"6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28\") == \"105\"\nassert solution(\"3\\n00 5000\\n00 5000\\n00 5000\") == \"0\"\n"
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Expected output: {output}, but got: {solution(input())}\"\n"
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n11 6\\n10 4\\n01 3\\n00 3\\n00 7\\n00 9\") == 22\nassert solution(\"5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1\") == 103\nassert solution(\"6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28\\n00 5000\\n00 5000\\n00 5000\") == 105\nassert solution(\"3\\n00 5000\\n00 5000\\n00 5000\") == 0"
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('6\\n11 6\\n10 4\\n01 3\\n00 3\\n00 7\\n00 9\\n') == '22'\nassert solution('5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1\\n') == '103'\nassert solution('6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28\\n') == '105'\nassert solution('3\\n00 5000\\n00 5000\\n00 5000\\n') == '0'"
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"22\", \"Expected output: 22. Got: \" + solution(stdin)\n\nassert solution(stdin) == \"103\", \"Expected output: 103. Got: \" + solution(stdin)\n\nassert solution(stdin) == \"105\", \"Expected output: 105. Got: \" + solution(stdin)\n\nassert solution(stdin) == \"0\", \"Expected output: 0. Got: \" + solution(stdin)"
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4 9\\n1 3 1 2\\n2 1 3\\n4 3 6\\n\") == \"YES\\n2 3 2 3\\n\"\nassert solution(\"3 4 10\\n2 3 1 2\\n2 1 3\\n4 3 6\\n\") == \"YES\\n1 3 1 3\\n\"\nassert solution(\"3 4 9\\n2 3 1 2\\n2 1 3\\n4 3 6\\n\") == \"YES\\n3 3 2 3\\n\"\nassert solution(\"3 4 5\\n1 3 1 2\\n2 1 3\\n5 3 6\\n\") == \"NO\""
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4 9\\n1 3 1 2\\n2 1 3\\n4 3 6\\n\") == \"YES\\n2 3 2 3\\n\"\nassert solution(\"3 4 10\\n2 3 1 2\\n2 1 3\\n4 3 6\\n\") == \"YES\\n1 3 1 3\\n\"\nassert solution(\"3 4 9\\n2 3 1 2\\n2 1 3\\n4 3 6\\n\") == \"YES\\n3 3 2 3\\n\"\nassert solution(\"3 4 5\\n1 3 1 2\\n2 1 3\\n5 3 6\\n\") == \"NO\"\n\nprint(\"All tests passed successfully!\")"
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4 9\\n1 3 1 2\\n2 1 3\\n4 3 6\\n\") == \"YES\\n2 3 2 3\\n\"\nassert solution(\"3 4 10\\n2 3 1 2\\n2 1 3\\n4 3 6\\n\") == \"YES\\n1 3 1 3\\n\"\nassert solution(\"3 4 9\\n2 3 1 2\\n2 1 3\\n4 3 6\\n\") == \"YES\\n3 3 2 3\\n\"\nassert solution(\"3 4 5\\n1 3 1 2\\n2 1 3\\n5 3 6\\n\") == \"NO\""
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_string) == output_string, \"Test cases should match.\"\n"
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"YES\\n2 3 2 3\\n1 3 1 3\\n3 3 2 3\"\nassert solution() == \"YES\\n1 3 1 3\\n3 3 2 3\"\nassert solution() == \"YES\\n3 3 2 3\"\n\nfrom typing import List"
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4 9\\n1 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n2 3 2 3\\n\"\nassert solution(\"3 4 10\\n2 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n1 3 1 3\\n\"\nassert solution(\"3 4 9\\n2 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n3 3 2 3\\n\"\nassert solution(\"3 4 5\\n1 3 1 2\\n2 1 3\\n5 3 6\") == \"NO\""
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4 9\\n1 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n2 3 2 3\\n\"\nassert solution(\"3 4 10\\n2 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n1 3 1 3\\n\"\nassert solution(\"3 4 9\\n2 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n3 3 2 3\\n\"\nassert solution(\"3 4 5\\n1 3 1 2\\n2 1 3\\n5 3 6\") == \"NO\""
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_str) == expected_output, f\"Test case {i + 1} failed: solution(input_str) == '{expected_output}', but expected '{expected_output}'.\"\nprint(\"Test case passed.\")"
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == 'YES\\n2 3 2 3\\n'"
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4 9\\n1 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n2 3 2 3\"\nassert solution(\"3 4 10\\n2 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n1 3 1 3\"\nassert solution(\"3 4 9\\n2 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n3 3 2 3\"\nassert solution(\"3 4 5\\n1 3 1 2\\n2 1 3\\n5 3 6\") == \"NO\""
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 1\\n2 3 4 1\\n1 2 3 4\") == \"NO\"\nassert solution(\"4 1\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 3\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 2\\n4 3 1 2\\n2 1 4 3\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n2 1 4 3\") == \"NO\""
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 1\\n2 3 4 1\\n1 2 3 4\\n\") == \"NO\"\nassert solution(\"4 1\\n4 3 1 2\\n3 4 2 1\\n\") == \"YES\"\nassert solution(\"4 3\\n4 3 1 2\\n3 4 2 1\\n\") == \"YES\"\nassert solution(\"4 2\\n4 3 1 2\\n2 1 4 3\\n\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n2 1 4 3\\n\") == \"NO\""
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 1\\n2 3 4 1\\n1 2 3 4') == 'NO'\nassert solution('4 1\\n4 3 1 2\\n3 4 2 1') == 'YES'\nassert solution('4 3\\n4 3 1 2\\n3 4 2 1') == 'YES'\nassert solution('4 2\\n4 3 1 2\\n2 1 4 3') == 'YES'\nassert solution('4 1\\n4 3 1 2\\n2 1 4 3') == 'NO'"
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 1\\n2 3 4 1\\n1 2 3 4\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 3\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 2\\n4 3 1 2\\n2 1 4 3\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n2 1 4 3\") == \"NO\""
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 1\\n2 3 4 1\\n1 2 3 4\") == \"NO\"\nassert solution(\"4 1\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 3\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 2\\n4 3 1 2\\n2 1 4 3\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n2 1 4 3\") == \"NO\""
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 1\\n2 3 4 1\\n1 2 3 4\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 3\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 2\\n4 3 1 2\\n2 1 4 3\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n2 1 4 3\") == \"NO\""
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 1\\n2 3 4 1\\n1 2 3 4\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 3\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 2\\n4 3 1 2\\n2 1 4 3\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n2 1 4 3\") == \"NO\""
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, but got {solution(input())}\""
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''4 1\n2 3 4 1\n1 2 3 4''') == 'NO'\nassert solution('''4 1\n4 3 1 2\n3 4 2 1''') == 'YES'\nassert solution('''4 3\n4 3 1 2\n3 4 2 1''') == 'YES'\nassert solution('''4 2\n4 3 1 2\n2 1 4 3''') == 'YES'\nassert solution('''4 1\n4 3 1 2\n2 1 4 3''') == 'NO'"
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 1\\n2 3 4 1\\n1 2 3 4\") == \"NO\"\nassert solution(\"4 1\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 3\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 2\\n4 3 1 2\\n2 1 4 3\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n2 1 4 3\") == \"NO\""
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"\"\"1 1\n3 1\n1 5\n4 4\"\"\""
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\") == \"1 1\\n3 1\\n1 5\\n4 4\"\nassert solution(\"7\") == \"2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\""
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\") == \"1 1\\n3 1\\n1 5\\n4 4\"\nassert solution(\"7\") == \"2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\"\n"
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n\") == \"1 1\\n3 1\\n1 5\\n4 4\\n\"\nassert solution(\"7\\n\") == \"2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(solution) == \"1 1\\n3 1\\n1 5\\n4 4\""
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Input\\n4\\n\\nInput\\n7\\n\") == \"2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n\""
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n') == '1 1\\n3 1\\n1 5\\n4 4\\n'\nassert solution('7\\n') == '2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n'\nassert solution('100\\n') == '1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n'\nassert solution('101\\n') == '1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n'\nassert solution('5\\n') == '1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n'\nassert solution('1\\n') == '1 1\\n'"
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\") == \"1 1\\n3 1\\n1 5\\n4 4\"\nassert solution(\"7\") == \"2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\""
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4') == ['1 1', '3 1', '1 5', '4 4']\nassert solution('7') == ['2 1', '1 2', '4 1', '5 2', '2 6', '5 7', '6 6']"
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\") == \"1 1\\n3 1\\n1 5\\n4 4\"\nassert solution(\"7\") == \"2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\""
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\") == -1\nassert solution(\"1\\n\") == -1\nassert solution(\"1\\n2\\n\") == 3\nassert solution(\"3\\n1 2 3\\n\") == 3\nassert solution(\"4\\n1 2 3 4\\n\") == 3"
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2 3\") == \"-1\"\n\nsolution(\"3\\n1 2 3\") == \"3\"\n\nassert solution(\"1\\n1\") == \"0\"\n\nsolution(\"1\\n1\") == \"1\""
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n1\\n\") == -1\nassert solution(\"3\\n1 2 3\\n\") == 3"
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n1\\n\") == -1  # No moves\nassert solution(\"3\\n1 2 3\\n\") == 3  # Full game"
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n1\\n\\n3\\n1 2 3\") == \"3\""
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n1 2 3') == '-1'\nassert solution('1\\n1') == '3'"
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''1\n1\n''') == '-1'\n\nassert solution('''3\n1 2 3\n''') == '3'"
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 2 3\") == 3\n\nassert solution(\"1\\n1\") == -1"
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n') == '-1'\nassert solution('3\\n1 2 3\\n') == '3'"
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n1 2 3') == -1"
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"46 2\") == \"7\\n0 1 0 0 1 1 1\"\nassert solution(\"2018 214\") == \"3\\n92 205 1\"\n"
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('46 2') == '7\\n0 1 0 0 1 1 1\\n'\nassert solution('2018 214') == '3\\n92 205 1\\n'"
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"46 2\\n\") == \"7\\n0 1 0 0 1 1 1\\n\"\nassert solution(\"2018 214\\n\") == \"3\\n92 205 1\\n\""
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed. Expected output: {expected_output}, got: {solution(stdin)}\""
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"46 2\") == \"7\\n0 1 0 0 1 1 1\"\nassert solution(\"2018 214\") == \"3\\n92 205 1\"\n"
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"Input: {}, Output: {}, Expected: {}\".format(input(), solution(input()), output())"
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Output\""
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Expected '{output}', got '{solution(input())}'\""
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '7\\n0 1 0 0 1 1 1\\n3\\n92 205 1'"
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 5.000000000000000\nassert solution() == 5.000000000000000\nassert solution() == 0.400000000000000\nassert solution() == 0.400000000000000\nassert solution() == 0.400000000000000"
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 20 20\\n6 2\\n1 3\\n2 6\") == 5.0\nassert solution(\"4 1 1\\n2 3\\n3 2\\n2 3\\n3 2\") == 0.4"
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"5.000000000000000\", \"The solution is not correct.\""
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output() # use assert to test function"
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"5.000000000000000\""
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 20 20\\n6 2\\n1 3\\n2 6') == 5.0\nassert solution('4 1 1\\n2 3\\n3 2\\n2 3\\n3 2') == 0.4"
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"5.000000000000000\""
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"5.000000000000000\""
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(str(input())) == \"5.000000000000000\"\n\nassert solution(str(input())) == \"0.400000000000000\""
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n3 20 20\n6 2\n1 3\n2 6\n''') == '5.000000000000000'\nassert solution('''\n4 1 1\n2 3\n3 2\n2 3\n3 2\n''') == '0.400000000000000'"
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 3\\n8 2\\n') == '4\\n5'\nassert solution('10 10\\n') == '1'\nassert solution('1 10\\n') == '20'"
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 3') == '4'\nassert solution('8 2') == '5'"
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == \"4\"\nassert solution(\"8 2\") == \"5\""
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 3') == '4'\nassert solution('8 2') == '5'"
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"4\"\nassert solution(\"8 2\") == \"5\""
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"4\"\nassert solution(\"8 2\") == \"5\"\n"
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"Test failed\""
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == 4, \"The output should be 4\"\nassert solution(\"8 2\") == 5, \"The output should be 5\""
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == \"4\"\nassert solution(\"8 2\") == \"5\""
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"4\"\nassert solution(\"8 2\") == \"5\"\n"
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n4 5 7\") == \"Conan\\n\"\nassert solution(\"2\\n1 1\") == \"Agasa\\n\""
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"Conan\"\nassert solution(2) == \"Agasa\""
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n4 5 7\") == \"Conan\"\nassert solution(\"2\\n1 1\") == \"Agasa\"\n"
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"Conan\", \"Expected output: 'Conan', got: '\"+solution()+\"'\""
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n4 5 7\") == \"Conan\"\nassert solution(\"2\\n1 1\") == \"Agasa\""
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n3\n4 5 7\n''') == 'Conan'\nassert solution('''\n2\n1 1\n''') == 'Agasa'"
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n4 5 7\") == \"Conan\"\nassert solution(\"2\\n1 1\") == \"Agasa\""
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n4 5 7\") == \"Conan\"\nassert solution(\"2\\n1 1\") == \"Agasa\""
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Test failed: expected output '{output}', got '{solution(input())}'\""
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Input\") == \"Conan\"\nassert solution(\"Input\") == \"Agasa\""
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"3 3\\n##.#\\n#.##\"\nassert solution(\"5 5\") == \"5 5\\n#.#.#\\n##..##\\n#...##\\n...#..\"\n"
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(2, 3) == \"3 3\\n##.\\n..#\\n#.#\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(b'2 3\\n') == '#. #..# #.#\\n'\nassert solution(b'10 10\\n') == '#. #..# #.#\\n'\nassert solution(b'5 5\\n') == '#. #..# #.#\\n'\nassert solution(b'6 6\\n') == '#. #..# #.#\\n'"
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"\"\"3 3\n#.\n#.\n#.\n"
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 3\\n') == '3 3\\n##.\\n..#\\n#.#\\n'"
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"3 3\\n3 3\\n##\\n..#\\n#.#\\n\"\n"
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"3 3\\n##.##\\n..#..#\\n#.#...#\"\nassert solution(\"4 5\") == \"5 5\\n##.##\\n..#..#\\n#.#...#\"\nassert solution(\"6 7\") == \"6 7\\n##.##\\n..#..#\\n#.#...#\"\nassert solution(\"8 9\") == \"7 9\\n##.##\\n..#..#\\n#.#...#\"\nassert solution(\"10 11\") == \"8 11\\n##.##\\n..#..#\\n#.#...#\""
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == \"3 3\\n3 3\\n3 3\\n\"\nassert solution(\"4 4\") == \"4 4\\n4 4\\n4 4\\n\"\nassert solution(\"5 5\") == \"5 5\\n5 5\\n5 5\\n\"\nassert solution(\"1 1\") == \"1 1\\n1 1\\n1 1\\n\""
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 3\\n') == '3 3\\n##\\n..#\\n#.#\\n'\nassert solution('3 3\\n') == '3 3\\n##\\n..#\\n#.#\\n'\nassert solution('1 1\\n') == '1 1\\n#.\\n.#\\n'\nassert solution('3 5\\n') == '3 5\\n##\\n...#\\n...#\\n'\nassert solution('2 1\\n') == '2 1\\n#.\\n.#\\n'\nassert solution('4 4\\n') == '4 4\\n####\\n####\\n'\n"
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"3 3\\n3 3\\n3 3\\n\"\nassert solution(\"5 5\") == \"5 5\\n5 5\\n5 5\\n\"\nassert solution(\"1 1\") == \"1 1\\n1 1\\n1 1\\n\"\nassert solution(\"3 5\") == \"3 5\\n3 5\\n3 5\\n\"\nassert solution(\"5 7\") == \"5 7\\n5 7\\n5 7\\n\"\nassert solution(\"10 10\") == \"10 10\\n10 10\\n10 10\\n\""
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_string) == expected_output, f\"Expected output: {expected_output}, but got: {solution(input_string)}\""
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == 0\n"
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Input\\n5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\\nOutput\\n4\\n1 3 4 5 \\n\\nInput\\n3 2\\n+ 1\\n- 2\\n\\nOutput\\n1\\n3 \\n\\nInput\\n2 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\\nOutput\\n0\\n\\nInput\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\nOutput\\n3\\n2 3 5 \") == 4, \"The output is incorrect.\"\nassert solution(\"Input\\n3 2\\n+ 1\\n- 2\\n\\nOutput\\n1\\n3 \\n\\nInput\\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\\nOutput\\n0\\n\\nInput\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\nOutput\\n3\\n2 3 5 \") == 1, \"The output is incorrect.\"\nassert solution(\"Input\\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\\nOutput\\n0\\n\\nInput\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\nOutput\\n3\\n2 3 5 \") == 0, \"The output is incorrect.\""
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('') == '0'\nassert solution('5 4') == '0'\nassert solution('3 2') == '0'\nassert solution('2 4') == '1'\nassert solution('5 6') == '3'\nassert solution('2 4') == '0'"
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed. Expected output: {expected_output}, got: {solution(input())}\""
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for input: {input()}, expected output: {expected_output}\""
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '''4\n1 3 4 5\n1 3 5\n0\n\nInput\n3 2\n+ 1\n- 2\n\nOutput\n1\n3 \n\nInput\n2 4\n+ 1\n- 2\n+ 2\n- 1\n\nOutput\n0 \n\nInput\n5 6\n+ 1\n- 1\n- 3\n+ 3\n+ 4\n- 4\n\nOutput\n3\n2 3 5 '''"
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\") == \"4\\n1 3 4 5 \"\nassert solution(\"3 2\\n+ 1\\n- 2\\n\") == \"1\\n3  \"\nassert solution(\"2 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\") == \"0\\n\"\nassert solution(\"5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\") == \"3\\n2 3 5 \"\nassert solution(\"2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\") == \"0\\n\"\n"
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\\n5 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\\n3 2\\n+ 1\\n- 2\\n\\n3 2\\n+ 1\\n- 2\\n\\n2 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\\n2 4\\n+ 1\\n- 1\\n+ 2\\n- 1\\n') == '4\\n1 3 4 5 \\nInput\\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\\n2 4\\n+ 1\\n- 1\\n+ 2\\n- 1\\n'\n\nassert solution('3 2\\n+ 1\\n- 2\\n\\n3 2\\n+ 1\\n- 2\\n\\n2 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\\n2 4\\n+ 1\\n- 1\\n+ 2\\n- 1\\n') == '1\\n3 2'\n\nassert solution('2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\\n2 4\\n+ 1\\n- 1\\n+ 2\\n- 1\\n') == '0'\n\nassert solution('5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n') == '3\\n2 3 5 '\n\nassert solution('2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\\n2 4\\n+ 1\\n- 1\\n+ 2\\n- 1\\n') == '0'"
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received: {solution(input())}\""
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n1 2 3\\n1 2 3\\n9\") == 4\nassert solution(\"5 1\\n5 4 2 4 5\\n2\") == 1"
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Solution: {solution(input())}, Expected Output: {expected_output}\""
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 0"
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, \"Test case not passing\""
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"4\""
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\na 2 3\\na 2 3\\nx 9\\n\") == \"4\"\nassert solution(\"5 1\\nx 5 4 2 4 5\\nx 2\\n\") == \"1\""
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 3\\n1 2 3\\n1 2 3\\n9\\n') == '4'\nassert solution('5 1\\n5 4 2 4 5\\n2\\n5\\n') == '1'"
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"Test failed\"\n"
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 4, \"Incorrect Output\""
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 3\\n1 2 3\\n1 2 3\\n9\\n\\n5 1\\n5 4 2 4 5\\n2\\n5\\n\\n4') == 4\nassert solution('5 1\\n5 4 2 4 5\\n2\\n5\\n\\n4') == 1\n"
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Output: '{solution(input())}', Expected output: '{expected_output}'.\"\n"
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin='3 3\\ncba\\n') == 'NO'\nassert solution(stdin='3 4\\ncba\\n') == 'cbd'\nassert solution(stdin='4 4\\nabcd\\n') == 'abda'\nassert solution(stdin='3 3\\ncba\\n') == 'NO'\nassert solution(stdin='3 4\\ncba\\n') == 'cbd'\nassert solution(stdin='4 4\\nabcd\\n') == 'abda'"
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\ncba\") == \"NO\"\nassert solution(\"3 4\\ncba\") == \"cbd\"\nassert solution(\"4 4\\nabcd\") == \"abda\""
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\ncab\\n\") == \"NO\"\nassert solution(\"3 4\\ncab\\n\") == \"cbd\"\nassert solution(\"4 4\\nabdc\\n\") == \"abda\""
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\nbca\") == \"NO\"\nassert solution(\"3 4\\nbca\") == \"cbd\"\nassert solution(\"4 4\\nabcd\") == \"abda\""
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\ncba\\n\") == \"NO\"\nassert solution(\"3 4\\ncba\\n\") == \"cbd\"\nassert solution(\"4 4\\nabcd\\n\") == \"abda\""
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 3\\nbca') == 'NO'\nassert solution('3 4\\nbca') == 'cbd'\nassert solution('4 4\\nabd') == 'abda'"
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 3\\ncba') == 'NO'\nassert solution('3 4\\ncba') == 'cbd'\nassert solution('4 4\\nabcd') == 'abda'"
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\ncba\") == \"NO\"\nassert solution(\"3 4\\ncba\") == \"cbd\"\nassert solution(\"4 4\\nabcd\") == \"abda\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n0101\") == \"quailty\"\nassert solution(\"6 1\\n010101\") == \"once again\"\nassert solution(\"6 5\\n010101\") == \"tokitsukaze\"\nassert solution(\"4 1\\n0011\") == \"once again\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\n0101\") == \"quailty\\n\"\nassert solution(\"6 1\\n010101\") == \"once again\\n\"\nassert solution(\"6 5\\n010101\") == \"tokitsukaze\\n\"\nassert solution(\"4 1\\n0011\") == \"once again\\n\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Duel!\") == \"quailty\"\nassert solution(\"Betting on the lovely princess Claris, the duel between Tokitsukaze and Quailty has started.\\nThere are 4 cards in a row. Each card has two sides, one of which has color. At first, some of these cards are with color sides facing up and others are with color sides facing down. Then they take turns flipping cards, in which Tokitsukaze moves first. In each move, one should choose exactly 2 consecutive cards and flip them to the same side, which means to make their color sides all face up or all face down. If all the color sides of these 4 cards face the same direction after one's move, the one who takes this move will win.\") == \"quailty\"\nassert solution(\"Princess Claris wants to know who will win the game if Tokitsukaze and Quailty are so clever that they won't make mistakes.\\n\") == \"once again\"\nassert solution
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n0101\") == \"quailty\"\nassert solution(\"6 1\\n010101\") == \"once again\"\nassert solution(\"6 5\\n010101\") == \"tokitsukaze\"\nassert solution(\"4 1\\n0011\") == \"once again\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n0101\") == \"quailty\"\nassert solution(\"6 1\\n010101\") == \"once again\"\nassert solution(\"6 5\\n010101\") == \"tokitsukaze\"\nassert solution(\"4 1\\n0011\") == \"once again\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\n0101\") == \"quailty\"\nassert solution(\"6 1\\n010101\") == \"once again\"\nassert solution(\"6 5\\n010101\") == \"tokitsukaze\"\nassert solution(\"4 1\\n0011\") == \"once again\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n0101\") == \"quailty\\n\"\nassert solution(\"6 1\\n010101\") == \"once again\\n\"\nassert solution(\"6 5\\n010101\") == \"tokitsukaze\\n\"\nassert solution(\"4 1\\n0011\") == \"once again\\n\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n0101\") == \"quailty\"\nassert solution(\"6 1\\n010101\") == \"once again\"\nassert solution(\"6 5\\n010101\") == \"tokitsukaze\"\nassert solution(\"4 1\\n0011\") == \"once again\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Duel!\") == \"quailty\"\nassert solution(\"Betting on the lovely princess Claris, the duel between Tokitsukaze and Quailty has started.\") == \"quailty\"\nassert solution(\"There are $n$ cards in a row. Each card has two sides, one of which has color. At first, some of these cards are with color sides facing up and others are with color sides facing down. Then they take turns flipping cards, in which Tokitsukaze moves first. In each move, one should choose exactly $k$ consecutive cards and flip them to the same side, which means to make their color sides all face up or all face down. If all the color sides of these $n$ cards face the same direction after one's move, the one who takes this move will win.\") == \"quailty\"\nassert solution(\"Princess Claris wants to know who will win the game if Tokitsukaze and Quailty are so clever that they won't make mistakes.\") == \"once again\"\nassert solution(\"4 2\\n0101\\n\") == \"quailty\"\nassert solution(\"6 1\\n010101\\n\") == \"once again\"\nassert solution(\"6 5\\n010101\\n\") == \"tokitsukaze\"\nassert solution(\"4 1\\n0011\\n\") == \"once again\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n0101\") == \"quailty\"\nassert solution(\"6 1\\n010101\") == \"once again\"\nassert solution(\"6 5\\n010101\") == \"tokitsukaze\"\nassert solution(\"4 1\\n0011\") == \"once again\"\nassert solution(\"5 3\\n010101010\") == \"quailty\"\n\nprint(\"ok\")"
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 4 50\\n20 100\\n60 10 40 80\") == 50\nassert solution(\"1 2 10\\n11\") == 7"
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 4 50\\n20 100\\n60 10 40 80\\n\\n1 2 10\\n11\\n15 7\\n') == '50'\nassert solution('1 2 10\\n11\\n15 7\\n') == '7'"
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 4 50\\n20 100\\n60 10 40 80\") == \"50\\n\"\nassert solution(\"1 2 10\\n11\") == \"7\\n\""
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 50\n"
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 4 50\\n20 100\\n60 10 40 80\") == \"50\\n\"\nassert solution(\"1 2 10\\n11\") == \"7\\n\"\n"
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '50', \"Incorrect output\""
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('Input\\n2 4 50\\n20 100\\n60 10 40 80') == '50\\n'\n\nassert solution('Input\\n1 2 10\\n11') == '7\\n'\n\nassert solution('Input\\n3 2 3\\n40 50') == '100\\n'"
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 4 50\\n20 100\\n60 10 40 80\\n\") == \"50\"\nassert solution(\"1 2 10\\n11\\n15 7\\n\") == \"7\""
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input(\"Enter the number of people: \")) == \"Output\""
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '50'"
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n1 1\\n\\n3 2\\n0 0\\n\\n1 10\\n5 3\") == \"1 6\\n5 5\"\nassert solution(\"3 2\\n0 0\\n\\n1 10\\n5 3\") == \"1 3\\n5 5\"\nassert solution(\"1 10\\n5 3\") == \"5 5\\n5 5\""
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n1 1\\n\") == \"1 6\\n\"\nassert solution(\"3 2\\n0 0\\n\") == \"1 3\\n\"\nassert solution(\"1 10\\n5 3\\n\") == \"5 5\\n\""
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 3\\n1 1\\n') == '1 6\\n'\nassert solution('3 2\\n0 0\\n') == '1 3\\n'\nassert solution('1 10\\n5 3\\n') == '5 5\\n'"
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1 6\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n1 1\\n\") == \"1 6\\n\"\nassert solution(\"3 2\\n0 0\\n\") == \"1 3\\n\"\nassert solution(\"1 10\\n5 3\\n\") == \"5 5\\n\""
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 3\\n1 1\\n') == '1 6\\n'\nassert solution('3 2\\n0 0\\n') == '1 3\\n'\nassert solution('1 10\\n5 3\\n') == '5 5\\n'"
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 3\\n1 1\\n') == '1 6\\n'\nassert solution('3 2\\n0 0\\n') == '1 3\\n'\nassert solution('1 10\\n5 3\\n') == '5 5\\n'"
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n1 1\\n\") == \"1 6\\n\"\nassert solution(\"3 2\\n0 0\\n\") == \"1 3\\n\"\nassert solution(\"1 10\\n5 3\\n\") == \"5 5\\n\""
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n1 1\\n\") == \"1 6\"\nassert solution(\"3 2\\n0 0\\n\") == \"1 3\"\nassert solution(\"1 10\\n5 3\\n\") == \"5 5\"\n"
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n1 1\\n\") == \"1 6\\n\"\nassert solution(\"3 2\\n0 0\\n\") == \"1 3\\n\"\nassert solution(\"1 10\\n5 3\\n\") == \"5 5\\n\""
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"\"\"\n2\n2 3\n3 3\n\"\"\"\n\nassert solution(open(\"input2.txt\", \"r\")) == \"\"\"\n2\n2 3\n3 3\n\"\"\""
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n-2 5 -1\") == \"2\\n2 3\\n3 3\"\nassert solution(\"5\\n1 2 3 4 5\") == \"2\\n2 3\\n3 3\"\nassert solution(\"2\\n1 -2\") == \"1\"\nassert solution(\"2\\n1 3\") == \"2\"\nassert solution(\"2\\n1 2\") == \"1\"\nassert solution(\"1\\n1\") == \"1\"\n"
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n-2 5 -1\") == \"2\\n2 3\\n3 3\\n\"\nassert solution(\"2\\n-3 4 5\") == \"2\\n1 2\\n2 3\\n\"\nassert solution(\"3\\n6 7 8\") == \"1\\n1 1\\n1 2\\n1 3\\n\"\nassert solution(\"5\\n-10 -5 0 20\") == \"1\\n1 1\\n1 2\\n1 3\\n\"\nassert solution(\"2\\n-10 -5 0 20\") == \"0\\n0 0\\n0 1\\n0 2\\n\"\nassert solution(\"1\\n0 0 0\") == \"1\\n1 1\\n\"\nassert solution(\"5\\n-10 -5 0 20\") == \"1\\n1 1\\n1 2\\n1 3\\n\""
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n-2 5 -1\") == \"2\\n2 3\\n3 3\\n\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"\"\"\n2\n2 3\n3 3\n\"\"\"\n"
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"\"\"2\n2 3\n3 3\n\"\"\"\n"
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n-2 5 -1\") == \"2\\n2 3\\n3 3\"\nassert solution(\"5\\n-3 7 -4\") == \"0\"\nassert solution(\"4\\n1 2 3 4\") == \"1\"\nassert solution(\"2\\n-1 0 1\") == \"1\"\nassert solution(\"3\\n0 1 2\") == \"1\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1\"\n"
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"-2 5 -1\") == \"2\\n2 3\\n3 3\"\nassert solution(\"-1 1 2 3 4 5 6\") == \"1\\n2 3 4 5 6\"\nassert solution(\"-2 1 2 3 4 5 6\") == \"0\\n1 2 3 4 5 6\"\nassert solution(\"-2 5 -1 7 8 9\") == \"1\\n2 3\\n3 3\"\nassert solution(\"2 -2 -2 -2 2 2\") == \"2\\n2 3\\n3 3\"\nassert solution(\"5 5 5 5 5 5 5 5 5 5\") == \"1\\n2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\"\n"
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n-2 5 -1\") == \"2\\n2 3\\n3 3\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"2\\n2 3\\n3 3\\n\"\nassert solution(\"10\\n1 -2 -3 -4 -5\") == \"2\\n2 3\\n3 3\\n\"\nassert solution(\"20\\n1 -2 -3 -4 -5\\n-2 1 -3 4 -5\\n-4 5 -3 -1 2\") == \"2\\n2 3\\n3 3\\n\"\nassert solution(\"10\\n1 2 3 4 5\\n-2 5 -1\") == \"2\\n2 3\\n3 3\\n\"\nassert solution(\"20\\n1 2 3 4 5\\n-2 5 -1\\n-2 1 -3 4 -5\\n-4 5 -3 -1 2\") == \"2\\n2 3\\n3 3\\n\"\nassert solution(\"10\\n1 2 3 4 5\\n-2 5 -1\\n-4 5 -3 -1 2\") == \"2\\n2 3\\n3 3\\n\""
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n-2 5 -1\") == \"2\\n2 3\\n3 3\"\nassert solution(\"5\\n0 -1 5 10 7\") == \"2\\n-1 2 6 4 9\""
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2\\n0 3\\n1 5\\n') == '3\\n'\nassert solution('1\\n0 4\\n') == '1\\n'\nassert solution('2\\n1 10\\n2 2\\n') == '3\\n'"
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 3\nassert solution(1) == 1\nassert solution(2) == 2\nassert solution(10) == 3\n"
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n0 3\\n1 5\\n\") == \"3\\n\"\nassert solution(\"1\\n0 4\\n\") == \"1\\n\"\nassert solution(\"2\\n1 10\\n2 2\\n\") == \"3\\n\""
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 3\n"
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input) == output\n\nfor line in lines:\n    k_i, a_i = line.strip().split()\n    k_i, a_i = int(k_i), int(a_i)\n    assert 0 <= k_i <= 10**9 and 1 <= a_i <= 10**9\n    assert set(range(k_i)) == set(range(k_i))\n    if k_i > 1:\n        assert set(range(2, 2**k_i)) == set(range(k_i))\n\nfor i in range(n):\n    k_i, a_i = map(int, input().strip().split())\n    k_i, a_i = k_i, a_i\n    assert 0 <= k_i <= 10**9 and 1 <= a_i <= 10**9\n    assert set(range(k_i)) == set(range(k_i))\n    if k_i > 1:\n        assert set(range(2, 2**k_i)) == set(range(k_i))\n\np = max(range(1, 10**9), key=lambda x: (2**x, x))\nprint(p)"
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n0 3\\n1 5\") == \"3\\n\"\nassert solution(\"1\\n0 4\\n\") == \"1\\n\"\nassert solution(\"2\\n1 10\\n2 2\") == \"3\\n\"\nassert solution(\"1\\n1 1\\n2 3\\n3 4\\n\") == \"3\\n\""
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n0 3\\n1 5\\n\") == \"3\\n\"\nassert solution(\"1\\n0 4\\n\") == \"1\\n\"\nassert solution(\"2\\n1 10\\n2 2\\n\") == \"3\\n\""
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_data) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input_data)}\""
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n0 3\\n1 5\\n\") == \"3\"\nassert solution(\"1\\n0 4\\n\") == \"1\"\nassert solution(\"2\\n1 10\\n2 2\\n\") == \"3\""
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 3\\n1 5\\n\") == \"3\\n\"\nassert solution(\"1\\n0 4\\n\") == \"1\\n\"\nassert solution(\"2\\n1 10\\n2 2\\n\") == \"3\\n\""
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(r'''\n6 18\n5 6 1 10 12 2\n''') == '16\\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18 '\n\nassert solution(r'''\n3 50\n25 25 50\n''') == '3\\n0 25 50'"
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"16\\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18 \"\nassert solution() == \"3\\n0 25 50\""
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Expected output: {expected_output}, but got: {solution(input())}\"\n"
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=None) == \"16\\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18 \""
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_data) == output_data, f\"Test failed: {solution(input_data)}!= {output_data}\""
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('6 18\\n5 6 1 10 12 2') == '16\\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18 '\nassert solution('3 50\\n25 25 50') == '3\\n0 25 50'"
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=open('input.txt', 'r')) == expected, f'Expected {expected}, got {solution(stdin=open(\"input.txt\", \"r\"))}'"
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"\"\"16\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18 \"\"\""
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '''16\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18\n\nInput\n3 50\n25 25 50\n\nOutput\n3\n0 25 50'''\n\nfrom typing import List"
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 18\\n5 6 1 10 12 2\") == \"16\\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18\"\nassert solution(\"3 50\\n25 25 50\") == \"3\\n0 25 50\""
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n\") == \"3\\n\"\nassert solution(\"2\\n\") == \"2\\n\""
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\") == \"3\"\nassert solution(\"2\") == \"2\""
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(6) == 3\nassert solution(2) == 2"
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(6) == 3\nassert solution(2) == 2\n"
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('6') == 3\nassert solution('2') == 2"
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(6) == 3\nassert solution(2) == 2\n\nfrom typing import List"
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(6) == \"3\"\nassert solution(2) == \"2\"\nassert solution(4) == \"2\"\nassert solution(5) == \"2\"\nassert solution(3) == \"3\""
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\") == \"3\"\nassert solution(\"2\") == \"2\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 3\nassert solution(2) == 2\n\nfrom typing import List"
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 3, \"The expected output is 3, but it is: \" + str(solution())"
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"1 2 3\") == \"1\"\nassert solution(\"1 2 3 4 5\") == \"1\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"1\""
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n10 1\\n20 2\\n30 3\") == \"180\\n\"\nassert solution(\"3\\n3 1\\n2 2\\n4 3\") == \"21\\n\"\nassert solution(\"1\\n5 10\") == \"50\\n\""
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n10 1\\n20 2\\n30 3\\n\") == \"180\"\nassert solution(\"3\\n3 1\\n2 2\\n4 3\\n\") == \"21\"\nassert solution(\"1\\n5 10\\n\") == \"50\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n10 1\\n20 2\\n30 3\\n\\n3\\n3 1\\n2 2\\n4 3\\n\\n1\\n5 10\\n\\n') == '180\\n\\n21\\n\\n50'"
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n10 1\\n20 2\\n30 3\\n\") == \"180\"\nassert solution(\"3\\n3 1\\n2 2\\n4 3\\n\") == \"21\"\nassert solution(\"1\\n5 10\\n\") == \"50\"\n"
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n10 1\\n20 2\\n30 3\") == \"180\"\nassert solution(\"3\\n3 1\\n2 2\\n4 3\") == \"21\"\nassert solution(\"1\\n5 10\") == \"50\""
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('Input\\n3\\n10 1\\n20 2\\n30 3\\n\\nInput\\n3\\n3 1\\n2 2\\n4 3\\n\\nInput\\n1\\n5 10\\n\\nOutput\\n180\\n180\\n21\\n50\\n50') == 180, '180'\nassert solution('Input\\n3\\n3 1\\n2 2\\n4 3\\n\\nInput\\n1\\n5 10\\n\\nOutput\\n180\\n21\\n50\\n50') == 180, '180'\nassert solution('Input\\n1\\n5 10\\n\\nOutput\\n50\\n50') == 50, '50'"
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Solution returned {solution(input())}, which is not equal to the expected output.\\nInput:\\n{input()}\\nExpected output:\\n{expected_output}\""
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n10 1\\n20 2\\n30 3\") == \"180\"\nassert solution(\"3\\n3 1\\n2 2\\n4 3\") == \"21\"\nassert solution(\"1\\n5 10\") == \"50\"\n"
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Input\\n3\\n10 1\\n20 2\\n30 3\\n\") == \"180\\n\"\nassert solution(\"Input\\n3\\n3 1\\n2 2\\n4 3\\n\") == \"21\\n\"\nassert solution(\"Input\\n1\\n5 10\\n\") == \"50\\n\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"The output is not as expected\""
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"The solution is incorrect. Expected {expected}, got {solution(input())}\"\n"
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n0 0 10\\n\") == \"2\\n\"\nassert solution(\"5\\n0 1 2 3 4\\n\") == \"1\\n\"\nassert solution(\"4\\n0 0 0 0\\n\") == \"4\\n\"\nassert solution(\"9\\n0 1 0 2 0 1 1 2 10\\n\") == \"3\\n\""
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()\nprint('Tests passed.')"
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n0 0 10\") == \"2\"\nassert solution(\"5\\n0 1 2 3 4\") == \"1\"\nassert solution(\"4\\n0 0 0 0\") == \"4\"\nassert solution(\"9\\n0 1 0 2 0 1 1 2 10\") == \"3\""
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n0 0 10\") == \"2\\n\"\nassert solution(\"5\\n0 1 2 3 4\") == \"1\\n\"\nassert solution(\"4\\n0 0 0 0\") == \"4\\n\"\nassert solution(\"9\\n0 1 0 2 0 1 1 2 10\") == \"3\\n\""
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '2', 'Expected output \"2\", got \"{}\"'.format(solution())"
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n0 0 10\\n') == '2\\n'\nassert solution('5\\n0 1 2 3 4\\n') == '1\\n'\nassert solution('4\\n0 0 0 0\\n') == '4\\n'\nassert solution('9\\n0 1 0 2 0 1 1 2 10\\n') == '3\\n'"
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n0 0 10\\n\") == \"2\\n\"\nassert solution(\"5\\n0 1 2 3 4\\n\") == \"1\\n\"\nassert solution(\"4\\n0 0 0 0\\n\") == \"4\\n\"\nassert solution(\"9\\n0 1 0 2 0 1 1 2 10\\n\") == \"3\\n\""
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n0 0\\n0 1\\n1 0\\n1 1\\n') == '5'\n\nfrom typing import List"
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 0\\n1 1\\n\") == \"5\\n\"\n\nimport math"
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 0\\n1 1\") == \"5\\n\"\nassert solution(\"6\\n-1 -1\\n2 2\\n3 3\\n4 4\") == \"12\\n\"\nassert solution(\"8\\n-1 1\\n-1 -1\\n2 -2\\n2 2\\n3 3\\n3 -3\\n4 -4\\n4 4\\n5 5\") == \"128\\n\""
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 0\\n1 1\") == \"5\"\n"
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 0\\n1 1\\n\") == \"5\"\n"
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '5'"
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n    4\n    0 0\n    0 1\n    1 0\n    1 1\n    ''') == '5\\n'"
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"5\"\nprint(1)"
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 0\\n1 1\\n\") == \"5\\n\"\n"
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 0\\n1 1\") == \"5\\n\"\nassert solution(\"1000000000\") == \"1000000000\\n\""
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '4'"
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Test failed: {solution(input())}!= {output()}\"\n\ninput_ = input().split()\nN = int(input_[0])\nc = input_[1]\na = list(map(int, input_[2:]))"
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"4\\n\""
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"4\", \"The minimum number of operations required to achieve the objective is incorrect.\""
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"4\\n\"\nassert solution(\"1\\nW 1\\nW 2\\nW 3\\nW 4\\n\") == \"4\\n\"\nassert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"2\\n\"\nassert solution(\"4\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"4\\n\"\nassert solution(\"2\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"2\\n\"\nassert solution(\"5\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"5\\n\"\nassert solution(\"6\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"6\\n\"\nassert solution(\"7\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"6\\n\"\nassert solution(\"8\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"8\\n\""
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"3\nB 1\nW 2\nB 3\nW 1\nW 3\nB 2\"\"\") == \"4\""
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"4\\n\""
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2') == '4\\n'\nprint('All test cases pass.')"
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"4\\n\"\nassert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\") == \"4\\n\""
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"4\\n\""
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n6\\n3\\n\") == \"4\\n\""
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n6\\n3\\n') == '4\\n'\nassert solution('5\\n3\\n5\\n') == '4\\n'"
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Test failed\"\nfor input, output in [\n    (\n        \"5\\n6\\n3\\n\",\n        \"4\\n\"\n    ),\n    (\n        \"5\\n3\\n5\\n\",\n        \"4\\n\"\n    ),\n]:\n    assert solution(input) == output, \"Test failed\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == expected_output, f\"Test case failed. Expected output: {expected_output}, Received output: {solution}\""
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Test {test_case} failed: Expected output: {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == 4"
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"Output\\n4\\n\""
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n6\\n3\\n\") == \"4\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\""
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n6\\n3\\n\") == \"4\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\"\nassert solution(\"5\\n3\\n\") == \"4\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\""
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n6\\n3\\n\") == \"4\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\"\nassert solution(\"5\\n6\\n6\\n\") == \"4\""
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\", \"Incorrect output\""
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"4 2\") == \"2\"\nassert solution(\"8\") == \"32\""
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"2\\n4 2\\n\") == \"2\\n\"\nassert solution(stdin=\"8\\n1 2 4 8 16 32 64 576\\n\") == \"32\\n\""
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '2'"
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n4 2\\n\") == \"2\\n\"\nassert solution(\"8\\n1 2 4 8 16 32 64 576\\n\") == \"32\\n\""
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(solution) == \"32\"\nassert solution(solution(solution)) == \"2\"\nassert solution(solution(solution(solution)))) == \"4\""
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n4 2\\n\") == \"2\"\nassert solution(\"8\\n1 2 4 8 16 32 64 576\\n\") == \"32\"\nassert solution(\"2\\n4 5 3\\n\") == \"5\"\nassert solution(\"6\\n1 1 1\\n\") == \"2\"\nassert solution(\"8\\n1 2 4 8 16 32 64 576\\n\") == \"32\"\nassert solution(\"2\\n4 5 3\\n\") == \"5\""
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n4\\n\\n8\\n1\\n2\\n4\\n8\\n16\\n32\\n64\\n576\") == \"2\""
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2\"\n\nassert solution(input()) == \"32\""
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\", \"The largest number in the array which is not a perfect square is not 2.\""
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"400 4\\n100 300 450 500\\n\") == \"2\\n\"\nassert solution(\"50 2\\n100 25\\n\") == \"3\\n\""
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"400 4\\n100 300 450 500\\n\") == \"2\"\nassert solution(\"50 2\\n100 25\\n\") == \"3\""
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=r'400 4\\n100 300 450 500') == '2'\nassert solution(stdin=r'50 2\\n100 25') == '3'\n\nprint(\"All tests passed\")"
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"400 4\\n100 300 450 500\") == \"2\"\nassert solution(\"50 2\\n100 25\") == \"3\""
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, got: {solution(input())}\"\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))"
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"Test failed\""
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"Test case {i+1} failed. Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"6\"\n"
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\") == \"6\\n\", \"Output should be: 6\\n\"\nassert solution(\"5 3\") == \"10\\n\", \"Output should be: 10\\n\"\nassert solution(\"6 4\") == \"15\\n\", \"Output should be: 15\\n\"\nassert solution(\"7 5\") == \"20\\n\", \"Output should be: 20\\n\"\nassert solution(\"8 6\") == \"25\\n\", \"Output should be: 25\\n\"\nassert solution(\"9 7\") == \"30\\n\", \"Output should be: 30\\n\"\nassert solution(\"10 8\") == \"35\\n\", \"Output should be: 35\\n\"\nassert solution(\"11 9\") == \"40\\n\", \"Output should be: 40\\n\"\nassert solution(\"12 10\") == \"45\\n\", \"Output should be: 45\\n\"\nassert solution(\"13 11\") == \"50\\n\", \"Output should be: 50\\n\"\nassert solution(\"14 12\") == \"55\\n\", \"Output should be: 55\\n\"\nassert solution(\"15 13\") == \"60\\n\", \"Output should be: 60\\n\"\nassert solution(\"16 14\") == \"65\\n\", \"Output should be: 65\\n\"\nassert solution(\"17 15\") == \"70\\n\", \"Output should be: 70\\n\"\nassert solution(\"18 16\") == \"75\\n\", \"Output should be: 75\\n\"\nassert solution(\"19 17\") == \"80\\n\", \"Output should be: 80\\n\"\nassert solution(\"20 18\") == \"85\\n\", \"Output should be: 85\\n\"\nassert solution(\"21 19\") == \"90\\n\", \"Output should be: 90\\n\"\nassert solution(\"22 20\") == \"95\\n\", \"Output should be: 95\\n\"\nassert solution(\"23 21\") == \"100\\n\", \"Output should be: 100\\n\"\nassert solution(\"24 22\") == \"105\\n\", \"Output should be: 105\\n\"\nassert solution(\"25 23\") == \"110\\n\", \"Output should be: 110\\n\"\nassert solution(\"26 24\") == \"115\\n\", \"Output should be: 115\\n\"\nassert solution(\"27 25\") == \"120\\n\", \"Output should be: 120\\n\"\nassert solution(\"28 26\") == \"125\\n\", \"Output should be: 125\\n\"\nassert solution(\"29 27\") == \"130\\n\", \"Output should be: 130\\n\"\nassert solution(\"30 28\") == \"135\\n\", \"Output should be: 135\\n\"\nassert solution(\"31 29\") == \"140\\n\", \"Output should be: 140\\n\"\nassert solution(\"32 30\") == \"145\\n\", \"Output should be: 145\\n\"\nassert solution(\"33 31\") == \"150\\n\", \"Output should be: 150\\n\"\nassert solution(\"34 32\") == \"155\\n\", \"Output should be: 155\\n\"\nassert solution(\"35 33\") == \"160\\n\", \"Output should be: 160\\n\"\nassert solution(\"36 34\") == \"165\\n\", \"Output should be: 165\\n\"\nassert solution(\"37 35\") == \"170\\n\", \"Output should be: 170\\n\"\nassert solution(\"38 36\") == \"175\\n\", \"Output should be: 175\\n\"\nassert solution(\"39 37\") == \"180\\n\", \"Output should be: 180\\n\"\n"
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\") == \"6\\n\""
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 2') == '6\\n'\nassert solution('10 10') == '121\\n'\nassert solution('5 5') == '25\\n'\nassert solution('10 1') == '10\\n'\nassert solution('10 2') == '20\\n'\nassert solution('10 3') == '30\\n'"
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\") == \"6\\n\", \"The expected output is incorrect.\"\n"
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 2') == '6\\n'\nassert solution('7 3') == '12\\n'\nassert solution('20 5') == '168\\n'\nassert solution('100 10') == '1708\\n'\nassert solution('5 3') == '1\\n'\n"
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\") == \"6\\n\", \"The output should be '6\\n', but it is '{}'\".format(solution(\"4 2\"))"
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(4, 2) == 6, \"The number of sequences can be obtained after the procedure is incorrect\""
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n\") == \"6\\n\"\nassert solution(\"5 3\\n\") == \"2\\n\"\nassert solution(\"10 3\\n\") == \"10\\n\"\nassert solution(\"5 5\\n\") == \"5\\n\"\nassert solution(\"10 5\\n\") == \"5\\n\"\nassert solution(\"1 1\\n\") == \"0\\n\"\nassert solution(\"3 1\\n\") == \"1\\n\"\nassert solution(\"6 2\\n\") == \"0\\n\""
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '6\\n', \"Incorrect output.\"\n"
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"499122178\"\n"
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(b\"\\n\") == \"0\\n\"\nassert solution(b\"\\n\\n\") == \"0\\n\"\nassert solution(b\"3\\n\") == \"3\\n\"\nassert solution(b\"3\\n\\n\") == \"3\\n\"\nassert solution(b\"3\\n\\n\\n\") == \"3\\n\"\nassert solution(b\"3\\n\\n\\n\\n\") == \"3\\n\""
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '499122178'"
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == '499122178\\n499122178\\n499122178'"
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"499122178\\n499122178\\n499122178\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"499122178\\n499122178\\n499122178\"\n\nfrom typing import List"
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"499122178\\n499122178\\n499122178\", \"The expected value is incorrect.\"\n"
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"The expected output is {expected}, but the actual output is {solution(input())}.\""
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"499122178\\n499122178\\n499122178\"\n"
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n\") == \"499122178\\n499122178\\n499122178\\n\"\nassert solution(\"4\\n\") == \"999122178\\n999122178\\n999122178\\n\"\nassert solution(\"5\\n\") == \"1999122178\\n1999122178\\n1999122178\\n\"\nassert solution(\"6\\n\") == \"2999122178\\n2999122178\\n2999122178\\n\"\nassert solution(\"7\\n\") == \"3999122178\\n3999122178\\n3999122178\\n\"\nassert solution(\"8\\n\") == \"4999122178\\n4999122178\\n4999122178\\n\""
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n\") == \"6\\n\"\nassert solution(\"3\\n\") == \"6669\\n\"\nassert solution(\"10\\n\") == \"-1\\n\"\n"
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"6\"\nassert solution(\"3\") == \"6669\"\nassert solution(\"10\") == \"-1\"\n"
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin='2') == '6'\nassert solution(stdin='3') == '6669'\nassert solution(stdin='10') == '-1'"
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n\") == \"6\"\nassert solution(\"3\\n\") == \"6669\"\nassert solution(\"10\\n\") == \"-1\""
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"6\"\nassert solution(\"3\") == \"6669\"\nassert solution(\"10\") == \"-1\"\n\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(2) == \"6\"\nassert solution(3) == \"6669\"\nassert solution(10) == \"-1\""
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(2) == 6\nassert solution(3) == 6669\nassert solution(10) == -1\n\nassert not solution(20) == 6\nassert not solution(1000000) == -1\n\nassert solution(1000000000) == -1"
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(2) == 6, \"Baron claims to know the number 6. We cannot provide an answer for this test case.\"\nassert solution(3) == 6669, \"Baron claims to know the number 6669. We cannot provide an answer for this test case.\"\nassert solution(10) == -1, \"Baron claims to know the number 6669. We cannot provide an answer for this test case.\""
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 6669\nassert solution(10) == -1"
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(2) == 6\nassert solution(3) == 6669\nassert solution(10) == -1"
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Input\\n5\\n\\nOutput\\n1 4 3 2 0\\n1 0 2 4 3\\n2 4 0 1 3\\n\\nInput\\n2\\n\\nOutput\\n-1\") == \"1 4 3 2 0\\n1 0 2 4 3\\n\"\nassert solution(\"Input\\n2\\n\\nOutput\\n-1\") == \"-1\""
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"1 4 3 2 0\\n1 0 2 4 3\\n2 4 0 1 3\"\nassert solution(\"2\") == \"-1\""
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(5) == \"1 4 3 2 0\"\nassert solution(2) == \"-1\""
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n\") == \"1 4 3 2 0\\n1 0 2 4 3\\n2 4 0 1 3\\n\"\nassert solution(\"2\\n\") == \"-1\\n\""
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n\") == \"1 4 3 2 0\\n1 0 2 4 3\\n2 4 0 1 3\\n\"\nassert solution(\"2\\n\") == \"-1\"\n"
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == expected_output, \"The solution is incorrect.\""
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\n') == '1 4 3 2 0\\n1 0 2 4 3\\n2 4 0 1 3\\n'\nassert solution('2\\n') == '-1'"
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(str(input())) == expected_output, f\"Test failed for {input()} and expected output: {expected_output}\""
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(solution(input())) == \"Yes\"\nassert solution(solution(input())) == \"No\""
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n1 2\\n1 3\\n2 4\\n1 2 3 4') == 'Yes'\nassert solution('4\\n1 2\\n1 3\\n2 4\\n1 2 4 3') == 'No'"
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_data) == expected_output, f\"Test failed for input data: {input_data}, expected output: {expected_output}\""
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 3 4\") == \"Yes\"\nassert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 4 3\") == \"No\""
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 3 4\") == \"Yes\"\nassert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 4 3\") == \"No\""
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"Yes\"\nassert solution() == \"No\"\n"
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n1 2\\n1 3\\n2 4\\n1 2 3 4\\n') == 'Yes\\n'\nassert solution('4\\n1 2\\n1 3\\n2 4\\n1 2 4 3\\n') == 'No\\n'"
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Input\\n4\\n1 2\\n1 3\\n2 4\\n1 2 3 4\") == \"Yes\"\nassert solution(\"Input\\n4\\n1 2\\n1 3\\n2 4\\n1 2 4 3\") == \"No\""
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\""
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 24500\nassert solution() == -1"
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 6 5\\n1 1 0 5000\\n3 2 0 5500\\n2 2 0 6000\\n15 0 2 9000\\n9 0 1 7000\\n8 0 2 6500\\n\") == \"24500\"\nassert solution(\"2 4 5\\n1 2 0 5000\\n2 1 0 4500\\n2 1 0 3000\\n8 0 1 6000\\n\") == \"-1\""
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 24500\nassert solution == -1"
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 6 5\\n1 1 0 5000\\n3 2 0 5500\\n2 2 0 6000\\n15 0 2 9000\\n9 0 1 7000\\n8 0 2 6500\\n\\n2 4 5\\n1 2 0 5000\\n2 1 0 4500\\n2 1 0 3000\\n8 0 1 6000\\n\\n\") == 24500\nassert solution(\"2 4 5\\n1 2 0 5000\\n2 1 0 4500\\n2 1 0 3000\\n8 0 1 6000\\n\\n\") == -1"
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 6 5\\n1 1 0 5000\\n3 2 0 5500\\n2 2 0 6000\\n15 0 2 9000\\n9 0 1 7000\\n8 0 2 6500\") == \"24500\"\nassert solution(\"2 4 5\\n1 2 0 5000\\n2 1 0 4500\\n2 1 0 3000\\n8 0 1 6000\") == \"-1\""
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_1) == output_1, f\"Test case 1 failed: {solution(input_1)}!= {output_1}\"\nassert solution(input_2) == output_2, f\"Test case 2 failed: {solution(input_2)}!= {output_2}\"\nassert solution(input_3) == output_3, f\"Test case 3 failed: {solution(input_3)}!= {output_3}\"\nassert solution(input_4) == output_4, f\"Test case 4 failed: {solution(input_4)}!= {output_4}\"\nassert solution(input_5) == output_5, f\"Test case 5 failed: {solution(input_5)}!= {output_5}\""
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 6 5\\n1 1 0 5000\\n3 2 0 5500\\n2 2 0 6000\\n15 0 2 9000\\n9 0 1 7000\\n8 0 2 6500') == '24500'\nassert solution('2 4 5\\n1 2 0 5000\\n2 1 0 4500\\n2 1 0 3000\\n8 0 1 6000') == '-1'"
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 24500\nassert solution() == -1"
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 6 5\\n1 1 0 5000\\n3 2 0 5500\\n2 2 0 6000\\n15 0 2 9000\\n9 0 1 7000\\n8 0 2 6500') == 24500\nassert solution('2 4 5\\n1 2 0 5000\\n2 1 0 4500\\n2 1 0 3000\\n8 0 1 6000') == -1"
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 6 5\\n1 1 0 5000\\n3 2 0 5500\\n2 2 0 6000\\n15 0 2 9000\\n9 0 1 7000\\n8 0 2 6500\\n\") == 24500\n\nassert solution(\"2 4 5\\n1 2 0 5000\\n2 1 0 4500\\n2 1 0 3000\\n8 0 1 6000\\n\") == -1"
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"0.828427125\"\nassert solution(input()) == \"19.668384925\""
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1 45\") == \"0.828427125\"\nassert solution(\"6 4 30\") == \"19.668384925\""
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '0.828427125', 'Your solution is not correct.'"
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1 45\") == \"0.828427125\"\nassert solution(\"6 4 30\") == \"19.668384925\""
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1 45\") == 0.828427125\nassert solution(\"6 4 30\") == 19.668384925\n"
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 45\") == \"0.828427125\"\nassert solution(\"6 4 30\") == \"19.668384925\""
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == 0.828427125\nassert solution(input()) == 19.668384925"
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1 45\") == \"0.828427125\"\nassert solution(\"6 4 30\") == \"19.668384925\""
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '0.828427125\\n'\nassert solution(stdin) == '19.668384925\\n'\n"
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 1 45') == '0.828427125'\nassert solution('6 4 30') == '19.668384925'"
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500') == 3000\nassert solution('3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001') == 992\nassert solution('2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1') == 1\n\nprint(\"All test cases passed\")"
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500\\n\") == \"3000\"\nassert solution(\"3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\\n\") == \"992\"\nassert solution(\"2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\") == \"1\"\n"
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n2 3\nATK 2000\nDEF 1700\n2500\n2500\n2500\n\"\"\") == \"3000\"\nassert solution(\"\"\"\n3 4\nATK 10\nATK 100\nATK 1000\n1\n11\n101\n1001\n\"\"\") == \"992\"\nassert solution(\"\"\"\n2 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\"\"\") == \"1\""
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500\\n') == '3000'\nassert solution('3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\\n') == '992'\nassert solution('2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n') == '1'"
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500\") == \"3000\\n\""
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500\") == \"3000\"\nassert solution(\"3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\\n\") == \"992\"\nassert solution(\"2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\") == \"1\""
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500\") == 3000\nassert solution(\"3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\") == 992\nassert solution(\"2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\") == 1\n"
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_data) == expected_output, f\"Expected output: {expected_output}, but got: {solution(input_data)}\""
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '3000', 'Expected output: 3000, but got: {}'.format(solution(stdin))"
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n1 2 3 4 5 6 7 8 9\\n\") == \"6\"\nassert solution(\"2 2\\n1 2\\n0 0\\n2 1 -100 -100\\n\") == \"2\"\nassert solution(\"5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\\n\") == \"62\""
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\\n\") == \"6\\n\"\nassert solution(\"2 2\\n1 2\\n0 0\\n2 1 -100 -100\\n\") == \"2\\n\"\nassert solution(\"5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\\n\") == \"62\\n\""
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n1 2 3 4 5 6 7 8 9\") == \"6\\n\"\nassert solution(\"2 2\\n1 2\\n0 0\\n2 1 -100 -100\") == \"2\\n\"\nassert solution(\"5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\") == \"62\\n\""
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\"\n) == 6\n\nassert solution(\n    \"2 2\\n1 2\\n0 0\\n2 1 -100 -100\"\n) == 2\n\nassert solution(\n    \"5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\"\n) == 62"
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Test failed: solution(input()) == expected_output, expected_output={expected_output}, input()={input()}\""
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n    5 4\n    4 3 1 2 1\n    1 2 1 2 1\n    1 2 3 4 5 6 7 8 9\"\"\") == 6\n\nassert solution(\"\"\"\n    2 2\n    1 2\n    0 0\n    2 1 -100 -100\"\"\") == 2\n\nassert solution(\"\"\"\n    5 4\n    4 3 2 1 1\n    0 2 6 7 4\n    12 12 12 6 -3 -5 3 10 -4\"\"\") == 62"
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input) == output, f\"Test failed for input: {input}, output: {output}\"\nfor i in range(1, 10):\n    assert solution(input) == output, f\"Test failed for input: {input}, output: {output}\""
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 6, \"The expected output is not found.\""
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"sample_input.txt\", \"r\")) == \"6\"\nassert solution(open(\"sample_input.txt\", \"r\")) == \"2\"\nassert solution(open(\"sample_input.txt\", \"r\")) == \"62\"\n"
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n\") == 6\nassert solution(\"2 2\\n1 2\\n0 0\\n2 1 -100 -100\\n\") == 2\nassert solution(\"5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\\n\") == 62"
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('aaba') == 'YES'\nassert solution('abaa') == 'NO'\nassert solution('aabb') == 'NO'"
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"abaa\") == \"YES\"\nassert solution(\"aabb\") == \"YES\"\nassert solution(\"abab\") == \"YES\"\nassert solution(\"aaab\") == \"NO\"\nassert solution(\"abca\") == \"NO\""
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('aaba') == 'YES'\nassert solution('abaa') == 'NO'\nassert solution('aabb') == 'YES'"
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"aabb\") == \"YES\"\nassert solution(\"abab\") == \"NO\""
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"aabb\") == \"NO\", \"The first sample is incorrect.\"\nassert solution(\"abab\") == \"YES\", \"The second sample is incorrect.\""
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"abaa\") == \"NO\"\nassert solution(\"aabb\") == \"YES\""
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"abaa\") == \"YES\"\nassert solution(\"aabb\") == \"NO\"\n"
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"abaa\") == \"NO\"\nassert solution(\"aabb\") == \"NO\""
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"abaa\") == \"NO\"\nassert solution(\"aabb\") == \"YES\"\nassert solution(\"abab\") == \"NO\""
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"abaa\") == \"NO\"\nassert solution(\"aabb\") == \"NO\""
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == 'YES'"
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 'NO'\nassert solution(1) == 'YES'"
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"NO\"\nassert solution(1) == \"YES\""
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"NO\"\nassert solution(1) == \"YES\""
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"NO\"\nassert solution(1) == \"YES\""
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"NO\"\nassert solution(\"1\") == \"YES\"\n"
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"NO\"\nassert solution(1) == \"YES\""
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"NO\"\nassert solution(\"1\") == \"YES\""
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == \"NO\"\nassert solution(1) == \"YES\"\n"
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"NO\"\nassert solution(1) == \"YES\"\n"
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"No\"\nassert solution() == \"Yes\\n?es?\"\nassert solution() == \"Yes\\n.es?\"\nassert solution() == \"Yes\\n.es\"\nassert solution() == \"Yes\\n.es.\""
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3 2\nab\nac\ncd\n1 2\n\"\"\") == \"Yes\\na?\"\n\nassert solution(\"\"\"\n5 3\ntest\ntezt\ntest.\n.est\ntes.\n1 4 5\n\"\"\") == \"Yes\\nes?\"\n\nassert solution(\"\"\"\n4 4\na\nb\nc\ndd\n1 2 3 4\n\"\"\") == \"No\"\n\nassert solution(\"\"\"\n6 3\n.svn\n.git\n....\n...\n..\n.\n1 2 3\n\"\"\") == \"Yes\\n.???\""
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"ab\") == \"Yes\\na?\"\nassert solution(\"ac\") == \"Yes\\na?\"\nassert solution(\"cd\") == \"Yes\\na?\"\nassert solution(\"1 2\") == \"No\"\nassert solution(\"test\") == \"Yes\\na?est\"\nassert solution(\"tezt\") == \"Yes\\na?est\"\nassert solution(\"test.est\") == \"Yes\\na?est\"\nassert solution(\"tes.es\") == \"Yes\\na?es\"\nassert solution(\"1 4 5\") == \"Yes\\na?e?s\"\nassert solution(\"a\") == \"No\"\nassert solution(\"b\") == \"No\"\nassert solution(\"c\") == \"No\"\nassert solution(\"dd\") == \"No\"\nassert solution(\".svn\") == \"Yes\\na?\"\nassert solution(\".git\") == \"Yes\\na?\"\nassert solution(\"....\") == \"Yes\\na?\"\nassert solution(\"...\") == \"Yes\\na?\"\nassert solution(\"..\") == \"Yes\\na?\"\nassert solution(\".?def\") == \"No\""
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"ab\") == \"a?\"\nassert solution(\"ac\") == \"a?\"\nassert solution(\"cd\") == \"a?\""
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('abac') == 'Yes', 'Testcase 1'\nassert solution('ac') == 'No', 'Testcase 2'\nassert solution('abacac') == 'Yes', 'Testcase 3'\nassert solution('test') == 'No', 'Testcase 4'\nassert solution('tezt') == 'Yes', 'Testcase 5'\nassert solution('tes.test') == 'Yes', 'Testcase 6'\nassert solution('def solution(stdin: str) -> str:') == 'No', 'Testcase 7'"
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('ab') == 'a?'\nassert solution('abcc') == 'a?'\nassert solution('tezt') == '?tzt'\nassert solution('tst') == 'tst'\nassert solution('svn') == '.svn'\nassert solution('git') == '.git'\nassert solution('..') == '..'\n\nassert solution('tst.txt') == 'tst.txt'\nassert solution('test.txt') == 'test.txt'\nassert solution('.svn') == '.svn'\nassert solution('.git') == '.git'\nassert solution('.??') == '.??'\n\nassert solution('tes.txt') == 'tes.txt'\nassert solution('test.txt') == 'test.txt'\nassert solution('.est') == '.est'\nassert solution('tes.txt') == 'tes.txt'\nassert solution('test.txt') == 'test.txt'\nassert solution('.est') == '.est'\nassert solution('tes.txt') == 'tes.txt'\nassert solution('test.txt') == 'test.txt'\nassert solution('.est') == '.est'\nassert solution('tes.txt') == 'tes.txt'\nassert solution('test.txt') == 'test.txt'\nassert solution('.est') == '.est'\nassert solution('tes.txt') == 'tes.txt'\nassert solution('test.txt') == 'test.txt'\nassert solution('.est') == '.est'\nassert solution('tes.txt') == 'tes.txt'\nassert solution('test.txt') == 'test.txt'\nassert solution('.est') == '.est'\nassert solution('tes.txt') == 'tes.txt'\nassert solution('test.txt') == 'test.txt'\nassert solution('.est') == '.est'\nassert solution('tes.txt') == 'tes.txt'\nassert solution('test.txt') == 'test.txt'\nassert solution('.est') == '.est'\nassert solution('tes.txt') == 'tes.txt'\nassert solution('test.txt') == 'test.txt'\nassert solution('.est') == '.est'\nassert solution('tes.txt') == 'tes.txt'\nassert solution('test.txt') == 'test.txt'\nassert solution('.est') == '.est'\nassert solution('tes.txt') == 'tes.txt'\nassert solution('test.txt') == 'test.txt'\nassert solution('.est') == '.est'\nassert solution('tes.txt') == 'tes.txt'\nassert solution('test.txt') == 'test.txt'\nassert solution('.est') == '.est'\nassert solution('tes.txt') == 'tes.txt'\nassert solution('test.txt') == 'test.txt'\nassert solution('.est') == '.est'\nassert solution('tes.txt') == 'tes.txt'\nassert solution('test.txt') == 'test.txt'\nassert solution('.est') == '.est'\nassert solution('tes.txt') == 'tes.txt'\nassert solution('test.txt') == 'test.txt'\nassert solution('.est') == '.est'\nassert solution('tes.txt') == 'tes.txt'\nassert solution('test.txt') == 'test.txt'\nassert solution('.est') == '.est'\nassert solution('tes.txt') == 'tes.txt'\nassert solution('test.txt') == 'test.txt'\nassert solution('.est') == '.est'\nassert solution('tes.txt') == 'tes.txt'\nassert solution('test.txt') == 'test.txt'\nassert solution('.est') == '.est'\nassert solution('tes.txt') == 'tes.txt'\nassert solution('test.txt') == 'test.txt'\nassert solution('.est') == '.est'\nassert solution('tes.txt') == 'tes.txt'\nassert solution('test.txt') == 'test.txt'\nassert solution('.est') == '.est'\nassert solution('tes.txt') == 'tes.txt'\nassert solution('test.txt') == 'test.txt'\nassert solution('.est') == '.est'\nassert solution('tes.txt') == 'tes.txt'\nassert solution('test.txt') == 'test.txt'\nassert solution('.est') == '.est'\nassert solution('tes.txt') == 'tes.txt'\nassert solution('test.txt') == 'test.txt'\nassert solution('.est') == '.est'\nassert solution('tes.txt') == 'tes.txt'\nassert solution('test.txt"
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"a?ba?\") == \"Yes\\na?\"\nassert solution(\"aaba\") == \"No\"\nassert solution(\".svn\") == \"Yes\\n.svn\"\nassert solution(\"tezt\") == \"Yes\\ntezt\"\nassert solution(\"test\") == \"No\"\nassert solution(\".est\") == \"Yes\\n.est\"\nassert solution(\"tes.\") == \"Yes\\ntes.\"\nassert solution(\"a\") == \"No\"\nassert solution(\"b\") == \"No\"\nassert solution(\"c\") == \"No\"\nassert solution(\"d\") == \"No\"\nassert solution(\"e\") == \"No\"\nassert solution(\"f\") == \"No\"\nassert solution(\"g\") == \"No\"\nassert solution(\"h\") == \"No\"\nassert solution(\"i\") == \"No\"\nassert solution(\"j\") == \"No\"\nassert solution(\"k\") == \"No\"\nassert solution(\"l\") == \"No\"\nassert solution(\"m\") == \"No\"\nassert solution(\"n\") == \"No\"\nassert solution(\"o\") == \"No\"\nassert solution(\"p\") == \"No\"\nassert solution(\"q\") == \"No\"\nassert solution(\"r\") == \"No\"\nassert solution(\"s\") == \"No\"\nassert solution(\"t\") == \"No\"\nassert solution(\"u\") == \"No\"\nassert solution(\"v\") == \"No\"\nassert solution(\"w\") == \"No\"\nassert solution(\"x\") == \"No\"\nassert solution(\"y\") == \"No\"\nassert solution(\"z\") == \"No\"\nassert solution(\"1\") == \"No\"\nassert solution(\"2\") == \"No\"\nassert solution(\"3\") == \"No\"\nassert solution(\"4\") == \"No\"\nassert solution(\"5\") == \"No\"\nassert solution(\"6\") == \"No\""
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\nab\\nac\\ncd\") == \"Yes\\na?\"\nassert solution(\"5 3\\ntest\\ntezt\\ntest.\\n.est\\ntes.\\n1 4 5\") == \"Yes\\n?es?\"\nassert solution(\"4 4\\na\\nb\\nc\\ndd\\n1 2 3 4\") == \"No\"\nassert solution(\"6 3\\n.svn\\n.git\\n....\\n...\\n..\\n.\\n1 2 3\") == \"Yes\\n.???def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"ab\") == \"Yes\"\nassert solution(\"ac\") == \"Yes\"\nassert solution(\"cd\") == \"Yes\"\nassert solution(\"1 2\") == \"Yes\"\nassert solution(\"1 2 3\") == \"Yes\"\nassert solution(\"test\") == \"Yes\"\nassert solution(\"tezt\") == \"Yes\"\nassert solution(\"test.est\") == \"Yes\"\nassert solution(\"tes.\") == \"Yes\"\nassert solution(\"def solution(stdin: str) -> str: pass\") == \"Yes\"\nassert solution(\"a\") == \"No\"\nassert solution(\"b\") == \"No\"\nassert solution(\"c\") == \"No\"\nassert solution(\"d\") == \"No\"\nassert solution(\"e\") == \"No\"\nassert solution(\"f\") == \"No\"\nassert solution(\"g\") == \"No\"\nassert solution(\"h\") == \"No\"\nassert solution(\"i\") == \"No\"\nassert solution(\"j\") == \"No\"\nassert solution(\"k\") == \"No\"\nassert solution(\"l\") == \"No\"\nassert solution(\"m\") == \"No\"\nassert solution(\"n\") == \"No\"\nassert solution(\"o\") == \"No\"\nassert solution(\"p\") == \"No\"\nassert solution(\"q\") == \"No\"\nassert solution(\"r\") == \"No\"\nassert solution(\"s\") == \"No\"\nassert solution(\"t\") == \"No\"\nassert solution(\"u\") == \"No\"\nassert solution(\"v\") == \"No\"\nassert solution(\"w\") == \"No\"\nassert solution(\"x\") == \"No\"\nassert solution(\"y\") == \"No\"\nassert solution(\"z\") == \"No\"\nassert solution(\"abc\") == \"No\"\nassert solution(\"abcd\") == \"No\"\nassert solution(\"abcde\") == \"No\"\nassert solution(\"abcdef\") == \"No\"\nassert solution(\"abcdefg\") == \"No\"\nassert solution(\"abcdefgh\") == \"No\"\nassert solution(\"abcdefghi\") == \"No\"\nassert solution(\"abcdefghij\") == \"No\"\nassert solution(\"abcdefghijk\") == \"No\"\nassert solution(\"abcdefghijkl\") == \"No\"\nassert solution(\"abcdefghijklm\") == \"No\"\nassert solution(\"abcdefghijklmn\") == \"No\"\nassert solution(\"abcdefghijklmno\") == \"No\"\nassert solution(\"abcdefghijklmnopq\") == \"No\"\nassert solution(\"abcdefghijklmnopqrs\") == \"No\"\nassert solution(\"abcdefghijklmnopqrs\") == \"No\"\nassert solution(\"abcdefghijklmnopqrs\") == \"No\"\nassert solution(\"abcdefghijklmnopqrs\") == \"No\"\nassert solution(\"abcdefghijklmnopqrs\") == \"No\"\nassert solution(\"abcdefghijklmnopqrs\") == \"No\"\nassert solution(\"abcdefghijklmnopqrs\") == \"No\"\nassert solution(\"abcdefghijklmnopqrs\") == \"No\"\nassert solution(\"abcdefghijklmnopqrs\") == \"No\"\nassert solution(\"abcdefghijklmnopqrs\") == \"No\"\nassert solution(\"abcdefghijklmnopqrs\") == \"No\"\nassert solution(\"abcdefghijklmnopqrs\") == \"No\"\nassert solution(\"abcdefghijklmnopqrs\") == \"No\"\nassert solution(\"abcdefghijklmnopqrs\") == \"No\"\nassert solution(\"abcdefghijklmnopqrs\") == \"No\"\nassert solution(\"abcdefghijklmnopqrs\") == \"No\"\nassert solution(\"abcdefghijklmnopqrs\") == \"No\"\nassert solution(\"abcdefghijklmnopqrs\") == \"No\"\nassert solution(\"abcdefghijklmnopqrs\") == \"No\"\nassert solution(\"abcdefghijklmnopqrs\") == \"No\"\nassert solution(\"abcdefghijklmnopqrs\") == \"No\"\nassert solution(\"abcdefghijklmnopqrs\") == \"No\"\nassert solution(\"abcdefghijklmnopqrs\") == \"No\"\nassert solution(\"abcdefghijklmnopqrs\") == \"No\"\nassert solution(\"abcdefghijklmnopqrs\") == \"No\"\nassert solution(\"abcdefghijklmnopqrs\") == \"No\"\nassert solution(\"abcdefghijklmnopqrs\") == \"No\"\nassert solution(\"abcdefghijklmnopqrs\") == \"No\"\nassert solution(\"abcdefghijklmnopqrs\") == \"No\"\nassert solution(\"abcdefghijklmnopqrs\") == \"No\"\nassert solution(\"abcdefghijklmnopqrs\") == \"No\"\nassert solution(\"abcdefghijklmnopqrs\") == \"No\"\nassert solution(\"abcdefghijklmnopqrs\") == \"No\"\nassert solution(\"abcdefghijklmnopqrs\") == \"No\"\nassert solution(\"abcdefghijklmnopqrs\") == \"No\"\nassert solution(\"abcdefghijklmnopqrs\") == \"No\"\nassert solution(\"abcdefghijklmnopqrs\") == \"No\"\nassert solution(\"abcdefghijklmnopqrs\") == \"No"
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"Yes\\na?\"\nassert solution(stdin) == \"Yes\\n?es?\"\nassert solution(stdin) == \"No\"\nassert solution(stdin) == \"Yes\\n.def\""
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3\\n\") == \"2\\n\"\nassert solution(\"1 1 1\\n\") == \"1\\n\"\nassert solution(\"1 1 2\\n\") == \"2\\n\"\nassert solution(\"1 1 3\\n\") == \"2\\n\"\nassert solution(\"1 2 1\\n\") == \"2\\n\"\nassert solution(\"1 2 2\\n\") == \"2\\n\"\nassert solution(\"1 2 3\\n\") == \"3\\n\"\n"
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2 3\") == \"2\\n\"\nassert solution(\"1\\n2 3\") == \"2\\n\"\nassert solution(\"2\\n1 2 3\") == \"2\\n\"\nassert solution(\"3\\n1 2 3\") == \"2\\n\"\nassert solution(\"1\\n2 3\") == \"2\\n\"\nassert solution(\"2\\n1 2 3\") == \"2\\n\"\nassert solution(\"3\\n1 2 3\") == \"2\\n\"\nassert solution(\"1\\n2 3\") == \"2\\n\"\nassert solution(\"2\\n1 2 3\") == \"2\\n\"\nassert solution(\"3\\n1 2 3\") == \"2\\n\"\nassert solution(\"1\\n2 3\") == \"2\\n\"\nassert solution(\"2\\n1 2 3\") == \"2\\n\"\nassert solution(\"3\\n1 2 3\") == \"2\\n\"\nassert solution(\"1\\n2 3\") == \"2\\n\"\nassert solution(\"2\\n1 2 3\") == \"2\\n\"\nassert solution(\"3\\n1 2 3\") == \"2\\n\"\nassert solution(\"1\\n2 3\") == \"2\\n\"\nassert solution(\"2\\n1 2 3\") == \"2\\n\"\nassert solution(\"3\\n1 2 3\") == \"2\\n\"\nassert solution(\"1\\n2 3\") == \"2\\n\"\nassert solution(\"2\\n1 2 3\") == \"2\\n\"\nassert solution(\"3\\n1 2 3\") == \"2\\n\"\nassert solution(\"1\\n2 3\") == \"2\\n\"\nassert solution(\"2\\n1 2 3\") == \"2\\n\"\nassert solution(\"3\\n1 2 3\") == \"2\\n\"\nassert solution(\"1\\n2 3\") == \"2\\n\"\nassert solution(\"2\\n1 2 3\") == \"2\\n\"\nassert solution(\"3\\n1 2 3\") == \"2\\n\"\nassert solution(\"1\\n2 3\") == \"2\\n\"\nassert solution(\"2\\n1 2 3\") == \"2\\n\"\nassert solution(\"3\\n1 2 3\") == \"2\\n\"\nassert solution(\"1\\n2 3\") == \"2\\n\"\nassert solution(\"2\\n1 2 3\") == \"2\\n\"\nassert solution(\"3\\n1 2 3\") == \"2\\n\"\nassert solution(\"1\\n2 3\") == \"2\\n\"\nassert solution(\"2\\n1 2 3\") == \"2\\n\"\nassert solution(\"3\\n1 2 3\") == \"2\\n\"\nassert solution(\"1\\n2 3\") == \"2\\n\"\nassert solution(\"2\\n1 2 3\") == \"2\\n\"\nassert solution(\"3\\n1 2 3\") == \"2\\n\"\nassert solution(\"1\\n2 3\") == \"2\\n\"\nassert solution(\"2\\n1 2 3\") == \"2\\n\"\nassert solution(\"3\\n1 2 3\") == \"2\\n\"\nassert solution(\"1\\n2 3\") == \"2\\n\"\nassert solution(\"2\\n1 2 3\") == \"2\\n\"\nassert solution(\"3\\n1 2 3\") == \"2\\n\"\nassert solution(\"1\\n2 3\") == \"2\\n\"\nassert solution(\"2\\n1 2 3\") == \"2\\n\"\nassert solution(\"3\\n1 2 3\") == \"2\\n\"\nassert solution(\"1\\n2 3\") == \"2\\n\"\nassert solution(\"2\\n1 2 3\") == \"2\\n\"\nassert solution(\"3\\n1 2 3\") == \"2\\n\"\nassert solution(\"1\\n2 3\") == \"2\\n\"\nassert solution(\"2\\n1 2 3\") == \"2\\n\"\nassert solution(\"3\\n1 2 3\") == \"2\\n\"\nassert solution(\"1\\n2 3\") == \"2\\n\"\n"
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 2 3\") == \"2\\n\"\n"
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 2 3\") == \"2\"\nassert solution(\"4\\n1 2 3 4\") == \"2\"\nassert solution(\"5\\n1 2 3 4 5\") == \"3\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"3\"\nassert solution(\"7\\n1 2 3 4 5 6 7\") == \"4\"\nassert solution(\"8\\n1 2 3 4 5 6 7 8\") == \"4\"\nassert solution(\"9\\n1 2 3 4 5 6 7 8 9\") == \"5\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"5\"\nassert solution(\"11\\n1 2 3 4 5 6 7 8 9 10 11\") == \"6\"\nassert solution(\"12\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"6\"\nassert solution(\"13\\n1 2 3 4 5 6 7 8 9 10 11 12 13\") == \"7\"\nassert solution(\"14\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14\") == \"7\"\nassert solution(\"15\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\") == \"8\"\nassert solution(\"16\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\") == \"8\"\nassert solution(\"17\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\") == \"9\"\nassert solution(\"18\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18\") == \"9\"\nassert solution(\"19\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\") == \"10\"\nassert solution(\"20\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\") == \"10\"\nassert solution(\"21\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21\") == \"11\"\nassert solution(\"22\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22\") == \"11\"\nassert solution(\"23\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23\") == \"12\"\nassert solution(\"24\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24\") == \"12\"\nassert solution(\"25\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 "
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '2'\n"
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 2 3\") == \"2\\n\", \"Expected output: 2\\nActual output: {}\".format(solution(\"3\\n1 2 3\"))\n\nprint(2)"
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"2\"\n"
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 2 3\") == \"2\\n\"\nassert solution(\"3\\n4 5 6\") == \"3\\n\"\nassert solution(\"3\\n7 8 9\") == \"4\\n\"\nassert solution(\"3\\n1 1 1\") == \"1\\n\"\nassert solution(\"3\\n2 3 2\") == \"2\\n\"\nassert solution(\"3\\n1 2 3\") == \"2\\n\"\nassert solution(\"3\\n1 1 1\") == \"1\\n\"\nassert solution(\"3\\n1 1 2\") == \"2\\n\"\nassert solution(\"3\\n1 2 1\") == \"2\\n\"\nassert solution(\"3\\n1 2 2\") == \"3\\n\"\nassert solution(\"3\\n1 2 3\") == \"3\\n\""
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"2\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input(\"Enter the length of the integer sequence: \")) == \"2\\n\"\n\nN = int(input())\nA = list(map(int, input().split()))"
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\\n\") == \"2\"\nassert solution(\"5\\n1 2\\n2 3\\n3 4\\n5 6\\n\") == \"1\"\nassert solution(\"4\\n1 2\\n2 3\\n3 4\\n5 6\\n\") == \"2\"\nassert solution(\"5\\n1 2\\n2 3\\n3 4\\n5 6\\n\") == \"1\"\n\nfrom functools import reduce"
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\"\nassert solution(\"1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\") == \"52\"\n\nfrom itertools import combinations"
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2\\n\"\n"
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\\n\") == \"2\\n\"\nassert solution(\"5\\n1 2\\n2 3\\n3 4\\n5 6\\n\") == \"0\\n\"\nassert solution(\"6\\n1 2\\n2 3\\n3 4\\n5 6\\n\") == \"2\\n\"\nassert solution(\"7\\n1 2\\n2 3\\n3 4\\n5 6\\n\") == \"1\\n\"\nassert solution(\"8\\n1 2\\n2 3\\n3 4\\n5 6\\n\") == \"3\\n\"\nassert solution(\"9\\n1 2\\n2 3\\n3 4\\n5 6\\n\") == \"4\\n\"\nassert solution(\"10\\n1 2\\n2 3\\n3 4\\n5 6\\n\") == \"5\\n\"\nassert solution(\"11\\n1 2\\n2 3\\n3 4\\n5 6\\n\") == \"7\\n\"\nassert solution(\"12\\n1 2\\n2 3\\n3 4\\n5 6\\n\") == \"9\\n\"\nassert solution(\"13\\n1 2\\n2 3\\n3 4\\n5 6\\n\") == \"12\\n\"\nassert solution(\"14\\n1 2\\n2 3\\n3 4\\n5 6\\n\") == \"14\\n\"\nassert solution(\"15\\n1 2\\n2 3\\n3 4\\n5 6\\n\") == \"15\\n\"\nassert solution(\"16\\n1 2\\n2 3\\n3 4\\n5 6\\n\") == \"16\\n\"\nassert solution(\"17\\n1 2\\n2 3\\n3 4\\n5 6\\n\") == \"19\\n\"\nassert solution(\"18\\n1 2\\n2 3\\n3 4\\n5 6\\n\") == \"21\\n\"\nassert solution(\"19\\n1 2\\n2 3\\n3 4\\n5 6\\n\") == \"23\\n\"\nassert solution(\"20\\n1 2\\n2 3\\n3 4\\n5 6\\n\") == \"24\\n\"\nassert solution(\"21\\n1 2\\n2 3\\n3 4\\n5 6\\n\") == \"26\\n\"\nassert solution(\"22\\n1 2\\n2 3\\n3 4\\n5 6\\n\") == \"29\\n\"\nassert solution(\"23\\n1 2\\n2 3\\n3 4\\n5 6\\n\") == \"32\\n\"\nassert solution(\"24\\n1 2\\n2 3\\n3 4\\n5 6\\n\") == \"33\\n\"\nassert solution(\"25\\n1 2\\n2 3\\n3 4\\n5 6\\n\") == \"35\\n\"\nassert solution(\"26\\n1 2\\n2 3\\n3 4\\n5 6\\n\") == \"37\\n\"\nassert solution(\"27\\n1 2\\n2 3\\n3 4\\n5 6\\n\") == \"40\\n\"\nassert solution(\"28\\n1 2\\n2 3\\n3 4\\n5 6\\n\") == \"42\\n\"\nassert solution(\"29\\n1 2\\n2 3\\n3 4\\n5 6\\n\") == \"45\\n\"\nassert solution(\"30\\n1 2\\n2 3\\n3 4\\n5 6\\n\") == \"49\\n\"\nassert solution(\"31\\n1 2\\n2 3\\n3 4\\n5 6\\n\") == \"50\\n\"\nassert solution(\"32\\n1 2\\n2 3\\n3 4\\n5 6\\n\") == \"52\\n\"\nassert solution"
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '2', \"Invalid input\"\nprint(5163305279724890)"
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\\n\") == \"2\""
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2\\n\", \"Incorrect output\"\n"
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\"\nassert solution(\"5\\n1 2\\n2 3\\n3 4\\n5 6\\n6 7\") == \"5\"\nassert solution(\"6\\n1 2\\n2 3\\n3 4\\n5 6\\n6 7\\n8 9\") == \"2\""
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('7 2 5') == '4\\n'\nassert solution('10 3 10') == '5\\n'"
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Test failed with input {input()}, expected output {output}.\""
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2 5\\n7 2 5\\n10 3 10\") == \"4\"\nassert solution(\"5 3 10\\n1 2 3\\n2 3 4\\n3 4 5\\n4 5 6\") == \"5\""
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 2 5\") == \"4\\n\"\nassert solution(\"10 3 10\") == \"5\\n\""
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 2 5\") == \"4\"\nassert solution(\"10 3 10\") == \"5\"\n"
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 2 5\") == \"4\"\nassert solution(\"10 3 10\") == \"5\""
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"The output '{solution(input())}' is not as expected. Expected output: '{expected_output}'.\""
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('7 2 5') == '4'\nassert solution('10 3 10') == '5'"
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 6\\n1 2\\n1 3\\n2 3\\n2 5\\n3 4\\n4 5\") == \"2\"\nassert solution(\"4 4\\n1 2\\n1 3\\n1 4\\n3 4\\n\") == \"1\""
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''5 6\n1 2\n1 3\n2 3\n2 5\n3 4\n4 5''') == '''2\n2 3 \n'''\n\nassert solution('''4 4\n1 2\n1 3\n1 4\n3 4\n''') == '''1\n1 \n'''"
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 6\\n1 2\\n1 3\\n2 3\\n2 5\\n3 4\\n4 5\") == \"2\\n2 3\\n\"\nassert solution(\"4 4\\n1 2\\n1 3\\n1 4\\n3 4\\n\") == \"1\\n1\""
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 6\\n1 2\\n1 3\\n2 3\\n2 5\\n3 4\\n4 5\\n\") == \"2\"\nassert solution(\"4 4\\n1 2\\n1 3\\n1 4\\n3 4\\n\") == \"1\""
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '2\\n2 3\\n'\nassert solution() == '1\\n1\\n'"
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 6\\n1 2\\n1 3\\n2 3\\n2 5\\n3 4\\n4 5\") == \"2\"\nassert solution(\"4 4\\n1 2\\n1 3\\n1 4\\n3 4\\n\") == \"1\"\nassert solution(\"5 1\\n1 2\\n1 3\\n2 3\\n2 5\\n3 4\\n4 5\") == \"2\"\nassert solution(\"5 1\\n1 2\\n1 3\\n2 3\\n2 5\\n3 4\\n4 5\") == \"1\"\nassert solution(\"4 4\\n1 2\\n1 3\\n1 4\\n3 4\\n\") == \"1\"\nassert solution(\"5 1\\n1 2\\n1 3\\n2 3\\n2 5\\n3 4\\n4 5\") == \"1\"\n"
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 6\\n1 2\\n1 3\\n2 3\\n2 5\\n3 4\\n4 5\") == 2\nassert solution(\"4 4\\n1 2\\n1 3\\n1 4\\n3 4\\n\") == 1"
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"2\\n2 3\\n\""
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 6\\n1 2\\n1 3\\n2 3\\n2 5\\n3 4\\n4 5\") == \"2\\n2 3 \"\nassert solution(\"4 4\\n1 2\\n1 3\\n1 4\\n3 4\\n\") == \"1\\n1 \"\n"
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 6\\n1 2\\n1 3\\n2 3\\n2 5\\n3 4\\n4 5\") == \"2\"\nassert solution(\"4 4\\n1 2\\n1 3\\n1 4\\n3 4\") == \"1\""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Yes\""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"No\", \"Expected 'No', but got '{}'.\".format(solution())"
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n100 150 250\") == \"No\" # No way to make all bids equal\n\nassert solution(\"4\\n75 150 75 50\") == \"Yes\" # First player can double his bid twice, second player can double his bid once, third player can double and triple his bid, fourth player can double and triple his bid\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Yes\" or solution(input()) == \"No\""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n75 150 75 50\") == \"Yes\"\nassert solution(\"3\\n100 150 250\") == \"No\""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n75 150 75 50\") == \"Yes\\n\"\nassert solution(\"3\\n100 150 250\") == \"No\\n\""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n75 150 75 50\") == \"Yes\\n\", \"Expected output: Yes\\nActual output: \" + solution(\"4\\n75 150 75 50\")"
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n75 150 75 50\") == \"Yes\"\nassert solution(\"3\\n100 150 250\") == \"No\""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n75 150 75 50\") == \"Yes\\n\"\nassert solution(\"3\\n100 150 250\") == \"No\\n\""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n75 150 75 50\\n3\\n100 150 250\") == \"Yes\"\nassert solution(\"3\\n100 150 250\") == \"No\""
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n50 50 50\\n\") == \"150\\n\"\nassert solution(\"2\\n-1 -100 -1\\n\") == \"100\\n\""
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"150\", \"Output should be 150\""
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n50 50 50\") == \"150\\n\"\n\nassert solution(\"2\\n-1 -100 -1\") == \"100\\n\""
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n2\n50 50 50\n''') == '150'\n\nassert solution('''\n2\n-1 -100 -1\n''') == '100'"
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n50\\n50\\n50\") == \"150\"\nassert solution(\"2\\n-1\\n-1\") == \"100\""
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n50 50 50\") == \"150\\n\"\nassert solution(\"2\\n-1 -100 -1\") == \"100\\n\""
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\n50 50 50\\n') == '150'\nassert solution('2\\n-1 -100 -1\\n') == '100'"
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n50 50 50\") == \"150\"\nassert solution(\"2\\n-1 -100 -1\") == \"100\"\n"
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n50 50 50\") == \"150\\n\"\nassert solution(\"2\\n-1 -100 -1\") == \"100\\n\""
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n50\\n50\\n50\") == \"150\\n\"\nassert solution(\"2\\n-1\\n-100\\n-1\") == \"100\\n\"\n\nsolution(\"2\\n50\\n50\\n50\")"
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input1) == '4', 'Expected \"4\", but got \"{}\"'.format(solution(input1))  # 4\nassert solution(input2) == '1', 'Expected \"1\", but got \"{}\"'.format(solution(input2))  # 1\nassert solution(input3) == '0', 'Expected \"0\", but got \"{}\"'.format(solution(input3))  # 0"
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 5\\nab a\\ncc c\\nca a\\nee c\\nff d\") == 4\nassert solution(\"2 8\\naf e\\ndc d\\ncc f\\nbc b\\nda b\\neb a\\nbb b\\nff c\") == 1\nassert solution(\"6 2\\nbb a\\nba a\\n\") == 0"
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5\\nab a\\ncc c\\nca a\\nee c\\nff d\\n\") == \"4\"\nassert solution(\"2 8\\naf e\\ndc d\\ncc f\\nbc b\\nda b\\neb a\\nbb b\\nff c\\n\") == \"1\"\nassert solution(\"6 2\\nbb a\\nba a\\n\") == \"0\""
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5\\nab a\\ncc c\\nca a\\nee c\\nff d\") == \"4\\n\"\nassert solution(\"2 8\\naf e\\ndc d\\ncc f\\nbc b\\nda b\\neb a\\nbb b\\nff c\") == \"1\\n\"\nassert solution(\"6 2\\nbb a\\nba a\") == \"0\\n\""
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 5\\na b\\nc c\\na c\\nee c\\nff d\\n') == '4\\n'\nassert solution('2 8\\na f e\\ndc d\\ncc f\\nbc b\\nda b\\neb a\\nbb b\\nff c\\n') == '1\\n'\nassert solution('6 2\\nbb a\\nba a\\n') == '0\\n'"
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 5\\na b\\nc c\\na c\\nee c\\nff d\\n\") == \"4\"\nassert solution(\"2 8\\na f\\ndc d\\ncc f\\nbc b\\nda b\\neb a\\nbb b\\nff c\\n\") == \"1\"\nassert solution(\"6 2\\nbb a\\nba a\\n\") == \"0\""
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 5\\nab a\\ncc c\\nca a\\nee c\\nff d\\n\") == 4\nassert solution(\"2 8\\naf e\\ndc d\\ncc f\\nbc b\\nda b\\neb a\\nbb b\\nff c\\n\") == 1\nassert solution(\"6 2\\nbb a\\nba a\\n\") == 0\n"
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 5\\na ab\\ncc c\\nca a\\nee c\\nff d\\n\") == \"4\"\nassert solution(\"2 8\\na ef\\ndc dd\\ncc ff\\nbc bb\\nda bb\\neb a\\nff c\\n\") == \"1\"\nassert solution(\"6 2\\nbba\\nba a\\n\") == \"0\""
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 5\\nab a\\ncc c\\nca a\\nee c\\nff d') == '4\\n'\nassert solution('2 8\\naf e\\ndc d\\ncc f\\nbc b\\nda b\\neb a\\nbb b\\nff c') == '1\\n'\nassert solution('6 2\\nbb a\\nba a\\n') == '0\\n'"
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n3 5\nab a\ncc c\nca a\nee c\nff d\n''') == '4\\n'\n\nassert solution('''\n2 8\naf e\ndc d\ncc f\nbc b\nda b\neb a\nbb b\nff c\n''') == '1\\n'\n\nassert solution('''\n6 2\nbb a\nba a\n''') == '0\\n'"
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == '1'\nassert solution(2) == '3'\nassert solution(3) == '10'"
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == '1'\nassert solution(2) == '3'\nassert solution(3) == '10'\n\nimport math"
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == 1\nassert solution(2) == 3\nassert solution(3) == 10"
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '1\\n1\\n1\\n2\\n3\\n10'"
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == \"1\"\nassert solution(2) == \"3\"\nassert solution(3) == \"10\"\n\nfrom functools import reduce"
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == 1\nassert solution(2) == 3\nassert solution(3) == 10"
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '1\\n', \"Wrong output\"\nassert solution(stdin) == '3\\n', \"Wrong output\"\nassert solution(stdin) == '10\\n', \"Wrong output\""
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == 1\nassert solution(2) == 3\nassert solution(3) == 10\n\nfrom bisect import bisect_left"
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 10\nprint(10 % (10**9 + 7))  # modulo 10^9 + 7"
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == 1\nassert solution(2) == 3\nassert solution(3) == 10\n"
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1\\n1 3\\n4 1\\n\") == \"1.000000000000\\n\"\nassert solution(\"1 3\\n4 1\\n\") == \"-1\\n\"\nassert solution(\"4 1\\n\") == \"1.250000000000\\n\""
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\\n1 3\\n4 1\\n\") == \"1.000000000000\\n\"\nassert solution(\"1 3\\n4 1\\n\") == \"-1\\n\"\nassert solution(\"4 1\\n\") == \"1.250000000000\\n\""
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\\n1 3\\n4 1\") == \"1.000000000000\"\nassert solution(\"1 3\\n4 1\") == \"-1\"\nassert solution(\"4 1\\n\") == \"1.250000000000\""
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1\") == \"1.000000000000\\n\"\nassert solution(\"1 3\") == \"-1\\n\"\nassert solution(\"4 1\") == \"1.250000000000\\n\""
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1\") == \"1.000000000000\"\nassert solution(\"1 3\") == \"-1\"\nassert solution(\"4 1\") == \"1.250000000000\""
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"1.000000000000\\n\"\nassert solution(stdin) == \"1.250000000000\\n\"\nassert solution(stdin) == \"1.000000000000\\n\"\nassert solution(stdin) == \"-1\\n\"\nassert solution(stdin) == \"-1\\n\"\nassert solution(stdin) == \"-1\\n\"\n"
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1\") == 1.000000000000\nassert solution(\"1 3\") == -1\nassert solution(\"4 1\") == 1.250000000000\n\nprint(\"All tests passed.\")"
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1\") == \"1.000000000000\"\nassert solution(\"1 3\") == \"-1\"\nassert solution(\"4 1\") == \"1.250000000000\""
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1\") == \"1.000000000000\"\nassert solution(\"1 3\") == \"-1\"\nassert solution(\"4 1\") == \"1.250000000000\""
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1\") == \"1.000000000000\"\nassert solution(\"1 3\") == \"-1\"\nassert solution(\"4 1\") == \"1.250000000000\""
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n12\\n11 8\\n7 5\") == \"10.0000000000\"\nassert solution(\"3\\n1\\n1 4 1\\n2 5 3\") == \"-1\"\nassert solution(\"6\\n2\\n4 6 3 3 5 6\\n2 6 3 6 5 3\") == \"85.4800000000\""
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''2\n12\n11 8\n7 5''') == 10.0\nassert solution('''3\n1\n1 4 1\n2 5 3''') == -1\nassert solution('''6\n2\n4 6 3 3 5 6\n2 6 3 6 5 3''') == 85.48\n\nfrom typing import List"
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\n12\\n11 8\\n7 5') == '10.0000000000\\n'\nassert solution('3\\n1\\n1 4 1\\n2 5 3') == '-1\\n'\nassert solution('6\\n2\\n4 6 3 3 5 6\\n2 6 3 6 5 3') == '85.4800000000\\n'"
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"Your solution will be displayed here\""
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2') == '10.0000000000'\nassert solution('3') == '-1'\nassert solution('6') == '85.4800000000'"
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Solution ({input()}) doesn't match the expected output ({expected_output})\""
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"12\") == \"10.0000000000\"\nassert solution(\"3\") == \"-1\"\nassert solution(\"6\") == \"85.4800000000\"\n"
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n12\\n11 8\\n7 5\\n\") == \"10.0000000000\"\nassert solution(\"3\\n1\\n1 4 1\\n2 5 3\\n\") == \"-1\"\nassert solution(\"6\\n2\\n4 6 3 3 5 6\\n2 6 3 6 5 3\\n\") == \"85.4800000000\""
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n12\\n11 8\\n7 5\") == \"10.0000000000\"\nassert solution(\"3\\n1\\n1 4 1\\n2 5 3\") == \"-1\"\nassert solution(\"6\\n2\\n4 6 3 3 5 6\\n2 6 3 6 5 3\") == \"85.4800000000\""
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n\") == \"0\\n\"\nassert solution(\"2\\n\") == \"0\\n\"\nassert solution(\"10\\n\") == \"4\\n\""
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"0\""
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '0'\nassert solution(input()) == '4'"
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(10) == '4'"
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"0\"\nassert solution(\"10\") == \"4\""
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"0\", \"The minimum cost of tickets needed to visit all schools is 0.\""
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"0\\n\""
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"0\"\nassert solution(5) == \"4\"\n"
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(solution(solution(input()))) == 0"
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == \"0\"\nassert solution(2) == \"0\"\nassert solution(3) == \"0\"\nassert solution(4) == \"0\"\nassert solution(5) == \"0\""
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == 'Areyoubusy\\n'\nassert solution(open('input2.txt', 'r')) == 'abdef\\n'"
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 1') == 'Wh.'\nassert solution('1 2') == 'Wh.'\nassert solution('1 111111111111') == 'Wh.'"
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1\\n1 2\\n1 111111111111\\n\") == \"Wh.\"\nassert solution(\"0 69\\n1 194\\n1 139\\n0 47\\n1 66\\n\") == \"abdef\"\nassert solution(\"4 1825\\n3 75\\n3 530\\n4 1829\\n4 1651\\n3 187\\n4 584\\n4 255\\n4 774\\n2 474\\n\") == \"Areyoubusy\""
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('0 69\\n1 194\\n1 139\\n0 47\\n1 66') == 'abdef'\nassert solution('4 1825\\n3 75\\n3 530\\n4 1829\\n4 1651\\n3 187\\n4 584\\n4 255\\n4 774\\n2 474') == 'Areyoubusy'"
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1\\n1 2\\n1 111111111111\\n\") == \"Wh.\\n\"\nassert solution(\"0 69\\n1 194\\n1 139\\n0 47\\n1 66\\n\") == \"abdef\\n\"\nassert solution(\"4 1825\\n3 75\\n3 530\\n4 1829\\n4 1651\\n3 187\\n4 584\\n4 255\\n4 774\\n2 474\\n\") == \"Areyoubusy\\n\""
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\\n1 2\\n1 111111111111\") == \"Wh.\"\nassert solution(\"0 69\\n1 194\\n1 139\\n0 47\\n1 66\") == \"abdef\"\nassert solution(\"4 1825\\n3 75\\n3 530\\n4 1829\\n4 1651\\n3 187\\n4 584\\n4 255\\n4 774\\n2 474\") == \"Areyoubusy\""
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"Wh.\", \"Incorrect output\"\nassert solution(input()) == \"Areyoubusy\", \"Incorrect output\"\nprint(\"Correct output\")"
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"What are you doing at the end of the world? Are you busy? Will you save us?\") == \"Wh.\\n\"\nassert solution(\"What are you doing while sending What are you doing at the end of the world? Are you busy? Will you save us?\") == \"abdef\\n\"\nassert solution(\"What are you doing while sending What are you doing at the end of the world? Are you busy? Will you save us?\") == \"abdef\\n\"\n\nassert solution(\"0 69\\n1 194\\n1 139\\n0 47\\n1 66\") == \"abdef\\n\"\nassert solution(\"4 1825\\n3 75\\n3 530\\n4 1829\\n4 1651\\n3 187\\n4 584\\n4 255\\n4 774\\n2 474\") == \"Areyoubusy\\n\""
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\") == \".\"\nassert solution(\"1 1\") == \".\"\nassert solution(\"1 2\") == \"W\"\nassert solution(\"1 111111111111\") == \"W\""
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"What are you doing at the end of the world? Are you busy? Will you save us?\") == \"Wh.\\n\"\nassert solution(\"What are you doing while sending \\\"What are you doing at the end of the world? Are you busy? Will you save us?\\\"? Are you busy? Will you send \\\"What are you doing at the end of the world? Are you busy? Will you save us?\\\"?\") == \"Wh.\\n\"\nassert solution(\"abdef\") == \"abdef\\n\"\nassert solution(\"0 69\\n1 194\\n1 139\\n0 47\\n1 66\") == \"abdef\\n\"\nassert solution(\"4 1825\\n3 75\\n3 530\\n4 1829\\n4 1651\\n3 187\\n4 584\\n4 255\\n4 774\\n2 474\") == \"Areyoubusy\\n\"\nassert solution(\"4 300\\n4 121\\n4 88\\n4 107\\n3 111\\n2 156\") == \".\\n\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"? +? -? +? +? = 42\") == \"Possible\\n9 + 13 - 39 + 28 + 31 = 42\"\nassert solution(\"? -? = 1\") == \"Impossible\"\nassert solution(\"? = 1000000\") == \"Possible\\n1000000 = 1000000\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"? +? -? +? +? = 42\") == \"Possible\", \"Incorrect output: 'Possible' expected, got '{}' instead.\".format(solution(\"? +? -? +? +? = 42\"))\nassert solution(\"? -? = 1\") == \"Impossible\", \"Incorrect output: 'Impossible' expected, got '{}' instead.\".format(solution(\"? -? = 1\"))\nassert solution(\"? = 1000000\") == \"Possible\", \"Incorrect output: 'Possible' expected, got '{}' instead.\".format(solution(\"? = 1000000\"))"
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"? +? -? +? +? = 42\") == \"Possible\\n9 + 13 - 39 + 28 + 31 = 42\"\nassert solution(\"? -? = 1\") == \"Impossible\"\nassert solution(\"? = 1000000\") == \"Possible\\n1000000 = 1000000\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"? +? -? +? +? = 42\") == \"Possible\\n9 + 13 - 39 + 28 + 31 = 42\"\nassert solution(\"? -? = 1\") == \"Impossible\"\nassert solution(\"? = 1000000\") == \"Possible\\n1000000 = 1000000\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Input: {input()}, Expected Output: {expected_output}, Actual Output: {solution(input())}\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"? +? -? +? +? = 42\") == \"Possible\\n9 + 13 - 39 + 28 + 31 = 42\"\nassert solution(\"? -? = 1\") == \"Impossible\"\nassert solution(\"? = 1000000\") == \"Possible\\n1000000 = 1000000\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"? +? -? +? +? = 42\") == \"Possible\"\nassert solution(\"? -? = 1\") == \"Impossible\"\nassert solution(\"? = 1000000\") == \"Possible\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('? +? -? +? +? = 42') == 'Possible\\n9 + 13 - 39 + 28 + 31 = 42\\n'\n\nassert solution('? -? = 1') == 'Impossible\\n'\n\nassert solution('? = 1000000') == 'Possible\\n1000000 = 1000000\\n'"
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"? +? -? +? +? = 42\") == \"Possible\"\nassert solution(\"? -? = 1\") == \"Impossible\"\nassert solution(\"? = 1000000\") == \"Possible\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('? +? -? +? +? = 42') == 'Possible', \"Expected Possible, got {}\".format(solution('? +? -? +? +? = 42'))\nassert solution('? -? = 1') == 'Impossible', \"Expected Impossible, got {}\".format(solution('? -? = 1'))\nassert solution('? = 1000000') == 'Possible', \"Expected Possible, got {}\".format(solution('? = 1000000'))"
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2 0 2\\n0\\n0\\n0\\n\\n1\\n0\") == \"7 4 5\\n\""
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n1 2 0 2\\n0\\n0\\n0\\n\\n7\\n4 5\\n\\n1 2 0 2\\n0 1 2 0\\n0 2 0 1\\n0 1 2 0\\n') == '7 4 5\\n', \"Test case 1 failed\"\nassert solution('5\\n1 2 0 2\\n0\\n0\\n0\\n\\n7\\n4 5\\n\\n1 2 0 2\\n0 1 2 0\\n0 2 0 1\\n0 1 2 0\\n') == '7 4 5\\n', \"Test case 2 failed\"\nassert solution('6\\n1 2 0 2\\n0\\n0\\n0\\n\\n7\\n4 5\\n\\n1 2 0 2\\n0 1 2 0\\n0 2 0 1\\n0 1 2 0\\n') == '7 4 5\\n', \"Test case 3 failed\"\nassert solution('7\\n1 2 0 2\\n0\\n0\\n0\\n\\n7\\n4 5\\n\\n1 2 0 2\\n0 1 2 0\\n0 2 0 1\\n0 1 2 0\\n') == '7 4 5\\n', \"Test case 4 failed\"\nassert solution('8\\n1 2 0 2\\n0\\n0\\n0\\n\\n7\\n4 5\\n\\n1 2 0 2\\n0 1 2 0\\n0 2 0 1\\n0 1 2 0\\n') == '7 4 5\\n', \"Test case 5 failed\"\nassert solution('9\\n1 2 0 2\\n0\\n0\\n0\\n\\n7\\n4 5\\n\\n1 2 0 2\\n0 1 2 0\\n0 2 0 1\\n0 1 2 0\\n') == '7 4 5\\n', \"Test case 6 failed\"\nassert solution('10\\n1 2 0 2\\n0\\n0\\n0\\n\\n7\\n4 5\\n\\n1 2 0 2\\n0 1 2 0\\n0 2 0 1\\n0 1 2 0\\n') == '7 4 5\\n', \"Test case 7 failed\"\nassert solution('11\\n1 2 0 2\\n0\\n0\\n0\\n\\n7\\n4 5\\n\\n1 2 0 2\\n0 1 2 0\\n0 2 0 1\\n0 1 2 0\\n') == '7 4 5\\n', \"Test case 8 failed\"\nassert solution('12\\n1 2 0 2\\n0\\n0\\n0\\n\\n7\\n4 5\\n\\n1 2 0 2\\n0 1 2 0\\n0 2 0 1\\n0 1 2 0\\n') == '7 4 5\\n', \"Test case 9 failed\"\nassert solution('13\\n1 2 0 2\\n0\\n0\\n0\\n\\n7\\n4 5\\n\\n1 2 0 2\\n0 1 2 0\\n0 2 0 1\\n0 1 2 0\\n') == '7 4 5\\n', \"Test case 10 failed\"\nassert solution('14\\n1 2 0 2\\n0\\n0\\n0\\n\\n7\\n4 5\\n\\n1 2 0 2\\n0 1 2 0\\n0 2 0 1\\n0 1 2 0\\n') == '7 4 5\\n', \"Test case 11 failed\"\nassert solution('15\\n1 2 0 2\\n0\\"
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\na1 2 0 2\\n0\\n0\\n0\\n\") == \"7 4 5\"\nassert solution(\"1 2 0 2\\n0\\n0\\n0\\n\") == \"0 0 0 0\"\nassert solution(\"0 0\\n0\\n0\\n0\\n\") == \"0 0 0 0\"\nassert solution(\"1 2 0 1\\n0\\n0\\n0\\n\") == \"0 1 0 1\""
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n1 2 0 2\\n0\\n0\\n0\\n\\n4\\n1 2 0 2\\n0\\n0\\n0\\n') == '7 4 5', \"Test case 1 failed\"\n\nassert solution('5\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0') == '0 0 0 0 0', \"Test case 2 failed\"\n\nassert solution('5\\n1 0 0 0 0\\n0 1 0 0 0\\n0 0 1 0 0\\n0 0 0 1 0\\n0 0 0 0 1') == '0 0 0 0 0', \"Test case 3 failed\"\n\nassert solution('10\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0') == '0 0 0 0 0 0 0 0 0 0', \"Test case 4 failed\""
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\na1201\\na1020\\na1002\\na1220\\na1210\\na1111\\n\") == \"7 4 5\", \"Test failed\"\nassert solution(\"1\\na0\\na1\\na2\\na3\\na4\\na5\\na6\\n\") == \"0 1 2 3 4 5 6\", \"Test failed\"\nassert solution(\"1\\na0\\na1\\na2\\na3\\na4\\na5\\na6\\n\") == \"0 1 2 3 4 5 6\", \"Test failed\""
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Expected output: {output}, Received: {solution(input())}\""
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 2 0 2\\n0\\n0\\n0\\n\\n\") == \"7 4 5\"\n"
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\na122a22a22a22\\na22\\na11a22\\n\") == \"7 4 5\""
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\na1 2 0 2\\na0\\na0\\na0\\na0\\n\") == \"7 4 5\"\n"
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\na12a12\\na12a12\\na12\\n\") == \"7 4 5\"\n"
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"aabddc\") == \"Yes\"\nassert solution(\"3abc\") == \"No\"\nassert solution(\"3jjj\") == \"Yes\""
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Yes\""
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"aabddc\") == \"Yes\"\nassert solution(\"3abc\") == \"No\"\nassert solution(\"3jjj\") == \"Yes\""
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\naabddc\") == \"Yes\"\nassert solution(\"3\\nabc\") == \"No\"\nassert solution(\"3\\njjj\") == \"Yes\""
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('aabddc') == 'Yes'\nassert solution('3abc') == 'No'\nassert solution('3jjj') == 'Yes'"
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\naabddc\") == \"Yes\"\nassert solution(\"3\\nabc\") == \"No\"\nassert solution(\"3\\njjj\") == \"Yes\""
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\naabddc\") == \"Yes\"\nassert solution(\"3\\nabc\") == \"No\"\nassert solution(\"3\\njjj\") == \"Yes\""
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aabddc\") == \"Yes\"\nassert solution(\"3abc\") == \"No\"\nassert solution(\"3jjj\") == \"Yes\""
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('aabddc') == 'Yes'\nassert solution('3abc') == 'No'\nassert solution('3jjj') == 'Yes'"
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 'Yes'\nassert solution(4) == 'No'\nassert solution(5) == 'Yes'"
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 2') == '54'\nassert solution('7 4') == '1728'"
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 2\") == \"54\"\nassert solution(\"7 4\") == \"1728\""
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 2\") == \"54\"\nassert solution(\"7 4\") == \"1728\""
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"5 2\\n\"\n) == \"54\"\n\nassert solution(\n    \"7 4\\n\"\n) == \"1728\""
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 54\nassert solution(7) == 1728\nassert solution(10) == 17577\nassert solution(15) == 3002214\nassert solution(20) == 3002214\nassert solution(25) == 3002214\n\nfrom functools import lru_cache\n\n@lru_cache(maxsize=None)\n"
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2\") == \"54\"\nassert solution(\"7 4\") == \"1728\""
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 2\") == \"54\"\nassert solution(\"7 4\") == \"1728\""
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2\") == \"54\"\nassert solution(\"7 4\") == \"1728\""
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 2\") == \"54\"\nassert solution(\"7 4\") == \"1728\""
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2\") == \"54\"\nassert solution(\"7 4\") == \"1728\""
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), \"Expected: {}\\nActual: {}\".format(output(), solution(input()))"
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW\\n') == '2 4\\n'\n\nassert solution('3 3\\nWWW\\nBWW\\nWWW\\n') == '2 1\\n'"
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW\") == \"2 4\"\nassert solution(\"3 3\\nWWW\\nBWW\\nWWW\") == \"2 1\""
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW\\n\") == \"2 4\\n\"\nassert solution(\"3 3\\nWWW\\nBWW\\nWWW\\n\") == \"2 1\\n\""
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW\\n') == '2 4\\n'\nassert solution('3 3\\nWWW\\nBWW\\nWWW\\n') == '2 1\\n'"
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW\") == \"2 4\"\nassert solution(\"3 3\\nWWW\\nBWW\\nWWW\") == \"2 1\""
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW\") == \"2 4\\n\"\nassert solution(\"3 3\\nWWW\\nBWW\\nWWW\") == \"2 1\\n\""
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW\") == \"2 4\"\nassert solution(\"3 3\\nWWW\\nBWW\\nWWW\") == \"2 1\""
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW\") == \"2 4\\n\", \"Test 1 failed\"\nassert solution(\"3 3\\nWWW\\nBWW\\nWWW\") == \"2 1\\n\", \"Test 2 failed\""
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW\") == \"2 4\\n\"\nassert solution(\"3 3\\nWWW\\nBWW\\nWWW\") == \"2 1\\n\""
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 7\\n2 4\\n5 1\\n2 3\\n3 4\\n4 1\\n5 3\\n3 5\\n\") == \"10 9 10 10 9\\n\"\nassert solution(\"2 3\\n1 2\\n1 2\\n1 2\\n\") == \"5 6\\n\"\nassert solution(\"5 7\\n2 4\\n5 1\\n2 3\\n3 4\\n4 1\\n5 3\\n3 5\\n\") == \"10 9 10 10 9\\n\""
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Actual output: {solution(input())}\""
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 7\\n2 4\\n5 1\\n2 3\\n3 4\\n4 1\\n5 3\\n3 5\") == \"10 9 10 10 9 \\n5 6\""
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n5 7\n2 4\n5 1\n2 3\n3 4\n4 1\n5 3\n3 5\n\"\"\") == \"10 9 10 10 9\"\nassert solution(\"\"\"\n2 3\n1 2\n1 2\n1 2\n\"\"\") == \"5 6\"\n"
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 7\\n2 4\\n5 1\\n2 3\\n3 4\\n4 1\\n5 3\\n3 5\\n\") == \"10 9 10 10 9\"\nassert solution(\"2 3\\n1 2\\n1 2\\n1 2\\n\") == \"5 6\""
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=input()) == output, f\"Solution '{solution(stdin=input())}' is incorrect. Output: {output}\""
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '10 9 10 10 9\\n5 6'"
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"\"\"\n"
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 2"
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n1 1 -3\") == \"2\\n\"\nassert solution(\"1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\") == \"2\\n\""
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n1 1 -3\") == 2\nassert solution(\"1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\") == 2\nassert solution(\"1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\") == 2"
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n\") == \"2\\n\"\nassert solution(\"1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\\n\") == \"2\\n\"\nassert solution(\"2 2\\n-1 0\\n1 1\\n0 1\\n\") == \"1\\n\""
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n1 1 -3\\n\") == \"2\""
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\n"
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n1 1 -3\") == \"2\"\nassert solution(\"1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\") == \"2\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n\") == \"2\\n\"\nassert solution(\"1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\\n\") == \"2\\n\"\n"
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n\") == \"2\\n\"\nassert solution(\"1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\\n\") == \"2\\n\""
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n\") == \"2\\n\"\nassert solution(\"1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\\n\") == \"2\\n\"\nassert solution(\"1 1\\n-1 -1\\n4\\n2 0 0\\n0 1 0\\n3 0 -2\\n4 -1 2\\n\") == \"2\\n\"\nassert solution(\"1 1\\n-1 -1\\n5\\n3 0 0\\n0 1 0\\n4 0 -2\\n5 -1 2\\n\") == \"2\\n\"\n"
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input) == expected, f\"Test failed for input: {input}\"\n"
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1\\n3 4\") == \"Kevin\\n\"\nassert solution(\"1 2\\n3\") == \"Nicky\\n\""
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Kevin\"\nassert solution(input()) == \"Nicky\""
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\").read()) == \"Kevin\""
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 1\\n3 4') == 'Kevin'\nassert solution('1 2\\n3') == 'Nicky'\n\nassert solution('2 3\\n4 5\\n6 7\\n8 9') == 'Kevin'\nassert solution('2 3\\n4 5\\n6 7\\n8 9\\n10 11\\n12 13\\n14 15\\n16 17\\n18 19') == 'Nicky'\n\nassert solution('1 2\\n3\\n4\\n5') == 'Kevin'\nassert solution('1 2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99') == 'Nicky'\n\nassert solution('1 2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99') == 'Nicky'"
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1\\n3 4\") == \"Kevin\"\nassert solution(\"1 2\\n3\") == \"Nicky\"\nassert solution(\"1 3\\n2 4\") == \"Nicky\""
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1\\n3 4\") == \"Kevin\"\nassert solution(\"1 2\\n3\") == \"Nicky\""
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 1\\n3 4\\n') == 'Kevin'\nassert solution('1 2\\n3\\n') == 'Nicky'"
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Kevin\", \"Expected 'Kevin', got {}\".format(solution(input()))"
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1\\n3 4\") == \"Kevin\"\nassert solution(\"1 2\\n3\") == \"Nicky\""
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 2 3\") == \"3\"\nassert solution(\"3\\n2 2 2\") == \"1\"\nassert solution(\"2\\n2 1\") == \"-1\""
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"3\\n1 2 3\\n1 2 3\\n1 2 3\"\nassert solution() == \"3\\n1 2 3\\n1 2 3\\n1 2 3\"\nassert solution() == \"3\\n1 2 3\\n1 2 3\\n1 2 3\"\nassert solution() == \"1\\n1 1 1\\n2\\n\"\nassert solution() == \"-1\\ndef solution(stdin: str) -> str:\\n    pass\"\n\nimport unittest\n\nclass SolutionTest(unittest.TestCase):\n    def test_solution(self):\n        self.assertEqual(solution(), \"3\\n1 2 3\\n1 2 3\\n1 2 3\")\n        self.assertEqual(solution(), \"3\\n1 2 3\\n1 2 3\\n1 2 3\")\n        self.assertEqual(solution(), \"3\\n1 2 3\\n1 2 3\\n1 2 3\")\n        self.assertEqual(solution(), \"1\\n1 1 1\\n2\\n\")\n        self.assertEqual(solution(), \"-1\\ndef solution(stdin: str) -> str:\\n    pass\")\n\nunittest.main(argv=['first-arg-is-ignored'], exit=False)"
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Input\\n3\\n1 2 3\\n\\nInput\\n3\\n2 2 2\\n\\nInput\\n2\\n2 1\\n\\nOutput\\n3\\n1 2 3\\n1 2 3\\n1 2 3\\n\\nOutput\\n1\\n1 1 1\\n2\\n2\\n2\\n\\nOutput\\n-1\\ndef solution(stdin: str) -> str: \\n    pass\") == \"Output\\n3\\n1 2 3\\n1 2 3\\n1 2 3\\n\\nOutput\\n1\\n1 1 1\\n2\\n2\\n2\\n\\nOutput\\n-1\\ndef solution(stdin: str) -> str: \\n    pass\""
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output\n"
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Input\\n3\\n1 2 3\\n\\nOutput\\n3\\n1 2 3\\n1 2 3\\n\\nInput\\n3\\n2 2 2\\n\\nOutput\\n1\\n1 1 1\\n2\\n\\nInput\\n2\\n2 1\\n\\nOutput\\n-1\\ndef solution(stdin: str) -> str: \\n    pass\\n\\n\") == \"3\\n1 2 3\\n1 2 3\\n\\n3\\n1 2 3\\n1 2 3\\n\\n1\\n1 1 1\\n2\\n-1\\ndef solution(stdin: str) -> str: \\n    pass\\n\"\n"
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 3, \"Expected 3, got {}\".format(solution())\n\nassert solution() == 1, \"Expected 1, got {}\".format(solution())\n\nassert solution() == 1, \"Expected 1, got {}\".format(solution())\n\nassert solution() == -1, \"Expected -1, got {}\".format(solution())"
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2 3\\n1 2 3\\n3\\n2 2 2\\n2\\n2 1\\n2\\n\") == \"3\\n1 2 3\\n1 2 3\\n3\\n1 1 1 1\\n1 1 1 1\\n\"\nassert solution(\"3\\n2 2 2\\n2\\n2 1\\n2\\n\") == \"1\\n1 1 1 1\\n2\\n\"\nassert solution(\"2\\n2 1\\n2\\n\") == \"-1\\ndef solution(stdin: str) -> str: pass\""
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 2 3\") == 3\nassert solution(\"3\\n2 2 2\") == 1\nassert solution(\"2\\n2 1\") == -1\n\nfrom typing import List"
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == [3]\nassert solution(2) == [1, 1]\nassert solution(2) == [1, 1]\nassert solution(2) == [-1]"
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n3\n1 2 3\n2 2 2\n2 1\n''') == '''\n3\n1 2 3\n1 2 3\n2\n'''\n\nassert solution('''\n3\n2 2 2\n1 1 1\n''') == '''\n1\n1 1 1\n2\n'''\n\nassert solution('''\n2\n2 1\n''') == '''\n-1\n"
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"11\") == \"6\", \"11 is not equal to '6'\"\nassert solution(\"01\") == \"2\", \"01 is not equal to '2'\"\nassert solution(\"1\") == \"1\", \"1 is not equal to '1'\""
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(11) == 6\nassert solution(01) == 2\nassert solution(1) == 1"
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('11') == '6'\nassert solution('01') == '2'\nassert solution('1') == '1'"
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('11') == '6'\nassert solution('01') == '2'\nassert solution('1') == '1'"
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('11') == '6'\nassert solution('01') == '2'\nassert solution('1') == '1'"
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"11\") == \"6\"\nassert solution(\"01\") == \"2\"\nassert solution(\"1\") == \"1\""
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"11\") == \"6\"\nassert solution(\"01\") == \"2\"\nassert solution(\"1\") == \"1\""
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"11\") == \"6\"\nassert solution(\"01\") == \"2\"\nassert solution(\"1\") == \"1\""
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"11\") == \"6\"\nassert solution(\"01\") == \"2\"\nassert solution(\"1\") == \"1\""
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 3"
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1\\n15') == '1\\n'\nassert solution('3\\n1 1 2') == '3\\n'\nassert solution('2\\n5 7') == '4\\n'"
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1\\n15\\n') == '1\\n'\nassert solution('3\\n1 1 2\\n') == '3\\n'\nassert solution('2\\n5 7\\n') == '4\\n'"
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 'Solution'"
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n15\\n\") == \"1\\n\"\nassert solution(\"3\\n1 1 2\\n\") == \"3\\n\"\nassert solution(\"2\\n5 7\\n\") == \"4\\n\""
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"The output is wrong.\""
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1\\n15\\n') == '1\\n'\nassert solution('3\\n1 1 2\\n') == '3\\n'\nassert solution('2\\n5 7\\n') == '4\\n'"
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n15\\n\") == \"1\\n\"\nassert solution(\"3\\n1 1 2\\n\") == \"3\\n\"\nassert solution(\"2\\n5 7\\n\") == \"4\\n\""
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"3\"\nassert solution(1) == \"1\"\nassert solution(15) == \"1\"\nassert solution(2) == \"4\"\nassert solution(5) == \"3\"\nassert solution(7) == \"2\"\n\nfrom functools import reduce\n"
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n1 0 2\\n2 0 1') == 'YES'\nassert solution('2\\n1 0\\n0 1') == 'YES'\nassert solution('4\\n1 2 3 0\\n0 3 2 1') == 'NO'"
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 0 2\\n2 0 1\\n\") == \"YES\\n\"\nassert solution(\"2\\n1 0\\n0 1\\n\") == \"YES\\n\"\nassert solution(\"4\\n1 2 3 0\\n0 3 2 1\\n\") == \"NO\\n\"\n"
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"3\n1 0 2\n2 0 1\n\"\"\") == \"YES\"\nassert solution(\"\"\"2\n1 0\n0 1\n\"\"\") == \"YES\"\nassert solution(\"\"\"4\n1 2 3 0\n0 3 2 1\n\"\"\") == \"NO\""
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 0 2\\n2 0 1\\n\") == \"YES\"\nassert solution(\"2\\n1 0\\n0 1\\n\") == \"YES\"\nassert solution(\"4\\n1 2 3 0\\n0 3 2 1\\n\") == \"NO\""
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 0 2\\n2 0 1\\n\") == \"YES\"\nassert solution(\"2\\n1 0\\n0 1\\n\") == \"YES\"\nassert solution(\"4\\n1 2 3 0\\n0 3 2 1\\n\") == \"NO\"\n"
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"YES\"\nassert solution(2) == \"YES\"\nassert solution(4) == \"NO\""
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 0 2\\n2 0 1\\n\\n2\\n1 0\\n0 1\\n\\n4\\n1 2 3 0\\n0 3 2 1\\n\") == \"YES\\nYES\\nNO\\n\"\nassert solution(\"2\\n1 0\\n0 1\\n\\n4\\n1 2 3 0\\n0 3 2 1\\n\") == \"YES\\nNO\\n\"\nassert solution(\"4\\n1 2 3 0\\n0 3 2 1\\n\\n1 0\\n0 2\\n\\n2 0\\n1 3\\n\") == \"NO\\nYES\\nNO\\n\""
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 0 2\\n2 0 1\\n\") == \"YES\"\nassert solution(\"2\\n1 0\\n0 1\\n\") == \"YES\"\nassert solution(\"4\\n1 2 3 0\\n0 3 2 1\\n\") == \"NO\""
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == \"YES\"\nassert solution(2) == \"YES\"\nassert solution(4) == \"NO\""
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"example.txt\", \"r\").read()) == \"YES\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"YES\"\nassert solution(open(\"no_sequence.txt\", \"r\").read()) == \"NO\"\nassert solution(open(\"input2.txt\", \"r\").read()) == \"YES\"\n"
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"9000\\n\"\nassert solution(input()) == \"1160\\n\""
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"9000\", \"Test failed\""
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, \"The given code does not match the expected output.\""
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"Test case failed.\"\n"
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"9000\"\nassert solution() == \"1160\"\nassert solution() == \"15600\"\nassert solution() == \"17575\"\nassert solution() == \"19550\"\nassert solution() == \"21525\"\nassert solution() == \"23500\"\nassert solution() == \"25475\"\nassert solution() == \"27450\"\nassert solution() == \"29425\"\nassert solution() == \"31390\"\nassert solution() == \"33355\"\nassert solution() == \"35320\"\nassert solution() == \"37285\"\nassert solution() == \"39250\"\nassert solution() == \"41215\"\nassert solution() == \"43180\"\nassert solution() == \"45145\"\nassert solution() == \"47110\"\nassert solution() == \"49075\"\nassert solution() == \"51040\"\nassert solution() == \"53005\"\nassert solution() == \"54970\"\nassert solution() == \"56935\"\nassert solution() == \"58900\"\nassert solution() == \"60865\"\nassert solution() == \"62830\"\nassert solution() == \"64795\"\nassert solution() == \"66760\"\nassert solution() == \"68725\"\nassert solution() == \"70690\"\nassert solution() == \"72655\"\nassert solution() == \"74620\"\nassert solution() == \"76585\"\nassert solution() == \"78550\"\nassert solution() == \"80515\"\nassert solution() == \"82480\"\nassert solution() == \"84445\"\nassert solution() == \"86410\"\nassert solution() == \"88375\"\nassert solution() == \"90340\"\nassert solution() == \"92305\"\nassert solution() == \"94270\"\nassert solution() == \"96235\"\nassert solution() == \"98200\"\nassert solution() == \"100165\"\nassert solution() == \"102130\"\nassert solution() == \"104095\"\nassert solution() == \"106060\"\nassert solution() == \"108025\"\nassert solution() == \"110090\"\nassert solution() == \"112055\"\nassert solution() == \"114020\"\nassert solution() == \"115985\"\nassert solution() == \"117950\"\nassert solution() == \"119915\"\nassert solution() == \"121880\"\nassert solution() == \"123845\"\nassert solution() == \"125810\"\nassert solution() == \"127775\"\nassert solution() == \"129740\"\nassert solution() == \"131705\"\nassert solution() == \"133670\"\nassert solution() == \"135635\"\nassert solution() == \"137600\"\nassert solution() == \"139565\"\nassert solution() == \"141530\"\nassert solution() == \"143495\"\nassert solution() == \"145460\"\nassert solution() == \"147425\"\nassert solution() == \"149390\"\nassert solution() == \"151355\"\nassert solution() == \"153320\"\nassert solution() == \"155285\"\nassert solution() == \"157250\"\nassert solution() == \"159215\"\nassert solution() == \"161180\"\nassert solution() == \"163145\"\nassert solution() == \"165110\"\nassert solution() == \"167075\"\nassert solution() == \"169040\"\nassert solution() == \"171005\"\nassert solution() == \"17"
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('6\\n8 10 9 9 8 10\\n1 1 1 1 1 1') == '9000'\nassert solution('6\\n8 10 9 9 8 10\\n1 10 5 5 1 10') == '1160'\n\nsolution = '''\n"
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n8 10 9 9 8 10\\n1 1 1 1 1 1\\n\") == \"9000\\n\"\nassert solution(\"6\\n8 10 9 9 8 10\\n1 10 5 5 1 10\\n\") == \"1160\\n\""
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '9000', 'Your solution is incorrect.'"
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n8 10 9 9 8 10\\n1 1 1 1 1 1\") == \"9000\"\nassert solution(\"6\\n8 10 9 9 8 10\\n1 10 5 5 1 10\") == \"1160\""
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"9000\""
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == expected_output, \"The solution does not match the expected output.\\n\\nExpected output: {}\\n\\nGot: {}\".format(expected_output, solution)"
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=input()) == expected, f\"Expected {expected}, got {solution(stdin=input())}\"\n"
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == '''\n"
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 6"
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '6', \"The output should be 6, but it is: \" + str(solution(stdin))\n\nfrom typing import List"
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 2\\n2 3\\n1 4\\n1 4\\n2 1') == 6\nassert solution('8 6\\n5 6\\n5 7\\n5 8\\n6 2\\n2 1\\n7 3\\n1 3\\n1 4') == 1"
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n2 3\\n1 4\\n1 4\\n2 1\") == \"6\"\nassert solution(\"8 6\\n5 6\\n5 7\\n5 8\\n6 2\\n2 1\\n7 3\\n1 3\\n1 4\") == \"1\"\nassert solution(\"3 5\\n2 6\\n1 7\\n2 8\") == \"5\"\nassert solution(\"4 5\\n1 6\\n2 7\\n3 8\") == \"7\""
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"6\\n\", \"Expected output: 6\\nGot: \" + str(solution(stdin)) + \"\\n\""
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"6\""
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 2\\n2 3\\n1 4\\n1 4\\n2 1') == '6\\n'\nassert solution('8 6\\n5 6\\n5 7\\n5 8\\n6 2\\n2 1\\n7 3\\n1 3\\n1 4') == '1\\n'"
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2 2 3 4 6\\n\") == \"5\\n\"\nassert solution(\"4\\n2 4 6 8\\n\") == \"-1\\n\"\nassert solution(\"3\\n2 6 9\\n\") == \"4\\n\""
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n2 2 3 4 6\\n\\n4\\n2 4 6 8\\n\\n3\\n2 6 9\\n\\n\") == -1\nassert solution(\"4\\n2 4 6 8\\n\\n3\\n2 6 9\\n\\n\") == -1\nassert solution(\"3\\n2 6 9\\n\\n\") == 4"
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n2 2 3 4 6\\n\\n4\\n2 4 6 8\\n\\n3\\n2 6 9\\n\\n\") == \"5\\n\\n\"\n\nassert solution(\"4\\n2 4 6 8\\n\\n3\\n2 6 9\\n\\n\") == \"-1\\n\"\n\nassert solution(\"3\\n2 6 9\\n\\n\") == \"4\\n\""
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n2 2 3 4 6\") == 5\nassert solution(\"4\\n2 4 6 8\") == -1\nassert solution(\"3\\n2 6 9\") == 4"
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('Input\\n5\\n2 2 3 4 6\\n\\nOutput\\n5\\n\\nInput\\n4\\n2 4 6 8\\n\\nOutput\\n-1\\n\\nInput\\n3\\n2 6 9\\n\\nOutput\\n4') == '-1\\n'"
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2 2 3 4 6\\n\\n4\\n2 4 6 8\\n\\n3\\n2 6 9\\n\\n\") == \"-1\\n\" # expected output\nassert solution(\"5\\n2 2 3 4 6\\n\\n4\\n2 4 6 8\\n\\n3\\n2 6 9\\n\\n\") == \"5\\n\" # expected output\nassert solution(\"5\\n2 2 3 4 6\\n\\n4\\n2 4 6 8\\n\\n3\\n2 6 9\\n\\n\") == \"-1\\n\" # expected output"
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2 2 3 4 6\\n\") == \"5\\n\"\nassert solution(\"4\\n2 4 6 8\\n\") == \"-1\\n\"\nassert solution(\"3\\n2 6 9\\n\") == \"4\\n\""
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n2 2 3 4 6\\n') == '5\\n'\nassert solution('4\\n2 4 6 8\\n') == '-1\\n'\nassert solution('3\\n2 6 9\\n') == '4\\n'"
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abacabaca\") == \"3\\naca\\nba\\nca\"\nassert solution(\"abaca\") == \"0\""
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abacabaca\") == 3\nassert solution(\"abaca\") == 0\n"
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('abacabaca') == '3\\naca\\nba\\nca\\n'\nassert solution('abaca') == '0'"
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abacabaca\") == \"aca\\nba\\nca\"\nassert solution(\"abaca\") == \"0\""
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abacabaca\") == \"3\\naca\\nba\\nca\"\nassert solution(\"abaca\") == \"0\\n\""
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abacabaca\") == \"3\\naca\\nba\\nca\"\nassert solution(\"abaca\") == \"0\""
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abacabaca\") == \"3\\naca\\nba\\nca\"\nassert solution(\"abaca\") == \"0\""
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abacabaca\") == 3\nassert solution(\"abaca\") == 0"
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abacabaca\") == \"3\\naca\\nba\\nca\"\nassert solution(\"abaca\") == \"0\"\n\nprint(solution(\"abacabaca\"))\nprint(solution(\"abaca\"))"
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abacabaca\") == \"3\\naca\\nba\\nca\"\nassert solution(\"abaca\") == \"0\"\n\nassert solution(\"abacax\") == \"1\\nax\"\nassert solution(\"aab\") == \"1\\nab\"\nassert solution(\"a\") == \"1\\na\"\nassert solution(\"abc\") == \"1\\nabc\"\nassert solution(\"abcabc\") == \"2\\nabc\"\nassert solution(\"abcd\") == \"1\\nd\"\nassert solution(\"abcde\") == \"2\\nde\"\nassert solution(\"abcdef\") == \"2\\nabc\"\nassert solution(\"abcdefg\") == \"3\\nabc\"\nassert solution(\"abcdefgabc\") == \"4\\nabc\"\nassert solution(\"abcdefgh\") == \"2\\nab\"\nassert solution(\"abcdefghi\") == \"3\\nabc\"\nassert solution(\"abcdefghij\") == \"4\\nabc\"\nassert solution(\"abcdefghijk\") == \"5\\nabc\"\nassert solution(\"abcdefghijkl\") == \"6\\nabc\"\nassert solution(\"abcdefghijklm\") == \"7\\nabc\"\nassert solution(\"abcdefghijklmn\") == \"8\\nabc\"\nassert solution(\"abcdefghijklmnopq\") == \"9\\nabc\"\nassert solution(\"abcdefghijklmnopqrs\") == \"10\\nabc\"\nassert solution(\"abcdefghijklmnopqrsu\") == \"11\\nabc\"\nassert solution(\"abcdefghijklmnopqrsui\") == \"12\\nabc\"\nassert solution(\"abcdefghijklmnopqrsuij\") == \"13\\nabc\"\nassert solution(\"abcdefghijklmnopqrsuijkl\") == \"14\\nabc\"\nassert solution(\"abcdefghijklmnopqrsuijklm\") == \"15\\nabc\"\nassert solution(\"abcdefghijklmnopqrsuijklmn\") == \"16\\nabc\"\nassert solution(\"abcdefghijklmnopqrsuijklmnopq\") == \"17\\nabc\"\nassert solution(\"abcdefghijklmnopqrsuijklmnopqrs\") == \"18\\nabc\"\nassert solution(\"abcdefghijklmnopqrsuijklmnopqrsu\") == \"19\\nabc\"\nassert solution(\"abcdefghijklmnopqrsuijklmnopqrsui\") == \"20\\nabc\"\nassert solution(\"abcdefghijklmnopqrsuijklmnopqrsuij\") == \"21\\nabc\"\nassert solution(\"abcdefghijklmnopqrsuijklmnopqrsuijkl\") == \"22\\nabc\"\nassert solution(\"abcdefghijklmnopqrsuijklmnopqrsuijklm\") == \"23\\nabc\"\nassert solution(\"abcdefghijklmnopqrsuijklmnopqrsuijklmn\") == \"24\\nabc\"\nassert solution(\"abcdefghijklmnopqrsuijklmnopqrsuijklmnopq\") == \"25\\nabc\"\nassert solution(\"abcdefghijklmnopqrsuijklmnopqrsuijklmnopqrs\") == \"26\\nabc\"\nassert solution(\"abcdefghijklmnopqrsuijklmnopqrsuijklmnopqrsu\") == \"27\\nabc\"\nassert solution(\"abcdefghijklmnopqrsuijklmnopqrsuijklmnopqrsui\") == \"28\\nabc\"\nassert solution(\"abcdefghijklmnopqrsuijklmnopqrsuijklmnopqrsuij\") == \"29\\nabc\"\nassert solution(\"abcdefghijklmnopqrsuijklmnopqrsuijklmnopqrsuijkl\") == \"30\\nabc\"\nassert solution(\"abcdefghijklmnopqrsuijklmnopqrsuijklmnopqrsuijklm\") == \"31\\nabc\"\nassert solution(\"abcdefghijklmnopqrsuijklmnopqrsuijklmnopqrsuijklmn\") == \"32\\nabc\"\nassert solution(\"abcdefghijklmnopqrsuijklmnopqrsuijklmnopqrsuijklmnopq\") == \"33\\nabc\"\nassert solution(\"abcdefghijklmnopqrsuijklmnopqrsuijklmnopqrsuijklmnopqrs\") == \"34\\nabc\"\nassert solution(\"abcdefghijklmnopqrsuijklmnopqrsuijklmnopqrsuijklmnopqrsu\") == \"35\\nabc\"\nassert solution(\"abcdefghijklmnopqrsuijklmnopqrsuijklmnopqrsuijklmnopqrsui\") == \"36\\nabc\"\nassert solution(\"abcdefghijklmnopqrsuijklmnopqrsuijklmnopqrsuijklmnopqrsuij\") == \"37\\nabc\"\nassert solution(\"abcdefghijklmnopqrsuijklmnopqrsuijklmnopqrsuijklmnopqrsuijkl\") =="
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Test case {i+1} failed: got {solution(input())}, expected {expected}\""
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5\\n11..2\\n#..22\\n#.323\\n.#333\") == 2\nassert solution(\"1 5\\n1#2#3\") == -1\n"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 2\nassert solution(\"1 5\\n1#2#3\") == -1"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5\\n11..2\\n#..22\\n#.323\\n.#333\") == 2\nassert solution(\"1 5\\n1#2#3\") == -1"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 5\\n1#2#3\") == 2\nassert solution(\"4 5\\n11..2\\n#..22\\n#.323\\n.#333\") == 2\nassert solution(\"4 5\\n11..2\\n#..22\\n#.323\\n.#333\\n#4#5\") == -1"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 5\\n11..2\\n#..22\\n#.323\\n.#333\\nOutput') == 2\nassert solution('1 5\\n1#2#3\\n') == -1\n"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5\\n11..2\\n#..22\\n#.323\\n.#333\\n\") == 2\nassert solution(\"1 5\\n1#2#3\\n\") == -1\nassert solution(\"4 5\\n11..2\\n#..22\\n#.323\\n.#333\\n\") == 2\nassert solution(\"1 5\\n1#2#3\\n\") == -1"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r').read()) == '2\\n'"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Error: The solution is incorrect. Please check your code and try again.\""
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5\\n11..2\\n#..22\\n#.323\\n.#333\") == 2\nassert solution(\"1 5\\n1#2#3\") == -1"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"6\"\nassert solution(input()) == \"-1\""
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '6', 'Output incorrect'"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) == '6'\nassert solution(input()) =="
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8)())((())(3)(()\") == 6\nassert solution(\"3(()\") == -1"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('8'))((())(\n'6')\n'3')\n'-1')"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(8) == 6\nassert solution(3) == -1"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8\") == \"6\", \"Expected 6, got {}\".format(solution(\"8\"))\nassert solution(\"3\") == \"-1\", \"Expected -1, got {}\".format(solution(\"3\"))\nassert solution(\"\") == \"0\", \"Expected 0, got {}\".format(solution(\"\"))\n"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8\") == \"6\"\nassert solution(\"3\") == \"-1\""
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"8\n))((())(\"\"\") == 6\nassert solution(\"\"\"3\n(()\"\"\") == -1"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8)\") == \"6\"\nassert solution(\"3)()\") == \"-1\""
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3 5\\n4 4 0\\n1 3\\n3 2\\n3 1\\n\") == \"1\\n3 2\\n\"\nassert solution(\"4 5 4\\n2 1 0 3\\n4 3\\n3 2\\n1 2\\n1 4\\n1 3\\n\") == \"4\\n1 2 3 4\\n\""
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1\\n3\""
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output\n\nsolution = lambda stdin: \"\"\ninput = lambda: stdin.strip().split()"
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1\"\n"
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '4'\nprint('1')\nprint('1 2 3 4')"
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1\\n3 \\n\"\nassert solution() == \"4\\n1 2 3 4 \\n\""
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 3 5\\n4 4 0\\n1 3\\n3 2\\n3 1') == '1\\n3 '\nassert solution('4 5 4\\n2 1 0 3\\n4 3\\n3 2\\n1 2\\n1 4\\n1 3') == '4\\n1 2 3 4 '"
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n3 3 5\n4 4 0\n1 3\n3 2\n3 1\n''') == '1\\n3 '\n\nassert solution('''\n4 5 4\n2 1 0 3\n4 3\n3 2\n1 2\n1 4\n1 3\n''') == '4\\n1 2 3 4 '"
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '1\\n3 3\\n3 1'\n\nsolution = lambda: input().split()\n"
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"1\\n3 2\""
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 3') == '8'"
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"8\\n\"\n"
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 3') == '8' # correct output"
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 3') == '8\\n'\n"
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"8\\n\", solution(stdin)\n"
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"8\""
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"8\"\n"
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == \"8\"\n"
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(2, 3) == 8\nprint(\"Test successful\")"
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"8\\n\""
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 2\\n1 2\\n2 3\\n\") == \"5\\n\"\nassert solution(\"100 3\\n1 2\\n2 1\\n3 1\\n\") == \"4\\n\"\nassert solution(\"1 2\\n1 1\\n2 100\\n\") == \"100\\n\""
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 2\\n1 2\\n2 3\\n\") == \"5\\n\"\nassert solution(\"100 3\\n1 2\\n2 1\\n3 1\\n\") == \"4\\n\"\nassert solution(\"1 2\\n1 1\\n2 100\\n\") == \"100\\n\""
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2\\n1 2\\n2 3\\n\") == \"5\\n\"\nassert solution(\"100 3\\n1 2\\n2 1\\n3 1\\n\") == \"4\\n\"\nassert solution(\"1 2\\n1 1\\n2 100\\n\") == \"100\\n\""
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_string) == output_string, f\"Testcase {input_number} failed\"\nfor input_string, output_string in zip(input_data, output_data):\n    assert solution(input_string) == output_string, f\"Testcase {input_number} failed\"\nprint(\"All testcases passed!\")"
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '5', 'The output should be 5.'\n"
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '5\\n'"
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2\\n2 3\\n\") == \"5\"\nassert solution(\"1 2\\n2 1\\n3 1\\n\") == \"4\"\nassert solution(\"1 2\\n1 1\\n2 100\\n\") == \"100\"\nassert solution(\"1 2\\n1 1\\n2 100\\n\") == \"100\""
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2\\n2 3\\n\") == \"5\\n\"\nassert solution(\"1 2\\n2 1\\n3 1\\n\") == \"4\\n\"\nassert solution(\"1 2\\n1 1\\n2 100\\n\") == \"100\\n\""
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 2\\n1 2\\n2 3\\n') == '5\\n'\nassert solution('100 3\\n1 2\\n2 1\\n3 1\\n') == '4\\n'\nassert solution('1 2\\n1 1\\n2 100\\n') == '100\\n'"
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('aaabb') == '6', \"Expected '6', got: \" + solution('aaabb')\nassert solution('usaco') == '1', \"Expected '1', got: \" + solution('usaco')\nassert solution('lol') == '2', \"Expected '2', got: \" + solution('lol')"
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"aaabb\") == 6, \"Output: 6, expected: 6\"\nassert solution(\"usaco\") == 1, \"Output: 1, expected: 1\"\nassert solution(\"lol\") == 2, \"Output: 2, expected: 2\"\n"
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"aaabb\") == 6, \"Incorrect solution\"\nassert solution(\"usaco\") == 1, \"Incorrect solution\"\nassert solution(\"lol\") == 2, \"Incorrect solution\""
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"aaabb\") == 6\nassert solution(\"usaco\") == 1\nassert solution(\"lol\") == 2"
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"aaabb\") == 6\nassert solution(\"usaco\") == 1\nassert solution(\"lol\") == 2"
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"aaabb\") == 6, \"Incorrect solution\"\nassert solution(\"usaco\") == 1, \"Incorrect solution\"\nassert solution(\"lol\") == 2, \"Incorrect solution\""
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"aaabb\") == 6\nassert solution(\"usaco\") == 1\nassert solution(\"lol\") == 2"
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('aaabb') == 6, \"The solution for the first example should be 6.\"\nassert solution('usaco') == 1, \"The solution for the second example should be 1.\"\nassert solution('lol') == 2, \"The solution for the third example should be 2.\""
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('aaabb') == 6, \"The number of occurrences of the secret message is incorrect.\"\nassert solution('usaco') == 1, \"The number of occurrences of the secret message is incorrect.\"\nassert solution('lol') == 2, \"The number of occurrences of the secret message is incorrect.\""
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"aaabb\") == \"6\"\nassert solution(\"usaco\") == \"1\"\nassert solution(\"lol\") == \"2\""
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"2\""
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == '1'\nassert solution(4) == '2'"
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == \"1\"\nassert solution(4) == \"2\""
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"1\", \"Expected 1, but got {}\".format(solution(input()))\nassert solution(input()) == \"2\", \"Expected 2, but got {}\".format(solution(input()))\nassert solution(input()) == \"1\", \"Expected 1, but got {}\".format(solution(input()))"
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == \"1\"\nassert solution(4) == \"2\""
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n\") == \"1\\n\"\nassert solution(\"4\\n\") == \"2\\n\""
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"Output\\n1\"\nassert solution(input()) == \"Output\\n2\""
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1\\n\"\nassert solution(input()) == \"2\\n\""
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1\\n\", \"Your solution is incorrect.\""
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()\nprint(\"OK\")"
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n1 4\\n2 5\\n3 6') == '1 2\\n2 1\\n1 2'\n\nassert solution('4\\n1 4\\n2 5\\n3 6') == '-1'\n\nassert solution('5\\n1 4\\n2 5\\n3 6') == '1 2\\n2 1\\n1 2'\n\nassert solution('6\\n1 4\\n2 5\\n3 6') == '1 2\\n2 1\\n1 2'"
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Your code is incorrect. The output is: \" + output() + \"\\nOutput: \" + str(output()) + \"\\nExpected: \" + str(expected()) + \"\\nExpected: \" + str(expected())"
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 4\\n2 5\\n3 6\") == \"1 2\\n2 1\\n1 2\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1 2\\n2 1\"\nassert solution() == \"1 2\\n1 1\"\nassert solution() == \"-1\""
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n1 4\\n2 5\\n3 6') == '1 2\\n2 1\\n1 2'"
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n1 4\\n2 5\\n3 6') == '1 2\\n2 1\\n1 2\\n'\nassert solution('4\\n1 4\\n2 5\\n3 6') == '1 1\\n2 2\\n1 1\\n2 2\\n'\nassert solution('5\\n1 4\\n2 5\\n3 6') == '-1\\n'\nassert solution('6\\n1 4\\n2 5\\n3 6') == '-1\\n'"
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"1 2\" # expected output: \"1 2\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n1 4\\n2 5\\n3 6') == '1 2\\n2 1\\n1 2\\n'\n\nfrom typing import List"
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 4\\n2 5\\n3 6\\n') == '-1'\nassert solution('1 4\\n2 1\\n3 2\\n') == '-1'\nassert solution('1 4\\n2 4\\n3 4\\n') == '-1'\nassert solution('1 4\\n2 4\\n3 1\\n') == '1 2'\nassert solution('1 4\\n2 4\\n3 2\\n') == '2 1'\nassert solution('1 4\\n2 4\\n3 4\\n') == '2 1'\nassert solution('1 4\\n2 1\\n3 2\\n') == '1 2'\nassert solution('1 4\\n2 1\\n3 4\\n') == '1 2'"
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 4\\n2 5\\n3 6\") == [\"1 2\", \"2 1\", \"1 2\"]\nassert solution(\"1 3\\n1 4\\n1 5\\n1 6\") == [\"1 2\", \"1 1\", \"1 2\", \"1 1\"]\nassert solution(\"1 1\\n2 1\\n3 1\\n4 1\\n5 1\") == [\"1 2\", \"2 1\", \"1 2\", \"2 1\", \"1 2\"]\nassert solution(\"1 1\\n1 1\\n1 1\\n1 1\\n1 1\") == [\"1 1\", \"1 1\", \"1 1\", \"1 1\", \"1 1\"]\nassert solution(\"1 1\\n1 1\\n1 1\\n1 1\\n1 1\") == [\"1 2\", \"1 2\", \"1 2\", \"1 2\", \"1 2\"]"
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == \"1\"\nassert solution(2) == \"2\"\nassert solution(3) == \"2 1\"\nassert solution(8) == \"4\""
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"1 2 1\\n\"\nassert solution(4) == \"2 2 2 1\\n\"\nassert solution(5) == \"2 2 2 1\\n3 3 2 2 1\\n\"\nassert solution(6) == \"2 2 2 1\\n3 3 2 2 1\\n4 4 3 3 2 3 1\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(2) == '2'\nassert solution(3) == '2 1'\nassert solution(8) == '4'"
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\\n\""
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\", \"Test failed\"\nassert solution(\"2\") == \"2\", \"Test failed\"\nassert solution(\"3\") == \"2 1\", \"Test failed\"\nassert solution(\"8\") == \"4\", \"Test failed\""
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=input()) == output, f\"Output should be: {output}, but it is: {solution(stdin=input())}\""
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == '1'\nassert solution(2) == '2'\nassert solution(3) == '2 1'\nassert solution(8) == '4'"
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == \"2\\n\"\nassert solution(1) == \"1\\n\"\nassert solution(2) == \"2\\n\"\nassert solution(8) == \"4\\n\""
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n\") == \"1\\n\"  # Test Case 1\nassert solution(\"2\\n\") == \"2\\n\"  # Test Case 2\nassert solution(\"3\\n\") == \"2 1\\n\"  # Test Case 3\nassert solution(\"8\\n\") == \"4\\n\"  # Test Case 4"
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"aabaac\") == \"aba aca\"\nassert solution(\"0rTrT022\") == \"02TrrT20\"\nassert solution(\"aA\") == \"a A\""
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0rTrT022\") == \"02TrrT20\", \"Test Case 0\"\nassert solution(\"aA\") == \"a A\", \"Test Case 1\"\nassert solution(\"aabaac\") == \"aba aca\", \"Test Case 2\"\nassert solution(\"0rTrT022\") == \"02TrrT20\", \"Test Case 3\"\nassert solution(\"aA\") == \"a A\", \"Test Case 4\"\nassert solution(\"aabaac\") == \"aba aca\", \"Test Case 5\""
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"aabaac\") == \"aba aca\"\nassert solution(\"0rTrT022\") == \"02TrrT20\"\nassert solution(\"aA\") == \"a A\"\n"
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('aabaac') == ['aba', 'aca']\nassert solution('0rTrT022') == ['02', 'rrT', '20']\nassert solution('aA') == ['a', 'A']\n"
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0rTrT022\") == \"02TrrT20\"\nassert solution(\"aA\") == \"a A\"\nassert solution(\"aabaac\") == \"2\"\nassert solution(\"abc\") == \"1\""
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0rTrT022\") == \"02TrrT20\"\nassert solution(\"aA\") == \"a A\"\nassert solution(\"abaac\") == \"aba aca\"\nassert solution(\"aabaac\") == \"aba aca\"\nassert solution(\"0rTrT022\") == \"02TrrT20\"\n"
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2\\naba aca \\n02TrrT20 \\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\naabaac\") == \"2\\naba aca \"\nassert solution(\"8\\n0rTrT022\") == \"1\\n02TrrT20 \"\nassert solution(\"2\\nA\") == \"2\\nA \""
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"aba aca\"\n\nassert solution() == \"02TrrT20\"\n\nassert solution() == \"a A\""
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('0rTrT022') == ['02TrrT20', '0TrrT0r']\nassert solution('aA') == ['a A']"
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\na**d\\n2\\abcd\\nacbd\\n\") == \"2\"\nassert solution(\"5\\nlo*er\\n2\\lover\\nloser\\n\") == \"0\"\nassert solution(\"3\\na*a\\n2\\aaa\\aba\\n\") == \"1\""
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\na**d\\n2\\abcd\\nacbd\\n\") == \"2\"\nassert solution(\"5\\nlo*er\\n2\\lover\\nloser\\n\") == \"0\"\nassert solution(\"3\\na*a\\n2\\aaa\\aba\\n\") == \"1\""
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"a**d\") == \"2\", \"The correct answer is '2'.\"\nassert solution(\"abcd\") == \"2\", \"The correct answer is '2'.\"\nassert solution(\"acbd\") == \"0\", \"The correct answer is '0'.\"\nassert solution(\"lo*er\") == \"0\", \"The correct answer is '0'.\"\nassert solution(\"a*a\") == \"1\", \"The correct answer is '1'.\"\n\nfrom typing import List"
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\na**d\\n2\\abcd\\nacbd\\n\") == \"2\"\nassert solution(\"5\\nlo*er\\n2\\lover\\nloser\\n\") == \"0\"\nassert solution(\"3\\na*a\\n2\\aaa\\aba\\n\") == \"1\""
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\na**d\\n2\\abcd\\nacbd\\n') == '2'\nassert solution('5\\nlo*er\\n2\\lover\\nloser\\n') == '0'\nassert solution('3\\na*a\\n2\\aaa\\aba\\n') == '1'"
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\na**d\\n2\\abcd\\nacbd\\n\") == \"2\"\nassert solution(\"5\\nlo*er\\n2\\lover\\nloser\\n\") == \"0\"\nassert solution(\"3\\na*a\\n2\\aaa\\aba\\n\") == \"1\""
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\na**d\\n2\\abcd\\nacbd\\n\") == 2\nassert solution(\"5\\nlo*er\\n2\\lover\\nloser\\n\") == 0\nassert solution(\"3\\na*a\\n2\\aaa\\aba\\n\") == 1"
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\na**d\\n2\\abcd\\nacbd\\n\") == \"2\"\nassert solution(\"5\\nlo*er\\n2\\lover\\nloser\\n\") == \"0\"\nassert solution(\"3\\na*a\\n2\\aaa\\aba\\n\") == \"1\""
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('a**d') == '2', 'First example is incorrect'\nassert solution('acbd') == '2', 'Second example is incorrect'\nassert solution('lo*er') == '0', 'Third example is incorrect'\nassert solution('a*a') == '1', 'Fourth example is incorrect'"
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\na**d\\n2\\abcd\\nacbd\\n') == '2\\n'\nassert solution('5\\nlo*er\\n2\\lover\\nloser\\n') == '0\\n'\nassert solution('3\\na*a\\n2\\aaa\\aba\\n') == '1\\n'"
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"2\""
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 1 1\\n1 0 0 0 4') == '1'\nassert solution('6 1 2\\n3 8 0 1 0 0') == '2'"
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 1, \"The correct output is 1, but it is \" + str(solution()) + \".\""
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 1\n\nassert solution() == 2"
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 1 1\\n1 0 0 0 4\\n\") == \"1\\n\"\nassert solution(\"6 1 2\\n3 8 0 1 0 0\\n\") == \"2\\n\""
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(5, 1, 1) == 1\nassert solution(6, 1, 2) == 2\n"
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 1 1\\n1 0 0 0 4\\n\") == \"1\"\nassert solution(\"6 1 2\\n3 8 0 1 0 0\\n\") == \"2\""
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=sample_input) == \"2\"\n"
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 1 1\\n1 0 0 0 4\") == \"1\"\nassert solution(\"6 1 2\\n3 8 0 1 0 0\") == \"2\""
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 1 1\\n1 0 0 0 4\\n\") == \"1\"\nassert solution(\"6 1 2\\n3 8 0 1 0 0\\n\") == \"2\"\n"
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"Test failed for input {stdin}\"\nprint(\"Test passed\")"
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '40'\nassert solution(stdin) == '1'\nassert solution(stdin) == '172'\n\nassert solution(stdin) == '40'\nassert solution(stdin) == '1'\nassert solution(stdin) == '172'"
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"Palindromic tree is better than splay tree\"\n"
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"Palindromic tree is better than splay tree\""
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1\") == \"40\"\nassert solution(\"1 42\") == \"1\"\nassert solution(\"6 4\") == \"172\""
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1, 1) == 40\nassert solution(1, 42) == 1\nassert solution(6, 4) == 172"
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=input()) == expected, f\"Test failed for input {stdin}, expected {expected}\""
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1\") == \"40\"\nassert solution(\"1 42\") == \"1\"\nassert solution(\"6 4\") == \"172\""
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"Palindromic tree is better than splay tree\"\n"
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == \"40\"\nassert solution(\"1 42\") == \"1\"\nassert solution(\"6 4\") == \"172\""
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n2 1 4\\n4\\n3 1 4 4\\n4\\n3 1 4 1\\n5\\n3 1 4 1 5\\n') == 5, \"Output not correct\"\nassert solution('4\\n3 1 4 4\\n4\\n3 1 4 1\\n5\\n3 1 4 1 5\\n') == 6, \"Output not correct\"\nassert solution('4\\n3 1 4 1\\n4\\n3 1 4 1\\n5\\n3 1 4 1 5\\n') == 6, \"Output not correct\"\nassert solution('5\\n3 1 4 1 5\\n4\\n3 1 4 1\\n5\\n3 1 4 1 5\\n') == 11, \"Output not correct\""
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"5\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"6\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"6\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"11\"\n"
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"5\\n6\"\n\nassert solution() == \"6\\n11\"\n\nassert solution() == \"11\\n\""
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"5\"\nassert solution(\"4\") == \"6\"\nassert solution(\"4\") == \"6\"\nassert solution(\"5\") == \"11\""
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n2 1 4\\n\") == \"5\\n\"\nassert solution(\"4\\n3 1 4 4\\n\") == \"6\\n\"\nassert solution(\"4\\n3 1 4 1\\n\") == \"6\\n\"\nassert solution(\"5\\n3 1 4 1 5\\n\") == \"11\\n\""
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\") == \"6\"\nassert solution(\"3\\n1\\n4\\n4\\n1\") == \"6\"\nassert solution(\"4\\n3\\n1\\n4\\n1\") == \"6\"\nassert solution(\"5\\n3\\n1\\n4\\n1\\n5\") == \"11\""
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3') == 5\nassert solution('4') == 6\nassert solution('4') == 6\nassert solution('5') == 11\n"
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n3\n2 1 4\n''') == '5'\nassert solution('''\n4\n3 1 4 4\n''') == '6'\nassert solution('''\n4\n3 1 4 1\n''') == '6'\nassert solution('''\n5\n3 1 4 1 5\n''') == '11'"
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n2 1 4\\n4\\n3 1 4 4\\n4\\n3 1 4 1\\n5\\n3 1 4 1 5\") == 5\nassert solution(\"4\\n3 1 4 4\\n4\\n3 1 4 1\\n5\\n3 1 4 1 5\") == 6\nassert solution(\"4\\n3 1 4 1\\n4\\n3 1 4 4\\n5\\n3 1 4 1 5\") == 6\nassert solution(\"5\\n3 1 4 1 5\\n4\\n3 1 4 4\\n5\\n3 1 4 1 5\") == 11"
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 5\n"
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin: str) == \"1\\n\", \"Output: {}\\n\".format(solution(stdin: str))"
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '1', 'Output should be 1'\n"
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"1\\n\", \"Output: 1\"\n"
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin: str) == \"1\""
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 0 0 -1\\n2\\n1 -1\\n\") == \"1\\n\"\nassert solution(\"2\\n1 -1\\n\") == \"2\\n\"\n"
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '1'\nprint('1')"
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"1\"\n"
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '1'\nassert solution(stdin) == '2'"
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 1, \"Expected 1 but got {}\".format(solution())"
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('Input\\n4\\n1 0 0 -1\\n\\nInput\\n2\\n1 -1\\n\\nOutput\\n1\\n\\nOutput\\n2') == '1\\n\\n2'"
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 0 0\\n1 2\\n2 3\\n\") == \"2\\n\"\nassert solution(\"2 1 0\\n1 2\\n2 2\\n\") == \"0\\n\"\nassert solution(\"2 5 7\\n3 4\\n14 4\\n\") == \"1\\n\""
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 0 0\\n1 2\\n2 3\\n\") == \"2\\n\"\nassert solution(\"2 1 0\\n1 2\\n2 2\\n\") == \"0\\n\"\nassert solution(\"2 5 7\\n3 4\\n14 4\\n\") == \"1\\n\""
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Expected {output}, but got {solution(input())}\""
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2\" # Test case 1\nassert solution() == \"0\" # Test case 2\nassert solution() == \"1\" # Test case 3\nassert solution() == \"1\" # Test case 4\nassert solution() == \"1\" # Test case 5"
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == expected_output, f\"Your solution is incorrect. Expected output: {expected_output}, but got {solution}\""
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 1\n"
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 0 0\\n1 2\\n2 3\\n\\n2 1 0\\n1 2\\n2 2\\n\\n2 5 7\\n3 4\\n14 4\\n\\n2 5 7\\n3 4\\n14 4\") == \"2\\n\"\nassert solution(\"2 1 0\\n1 2\\n2 2\\n\\n2 5 7\\n3 4\\n14 4\\n\\n2 5 7\\n3 4\\n14 4\") == \"0\\n\"\nassert solution(\"2 5 7\\n3 4\\n14 4\\n\\n2 5 7\\n3 4\\n14 4\") == \"1\\n\""
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 0 0\\n1 2\\n2 3\\n\") == \"2\\n\"\nassert solution(\"2 1 0\\n1 2\\n2 2\\n\") == \"0\\n\"\nassert solution(\"2 5 7\\n3 4\\n14 4\\n\") == \"1\\n\""
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 0 0\\n1 2\\n2 3\\n\") == \"2\\n\"\nassert solution(\"2 1 0\\n1 2\\n2 2\\n\") == \"0\\n\"\nassert solution(\"2 5 7\\n3 4\\n14 4\\n\") == \"1\\n\""
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 2\\n01001\\n2 4\\n3 5') == '6'"
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\\n\") == \"6\"\n\nassert solution(\"5 2\\n00000\\n2 4\\n3 5\\n\") == \"6\"\n\nassert solution(\"5 2\\n01001\\n2 4\\n3 6\\n\") == \"6\"\n\nassert solution(\"5 2\\n01001\\n2 4\\n3 5\\n\") == \"6\"\n\nassert solution(\"5 2\\n01001\\n2 4\\n3 6\\n\") == \"6\"\n\nassert solution(\"5 2\\n01001\\n2 4\\n3 5\\n\") == \"6\""
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\"\nassert solution(\"5 2\\n01001\\n2 4\\n3 5\\n0 2\\n2 4\\n3 5\\n\") == \"6\"\nassert solution(\"5 2\\n01001\\n2 4\\n3 5\\n0 2\\n2 4\\n3 5\\n1 1\\n1 1\\n1 1\\n\") == \"2\""
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\"\n"
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\""
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\\n\") == \"6\"\n"
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\""
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\\n\") == \"6\\n\""
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"6\\n\", \"Test failed.\"\n"
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\""
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1 1 1 1 1\") == \"6\"\nassert solution(\"1 2 1 2 1 2\") == \"13\""
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1 1 1 1 1\") == 6\nassert solution(\"1 2 1 2 1 2\") == 13"
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 1 1 1 1 1') == '6'\nassert solution('1 2 1 2 1 2') == '13'"
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1 1 1 1 1\") == \"6\"\nassert solution(\"1 2 1 2 1 2\") == \"13\"\n"
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1 1 1 1 1\") == 6\nassert solution(\"1 2 1 2 1 2\") == 13"
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1 1 1 1\") == \"6\"\nassert solution(\"1 2 1 2 1 2\") == \"13\"\n"
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 6\nassert solution() == 13\nassert solution() == 13\nassert solution() == 13\nassert solution() == 13\nassert solution() == 13\n\nprint(solution())"
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1 1 1 1 1\") == \"6\"\nassert solution(\"1 2 1 2 1 2\") == \"13\"\n"
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '6\\n'\nassert solution(stdin) == '13\\n'"
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1 1 1 1 1\") == \"6\\n\"  # expected output: \"6\\n\"\nassert solution(\"1 2 1 2 1 2\") == \"13\\n\"  # expected output: \"13\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n2 3 4 6 9\\n') == '4'\nassert solution('9\\n1 2 3 5 6 7 8 9 10\\n') == '4'"
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n2 3 4 6 9\") == \"4\"\nassert solution(\"9\\n1 2 3 5 6 7 8 9 10\") == \"4\""
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2 3 4 6 9\") == \"4\"\nassert solution(\"9\\n1 2 3 5 6 7 8 9 10\") == \"4\"\n\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n2 3 4 6 9\") == \"4\"\nassert solution(\"9\\n1 2 3 5 6 7 8 9 10\") == \"4\""
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n2 3 4 6 9\") == \"4\\n\"\nassert solution(\"9\\n1 2 3 5 6 7 8 9 10\") == \"4\\n\"\n"
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n2 3 4 6 9\\n') == '4\\n'\nassert solution('9\\n1 2 3 5 6 7 8 9 10\\n') == '4\\n'"
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n2 3 4 6 9') == '4\\n'\nassert solution('9\\n1 2 3 5 6 7 8 9 10') == '4\\n'\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n2 3 4 6 9') == '4\\n'\nassert solution('9\\n1 2 3 5 6 7 8 9 10') == '4\\n'"
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2 3 4 6 9\") == \"4\"\nassert solution(\"9\\n1 2 3 5 6 7 8 9 10\") == \"4\""
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2 3 4 6 9\") == \"4\"\nassert solution(\"9\\n1 2 3 5 6 7 8 9 10\") == \"4\""
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3') == 'SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED'\nassert solution('2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n4\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n4\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n4\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n4\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 "
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n\") == \"SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED\\n\""
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n\") == \"SURGERY COMPLETE\\n\"\nassert solution(\"1\\n1\\nE\\n\") == \"SURGERY COMPLETE\\nDONE\"\nassert solution(\"3\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"SURGERY COMPLETE\", \"Test case 1 failed\"\nassert solution(stdin) == \"SURGERY COMPLETE\", \"Test case 2 failed\"\nassert solution(stdin) == \"SURGERY COMPLETE\", \"Test case 3 failed\"\nassert solution(stdin) == \"SURGERY COMPLETE\", \"Test case 4 failed\"\nassert solution(stdin) == \"SURGERY COMPLETE\", \"Test case 5 failed\"\nassert solution(stdin) == \"SURGERY COMPLETE\", \"Test case 6 failed\"\nassert solution(stdin) == \"SURGERY COMPLETE\", \"Test case 7 failed\"\nassert solution(stdin) == \"SURGERY COMPLETE\", \"Test case 8 failed\"\nassert solution(stdin) == \"SURGERY COMPLETE\", \"Test case 9 failed\"\nassert solution(stdin) == \"SURGERY COMPLETE\", \"Test case 10 failed\"\nassert solution(stdin) == \"SURGERY COMPLETE\", \"Test case 11 failed\"\nassert solution(stdin) == \"SURGERY COMPLETE\", \"Test case 12 failed\"\nassert solution(stdin) == \"SURGERY COMPLETE\", \"Test case 13 failed\"\nassert solution(stdin) == \"SURGERY COMPLETE\", \"Test case 14 failed\"\nassert solution(stdin) == \"SURGERY COMPLETE\", \"Test case 15 failed\"\nassert solution(stdin) == \"SURGERY COMPLETE\", \"Test case 16 failed\"\nassert solution(stdin) == \"SURGERY COMPLETE\", \"Test case 17 failed\"\nassert solution(stdin) == \"SURGERY COMPLETE\", \"Test case 18 failed\"\nassert solution(stdin) == \"SURGERY COMPLETE\", \"Test case 19 failed\"\nassert solution(stdin) == \"SURGERY COMPLETE\", \"Test case 20 failed\"\nassert solution(stdin) == \"SURGERY COMPLETE\", \"Test case 21 failed\"\nassert solution(stdin) == \"SURGERY COMPLETE\", \"Test case 22 failed\"\nassert solution(stdin) == \"SURGERY COMPLETE\", \"Test case 23 failed\"\nassert solution(stdin) == \"SURGERY COMPLETE\", \"Test case 24 failed\"\nassert solution(stdin) == \"SURGERY COMPLETE\", \"Test case 25 failed\"\nassert solution(stdin) == \"SURGERY COMPLETE\", \"Test case 26 failed\"\nassert solution(stdin) == \"SURGERY COMPLETE\", \"Test case 27 failed\"\nassert solution(stdin) == \"SURGERY COMPLETE\", \"Test case 28 failed\"\nassert solution(stdin) == \"SURGERY COMPLETE\", \"Test case 29 failed\"\nassert solution(stdin) == \"SURGERY COMPLETE\", \"Test case 30 failed\"\nassert solution(stdin) == \"SURGERY COMPLETE\", \"Test case 31 failed\"\nassert solution(stdin) == \"SURGERY COMPLETE\", \"Test case 32 failed\"\nassert solution(stdin) == \"SURGERY COMPLETE\", \"Test case 33 failed\"\nassert solution(stdin) == \"SURGERY COMPLETE\", \"Test case 34 failed\"\nassert solution(stdin) == \"SURGERY COMPLETE\", \"Test case 35 failed\"\nassert solution(stdin) == \"SURGERY COMPLETE\", \"Test case 36 failed\"\nassert solution(stdin) == \"SURGERY COMPLETE\", \"Test case 37 failed\"\nassert solution(stdin) == \"SURGERY COMPLETE\", \"Test case 38 failed\"\nassert solution(stdin) == \"SURGERY COMPLETE\", \"Test case 39 failed\"\nassert solution(stdin) == \"SURGERY COMPLETE\", \"Test case 40 failed\"\nassert solution(stdin) == \"SURGERY COMPLETE\", \"Test case 41 failed\"\nassert solution(stdin) == \"SURGERY COMPLETE\", \"Test case 42 failed\"\nassert solution(stdin) == \"SURGERY COMPLETE\", \"Test case 43 failed\"\nassert solution(stdin) == \"SURGERY COMPLETE\", \"Test case 44 failed\"\nassert solution(stdin) == \"SURGERY COMPLETE\", \"Test case 45 failed\"\nassert solution(stdin) == \"SURGERY COMPLETE\", \"Test case 46 failed\"\nassert solution(stdin) == \"SURGERY COMPLETE\", \"Test case 47 failed\"\n"
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"DONE\"\n"
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"DONE\""
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n\") == \"SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED\\n\""
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\") == \"SURGERY COMPLETE\"\nassert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\") == \"SURGERY FAILED\"\nassert solution(\"1\\n1\\n1 1 E 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n\") == \"SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED\"\n\nassert solution(\"1\\n2\\n1 1 1 E 1\\n1 1 1 E 1\\n1 1 1 E 1\\n1 1 1 E 1\\n\") == \"SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED\"\n\nassert solution(\"1\\n1\\n1 1 1 E 1\\n1 1 1 E 1\\n1 1 1 E 1\\n1 1 1 E 1\\n\") == \"SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED\""
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n\\nSURGERY COMPLETE\") == \"SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\"\nassert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n\\nSURGERY FAILED\") == \"SURGERY FAILED\""
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"9 2 5\") == \"6 5 8 3 4 1 9 2 7\"\nassert solution(\"3 2 1\") == \"1 2 3\""
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"9 2 5\\n\") == \"6 5 8 3 4 1 9 2 7\"\nassert solution(\"3 2 1\\n\") == \"1 2 3\"\nassert solution(\"10 1 1\\n\") == \"-1\""
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"1 2 3\"\nassert solution(2) == \"6 5 8 3 4 1\"\nassert solution(4) == -1\nassert solution(100) == \"6 5 8 3 4 1 9 2 7\"\nassert solution(10) == \"6 5 8 3 4 1\"\nassert solution(30) == \"6 5 8 3 4 1\""
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"9 2 5\") == \"6 5 8 3 4 1 9 2 7\"\nassert solution(\"3 2 1\") == \"1 2 3\"\nassert solution(\"3 2 5\") == \"-1\""
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), \"Input and Output do not match\""
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 2 1') == ['1', '2', '3']\nassert solution('9 2 5') == ['6', '5', '8', '3', '4', '1', '9', '2', '7']\nassert solution('10 10 10') == [-1]"
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"9 2 5\") == \"6 5 8 3 4 1 9 2 7\"\nassert solution(\"3 2 1\") == \"1 2 3\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"Test cases not matching\"\n"
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Expected output: {expected_output}, but got: {solution(input())}\""
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"9 2 5\") == \"6 5 8 3 4 1 9 2 7\"\nassert solution(\"3 2 1\") == \"1 2 3\""
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n3 2 1\\n\") == \"3\"\nassert solution(\"5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000\\n\") == \"5000000000\"\nassert solution(\"3 2\\n1 0 1\\n\") == \"2\"\nassert solution(\"4 4\\n2 8 4 1\\n\") == \"4\""
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\\n3 2 1\") == 3\nassert solution(\"5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000\") == 5000000000\nassert solution(\"3 2\\n1 0 1\") == 2\nassert solution(\"4 4\\n2 8 4 1\") == 4"
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 2\\n3 2 1\\n') == '3\\n'\nassert solution('5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000\\n') == '5000000000\\n'\nassert solution('3 2\\n1 0 1\\n') == '2\\n'\nassert solution('4 4\\n2 8 4 1\\n') == '4\\n'"
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2\\n3 2 1\\n\") == \"3\\n\"\nassert solution(\"5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000\\n\") == \"5000000000\\n\"\nassert solution(\"3 2\\n1 0 1\\n\") == \"2\\n\"\nassert solution(\"4 4\\n2 8 4 1\\n\") == \"4\\n\""
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2\\n3 2 1\") == \"3\"\nassert solution(\"5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000\") == \"5000000000\"\nassert solution(\"3 2\\n1 0 1\") == \"2\"\nassert solution(\"4 4\\n2 8 4 1\") == \"4\""
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    3 2\n    3 2 1\n    \"\"\"\n) == \"3\"\n\nassert solution(\n    \"\"\"\n    5 1\n    1000000000 1000000000 1000000000 1000000000 1000000000\n    \"\"\"\n) == \"5000000000\"\n\nassert solution(\n    \"\"\"\n    3 2\n    1 0 1\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    4 4\n    2 8 4 1\n    \"\"\"\n) == \"4\""
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\\n3 2 1\") == \"3\"\nassert solution(\"5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000\") == \"5000000000\"\nassert solution(\"3 2\\n1 0 1\") == \"2\"\nassert solution(\"4 4\\n2 8 4 1\") == \"4\""
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 2\\n3 2 1') == '3'\nassert solution('5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000') == '5000000000'\nassert solution('3 2\\n1 0 1') == '2'\nassert solution('4 4\\n2 8 4 1') == '4'\n"
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 2\\n3 2 1\\n') == 3\nassert solution('5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000\\n') == 5000000000\nassert solution('3 2\\n1 0 1\\n') == 2\nassert solution('4 4\\n2 8 4 1\\n') == 4"
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(str(3) +'' + str(2) + '\\n') == '3'\nassert solution(str(5) +'' + str(1) + '\\n') == '5000000000'\nassert solution(str(3) +'' + str(2) +'' + str(1) + '\\n') == '2'\nassert solution(str(4) +'' + str(2) +'' + str(8) +'' + str(4) +'' + str(1) + '\\n') == '4'"
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"bwwwbwwbw\") == 5, \"Expected 5, got {}\".format(solution(\"bwwwbwwbw\"))  # expected output: 5\nassert solution(\"bwwbwwb\") == 3, \"Expected 3, got {}\".format(solution(\"bwwbwwb\"))  # expected output: 3"
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"bwwwbwwbw\") == 5\nassert solution(\"bwwbwwb\") == 3"
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"bwwwbwwbw\") == \"5\", \"Expected 5, got {}\".format(solution(\"bwwwbwwbw\"))  # expected output: \"5\"\n\nassert solution(\"bwwbwwb\") == \"3\", \"Expected 3, got {}\".format(solution(\"bwwbwwb\"))  # expected output: \"3\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"bwwwbwwbw\") == \"5\"\nassert solution(\"bwwbwwb\") == \"3\""
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('bwwwbwwbw') == '5', \"Output: %r\" % solution('bwwwbwwbw') # expected output: '5'\nassert solution('bwwbwwb') == '3', \"Output: %r\" % solution('bwwbwwb') # expected output: '3'"
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"bwwwbwwbw\") == 5\nassert solution(\"bwwbwwb\") == 3"
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"bwwwbwwbw\") == 5, \"The correct output is: 5\"\nassert solution(\"bwwbwwb\") == 3, \"The correct output is: 3\""
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"bwwwbwwbw\") == \"5\"\nassert solution(\"bwwbwwb\") == \"3\""
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"bwwwbwwbw\") == 5, \"The solution is incorrect.\"\nassert solution(\"bwwbwwb\") == 3, \"The solution is incorrect.\""
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"bwwwbwwbw\") == \"5\", \"Test failed\"\nassert solution(\"bwwbwwb\") == \"3\", \"Test failed\""
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), \"Test failed\""
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 10, \"Expected 10, but got {}\".format(solution())"
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5\\n3 2\\n1 2\\n.....\\n.***. \\n...**\\n*....\\n\\n4 4\\n2 2\\n0 1\\n....\\n..*.\\n....\\n....\\n\\n\") == \"10\"\nassert solution(\"4 4\\n2 2\\n0 1\\n....\\n..*.\\n....\\n....\\n\") == \"7\""
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 10, \"The solution is incorrect.\""
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 5\\n3 2\\n1 2\\n.....\\n.***. \\n...**\\n*....\\n') == 10, \"The output is incorrect for the second example.\"\n\nassert solution('4 4\\n2 2\\n0 1\\n....\\n..*. \\n....\\n....\\n') == 7, \"The output is incorrect for the third example.\""
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(example1) == 10\nassert solution(example2) == 7"
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n4 5\n3 2\n1 2\n.....\n.***.\n...**\n*....\n''') == '10'\n\nassert solution('''\n4 4\n2 2\n0 1\n....\n..*.\n....\n....\n''') == '7'"
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5\\n3 2\\n1 2\\n.....\\n.***. \\n...** \\n*.... \\n\") == 10\nassert solution(\"4 4\\n2 2\\n0 1\\n....\\n..*. \\n.... \\n.... \\n\") == 7\n"
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 10\nassert solution() == 7"
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5\\n3 2\\n1 2\\n.....\\n.***. \\n...**\\n*....\\n\") == 10, \"The output should be 10.\"\nassert solution(\"4 4\\n2 2\\n0 1\\n....\\n..*.\\n....\\n....\\n\") == 7, \"The output should be 7.\"\nassert solution(\"4 10\\n1 2\\n2 3\\n4 5\\n6 7\\n8 9\\n10 11\\n12 13\\n14 15\\n16 17\\n18 19\\n20 21\\n22 23\\n24 25\\n26 27\\n28 29\\n30 31\\n32 33\\n34 35\\n36 37\\n38 39\\n40 41\\n42 43\\n44 45\\n46 47\\n48 49\\n50 51\\n52 53\\n54 55\\n56 57\\n58 59\\n60 61\\n62 63\\n64 65\\n66 67\\n68 69\\n70 71\\n72 73\\n74 75\\n76 77\\n78 79\\n80 81\\n82 83\\n84 85\\n86 87\\n88 89\\n90 91\\n92 93\\n94 95\\n96 97\\n98 99\\n100 101\\n102 103\\n104 105\\n106 107\\n108 109\\n110 111\\n112 113\\n114 115\\n116 117\\n118 119\\n120 121\\n122 123\\n124 125\\n126 127\\n128 129\\n130 131\\n132 133\\n134 135\\n136 137\\n138 139\\n140 141\\n142 143\\n144 145\\n146 147\\n148 149\\n150 151\\n152 153\\n154 155\\n156 157\\n158 159\\n160 161\\n162 163\\n164 165\\n166 167\\n168 169\\n170 171\\n172 173\\n174 175\\n176 177\\n178 179\\n180 181\\n182 183\\n184 185\\n186 187\\n188 189\\n190 191\\n192 193\\n194 195\\n196 197\\n198 199\\n200 201\\n202 203\\n204 205\\n206 207\\n208 209\\n210 211\\n212 213\\n214 215\\n216 217\\n218 219\\n220 221\\n222 223\\n224 225\\n226 227\\n228 22"
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Input\\n4\\n1 4 2 2\\n\\nOutput\\n2\\n\\nInput\\n6\\n1 2 4 4 4 9\\n\\nOutput\\n2\") == \"2\""
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == 'Output\\n2'\nassert solution(stdin) == 'Output\\n2'\nassert solution(stdin) == 'Output\\n2'"
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, but got: {solution(input())}\""
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 4 2 2\") == \"2\"\nassert solution(\"6\\n1 2 4 4 4 9\") == \"2\""
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n1 4 2 2\\n') == '2'\nassert solution('6\\n1 2 4 4 4 9\\n') == '2'"
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 'Output'"
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == 'Output: {}\\n'.format(solution(input()))"
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 4 2 2\") == \"2\"\nassert solution(\"6\\n1 2 4 4 4 9\") == \"2\"\n"
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_output, f\"Test case {test_case} failed: Expected output: {expected_output}, but got: {solution(stdin)}\"\nfor test_case in range(1, 10):\n    stdin = f\"Input\\n{test_case}\\n\"\n    expected_output = f\"Output\\n{test_case}\"\n    print(f\"\\nTest case {test_case}:\")\n    solution(stdin)"
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output"
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected, f\"expected '{expected}', got '{solution(stdin)}'\"\nfor test_case in test_cases:\n    assert solution(test_case) == f\"Solution for test case {test_case} is incorrect.\"\n"
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3 1\\naba\") == \"7\"\nassert solution(\"4 1 1\\nabcd\") == \"4\"\nassert solution(\"4 10 1\\naaaa\") == \"12\""
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3 1\\naba\") == \"7\"\nassert solution(\"4 1 1\\nabcd\") == \"4\"\nassert solution(\"4 10 1\\naaaa\") == \"12\""
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('aba') == '7'\nassert solution('abcd') == '4'\nassert solution('aaaa') == '12'"
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"aba\") == \"7\"\nassert solution(\"abcd\") == \"4\"\nassert solution(\"aaaa\") == \"12\"\n"
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3 1\\naba\") == 7\nassert solution(\"4 1 1\\nabcd\") == 4\nassert solution(\"4 10 1\\naaaa\") == 12"
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Input '{input()}'\\nOutput '{output()}'\\nMismatched output: '{output()}'\\n\""
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3, 3, 1) == \"7\"\nassert solution(4, 1, 1) == \"4\"\nassert solution(4, 10, 1) == \"12\""
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3 1\\naba\") == \"7\"\nassert solution(\"4 1 1\\nabcd\") == \"4\"\nassert solution(\"4 10 1\\naaaa\") == \"12\""
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1\") == \"1\\n\"\nassert solution(\"3 2\") == \"1\\n\"\nassert solution(\"4 3\") == \"1\\n\"\nassert solution(\"5 4\") == \"1\\n\"\nassert solution(\"6 5\") == \"2\\n\"\nassert solution(\"7 6\") == \"2\\n\"\nassert solution(\"8 7\") == \"2\\n\"\nassert solution(\"9 8\") == \"2\\n\"\nassert solution(\"10 9\") == \"3\\n\"\nassert solution(\"11 10\") == \"3\\n\"\nassert solution(\"12 11\") == \"3\\n\"\nassert solution(\"13 12\") == \"3\\n\"\nassert solution(\"14 13\") == \"3\\n\"\nassert solution(\"15 14\") == \"4\\n\"\nassert solution(\"16 15\") == \"4\\n\"\nassert solution(\"17 16\") == \"4\\n\"\nassert solution(\"18 17\") == \"4\\n\"\nassert solution(\"19 18\") == \"4\\n\"\nassert solution(\"20 19\") == \"5\\n\"\nassert solution(\"21 20\") == \"5\\n\"\nassert solution(\"22 21\") == \"5\\n\"\nassert solution(\"23 22\") == \"5\\n\"\nassert solution(\"24 23\") == \"5\\n\"\nassert solution(\"25 24\") == \"6\\n\"\nassert solution(\"26 25\") == \"6\\n\"\nassert solution(\"27 26\") == \"6\\n\"\nassert solution(\"28 27\") == \"6\\n\"\nassert solution(\"29 28\") == \"6\\n\"\nassert solution(\"30 29\") == \"7\\n\"\nassert solution(\"31 30\") == \"7\\n\"\nassert solution(\"32 31\") == \"7\\n\"\nassert solution(\"33 32\") == \"7\\n\"\nassert solution(\"34 33\") == \"7\\n\"\nassert solution(\"35 34\") == \"8\\n\"\nassert solution(\"36 35\") == \"8\\n\"\nassert solution(\"37 36\") == \"8\\n\"\nassert solution(\"38 37\") == \"8\\n\"\nassert solution(\"39 38\") == \"8\\n\"\nassert solution(\"40 39\") == \"9\\n\"\nassert solution(\"41 40\") == \"9\\n\"\nassert solution(\"42 41\") == \"9\\n\"\nassert solution(\"43 42\") == \"9\\n\"\nassert solution(\"44 43\") == \"10\\n\"\nassert solution(\"45 44\") == \"10\\n\"\nassert solution(\"46 45\") == \"10\\n\"\nassert solution(\"47 46\") == \"10\\n\"\nassert solution(\"48 47\") == \"11\\n\"\nassert solution(\"49 48\") == \"11\\n\"\nassert solution(\"50 49\") == \"11\\n\"\nassert solution(\"51 50\") == \"11\\n\"\nassert solution(\"52 51\") == \"12\\n\"\nassert solution(\"53 52\") == \"12\\n\"\nassert solution(\"54 53\") == \"12\\n\"\nassert solution(\"55 54\") == \"12\\n\"\nassert solution(\"56 55\") == \"13\\n\"\nassert solution(\"57 56\") == \"13\\n\"\nassert solution(\"58 57\") == \"13\\n\"\nassert solution(\"59 58\") == \"13\\n\"\nassert solution(\"60 59\") == \"14\\n\"\nassert solution(\"61 60\") == \"14\\n\"\nassert solution(\"62 61\") == \"14\\n\"\nassert solution(\"63 62\") == \"14\\n\"\nassert solution(\"64 63\") == \"15\\n\"\nassert solution(\"65 64\") == \"15\\"
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1\") == \"1\""
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"3 2\") == \"4\"\nassert solution(\"5 2\") == \"2\"\nassert solution(\"5 1\") == \"1\"\nassert solution(\"6 2\") == \"3\"\nassert solution(\"6 1\") == \"2\""
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '1\\n'\nprint('Correct')\n"
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1\") == \"1\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1\") == \"1\"\n"
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1\") == \"1\\n\"\nassert solution(\"1 3\") == \"2\\n\"\nassert solution(\"3 2\") == \"1\\n\"\nassert solution(\"1 2 3 4 5\") == \"1\\n\"\nassert solution(\"1 2 3 4 5 6 7 8 9\") == \"5\\n\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"4\\n\""
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin='2 1\\n') == '1\\n'\nassert solution(stdin='2 2\\n') == '1\\n'\nassert solution(stdin='2 3\\n') == '2\\n'\nassert solution(stdin='2 4\\n') == '2\\n'\nassert solution(stdin='2 5\\n') == '2\\n'"
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1\\n\") == \"1\\n\"\nassert solution(\"3 1\\n\") == \"2\\n\"\nassert solution(\"4 1\\n\") == \"3\\n\"\nassert solution(\"5 1\\n\") == \"4\\n\"\nassert solution(\"6 1\\n\") == \"5\\n\""
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"1\\n\"\n"
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n2 2 2 2\\n\") == 8, \"Invalid answer for the first example\"\nassert solution(\"4 -3\\n3 -6 -3 12\\n\") == 3, \"Invalid answer for the second example\""
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\n2 2 2 2\") == \"8\"\nassert solution(\"4 -3\\n3 -6 -3 12\") == \"3\"\nassert solution(\"1 1 2 3 4 5\") == \"1\""
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 2\\n2 2 2 2\\n') == '8\\n'\nassert solution('4 -3\\n3 -6 -3 12\\n') == '3\\n'"
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 8, \"The output should be 8.\""
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n2 2 2 2\") == 8\nassert solution(\"4 -3\\n3 -6 -3 12\") == 3"
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\n2 2 2 2\") == 8\nassert solution(\"4 -3\\n3 -6 -3 12\") == 3"
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Input\\n4 2\\n2 2 2 2\\n\\nOutput\\n8\\n\\nInput\\n4 -3\\n3 -6 -3 12\\n\\nOutput\\n3\\n\\n\") == \"8\\n\\n3\"\n\nassert solution(\"Input\\n4 2\\n2 2 2 2\\n\\nOutput\\n8\\n\\nInput\\n4 -3\\n3 -6 -3 12\\n\\nOutput\\n3\\n\\n\") == \"3\\n\\n3\""
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n2 2 2 2\") == 8\nassert solution(\"4 -3\\n3 -6 -3 12\") == 3\n"
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n4 2\n2 2 2 2\n''') == '8'\n\nassert solution('''\n4 -3\n3 -6 -3 12\n''') == '3'"
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n2 2 2 2\\n\") == 8\nassert solution(\"4 -3\\n3 -6 -3 12\\n\") == 3"
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 5 3 1 8\\nBerBank University\\nUniversity BerMall\\nUniversity BerBank\\n\") == \"11\\n\"\n\nassert solution(\"4 2 1 300 1000\\na A\\nA aa\\naa AA\\nA AA\") == \"5\\n\""
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 5 3 1 8\\nBerBank University\\nUniversity BerMall\\nUniversity BerBank\\n\") == \"11\"\nassert solution(\"4 2 1 300 1000\\na A\\nA aa\\naa AA\\nA a\\n\") == \"5\""
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 5 3 1 8\\nBerBank University\\nUniversity BerMall\\nUniversity BerBank') == '11\\n'\nassert solution('4 2 1 300 1000\\nA A\\nA aa\\naa AA\\nAA a') == '5\\n'"
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5 3 1 8\\nBerBank University\\nUniversity BerMall\\nUniversity BerBank\\n\") == \"11\"\nassert solution(\"4 2 1 300 1000\\na A\\nA aa\\naa AA\\nA a\\n\") == \"5\""
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 5 3 1 8\\nBerBank University\\nUniversity BerMall\\nUniversity BerBank\") == \"11\"\nassert solution(\"4 2 1 300 1000\\na A\\nA aa\\naa AA\\nAA a\") == \"5\"\n"
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 5 3 1 8\\nBerBank University\\nUniversity BerMall\\nUniversity BerBank\") == \"11\"\nassert solution(\"4 2 1 300 1000\\na A\\nA aa\\naa AA\\nA a\") == \"5\"\nassert solution(\"2 1 1 1000 100\") == \"0\""
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"11\\n\""
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 5 3 1 8\\nBerBank University\\nUniversity BerMall\\nUniversity BerBank\") == \"11\"\n\nassert solution(\"4 2 1 300 1000\\nA A\\nA aa\\naa AA\\nA a\") == \"5\""
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"3 5 3 1 8\nBerBank University\nUniversity BerMall\nUniversity BerBank\"\"\") == '11\\n'\n\nassert solution(\"\"\"4 2 1 300 1000\na A\nA aa\naa AA\nAA a\n\"\"\") == '5\\n'"
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 5 3 1 8\\nBerBank University\\nUniversity BerMall\\nUniversity BerBank\") == \"11\\n\"\nassert solution(\"4 2 1 300 1000\\nA A\\nA aa\\nA a\\nAA a\") == \"5\\n\""
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 1 1 4\") == \"YES\\n\"\nassert solution(\"5\\n1 1 5 2 1\") == \"NO\\n\""
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 1 1 4\\n\") == \"YES\"\nassert solution(\"5\\n1 1 5 2 1\\n\") == \"NO\""
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 1 1 4\") == \"YES\"\nassert solution(\"5\\n1 1 5 2 1\") == \"NO\""
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(4) == \"YES\"\nassert solution(5) == \"NO\"\n\nfrom typing import List\n"
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 1 1 4\\n\") == \"YES\\n\"\nassert solution(\"5\\n1 1 5 2 1\\n\") == \"NO\\n\""
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 1 1 4\") == \"YES\\n\"\nassert solution(\"5\\n1 1 5 2 1\") == \"NO\\n\"\n"
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 1 1 4\") == \"YES\"\nassert solution(\"5\\n1 1 5 2 1\") == \"NO\""
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Input\\n4\\n1 1 1 4\\n\") == \"YES\"\nassert solution(\"Input\\n5\\n1 1 5 2 1\\n\") == \"NO\""
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 1 1 4\") == \"YES\\n\"\nassert solution(\"5\\n1 1 5 2 1\") == \"NO\\n\""
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n1 1 1 4') == 'YES\\n'\nassert solution('5\\n1 1 5 2 1') == 'NO\\n'"
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n10 5 0 -5 -10') == '-15'\nassert solution('4\\n1 1 1 1') == '1'\nassert solution('3\\n5 1 -5') == '-5'\nassert solution('2\\n900 1000') == '1100'"
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n10 5 0 -5 -10\") == \"-15\"\nassert solution(\"4\\n1 1 1 1\") == \"1\"\nassert solution(\"3\\n5 1 -5\") == \"-5\"\nassert solution(\"2\\n900 1000\") == \"1100\"\n"
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\n10 5 0 -5 -10\\n\\n4\\n1 1 1 1\\n\\n3\\n5 1 -5\\n\\n2\\n900 1000\\n') == '-15\\n'\nassert solution('4\\n1 1 1 1\\n\\n3\\n5 1 -5\\n\\n2\\n900 1000\\n') == '1\\n'\nassert solution('3\\n5 1 -5\\n\\n2\\n900 1000\\n') == '-5\\n'\nassert solution('2\\n900 1000\\n') == '1100\\n'"
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n10 5 0 -5 -10\\n\") == \"-15\\n\"\nassert solution(\"4\\n1 1 1 1\\n\") == \"1\\n\"\nassert solution(\"3\\n5 1 -5\\n\") == \"-5\\n\"\nassert solution(\"2\\n900 1000\\n\") == \"1100\\n\"\n\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n10 5 0 -5 -10\\n\\n4\\n1 1 1 1\\n\\n3\\n5 1 -5\\n\\n2\\n900 1000\\n\") == \"-15\\n\"\nassert solution(\"4\\n1 1 1 1\\n\\n3\\n5 1 -5\\n\\n2\\n900 1000\\n\") == \"1\\n\"\nassert solution(\"3\\n5 1 -5\\n\\n2\\n900 1000\\n\") == \"-5\\n\"\nassert solution(\"2\\n900 1000\\n\") == \"1100\\n\""
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n10 5 0 -5 -10\") == \"-15\"\nassert solution(\"4\\n1 1 1 1\") == \"1\"\nassert solution(\"3\\n5 1 -5\") == \"-5\"\nassert solution(\"2\\n900 1000\") == \"1100\""
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n10 5 0 -5 -10\\n\\n4\\n1 1 1 1\\n\\n3\\n5 1 -5\\n\\n2\\n900 1000\\n\\n-5') == '-15\\n\\n1\\n\\n-5\\n\\n1100'\nassert solution('4\\n1 1 1 1\\n\\n3\\n5 1 -5\\n\\n2\\n900 1000\\n\\n-5') == '1\\n\\n-5\\n\\n1100'\nassert solution('3\\n5 1 -5\\n\\n2\\n900 1000\\n\\n-5') == '-5\\n\\n-5\\n\\n1000'\nassert solution('2\\n900 1000\\n\\n-5') == '1100\\n\\n1100\\n\\n1000'"
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n10 5 0 -5 -10\") == \"-15\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"1\\n\"\nassert solution(\"3\\n5 1 -5\") == \"-5\\n\"\nassert solution(\"2\\n900 1000\") == \"1100\\n\""
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n10 5 0 -5 -10\\n\") == \"-15\"\nassert solution(\"4\\n1 1 1 1\\n\") == \"1\"\nassert solution(\"3\\n5 1 -5\\n\") == \"-5\"\nassert solution(\"2\\n900 1000\\n\") == \"1100\""
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, \"Expected output: {}, Received output: {}\".format(expected_output, solution(input()))"
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"YES\"\nassert solution(\"3\\n1 2\\n2 3\\n\") == \"NO\"\nassert solution(\"5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"NO\""
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Input\\n2\\n1 2\\n\") == \"YES\\n\"\nassert solution(\"Input\\n3\\n1 2\\n2 3\\n\") == \"NO\\n\"\nassert solution(\"Input\\n5\\n1 2\\n1 3\\n1 4\\n2 5\\n\") == \"NO\\n\"\nassert solution(\"Input\\n6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"YES\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"NO\"\nassert solution(4) == \"NO\"\nassert solution(5) == \"NO\"\nassert solution(6) == \"YES\"\nassert solution(7) == \"NO\"\nassert solution(8) == \"NO\""
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"YES\"\nassert solution(\"3\\n1 2\\n2 3\\n\") == \"NO\"\nassert solution(\"5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"NO\"\nassert solution(\"6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"YES\"\n\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"YES\"\nassert solution(\"3\\n1 2\\n2 3\\n\") == \"NO\"\nassert solution(\"5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"NO\"\nassert solution(\"6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"YES\""
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"6\") == \"NO\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"NO\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"1\") == \"YES\""
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Input\\n2\\n1 2\\n\\nOutput\\nYES\\nInput\\n3\\n1 2\\n2 3\\n\\nOutput\\nNO\\nInput\\n5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\\nOutput\\nYES\") == \"YES\"\nassert solution(\"Input\\n3\\n1 2\\n2 3\\n\\nOutput\\nNO\\nInput\\n5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\\nOutput\\nYES\") == \"NO\"\nassert solution(\"Input\\n5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\\nOutput\\nNO\\nInput\\n6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\\nOutput\\nYES\") == \"NO\""
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"NO\"\nassert solution(4) == \"NO\"\nassert solution(5) == \"NO\"\nassert solution(6) == \"YES\""
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"YES\", \"Expected YES but got {}\".format(solution(stdin))"
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"YES\""
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Input\\n3\\n1 2 3\\n\\nOutput\\n1\\n2 \\nInput\\n2\\n2 6\\n\\nOutput\\n0\\ndef solution(stdin: str) -> str:\\n    pass\") == \"Output\\n1\\n2 \\nInput\\n2\\n2 6\\n\\nOutput\\n0\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 1\nassert solution(2) == 0"
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n1 2 3\\n2\\n2 6\\n') == '1\\n2 6\\n'"
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1\"\nassert solution() == \"0\"\nassert solution() == \"2 2\"\nassert solution() == \"1 3\"\nassert solution() == \"0 3\"\nassert solution() == \"1 1 2 3\"\nassert solution() == \"3\""
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1\\n2 3\"\nassert solution() == \"0\\n2 3\"\nassert solution() == \"1\\n2 3\"\nassert solution() == \"0\\n2 3\"\n"
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"1\\n2\\n3\\n\"\nassert solution() == \"0\\n\"\n"
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3\") == \"1\"\nassert solution(\"2 6\") == \"0\""
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 1\nassert solution(2) == 0"
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 1\nassert solution(2) == 0"
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\naab\\nccb\") == \"6\\n\", \"Sample Output incorrect\""
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\naab\\nccb\") == \"6\"\n"
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\naab\\nccb\") == \"6\"\nprint(\"All test cases pass\")"
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\naab\\nbbb\\n\") == \"6\\n\"\nassert solution(\"4\\naab\\nbbb\\n\") == \"12\\n\"\nassert solution(\"5\\naab\\nbbb\\n\") == \"18\\n\"\nassert solution(\"6\\naab\\nbbb\\n\") == \"24\\n\"\nassert solution(\"7\\naab\\nbbb\\n\") == \"30\\n\"\nassert solution(\"8\\naab\\nbbb\\n\") == \"36\\n\"\nassert solution(\"9\\naab\\nbbb\\n\") == \"42\\n\"\nassert solution(\"10\\naab\\nbbb\\n\") == \"48\\n\"\nassert solution(\"11\\naab\\nbbb\\n\") == \"54\\n\"\nassert solution(\"12\\naab\\nbbb\\n\") == \"60\\n\"\nassert solution(\"13\\naab\\nbbb\\n\") == \"66\\n\"\nassert solution(\"14\\naab\\nbbb\\n\") == \"72\\n\"\nassert solution(\"15\\naab\\nbbb\\n\") == \"78\\n\"\nassert solution(\"16\\naab\\nbbb\\n\") == \"84\\n\"\nassert solution(\"17\\naab\\nbbb\\n\") == \"90\\n\"\nassert solution(\"18\\naab\\nbbb\\n\") == \"96\\n\"\nassert solution(\"19\\naab\\nbbb\\n\") == \"102\\n\"\nassert solution(\"20\\naab\\nbbb\\n\") == \"108\\n\"\nassert solution(\"21\\naab\\nbbb\\n\") == \"114\\n\"\nassert solution(\"22\\naab\\nbbb\\n\") == \"120\\n\"\nassert solution(\"23\\naab\\nbbb\\n\") == \"126\\n\"\nassert solution(\"24\\naab\\nbbb\\n\") == \"132\\n\"\nassert solution(\"25\\naab\\nbbb\\n\") == \"138\\n\"\nassert solution(\"26\\naab\\nbbb\\n\") == \"144\\n\"\nassert solution(\"27\\naab\\nbbb\\n\") == \"150\\n\"\nassert solution(\"28\\naab\\nbbb\\n\") == \"156\\n\"\nassert solution(\"29\\naab\\nbbb\\n\") == \"162\\n\"\nassert solution(\"30\\naab\\nbbb\\n\") == \"168\\n\"\nassert solution(\"31\\naab\\nbbb\\n\") == \"174\\n\"\nassert solution(\"32\\naab\\nbbb\\n\") == \"180\\n\"\nassert solution(\"33\\naab\\nbbb\\n\") == \"186\\n\"\nassert solution(\"34\\naab\\nbbb\\n\") == \"192\\n\"\nassert solution(\"35\\naab\\nbbb\\n\") == \"198\\n\"\nassert solution(\"36\\naab\\nbbb\\n\") == \"204\\n\"\nassert solution(\"37\\naab\\nbbb\\n\") == \"210\\n\"\nassert solution(\"38\\naab\\nbbb\\n\") == \"216\\n\"\nassert solution(\"39\\naab\\nbbb\\n\") == \"222\\n\"\nassert solution(\"40\\naab\\nbbb\\n\") == \"228\\n\"\nassert solution(\"41\\naab\\nbbb\\n\") == \"234\\n\"\nassert solution(\"42\\naab\\nbbb\\n\") == \"240\\n\"\nassert solution(\"43\\naab\\nbbb\\n\") == \"246\\n\"\nassert solution(\"44\\naab\\nbbb\\n\") == \"252\\n\"\nassert solution(\"45\\naab\\nbbb\\n\") == \"258\\n\"\nassert solution(\"46\\naab\\nbbb\\n\") == \"264\\n\"\nassert solution(\"47\\naab\\nbbb\\n\") == \"270\\n\"\nassert solution(\"48\\naab\\nbbb\\n\") =="
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\naab\\nccb\\n') == '6'\n"
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\naab\\nccb\") == \"6\\n\"\nassert solution(\"4\\naabb\\nbbbb\") == \"24\\n\"\nassert solution(\"1\\na\\na\\na\\na\") == \"1\\n\"\nassert solution(\"1\\na\\na\\na\\na\\nb\") == \"2\\n\""
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin='3\\naab\\ccb\\n') == '6\\n'\nassert solution(stdin='4\\nbbb\\n') == '6\\n'\nassert solution(stdin='5\\naabcc\\n') == '10\\n'\nassert solution(stdin='6\\nabb\\nccc\\n') == '6\\n'\nassert solution(stdin='7\\nabbcc\\nddd\\n') == '10\\n'\nassert solution(stdin='8\\nabab\\nabbcc\\nddd\\n') == '10\\n'\nassert solution(stdin='9\\nababa\\nabbccbb\\nddd\\n') == '10\\n'"
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"6\\n\", \"The solution is incorrect.\""
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\naab\\nccb\\n\") == \"6\"\nassert solution(\"5\\nabc\\ndef\\nghi\\njkl\\nmno\\n\") == \"12\"\n"
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\naab\\nccb\\n') == '6\\n'\nassert solution('4\\naa\\nbb\\ncc\\ndd\\ne\\n') == '8\\n'\nassert solution('5\\naabb\\ncccc\\ndddd\\neeee\\n') == '10\\n'\nassert solution('6\\naabbcde\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\n') == '20\\n'\nassert solution('7\\naabbcde\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\nabababcd\\n"
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"100 100 5\\n5 2 1 2 1\") == \"YES\"\nassert solution(\"100 8 5\\n5 2 1 2 1\") == \"NO\"\nassert solution(\"100 100 7\\n1 2 3 4 5 6 7\") == \"NO\""
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('100 100 5\\n5 2 1 2 1') == 'YES'\nassert solution('100 8 5\\n5 2 1 2 1') == 'NO'\nassert solution('100 100 7\\n1 2 3 4 5 6 7') == 'NO'"
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n100 100 5\n5 2 1 2 1\n''') == 'YES'\n\nassert solution('''\n100 8 5\n5 2 1 2 1\n''') == 'NO'\n\nassert solution('''\n100 100 7\n1 2 3 4 5 6 7\n''') == 'NO'"
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"100 100 5\\n5 2 1 2 1\") == \"YES\"\nassert solution(\"100 8 5\\n5 2 1 2 1\") == \"NO\"\nassert solution(\"100 100 7\\n1 2 3 4 5 6 7\") == \"NO\"\n"
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('100 100 5\\n5 2 1 2 1') == 'YES'\nassert solution('100 8 5\\n5 2 1 2 1') == 'NO'\nassert solution('100 100 7\\n1 2 3 4 5 6 7') == 'NO'"
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''100 100 5\n5 2 1 2 1''') == 'YES'\nassert solution('''100 8 5\n5 2 1 2 1''') == 'NO'\nassert solution('''100 100 7\n1 2 3 4 5 6 7''') == 'NO'"
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('100 100 5\\n5 2 1 2 1\\n') == 'YES\\n'\nassert solution('100 8 5\\n5 2 1 2 1\\n') == 'NO\\n'\nassert solution('100 100 7\\n1 2 3 4 5 6 7\\n') == 'NO\\n'"
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"100 100 5\\n5 2 1 2 1\\n\") == \"YES\"\nassert solution(\"100 8 5\\n5 2 1 2 1\\n\") == \"NO\"\nassert solution(\"100 100 7\\n1 2 3 4 5 6 7\\n\") == \"NO\""
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"100 100 5\\n5 2 1 2 1\\n\") == \"YES\"\nassert solution(\"100 8 5\\n5 2 1 2 1\\n\") == \"NO\"\nassert solution(\"100 100 7\\n1 2 3 4 5 6 7\\n\") == \"NO\""
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"100 100 5\\n5 2 1 2 1\\n\") == \"YES\"\nassert solution(\"100 8 5\\n5 2 1 2 1\\n\") == \"NO\"\nassert solution(\"100 100 7\\n1 2 3 4 5 6 7\\n\") == \"NO\"\n\nassert solution(\"100 100 10\\n1 2 3 4 5 6 7 8\\n\") == \"YES\"\n\nassert solution(\"100 100 10\\n1 2 3 4 5 6 7 8\\n\") == \"YES\""
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"3\"\n\nimport sys"
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 2\\n4 1 5 10\\n1 4 10 5\") == \"4\\n\"\nassert solution(\"7 6\\n2 1 2 1\\n4 2 4 3\\n2 5 2 5\\n2 3 5 3\\n1 2 1 2\\n3 2 5 3\") == \"3\\n\"\n"
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 2\\n4 1 5 10\\n1 4 10 5\\n\") == \"4\\n\"\nassert solution(\"7 6\\n2 1 2 1\\n4 2 4 3\\n2 5 2 5\\n2 3 5 3\\n1 2 1 2\\n3 2 5 3\\n\") == \"3\\n\""
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == 'output', 'The output is incorrect.'"
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(str(input())) == \"Output\"\n"
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 2\\n4 1 5 10\\n1 4 10 5\\n\") == \"4\"\nassert solution(\"7 6\\n2 1 2 1\\n4 2 4 3\\n2 5 2 5\\n2 3 5 3\\n1 2 1 2\\n3 2 5 3\\n\") == \"3\""
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(str(input())) == \"Output\""
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 2\\n4 1 5 10\\n1 4 10 5\\n\") == \"4\"\nassert solution(\"7 6\\n2 1 2 1\\n4 2 4 3\\n2 5 2 5\\n2 3 5 3\\n1 2 1 2\\n3 2 5 3\\n\") == \"3\"\n"
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()\nfor input_, output_ in zip(input_data, output_data):\n    assert solution(input_) == output_"
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 2\\n4 1 5 10\\n1 4 10 5\") == \"4\"\nassert solution(\"7 6\\n2 1 2 1\\n4 2 4 3\\n2 5 2 5\\n2 3 5 3\\n1 2 1 2\\n3 2 5 3\") == \"3\""
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n5 3\\n1 5 2 6 1\\n1 6\\n6\\n3 2\\n1 2 3\\n4 3\\n3 1 2 3\\n10 3\\n1 2 3 4 5 6 7 8 9 10\") == \"no\\nyes\\nyes\\nno\\nyes\""
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 'yes\\n', 'The solution is not correct'\nassert solution() == 'yes\\n', 'The solution is not correct'\nassert solution() == 'yes\\n', 'The solution is not correct'\nassert solution() == 'yes\\n', 'The solution is not correct'\n"
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n5 3\\n1 5 2 6 1\\n1 6\\n6\\n3 2\\n1 2 3\\n4 3\\n3 1 2 3\\n10 3\\n1 2 3 4 5 6 7 8 9 10\") == \"no\\nyes\\nyes\\nyes\\nno\""
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Output mismatch: expected {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n5 3\\n1 5 2 6 1\\n1 6\\n6\\n3 2\\n1 2 3\\n4 3\\n3 1 2 3\\n10 3\\n1 2 3 4 5 6 7 8 9 10\") == \"no\\nyes\\nyes\\nno\\nyes\""
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n    5\n    5 3\n    1 5 2 6 1\n    1 6\n    6\n    3 2\n    1 2 3\n    4 3\n    3 1 2 3\n    10 3\n    1 2 3 4 5 6 7 8 9 10\n    ''') == 'no'\nassert solution('''\n    5\n    5 3\n    1 5 2 6 1\n    1 6\n    6\n    3 2\n    1 2 3\n    4 3\n    3 1 2 3\n    10 3\n    1 2 3 4 5 6 7 8 9 10\n    ''') == 'yes'\nassert solution('''\n    5\n    5 3\n    1 5 2 6 1\n    1 6\n    6\n    3 2\n    1 2 3\n    4 3\n    3 1 2 3\n    10 3\n    1 2 3 4 5 6 7 8 9 10\n    ''') == 'yes'\nassert solution('''\n    5\n    5 3\n    1 5 2 6 1\n    1 6\n    6\n    3 2\n    1 2 3\n    4 3\n    3 1 2 3\n    10 3\n    1 2 3 4 5 6 7 8 9 10\n    ''') == 'no'"
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n5 3\\n1 5 2 6 1\\n1 6\\n6\\n3 2\\n1 2 3\\n4 3\\n3 1 2 3\\n10 3\\n1 2 3 4 5 6 7 8 9 10\") == \"no\\nyes\\nyes\\nno\\nyes\""
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 'no'\nassert solution() == 'yes'\nassert solution() == 'yes'\nassert solution() == 'no'\nassert solution() == 'yes'"
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\n5 3\\n1 5 2 6 1\\n1 6\\n6\\n3 2\\n1 2 3\\n4 3\\n3 1 2 3\\n10 3\\n1 2 3 4 5 6 7 8 9 10\\n') == 'no\\nyes\\nyes\\nno\\nyes'"
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 'no'\nassert solution(4) == 'yes'\nassert solution(5) == 'yes'\nassert solution(6) == 'no'\nassert solution(7) == 'yes'"
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n1 3\\n2 5\\n4 5\") == \"2\\n1 0 2 1 0\"\nassert solution(\"4 2\\n1 4\\n2 4\\n\") == \"3\\n5 2 0 1\""
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n1 3\\n2 5\\n4 5\") == \"2\\n1 0 2 1 0\"\nassert solution(\"4 2\\n1 4\\n2 4\\n\") == \"3\\n5 2 0 1\"\n"
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n1 3\\n2 5\\n4 5\\n\") == \"2\\n1 0 2 1 0\\n\"\nassert solution(\"4 2\\n1 4\\n2 4\\n\") == \"3\\n5 2 0 1\\n\"\nassert solution(\"4 3\\n1 4\\n2 4\\n3 5\\n\") == \"3\\n5 2 0 1\\n\""
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '2'\nassert solution() == '1 0 2 1 0'\nassert solution() == '3'\nassert solution() == '5 2 0 1'"
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(5, 3) == \"2\"\nassert solution(4, 2) == \"3\"\nassert solution(4, 1) == \"5\"\nassert solution(5, 2) == \"5\"\n"
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n1 3\\n2 5\\n4 5\\n\") == \"2\\n1 0 2 1 0\\n\"\nassert solution(\"4 2\\n1 4\\n2 4\\n\") == \"3\\n5 2 0 1\\n\"\n\nassert solution(\"5 3\\n1 3\\n2 5\\n4 5\\n\") == \"2\\n1 0 2 1 0\\n\"\nassert solution(\"4 2\\n1 4\\n2 4\\n\") == \"3\\n5 2 0 1\\n\""
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected"
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\nr\"\"\"\n5 3\n1 3\n2 5\n4 5\n\"\"\") == \"2\\n1 0 2 1 0\"\n\nassert solution(\nr\"\"\"\n4 2\n1 4\n2 4\n\"\"\") == \"3\\n5 2 0 1\"\n\nassert solution(\nr\"\"\"\n5 3\n1 3\n2 5\n3 4\n4 5\n\"\"\") == \"4\\n3 1 2 0\"\n\nassert solution(\nr\"\"\"\n4 2\n1 4\n2 4\n3 5\n\"\"\") == \"5\\n3 1 2 0\"\n\nassert solution(\nr\"\"\"\n5 3\n1 3\n2 5\n4 5\n6 5\n\"\"\") == \"5\\n3 1 2 0\"\n\nassert solution(\nr\"\"\"\n6 5\n1 5\n2 4\n3 3\n4 2\n5 1\n\"\"\") == \"6\\n5 1 0 0\""
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n1 3\\n2 5\\n4 5\") == \"2\\n1 0 2 1 0\\n\"\nassert solution(\"4 2\\n1 4\\n2 4\\n\") == \"3\\n5 2 0 1\\n\""
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Test case failed. Input: {input()}, Output: {output}\""
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n1 0 1\\n2 1 3\\n2 1 2\\n2 2 3\") == \"NO\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n1 2\\n2 1 3\\n\") == \"YES\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n2 1 2\\n1 3\\n\") == \"NO\""
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n1 0 1\\n2 1 3\\n2 1 2\\n2 2 3\") == \"NO\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n1 2\\n2 1 3\") == \"YES\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n2 1 2\\n1 3\") == \"NO\"\n"
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n1 0 1\\n2 1 3\\n2 1 2\\n2 2 3\") == \"NO\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n1 2\\n2 1 3\\n\") == \"YES\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n2 1 2\\n1 3\\n\") == \"NO\""
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n1 0 1\\n2 1 3\\n2 1 2\\n2 2 3\") == \"NO\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n1 2\\n2 1 3\\n\") == \"YES\""
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n1 0 1\\n2 1 3\\n2 1 2\\n2 2 3\") == \"NO\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n1 2\\n2 1 3\") == \"YES\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n2 1 2\\n1 3\") == \"NO\""
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"YES\"\nprint(\"PASSED\")"
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n1 0 1\\n2 1 3\\n2 1 2\\n2 2 3\") == \"YES\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n1 2\\n2 1 3\\n\") == \"NO\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n2 1 2\\n1 3\\n\") == \"NO\""
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Solution: {solution(input())}, Expected output: {expected_output}\""
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('Input') == 'YES\\n'\nassert solution('Input') == 'NO\\n'"
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == # Replace with your solution"
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''(((#)((#)\n''') == 1, \"Test 1 failed\")\nassert solution('''()((#((#(#()\n''') == 2, \"Test 2 failed\")\nassert solution('''#''') == -1, \"Test 3 failed\")\nassert solution('''(#)''') == -1, \"Test 4 failed\")\n"
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('(((#)((#)')) == 1\nassert solution('()((#((#(#()')) == 2\nassert solution('#') == -1\nassert solution('(#)') == -1"
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''(((#)((#)\n''') == 1\nassert solution('''()((#((#(#()\n''') == 2\nassert solution('''#\n''') == -1\nassert solution('''(#)\n''') == -1"
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n(((#)((#)\n\n()((#((#(#()"
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''(((#)((#)\n''') == '1\\n2\\n', 'Example 1'\nassert solution('''()((#((#(#()\n''') == '2\\n2\\n1\\n', 'Example 2'\nassert solution('''#\n''') == '-1\\n', 'Example 3'\nassert solution('''(#)\n''') == '-1\\n', 'Example 4'\nassert solution('''#\n''') == '-1\\n', 'Example 5'\nprint('All test cases passed!')"
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(solution(solution(solution(solution(solution(solution(\"(((#)((#)\")))))))))) == \"1\\n2\\n2\\n1\\n2\"\nassert solution(solution(solution(solution(solution(solution(solution(\"((((#)((#)\")))))))))) == \"2\\n2\\n1\\n2\"\nassert solution(solution(solution(solution(solution(solution(\"((((#)((#)\")))))))))) == \"2\\n2\\n1\\n2\"\nassert solution(solution(solution(solution(solution(solution(\"(())())))))))))) == \"2\\n2\\n1\\n2\"\nassert solution(solution(solution(solution(solution(solution(\"((((#)((#)\")))))))))) == \"-1\\n-1\""
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(b'''((#)((#)\n\nOutput\n1\n2\n\nInput\n()((#((#(#()\n\nOutput\n2\n2\n1\nInput\n"
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"(((#)((#)\n\nOutput\n1\n2\n\"\"\") == 1)\n\nassert solution(\"\"\"()((#((#(#()\n\nOutput\n2\n2\n\"\"\") == 2)\n\nassert solution(\"\"\"#\"\"\") == -1)\n\nassert solution(\"\"\"(#)\"\"\") == -1"
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n(((#)((#)\n''') == 1, \"Malek should have found the treasure map.\")\nassert solution('''\n()((#((#(#()\n''') == 2, \"Malek should have found the treasure map.\")\nassert solution('''\n"
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == '-1\\nxoxox'\nassert solution(\"4 0\") == '16\\no'\nassert solution(\"0 4\") == '-16\\no'"
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '15', \"Expected output: -1\\nActual output: {}.\".format(solution(input()))"
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == -1\nassert solution(\"4 0\") == 16\nassert solution(\"0 4\") == -16"
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(solution) == '-1\\nxoxox'\nassert solution(solution) == '16\\no'\nassert solution(solution) == '-16\\nx'\nassert solution(solution) == '-16\\nxo'\n"
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n4 0\\n0 4\\n\") == \"-1\\nxoxox\\n16\\noooo\\n-16\\nxxxx\\ndef solution(stdin: str) -> str:\\npass\\n\""
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Your code is incorrect. Please see the examples and the solution provided.\""
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"-1\\nxoxox\\n\"\nassert solution(\"4 0\") == \"16\\no\\n\"\nassert solution(\"0 4\") == \"-16\\no\\n\""
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '-1', '-1 is not equal to expected output'"
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 3') == '-1\\nxoxox\\n'\nassert solution('4 0') == '16\\no'\nassert solution('0 4') == '-16\\no'\n\nfrom sys import stdin"
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Test failed: expected output '{output()}' but got '{solution(input())}'\""
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1 1\") == \"17\"\n"
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"17\", \"The correct answer is not printed. Please fix the code.\"\n"
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"17\\n\""
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1 1\") == \"17\"\n"
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"17\", \"The answer is incorrect.\""
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1\") == \"17\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1 1\") == \"17\", \"Sample Input does not pass the test set.\""
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 1 1') == '17', \"Invalid input\"\n\nN, M, K = map(int, input().split())\n\nalice_wins = 0\nfor i in range(K):\n    alice_deck = [x for x in range(N) if (x+i) % 3 == 0]\n    if alice_deck:\n        alice_wins += 1\n        break\n\nbob_wins = 0\nfor i in range(M):\n    bob_deck = [x for x in range(N) if (x+i) % 3 == 1]\n    if bob_deck:\n        bob_wins += 1\n        break\n\ncharlie_wins = 0\nfor i in range(K):\n    charlie_deck = [x for x in range(N) if (x+i) % 3 == 2]\n    if charlie_deck:\n        charlie_wins += 1\n        break\n\ntotal_wins = alice_wins + bob_wins + charlie_wins\nprint(total_wins % (10**9+7))"
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 1 1') == '17'\n"
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1 1\") == \"17\""
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n1 2 1\\n2 1 2\") == \"2 2 2\\n2 2 2\\n\"\nassert solution(\"2 2\\n1 2\\n3 4\") == \"2 3\\n3 2\\n\""
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_data) == expected_output, f\"Expected output: {expected_output}\\nActual output: {solution(input_data)}\""
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"\"\"\n2 2 \n3 2 \n\"\"\""
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\n1 2 1\\n2 1 2\") == \"2 2 2 \\n2 2 2 \\n\"\nassert solution(\"2 2\\n1 2\\n3 4\") == \"2 3 \\n3 2 \\n\""
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_string) == output_string, f\"Test case failed. Input: {input_string}, Output: {output_string}\" for input_string, output_string in zip(test_input, test_output)"
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"\"\"\n2 2 2 \n2 2 2 \n\"\"\""
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"Test failed\"\nprint(\"Test passed\")"
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 3\\n1 2 1\\n2 1 2\\n') == '2 2 2 \\n2 2 2 \\n'\nassert solution('2 2\\n1 2\\n3 4\\n') == '2 3 \\n3 2 \\n'"
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n1 2 1\\n2 1 2\") == \"2 2 2\\n2 2 2\\n\"\nassert solution(\"2 2\\n1 2\\n3 4\") == \"2 3 \\n3 2 \\n\"\n\nfrom typing import List"
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n1 2 1\\n2 1 2\") == \"2 2 2\\n2 2 2\\n2 2 2\\n\"\nassert solution(\"2 2\\n1 2\\n3 4\") == \"2 3\\n3 2\\n\""
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 1\\n0 1\\n2 1\\n') == '332748119\\n332748119\\n'\nassert solution('1 2\\n1\\n1\\n') == '3\\n'\nassert solution('3 3\\n0 1 1\\n4 3 5\\n') == '160955686\\n185138929\\n974061117\\n'"
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 1\\n0 1\\n2 1') == '332748119'\nassert solution('1 2\\n1') == '3'\nassert solution('3 3\\n0 1 1\\n4 3 5') == '160955686'\nassert solution('2 2\\n2 1 1') == '665348800'\nassert solution('3 3\\n0 1 1\\n4 3 5') == '160955686'\nassert solution('3 2\\n0 1 1\\n4 3 5') == '1592925422'"
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 1\\n0 1\\n2 1') == '332748119'\nassert solution('1 2\\n1') == '3'\nassert solution('3 3\\n0 1 1\\n4 3 5') == '160955686'\nassert solution('1 1\\n2 2\\n3 3\\n4 4') == '160955686'\n"
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1\\n0 1\\n2 1\\n\") == \"332748119\\n332748119\\n\"\nassert solution(\"1 2\\n1\\n1\\n\") == \"3\\n\"\nassert solution(\"3 3\\n0 1 1\\n4 3 5\\n\") == \"160955686\\n185138929\\n974061117\\n\""
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '332748119\\n332748119\\n' # correct output\n"
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1\\n0 1\\n2 1\") == \"332748119\\n332748119\\n\"\nassert solution(\"1 2\\n1\") == \"3\\n\"\nassert solution(\"3 3\\n0 1 1\\n4 3 5\") == \"160955686\\n185138929\\n974061117\\n\""
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output\nprint(solution(input()))"
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"332748119\\n332748119\\n3\\n160955686\\n185138929\\n974061117\""
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1\\n0 1\\n2 1\\n\") == \"332748119\\n332748119\\n\"\nassert solution(\"1 2\\n1\\n1\\n\") == \"3\\n\"\nassert solution(\"3 3\\n0 1 1\\n4 3 5\\n\") == \"160955686\\n185138929\\n974061117\\n\"\n"
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1\\n0 1\\n2 1\\n\") == \"332748119\\n332748119\\n\"\nassert solution(\"1 2\\n1\\n1\\n\") == \"3\\n\"\nassert solution(\"3 3\\n0 1 1\\n4 3 5\\n\") == \"160955686\\n185138929\\n974061117\\n\""
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), \"Test failed. Expected: {}, Received: {}\".format(output(), solution(input()))"
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(read_input()) == \"11\", \"Test 1\"\nassert solution(read_input()) == \"11\", \"Test 2\"\nassert solution(read_input()) == \"6\", \"Test 3\"\nassert solution(read_input()) == \"102\", \"Test 4\"\nassert solution(read_input()) == \"6\", \"Test 5\""
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n3 1 5 2 6\") == \"11\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"6\\n\"\nassert solution(\"5\\n1 100 101 100 1\") == \"102\\n\""
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n3 1 5 2 6\\n5\\n1 2 3 4 5\\n5\\n1 100 101 100 1\") == \"11\\n\", \"The output should be: '11\\n', but got: '{}'.\".format(solution(\"5\\n3 1 5 2 6\\n5\\n1 2 3 4 5\\n5\\n1 100 101 100 1\"))"
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"11\\n\" # Example 1\nassert solution(stdin) == \"6\\n\" # Example 2\nassert solution(stdin) == \"102\\n\" # Example 3\n"
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n3 1 5 2 6\\n5\\n1 2 3 4 5\\n5\\n1 100 101 100 1\\n\") == \"11\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n5\\n100 101 100 1\\n\") == \"6\\n\"\nassert solution(\"5\\n1 100 101 100 1\\n\") == \"102\\n\""
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n3 1 5 2 6\") == \"11\"\nassert solution(\"5\\n1 2 3 4 5\") == \"6\"\nassert solution(\"5\\n1 100 101 100 1\") == \"102\"\n\nprint(\"All tests passed\")"
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\") == \"11\"\nassert solution(\"1\\n2\\n3\\n4\\n5\") == \"6\"\nassert solution(\"1\\n100\\n101\\n100\\n1\") == \"102\""
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Test failed. Input: {input()}, Output: {output}\""
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"14 2\\n1 4\\n2 4\\n3 4\\n4 13\\n10 5\\n11 5\\n12 5\\n14 5\\n5 13\\n6 7\\n8 6\\n13 6\\n9 6\") == \"Yes\"\nassert solution(\"3 1\\n1 3\\n2 3\") == \"No\""
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"Yes\"\n"
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"Yes\""
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Yes\""
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"Yes\"\nassert solution() == \"No\"\nassert solution() == \"Yes\""
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, 1) == \"Yes\"\nassert solution(14, 2) == \"No\"\nassert solution(1, 4) == \"Yes\"\nassert solution(1, 14) == \"No\"\nassert solution(2, 4) == \"No\"\nassert solution(3, 4) == \"No\"\nassert solution(4, 13) == \"No\"\nassert solution(10, 5) == \"No\"\nassert solution(11, 5) == \"No\"\nassert solution(12, 5) == \"No\"\nassert solution(14, 5) == \"No\"\nassert solution(5, 13) == \"No\"\nassert solution(6, 7) == \"No\"\nassert solution(8, 6) == \"No\"\nassert solution(13, 6) == \"No\"\nassert solution(9, 6) == \"No\"\n"
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Test {case} failed: {output}\\nGot {solution(input())}\""
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"14 2\\n1 4\\n2 4\\n3 4\\n4 13\\n10 5\\n11 5\\n12 5\\n14 5\\n5 13\\n6 7\\n8 6\\n13 6\\n9 6\") == \"Yes\"\nassert solution(\"3 1\\n1 3\\n2 3\") == \"No\"\n"
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Solution is incorrect. Expected output: {expected_output}, but got: {solution(input())}\"\n"
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"14 2\\n1 4\\n2 4\\n3 4\\n4 13\\n10 5\\n11 5\\n12 5\\n14 5\\n5 13\\n6 7\\n8 6\\n13 6\\n9 6\") == \"Yes\\n\"\nassert solution(\"3 1\\n1 3\\n2 3\") == \"No\\n\"\n\nprint(\"All test cases passed\")"
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") == \"Output\"\nassert solution(\"Input\") =="
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution"
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n#.\\n##. \\n\\n4 2\\n##\\n.#\\n.#\\n##\\n\\n4 5\\n....#\\n####. \\n.###.\\n.#...\\n\\n2 1\\n. \\n# \\n\\n3 5\\n.....\\n.....\\n.....\\n\\n\") == \"1\"\nassert solution(\"4 2\\n##\\n.#\\n.#\\n##\\n\\n4 5\\n....#\\n####. \\n.###.\\n.#...\\n\\n2 1\\n. \\n# \\n\\n3 5\\n.....\\n.....\\n.....\\n\\n\") == \"-1\"\nassert solution(\"4 5\\n....#\\n####. \\n.###.\\n.#...\\n\\n2 1\\n. \\n# \\n\\n3 5\\n.....\\n.....\\n.....\\n\\n\") == \"2\"\nassert solution(\"2 1\\n. \\n# \\n\\n3 5\\n.....\\n.....\\n.....\\n\\n\") == \"-1\""
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n#.\\n###\\n##.\").strip() == \"1\"\nassert solution(\"4 2\\n##\\n.#\\n.#\\n##\\n\").strip() == \"-1\"\nassert solution(\"4 5\\n....#\\n####. #.\\n.###. #.\\n.#... #.\\n\").strip() == \"2\"\nassert solution(\"2 1\\n. #\\n# #\\n. #\").strip() == \"-1\"\nassert solution(\"3 5\\n.....\\n.....\\n.....\\n\").strip() == \"0\""
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(example1) == \"1\"\nassert solution(example2) == \"2\"\nassert solution(example3) == \"1\"\nassert solution(example4) == \"-1\"\nassert solution(example5) == \"0\""
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n#.\\n#.\\n#.\") == \"1\\n\"\nassert solution(\"4 2\\n##\\n.#\\n.#\\n##\\n\") == \"-1\\n\"\nassert solution(\"4 5\\n....#\\n####.#\\n.###.#\\n.#...\\n\") == \"2\\n\"\nassert solution(\"2 1\\n.#\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n#.\\n"
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 3) == \"1\"\nassert solution(4, 2) == \"-1\"\nassert solution(4, 5) == \"2\"\nassert solution(2, 1) == \"-1\"\nassert solution(3, 5) == \"0\""
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '1', 'Expected 1, got {}'.format(solution())\nassert solution() == '1', 'Expected 1, got {}'.format(solution())\nassert solution() == '2', 'Expected 2, got {}'.format(solution())\nassert solution() == '2', 'Expected 2, got {}'.format(solution())\nassert solution() == '-1', 'Expected -1, got {}'.format(solution())\nassert solution() == '-1', 'Expected -1, got {}'.format(solution())\nassert solution() == '2', 'Expected 2, got {}'.format(solution())\nassert solution() == '1', 'Expected 1, got {}'.format(solution())"
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n.#.\\n##.##\\n..#.\\n\") == \"1\\n\"\nassert solution(\"4 2\\n##\\n.#\\n.#\\n##\\n\") == \"-1\\n\"\nassert solution(\"4 5\\n....#\\n####.##\\n.###.##\\n.#...##\\n\") == \"2\\n\"\nassert solution(\"2 1\\n.\\n#\\n\") == \"-1\\n\"\nassert solution(\"3 5\\n.....\\n.....\\n.....\\n\") == \"0\\n\"\n"
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n1 0 2 3\\n\") == \"YES\\n1 2 2 3\\n\"\nassert solution(\"3 10\\n10 10 10\\n\") == \"YES\\n10 10 10 \\n\"\nassert solution(\"5 6\\n6 5 6 2 2\\n\") == \"NO\\n\"\nassert solution(\"3 5\\n0 0 0\\n\") == \"YES\\n5 4 2\\n\""
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"YES\\n1 2 2 3\\nYES\\n10 10 10\"\nassert solution() == \"YES\\n5 4 2\"\nassert solution() == \"NO\"\nassert solution() == \"YES\\n5 4 2\"\nassert solution() == \"NO\"\nassert solution() == \"YES\\n10 10 10\"\nassert solution() == \"NO\"\nassert solution() == \"YES\\n5 4 2\"\nassert solution() == \"NO\""
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"test_input.txt\", \"r\")) == \"YES\\n1 2 2 3\\nNO\\n5 4 2\"  # expected output\n"
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3\\n1 0 2 3\\n\") == \"YES\\n1 2 2 3\\n\"\nassert solution(\"3 10\\n10 10 10\\n\") == \"YES\\n10 10 10 \\n\"\nassert solution(\"5 6\\n6 5 6 2 2\\n\") == \"NO\\n\"\nassert solution(\"3 5\\n0 0 0\\n\") == \"YES\\n5 4 2 \\n\"\n"
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\\n5 4 2\"\n"
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"YES\\n5 4 2\\nYES\\n10 10 10\\nYES\\n0 0 0\\nYES\\n5 4 2\""
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == 'YES\\n5 4 2'"
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 3\\n1 0 2 3\\n') == 'YES\\n1 2 2 3\\n'\nassert solution('3 10\\n10 10 10\\n') == 'YES\\n10 10 10\\n'\nassert solution('5 6\\n6 5 6 2 2\\n') == 'NO\\n'\nassert solution('3 5\\n0 0 0\\n') == 'YES\\n5 4 2\\n'"
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"YES\\n1 2 2 3\\nYES\\n10 10 10 \\nYES\\n5 4 2\"\nassert solution == \"NO\"\nassert solution == \"YES\\n10 10 10\"\nassert solution == \"NO\"\nassert solution == \"YES\\n5 4 2\"\n\nsolution = \"YES\\n1 2 2 3\\nYES\\n10 10 10 \\nYES\\n5 4 2\""
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected, f\"Solution should return {expected}, but returned {solution(stdin)}\"\n\nfor case in [\n    (4, 3, [\"YES\", \"1 2 2 3\"]),\n    (3, 10, [\"YES\", \"10 10 10\"]),\n    (5, 6, [\"NO\"]),\n    (3, 5, [\"YES\", \"5 4 2\"]),\n]:\n    assert solution(case[0]) == case[1], f\"Test {case[2]}\""
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2\\n1\\n42\\n2\\n1 1 1 1\\n') == '4 3 6 2\\n42\\n1 1 1 1\\n'"
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2\") == \"4 3 6 2\"\nassert solution(\"1\\n42\") == \"42\"\nassert solution(\"2\\n1 1 1 1\") == \"1 1\""
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == output, f\"Test failed. Expected {output}, got {solution(stdin)}\"\n"
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2\\n1\\n42\\n2\\n1 1 1 1\\n') == '4 3 6 2\\n42\\n1 1 1 1\\n'\n\nassert solution('1\\n42\\n2\\n1 1 1 1\\n') == '42  '"
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"4 3 6 2\\n42\\n1 1\", \"Testcase 1\""
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"4 3 6 2\\n42\\n1 1\"\n"
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2\\n1 1 1 1') == '1 1\\n', \"Input 2\"\nassert solution('1\\n42') == '42 42\\n', \"Input 1\"\nassert solution('2\\n2 1 1 1') == '1 1\\n', \"Input 2\"\nassert solution('4\\n2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2') == '4 3 6 2\\n', \"Input 4\""
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2\\n1\\n42\\n2\\n1 1 1 1') == '4 3 6 2\\n42\\n1 1 1 1'\nassert solution('1\\n42\\n2\\n1 1 1 1') == '42'\nassert solution('2\\n1 1 1 1\\n') == '1 1'"
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == # Your solution here"
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n1 1\\n1 2\\n1 3') == '3'\nassert solution('3\\n1 1\\n2 1\\n3 1') == '6'\nassert solution('4\\n2 1\\n2 2\\n3 1\\n3 2') == '6'"
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 1\\n1 2\\n1 3\") == \"3\"\nassert solution(\"3\\n1 1\\n2 1\\n3 1\") == \"6\"\nassert solution(\"4\\n2 1\\n2 2\\n3 1\\n3 2\") == \"6\"\n\nsolution(\"3\\n1 1\\n1 2\\n1 3\")\nsolution(\"3\\n1 1\\n2 1\\n3 1\")\nsolution(\"4\\n2 1\\n2 2\\n3 1\\n3 2\")"
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == expected_output, f\"Your solution is incorrect. Expected output: {expected_output}, but got: {solution}\"\n"
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"3\", \"The given code should output 3\""
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"The given input does not match the expected output.\\nInput: {}\\nOutput: {}\".format(input(), output())"
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 1\\n1 2\\n1 3\\n\") == \"3\\n\", \"Expected: 3\\nActual: \" + solution(\"3\\n1 1\\n1 2\\n1 3\\n\")"
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Input\\n3\\n1 1\\n1 2\\n1 3\\n\\nOutput\\n3\\n\\nInput\\n3\\n1 1\\n2 1\\n3 1\\n\\nOutput\\n6\\n\\nInput\\n4\\n2 1\\n2 2\\n3 1\\n3 2\\n\\nOutput\\n6\") == \"Output\\n3\\n\\nInput\\n4\\n2 1\\n2 2\\n3 1\\n3 2\\n\\nOutput\\n6\""
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 1\\n1 2\\n1 3\") == \"3\\n\"\nassert solution(\"3\\n1 1\\n2 1\\n3 1\") == \"6\\n\"\nassert solution(\"4\\n2 1\\n2 2\\n3 1\\n3 2\") == \"6\\n\"\n"
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n.E.\\nE.E.\\n.E.\\n') == '1 1\\n2 2\\n3 3'\nassert solution('3\\nEEE\\nE..\\nE.E\\n') == '-1'\nassert solution('5\\nEE.EE\\nE.EE.\\nE...E\\n.EE.E\\nEE.EE\\n') == '3 3\\n1 3\\n2 2\\n4 4\\n5 3'"
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n3\n.E.\nE.E\n.E.\n''') == '''1 1\n2 2\n3 3\n'''\n\nassert solution('''\n3\nEEE\nE..\nE.E\n''') == '''-1\n'''\n\nassert solution('''\n5\nEE.EE\nE.EE.\nE...E\n.EE.E\nEE.EE\n''') == '''3 3\n1 3\n2 2\n4 4\n5 3\n'''"
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n.E.\\nE.E\\n.E.\\n\") == \"1 1\\n2 2\\n3 3\\n\"\nassert solution(\"3\\nEEE\\nE..\\nE.E\\n\") == \"-1\\n\"\nassert solution(\"5\\nEE.EE\\nE.EE.E\\nE...E\\n.EE.E\\nEE.EE\\n\") == \"3 3\\n1 3\\n2 2\\n4 4\\n5 3\\n\""
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n.E.\\nE.E.\\n.E.\\n') == '1 1\\n2 2\\n3 3\\n'\nassert solution('3\\nEEE\\nE..\\nE.E\\n') == '-1\\n'\nassert solution('5\\nEE.EE\\nE.EE.E\\nE...E\\n.EE.E\\nEE.EE\\n') == '3 3\\n1 3\\n2 2\\n4 4\\n5 3\\n'"
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n.E.\\nE.E\\n.E.\\n\") == \"1 1\\n2 2\\n3 3\\n\"\nassert solution(\"3\\nEEE\\nE..\\nE.E\\n\") == \"-1\\n\"\nassert solution(\"5\\nEE.EE\\nE.EE.E\\nE...E\\n.EE.E\\nEE.EE\\n\") == \"3 3\\n1 3\\n2 2\\n4 4\\n5 3\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3\n.E.\nE.E\n.E.\n\"\"\") == \"\"\"\n1 1\n2 2\n3 3\n\"\"\"\n\nassert solution(\"\"\"\n3\nEEE\nE..\nE.E\n\"\"\") == \"\"\"\n-1\n\"\"\"\n\nassert solution(\"\"\"\n5\nEE.EE\nE.EE.\nE...E\n.EE.E\nEE.EE\n\"\"\") == \"\"\"\n3 3\n1 3\n2 2\n4 4\n5 3\n\"\"\""
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\".E.\") == \"1 1\"\nassert solution(\".E.E\") == \"-1\"\nassert solution(\".E..\") == \"2 2\"\nassert solution(\".E.EE\") == \"3 3\""
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n.E.\\nE.E\\n.E.\\n') == '1 1\\n2 2\\n3 3\\n'\nassert solution('3\\nEEE\\nE..\\nE.E\\n') == '-1'\nassert solution('5\\nEE.EE\\nE.EE.E\\nE...E\\n.EE.E\\nEE.EE\\n') == '3 3\\n1 3\\n2 2\\n4 4\\n5 3\\n'"
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n.E.\\nE.E\\n.E.\\n\") == \"1 1\\n2 2\\n3 3\"\nassert solution(\"3\\nEEE\\nE..\\nE.E\\n\") == \"-1\"\nassert solution(\"5\\nEE.EE\\nE.EE.E\\nE...E\\n.EE.E\\nEE.EE\\n\") == \"3 3\\n1 3\\n2 2\\n4 4\\n5 3\""
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n.E.\\nE.E\\n.E.\\n') == '1 1\\n2 2\\n3 3\\n'\nassert solution('3\\nEEE\\nE..\\nE.E\\n') == '-1\\n'\nassert solution('5\\nEE.EE\\nE.EE.\\nE...E\\n.EE.E\\nEE.EE\\n') == '3 3\\n1 3\\n2 2\\n4 4\\n5 3\\n'"
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('10 2\\n10 -1 2 2 2 2 2 2 -1 10') == '32\\n'\nassert solution('5 10\\n-1 -1 -1 -1 -1') == '-1\\n'"
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 2\\n10 -1 2 2 2 2 2 2 -1 10\") == \"32\\n\"\n\nassert solution(\"5 10\\n-1 -1 -1 -1 -1\") == \"-1\\n\""
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 2\\n10 -1 2 2 2 2 2 2 -1 10\") == \"32\\n\"\nassert solution(\"5 10\\n-1 -1 -1 -1 -1\") == \"-1\\n\""
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"32\\n\", \"The output should be 32.\""
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"32\""
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 2\\n10 -1 2 2 2 2 2 2 -1 10\") == \"32\\n\"\nassert solution(\"5 10\\n-1 -1 -1 -1 -1\") == \"-1\\n\""
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '32'"
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"32\", \"Output: \" + solution(stdin) + \"\\n\""
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('10 2\\n10 -1 2 2 2 2 2 2 -1 10') == '32\\n'\nassert solution('5 10\\n-1 -1 -1 -1 -1') == '-1\\n'"
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 2\\n10 -1 2 2 2 2 2 2 -1 10\") == \"32\\n\"\nassert solution(\"5 10\\n-1 -1 -1 -1 -1\") == \"-1\\n\""
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 1 2\\n1 1 1\\n') == '3'\nassert solution('4 2 3\\n1 2 4 8\\n') == '79'"
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1 2\\n1 1 1\") == \"3\"\nassert solution(\"4 2 3\\n1 2 4 8\") == \"79\""
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 3\n\nassert solution() == 79"
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"79\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 79\n"
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1 2\\n1 1 1\\n\") == \"3\"\nassert solution(\"4 2 3\\n1 2 4 8\\n\") == \"79\"\n"
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"Output\\n3\\n\"\n"
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1 2\") == \"3\"\nassert solution(\"4 2 3\") == \"79\"\nassert solution(\"5 5 5\") == \"5\"\nassert solution(\"6 6 6\") == \"6\"\nassert solution(\"7 7 7\") == \"7\"\nassert solution(\"8 8 8\") == \"8\"\nassert solution(\"9 9 9\") == \"9\"\nassert solution(\"10 10 10\") == \"10\"\nassert solution(\"11 11 11\") == \"11\"\nassert solution(\"12 12 12\") == \"12\"\nassert solution(\"13 13 13\") == \"13\"\nassert solution(\"14 14 14\") == \"14\"\nassert solution(\"15 15 15\") == \"15\"\nassert solution(\"16 16 16\") == \"16\"\nassert solution(\"17 17 17\") == \"17\"\nassert solution(\"18 18 18\") == \"18\"\nassert solution(\"19 19 19\") == \"19\"\nassert solution(\"20 20 20\") == \"20\"\nassert solution(\"21 21 21\") == \"21\"\nassert solution(\"22 22 22\") == \"22\"\nassert solution(\"23 23 23\") == \"23\"\nassert solution(\"24 24 24\") == \"24\"\nassert solution(\"25 25 25\") == \"25\"\nassert solution(\"26 26 26\") == \"26\"\nassert solution(\"27 27 27\") == \"27\"\nassert solution(\"28 28 28\") == \"28\"\nassert solution(\"29 29 29\") == \"29\"\nassert solution(\"30 30 30\") == \"30\"\nassert solution(\"31 31 31\") == \"31\"\nassert solution(\"32 32 32\") == \"32\"\nassert solution(\"33 33 33\") == \"33\"\nassert solution(\"34 34 34\") == \"34\"\nassert solution(\"35 35 35\") == \"35\"\nassert solution(\"36 36 36\") == \"36\"\nassert solution(\"37 37 37\") == \"37\"\nassert solution(\"38 38 38\") == \"38\"\nassert solution(\"39 39 39\") == \"39\"\nassert solution(\"40 40 40\") == \"40\"\nassert solution(\"41 41 41\") == \"41\"\nassert solution(\"42 42 42\") == \"42\"\nassert solution(\"43 43 43\") == \"43\"\nassert solution(\"44 44 44\") == \"44\"\nassert solution(\"45 45 45\") == \"45\"\nassert solution(\"46 46 46\") == \"46\"\nassert solution(\"47 47 47\") == \"47\"\nassert solution(\"48 48 48\") == \"48\"\nassert solution(\"49 49 49\") == \"49\"\nassert solution(\"50 50 50\") == \"50\"\nassert solution(\"51 51 51\") == \"51\"\nassert solution(\"52 52 52\") == \"52\"\nassert solution(\"53 53 53\") == \"53\"\nassert solution(\"54 54 54\") == \"54\"\nassert solution(\"55 55 55\") == \"55\"\nassert solution(\"56 56 56\") == \"56\"\nassert solution(\"57 57 57\") == \"57\"\nassert solution(\"58 58 58\") == \"58\"\nassert solution(\"59 59 59\") == \"59\"\nassert solution(\"60 60 60\") == \"60\"\nassert solution(\"61 61 "
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1 2\\n1 1 1\") == \"3\"\nassert solution(\"4 2 3\\n1 2 4 8\") == \"79\""
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 1 2') == '3\\n'\nassert solution('4 2 3') == '79\\n'"
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_data) == output_data, f\"Expected {output_data}, but got {solution(input_data)} instead.\""
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\") == \"7\\n7\\n4\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n"
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\") == \"7\\n7\\n4\\n7\\n7\\n\"\nassert solution(\"4 5\") == \"11\\n8\\n5\\n6\\n5\\n\"\nassert solution(\"5 6\") == \"12\\n10\\n6\\n7\\n6\\n\"\nassert solution(\"6 7\") == \"13\\n11\\n7\\n8\\n7\\n\"\nassert solution(\"7 8\") == \"14\\n12\\n8\\n9\\n8\\n\""
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin='3 3') == '7\\n7\\n4\\n7\\n7\\n'\nassert solution(stdin='2 3') == '7\\n7\\n4\\n7\\n7\\n'\nassert solution(stdin='3 2') == '7\\n7\\n4\\n7\\n7\\n'\nassert solution(stdin='4 2') == '7\\n7\\n4\\n7\\n7\\n'\nassert solution(stdin='3 4') == '7\\n7\\n4\\n7\\n7\\n'\nassert solution(stdin='2 4') == '7\\n7\\n4\\n7\\n7\\n'"
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\") == \"7\\n7\\n4\\n7\\n7\\n\""
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\") == \"7\\n7\\n4\\n7\\n7\"\nprint(\"All test cases pass.\")"
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\") == \"7\\n7\\n4\\n7\\n7\\n\\n\\n\"\nassert solution(\"1 3\") == \"7\\n7\\n4\\n7\\n7\\n\\n\\n\"\nassert solution(\"3 2\") == \"7\\n7\\n4\\n7\\n7\\n\\n\\n\"\nassert solution(\"2 3\") == \"7\\n7\\n4\\n7\\n7\\n\\n\\n\"\nassert solution(\"3 3\") == \"7\\n7\\n4\\n7\\n7\\n\\n\\n\""
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\") == \"7\\n7\\n4\\n7\\n7\\n\""
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\") == \"7\\n7\\n4\\n7\\n7\\n\"\nassert solution(\"4 5\") == \"7\\n7\\n4\\n7\\n7\\n7\\n\"\nassert solution(\"5 6\") == \"7\\n7\\n4\\n7\\n7\\n7\\n7\\n\"\nassert solution(\"6 7\") == \"7\\n7\\n4\\n7\\n7\\n7\\n7\\n\"\nassert solution(\"7 8\") == \"7\\n7\\n4\\n7\\n7\\n7\\n7\\n7\\n\""
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\") == \"7\\n7\\n4\\n7\\n7\\n\"\nassert solution(\"5 4\") == \"17\\n17\\n9\\n17\\n17\\n17\\n\"\nassert solution(\"6 6\") == \"25\\n25\\n12\\n25\\n25\\n25\\n25\\n\"\nassert solution(\"7 7\") == \"35\\n35\\n21\\n35\\n35\\n35\\n35\\n\"\nassert solution(\"8 8\") == \"49\\n49\\n28\\n49\\n49\\n49\\n49\\n49\\n\""
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 2\\n1 5 6 2\\n1 3\\n3 2\\n4 5\\n3 7\\n4 3\\n4 6\") == \"6\"\nassert solution(\"9 3\\n3 2 1 6 5 9\\n8 9\\n3 2\\n2 7\\n3 4\\n7 6\\n4 5\\n2 1\\n2 8\") == \"9\""
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '6'\nassert solution() == '9'\nassert solution() == '6'"
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"9 3\\n3 2 1 6 5 9\\n8 9\\n3 2\\n2 7\\n3 4\\n7 6\\n4 5\\n2 1\\n2 8\\n\") == \"9\""
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 2\\n1 5 6 2\\n1 3\\n3 2\\n4 5\\n3 7\\n4 3\\n4 6\") == \"6\\n\"\nassert solution(\"9 3\\n3 2 1 6 5 9\\n8 9\\n3 2\\n2 7\\n3 4\\n7 6\\n4 5\\n2 1\\n2 8\") == \"9\\n\""
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('7 2\\n1 5 6 2\\n1 3\\n3 2\\n4 5\\n3 7\\n4 3\\n4 6') == '6'\nassert solution('9 3\\n3 2 1 6 5 9\\n8 9\\n3 2\\n2 7\\n3 4\\n7 6\\n4 5\\n2 1\\n2 8') == '9'"
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Expected {output}, but got {solution(input())}\""
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 6, \"The expected output is not the actual output.\""
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"6\\n\", \"Test failed\""
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 2\\n1 5 6 2\\n1 3\\n3 2\\n4 5\\n3 7\\n4 3\\n4 6\") == \"6\"\nassert solution(\"9 3\\n3 2 1 6 5 9\\n8 9\\n3 2\\n2 7\\n3 4\\n7 6\\n4 5\\n2 1\\n2 8\") == \"9\""
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"6\\n\""
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0010100\") == 3\nassert solution(\"111\") == -1\n\nfrom collections import defaultdict"
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0010100\") == \"3\\n3 1 3 4\\n3 2 5 6\\n1 7\"\nassert solution(\"111\") == \"-1\""
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0010100\") == \"3\"\nassert solution(\"111\") == \"-1\""
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('0010100') == '3\\n1 3 5 6'\nassert solution('111') == '-1'"
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('0010100') == '3\\n3 1 3 4\\n3 2 5 6\\n1 7'"
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Your solution is incorrect. Expected: {expected_output}, Received: {solution(input())}\"\n"
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('0010100') == 3\nassert solution('111') == -1"
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0010100\") == \"3\\n3 1 3 4\\n3 2 5 6\\n1 7\"\nassert solution(\"111\") == \"-1\""
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('0010100') == ['3', '1 3 4', '2 5 6', '1 7']\nassert solution('111') == [-1]\n\nfrom typing import List\n"
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n2 1 2\\n2 2 3\") == 1\nassert solution(\"1 3\\n3 1 2 3\\n\") == 6\nassert solution(\"2 4\\n2 1 2\\n3 2 3 4\\n\") == 2\nassert solution(\"2 2\\n3 2 2 1\\n2 1 2\\n\") == 1\nassert solution(\"3 7\\n2 1 2\\n2 3 4\\n3 5 6 7\\n\") == 24"
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == expected_output, f\"Solution {solution} is not correct, expected {expected_output}\""
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n2 1 2\\n2 2 3\") == 1\nassert solution(\"1 3\\n3 1 2 3\\n\") == 6\nassert solution(\"2 4\\n2 1 2\\n3 2 3 4\\n\") == 2\nassert solution(\"2 2\\n3 2 2 1\\n2 1 2\\n\") == 1\nassert solution(\"3 7\\n2 1 2\\n2 3 4\\n3 5 6 7\\n\") == 24"
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 1, \"Expected 1, got %r\" % solution\nprint(\"Tests passed successfully\")"
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 3\\n2 1 2\\n2 2 3\\n') == '1\\n'\nassert solution('1 3\\n3 1 2 3\\n') == '6\\n'\nassert solution('2 4\\n2 1 2\\n3 2 3 4\\n') == '2\\n'\nassert solution('2 2\\n3 2 2 1\\n2 1 2\\n') == '1\\n'\nassert solution('3 7\\n2 1 2\\n2 3 4\\n3 5 6 7\\n') == '24\\n'"
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 1 # Test Case 1"
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n2 1 2\\n2 2 3\\n\") == \"1\\n\"\nassert solution(\"1 3\\n3 1 2 3\\n\") == \"6\\n\"\nassert solution(\"2 4\\n2 1 2\\n3 2 3 4\\n\") == \"2\\n\"\nassert solution(\"2 2\\n3 2 2 1\\n2 1 2\\n\") == \"1\\n\"\nassert solution(\"3 7\\n2 1 2\\n2 3 4\\n3 5 6 7\\n\") == \"24\\n\""
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_data) == expected_output, f\"Test Case {i + 1} failed: expected {expected_output}, got {solution(input_data)}\""
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''2 3\n2 1 2\n2 2 3''') == '1\\n'\nassert solution('''1 3\n3 1 2 3''') == '6\\n'\nassert solution('''2 4\n2 1 2\n3 2 3 4''') == '2\\n'\nassert solution('''2 2\n3 2 2 1\n2 1 2''') == '1\\n'\nassert solution('''3 7\n2 1 2\n2 3 4\n3 5 6 7''') == '24\\n'\n"
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 4 2 3 1\\n4\\n1 5 4 7\") == \"3\\n4\\n6\"\nassert solution(\"4\\n1 5 4 7\") == \"6\""
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 4 2 3 1\\n4\\n1 5 4 7\") == \"3\\n\"\nassert solution(\"4\\n1 5 4 7\") == \"6\\n\""
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 4 2 3 1\") == \"3\\n\"\nassert solution(\"4\\n1 5 4 7\") == \"6\\n\""
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"3\\n\"\nassert solution(input()) == \"6\\n\""
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 4 2 3 1\\n4\\n1 5 4 7\") == \"3\\n\"\nassert solution(\"4\\n1 5 4 7\") == \"6\\n\"\nassert solution(\"5\\n1 4 2 3 1\\n4\\n1 5 4 7\") == \"3\\n\""
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(5) == '3'\nassert solution(4) == '6'"
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 4 2 3 1\\n4\\n1 5 4 7\") == \"3\\n4\\n6\"\nassert solution(\"4\\n1 5 4 7\") == \"6\"\nassert solution(\"5\\n1 4 2 3 1\") == \"3\"\nassert solution(\"4\\n1 5 4 7\") == \"6\""
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 4 2 3 1\\n\\n4\\n1 5 4 7\") == \"3\\n6\\n\"\nassert solution(\"4\\n1 5 4 7\") == \"6\\n\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5)<|im_sep|>"
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('Input') == 'Output' # Solution 1\nassert solution('Input') == 'Output' # Solution 2\nassert solution('Input') == 'Output' # Solution 3\nassert solution('Input') == 'Output' # Solution 4\nassert solution('Input') == 'Output' # Solution 5\n\nprint('All test cases passed.')"
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('Input') == 'Output' # correct\n"
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1 2\") == \"4\\n\"\nassert solution(\"4\\n1 1 2 3\") == \"20\\n\"\nassert solution(\"5\\n1 1 1 1 1\") == \"62\\n\""
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\n1 2\\n') == '4\\n'\nassert solution('4\\n1 1 2 3\\n') == '20\\n'\nassert solution('5\\n1 1 1 1 1\\n') == '62\\n'"
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1 2\") == 4\nassert solution(\"4\\n1 1 2 3\") == 20\nassert solution(\"5\\n1 1 1 1 1\") == 62"
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(4) == 20, \"Test 1 failed\"\nassert solution(5) == 62, \"Test 2 failed\"\n"
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('Input\\n2\\n1 2\\n\\nOutput\\n4\\n\\nInput\\n4\\n1 1 2 3\\n\\nOutput\\n20\\n\\nInput\\n5\\n1 1 1 1 1\\n\\nOutput\\n62\\n\\n') == 'Output\\n4\\n\\n20\\n\\n62\\n\\n'"
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2') == '4'\nassert solution('4') == '20'\nassert solution('5') == '62'"
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"4\\n\"\nassert solution(\"4\\n1 1 2 3\\n\") == \"20\\n\"\nassert solution(\"5\\n1 1 1 1 1\\n\") == \"62\\n\""
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1 2\\n\") == 4\nassert solution(\"4\\n1 1 2 3\\n\") == 20\nassert solution(\"5\\n1 1 1 1 1\\n\") == 62"
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 20, \"Expected output: 20, but got: {}.\".format(solution())"
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 1\\n1 1\\n1 1\") == \"6\"\nassert solution(\"4\\n1 2\\n2 1\\n3 5\\n5 3\") == \"15\"\nassert solution(\"1\\n5 6\") == \"7\"\n"
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Test case failed\""
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 1\\n1 1\\n1 1') == '6'\nassert solution('1 2\\n2 1\\n3 5\\n5 3') == '15'\nassert solution('1\\n5 6') == '7'"
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1\\n1 1\\n1 1\") == \"6\"\nassert solution(\"4\\n1 2\\n2 1\\n3 5\\n5 3\") == \"15\"\nassert solution(\"1\\n5 6\") == \"7\"\n"
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"Output\\n15\\n\", \"The solution is incorrect.\""
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''1\n1\n1\n''') == '6\\n'\n\nassert solution('''4\n1 2\n2 1\n3 5\n5 3\n''') == '15\\n'\n\nassert solution('''1\n5 6\n''') == '7\\n'"
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n1 1\\n1 1\\n1 1\\n') == '6'\nassert solution('4\\n1 2\\n2 1\\n3 5\\n5 3\\n') == '15'\nassert solution('1\\n5 6\\n') == '7'"
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Input\\n3\\n1 1\\n1 1\\n1 1\\n\") == \"Output\\n6\"\nassert solution(\"Input\\n4\\n1 2\\n2 1\\n3 5\\n5 3\\n\") == \"Output\\n15\"\nassert solution(\"Input\\n1\\n5 6\\n\") == \"Output\\n7\""
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 1\\n1 1\\n1 1\") == \"6\"\nassert solution(\"4\\n1 2\\n2 1\\n3 5\\n5 3\") == \"15\"\nassert solution(\"1\\n5 6\") == \"7\""
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 7"
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1\""
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"1\"\nassert solution(\"7\") == \"1\"\nassert solution(\"8\") == \"1\"\nassert solution(\"9\") == \"1\"\nassert solution(\"10\") == \"1\"\nassert solution(\"11\") == \"1\"\nassert solution(\"12\") == \"1\"\nassert solution(\"13\") == \"1\"\nassert solution(\"14\") == \"1\"\nassert solution(\"15\") == \"1\"\nassert solution(\"16\") == \"1\"\nassert solution(\"17\") == \"1\"\nassert solution(\"18\") == \"1\"\nassert solution(\"19\") == \"1\"\nassert solution(\"20\") == \"1\"\nassert solution(\"21\") == \"1\"\nassert solution(\"22\") == \"1\"\nassert solution(\"23\") == \"1\"\nassert solution(\"24\") == \"1\"\nassert solution(\"25\") == \"1\"\nassert solution(\"26\") == \"1\"\nassert solution(\"27\") == \"1\"\nassert solution(\"28\") == \"1\"\nassert solution(\"29\") == \"1\"\nassert solution(\"30\") == \"1\"\nassert solution(\"31\") == \"1\"\nassert solution(\"32\") == \"1\"\nassert solution(\"33\") == \"1\"\nassert solution(\"34\") == \"1\"\nassert solution(\"35\") == \"1\"\nassert solution(\"36\") == \"1\"\nassert solution(\"37\") == \"1\"\nassert solution(\"38\") == \"1\"\nassert solution(\"39\") == \"1\"\nassert solution(\"40\") == \"1\"\nassert solution(\"41\") == \"1\"\nassert solution(\"42\") == \"1\"\nassert solution(\"43\") == \"1\"\nassert solution(\"44\") == \"1\"\nassert solution(\"45\") == \"1\"\nassert solution(\"46\") == \"1\"\nassert solution(\"47\") == \"1\"\nassert solution(\"48\") == \"1\"\nassert solution(\"49\") == \"1\"\nassert solution(\"50\") == \"1\"\nassert solution(\"51\") == \"1\"\nassert solution(\"52\") == \"1\"\nassert solution(\"53\") == \"1\"\nassert solution(\"54\") == \"1\"\nassert solution(\"55\") == \"1\"\nassert solution(\"56\") == \"1\"\nassert solution(\"57\") == \"1\"\nassert solution(\"58\") == \"1\"\nassert solution(\"59\") == \"1\"\nassert solution(\"60\") == \"1\"\nassert solution(\"61\") == \"1\"\nassert solution(\"62\") == \"1\"\nassert solution(\"63\") == \"1\"\nassert solution(\"64\") == \"1\"\nassert solution(\"65\") == \"1\"\nassert solution(\"66\") == \"1\"\nassert solution(\"67\") == \"1\"\nassert solution(\"68\") == \"1\"\nassert solution(\"69\") == \"1\"\nassert solution(\"70\") == \"1\"\nassert solution(\"71\") == \"1\"\nassert solution(\"72\") == \"1\"\nassert solution(\"73\") == \"1\"\nassert solution(\"74\") == \"1\"\nassert solution(\"75\") == \"1\"\nassert solution(\"76\") == \"1\"\nassert solution(\"77\") == \"1\"\nassert solution(\"78\") == \"1\"\nassert solution(\"79\") == \"1\"\nassert solution(\"80\") == \"1\"\nassert solution(\"81\") == \"1\"\nassert solution(\"82\") == \"1\"\nassert solution(\"83\") == \"1\"\nassert solution(\"84\") == \"1\"\nassert solution(\"85\") == \"1\"\nassert solution(\"86\") == \"1\"\nassert solution(\"87\") == \"1\"\nassert solution(\"88\") == \"1\"\nassert solution(\"89\") == \"1\"\nassert solution(\"90\") == \"1\"\nassert solution(\"91\") == \"1\"\nassert solution(\"92\") == \"1\"\nassert solution(\"93\") == \"1\"\nassert solution(\"94\") == \"1\"\n"
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n4\\n2\\n\") == \"1\\n\", \"The first example has incorrect output.\"\nassert solution(\"2\\n1\\n4 4\\n2\\n\") == \"3\\n\", \"The second example has incorrect output.\"\nassert solution(\"3\\n3 3\\n10 10 10\\n17\\n\") == \"6\\n\", \"The third example has incorrect output.\"\n\nfrom typing import List"
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output() for input, output in [\n    (\"\\n1\\n4\\na_1\\na_2\\n\", \"1\\n\"),\n    (\"\\n2\\na_1\\na_2\\nb_1\\nb_2\\nb_3\\n\", \"3\\n\"),\n    (\"\\n3\\na_1\\na_2\\na_3\\nb_1\\nb_2\\nb_3\\nc_1\\nc_2\\nc_3\\nd_1\\nd_2\\nd_3\\ne_1\\ne_2\\ne_3\\nf_1\\nf_2\\nf_3\\n\", \"6\\n\")\n]"
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n4\\n2\\n\\n1\\n4\\n2\\n\") == \"1\\n\"\nassert solution(\"2\\n1\\n4 4\\n2\\n\\n1\\n4\\n2\\n\") == \"3\\n\"\nassert solution(\"3\\n3 3\\n10 10 10\\n17\\n\") == \"6\\n\""
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Solution is {solution(input())}, but expected {expected_output}.\""
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == '''1\n4\n2\n\nOutput\n1\n\nInput\n2\n1\n4 4\n2\n\nOutput\n3\n\nInput\n3\n3 3\n10 10 10\n17\n\nOutput\n6'''"
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('Input\\n1\\n4\\n2\\n\\nOutput\\n1\\n\\nInput\\n2\\n1\\n4 4\\n2\\n\\nOutput\\n3\\n\\nInput\\n3\\n3 3\\n10 10 10\\n17\\n\\nOutput\\n6') == '1\\n\\n3\\n\\n6'\nassert solution('Input\\n2\\n1\\n4 4\\n2\\n\\nOutput\\n3\\n\\nInput\\n3\\n3 3\\n10 10 10\\n17\\n\\nOutput\\n6') == '3\\n\\n6'\nassert solution('Input\\n3\\n3 3\\n10 10 10\\n17\\n\\nOutput\\n6') == '6'"
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n1\n4\n2\n''') == '1\\n'\nassert solution('''\n2\n1\n4 4\n2\n''') == '3\\n'\nassert solution('''\n3\n3 3\n10 10 10\n17\n''') == '6\\n'"
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\\n1\\n4\\n4\") == \"3\"\nassert solution(\"3\\n3\\n10\\n10\\n10\") == \"6\""
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3 3 100\\n1 1 1\") == \"10\"\nassert solution(\"3 6 5 1000000007\\n1 2 3\") == \"0\"\nassert solution(\"3 5 6 11\\n1 2 1\") == \"0\""
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3 3 100\\n1 1 1\") == \"10\"\nassert solution(\"3 6 5 1000000007\\n1 2 3\") == \"0\"\nassert solution(\"3 5 6 11\\n1 2 1\") == \"0\""
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, got: {solution(stdin)}\""
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3 3 100\\n1 1 1\") == \"10\"\nassert solution(\"3 6 5 1000000007\\n1 2 3\") == \"0\"\nassert solution(\"3 5 6 11\\n1 2 1\") == \"0\""
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"10\"\nassert solution(input()) == \"0\"\nassert solution(input()) == \"0\""
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3 3 100\\n1 1 1\") == \"10\"\nassert solution(\"3 6 5 1000000007\\n1 2 3\") == \"0\"\nassert solution(\"3 5 6 11\\n1 2 1\") == \"0\""
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '10'\nassert solution() == '0'\nassert solution() == '0'\nassert solution() == '0'"
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3 3 100\\n1 1 1\\n\") == \"10\"\nassert solution(\"3 6 5 1000000007\\n1 2 3\\n\") == \"0\"\nassert solution(\"3 5 6 11\\n1 2 1\\n\") == \"0\""
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3 3 100\\n1 1 1\") == \"10\"\nassert solution(\"3 6 5 1000000007\\n1 2 3\") == \"0\"\nassert solution(\"3 5 6 11\\n1 2 1\") == \"0\""
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 3 3 100\\n1 1 1') == 10\nassert solution('3 6 5 1000000007\\n1 2 3') == 0\nassert solution('3 5 6 11\\n1 2 1') == 0"
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Output mismatch\\nExpected: {output()}\\nGot: {solution(input())}\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2 2 3\\nintel\\ncode\\nch allenge\") == \"YES\"\nassert solution(\"4\\n1 2 3 1\\na\\nbcdefghijklmnopqrstuvwxyz\\njklmnopqrstuvwxyz\\nuvwxyz\\n\") == \"NO\"\nassert solution(\"4\\n13 11 15 15\\nto be or not to be that is the question\\nwhether tis nobler in the mind to suffer\\nthe slings and arrows of outrageous fortune\\nor to take arms against a sea of troubles\") == \"YES\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n2 2 3\\nimint\\ncode\\nch allenge\") == \"YES\"\nassert solution(\"4\\n1 2 3 1\\na\\nbcdefghi\\njklmnopqrstuvwxyz\") == \"NO\"\nassert solution(\"4\\n13 11 15 15\\nto be or not to be that is the question\\nwhether tis nobler in the mind to suffer\\nthe slings and arrows of outrageous fortune\\nor to take arms against a sea of troubles\") == \"YES\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n2 2 3\\nintel\\ncode\\nch allenge\\n\") == \"YES\"\nassert solution(\"4\\n1 2 3 1\\na\\nbcdefghi\\njklmnopqrstu\\nvwxyz\\n\") == \"NO\"\nassert solution(\"4\\n13 11 15 15\\nto be or not to be that is the question\\nwhether tis nobler in the mind to suffer\\nthe slings and arrows of outrageous fortune\\nor to take arms against a sea of troubles\\n\") == \"YES\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt').read()) == 'YES' # expected output: 'YES'"
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n2 2 3\\nintel\\ncode\\nch allenge\") == \"YES\"\nassert solution(\"4\\n1 2 3 1\\na\\nbcdefghi\\njklmnopqrstu\\nvwxyz\") == \"NO\"\nassert solution(\"4\\n13 11 15 15\\nto be or not to be that is the question\\nwhether tis nobler in the mind to suffer\\nthe slings and arrows of outrageous fortune\\nor to take arms against a sea of troubles\") == \"YES\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n2 2 3\\nintel\\ncode\\nch allenge\\n\") == \"YES\\n\"\nassert solution(\"4\\n1 2 3 1\\na\\nbcdefghi\\njklmnopqrstuvwxyz\\n\") == \"NO\\n\"\nassert solution(\"4\\n13 11 15 15\\nto be or not to be that is the question\\nwhether tis nobler in the mind to suffer\\nthe slings and arrows of outrageous fortune\\nor to take arms against a sea of troubles\\n\") == \"YES\\n\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n2 2 3\\nintel\\ncode\\nch allenge\") == \"YES\"\nassert solution(\"4\\n1 2 3 1\\na\\nbcdefghi\\njklmnopqrstu\\nwxyz\") == \"NO\"\nassert solution(\"4\\n13 11 15 15\\nto be or not to be that is the question\\nwhether tis nobler in the mind to suffer\\the slings and arrows of outrageous fortune\\nor to take arms against a sea of troubles\") == \"YES\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\").read()) == \"YES\"\nassert solution(open(\"input2.txt\").read()) == \"NO\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n2 2 3\\nintel\\ncode\\nch allenge\") == \"YES\"\nassert solution(\"4\\n1 2 3 1\\na\\nbcdefghi\\njklmnopqrstu\\nvwxyz\") == \"NO\"\nassert solution(\"4\\n13 11 15 15\\nto be or not to be that is the question\\nwhether tis nobler in the mind to suffer\\nthe slings and arrows of outrageous fortune\\nor to take arms against a sea of troubles\") == \"YES\""
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n3 1 5\\n') == '26\\n'\nassert solution('1\\n10\\n') == '10\\n'"
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3 1 5\") == \"26\"\nassert solution(\"1\\n10\") == \"10\""
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n3 1 5\\n') == '26\\n'\nassert solution('1\\n10\\n') == '10\\n'"
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"26\", \"Your implementation is wrong. Expected '26', but got '{}'.\".format(solution(3))\nassert solution(1) == \"10\", \"Your implementation is wrong. Expected '10', but got '{}'.\".format(solution(1))"
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n3 1 5\") == \"26\\n\"\nassert solution(\"1\\n10\") == \"10\\n\""
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n3 1 5\\n\") == \"26\"\nassert solution(\"1\\n10\\n\") == \"10\""
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n3 1 5\") == \"26\"\nassert solution(\"1\\n10\") == \"10\""
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"3\\n3 1 5\\n1\\n10\") == \"26\"\nassert solution(stdin=\"1\\n10\") == \"10\""
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"For input {input()}, expected output {expected_output}, but got {solution(input())}\"\n"
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3 1 5\\n\") == \"26\\n\"\nassert solution(\"1\\n10\\n\") == \"10\\n\""
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 3\nassert solution() == 32"
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"3\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4\\n1 3 5\\n\") == \"3\"\nassert solution(\"3 40\\n10 30 50\\n\") == \"32\""
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"3\", \"Your solution is incorrect.\""
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 4\\n1 3 5\\n') == '3'\nassert solution('3 40\\n10 30 50\\n') == '32'"
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 4\\n1 3 5') == '3\\n'\nassert solution('3 40\\n10 30 50') == '32\\n'\nassert solution('3 6\\n1 3 5 7') == '3\\n'\nassert solution('3 6\\n1 3 5 6') == '2\\n'\nassert solution('3 6\\n1 3 5 5') == '1\\n'"
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"Test failed. Expected: {expected}, got: {solution(input())}\""
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\n1 3 5\\n\") == \"3\\n\"\nassert solution(\"3 40\\n10 30 50\\n\") == \"32\\n\""
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4\\n1 3 5\\n\") == \"3\\n\"\nassert solution(\"3 40\\n10 30 50\\n\") == \"32\\n\""
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4\\n1 3 5\\n\") == \"3\\n\"\nassert solution(\"3 40\\n10 30 50\\n\") == \"32\\n\""
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"9 1\\n1 1\\n5 10\\n1 3\\n11 14\\n5 5\\n10 10\\n3 6\\n6 12\\n7 7\\n4 11\") == \"1 4 5 6 7 8 9\"\nassert solution(\"5 1\\n1 1\\n3 3\\n2 3\\n1 2\\n3 4\\n4 5\") == \"1 2 4\"\nassert solution(\"5 1\\n1 1\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5\") == \"1 2\""
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input1) == expected1, \"Input 1 is incorrect.\"\nassert solution(input2) == expected2, \"Input 2 is incorrect.\"\nassert solution(input3) == expected3, \"Input 3 is incorrect.\""
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input1) == [\"1\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"], \"Test case 1\"\nassert solution(input2) == [\"1\", \"2\", \"4\"], \"Test case 2\"\nassert solution(input3) == [\"1\", \"2\"], \"Test case 3\""
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('9 1\\n1 1\\n5 10\\n1 3\\n11 14\\n5 5\\n10 10\\n3 6\\n6 12\\n7 7\\n4 11\\n') == '1 4 5 6 7 8 9\\n'\nassert solution('5 1\\n1 1\\n3 3\\n2 3\\n1 2\\n3 4\\n4 5\\n') == '1 2 4\\n'\nassert solution('5 1\\n1 1\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5\\n') == '1 2\\n'\n"
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('9 1\\n1 1\\n5 10\\n1 3\\n11 14\\n5 5\\n10 10\\n3 6\\n6 12\\n7 7\\n4 11\\n') == '1 4 5 6 7 8 9\\n'\nassert solution('5 1\\n1 1\\n3 3\\n2 3\\n1 2\\n3 4\\n4 5\\n') == '1 2 4\\n'\nassert solution('5 1\\n1 1\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5\\n') == '1 2\\n'\n"
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(f'9 1\\n1 1\\n5 10\\n1 3\\n11 14\\n5 5\\n10 10\\n3 6\\n6 12\\n7 7\\n4 11') == '1 4 5 6 7 8 9'\nassert solution(f'5 1\\n1 1\\n3 3\\n2 3\\n1 2\\n3 4\\n4 5') == '1 2 4'\nassert solution(f'5 1\\n1 1\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5') == '1 2'"
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Expected: {output()}, Received: {solution(input())}\""
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('9 1\\n1 1\\n5 10\\n1 3\\n11 14\\n5 5\\n10 10\\n3 6\\n6 12\\n7 7\\n4 11\\n') == '1 4 5 6 7 8 9\\n'"
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '1 4 5 6 7 8 9', \"Test 1 failed\"\nassert solution() == '1 2 4', \"Test 2 failed\"\nassert solution() == '1 1', \"Test 3 failed\"\nassert solution() == '1 2', \"Test 4 failed\"\nassert solution() == '1 4', \"Test 5 failed\"\nassert solution() == '1 2', \"Test 6 failed\"\nassert solution() == '1 1 3 4', \"Test 7 failed\"\nassert solution() == '1 1 4', \"Test 8 failed\"\nassert solution() == '1 1', \"Test 9 failed\""
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output\nprint(\"All tests passed!\")"
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n2 1\\n1 2.0\\n1 3.100\") == 1\nassert solution(\"3 3\\n1 5.0\\n2 5.5\\n3 6.0\") == 0\nassert solution(\"6 3\\n1 14.284235\\n2 17.921382\\n1 20.328172\\n3 20.842331\\n1 25.790145\\n1 27.204125\") == 2"
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\\n2 1\\n1 2.0\\n1 3.100\") == \"1\\n\"\nassert solution(\"3 3\\n1 5.0\\n2 5.5\\n3 6.0\") == \"0\\n\"\nassert solution(\"6 3\\n1 14.284235\\n2 17.921382\\n1 20.328172\\n3 20.842331\\n1 25.790145\\n1 27.204125\") == \"2\\n\""
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\\n2 1\\n1 2.0\\n1 3.100\") == \"1\"\nassert solution(\"3 3\\n1 5.0\\n2 5.5\\n3 6.0\") == \"0\"\nassert solution(\"6 3\\n1 14.284235\\n2 17.921382\\n1 20.328172\\n3 20.842331\\n1 25.790145\\n1 27.204125\") == \"2\""
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 2\\n2 1\\n1 2.0\\n1 3.100\\n') == '1\\n'\nassert solution('3 3\\n1 5.0\\n2 5.5\\n3 6.0\\n') == '0\\n'\nassert solution('6 3\\n1 14.284235\\n2 17.921382\\n1 20.328172\\n3 20.842331\\n1 25.790145\\n1 27.204125\\n') == '2\\n'\n\nfrom typing import List"
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2\\n2 1\\n1 2.0\\n1 3.100\\n\") == \"1\\n\"\nassert solution(\"3 3\\n1 5.0\\n2 5.5\\n3 6.0\\n\") == \"0\\n\"\nassert solution(\"6 3\\n1 14.284235\\n2 17.921382\\n1 20.328172\\n3 20.842331\\n1 25.790145\\n1 27.204125\\n\") == \"2\\n\""
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2\\n2 1\\n1 2.0\\n1 3.100\\n\") == \"1\\n\"\nassert solution(\"3 3\\n1 5.0\\n2 5.5\\n3 6.0\\n\") == \"0\\n\"\nassert solution(\"6 3\\n1 14.284235\\n2 17.921382\\n1 20.328172\\n3 20.842331\\n1 25.790145\\n1 27.204125\\n\") == \"2\\n\""
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\\n2 1\\n1 2.0\\n1 3.100\\n\") == \"1\"\nassert solution(\"3 3\\n1 5.0\\n2 5.5\\n3 6.0\\n\") == \"0\"\nassert solution(\"6 3\\n1 14.284235\\n2 17.921382\\n1 20.328172\\n3 20.842331\\n1 25.790145\\n1 27.204125\\n\") == \"2\""
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\n2 1\\n1 2.0\\n1 3.100\") == \"1\\n\"\nassert solution(\"3 3\\n1 5.0\\n2 5.5\\n3 6.0\") == \"0\\n\"\nassert solution(\"6 3\\n1 14.284235\\n2 17.921382\\n1 20.328172\\n3 20.842331\\n1 25.790145\\n1 27.204125\") == \"2\\n\""
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\\n2 1\\n1 2.0\\n1 3.100\") == \"1\"\nassert solution(\"3 3\\n1 5.0\\n2 5.5\\n3 6.0\") == \"0\"\nassert solution(\"6 3\\n1 14.284235\\n2 17.921382\\n1 20.328172\\n3 20.842331\\n1 25.790145\\n1 27.204125\") == \"2\""
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_data) == output_data, f\"Test failed. Input: {input_data}, Output: {output_data}\""
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"3\\n\"\n"
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('6 2\\n2 3 6 5 4 10') == '3'\nassert solution('6 1\\n1 1') == '1'\nassert solution('1 1') == '1'\nassert solution('2 3') == '2'\nassert solution('1 1') == '1'"
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 2\\n2 3 6 5 4 10\") == \"3\"\nassert solution(\"6 3\\n2 3 6 5 4 10\") == \"2\"\nassert solution(\"6 4\\n2 3 6 5 4 10\") == \"1\"\n\nfor n, k in [(6, 2), (6, 3), (6, 4)]:\n    assert solution(f\"{n} {k}\") == \"3\"\n\nprint(\"All test cases pass\")"
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 2\\n2 3 6 5 4 10\") == \"3\"\nassert solution(\"5 3\\n1 2 3 4 5\") == \"3\"\nassert solution(\"5 1\\n2 3 4 5\") == \"2\"\nassert solution(\"6 1\\n1 2 3 4 5 6\") == \"2\"\nassert solution(\"7 4\\n1 2 3 4 5 6 7\") == \"3\""
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"3\\n\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 2\\n2 3 6 5 4 10\") == \"3\\n\"\nassert solution(\"10 3\\n1 2 3 4 5 6\") == \"6\\n\"\nassert solution(\"5 3\\n1 2 3 4 5\") == \"3\\n\""
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 2\\n2 3 6 5 4 10\\n\") == \"3\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 2\\n2 3 6 5 4 10\") == \"3\"\n"
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 2\\n2 3 6 5 4 10\") == \"3\""
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('6 2\\n2 3 6 5 4 10') == '3\\n'\nassert solution('10 2\\n2 3 6 5 4 10') == '6\\n'\nassert solution('7 2\\n2 3 6 5 4 10') == '7\\n'\nassert solution('9 2\\n2 3 6 5 4 10') == '10\\n'\nassert solution('10 3\\n2 3 6 5 4 10') == '10\\n'\n\nfrom typing import List\n"
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\"\nassert solution(\"3\\n1 2 3\\n\") == \"4\\n\"\nassert solution(\"9\\n1 2 1 3 2 2 2 2 3\\n\") == \"10\\n\""
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\n1 2\\n') == '2\\n', 'Test case 1'\nassert solution('3\\n1 2 3\\n') == '4\\n', 'Test case 2'\nassert solution('9\\n1 2 1 3 2 2 2 2 3\\n') == '10\\n', 'Test case 3'\n\nsolution = lambda stdin: input()"
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2\", \"Please modify the solution to solve the given problem.\""
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == 'Output\\n4\\n', 'The solution is incorrect.'\n\nprint('The solution is correct.')"
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2\\n1 2\\n3\\n1 2 3\\n9\\n1 2 1 3 2 2 2 2 2 3\\n') == '2\\n'\nassert solution('3\\n1 2 3\\n9\\n1 2 1 3 2 2 2 2 2 3\\n') == '4\\n'\nassert solution('9\\n1 2 1 3 2 2 2 2 2 3\\n') == '10\\n'"
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\"\nassert solution(\"3\\n1 2 3\\n\") == \"4\\n\"\nassert solution(\"9\\n1 2 1 3 2 2 2 2 3\\n\") == \"10\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\", \"Alex doesn't like boredom. That's why whenever he gets bored, he comes up with games.\\n\"\nassert solution(\"3\\n1 2 3\\n\") == \"4\\n\", \"One long winter evening he came up with a game and decided to play it.\\n\"\nassert solution(\"9\\n1 2 1 3 2 2 2 2 3\\n\") == \"10\\n\", \"Alex is a perfectionist, so he decided to get as many points as possible.\\n\"\nassert solution(\"1\\n1\\n\") == \"1\\n\", \"The input sequence is empty.\\n\"\nassert solution(\"0\\n1\\n\") == \"0\\n\", \"The input sequence has only one element.\\n\""
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Input\\n2\\n1 2\\n\\nOutput\\n2\\n\\nInput\\n3\\n1 2 3\\n\\nOutput\\n4\\n\\nInput\\n9\\n1 2 1 3 2 2 2 2 3\\n\\nOutput\\n10\\n\") == \"Output\\n2\\n\\nOutput\\n4\\n\\nOutput\\n10\\n\""
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\"\nassert solution(\"3\\n1 2 3\\n\") == \"4\\n\"\nassert solution(\"9\\n1 2 1 3 2 2 2 2 3\\n\") == \"10\\n\""
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\"\nassert solution(\"3\\n1 2 3\\n\") == \"4\"\nassert solution(\"9\\n1 2 1 3 2 2 2 2 3\\n\") == \"10\""
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(b\"2\\n\") == \"4\\n\"\nassert solution(b\"3\\n\") == \"9\\n\"\nassert solution(b\"4\\n\") == \"16\\n\"\nassert solution(b\"5\\n\") == \"25\\n\"\nassert solution(b\"6\\n\") == \"36\\n\"\nassert solution(b\"7\\n\") == \"49\\n\"\nassert solution(b\"8\\n\") == \"64\\n\"\nassert solution(b\"9\\n\") == \"81\\n\"\nassert solution(b\"10\\n\") == \"100\\n\"\nassert solution(b\"11\\n\") == \"121\\n\"\nassert solution(b\"12\\n\") == \"144\\n\"\nassert solution(b\"13\\n\") == \"169\\n\"\nassert solution(b\"14\\n\") == \"196\\n\"\nassert solution(b\"15\\n\") == \"225\\n\"\nassert solution(b\"16\\n\") == \"256\\n\"\nassert solution(b\"17\\n\") == \"289\\n\"\nassert solution(b\"18\\n\") == \"324\\n\"\nassert solution(b\"19\\n\") == \"361\\n\"\nassert solution(b\"20\\n\") == \"400\\n\""
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"4\\n\", \"Sample Output does not match.\""
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == '4'\nassert solution(2) == '8'\nassert solution(3) == '12'\nassert solution(4) == '16'\nassert solution(5) == '20'"
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n') == '4\\n', \"Output does not match expected output\""
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"4\\n\"\n"
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n\") == \"4\\n\"\nassert solution(\"1\\n\") == \"1\\n\"\nassert solution(\"3\\n\") == \"4\\n\"\nassert solution(\"5\\n\") == \"8\\n\""
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n\") == \"4\\n\", \"Test 1\""
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '4\\n', \"Incorrect output\""
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2\\n') == '4\\n', \"There are 4 infinite sequences that satisfy the conditions.\"\n\nfrom itertools import permutations\n\nn = int(stdin.readline().strip())\n\ncount = 0\n\nfor sequence in permutations([1] * n + [1] + [1] * (n - 1), n):\n    if all(sequence[i] == sequence[i+1] for i in range(n-1)):\n        count += 1\n\nprint(count)"
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"4\"\n"
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 6\\n1 5 1 4') == '5\\n'\nassert solution('6 7\\n2 4 1 6') == '4\\n'\nassert solution('1 4\\n1 1 1 1') == '3\\n'\nassert solution('3 5\\n1 1 1 1') == '4\\n'\nassert solution('6 7\\n2 4 1 6') == '4\\n'\nassert solution('5 5\\n2 3 1 2') == '3\\n'"
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 6\\n1 5 1 4\") == \"5\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\""
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 6\\n1 5 1 4\\n') == '5\\n'\nassert solution('2 6\\n1 5 1 4\\n') == '7\\n'\nassert solution('3 6\\n1 5 1 4\\n') == '10\\n'\nassert solution('5 6\\n1 5 1 4\\n') == '5\\n'\nassert solution('1 5 1 4\\n1 5 1 4\\n') == '12\\n'\nassert solution('2 5 1 4\\n1 5 1 4\\n') == '6\\n'\nassert solution('3 5 1 4\\n1 5 1 4\\n') == '10\\n'\nassert solution('4 5 1 4\\n1 5 1 4\\n') == '5\\n'\nassert solution('5 5 1 4\\n1 5 1 4\\n') == '10\\n'\nassert solution('6 5 1 4\\n1 5 1 4\\n') == '5\\n'\nassert solution('1 5 1 4\\n2 5 1 4\\n') == '12\\n'\nassert solution('2 5 1 4\\n1 5 1 4\\n') == '6\\n'\nassert solution('3 5 1 4\\n1 5 1 4\\n') == '10\\n'\nassert solution('4 5 1 4\\n1 5 1 4\\n') == '5\\n'\nassert solution('5 5 1 4\\n1 5 1 4\\n') == '10\\n'\nassert solution('6 5 1 4\\n1 5 1 4\\n') == '5\\n'\nassert solution('1 5 1 4\\n2 5 1 4\\n3 5 1 4\\n') == '12\\n'\nassert solution('2 5 1 4\\n1 5 1 4\\n') == '6\\n'\nassert solution('3 5 1 4\\n1 5 1 4\\n') == '10\\n'\nassert solution('4 5 1 4\\n1 5 1 4\\n') == '5\\n'\nassert solution('5 5 1 4\\n1 5 1 4\\n') == '10\\n'\nassert solution('6 5 1 4\\n1 5 1 4\\n') == '5\\n'"
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"5\", \"The expected output is incorrect.\""
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"5\\n\", \"Test failed\""
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 6\\n1 5 1 4\\n') == '5'\nassert solution('5 3\\n1 3 1\\n2 2 2\\n3 3 3\\n') == '3'\nassert solution('3 3\\n1 3 1\\n2 2 2\\n3 3 3\\n') == '3'\nassert solution('2 3\\n1 3 1\\n2 2 2\\n3 3 3\\n') == '4'\nassert solution('1 2\\n1 2 1\\n2 2 2\\n3 3 3\\n') == '1'\nassert solution('1 1\\n1 2 1\\n2 2 2\\n3 3 3\\n') == '2'"
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 6\\n1 5 1 4\\n\") == \"5\"\nassert solution(\"2 5\\n1 1 2 1 1\\n\") == \"5\"\nassert solution(\"3 5\\n2 1 2 1 1\\n\") == \"5\"\nassert solution(\"4 5\\n2 1 2 1 1\\n\") == \"5\"\nassert solution(\"5 5\\n2 1 2 1 1\\n\") == \"5\"\nassert solution(\"10 5\\n1 2 3 4 5\\n\") == \"5\""
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 6\\n1 5 1 4\\n\") == \"5\\n\""
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 6\\n1 5 1 4\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 "
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 6\\n1 5 1 4') == '5'\nassert solution('4 6\\n1 5 1 4') == '5'\nassert solution('4 6\\n1 5 1 4') == '5'\nassert solution('4 6\\n1 5 1 4') == '5'\nassert solution('4 6\\n1 5 1 4') == '5'\nassert solution('4 6\\n1 5 1 4') == '5'"
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"+-+-+\") == \"1\"\nassert solution(\"---\") == \"3\""
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"+-+-+\") == \"1\"\nassert solution(\"---\") == \"3\""
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"+-+-+\") == \"1\", \"Test 1\"\nassert solution(\"---\") == \"3\", \"Test 2\""
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('+-+-+') == '1', \"Test Case 1\"\nassert solution('---') == '3', \"Test Case 2\""
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"+-+-+\") == \"1\\n\"\nassert solution(\"---\") == \"3\\n\""
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_string) == expected_output, f\"Expected {expected_output}, got {solution(input_string)}\""
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"+-+-+\") == 1\nassert solution(\"---\") == 3"
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"+-+-+\") == 1, \"Expected 1, got {}\".format(solution(\"+-+-+\"))\nassert solution(\"---\") == 3, \"Expected 3, got {}\".format(solution(\"---\"))"
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"+-+-+\") == 1, \"Polycarpus just has been out of luck lately! As soon as he found a job in the \\\"Binary Cat\\\" cafe, the club got burgled. All ice-cream was stolen.\"\nassert solution(\"---\") == 3, \"Right now the police wonders what minimum number of distinct people Polycarpus could have seen. Assume that he sees anybody coming in or out of the club. Each person could have come in or out an arbitrary number of times.\""
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"+-+-+\") == 1\nassert solution(\"---\") == 3"
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"10110\""
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == '110'\nassert solution(8) == '1101'\nassert solution(11) == '10110'"
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == '10110'"
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output() for input, output in zip(stdin.splitlines(), stdout.splitlines())"
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8') == '10110'\n"
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\\n\") == \"10110\", \"The output should be '10110', but it is '{}'\".format(solution(\"10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\\n\"))"
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\\n\") == \"10110\""
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '10110'"
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"10110\"\n"
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\\n\") == \"10110\\n\"\n"
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\\n\") == \"2\\n1 3\\n\"\nassert solution(\"6 3 2\\n1 3 2 2 3 1\\n1 2 3\\n\") == \"2\\n1 2\\n\""
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\") == \"2\\n1 3\\n\"\nassert solution(\"6 3 2\\n1 3 2 2 3 1\\n1 2 3\") == \"2\\n1 2\\n\""
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == '''\n2\n1 3\n'''"
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 3 1\\n1 2 3 2 1\\n1 2 3') == '2\\n1 3'\nassert solution('6 3 2\\n1 3 2 2 3 1\\n1 2 3') == '2\\n1 2'\n"
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\") == \"2\\n1 3\""
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '2\\n1 3'\n"
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\") == \"2\\n1 3\"\nassert solution(\"6 3 2\\n1 3 2 2 3 1\\n1 2 3\") == \"2\\n1 2\""
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"test\"  # You can replace this with your actual solution"
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\") == \"2\\n1 3\"\nassert solution(\"6 3 2\\n1 3 2 2 3 1\\n1 2 3\") == \"2\\n1 2\""
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"\"\"2\n1 3\n\"\"\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 2\n"
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 2\nprint(\"All tests passed!\")"
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 1 2\\n1 3\\n1 2\\n') == '2'\nassert solution('3 3 1\\n2\\n1 2\\n1 3\\n2 3\\n') == '0'"
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('Input\\n4 1 2\\n1 3\\n1 2\\n\\nInput\\n3 3 1\\n2\\n1 2\\n1 3\\n2 3\\n\\nOutput\\n2\\n\\nInput\\n3 3 1\\n2\\n1 2\\n1 3\\n2 3\\n\\nOutput\\n0\\n') == 'Output\\n2\\n\\n'"
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 1 2\\n1 3\\n1 2\\n\\n3 3 1\\n2\\n1 2\\n1 3\\n2 3\\n\\n0\") == \"2\"\nassert solution(\"3 3 1\\n2\\n1 2\\n1 3\\n2 3\\n\\n0\") == \"0\""
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2\", \"Test case 1 failed\""
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 1 2\\n1 3\\n1 2\\n\\n3 3 1\\n2\\n1 2\\n1 3\\n2 3\\n\") == 2\nassert solution(\"3 3 1\\n2\\n1 2\\n1 3\\n2 3\\n\") == 0"
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '2\\n'\n"
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 1 2\\n1 3\\n1 2\\n\") == \"2\"\nassert solution(\"3 3 1\\n2\\n1 2\\n1 3\\n2 3\\n\") == \"0\"\n"
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 1 2\\n1 3\\n1 2\\n\") == \"2\"\nassert solution(\"3 3 1\\n2\\n1 2\\n1 3\\n2 3\\n\") == \"0\"\n"
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n10 2 3 5 4 2\") == \"3\"\nassert solution(\"4\\n100 100 100 100\") == \"1\"\nassert solution(\"8\\n7 6 5 4 3 2 2 3\") == \"4\""
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n10 2 3 5 4 2\\n\") == \"3\\n\", \"The output is not correct.\"\nassert solution(\"4\\n100 100 100 100\\n\") == \"1\\n\", \"The output is not correct.\"\nassert solution(\"8\\n7 6 5 4 3 2 2 3\\n\") == \"4\\n\", \"The output is not correct.\""
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n10 2 3 5 4 2\") == \"3\"\nassert solution(\"4\\n100 100 100 100\") == \"1\"\nassert solution(\"8\\n7 6 5 4 3 2 2 3\") == \"4\""
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n10 2 3 5 4 2\\n\") == \"3\\n\"\nassert solution(\"4\\n100 100 100 100\\n\") == \"1\\n\"\nassert solution(\"8\\n7 6 5 4 3 2 2 3\\n\") == \"4\\n\""
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '3'\nassert solution() == '1'\nassert solution() == '4'"
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == '1'\nassert solution(4) == '1'\nassert solution(8) == '1'\nassert solution(10) == '1'\nassert solution(100) == '1'"
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n10 2 3 5 4 2\\n\") == \"3\"\nassert solution(\"4\\n100 100 100 100\\n\") == \"1\"\nassert solution(\"8\\n7 6 5 4 3 2 2 3\\n\") == \"4\""
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n10 2 3 5 4 2\") == \"3\"\nassert solution(\"4\\n100 100 100 100\") == \"1\"\nassert solution(\"8\\n7 6 5 4 3 2 2 3\") == \"4\""
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n10 2 3 5 4 2\") == \"3\"\nassert solution(\"4\\n100 100 100 100\") == \"1\"\nassert solution(\"8\\n7 6 5 4 3 2 2 3\") == \"4\"\n"
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n10 2 3 5 4 2\") == \"3\"\nassert solution(\"4\\n100 100 100 100\") == \"1\"\nassert solution(\"8\\n7 6 5 4 3 2 2 3\") == \"4\""
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n1 2\\n1 1\\n3 1 3 2\\n2 1 1\") == \"Yes\\n2\\n2 3\\n\"\nassert solution(\"6 5\\n2 1 2\\n2 1 2\\n3 1 2 3\\n2 1 5\\n2 4 4\\n2 4 4\") == \"Yes\\n0\\n\"\nassert solution(\"4 3\\n4 3 2 2 1\\n3 1 1 3\\n3 2 3 3\\n2 3 1\") == \"No\\n\"\n\nfrom typing import List\n"
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n1 2\\n1 1\\n3 1 3 2\\n2 1 1\") == \"Yes\\n2\\n2 3\"\nassert solution(\"6 5\\n2 1 2\\n2 1 2\\n3 1 2 3\\n2 1 5\\n2 4 4\\n2 4 4\") == \"Yes\\n0\"\nassert solution(\"4 3\\n4 3 2 2 1\\n3 1 1 3\\n3 2 3 3\\n2 3 1\") == \"No\""
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 'Yes', 'The output should be Yes.'"
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3\\n1 2\\n1 1\\n3 1 3 2\\n2 1 1\") == \"Yes\\n2\\n2 3 \"\nassert solution(\"6 5\\n2 1 2\\n2 1 2\\n3 1 2 3\\n2 1 5\\n2 4 4\\n2 4 4\") == \"Yes\\n0\""
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n1 2\\n1 1\\n3 1 3 2\\n2 1 1\") == \"Yes\\n2\\n2 3 \"\nassert solution(\"6 5\\n2 1 2\\n2 1 2\\n3 1 2 3\\n2 1 5\\n2 4 4\\n2 4 4\") == \"Yes\\n0\"\nassert solution(\"4 3\\n4 3 2 2 1\\n3 1 1 3\\n3 2 3 3\\n2 3 1\") == \"No\"\n"
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n6 5\n2 1 2\n2 1 2\n3 1 2 3\n2 1 5\n2 4 4\n2 4 4\n\"\"\") == \"Yes\\n0\"\n\nassert solution(\"\"\"\n4 3\n4 3 2 2 1\n3 1 1 3\n3 2 3 3\n2 3 1\n\"\"\") == \"No\"\n\nassert solution(\"\"\"\n4 3\n1 2\n1 1\n3 1 3 2\n2 1 1\n\"\"\") == \"Yes\\n2\"\n\nassert solution(\"\"\"\n4 3\n3 2 1 2 3 1\n\"\"\") == \"No\""
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n1 2\\n1 1\\n3 1 3 2\\n2 1 1\") == \"Yes\\n2\\n2 3 \"\nassert solution(\"6 5\\n2 1 2\\n2 1 2\\n3 1 2 3\\n2 1 5\\n2 4 4\\n2 4 4\") == \"Yes\\n0\"\nassert solution(\"4 3\\n4 3 2 2 1\\n3 1 1 3\\n3 2 3 3\\n2 3 1\") == \"No\"\n"
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n4 3\n1 2\n1 1\n3 1 3 2\n2 1 1\n''') == \"No\"\n\nassert solution('''\n6 5\n2 1 2\n2 1 2\n3 1 2 3\n2 1 5\n2 4 4\n2 4 4\n''') == \"Yes\"\n\nassert solution('''\n4 3\n4 3 2 2 1\n3 1 1 3\n3 2 3 3\n2 3 1\n''') == \"No\""
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n1 2\\n1 1\\n3 1 3 2\\n2 1 1\") == \"Yes\\n2\\n2 3\"\nassert solution(\"6 5\\n2 1 2\\n2 1 2\\n3 1 2 3\\n2 1 5\\n2 4 4\\n2 4 4\") == \"Yes\\n0\"\nassert solution(\"4 3\\n4 3 2 2 1\\n3 1 1 3\\n3 2 3 3\\n2 3 1\") == \"No\""
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    4 3\n    1 2\n    1 1\n    3 1 3 2\n    2 1 1\n    \"\"\"\n) == \"Yes\\n2\\n2 3 \"\n\nassert solution(\n    \"\"\"\n    6 5\n    2 1 2\n    2 1 2\n    3 1 2 3\n    2 1 5\n    2 4 4\n    2 4 4\n    \"\"\"\n) == \"Yes\\n0\\n\""
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\") == \"20\\n0 2 1 4 3\"\nassert solution(\"5\") == \"4\\n0 1 3 4 2\"\nassert solution(\"6\") == \"10\\n1 4 3 2 0\"\nassert solution(\"7\") == \"18\\n0 2 4 1 3\"\nassert solution(\"8\") == \"16\\n0 1 3 2 4\"\nassert solution(\"9\") == \"20\\n0 1 2 3 4\"\nassert solution(\"10\") == \"10\\n1 2 3 4 0\"\nassert solution(\"11\") == \"20\\n0 1 2 3 4\"\nassert solution(\"12\") == \"20\\n0 1 2 3 4\"\nassert solution(\"13\") == \"20\\n0 1 2 3 4\"\nassert solution(\"14\") == \"10\\n1 2 3 4 0\"\nassert solution(\"15\") == \"20\\n0 1 2 3 4\"\nassert solution(\"16\") == \"20\\n0 1 2 3 4\"\nassert solution(\"17\") == \"20\\n0 1 2 3 4\"\nassert solution(\"18\") == \"16\\n0 1 3 2 4\"\nassert solution(\"19\") == \"20\\n0 1 2 3 4\"\nassert solution(\"20\") == \"20\\n0 1 2 3 4\"\n"
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 12\nassert solution(4) == 12\nassert solution(5) == 12\nassert solution(6) == 12\nassert solution(7) == 12\nassert solution(8) == 12\nassert solution(9) == 12\nassert solution(10) == 12\nassert solution(11) == 12\nassert solution(12) == 12\nassert solution(13) == 12\nassert solution(14) == 12\nassert solution(15) == 12\nassert solution(16) == 12\nassert solution(17) == 12\nassert solution(18) == 12\nassert solution(19) == 12\nassert solution(20) == 12\nassert solution(21) == 12\nassert solution(22) == 12\nassert solution(23) == 12\nassert solution(24) == 12\nassert solution(25) == 12\nassert solution(26) == 12\nassert solution(27) == 12\nassert solution(28) == 12\nassert solution(29) == 12\nassert solution(30) == 12\nassert solution(31) == 12\nassert solution(32) == 12\nassert solution(33) == 12\nassert solution(34) == 12\nassert solution(35) == 12\nassert solution(36) == 12\nassert solution(37) == 12\nassert solution(38) == 12\nassert solution(39) == 12\nassert solution(40) == 12\nassert solution(41) == 12\nassert solution(42) == 12\nassert solution(43) == 12\nassert solution(44) == 12\nassert solution(45) == 12\nassert solution(46) == 12\nassert solution(47) == 12\nassert solution(48) == 12\nassert solution(49) == 12\nassert solution(50) == 12\nassert solution(51) == 12\nassert solution(52) == 12\nassert solution(53) == 12\nassert solution(54) == 12\nassert solution(55) == 12\nassert solution(56) == 12\nassert solution(57) == 12\nassert solution(58) == 12\nassert solution(59) == 12\nassert solution(60) == 12\nassert solution(61) == 12\nassert solution(62) == 12\nassert solution(63) == 12\nassert solution(64) == 12\nassert solution(65) == 12\nassert solution(66) == 12\nassert solution(67) == 12\nassert solution(68) == 12\nassert solution(69) == 12\nassert solution(70) == 12\nassert solution(71) == 12\nassert solution(72) == 12\nassert solution(73) == 12\nassert solution(74) == 12\nassert solution(75) == 12\nassert solution(76) == 12\nassert solution(77) == 12\nassert solution(78) == 12\nassert solution(79) == 12\nassert solution(80) == 12\nassert solution(81) == 12\nassert solution(82) == 12\nassert solution(83) == 12\nassert solution(84) == 12\nassert solution(85) == 12\nassert solution(86) == 12\nassert solution(87) == 12\nassert solution(88) == 12\nassert solution(89) == 12\nassert solution(90) == 12\nassert solution(91) == 12\nassert solution(92) == 12\nassert solution(93) == 12\nassert solution(94) == 12\nassert solution(95) == 12\nassert solution(96) == 12"
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n\") == \"20\\n0 2 1 4 3\"\nassert solution(\"8\\n\") == \"20\\n0 2 1 4 3 5 6 7\"\nassert solution(\"10\\n\") == \"20\\n0 2 1 4 3 5 6 7 8\"\nassert solution(\"12\\n\") == \"20\\n0 2 1 4 3 5 6 7 8 9\"\nassert solution(\"14\\n\") == \"20\\n0 2 1 4 3 5 6 7 8 9 10\""
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\") == \"20\"  # Test case 1\nassert solution(\"5\") == \"22 18\"  # Test case 2\nassert solution(\"6\") == \"23 19\"  # Test case 3\nassert solution(\"7\") == \"24 20\"  # Test case 4\nassert solution(\"8\") == \"25 21\"  # Test case 5"
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(4) == 20\nprint(solution(4))\nassert solution(5) == 25\nprint(solution(5))"
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(4) == \"20\"\nassert solution(7) == \"0 2 1 4 3\""
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(4) == \"20\"\nassert solution(5) == \"0 2 1 4 3\"\n"
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(4) == 20\nassert solution(12) == 20\nassert solution(20) == 20\nassert solution(5) == 0\nassert solution(3) == 0\nassert solution(7) == 0"
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4') == '20\\n0 2 1 4 3'\nassert solution('10') == '0 3 4 6 1 8 5 7 2\\n1 7 6 4 8 5 3 2 9'\nassert solution('30') == '0 1 3 5 7 6 8 2 4 9 10\\n0 8 9 7 5 3 6 2 1 4\\n10 5 1 9 3 4 7 8 2 0\\n3 2 5 0 8 1 6 7 4 9'\nassert solution('0') == '1\\n1'\nassert solution('1') == '2'"
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10\\n\") == \"20\\n\"\nassert solution(\"10\\n10\") == \"20\\n[0, 2, 1, 4, 3]\"\nassert solution(\"10\\n5\\n20\\n10\") == \"20\\n[0, 2, 1, 4, 3]\"\nassert solution(\"10\\n5\\n20\\n10\\n10\\n10\") == \"20\\n[0, 2, 1, 4, 3]\"\nassert solution(\"10\\n5\\n20\\n10\\n10\\n10\\n10\") == \"20\\n[0, 2, 1, 4, 3]\"\nassert solution(\"10\\n5\\n20\\n10\\n10\\n10\\n10\\n10\\n10\") == \"20\\n[0, 2, 1, 4, 3]\"\nassert solution(\"10\\n5\\n20\\n10\\n10\\n10\\n10\\n10\\n10\\n10\") == \"20\\n[0, 2, 1, 4, 3]\"\nassert solution(\"10\\n5\\n20\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\") == \"20\\n[0, 2, 1, 4, 3]\""
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n1 1\") == \"YES\"\nassert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\") == \"NO\""
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n0 0') == 'YES'\nassert solution('3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n0 0') == 'NO'\n"
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution([3, 4, 0, 0, 0, 0, 2, 0, 0, 2, 2, 2, 0, 0, 0, 1, 1]) == \"YES\"\nassert solution([3, 4, 0, 0, 0, 0, 2, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0]) == \"NO\""
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input) == expected, f\"Error: expected '{expected}', got '{solution(input)}'\""
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"YES\\n\""
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"YES\"\nassert solution(stdin) == \"NO\""
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == 'YES\\n'"
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n1 1''') == 'YES'\nassert solution('''3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n0 0''') == 'NO'\nassert solution('''3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n0 0\n3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n0 0''') == 'YES'"
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n1 1\") == \"YES\"\nassert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\") == \"NO\""
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(['3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n1 1\\n', '3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n']) == 'YES'\nassert solution(['3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n']) == 'NO'"
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected"
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1\\n1\\n1\\n\") == \"1\\n3\\n7\\n\"\nassert solution(\"5\\n1\\n0\\n1\\n0\\n1\\n\") == \"1\\n4\\n10\\n22\\n43\\n\"\nassert solution(\"9\\n1\\n1\\n0\\n0\\n0\\n1\\n1\\n0\\n1\\n\") == \"1\\n3\\n10\\n24\\n51\\n109\\n213\\n421\\n833\\n\""
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"11\") == \"11\"\nassert solution(\"111\") == \"111\"\nassert solution(\"010\") == \"010\"\nassert solution(\"011\") == \"011\"\nassert solution(\"100\") == \"100\"\nassert solution(\"101\") == \"101\"\nassert solution(\"110\") == \"110\"\nassert solution(\"111\") == \"111\"\nassert solution(\"0011\") == \"0011\"\nassert solution(\"0101\") == \"0101\"\nassert solution(\"1110\") == \"1110\"\nassert solution(\"1111\") == \"1111\"\nassert solution(\"00011\") == \"00011\"\nassert solution(\"00101\") == \"00101\"\nassert solution(\"000111\") == \"000111\"\nassert solution(\"01001\") == \"01001\"\nassert solution(\"01101\") == \"01101\"\nassert solution(\"11011\") == \"11011\"\nassert solution(\"11101\") == \"11101\"\nassert solution(\"001001\") == \"001001\"\nassert solution(\"001101\") == \"001101\"\nassert solution(\"010111\") == \"010111\"\nassert solution(\"111001\") == \"111001\"\nassert solution(\"111101\") == \"111101\"\nassert solution(\"100011\") == \"100011\"\nassert solution(\"100111\") == \"100111\"\nassert solution(\"110011\") == \"110011\"\nassert solution(\"110111\") == \"110111\"\nassert solution(\"0010001\") == \"0010001\"\nassert solution(\"0010101\") == \"0010101\"\nassert solution(\"0011001\") == \"0011001\"\nassert solution(\"0100011\") == \"0100011\"\nassert solution(\"0100111\") == \"0100111\"\nassert solution(\"0110011\") == \"0110011\"\nassert solution(\"0110111\") == \"0110111\"\nassert solution(\"1000011\") == \"1000011\"\nassert solution(\"1000111\") == \"1000111\"\nassert solution(\"1100011\") == \"1100011\"\nassert solution(\"1100111\") == \"1100111\"\nassert solution(\"10001001\") == \"10001001\"\nassert solution(\"10001101\") == \"10001101\"\nassert solution(\"10011011\") == \"10011011\"\nassert solution(\"10110111\") == \"10110111\"\nassert solution(\"11010111\") == \"11010111\"\nassert solution(\"11100011\") == \"11100011\"\nassert solution(\"11100111\") == \"11100111\"\nassert solution(\"11110011\") == \"11110011\"\nassert solution(\"11110111\") == \"11110111\"\nassert solution(\"100010001\") == \"100010001\"\nassert solution(\"100010011\") == \"100010011\"\nassert solution(\"100011001\") == \"100011001"
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\"\n"
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"111\") == \"1T111\"\nassert solution(\"10101\") == \"10101\"\nassert solution(\"111110\") == \"11111\"\nassert solution(\"11111\") == \"1111\"\nassert solution(\"1111\") == \"1111\"\n\nprint(\"All tests passed.\")"
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"0\") == \"0\"\nassert solution(\"11\") == \"11\"\nassert solution(\"01011\") == \"01011\"\nassert solution(\"1110\") == \"1110\"\nassert solution(\"1111\") == \"1111\"\nassert solution
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1\\n0\\n1\\n0\\n1\\n\\n9\\n1\\n1\\n0\\n0\\n0\\n1\\n1\\n0\\n1\\n\\n\\n\") == \"1\\n4\\n10\\n22\\n43\\n73\""
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1\\n1\\n1\\n\") == \"1\\n3\\n7\\n\"\nassert solution(\"5\\n1\\n0\\n1\\n0\\n1\\n\") == \"1\\n4\\n10\\n22\\n43\\n\"\nassert solution(\"9\\n1\\n1\\n0\\n0\\n0\\n1\\n1\\n0\\n1\\n\") == \"1\\n3\\n10\\n24\\n51\\n109\\n213\\n421\\n833\\n\""
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n1\\n1') == '1\\n3\\n7'\nassert solution('1\\n1\\n0\\n1\\n0\\n1\\n') == '1\\n4\\n10\\n22\\n43\\n'\nassert solution('1\\n1\\n1\\n1') == '1\\n3\\n7'"
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n1\\n1\\n\") == \"1\\n3\\n7\"\nassert solution(\"5\\n1\\n0\\n1\\n0\\n1\\n\") == \"1\\n4\\n10\\n22\\n43\\n\"\nassert solution(\"9\\n1\\n1\\n0\\n0\\n0\\n1\\n1\\n0\\n1\\n\") == \"1\\n3\\n10\\n24\\n51\\n109\\n213\\n421\\n833\"\n\nfrom typing import List"
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_data) == expected_output, f\"Test case {index + 1} failed. Expected: {expected_output}, Got: {solution(input_data)}\""
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"First\\nSecond\\nFirst\\n\", \"The solution is incorrect.\""
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2') == 'First\\nSecond\\nFirst'"
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\") == \"First\\nSecond\\nFirst\\n\"\n\nassert solution(\"3 2\\n5 7\\n1 3\\n7 6\\n1 4\\n9 1\\n5 6\\n1 2\\n4 8\\n2 5\\n\") == \"First\\nFirst\\nSecond\"\n\nassert solution(\"3 1\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\") == \"First\"\n\nassert solution(\"3 1\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\") == \"Second\"\n\nassert solution(\"3 3\\n5 7\\n1 3\\n7 6\\n1 4\\n9 1\\n5 6\\n1 2\\n4 8\\n2 5\\n\") == \"Second\"\n\nassert solution(\"3 3\\n5 7\\n1 3\\n7 6\\n1 4\\n9 1\\n5 6\\n1 2\\n4 8\\n2 5\\n\") == \"First\""
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\") == \"First\\nSecond\""
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 'First\\nSecond\\nFirst'"
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Test failed. Input: {input()}, Output: {output()}\""
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\\n\") == \"First\\nSecond\\nFirst\"\nassert solution(\"3\\n3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\\n1\\n\") == \"First\\nSecond\\nFirst\"\nassert solution(\"3\\n3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\\n1\\n2\\n\") == \"First\\nSecond\\nFirst\""
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n3\n3 0\n6 2\n1 2\n2 3\n15 10\n12 14\n8 3\n10 1\n14 6\n12 6\n1 9\n13 1\n2 5\n3 9\n7 2\n\"\"\".strip()\n) == \"First\\nSecond\\nFirst\\n\""
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\\n\") == \"First\\nSecond\\nFirst\\n\""
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abba\") == \"Mike\\nAnn\\nAnn\"\nassert solution(\"cba\") == \"Mike\\nMike\\nMike\\ndef solution(stdin: str) -> str:\n    pass\""
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abba\") == \"Mike\\nAnn\\nAnn\\nMike\"\nassert solution(\"cba\") == \"Mike\\nMike\\nMike\\ndef solution(stdin: str) -> str:\n    pass\""
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abba\") == \"Mike\\nAnn\\nAnn\"\nassert solution(\"cba\") == \"Mike\\nMike\\nMike\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\\treturn \\\"Mike\\\"\\n\""
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('abba') == 'Mike'\nassert solution('cba') == 'Mike'"
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abba\") == \"Mike\"\nassert solution(\"cba\") == \"Mike\""
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abba\") == [\"Mike\", \"Ann\"]\nassert solution(\"cba\") == [\"Mike\", \"Mike\", \"Mike\", \"def\"]"
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('abba') == ['Mike']\nassert solution('cba') == ['Mike', 'Mike', 'Mike', 'def']"
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abba\") == \"Mike\\nAnn\"\nassert solution(\"cba\") == \"Mike\\nMike\\nMike\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abba\") == \"Mike\"\nassert solution(\"cba\") == \"Mike\""
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abba\") == \"Mike\"\nassert solution(\"cba\") == \"Mike\"\nassert solution(\"abcd\") == \"Ann\"\nassert solution(\"aabbbabbb\") == \"Mike\""
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n8 3 8\\n1 2\\n2 3\") == \"0\\n\"\nassert solution(\"3 2\\n8 12 8\\n1 2\\n2 3\") == \"2\\n\""
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\\n8 3 8\\n1 2\\n2 3\") == 0\nassert solution(\"3 2\\n8 12 8\\n1 2\\n2 3\") == 2"
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\\n8 3 8\\n1 2\\n2 3\") == \"0\\n\"\nassert solution(\"3 2\\n8 12 8\\n1 2\\n2 3\") == \"2\\n\""
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 0, \"Testcase failed\""
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2\\n8 3 8\\n1 2\\n2 3\\n\") == \"0\"\n\nassert solution(\"3 2\\n8 12 8\\n1 2\\n2 3\\n\") == \"2\""
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2\\n8 3 8\\n1 2\\n2 3\\n\") == \"0\\n\"\nassert solution(\"3 2\\n8 12 8\\n1 2\\n2 3\\n\") == \"2\\n\""
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"0\\n\""
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\n8 3 8\\n1 2\\n2 3\\n\") == \"0\"\nassert solution(\"3 2\\n8 12 8\\n1 2\\n2 3\\n\") == \"2\""
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"0\\n\""
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\\n8 3 8\\n1 2\\n2 3\\n\") == \"0\\n\"\nassert solution(\"3 2\\n8 12 8\\n1 2\\n2 3\\n\") == \"2\\n\""
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"ababacd\"\nassert solution(stdin) == \"-1\""
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 4\") == \"ababacd\"\nassert solution(\"4 7\") == \"-1\""
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(4, 7) == \"-1\""
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"ababacd\"\nassert solution(input()) == \"-1\""
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"ababacd\"\nassert solution(input()) == \"-1\""
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 4\") == \"ababacd\"\nassert solution(\"4 7\") == \"-1\""
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 4\") == \"ababacd\"\nassert solution(\"4 7\") == \"-1\""
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 4\") == \"ababacd\"\nassert solution(\"4 7\") == \"-1\""
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 4\") == \"ababacd\"\nassert solution(\"4 7\") == \"-1\"\n\nfrom typing import List\n"
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"ababacd\"\nassert solution(input()) == \"-1\""
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()\nfor input, output in zip(input_data, output_data):\n    assert solution(input) == output, f\"Test failed for input {input}, expected output {output}\"\n\ninput_data = [\n    (\"4\\n1 2 1 2\", \"4\"),\n    (\"10\\n1 1 2 2 2 1 1 2 2 1\", \"9\"),\n]\n\noutput_data = [\n    (\"4\\n1 2 1 2\", 4),\n    (\"10\\n1 1 2 2 2 1 1 2 2 1\", 9),\n]"
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 2 1 2\\n\") == \"4\\n\"\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\\n\") == \"9\\n\""
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Output\""
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n1 2 1 2\\n10\\n1 1 2 2 2 1 1 2 2 1\\n') == '4\\n'\nassert solution('10\\n1 1 2 2 2 1 1 2 2 1\\n') == '9\\n'"
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 2 1 2') == 4\nassert solution('10 1 1 2 2 1 1 2 2 1') == 9"
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 2 1 2\\n\") == \"4\"\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\\n\") == \"9\""
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 2 1 2\") == \"4\\n\"\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\") == \"9\\n\""
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 2 1 2\") == \"4\"\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\") == \"9\""
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 1 2\\n\") == \"4\\n\"\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\\n\") == \"9\\n\""
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"4\"\nassert solution() == \"9\"\n"
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''2 2 1\n1 1 2\n2 2 1''') == '''2\n-\n2\n+'''\nassert solution('''6 6 3\n2 2 6\n1 4 5\n2 3 4\n1 4 1\n1 3 1\n2 2 3''') == '''6\n++-\n2\n+-+'''"
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"\"\"\n2\n-\n2\n+\n\"\"\""
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2 1\\n1 1 2\\n2 2 1\") == \"2\"\nassert solution(\"6 6 3\\n2 2 6\\n1 4 5\\n2 3 4\\n1 4 1\\n1 3 1\\n2 2 3\") == \"6\\n++-\\n2\\n+-+def solution(stdin: str) -> str:\\n    pass\\n\\n\\nassert solution(\\\"2 2 1\\n1 1 2\\n2 2 1\\\") == \\\"2\\\"\\nassert solution(\\\"6 6 3\\n2 2 6\\n1 4 5\\n2 3 4\\n1 4 1\\n1 3 1\\n2 2 3\\\") == \\\"6\\n++-\\n2\\n+-+def solution(stdin: str) -> str:\\n    pass\\n\\n\\nassert solution(\\\"2 2 1\\n1 1 2\\n2 2 1\\\") == \\\"2\\\"\\nassert solution(\\\"6 6 3\\n2 2 6\\n1 4 5\\n2 3 4\\n1 4 1\\n1 3 1\\n2 2 3\\\") == \\\"6\\n++-\\n2\\n+-+def solution(stdin: str) -> str:\\n    pass\\n\\n\\nassert solution(\\\"2 2 1\\n1 1 2\\n2 2 1\\\") == \\\"2\\\"\\nassert solution(\\\"6 6 3\\n2 2 6\\n1 4 5\\n2 3 4\\n1 4 1\\n1 3 1\\n2 2 3\\\") == \\\"6\\n++-\\n2\\n+-+def solution(stdin: str) -> str:\\n    pass\\n\\n\\nassert solution(\\\"2 2 1\\n1 1 2\\n2 2 1\\\") == \\\"2\\\"\\nassert solution(\\\"6 6 3\\n2 2 6\\n1 4 5\\n2 3 4\\n1 4 1\\n1 3 1\\n2 2 3\\\") == \\\"6\\n++-\\n2\\n+-+def solution(stdin: str) -> str:\\n    pass\\n\\n\\nassert solution(\\\"2 2 1\\n1 1 2\\n2 2 1\\\") == \\\"2\\\"\\nassert solution(\\\"6 6 3\\n2 2 6\\n1 4 5\\n2 3 4\\n1 4 1\\n1 3 1\\n2 2 3\\\") == \\\"6\\n++-\\n2\\n+-+def solution(stdin: str) -> str:\\n    pass\\n\\n\\nassert solution(\\\"2 2 1\\n1 1 2\\n2 2 1\\\") == \\\"2\\\"\\nassert solution(\\\"6 6 3\\n2 2 6\\n1 4 5\\n2 3 4\\n1 4 1\\n1 3 1\\n2 2 3\\\") == \\\"6\\n++-\\n2\\n+-+def solution(stdin: str) -> str:\\n    pass\\n\\n\\nassert solution(\\\"2 2 1\\n1 1 2\\n2 2 1\\\") == \\\"2\\\"\\nassert solution(\\\"6 6 3\\n2 2 6\\n1 4 5\\n2 3 4\\n1 4 1\\n1 3 1\\n2 2 3\\\") == \\\"6\\n++-\\n2\\n+-+def solution(stdin: str) -> str:\\n    pass\\n\\n\\nassert solution(\\\"2 2 1\\n1 1 2\\n2 2 1\\\") == \\\"2\\\"\\nassert solution(\\\"6 6 3\\n2 2 6\\n1 4 5\\n2 3 4\\n1 4 1\\n1 3 1\\n2 2 3\\\") == \\\"6\\n++-\\n2\\n+-+def solution(stdin: str) -> str:\\n    pass\\n\\n\\nassert solution(\\\"2 2 1\\n1 1 2\\n2 2 1\\\") == \\\"2\\\"\\"
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 2 1') == '2\\n-'\nassert solution('6 6 3') == '6\\n++-\\n2\\n+-+'"
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '''2\n+-+'''"
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output, f\"For input {stdin}, expected output {expected_output}, but got {solution(stdin)}\""
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2\\n-\\n2\\n+\""
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 2 1\\n1 1 2\\n2 2 1') == '2\\n-\\n2\\n+'\nassert solution('6 6 3\\n2 2 6\\n1 4 5\\n2 3 4\\n1 4 1\\n1 3 1\\n2 2 3') == '6\\n++-\\n2\\n+-+'\nassert solution('') == ''\nassert solution('2 1\\n1 2\\n2 3') == ''\nassert solution('2 3\\n3 1\\n1 4\\n2 5') == ''"
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n2 2 1\n1 1 2\n2 2 1\n''') == '''\n2\n-\n2\n+\n'''\n\nassert solution('''\n6 6 3\n2 2 6\n1 4 5\n2 3 4\n1 4 1\n1 3 1\n2 2 3\n''') == '''\n6\n++-\n2\n+-+\n'''"
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: '{expected_output}', but got: '{solution(input())}'\"\n\nfrom typing import List"
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1689\") == \"1869\"\nassert solution(\"18906\") == \"18690\""
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1689\") == \"1869\", \"Input 1\"\nassert solution(\"18906\") == \"18690\", \"Input 2\""
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1689\") == \"1869\"\nassert solution(\"18906\") == \"18690\""
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1689\") == \"1869\", \"Input 1\"\nassert solution(\"18906\") == \"18690\", \"Input 2\""
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1689\") == \"1869\"\nassert solution(\"18906\") == \"18690\""
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected(), \"Your code is incorrect. Please check the examples and the function definition.\""
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1689\") == \"1869\", \"Incorrect output for input 1689\"\nassert solution(\"18906\") == \"18690\", \"Incorrect output for input 18906\""
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1689') == '1869'\nassert solution('18906') == '18690'"
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1689\") == \"1869\", \"The output is incorrect.\"\nassert solution(\"18906\") == \"18690\", \"The output is incorrect.\""
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1689\") == \"1869\", \"Incorrect output. Expected 1869 but got {0}\".format(solution(\"1689\"))\nassert solution(\"18906\") == \"18690\", \"Incorrect output. Expected 18690 but got {0}\".format(solution(\"18906\"))"
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_sample1) == output_sample1\nassert solution(input_sample2) == output_sample2\nassert solution(input_sample3) == output_sample3\nassert solution(input_sample4) == output_sample4\nassert solution(input_sample5) == output_sample5"
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 2\\n1 3\\n3 4\\n') == '2'\nassert solution('4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n5 1\\n1 2\\n') == '-1'\nassert solution('5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n') == '3'"
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, but got: {solution(input())}\""
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n    4 2\n    1 3\n    3 4\n    ''') == '2'\nassert solution('''\n    4 6\n    1 2\n    1 3\n    1 4\n    2 3\n    2 4\n    3 4\n    ''') == '-1'\nassert solution('''\n    5 5\n    4 2\n    3 5\n    4 5\n    5 1\n    1 2\n    ''') == '3'\nassert solution('''\n    5 5\n    4 2\n    3 5\n    4 5\n    5 1\n    2 4\n    ''') == '3'\nassert solution('''\n    5 5\n    4 2\n    3 5\n    4 5\n    5 1\n    3 4\n    ''') == '-1'"
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\n1 3\\n3 4\\n\") == \"2\"\nassert solution(\"4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n5 1\\n1 2\\n\") == \"-1\"\nassert solution(\"5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n\") == \"3\""
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n1 3\\n3 4\\n\") == \"2\"\nassert solution(\"4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n\") == \"-1\"\nassert solution(\"5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n\") == \"3\""
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 2\\n1 3\\n3 4') == 2\nassert solution('4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n4 5\\n5 1\\n1 2') == -1\nassert solution('5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n1 3') == 3"
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 2\\n1 3\\n3 4\\n') == '2'\nassert solution('4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n5 1\\n1 2\\n') == '-1'\nassert solution('5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n') == '3'"
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 2\\n1 3\\n3 4\\n') == '2'\nassert solution('4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n5 1\\n1 2\\n') == '-1'\nassert solution('5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n') == '3'"
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n4 7\\n\") == \"3\\n\"\nassert solution(\"3\\n4 3 1\\n\") == \"9\\n\""
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\n4 7\\n') == '3\\n'\nassert solution('3\\n4 3 1\\n') == '9\\n'\n"
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n4 7\") == \"3\\n\"\nassert solution(\"3\\n4 3 1\") == \"9\\n\""
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n4 7\") == \"3\\n\"\nassert solution(\"3\\n4 3 1\") == \"9\\n\""
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n4 7\") == \"3\\n\"\nassert solution(\"3\\n4 3 1\") == \"9\\n\"\nassert solution(\"2\\n5 6 7\") == \"12\\n\"\nassert solution(\"3\\n4 3 1 2\") == \"6\\n\"\nassert solution(\"4\\n1 2 3 4\") == \"10\\n\""
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n4 7\\n\") == \"3\\n\"\nassert solution(\"3\\n4 3 1\\n\") == \"9\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"15\\n\"\n"
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(solution(stdin)) == \"3\"\nassert solution(solution(stdin)) == \"3\""
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n4 7\") == \"3\\n\"\nassert solution(\"3\\n4 3 1\") == \"9\\n\""
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"3\\n\"\nassert solution() == \"9\\n\""
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n4 7\\n\") == \"3\"\nassert solution(\"3\\n4 3 1\\n\") == \"9\""
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n4 8 5\\n5\\n4\\n0 5 15 10\\n1\\n1\") == \"9\"\nassert solution(\"5\\n3 10 2 1 5\\n4\\n0 5 15 10\\n1\\n1\") == \"2\"\nassert solution(\"4\\n0 5 15 10\\n1\\n1\") == \"0\"\nassert solution(\"1\\n1\") == \"-1\""
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 8 5\") == \"9\"\nassert solution(\"5\\n3 10 2 1 5\") == \"2\"\nassert solution(\"4\\n0 5 15 10\") == \"0\"\nassert solution(\"1\\n1\") == \"-1\""
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n4 8 5\") == \"9\"\nassert solution(\"5\\n3 10 2 1 5\") == \"2\"\nassert solution(\"4\\n0 5 15 10\") == \"0\"\nassert solution(\"1\\n1\") == \"-1\"\n"
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 9, \"Output should be 9\"\nassert solution(5) == 2, \"Output should be 2\"\nassert solution(4) == 0, \"Output should be 0\"\nassert solution(1) == -1, \"Output should be -1\""
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n4 8 5\\n') == '9'\nassert solution('5\\n3 10 2 1 5\\n') == '2'\nassert solution('4\\n0 5 15 10\\n') == '0'\nassert solution('1\\n1\\n') == '-1'"
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Solution is incorrect for input {input()} and expected output {expected_output}\"\n"
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n4 8 5\\n\") == \"9\"\nassert solution(\"5\\n3 10 2 1 5\\n\") == \"2\"\nassert solution(\"4\\n0 5 15 10\\n\") == \"0\"\nassert solution(\"1\\n1\\n\") == \"-1\""
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('Input\\n3\\n4 8 5\\n') == '9'\nassert solution('Input\\n5\\n3 10 2 1 5\\n') == '2'\nassert solution('Input\\n4\\n0 5 15 10\\n') == '0'\nassert solution('Input\\n1\\n1\\n') == '-1'\n"
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == \"9\"\nassert solution(5) == \"2\"\nassert solution(4) == \"0\"\nassert solution(1) == \"-1\""
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(example1) == \"9\"\nassert solution(example2) == \"2\"\nassert solution(example3) == \"0\"\nassert solution(example4) == \"-1\""
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 4 5\\n3 5 7 10\") == \"3\"\nassert solution(\"13 4 5\\n7 8 9 10\") == \"1\""
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input) == output, f\"The output is {output}, but the function should return {solution(input)}.\""
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input) == output, f\"The solution is incorrect. Expected '{output}', but got '{solution(input)}'.\" for input, output in [\n    (\"10 4 5\", \"3\"),\n    (\"13 4 5\", \"1\"),\n]"
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 4 5\\n3 5 7 10\") == \"3\\n\"\nassert solution(\"13 4 5\\n7 8 9 10\") == \"1\\n\""
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"sample_input.txt\", \"r\")) == \"3\"\nassert solution(open(\"sample_input.txt\", \"r\")) == \"1\""
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 4 5\\n3 5 7 10\\n\") == \"3\\n\"\nassert solution(\"13 4 5\\n7 8 9 10\\n\") == \"1\\n\""
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 3, \"Expected output: 3, got: \" + str(solution)"
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '3'\nassert solution() == '1'"
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(10, 4, 5) == 3, \"Incorrect output\"\nassert solution(13, 4, 5) == 1, \"Incorrect output\"\n\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n101\\n3 3\\n3 2\\n3 1\") == \"2\"\nassert solution(\"4\\n1111\\n3 4\\n5 2\\n3 1\\n3 2\") == \"4\"\nassert solution(\"6\\n011100\\n5 3\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\") == \"6\"\n"
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n101\\n3 3\\n3 2\\n3 1\\n\") == \"2\\n\"\nassert solution(\"4\\n1111\\n3 4\\n5 2\\n3 1\\n3 2\\n\") == \"4\\n\"\nassert solution(\"6\\n011100\\n5 3\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n\") == \"6\\n\""
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n101\\n3 3\\n3 2\\n3 1\") == \"2\"\nassert solution(\"4\\n1111\\n3 4\\n5 2\\n3 1\\n3 2\") == \"4\"\nassert solution(\"6\\n011100\\n5 3\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\") == \"6\""
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(str(input())) == str(2), \"The largest number of simultaneously on lamps is 2.\"\nassert solution(str(input())) == str(4), \"The answer is 4.\"\nassert solution(str(input())) == str(6), \"The answer is 6.\""
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n011\\n3 3\\n3 2\\n3 1\") == \"2\\n\"\nassert solution(\"2\\n1111\\n3 4\\n5 2\\n3 1\\n3 2\\n4 2\\n1 5\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n5 "
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n101\\n3 3\\n3 2\\n3 1\\n') == 2\nassert solution('4\\n1111\\n3 4\\n5 2\\n3 1\\n3 2\\n') == 4\nassert solution('6\\n011100\\n5 3\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n') == 6\nassert solution('') == 0"
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n101\\n3 3\\n3 2\\n3 1\") == \"2\"\nassert solution(\"4\\n1111\\n3 4\\n5 2\\n3 1\\n3 2\") == \"4\"\nassert solution(\"6\\n011100\\n5 3\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\") == \"6\""
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('Input') == 'Output'"
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n101\\n3 3\\n3 2\\n3 1\\n\") == \"2\\n\"\nassert solution(\"4\\n1111\\n3 4\\n5 2\\n3 1\\n3 2\\n\") == \"4\\n\"\nassert solution(\"6\\n011100\\n5 3\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n\") == \"6\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n101\\n3 3\\n3 2\\n3 1\") == \"2\\n\", \"The correct output should be: '2'\\n\"\nassert solution(\"4\\n1111\\n3 4\\n5 2\\n3 1\\n3 2\") == \"4\\n\", \"The correct output should be: '4'\\n\"\nassert solution(\"6\\n011100\\n5 3\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\") == \"6\\n\", \"The correct output should be: '6'\\n\""
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n\") == \"1111\"\nassert solution(\"5 3\\n\") == \"01010\"\nassert solution(\"7 3\\n\") == \"1011011\"\n"
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '1111', \"The correct answer is: 1111\""
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"1111\"\nassert solution(input()) == \"01010\"\nassert solution(input()) == \"1011011\""
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"1111\", \"Expected '1111', got '{}'.\".format(solution(input()))\nassert solution(input()) == \"01010\", \"Expected '01010', got '{}'.\".format(solution(input()))\nassert solution(input()) == \"1011011\", \"Expected '1011011', got '{}'.\".format(solution(input()))"
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1111\"\nassert solution() == \"01010\"\nassert solution() == \"1011011\""
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4\") == \"1111\"\nassert solution(\"5 3\") == \"01010\"\nassert solution(\"7 3\") == \"1011011\""
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\") == \"1111\"\nassert solution(\"5 3\") == \"01010\"\nassert solution(\"7 3\") == \"1011011\""
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4\") == \"1111\"\nassert solution(\"5 3\") == \"01010\"\nassert solution(\"7 3\") == \"1011011\"\n"
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"1111\"\nassert solution(input()) == \"01010\"\nassert solution(input()) == \"1011011\"\n"
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()\nprint(\"Test Passed\")"
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n2\\n\") == \"1/2\\n\"\nassert solution(\"3\\n1 1 1\\n\") == \"0/1\\n\"\n"
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1/2\", \"Your solution is incorrect. Please provide the correct output.\""
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n2\\n\") == \"1/2\\n\"\nassert solution(\"3\\n1 1 1\\n\") == \"0/1\\n\""
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1/2\""
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n2\\n\") == \"1/2\\n\"\nassert solution(\"3\\n1 1 1\\n\") == \"0/1\\n\"\n"
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n2\\n\") == \"1/2\\n\"\nassert solution(\"3\\n1 1 1\\n\") == \"0/1\\n\""
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n2\\n\") == \"1/2\\n\"\nassert solution(\"3\\n1 1 1\\n\") == \"0/1\\n\""
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"0/1\", \"The given code is incorrect\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n2\\n\") == \"1/2\\n\"\nassert solution(\"3\\n1 1 1\\n\") == \"0/1\\n\""
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n2\\n\") == \"1/2\\n\"\nassert solution(\"3\\n1 1 1\\n\") == \"0/1\\n\"\n"
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\\n\") == \"1 0 1 0 0\\n\"\nassert solution(\"5\\n9 7 8 6 5\\n1 1\\n2 1\\n3 1\\n4 1\\n\") == \"4 3 2 1 0\\n\""
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\nr\"\"\"\n5\n2 5 1 4 6\n1 7\n1 1\n3 5\n3 6\n\"\"\".strip()) == \"1 0 1 0 0\\n\""
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\\n\") == \"1 0 1 0 0\"\nassert solution(\"5\\n9 7 8 6 5\\n1 1\\n2 1\\n3 1\\n4 1\\n\") == \"4 3 2 1 0\""
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\") == \"1 0 1 0 0\\n4 3 2 1 0\""
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\\n') == '1 0 1 0 0\\n'\n\nassert solution('5\\n9 7 8 6 5\\n1 1\\n2 1\\n3 1\\n4 1\\n') == '4 3 2 1 0\\n'\n\nassert solution('5\\n10 12 14 16 18\\n1 1\\n2 1\\n3 1\\n4 1\\n') == '4 3 2 1 0\\n'\n\nassert solution('5\\n1 2 3 4 5\\n6 7 8 9 10\\n11 12 13 14 15\\n16 17 18 19 20\\n') == '4 3 2 1 0\\n'\n\nassert solution('5\\n1 2 3 4 5\\n6 7 8 9 10\\n11 12 13 14 15\\n16 17 18 19 20\\n21 22 23 24 25\\n') == '4 3 2 1 0\\n'"
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\\n\") == \"1 0 1 0 0\\n\"\nassert solution(\"5\\n9 7 8 6 5\\n1 1\\n2 1\\n3 1\\n4 1\\n\") == \"4 3 2 1 0\\n\""
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\\n\") == \"1 0 1 0 0\\n\"\nassert solution(\"5\\n9 7 8 6 5\\n1 1\\n2 1\\n3 1\\n4 1\\n\") == \"4 3 2 1 0\\n\""
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\") == \"1 0 1 0 0\\n4 3 2 1 0\"\n\nassert solution(\"5\\n9 7 8 6 5\\n1 1\\n2 1\\n3 1\\n4 1\") == \"4 3 2 1 0\""
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\\n') == '1 0 1 0 0\\n'"
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 5 1 7 4') == '1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000'\nassert solution('2 1 2') == '0\\n2\\n11\\n11'\nassert solution('3 1 1 1') == '1\\n0\\n11\\n11'"
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"01010\"\nassert solution(5) == \"01010\"\nassert solution(2) == \"01010\"\nassert solution(10) == \"01010\"\nassert solution(1) == \"01010\"\nassert solution(4) == \"01010\"\nassert solution(6) == \"01010\"\nassert solution(8) == \"01010\"\nassert solution(7) == \"01010\"\nassert solution(9) == \"01010\"\n\nfrom typing import List"
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\n4 5 1 7 4') == '1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000'\nassert solution('2\\n1 2') == '0\\n2\\n11\\n11'\nassert solution('3\\n1 1 1') == '1\\n0\\n11\\n11'"
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\nfor expected in [\n    \"1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000\",\n    \"0\\n2\\n11\\n11\",\n    \"1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n\",\n]:\n    assert expected == solution(stdin), f\"Expected: '{expected}', but got: '{solution(stdin)}'.\"\n"
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5 1 7 4\") == \"1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000\"\nassert solution(\"2 1 2\") == \"0\\n2\\n11\\n11\"\nassert solution(\"3 1 1 1\") == \"1\\n0\\n11\\n11\""
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n4 5 1 7 4\") == \"1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000\"\nassert solution(\"2\\n1 2\") == \"0\\n2\\n11\\n11\"\nassert solution(\"3\\n1 1 1\") == \"1\\n0\\n\"\n"
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(5) == \"1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000\\n\"\nassert solution(2) == \"0\\n2\\n11\\n11\\n\"\nassert solution(3) == \"1\\n0\\n\""
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n    5\n    4 5 1 7 4\n    ''') == '''\n    1\n    8\n    '01010'\n    '00011'\n    '01010'\n    '10010'\n    '00011'\n    '11000'\n    '00011'\n    '11000'\n    ''', \"Input\")\n\nassert solution('''\n    2\n    1 2\n    ''') == '''\n    0\n    2\n    '11'\n    '11'\n    ''', \"Input\")\n\nassert solution('''\n    3\n    1 1 1\n    ''') == '''\n    1\n    0\n    '11'\n    '11'\n    ''', \"Input\")"
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n4 5 1 7 4\\n\") == \"1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000\"\nassert solution(\"2\\n1 2\\n\") == \"0\\n2\\n11\\n11\"\nassert solution(\"3\\n1 1 1\\n\") == \"1\\n0\\n11\\n11\""
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 1\nprint(1)"
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == \"1\\n\""
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == \"1\\n\""
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == \"1\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == \"1\\n\""
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == \"1\\n\""
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == 1, \"The cube below can be constructed.\""
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n6\n0 1 2 3\n0 4 6 1\n1 6 7 2\n2 7 5 3\n6 4 5 7\n4 0 3 5\n''') == 1"
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\\n\") == \"1\\n\"\nassert solution(\"12\\n0 0 0 0\\n0 1 1 0\\n0 1 0 1\\n0 0 1 1\\n0 1 1 1\\n0 0 0 0\\n0 0 0 0\\n0 1 1 1\\n0 1 1 1\\n0 1 0 1\\n0 0 1 0\\n0 1 1 0\\n0 1 1 0\\n0 1 1 0\\n\") == \"2\\n\"\nassert solution(\"400\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\"
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == \"1\"\n"
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == \"1\\n\""
    }
]