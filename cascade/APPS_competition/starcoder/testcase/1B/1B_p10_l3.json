[
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2\\n2 3') == '5'\nassert solution('8\\n( 2 ( 2 1 ) ) 3') == '9'\nassert solution('4\\n( 12 3 )') == '36'\nassert solution('6\\n( 2 ) ( 3 )') == '5'\nassert solution('6\\n( ( 2 3 ) )') == '5'"
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\n2 3\\n') == 5, \"Expected: 5, but got: \" + str(solution('2\\n2 3\\n'))\nassert solution('8\\n( 2 ( 2 1 ) ) 3\\n') == 9, \"Expected: 9, but got: \" + str(solution('8\\n( 2 ( 2 1 ) ) 3\\n'))\nassert solution('4\\n( 12 3 )\\n') == 36, \"Expected: 36, but got: \" + str(solution('4\\n( 12 3 )\\n'))\nassert solution('6\\n( 2 ) ( 3 )\\n') == 5, \"Expected: 5, but got: \" + str(solution('6\\n( 2 ) ( 3 )\\n'))\nassert solution('6\\n( ( 2 3 ) )\\n') == 5, \"Expected: 5, but got: \" + str(solution('6\\n( ( 2 3 ) )\\n'))"
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n2 3\") == 5\nassert solution(\"8\\n( 2 ( 2 1 ) ) 3\") == 9\nassert solution(\"4\\n( 12 3 )\") == 36\nassert solution(\"6\\n( 2 ) ( 3 )\") == 5\nassert solution(\"6\\n( ( 2 3 ) )\") == 5\n"
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"TODO\", \"Please implement the solution for the given problem statement.\""
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 5\nassert solution(5) == 79\nassert solution(7) == 72\nassert solution(11) == 36"
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n2 3\\n') == '5\\n'\nassert solution('8\\n( 2 ( 2 1 ) ) 3\\n') == '9\\n'\nassert solution('4\\n( 12 3 )\\n') == '36\\n'\nassert solution('6\\n( 2 ) ( 3 )\\n') == '5\\n'\nassert solution('6\\n( ( 2 3 ) )\\n') == '5\\n'"
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Expected: {output}, Received: {solution(input())}\"\nfor input_data, output_data in [\n    ([2, 3], [5]),\n    ([8, \"( 2 ( 2 1 ) ) 3\"], [9]),\n    ([4, \"( 12 3 )\"], [36]),\n    ([6, \"( 2 ) ( 3 )\"], [5]),\n    ([6, \"( ( 2 3 ) )\"], [5]),\n]:\n    assert solution(input_data) == output_data, f\"Expected: {output_data}, Received: {solution(input_data)}\""
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2\\n2 3\\n') == '5\\n'\nassert solution('8\\n( 2 ( 2 1 ) ) 3\\n') == '9\\n'\nassert solution('4\\n( 12 3 )\\n') == '36\\n'\nassert solution('6\\n( 2 ) ( 3 )\\n') == '5\\n'\nassert solution('6\\n( ( 2 3 ) )\\n') == '5\\n'\n\nimport math"
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n2 3\") == \"5\\n\"\nassert solution(\"8\\n( 2 ( 2 1 ) ) 3\") == \"9\\n\"\nassert solution(\"4\\n( 12 3 )\") == \"36\\n\"\nassert solution(\"6\\n( 2 ) ( 3 )\") == \"5\\n\"\nassert solution(\"6\\n( ( 2 3 ) )\") == \"5\\n\""
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 79, \"The solution provided is incorrect.\""
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0\") == 0, \"Solution should return 0 for input '0'\"\nassert solution(\"009990001\") == 3, \"Solution should return 3 for input '009990001'\"\nassert solution(\"29998\") == 5, \"Solution should return 5 for input '29998'\"\nassert solution(\"610\") == 4, \"Solution should return 4 for input '610'\"\nassert solution(\"981\") == 2, \"Solution should return 2 for input '981'\"\n\nfrom typing import List"
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0\") == \"0\\n\"\nassert solution(\"009990001\") == \"3\\n\"\nassert solution(\"29998\") == \"5\\n\"\nassert solution(\"610\") == \"4\\n\"\nassert solution(\"981\") == \"2\\n\""
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0\") == \"0\", \"0\"\nassert solution(\"009990001\") == \"3\", \"009990001\"\nassert solution(\"29998\") == \"5\", \"29998\"\nassert solution(\"610\") == \"4\", \"610\"\nassert solution(\"981\") == \"2\", \"981\""
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0\") == 0, \"Test case 1\"\nassert solution(\"009990001\") == 3, \"Test case 2\"\nassert solution(\"29998\") == 5, \"Test case 3\"\nassert solution(\"610\") == 4, \"Test case 4\"\nassert solution(\"981\") == 2, \"Test case 5\""
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"009990001\") == \"3\"\nassert solution(\"29998\") == \"5\"\nassert solution(\"610\") == \"4\"\nassert solution(\"981\") == \"2\"\n"
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0\") == 0, \"Test case 1 failed\"\nassert solution(\"009990001\") == 3, \"Test case 2 failed\"\nassert solution(\"29998\") == 5, \"Test case 3 failed\"\nassert solution(\"610\") == 4, \"Test case 4 failed\"\nassert solution(\"981\") == 2, \"Test case 5 failed\""
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0\") == 0, \"Invalid Input\"\nassert solution(\"009990001\") == 3, \"Invalid Input\"\nassert solution(\"29998\") == 5, \"Invalid Input\"\nassert solution(\"610\") == 4, \"Invalid Input\"\nassert solution(\"981\") == 2, \"Invalid Input\"\n"
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0\") == 0\nassert solution(\"009990001\") == 3\nassert solution(\"29998\") == 5\nassert solution(\"610\") == 4\nassert solution(\"981\") == 2"
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0\") == 0, \"Expected output: 0\"\nassert solution(\"009990001\") == 3, \"Expected output: 3\"\nassert solution(\"29998\") == 5, \"Expected output: 5\"\nassert solution(\"610\") == 4, \"Expected output: 4\"\nassert solution(\"981\") == 2, \"Expected output: 2\""
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"009990001\") == \"3\"\nassert solution(\"29998\") == \"5\"\nassert solution(\"610\") == \"4\"\nassert solution(\"981\") == \"2\""
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input1) == expected1, f\"Solution should return '{expected1}', but got '{solution(input1)}'.\"\nassert solution(input2) == expected2, f\"Solution should return '{expected2}', but got '{solution(input2)}'.\"\nassert solution(input3) == expected3, f\"Solution should return '{expected3}', but got '{solution(input3)}'.\"\nassert solution(input4) == expected4, f\"Solution should return '{expected4}', but got '{solution(input4)}'.\""
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    3\n    \"\"\"\n) == \"seems legit\"\n\nassert solution(\n    \"\"\"\n    2\n    \"\"\"\n) == \"insufficient service\"\n\nassert solution(\n    \"\"\"\n    3\n    \"\"\"\n) == \"tampered odometer\"\n\nassert solution(\n    \"\"\"\n    2\n    \"\"\"\n) == \"seems legit\""
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42000\") == \"seems legit\"\nassert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42001\") == \"insufficient service\"\nassert solution(\"2\\n2017 11 0\\n2018 1 1000\") == \"tampered odometer\"\nassert solution(\"2\\n2013 1 0\\n2013 2 0\") == \"seems legit\""
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2\nassert solution(sample_input_3) == expected_output_3\nassert solution(sample_input_4) == expected_output_4"
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() =='seems legit'"
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"seems legit\"\n"
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"seems legit\"\nassert solution() == \"tampered odometer\"\nassert solution() == \"insufficient service\""
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"seems legit\""
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"seems legit\""
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n2017 4 0\\n2017 8 12000\\n2018 8 42000\\n') =='seems legit'\nassert solution('3\\n2017 4 0\\n2017 8 12000\\n2018 8 42001\\n') == 'insufficient service'\nassert solution('2\\n2017 11 0\\n2018 1 1000\\n') == 'tampered odometer'\nassert solution('2\\n2013 1 0\\n2013 2 0\\n') =='seems legit'"
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2\\n0 2 3\\n0 1\\n1\") == \"3\"\nassert solution(\"5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\") == \"2\"\nassert solution(\"6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\") == \"2\"\nassert solution(\"4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\") == \"4\""
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == output, f\"Test failed. Input: {stdin}, Output: {output}\""
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r').read()) == '3'\nassert solution(open('input2.txt', 'r').read()) == '2'\nassert solution(open('input3.txt', 'r').read()) == '2'\nassert solution(open('input4.txt', 'r').read()) == '4'"
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n1 2\\n0 2 3\\n0 1\\n1\\n') == '3\\n'\nassert solution('5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\n') == '2\\n'\nassert solution('6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\n') == '2\\n'\nassert solution('4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\n') == '4\\n'"
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"3\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"4\""
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '2', 'Solution 2 should be 2'"
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 2\\n0 2 3\\n0 1\\n1\\n\\n5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\n\\n6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\n\\n4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\n\\n\") == \"3\"\nassert solution(\"5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\n\\n6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\n\\n4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\n\\n\") == \"2\"\nassert solution(\"6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\n\\n4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\n\\n\") == \"2\"\nassert solution(\"4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\n\\n\") == \"4\""
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(str(4)) == '3'\nassert solution(str(5)) == '2'\nassert solution(str(6)) == '2'\nassert solution(str(4)) == '4'"
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 2\\n0 2 3\\n0 1\\n1\\n\\n5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\n\\n6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\n\\n4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\") == \"3\"\nassert solution(\"5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\n\\n6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\n\\n4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\") == \"2\"\nassert solution(\"6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\n\\n4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\") == \"2\"\nassert solution(\"4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\") == \"4\""
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n4\n1 2\n0 2 3\n0 1\n1\n''') == '3'\nassert solution('''\n5\n2 3 4\n2 3 4\n0 1\n0 1\n0 1\n''') == '2'\nassert solution('''\n6\n1 3\n0 2 4\n1 5\n0 4\n1 3 5\n2 4\n''') == '2'\nassert solution('''\n4\n1 2 3\n0 2 3\n0 1 3\n0 1 2\n''') == '4'\n"
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\nBLUE 1 5000\\nRED 5001 10000\\n\") == \"2\\n\"\nassert solution(\"3\\nBLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000\\n\") == \"3\\n\"\nassert solution(\"4\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000\\n\") == \"IMPOSSIBLE\\n\"\n"
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\nBLUE 1 5000\\nRED 5001 10000\\n') == '2\\n'\nassert solution('3\\nBLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000\\n') == '3\\n'\nassert solution('4\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000\\n') == 'IMPOSSIBLE\\n'"
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\nBLUE 1 5000\\nRED 5001 10000\\nSample Output 1: 2\\n\\nSample Input 2\\n3\\nBLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000\\nSample Output 2: 3\\n\\nSample Input 3\\n4\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000\\nSample Output 3: IMPOSSIBLE\\n\\nSample Input 4\\n2\\nBLUE 1 4000\\nRED 4002 10000\\nSample Output 4: IMPOSSIBLE\\n\") == \"2\\n3\\nIMPOSSIBLE\\n\""
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"2\\nBLUE 1 5000\\nRED 5001 10000\\n\") == \"2\\n\"\nassert solution(stdin=\"3\\nBLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000\\n\") == \"3\\n\"\nassert solution(stdin=\"4\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000\\n\") == \"IMPOSSIBLE\\n\"\nassert solution(stdin=\"2\\nBLUE 1 4000\\nRED 4002 10000\\n\") == \"IMPOSSIBLE\\n\""
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000\\nIMPOSSIBLE\") == \"3\\n\"\nassert solution(\"2\\nBLUE 1 5000\\nRED 5001 10000\\nSample Output 1:2\\n\") == \"2\\n\"\nassert solution(\"3\\nBLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000\\nSample Output 2:3\\n\") == \"3\\n\"\nassert solution(\"4\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000\\nSample Output 3:IMPOSSIBLE\\n\") == \"IMPOSSIBLE\\n\"\nassert solution(\"2\\nBLUE 1 4000\\nRED 4002 10000\\nSample Output 4:IMPOSSIBLE\\n\") == \"IMPOSSIBLE\\n\""
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed for {stdin} with output {solution(stdin)}. Expected output: {expected_output}. Received output: {solution(stdin)}\""
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Sample Input 1\\n2\\nBLUE 1 5000\\nRED 5001 10000\\nSample Output 1\\n2\\n\\nSample Input 2\\n3\\nBLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000\\nSample Output 2\\n3\\n\\nSample Input 3\\n4\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000\\nSample Output 3\\nIMPOSSIBLE\\n\\nSample Input 4\\n2\\nBLUE 1 4000\\nRED 4002 10000\\nSample Output 4\\nIMPOSSIBLE\\n\") == \"2\\n3\\nIMPOSSIBLE\\n\""
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\nBLUE 1 5000\\nRED 5001 10000\") == \"2\\n\"\nassert solution(\"3\\nBLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000\") == \"3\\n\"\nassert solution(\"4\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000\") == \"IMPOSSIBLE\\n\""
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input1) == \"2\"\nassert solution(sample_input2) == \"3\"\nassert solution(sample_input3) == \"IMPOSSIBLE\"\nassert solution(sample_input4) == \"IMPOSSIBLE\""
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\", \"Solution does not match\"\nassert solution(\"GGGGGGGGG\") == \"1\", \"Solution does not match\"\nassert solution(\"PRIME\") == \"5\", \"Solution does not match\"\nassert solution(\"BABBABABBABBA\") == \"6\", \"Solution does not match\""
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\", \"Sample Input 1: Wrong output.\"\nassert solution(\"GGGGGGGGG\") == \"1\", \"Sample Input 2: Wrong output.\"\nassert solution(\"PRIME\") == \"5\", \"Sample Input 3: Wrong output.\"\nassert solution(\"BABBABABBABBA\") == \"6\", \"Sample Input 4: Wrong output.\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\", \"Test 1 failed\"\nassert solution(\"GGGGGGGGG\") == \"1\", \"Test 2 failed\"\nassert solution(\"PRIME\") == \"5\", \"Test 3 failed\"\nassert solution(\"BABBABABBABBA\") == \"6\", \"Test 4 failed\""
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('PRATTATTATTIC') == '6'\nassert solution('GGGGGGGGG') == '1'\nassert solution('PRIME') == '5'\nassert solution('BABBABABBABBA') == '6'"
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\", \"Incorrect solution for sample input 1\"\nassert solution(\"GGGGGGGGG\") == \"1\", \"Incorrect solution for sample input 2\"\nassert solution(\"PRIME\") == \"5\", \"Incorrect solution for sample input 3\"\nassert solution(\"BABBABABBABBA\") == \"6\", \"Incorrect solution for sample input 4\""
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"PRATTATTATTIC\") == 6, \"Test case 1 failed\"\nassert solution(\"GGGGGGGGG\") == 1, \"Test case 2 failed\"\nassert solution(\"PRIME\") == 5, \"Test case 3 failed\"\nassert solution(\"BABBABABBABBA\") == 6, \"Test case 4 failed\""
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\"\nassert solution(\"GGGGGGGGG\") == \"1\"\nassert solution(\"PRIME\") == \"5\"\nassert solution(\"BABBABABBABBA\") == \"6\""
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\", \"Output: \" + solution(\"PRATTATTATTIC\")\nassert solution(\"GGGGGGGGG\") == \"1\", \"Output: \" + solution(\"GGGGGGGGG\")\nassert solution(\"PRIME\") == \"5\", \"Output: \" + solution(\"PRIME\")\nassert solution(\"BABBABABBABBA\") == \"6\", \"Output: \" + solution(\"BABBABABBABBA\")"
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"PRATTATTATTIC\") == 6, \"Output should be 6\"\nassert solution(\"GGGGGGGGG\") == 1, \"Output should be 1\"\nassert solution(\"PRIME\") == 5, \"Output should be 5\"\nassert solution(\"BABBABABBABBA\") == 6, \"Output should be 6\""
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Test failed: expected output {output}, got {solution(input())}\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input1) == \"0\\n\", \"Sample Output 1\"\nassert solution(input2) == \"1\\n\", \"Sample Output 2\"\nassert solution(input3) == \"0\\n\", \"Sample Output 3\"\nassert solution(input4) == \"0\\n\", \"Sample Output 4\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\") == \"0\\n\", \"Incorrect solution\"\nassert solution(\"D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\") == \"1\\n\", \"Incorrect solution\"\nassert solution(\"I 1 X\\nD 1\\nE\\nE\") == \"0\\n\", \"Incorrect solution\"\nassert solution(\"I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\") == \"0\\n\", \"Incorrect solution\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\\n\") == \"0\"\nassert solution(\"D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\\n\") == \"1\"\nassert solution(\"I 1 X\\nD 1\\nE\\nE\\n\") == \"0\"\nassert solution(\"I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\\n\") == \"0\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\\n\") == \"0\\n\", \"Sample Input 1\"\nassert solution(\"D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\\n\") == \"1\\n\", \"Sample Input 2\"\nassert solution(\"I 1 X\\nD 1\\nE\\nE\\n\") == \"0\\n\", \"Sample Input 3\"\nassert solution(\"I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\\n\") == \"0\\n\", \"Sample Input 4\"\n"
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"0\", \"Testcase 1\"\nassert solution(\"D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\") == \"0\", \"Testcase 2\"\nassert solution(\"D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\") == \"1\", \"Testcase 3\"\nassert solution(\"I 1 X\\nD 1\\nE\\nE\") == \"0\", \"Testcase 4\"\nassert solution(\"I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\") == \"0\", \"Testcase 5\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\\n\") == \"0\\n\"\nassert solution(\"D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\\n\") == \"1\\n\"\nassert solution(\"I 1 X\\nD 1\\nE\\nE\\n\") == \"0\\n\"\nassert solution(\"I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\\n\") == \"0\\n\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\\n') == '0\\n', \"The first solution is incorrect.\"\nassert solution('D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\\n') == '1\\n', \"The second solution is incorrect.\"\nassert solution('I 1 X\\nD 1\\nE\\nE\\n') == '0\\n', \"The third solution is incorrect.\"\nassert solution('I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\\n') == '0\\n', \"The fourth solution is incorrect.\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Expected output: '{expected_output}', but got output: '{solution(input())}'\"\n"
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"D 1\\nD 2\\nE\") == \"0\", \"0\"\nassert solution(\"D 2\\nD 1\\nE\") == \"1\", \"1\"\nassert solution(\"I 1 X\\nD 1\\nE\") == \"0\", \"0\"\nassert solution(\"I 14 B\\nI 14 A\\nE\") == \"0\", \"0\"\nassert solution(\"I 14 A\\nI 15 B\\nE\") == \"0\", \"0\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\\n\") == \"0\\n\", \"Sample Input 1\"\nassert solution(\"D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\\n\") == \"1\\n\", \"Sample Input 2\"\nassert solution(\"I 1 X\\nD 1\\nE\\nE\\n\") == \"0\\n\", \"Sample Input 3\"\nassert solution(\"I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\\n\") == \"0\\n\", \"Sample Input 4\""
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 0 1 0 0 0\") == \"300\"\nassert solution(\"5 0 1 0 1 0\") == \"1900\"\nassert solution(\"6 0 1 1 0 0\") == \"2300\"\nassert solution(\"10 399 0 0 0 0\") == \"399\"\n"
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 0 1 0 0 0\") == 300\nassert solution(\"5 0 1 0 1 0\") == 1900\nassert solution(\"6 0 1 1 0 0\") == 2300\nassert solution(\"10 399 0 0 0 0\") == 399"
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Testcase failed: {solution(input())}!= {expected_output}\""
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 0 1 0 0 0') == '300\\n', 'Sample Input 1'\nassert solution('5 0 1 0 1 0') == '1900\\n', 'Sample Input 2'\nassert solution('6 0 1 1 0 0') == '2300\\n', 'Sample Input 3'\nassert solution('10 399 0 0 0 0') == '399\\n', 'Sample Input 4'"
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 399, \"Please implement the solution.\""
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 300\nassert solution() == 1900\nassert solution() == 2300\nassert solution() == 399"
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=sample_input1) == \"300\", \"Expected 300, got {}\".format(solution(stdin=sample_input1))\nassert solution(stdin=sample_input2) == \"1900\", \"Expected 1900, got {}\".format(solution(stdin=sample_input2))\nassert solution(stdin=sample_input3) == \"2300\", \"Expected 2300, got {}\".format(solution(stdin=sample_input3))\nassert solution(stdin=sample_input4) == \"399\", \"Expected 399, got {}\".format(solution(stdin=sample_input4))"
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"300\"\nassert solution() == \"1900\"\nassert solution() == \"2300\"\nassert solution() == \"399\"\n"
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 399, \"Sample Output 1 should be 399\""
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 0 1 0 0 0\") == 300\nassert solution(\"5 0 1 0 1 0\") == 1900\nassert solution(\"6 0 1 1 0 0\") == 2300\nassert solution(\"10 399 0 0 0 0\") == 399"
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed: got {solution(input())}, expected {expected_output}\""
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 12\\n1 13\\n2 10\\n1 5\\n1 4\\n\") == \"2\\n\""
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 10\\n1 12\\n1 13\\n\") == \"2\\n\"\nassert solution(\"2 10\\n1 5\\n1 12\\n\") == \"2\\n\"\nassert solution(\"2 10\\n1 5\\n4 1\\n\") == \"2\\n\""
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 10\\n1 12\\n1 13\\n\") == \"2\\n\"\nassert solution(\"2 10\\n1 5\\n1 12\\n\") == \"2\\n\"\nassert solution(\"2 10\\n1 5\\n1 4\\n\") == \"2\\n\""
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2\nassert solution(input3) == output3\nassert solution(input4) == output4"
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 10\\n1 12\\n1 13\\n\") == \"2\\n\"\nassert solution(\"2 10\\n1 5\\n1 12\\n\") == \"2\\n\"\nassert solution(\"2 10\\n1 5\\n1 4\\n\") == \"2\\n\"\nassert solution(\"2 10\\n1 5\\n4 1\\n\") == \"2\\n\""
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == expected, f\"Expected: {expected}, Received: {solution()}\""
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Test case {i+1} failed. Expected: {output}, Received: {solution(input())}\"\nfor i, (N, K) in enumerate(test_cases):\n    result = solution(f\"{N} {K}\")\n    assert result == f\"Test case {i+1} failed. Expected: {output}, Received: {result}\""
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 10\\n1 12\\n1 13\") == \"2\"\nassert solution(\"2 10\\n1 5\\n1 12\") == \"2\"\nassert solution(\"2 10\\n1 5\\n1 4\") == \"2\""
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n10 10 5\\n10 20 5\\n20 10 5\\n20 20 5') == '28'\nassert solution('4\\n10 10 5\\n10 20 1\\n20 10 12\\n20 20 8') == '36.2842712475'\nassert solution('6\\n1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3') == '28.970562748'\nassert solution('8\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8') == '32'"
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(r'4\\n10 10 5\\n10 20 5\\n20 10 5\\n20 20 5') == 28\nassert solution(r'4\\n10 10 5\\n10 20 1\\n20 10 12\\n20 20 8') == 36.2842712475\nassert solution(r'6\\n1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3') == 28.970562748\nassert solution(r'8\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8') == 32"
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n10 10 5\\n10 20 5\\n20 10 5\\n20 20 5') == '28\\n'\nassert solution('4\\n10 10 5\\n10 20 1\\n20 10 12\\n20 20 8') == '36.2842712475\\n'\nassert solution('6\\n1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3') == '28.970562748\\n'\nassert solution('8\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8') == '32\\n'\n"
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n10 10 5\\n10 20 5\\n20 10 5\\n20 20 5\") == \"28\"\nassert solution(\"4\\n10 10 5\\n10 20 1\\n20 10 12\\n20 20 8\") == \"36.2842712475\"\nassert solution(\"6\\n1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\") == \"28.970562748\"\nassert solution(\"8\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8\") == \"32\"\n\nfrom typing import List"
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    4\n    10 10 5\n    10 20 5\n    20 10 5\n    20 20 5\n    \"\"\"\n) == \"28\"\n\nassert solution(\n    \"\"\"\n    4\n    10 10 5\n    10 20 1\n    20 10 12\n    20 20 8\n    \"\"\"\n) == \"36.2842712475\"\n\nassert solution(\n    \"\"\"\n    6\n    1 1 15\n    5 1 100\n    9 1 56\n    1 5 1\n    5 5 33\n    9 5 3\n    \"\"\"\n) == \"28.970562748\"\n\nassert solution(\n    \"\"\"\n    8\n    4 4 1\n    4 6 1\n    4 8 1\n    6 6 14\n    8 4 1\n    8 6 1\n    8 8 1\n    \"\"\"\n) == \"32\"\n\nassert solution(\n    \"\"\"\n    10\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    \"\"\"\n) == \"10\"\n\nassert solution(\n    \"\"\"\n    12\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    \"\"\"\n) == \"30.4037831201\"\n\nassert solution(\n    \"\"\"\n    16\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    \"\"\"\n) == \"56.2702522415\"\n\nassert solution(\n    \"\"\"\n    20\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    \"\"\"\n) == \"14.9188660326\"\n\nassert solution(\n    \"\"\"\n    24\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    \"\"\"\n) == \"50.3891097854\"\n\nassert solution(\n    \"\"\"\n    28\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    \"\"\"\n) == \"28\"\n\nassert solution(\n    \"\"\"\n    4\n    10 10 5\n    10 20 5\n    20 10 5\n    20 20 5\n    \"\"\"\n) == \"28\"\n\nassert solution(\n    \"\"\"\n    4\n    10 10 5\n    10 20 1\n    20 10 12\n    20 20 8\n    \"\"\""
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output\nprint(\"PASS\") if assert else print(\"FAIL\")"
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n10 10 5\\n10 20 5\\n20 10 5\\n20 20 5\\n\") == \"28\"\nassert solution(\"4\\n10 10 5\\n10 20 1\\n20 10 12\\n20 20 8\\n\") == \"36.2842712475\"\nassert solution(\"6\\n1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\\n\") == \"28.970562748\"\nassert solution(\"8\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8\\n\") == \"32\""
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n10 10 5\\n10 20 5\\n20 10 5\\n20 20 5\") == 28\nassert solution(\"4\\n10 10 5\\n10 20 1\\n20 10 12\\n20 20 8\") == 36.2842712475\nassert solution(\"6\\n1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\") == 28.970562748\nassert solution(\"8\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8\") == 32\n"
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"28\"\nassert solution(open(\"input2.txt\", \"r\")) == \"36.2842712475\"\nassert solution(open(\"input3.txt\", \"r\")) == \"28.970562748\"\nassert solution(open(\"input4.txt\", \"r\")) == \"32\"\n"
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n1 3 9 5\\n2 2 6 8\\n4 8 9 3') == '3\\n'\nassert solution('3\\n5 2 7 10\\n7 4 4 10\\n2 4 10 8') == '1\\n'\nassert solution('3\\n2 1 6 5\\n2 5 5 4\\n5 1 7 7') == '1\\n'\nassert solution('2\\n-1 -2 -1 -1\\n-1 2 -1 -1') == '1\\n'"
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 3 9 5\\n2 2 6 8\\n4 8 9 3\") == \"3\\n\"\nassert solution(\"3\\n5 2 7 10\\n7 4 4 10\\n2 4 10 8\") == \"1\\n\"\nassert solution(\"3\\n2 1 6 5\\n2 5 5 4\\n5 1 7 7\") == \"1\\n\"\nassert solution(\"2\\n-1 -2 -1 -1\\n-1 2 -1 -1\") == \"1\\n\""
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n3\\n1 3 9 5\\n2 2 6 8\\n4 8 9 3\") == \"3\\n\"\nassert solution(\"3\\n5 2 7 10\\n7 4 4 10\\n2 4 10 8\") == \"1\\n\"\nassert solution(\"3\\n2 1 6 5\\n2 5 5 4\\n5 1 7 7\") == \"1\\n\"\nassert solution(\"2\\n-1 -2 -1 -1\\n-1 2 -1 -1\") == \"1\\n\""
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 3 9 5\\n2 2 6 8\\n4 8 9 3\") == \"3\\n\\n1\\n\\n1\""
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"\"\"3\n1\n1\n\"\"\""
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Expected output: '{expected_output}'. Got: '{solution(input())}'.\""
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 3 9 5\\n2 2 6 8\\n4 8 9 3\") == \"3\\n\"\nassert solution(\"3\\n5 2 7 10\\n7 4 4 10\\n2 4 10 8\") == \"1\\n\"\nassert solution(\"3\\n2 1 6 5\\n2 5 5 4\\n5 1 7 7\") == \"1\\n\"\nassert solution(\"2\\n-1 -2 -1 -1\\n-1 2 -1 -1\") == \"1\\n\""
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 1, \"Solution is incorrect\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(10) == 10\nassert solution(55) == 55\nassert solution(101) == -1\nassert solution(1234321) == 94708"
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(10) == 10, \"10 should be a hill number\"\nassert solution(55) == 55, \"55 should be a hill number\"\nassert solution(101) == -1, \"101 should not be a hill number\"\nassert solution(1234321) == 94708, \"1234321 should be a hill number\""
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10\") == \"10\", \"Test Case 1\"\nassert solution(\"55\") == \"55\", \"Test Case 2\"\nassert solution(\"101\") == \"-1\", \"Test Case 3\"\nassert solution(\"1234321\") == \"94708\", \"Test Case 4\""
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(10) == 10, \"Test 1 failed\"\nassert solution(55) == 55, \"Test 2 failed\"\nassert solution(101) == -1, \"Test 3 failed\"\nassert solution(1234321) == 94708, \"Test 4 failed\""
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(10) == 10\nassert solution(55) == 55\nassert solution(101) == -1\nassert solution(1234321) == 94708"
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(10) == 10\nassert solution(55) == 55\nassert solution(101) == -1\nassert solution(1234321) == 94708"
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10\") == \"10\", \"Test case 1 failed.\"\nassert solution(\"55\") == \"55\", \"Test case 2 failed.\"\nassert solution(\"101\") == \"-1\", \"Test case 3 failed.\"\nassert solution(\"1234321\") == \"94708\", \"Test case 4 failed.\"\n"
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10\") == 10, \"Incorrect output for sample input 1\"\nassert solution(\"55\") == 55, \"Incorrect output for sample input 2\"\nassert solution(\"101\") == -1, \"Incorrect output for sample input 3\"\nassert solution(\"1234321\") == 94708, \"Incorrect output for sample input 4\""
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(10) == 10\nassert solution(55) == 55\nassert solution(101) == -1\nassert solution(1234321) == 94708"
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(10) == 10\nassert solution(55) == 55\nassert solution(101) == -1\nassert solution(1234321) == 94708\n"
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3 0 0 0 3) == 6\nassert solution(1 2 0 0 5) == 2\nassert solution(1 2 0 0 4) == 4\nassert solution(1 2 0 0 6) == 0\n\nfrom typing import List"
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"0\", \"Output: {}\".format(solution())"
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 0 0 0 3\") == 6\nassert solution(\"1 2 0 0 5\") == 2\nassert solution(\"1 2 0 0 4\") == 4\nassert solution(\"1 2 0 0 6\") == 0"
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3, 0, 0, 0, 3) == 6, \"Invalid sequence length\"\nassert solution(1, 2, 0, 0, 5) == 2, \"Invalid sequence length\"\nassert solution(1, 2, 0, 0, 4) == 4, \"Invalid sequence length\"\nassert solution(1, 2, 0, 0, 6) == 0, \"Invalid sequence length\""
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input) == output, f\"The output '{solution(input)}' does not match the expected output '{output}'.\"\n"
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3 0 0 0 3) == 6\nassert solution(1 2 0 0 5) == 2\nassert solution(1 2 0 0 4) == 4\nassert solution(1 2 0 0 6) == 0"
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == \"6\\n\"\nassert solution(sample_input_2) == \"2\\n\"\nassert solution(sample_input_3) == \"4\\n\"\nassert solution(sample_input_4) == \"0\\n\""
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"6\\n2\\n4\\n0\\n\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n    3 0 0 0 3\n    ''') == '6'\n\nassert solution('''\n    1 2 0 0 5\n    ''') == '2'\n\nassert solution('''\n    1 2 0 0 4\n    ''') == '4'\n\nassert solution('''\n    1 2 0 0 6\n    ''') == '0'"
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3 0 0 0 3) == 6\nassert solution(1 2 0 0 5) == 2\nassert solution(1 2 0 0 4) == 4\nassert solution(1 2 0 0 6) == 0"
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('0.5 -5.301 3.098') == '-1.26167861 3.88425357'\nassert solution('0.5 8 8') == '9.21068947 2.56226688'\nassert solution('1 8 8') == '6.22375968 -0.31921472'\nassert solution('0.5 -8 8') == '-4.36385220 9.46891588'"
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0.5 -5.301 3.098\") == \"-1.26167861 3.88425357\"\nassert solution(\"0.5 8 8\") == \"9.21068947 2.56226688\"\nassert solution(\"1 8 8\") == \"6.22375968 -0.31921472\"\nassert solution(\"0.5 -8 8\") == \"-4.36385220 9.46891588\""
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0.5 -5.301 3.098\") == \"-1.26167861 3.88425357\"\nassert solution(\"0.5 8 8\") == \"9.21068947 2.56226688\"\nassert solution(\"1 8 8\") == \"6.22375968 -0.31921472\"\nassert solution(\"0.5 -8 8\") == \"-4.36385220 9.46891588\""
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('0.5 -5.301 3.098') == '-1.26167861 3.88425357', \"The correct solution is -1.26167861 3.88425357\"\nassert solution('0.5 8 8') == '9.21068947 2.56226688', \"The correct solution is 9.21068947 2.56226688\"\nassert solution('1 8 8') == '6.22375968 -0.31921472', \"The correct solution is 6.22375968 -0.31921472\"\nassert solution('0.5 -8 8') == '-4.36385220 9.46891588', \"The correct solution is -4.36385220 9.46891588\"\nassert solution('0.5 8 8') == '9.21068947 2.56226688', \"The correct solution is 9.21068947 2.56226688\"\nassert solution('1 8 8') == '6.22375968 -0.31921472', \"The correct solution is 6.22375968 -0.31921472\"\nassert solution('0.5 -8 8') == '-4.36385220 9.46891588', \"The correct solution is -4.36385220 9.46891588\"\nassert solution('0.5 8 8') == '9.21068947 2.56226688', \"The correct solution is 9.21068947 2.56226688\"\nassert solution('1 8 8') == '6.22375968 -0.31921472', \"The correct solution is 6.22375968 -0.31921472\"\nassert solution('0.5 -8 8') == '-4.36385220 9.46891588', \"The correct solution is -4.36385220 9.46891588\"\nassert solution('0.5 8 8') == '9.21068947 2.56226688', \"The correct solution is 9.21068947 2.56226688\"\nassert solution('1 8 8') == '6.22375968 -0.31921472', \"The correct solution is 6.22375968 -0.31921472\"\nassert solution('0.5 -8 8') == '-4.36385220 9.46891588', \"The correct solution is -4.36385220 9.46891588\"\nassert solution('0.5 8 8') == '9.21068947 2.56226688', \"The correct solution is 9.21068947 2.56226688\"\nassert solution('1 8 8') == '6.22375968 -0.31921472', \"The correct solution is 6.22375968 -0.31921472\"\nassert solution('0.5 -8 8') == '-4.36385220 9.46891588', \"The correct solution is -4.36385220 9.46891588\"\nassert solution('0"
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, \"Incorrect output.\\nExpected: {},\\nGot: {}\".format(output, solution(input()))"
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2\nassert solution(input3) == output3\nassert solution(input4) == output4\n\ninput1 = '''\n0.5 -5.301 3.098\n'''\noutput1 = '''\n-1.26167861 3.88425357\n'''\n\ninput2 = '''\n0.5 8 8\n'''\noutput2 = '''\n9.21068947 2.56226688\n'''\n\ninput3 = '''\n1 8 8\n'''\noutput3 = '''\n6.22375968 -0.31921472\n'''\n\ninput4 = '''\n0.5 -8 8\n'''\noutput4 = '''\n-4.36385220 9.46891588\n'''"
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0.5 -5.301 3.098\") == (\"-1.26167861\", \"3.88425357\")\nassert solution(\"0.5 8 8\") == (\"9.21068947\", \"2.56226688\")\nassert solution(\"1 8 8\") == (\"6.22375968\", \"-0.31921472\")\nassert solution(\"0.5 -8 8\") == (\"-4.36385220\", \"9.46891588\")\n"
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0.5 -5.301 3.098\") == \"-1.26167861 3.88425357\"\nassert solution(\"0.5 8 8\") == \"9.21068947 2.56226688\"\nassert solution(\"1 8 8\") == \"6.22375968 -0.31921472\"\nassert solution(\"0.5 -8 8\") == \"-4.36385220 9.46891588\""
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    0.5 -5.301 3.098\n    0.5 8 8\n    1 8 8\n    0.5 -8 8\n    \"\"\"\n) == \"\"\"\n9.21068947 2.56226688\n-1.26167861 3.88425357\n6.22375968 -0.31921472\n-4.36385220 9.46891588\n\"\"\""
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0.5 -5.301 3.098\") == \"(-1.26167861, 3.88425357)\"\nassert solution(\"0.5 8 8\") == \"9.21068947, 2.56226688\"\nassert solution(\"1 8 8\") == \"6.22375968, -0.31921472\"\nassert solution(\"0.5 -8 8\") == \"-4.36385220, 9.46891588\""
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input1) == \"1\\n2\"\nassert solution(sample_input2) == \"1\\n1\"\nassert solution(sample_input3) == \"0\"\nassert solution(sample_input4) == \"2\\n4\"\n\nsample_input1 = \"2 2\\n1 2\\n2 1\"\nsample_input2 = \"3 3\\n1 2\\n2 3\\n3 1\"\nsample_input3 = \"4 5\\n1 2\\n1 3\\n3 2\\n2 4\\n3 4\"\nsample_input4 = \"4 5\\n1 2\\n2 3\\n2 4\\n3 1\\n4 1\""
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\n1 2\\n2 1\\n\") == \"1\\n2\"\nassert solution(\"3 3\\n1 2\\n2 3\\n3 1\\n\") == \"1\\n1\"\nassert solution(\"4 5\\n1 2\\n1 3\\n3 2\\n2 4\\n3 4\\n\") == \"0\\n2\\n4\"\nassert solution(\"4 5\\n1 2\\n2 3\\n2 4\\n3 1\\n4 1\\n\") == \"2\\n4\""
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\n1 2\\n2 1\\n\") == \"1\\n2\\n\"\nassert solution(\"3 3\\n1 2\\n2 3\\n3 1\\n\") == \"1\\n1\\n\"\nassert solution(\"4 5\\n1 2\\n1 3\\n3 2\\n2 4\\n3 4\\n\") == \"0\\n2\\n4\\n\"\n"
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\n1 2\\n2 1\\n\") == \"1\\n2\\n\"\nassert solution(\"3 3\\n1 2\\n2 3\\n3 1\\n\") == \"1\\n1\\n\"\nassert solution(\"4 5\\n1 2\\n1 3\\n3 2\\n2 4\\n3 4\\n\") == \"0\\n\"\nassert solution(\"4 5\\n1 2\\n2 3\\n2 4\\n3 1\\n4 1\\n\") == \"2\\n4\\n5\\n\""
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\n1 2\\n2 1\\n3 3\\n1 2\\n2 3\\n3 1\\n4 5\\n1 2\\n1 3\\n3 2\\n2 4\\n3 4\") == \"1\\n2\"\nassert solution(\"3 3\\n1 2\\n2 3\\n3 1\\n4 5\\n1 2\\n2 3\\n3 2\\n4 1\\n5 1\\n6 2\\n7 2\\n8 3\\n9 3\\n10 4\\n11 4\\n12 5\\n13 5\") == \"1\\n1\"\nassert solution(\"4 5\\n1 2\\n1 3\\n3 2\\n2 4\\n3 4\\n4 1\\n5 1\\n6 2\\n7 2\\n8 3\\n9 3\\n10 4\\n11 4\\n12 5\\n13 5\\n14 6\\n15 6\\n16 7\\n17 7\\n18 8\\n19 8\\n20 9\\n21 9\\n22 10\\n23 10\\n24 11\\n25 11\\n26 12\\n27 12\\n28 13\\n29 13\\n30 14\\n31 14\\n32 15\\n33 15\\n34 16\\n35 16\\n36 17\\n37 17\\n38 18\\n39 18\\n40 19\\n41 19\\n42 20\\n43 20\\n44 21\\n45 21\\n46 22\\n47 22\\n48 23\\n49 23\\n50 24\\n51 24\\n52 25\\n53 25\\n54 26\\n55 26\\n56 27\\n57 27\\n58 28\\n59 28\\n60 29\\n61 29\\n62 30\\n63 30\\n64 31\\n65 31\\n66 32\\n67 32\\n68 33\\n69 33\\n70 34\\n71 34\\n72 35\\n73 35\\n74 36\\n75 36\\n76 37\\n77 37\\n78 38\\n79 38\\n80 39\\n81 39\\n82 40\\n83 40\\n84 41\\n85 41\\n86 42\\n87 42\\n88 43\\n89 43\\n90 44\\n91 44\\n92 45\\n93 45\\n94 46\\n95 46\\n96 47\\n97 47\\n98 48\\n99 48\\n100 49\") == \"0\\n2\\n4\\n5\"\nassert solution(\"5 5\\n1 2\\n1 3\\n3 2\\n2 4\\n3 4\\n4 1\\n5 1\\n6 2\\n7 2\\n8 3\\n9 3\\n10 4\\n11 4\\n12 5\\n13 5\\n14 6\\n15 6\\n16 7\\n17 7\\n18 8\\n19 8\\n20 9\\n21 9\\n22 10\\n23 "
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 2\\n1 2\\n2 1\\n') == '1\\n2\\n'\nassert solution('3 3\\n1 2\\n2 3\\n3 1\\n') == '1\\n1\\n'\nassert solution('4 5\\n1 2\\n1 3\\n3 2\\n2 4\\n3 4\\n') == '0\\n2\\n4\\n5\\n'\n"
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"0\\n2\\n1\\n2\"\nassert solution() == \"1\\n1\\n1\"\nassert solution() == \"0\\n1\\n2\"\nassert solution() == \"1\\n1\\n2\""
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input1) == \"1\\n2\"\nassert solution(sample_input2) == \"1\\n1\"\nassert solution(sample_input3) == \"0\"\nassert solution(sample_input4) == \"2\\n4\""
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\n1 2\\n2 1\\n\") == \"1\\n2\\n\"\nassert solution(\"3 3\\n1 2\\n2 3\\n3 1\\n\") == \"1\\n1\\n\"\nassert solution(\"4 5\\n1 2\\n1 3\\n3 2\\n2 4\\n3 4\\n\") == \"0\\n2\\n4\\n\""
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n1 2\\n2 1\") == \"1\\n2\\n\"\nassert solution(\"3 3\\n1 2\\n2 3\\n3 1\") == \"1\\n1\\n\"\nassert solution(\"4 5\\n1 2\\n1 3\\n3 2\\n2 4\\n3 4\") == \"0\\n2\\n4\\n5\\n\""
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\\n\") == \"11\\n\"\nassert solution(\"5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\\n\") == \"infinity\\n\"\nassert solution(\"2 1 0 1\\n0 1 2\\n\") == \"2\\n\"\nassert solution(\"3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\\n\") == \"infinity\\n\"\n"
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\") == \"11\\n\"\nassert solution(\"5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\") == \"infinity\\n\"\nassert solution(\"2 1 0 1\\n0 1 2\") == \"2\\n\"\nassert solution(\"3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\") == \"infinity\\n\""
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == expected\nprint(\"PASSED\")"
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Test case failed: {solution(input())}, should be {output}\""
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\\n') == '11'\nassert solution('5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\\n') == 'infinity'\nassert solution('2 1 0 1\\n0 1 2\\n') == '2'\nassert solution('3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\\n') == 'infinity'\nassert solution('10 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\\n') == 'infinity'\nassert solution('') == 'infinity'"
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n4 5 0 3\n0 1 1\n1 2 2\n2 0 4\n2 3 1\n2 3 3\n''') == '11\\n'\nassert solution('''\n5 5 0 4\n0 1 1\n1 2 1\n2 3 1\n3 0 1\n2 4 1\n''') == 'infinity\\n'\nassert solution('''\n2 1 0 1\n0 1 2\n''') == '2\\n'\nassert solution('''\n3 3 1 2\n0 1 1\n1 0 1\n1 2 1\n''') == 'infinity\\n'"
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\") == \"11\\n\"\nassert solution(\"5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\") == \"infinity\\n\"\nassert solution(\"2 1 0 1\\n0 1 2\") == \"2\\n\"\nassert solution(\"3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\") == \"infinity\\n\""
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\\n\") == \"11\"\nassert solution(\"5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\\n\") == \"infinity\"\nassert solution(\"2 1 0 1\\n0 1 2\\n\") == \"2\"\nassert solution(\"3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\\n\") == \"infinity\"\nassert solution(\"2 1 1 0\\n1 1 0 1\\n0 0 0 1\\n\") == \"1\"\nassert solution(\"3 4 1 2\\n1 2 2 1\\n2 1 1 1\\n\") == \"0\""
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n\\tpass\\n\\n'"
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    4 5 0 3\n    0 1 1\n    1 2 2\n    2 0 4\n    2 3 1\n    2 3 3\n    \"\"\"\n) == 11\n\nassert solution(\n    \"\"\"\n    5 5 0 4\n    0 1 1\n    1 2 1\n    2 3 1\n    3 0 1\n    2 4 1\n    \"\"\"\n) == \"infinity\"\n\nassert solution(\n    \"\"\"\n    2 1 0 1\n    0 1 2\n    \"\"\"\n) == 2\n\nassert solution(\n    \"\"\"\n    3 3 1 2\n    0 1 1\n    1 0 1\n    1 2 1\n    \"\"\"\n) == \"infinity\""
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 2 1 2 1\\n2 1 2\\n2 3 4\\n') == '6\\n'\nassert solution('3 3 1 1\\n1 1\\n2 2 3\\n') == '0\\n'\nassert solution('3 2 2 3\\n1 1\\n2 2 3\\n') == '18\\n'\nassert solution('3 1 2 3\\n2 1 2\\n0\\n') == '12\\n'"
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 2 1 2 1\\n2 1 2\\n2 3 4\\n') == '6\\n'\nassert solution('3 3 1 1\\n1 1\\n2 2 3\\n') == '0\\n'\nassert solution('3 2 2 3\\n1 1\\n2 2 3\\n') == '18\\n'\nassert solution('3 1 2 3\\n2 1 2\\n0\\n') == '12\\n'"
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n   4 2 1 2 1\n   2 1 2\n   2 3 4\n    \"\"\"\n) == \"6\\n\"\n\nassert solution(\n    \"\"\"\n   3 3 1 1\n   1 1\n   2 2 3\n    \"\"\"\n) == \"0\\n\"\n\nassert solution(\n    \"\"\"\n   3 2 2 3\n   1 1\n   2 2 3\n    \"\"\"\n) == \"18\\n\"\n\nassert solution(\n    \"\"\"\n   3 1 2 3\n   2 1 2\n   0\n    \"\"\"\n) == \"12\\n\""
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '0', \"Solution is incorrect\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2 1 2 1\\n2 1 2\\n2 3 4\") == \"6\\n\"\nassert solution(\"3 3 1 1\\n1 1\\n2 2 3\") == \"0\\n\"\nassert solution(\"3 2 2 3\\n1 1\\n2 2 3\") == \"18\\n\"\nassert solution(\"3 1 2 3\\n2 1 2\\n0\") == \"12\\n\"\n"
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2 1 2 1\\n2 1 2\\n2 3 4\") == \"6\"\nassert solution(\"3 3 1 1\\n1 1\\n2 2 3\") == \"0\"\nassert solution(\"3 2 2 3\\n1 1\\n2 2 3\") == \"18\"\nassert solution(\"3 1 2 3\\n2 1 2\\n0\") == \"12\""
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '6', \"Incorrect Output. The given solution is incorrect.\""
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2 1 2 1\\n2 1 2\\n2 3 4\\n\") == \"6\\n\"\nassert solution(\"3 3 1 1\\n1 1\\n2 2 3\\n\") == \"0\\n\"\nassert solution(\"3 2 2 3\\n1 1\\n2 2 3\\n\") == \"18\\n\"\nassert solution(\"3 1 2 3\\n2 1 2\\n0\\n\") == \"12\\n\""
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2 1 2 1\\n2 1 2\\n2 3 4\") == \"6\\n\", \"Output is incorrect.\"\nassert solution(\"3 3 1 1\\n1 1\\n2 2 3\") == \"0\\n\", \"Output is incorrect.\"\nassert solution(\"3 2 2 3\\n1 1\\n2 2 3\") == \"18\\n\", \"Output is incorrect.\"\nassert solution(\"3 1 2 3\\n2 1 2\\n0\") == \"12\\n\", \"Output is incorrect.\"\nassert solution(\"4 2 1 2 1\\n2 1 2\\n2 3 4\") == \"6\\n\", \"Output is incorrect.\"\nassert solution(\"3 3 1 1\\n1 1\\n2 2 3\") == \"0\\n\", \"Output is incorrect.\"\nassert solution(\"3 2 2 3\\n1 1\\n2 2 3\") == \"18\\n\", \"Output is incorrect.\"\nassert solution(\"3 1 2 3\\n2 1 2\\n0\") == \"12\\n\", \"Output is incorrect.\""
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 2 1 2 1\\n2 1 2\\n2 3 4') == '6'\nassert solution('3 3 1 1\\n1 1\\n2 2 3') == '0'\nassert solution('3 2 2 3\\n1 1\\n2 2 3') == '18'\nassert solution('3 1 2 3\\n2 1 2\\n0') == '12'"
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1000000 1\") == \"468559\", \"Expected Output: 468559, Actual Output: \" + str(solution(\"1000000 1\"))\nassert solution(\"1000000 5\") == \"49401\", \"Expected Output: 49401, Actual Output: \" + str(solution(\"1000000 5\"))\nassert solution(\"1000000 16\") == \"20\", \"Expected Output: 20, Actual Output: \" + str(solution(\"1000000 16\"))\nassert solution(\"9000000000000000000 62\") == \"1\", \"Expected Output: 1, Actual Output: \" + str(solution(\"9000000000000000000 62\"))"
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    1000000 1\n    \"\"\"\n) == \"468559\\n\"\n\nassert solution(\n    \"\"\"\n    1000000 5\n    \"\"\"\n) == \"49401\\n\"\n\nassert solution(\n    \"\"\"\n    1000000 16\n    \"\"\"\n) == \"20\\n\"\n\nassert solution(\n    \"\"\"\n    9000000000000000000 62\n    \"\"\"\n) == \"1\\n\""
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Test failed: {solution(input())} should be {output}\""
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\nassert solution(sample_input_3) == sample_output_3\nassert solution(sample_input_4) == sample_output_4"
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Test failed\""
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\"\n\nn, e = map(int, input().split())\npower = 2 ** e\n\ndistinct_powers = []\n\nfor i in range(n + 1):\n    if str(i).count(f\"{power}\"):\n        distinct_powers.append(i)\n\nprint(len(distinct_powers))"
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1000000 1\\n\") == \"468559\\n\"\nassert solution(\"1000000 5\\n\") == \"49401\\n\"\nassert solution(\"1000000 16\\n\") == \"20\\n\"\nassert solution(\"9000000000000000000 62\\n\") == \"1\\n\""
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1000000 1\") == \"468559\"\nassert solution(\"1000000 5\") == \"49401\"\nassert solution(\"1000000 16\") == \"20\"\nassert solution(\"9000000000000000000 62\") == \"1\""
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2\nassert solution(input_3) == output_3"
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"3 9\n5 4 1\"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"4 13\n2 2 2 2\"\"\"\n) == \"3\\n\"\n\nassert solution(\n    \"\"\"18 90\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\"\"\"\n) == \"12\\n\""
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1\\n\", \"Expected output: 1\\nActual output: \" + str(solution())"
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 9\\n5 4 1\\n\") == \"1\\n\"\nassert solution(\"4 13\\n2 2 2 2\\n\") == \"3\\n\"\nassert solution(\"18 90\\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\\n\") == \"12\\n\""
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 9\\n5 4 1\") == \"1\"\nassert solution(\"4 13\\n2 2 2 2\") == \"3\"\nassert solution(\"18 90\\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\") == \"12\""
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input1) == '1\\n', \"Incorrect Output 1\"\nassert solution(input2) == '3\\n', \"Incorrect Output 2\"\nassert solution(input3) == '12\\n', \"Incorrect Output 3\""
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 9\\n5 4 1\\n') == '1\\n'\nassert solution('4 13\\n2 2 2 2\\n') == '3\\n'\nassert solution('18 90\\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\\n') == '12\\n'"
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1\\n\", \"Incorrect output: \" + solution(input())\n"
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 9\\n5 4 1\\n\") == \"1\\n\"\nassert solution(\"4 13\\n2 2 2 2\\n\") == \"3\\n\"\nassert solution(\"18 90\\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\\n\") == \"12\\n\""
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 9\\n5 4 1\\n') == '1\\n'\nassert solution('4 13\\n2 2 2 2\\n') == '3\\n'\nassert solution('18 90\\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\\n') == '12\\n'"
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"0\\n\", \"Expected '0', got: {}\".format(solution())"
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 3\nassert solution(5) == 5\nassert solution(7) == 7"
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '0', \"Sample Output 1: The maximum revenue you can achieve by selling all 1000 pieces of data is 0.\"\n\nassert solution(stdin) == '3', \"Sample Output 2: The maximum revenue you can achieve by selling all 1000 pieces of data is 3.\"\n\nassert solution(stdin) == '5', \"Sample Output 3: The maximum revenue you can achieve by selling all 1000 pieces of data is 5.\""
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 3\nassert solution(4) == 2\nassert solution(5) == 5"
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input1) == 0\nassert solution(input2) == 3\nassert solution(input3) == 5"
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 3, \"Test 1 failed\"\nassert solution() == 5, \"Test 2 failed\"\nassert solution() == 0, \"Test 3 failed\""
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(read_input()) == expected, f\"Expected {expected}, got {solution(read_input())}\""
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"5\") == \"5\""
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 3\nassert solution(4) == 12\nassert solution(10) == 10\nassert solution(100) == 100"
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"3\", \"The maximum revenue you can achieve by selling all N pieces of data is 3.\""
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\") == 4\nassert solution(\"149\") == 17\nassert solution(\"123476544\") == 11112\n\nfrom typing import TextIO"
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(6) == 4, \"The solution is incorrect\"\nassert solution(149) == 17, \"The solution is incorrect\"\nassert solution(123476544) == 11112, \"The solution is incorrect\"\n"
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"149\") == \"17\"\nassert solution(\"123476544\") == \"11112\""
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\") == \"4\\n\"\nassert solution(\"149\") == \"17\\n\"\nassert solution(\"123476544\") == \"11112\\n\""
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"149\") == \"17\"\nassert solution(\"123476544\") == \"11112\""
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(r'6') == '4'\nassert solution(r'149') == '17'\nassert solution(r'123476544') == '11112'"
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\") == \"4\\n\"\nassert solution(\"149\") == \"17\\n\"\nassert solution(\"123476544\") == \"11112\\n\""
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 4, \"Solution for sample input 1 is incorrect. Expected 4, got {}\".format(solution(3))\nassert solution(149) == 17, \"Solution for sample input 2 is incorrect. Expected 17, got {}\".format(solution(149))\nassert solution(123476544) == 11112, \"Solution for sample input 3 is incorrect. Expected 11112, got {}\".format(solution(123476544))"
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\") == \"4\\n\"\nassert solution(\"149\") == \"17\\n\"\nassert solution(\"123476544\") == \"11112\\n\""
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"149\") == \"17\"\nassert solution(\"123476544\") == \"11112\""
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('d 4\\ncab\\ncda\\nccc\\nbadca') == 'adcb'\nassert solution('c 4\\nabc\\nbca\\ncab\\naca') == 'IMPOSSIBLE'\nassert solution('f 2\\ndea\\nfcb') == 'AMBIGUOUS'"
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('d 4\\ncab\\ncda\\nccc\\nbadca\\nf 2\\ndea\\nfeb\\n') == 'adcb\\ndef\\nfeb'\nassert solution('c 4\\nabc\\nbca\\ncab\\naca\\n') == 'IMPOSSIBLE'\nassert solution('f 2\\ndea\\nfeb\\n') == 'AMBIGUOUS\\ndea\\n'"
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == 'adcb'\nassert solution(stdin) == 'IMPOSSIBLE'\nassert solution(stdin) == 'AMBIGUOUS'"
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"d 4\\ncab\\ncda\\nccc\\nbadca\\n\") == \"adcb\\n\"\nassert solution(\"c 4\\nabc\\nbca\\ncab\\naca\\n\") == \"IMPOSSIBLE\\n\"\nassert solution(\"f 2\\ndea\\ncfb\\n\") == \"AMBIGUOUS\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"d 4\\ncab\\ncda\\nccc\\nbadca\") == \"adcb\"\nassert solution(\"c 4\\nabc\\nbca\\ncab\\naca\") == \"IMPOSSIBLE\"\nassert solution(\"f 2\\ndea\\ncfb\") == \"AMBIGUOUS\""
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"d 4\\ncab\\ncda\\nccc\\nbadca\") == \"adcb\"\nassert solution(\"c 4\\nabc\\nbca\\ncab\\naca\") == \"IMPOSSIBLE\"\nassert solution(\"f 2\\ndea\\nfcb\") == \"AMBIGUOUS\""
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"d 4\\ncab\\ncda\\nccc\\nbadca\") == \"adcb\"\nassert solution(\"c 4\\nabc\\nbca\\ncab\\naca\") == \"IMPOSSIBLE\"\nassert solution(\"f 2\\ndea\\ncfb\") == \"AMBIGUOUS\""
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"adcb\", \"Sample Output 1: IMPOSSIBLE\"\nassert solution() == \"IMPOSSIBLE\", \"Sample Output 2: IMPOSSIBLE\"\nassert solution() == \"AMBIGUOUS\", \"Sample Output 3: AMBIGUOUS\""
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"d 4\\ncab\\ncda\\nccc\\nbadca\") == \"adcb\\n\"\nassert solution(\"c 4\\nabc\\nbca\\ncab\\naca\") == \"IMPOSSIBLE\\n\"\nassert solution(\"f 2\\ndea\\ncfb\") == \"AMBIGUOUS\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"adcb\\n\""
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3 3 3\\n10 20 0 0\\n100 20 543 12\\n\") == \"9\"\nassert solution(\"2 3 3 4\\n10 20 0 0\\n100 20 543 12\\n\") == \"12\""
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3 3 3\") == \"9\"\nassert solution(\"10 20 0 0\") == \"10\"\nassert solution(\"100 20 543 12\") == \"164\""
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3 3 3\\n10 20 0 0\\n100 20 543 12\") == \"9\", \"Example 1\"\nassert solution(\"2 5 4 5\\n3 2 1 1\\n3 1 1 2\\n3 2 3 3\") == \"164\", \"Example 2\""
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"9\", \"Expected output 9, got {}\".format(solution())"
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"164\", \"The answer is incorrect. Please check the solution and try again.\""
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3 3 3\") == \"9\\n\"\nassert solution(\"10 20 0 0\") == \"10\\n\"\nassert solution(\"100 20 543 12\") == \"164\\n\""
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3 3 3\\n10 20 0 0\\n100 20 543 12\") == \"9\\n10\\n164\""
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\"\n"
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\"\n"
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n2 1 0\") == \"yes\"\nassert solution(\"4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\") == \"no\"\nassert solution(\"3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\") == \"yes\""
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected, f\"Test failed. Expected: {expected}, got: {solution(stdin)}\"\nfor test_case in range(1, len(tests) + 1):\n    stdin = f\"Test {test_case}:\\n{tests[test_case-1]}\"\n    expected = f\"Test {test_case}:\\n{tests[test_case-1]}\"\n    assert solution(stdin) == expected, f\"Test failed. Expected: {expected}, got: {solution(stdin)}\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('sample_input.txt', 'r')) == 'yes\\n'\nassert solution(open('sample_input2.txt', 'r')) == 'no\\n'\nassert solution(open('sample_input3.txt', 'r')) == 'yes\\n'"
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n2 1 0\") == \"yes\"\nassert solution(\"4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\") == \"no\"\nassert solution(\"3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\") == \"yes\""
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"yes\", \"Your code is not correct!\""
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n2 1 0') == 'yes'\nassert solution('4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0') == 'no'\nassert solution('3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12') == 'yes'"
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n2 1 0\") == \"yes\"\nassert solution(\"4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\") == \"no\"\nassert solution(\"3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\") == \"yes\"\n\nfrom typing import List"
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n2 1 0\") == \"yes\"\nassert solution(\"4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\") == \"no\"\nassert solution(\"3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\") == \"yes\""
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n2 1 0\\n\") == \"yes\"\nassert solution(\"4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\\n\") == \"no\"\nassert solution(\"3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\\n\") == \"yes\""
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 'yes', \"Test Failed\"\n"
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"652526\") == \"4\"\nassert solution(\"12121131221\") == \"7\"\nassert solution(\"123456789\") == \"1\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"652526\") == \"4\"\nassert solution(\"12121131221\") == \"7\"\nassert solution(\"123456789\") == \"1\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"652526\") == \"4\"\nassert solution(\"12121131221\") == \"7\"\nassert solution(\"123456789\") == \"1\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"652526\") == \"4\\n\"\nassert solution(\"12121131221\") == \"7\\n\"\nassert solution(\"123456789\") == \"1\\n\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('652526') == '4', 'Test 1'\nassert solution('12121131221') == '7', 'Test 2'\nassert solution('123456789') == '1', 'Test 3'"
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"652526\") == \"4\\n\"\nassert solution(\"12121131221\") == \"7\\n\"\nassert solution(\"123456789\") == \"1\\n\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"652526\") == \"4\"\nassert solution(\"12121131221\") == \"7\"\nassert solution(\"123456789\") == \"1\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"652526\") == \"4\"\nassert solution(\"12121131221\") == \"7\"\nassert solution(\"123456789\") == \"1\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"652526\") == \"4\"\nassert solution(\"12121131221\") == \"7\"\nassert solution(\"123456789\") == \"1\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"652526\") == \"4\"\nassert solution(\"12121131221\") == \"7\"\nassert solution(\"123456789\") == \"1\""
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"0\\n\"\nassert solution(open(\"input2.txt\", \"r\").read()) == \"24\\n\"\nassert solution(open(\"input3.txt\", \"r\").read()) == \"800\\n\""
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 0, \"Output should be 0\""
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n1\\n1 2\\n2 3\\n1 3\\n\") == \"0\\n\"\nassert solution(\"4 4\\n24 10\\n1 3\\n2 3\\n2 4\\n1 4\\n\") == \"24\\n\"\nassert solution(\"6 8\\n100 500 300 75\\n1 3\\n1 4\\n3 6\\n4 5\\n3 5\\n4 6\\n2 5\\n2 6\\n\") == \"800\\n\""
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n1\\n1 2\\n2 3\\n1 3\\n\") == \"0\\n\"\nassert solution(\"4 4\\n24 10\\n1 3\\n2 3\\n2 4\\n1 4\\n\") == \"24\\n\"\nassert solution(\"6 8\\n100 500 300 75\\n1 3\\n1 4\\n3 6\\n4 5\\n3 5\\n4 6\\n2 5\\n2 6\\n\") == \"800\\n\""
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n1\\n1 2\\n2 3\\n1 3\\n\\n4 4\\n24 10\\n1 3\\n2 3\\n2 4\\n1 4\\n\\n6 8\\n100 500 300 75\\n1 3\\n1 4\\n3 6\\n4 5\\n3 5\\n4 6\\n2 5\\n2 6\") == \"0\\n\", \"Incorrect output\"\nassert solution(\"4 4\\n24 10\\n1 3\\n2 3\\n2 4\\n1 4\\n\\n6 8\\n100 500 300 75\\n1 3\\n1 4\\n3 6\\n4 5\\n3 5\\n4 6\\n2 5\\n2 6\") == \"24\\n\", \"Incorrect output\"\nassert solution(\"6 8\\n100 500 300 75\\n1 3\\n1 4\\n3 6\\n4 5\\n3 5\\n4 6\\n2 5\\n2 6\") == \"800\\n\", \"Incorrect output\""
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n1\\n1 2\\n2 3\\n1 3\\n\") == 0\nassert solution(\"4 4\\n24 10\\n1 3\\n2 3\\n2 4\\n1 4\\n\") == 24\nassert solution(\"6 8\\n100 500 300 75\\n1 3\\n1 4\\n3 6\\n4 5\\n3 5\\n4 6\\n2 5\\n2 6\\n\") == 800"
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"0\\n\""
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"0\""
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"0\", \"Incorrect Output\""
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, but got {solution(stdin)}\""
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Incorrect output. Expected '{output()}' but got '{solution(input())}'.\""
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == '1\\n'\nassert solution(2) == '1\\n1\\n'\nassert solution(3) == '-1\\n'\nassert solution(4) == '1\\n1\\n1\\n'\nassert solution(5) == '1\\n1\\n1\\n1\\n1\\n'"
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n-1\\n\"\nassert solution() == \"1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n-1\\n\"\nassert solution() == \"1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n-1\\n\"\nassert solution() == \"1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n-1\\n\"\nassert solution() == \"1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n-1\\n\"\nassert solution() == \"1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n-1\\n\""
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 3 2 4\\n\") == \"1 4\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"1 2 3 4 5\\n\"\nassert solution(\"4\\n2 1 4 3\\n\") == \"-1\\n\""
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 3 2 4\") == \"1 4\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1 2 3 4 5\"\nassert solution(\"4\\n2 1 4 3\") == \"-1\""
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n1 3 2 4') == ['1', '4']\nassert solution('5\\n1 2 3 4 5') == ['1', '2', '3', '4', '5']\nassert solution('4\\n2 1 4 3') == ['-1']"
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 3 2 4\") == \"1 4\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1 2 3 4 5\"\nassert solution(\"4\\n2 1 4 3\") == \"-1\""
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Expected output '{expected_output}', got '{solution(input())}'\""
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output() for input, output in [\n    ([4, 1, 3, 2, 4], \"1 4\"),\n    ([5, 1, 2, 3, 4, 5], \"1 2 3 4 5\"),\n    ([4, 2, 1, 4, 3], \"-1\"),\n]"
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 3 2 4\") == \"1 4\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1 2 3 4 5\\n\"\nassert solution(\"4\\n2 1 4 3\") == \"-1\\n\""
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input1) == \"8\"\nassert solution(sample_input2) == \"1\"\nassert solution(sample_input3) == \"5\""
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 8\\n..#..#..\\n.######.\\n.######.\\n..#..#..\\n\") == \"8\"\nassert solution(\"3 3\\n...\\n.#.\\n...\\n\") == \"1\"\nassert solution(\"2 6\\n.#####\\n#####.\\n\") == \"5\""
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Test Case {i+1} failed\""
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('..#..#..') == 8\nassert solution('...#.#.#') == 2\nassert solution('...#.#.#...') == 3\nassert solution('...#.#.#..#..#..') == 5"
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input1) == \"8\\n\", \"Test case 1 failed\"\nassert solution(sample_input2) == \"1\\n\", \"Test case 2 failed\"\nassert solution(sample_input3) == \"5\\n\", \"Test case 3 failed\""
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 8\\n..#..#..\\n.######.\\n.######.\\n..#..#..\") == \"8\"\nassert solution(\"3 3\\n...\\n.#.\\n...\\n\") == \"1\"\nassert solution(\"2 6\\n.#####\\n#####.\\n\") == \"5\"\n\nfrom typing import List"
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == 8\nassert solution(sample_input_2) == 1\nassert solution(sample_input_3) == 5"
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == 8, \"Expected Output: 8, Received Output: \" + str(solution(input()))"
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"8\", \"Incorrect output. Expected '8', got '{}'\".format(solution(stdin))"
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2\nassert solution(sample_input3) == sample_output3"
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2\nassert solution(input3) == output3\nassert solution(input4) == output4\nassert solution(input5) == output5"
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, but got {solution(input())}\"\n"
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"output\", \"The provided solution is incorrect!\"\n"
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '6\\n19 12 2 18 5 5\\n'\nassert solution() == '13\\n4 2 6 1 9 7 5 5 7 1 2 3 3\\n'\nassert solution() == '-1\\n'"
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\") == 6\nassert solution(\"3 3 3\\n3 1 1\\n1 3 2\\n3 2 3\") == 13\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\") == -1"
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\") == 6\nassert solution(\"3 3 3\\n3 1 1\\n1 3 2\\n3 2 3\") == 13\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\") == -1"
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\") == \"6\\n19 12 2 18 5 5\"\nassert solution(\"3 3 3\\n3 1 1\\n1 3 2\\n3 2 3\") == \"13\\n4 2 6 1 9 7 5 5 7 1 2 3 3\"\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\") == \"-1\"\nprint(\"All test cases pass\")"
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\") == \"6\\n19 12 2 18 5 5\"\nassert solution(\"3 3 3\\n3 1 1\\n1 3 2\\n3 2 3\") == \"13\\n4 2 6 1 9 7 5 5 7 1 2 3 3\"\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\") == \"-1\""
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\") == 6\nassert solution(\"3 3 3\\n3 1 1\\n1 3 2\\n3 2 3\") == 13\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\") == -1"
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == '5 1'\nassert solution(open('input_2.txt', 'r')) == '1 5'\nassert solution(open('input_3.txt', 'r')) == '3 2'"
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n3\\n3\\n3\\n3\\n3\\n1\\n2\\n3\\n4\\n\\n') == '5 1\\n'\nassert solution('5\\n4\\n3\\n2\\n1\\n0\\n1\\n2\\n3\\n4\\n\\n') == '1 5\\n'\nassert solution('4\\n1\\n5\\n3\\n6\\n1\\n2\\n3\\n\\n') == '3 2\\n'"
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n3\\n3\\n3\\n3\\n3\\n1\\n2\\n3\\n4\") == \"5 1\\n\"\nassert solution(\"5\\n4\\n3\\n2\\n1\\n0\\n1\\n2\\n3\\n4\") == \"1 5\\n\"\nassert solution(\"4\\n1\\n5\\n3\\n6\\n1\\n2\\n3\") == \"3 2\\n\""
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"5 1\\n\"\n"
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == ['5 1', '3 2']"
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_data) == output_data, \"The output does not match the expected output\""
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '5 1'"
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output\nprint(f\"{L} {M}\")"
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n3\\n3\\n3\\n3\\n3\\n1\\n2\\n3\\n4\\n\") == \"5 1\"\nassert solution(\"5\\n4\\n3\\n2\\n1\\n0\\n1\\n2\\n3\\n4\\n\") == \"1 5\"\nassert solution(\"4\\n1\\n5\\n3\\n6\\n1\\n2\\n3\\n\") == \"3 2\""
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == sample_output_1, \"Test 1\"\nassert solution(sample_input_2) == sample_output_2, \"Test 2\"\nassert solution(sample_input_3) == sample_output_3, \"Test 3\""
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n3 0\\n3 1\\n3 2\\n3 3\\n3 4\") == 1\nassert solution(\"5\\n4 0\\n3 1\\n2 2\\n1 3\\n0 4\") == 5\nassert solution(\"6\\n3 0\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\") == 5"
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n3 0\\n3 1\\n3 2\\n3 3\\n3 4\") == \"1\\n\"\nassert solution(\"5\\n4 0\\n3 1\\n2 2\\n1 3\\n0 4\") == \"5\\n\"\nassert solution(\"6\\n3 0\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\") == \"5\\n\""
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Sample Input 1\\n5\\n3 0\\n3 1\\n3 2\\n3 3\\n3 4\\n\") == \"1\\n\"\nassert solution(\"Sample Input 2\\n5\\n4 0\\n3 1\\n2 2\\n1 3\\n0 4\\n\") == \"5\\n\"\nassert solution(\"Sample Input 3\\n6\\n3 0\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\\n\") == \"5\\n\""
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, but got: {solution(input())}\""
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n3 0\\n3 1\\n3 2\\n3 3\\n3 4\") == \"1\\n\"\nassert solution(\"5\\n4 0\\n3 1\\n2 2\\n1 3\\n0 4\") == \"5\\n\"\nassert solution(\"6\\n3 0\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\") == \"5\\n\""
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 'Output the number of nodes in the largest subset satisfying the Heap Property', 'Solution is incorrect.'"
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == expected_output, f\"Test case failed. Expected output: {expected_output}, got {solution}.\""
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2\nassert solution(input3) == output3"
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=open('input.txt', 'r')) == '0\\n'"
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2\nassert solution(input3) == output3"
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2\nassert solution(input_3) == output_3"
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution, \"Function not defined.\"\n\nn = int(stdin.readline().strip())\n\ngraph = [[0] * (n+1) for _ in range(n+1)]\n\nfor _ in range(n-1):\n    a, b, c = map(int, stdin.readline().strip().split())\n    graph[a][b] = c\n    graph[b][a] = c"
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution\n\nimport sys\nfrom collections import defaultdict\nfrom itertools import permutations, product"
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"4\\n3\\n4\\n5\\n6\\n\\n0\\n\\n5\\n1\\n2\\n3\\n6\\n7\\n\""
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    '''\n    8\n    1 3 1\n    2 3 1\n    3 4 3\n    4 5 4\n    5 6 3\n    6 7 2\n    6 8 2\n    '''\n) == '''\n4\n3\n4\n5\n6\n'''\n\nassert solution(\n    '''\n    8\n    1 2 2\n    1 3 1\n    2 4 3\n    2 7 1\n    3 5 2\n    5 6 2\n    7 8 1\n    '''\n) == '''\n0\n'''\n\nassert solution(\n    '''\n    9\n    1 2 2\n    1 3 1\n    1 4 5\n    1 5 5\n    2 6 3\n    3 7 3\n    4 8 1\n    5 9 2\n    '''\n) == '''\n5\n1\n2\n3\n6\n7\n'''"
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Expected: {expected_output}, Received: {solution(input())}\""
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '0\\n', \"Incorrect output\""
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8\\n1 3 1\\n2 3 1\\n3 4 3\\n4 5 4\\n5 6 3\\n6 7 2\\n6 8 2\\n\") == \"4\\n3\\n4\\n5\\n6\\n\"\nassert solution(\"8\\n1 2 2\\n1 3 1\\n2 4 3\\n2 7 1\\n3 5 2\\n5 6 2\\n7 8 1\\n\") == \"0\\n\"\nassert solution(\"9\\n1 2 2\\n1 3 1\\n1 4 5\\n1 5 5\\n2 6 3\\n3 7 3\\n4 8 1\\n5 9 2\\n\") == \"5\\n1\\n2\\n3\\n6\\n7\\n\""
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2\\nV1 V2 V1 V1 V2\\n\") == \"5\"\nassert solution(\"2 1\\nV1 V2 V1 V1 V2\\n\") == \"6\"\nassert solution(\"1 2\\nR10 V1 V2 V1 E\\n\") == \"30\""
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Sample Input 1\") == \"5\"\nassert solution(\"Sample Input 2\") == \"6\"\nassert solution(\"Sample Input 3\") == \"30\""
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('harvard_architecture.in', 'r')) == '5'\nassert solution(open('harvard_architecture.in', 'r')) == '6'\nassert solution(open('harvard_architecture.in', 'r')) == '30'"
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 2\\nV1 V2 V1 V1 V2\\n') == '5'\nassert solution('2 1\\nV1 V2 V1 V1 V2\\n') == '6'\nassert solution('1 2\\nR10 V1 V2 V1 E\\n') == '30'\n\nfrom typing import List"
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"30\""
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"5\"\n"
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2\\nV1 V2 V1 V1 V2\\n\") == \"5\"\nassert solution(\"2 1\\nV1 V2 V1 V1 V2\\n\") == \"6\"\nassert solution(\"1 2\\nR10 V1 V2 V1 E\\n\") == \"30\""
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2\\nV1 V2 V1 V1 V2\\n\") == \"5\\n\"\nassert solution(\"2 1\\nV1 V2 V1 V1 V2\\n\") == \"6\\n\"\nassert solution(\"1 2\\nR10 V1 V2 V1 E\\n\") == \"30\\n\""
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\").read()) == \"30\"\n"
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 24\") == \"38\"\nassert solution(\"10 11\") == \"impossible\"\nassert solution(\"9 216\") == \"546\""
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 24\") == \"38\", \"Test 1 failed\"\nassert solution(\"10 11\") == \"impossible\", \"Test 2 failed\"\nassert solution(\"9 216\") == \"546\", \"Test 3 failed\"\n"
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '38'\nassert solution(input()) == 'impossible'\nassert solution(input()) == '546'"
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 24\") == \"38\", \"Expected result: 38, but got: {}\".format(solution(\"10 24\"))\nassert solution(\"10 11\") == \"impossible\", \"Expected result: impossible, but got: {}\".format(solution(\"10 11\"))\nassert solution(\"9 216\") == \"546\", \"Expected result: 546, but got: {}\".format(solution(\"9 216\"))"
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(Sample Input 1) == Sample Output 1\nassert solution(Sample Input 2) == Sample Output 2\nassert solution(Sample Input 3) == Sample Output 3"
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('10 24') == '38'\nassert solution('10 11') == 'impossible'\nassert solution('9 216') == '546'\n"
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output"
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 24\") == 38\nassert solution(\"10 11\") == \"impossible\"\nassert solution(\"9 216\") == 546"
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == \"impossible\"  # Example 3"
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(f\"{10} {24}\") == \"38\"\nassert solution(f\"{10} {11}\") == \"impossible\"\nassert solution(f\"{9} {216}\") == \"546\""
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"466.662\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"20 60 2 1\\n5 15 0.33333 30\\n22 60 0.66666 70\\n0 10\") == 466.662\nassert solution(\"3 4 2 1\\n1 3 0.25 8\\n2 4 0.66667 15\\n1 2\") == 10.00005\nassert solution(\"3 4 1 0\\n0 2 0.25 8\") == 2.0"
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''20 60 2 1\n5 15 0.33333 30\n22 60 0.66666 70\n0 10''') == '466.662'\nassert solution('''3 4 2 1\n1 3 0.25 8\n2 4 0.66667 15\n1 2''') == '10.00005'\nassert solution('''3 4 1 0\n0 2 0.25 8''') == '2.0'"
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == solution(\"20 60 2 1\\n5 15 0.33333 30\\n22 60 0.66666 70\\n0 10\\nSample Output 1:466.662\\n\\nSample Input 2:3 4 2 1\\n1 3 0.25 8\\n2 4 0.66667 15\\n1 2\\nSample Output 2:10.00005\\n\\nSample Input 3:3 4 1 0\\n0 2 0.25 8\\nSample Output 3:2.0\")"
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"20 60 2 1\\n5 15 0.33333 30\\n22 60 0.66666 70\\n0 10\") == 466.662\nassert solution(\"3 4 2 1\\n1 3 0.25 8\\n2 4 0.66667 15\\n1 2\") == 10.00005\nassert solution(\"3 4 1 0\\n0 2 0.25 8\") == 2.0"
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"466.662\""
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2\nassert solution(sample_input3) == sample_output3"
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('20 60 2 1\\n5 15 0.33333 30\\n22 60 0.66666 70\\n0 10') == 466.662\nassert solution('3 4 2 1\\n1 3 0.25 8\\n2 4 0.66667 15\\n1 2') == 10.00005\nassert solution('3 4 1 0\\n0 2 0.25 8') == 2.0\n\nfrom typing import List"
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('20 60 2 1\\n5 15 0.33333 30\\n22 60 0.66666 70\\n0 10') == '466.662'\nassert solution('3 4 2 1\\n1 3 0.25 8\\n2 4 0.66667 15\\n1 2') == '10.00005'\nassert solution('3 4 1 0\\n0 2 0.25 8') == '2.0'"
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected\n\ninput_lines = [line.strip() for line in input().split()]\nd, t, c, r = [int(x) for x in input_lines[0].split()]\nclouds = [list(map(int, line.split())) for line in input_lines[1:]]"
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1\\nblue pink 1.0\\nred pink 1.5\\nblue red 1.0\\n') == '1.5'\nassert solution('2\\nblue red 1.0\\nred pink 1.5\\n') == '0.0'\nassert solution('3\\nblue pink 1.9\\nyellow orange 1.9\\ngreen yellow 1.9\\nblue green 1.9\\n') == '10.0'\nassert solution('4\\noctopus pink 2.2\\noctopus red 1.8\\norange pink 1.9\\norange red 1.8\\n') == '1.0'"
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1.500000000000000\\n\", \"The output should be: 1.5000000000000000\\n\"\nassert solution() == \"0.0000000000000000\\n\", \"The output should be: 0.0000000000000000\\n\"\nassert solution() == \"10.000000000000000\\n\", \"The output should be: 10.000000000000000\\n\""
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('blue pink 1.0\\nred pink 1.5\\nblue red 1.0') == '1.5000000000000000'\nassert solution('blue red 1.0\\nred pink 1.5\\norange pink 1.9\\nyellow orange 1.9\\ngreen yellow 1.9\\nblue green 1.9') == '10.0000000000000000'"
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\nblue pink 1.0\\nred pink 1.5\\nblue red 1.0') == '1.500000000000000\\n'\nassert solution('2\\nblue red 1.0\\nred pink 1.5') == '0.000000000000000\\n'\nassert solution('4\\norange pink 1.9\\nyellow orange 1.9\\ngreen yellow 1.9\\nblue green 1.9') == '10.000000000000000\\n'\n"
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"1.500000000000000\", \"Incorrect output for example 1.\"\nassert solution() == \"0.000000000000000\", \"Incorrect output for example 2.\"\nassert solution() == \"10.000000000000000\", \"Incorrect output for example 3.\""
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('blue pink 1.0\\nred pink 1.5\\nblue red 1.0\\norange pink 1.9\\nyellow orange 1.9\\ngreen yellow 1.9\\nblue green 1.9') == 1.500000000000000\nassert solution('blue pink 1.0\\nred pink 1.5\\nblue red 1.0\\norange pink 1.9\\nyellow orange 1.9\\ngreen yellow 1.9\\nblue green 1.9\\nred orange 2.1\\nblue pink 2.3') == 2.000000000000000\nassert solution('blue pink 1.0\\nred pink 1.5\\nblue red 1.0\\norange pink 1.9\\nyellow orange 1.9\\ngreen yellow 1.9\\nblue green 1.9\\nred orange 2.1\\nblue pink 2.3\\nblue orange 1.5') == 1.500000000000000\nassert solution('blue pink 1.0\\nred pink 1.5\\nblue red 1.0\\norange pink 1.9\\nyellow orange 1.9\\ngreen yellow 1.9\\nblue green 1.9\\nred orange 2.1\\nblue pink 2.3\\nblue orange 1.5\\nred pink 1.8\\nblue green 2.4') == 1.800000000000000\nassert solution('blue pink 1.0\\nred pink 1.5\\nblue red 1.0\\norange pink 1.9\\nyellow orange 1.9\\ngreen yellow 1.9\\nblue green 1.9\\nred orange 2.1\\nblue pink 2.3\\nblue orange 1.5\\nred pink 1.8\\nblue green 2.4\\nblue lemonade 2.0\\nred pink 2.2\\nblue lemonade 2.4') == 2.200000000000000\nassert solution('blue pink 1.0\\nred pink 1.5\\nblue red 1.0\\norange pink 1.9\\nyellow orange 1.9\\ngreen yellow 1.9\\nblue green 1.9\\nred orange 2.1\\nblue pink 2.3\\nblue orange 1.5\\nred pink 1.8\\nblue green 2.4\\nblue lemonade 2.0\\nred pink 2.2\\nblue lemonade 2.4\\nblue lemonade 1.0') == 1.500000000000000\nassert solution('blue pink 1.0\\nred pink 1.5\\nblue red 1.0\\norange pink 1.9\\nyellow orange 1.9\\ngreen yellow 1.9\\nblue green 1.9\\nred orange 2.1\\nblue pink 2.3\\nblue orange 1.5\\nred pink 1.8\\nblue green 2.4\\nblue lemonade 2.0\\nred pink 2.2\\nblue lemonade 2.4\\nblue lemonade 1.0\\nblue lemonade 1.2\\nred pink 1.5\\nblue lemonade 1.3\\nblue lemonade 1.4\\nblue lemonade 1.5\\nblue lemonade 1.6\\nblue lemonade 1.7\\nblue lemonade 1.8\\nblue lemonade 1.9\\nblue lemonade 2.0\\nblue lemonade 2.1\\nblue lemonade"
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"blue pink 1.0\\nred pink 1.5\\nblue red 1.0\") == \"1.500000000000000\"\nassert solution(\"blue red 1.0\\nred pink 1.5\") == \"0.000000000000000\"\nassert solution(\"orange pink 1.9\\nyellow orange 1.9\\ngreen yellow 1.9\\nblue green 1.9\") == \"10.000000000000000\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input) == expected, f\"For input {input}, expected {expected}, got {solution(input)}\"\n\ninput = \"\"\"\n6 1 1 1 0\n2 3 1 5 3 2\n2 1 2\n3 3 4 5\n1 6\n\"\"\"\n\nexpected = 180\nassert solution(input) == expected, f\"For input {input}, expected {expected}, got {solution(input)}\"\n\ninput = \"\"\"\n3 2 2 1 1\n2 3 2\n1 1\n1 2\n1 2\n1 3\n1 1\n2 3\n\"\"\"\n\nexpected = 22\nassert solution(input) == expected, f\"For input {input}, expected {expected}, got {solution(input)}\"\n\ninput = \"\"\"\n3 1 1 1 1\n5 5 5\n3 1 2 3\n3 1 2 3\n3 1 2 3\n2 1\n\"\"\"\n\nexpected = 0\nassert solution(input) == expected, f\"For input {input}, expected {expected}, got {solution(input)}\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''6 1 1 1 0\n2 3 1 5 3 2\n2 1 2\n3 3 4 5\n1 6''') == '180'\nassert solution('''3 2 2 1 1\n2 3 2\n1 1\n1 2\n1 2\n1 3\n1 1\n2 3''') == '22'\nassert solution('''3 1 1 1 1\n5 5 5\n3 1 2 3\n3 1 2 3\n3 1 2 3\n2 1''') == '0'"
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 1 1 1 0\\n2 3 1 5 3 2\\n2 1 2\\n3 3 4 5\\n1 6\") == \"180\"\nassert solution(\"3 2 2 1 1\\n2 3 2\\n1 1\\n1 2\\n1 2\\n1 3\\n1 1\\n2 3\") == \"22\"\nassert solution(\"3 1 1 1 1\\n5 5 5\\n3 1 2 3\\n3 1 2 3\\n3 1 2 3\\n2 1\") == \"0\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 1 1 1 0\\n2 3 1 5 3 2\\n2 1 2\\n3 3 4 5\\n1 6\\n\") == \"180\"\nassert solution(\"3 2 2 1 1\\n2 3 2\\n1 1\\n1 2\\n1 2\\n1 3\\n1 1\\n2 3\\n\") == \"22\"\nassert solution(\"3 1 1 1 1\\n5 5 5\\n3 1 2 3\\n3 1 2 3\\n3 1 2 3\\n2 1\\n\") == \"0\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 1 1 1 0\\n2 3 1 5 3 2\\n2 1 2\\n3 3 4 5\\n1 6\\n\") == \"180\"\nassert solution(\"3 2 2 1 1\\n2 3 2\\n1 1\\n1 2\\n1 2\\n1 3\\n1 1\\n2 3\\n\") == \"22\"\nassert solution(\"3 1 1 1 1\\n5 5 5\\n3 1 2 3\\n3 1 2 3\\n3 1 2 3\\n2 1\\n\") == \"0\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1 1 0\") == \"180\"\nassert solution(\"6 1 1 1 0\") == \"180\"\nassert solution(\"2 3 1 5 3 2\") == \"180\"\nassert solution(\"2 1 2\") == \"180\"\nassert solution(\"3 3 4 5\") == \"180\"\nassert solution(\"1 6\") == \"180\"\nassert solution(\"3 2 2 1 1\") == \"180\"\nassert solution(\"2 3 2\") == \"180\"\nassert solution(\"1 1\") == \"180\"\nassert solution(\"1 2\") == \"180\"\nassert solution(\"1 2\") == \"180\"\nassert solution(\"1 3\") == \"180\"\nassert solution(\"1 1\") == \"180\"\nassert solution(\"2 3\") == \"180\"\nassert solution(\"1 1 1 1 0\") == \"180\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(r=6, s=1, m=1, d=1, n=0) == 180\nassert solution(r=6, s=1, m=1, d=1, n=2) == 22\nassert solution(r=6, s=1, m=1, d=1, n=3) == 0\n\nr, s, m, d, n = map(int, stdin.readline().split())\nbrands = list(map(int, stdin.readline().split()))\ningredients = []\nfor _ in range(r):\n    ingredients.append(list(map(int, stdin.readline().split())))\n\ndishes = []\nfor _ in range(n):\n    dishes.append(list(map(int, stdin.readline().split())))\n\nfor i in range(s):\n    if not any(ingredients[j][i] in ingredients[j][i+1:j+1] for j in range(s, i+1)):\n        print(\"too many\")\n        return\n\nfor i in range(m):\n    for j in range(i+1, m+1):\n        for k in range(j+1, m+1):\n            for l in range(k+1, m+1):\n                if all(ingredients[i][ingredient] == ingredients[j][ingredient] for ingredient in range(ingredients[i][1], ingredients[i][1]+ingredients[i][0])):\n                    continue\n                for n in range(n):\n                    if all(ingredients[i][ingredient] in ingredients[j][ingredient] for ingredient in range(ingredients[i][1], ingredients[i][1]+ingredients[i][0])):\n                        continue\n                    for m in range(m):\n                        for o in range(o+1, m+1):\n                            if all(ingredients[i][ingredient] == ingredients[j][ingredient] for ingredient in range(ingredients[i][1], ingredients[i][1]+ingredients[i][0])):\n                                continue\n                            for p in range(p+1, m+1):\n                                if all(ingredients[i][ingredient] == ingredients[j][ingredient] for ingredient in range(ingredients[i][1], ingredients[i][1]+ingredients[i][0])):\n                                    continue\n                                for q in range(q+1, m+1):\n                                    if all(ingredients[i][ingredient] == ingredients[j][ingredient] for ingredient in range(ingredients[i][1], ingredients[i][1]+ingredients[i][0])):\n                                        continue\n                                    for r in range(r+1, m+1):\n                                        if all(ingredients[i][ingredient] == ingredients[j][ingredient] for ingredient in range(ingredients[i][1], ingredients[i][1]+ingredients[i][0])):\n                                            continue\n                                        for s in range(s+1, m+1):\n                                            if all(ingredients[i][ingredient] == ingredients[j][ingredient] for ingredient in range(ingredients[i][1], ingredients[i][1]+ingredients[i][0])):\n                                                continue\n                                            for t in range(t+1, m+1):\n                                                if all(ingredients[i][ingredient] == ingredients[j][ingredient] for ingredient in range(ingredients[i][1], ingredients[i][1]+ingredients[i][0])):\n                                                    continue\n                                                for u in range(u+1, m+1):\n                                                    if all(ingredients[i][ingredient] == ingredients[j][ingredient] for ingredient in range(ingredients[i][1], ingredients[i][1]+ingredients[i][0])):\n                                                        continue\n                                                    for v in range(v+1, m+1):\n                                                        if all(ingredients[i][ingredient] == ingredients[j][ingredient] for ingredient in range(ingredients[i][1], ingredients[i][1]+ingredients[i][0])):\n                                                            continue\n                                                            for w in range(w+1, m+1):\n                                                                if all(ingredients[i][ingredient] == ingredients[j][ingredient] for ingredient in range(ingredients[i][1], ingredients[i][1]+ingredients[i][0])):\n                                                                    continue\n                                                                    for x in range(x+1, m+1):\n                                                                        if all(ingredients[i][ingredient] == ingredients[j][ingredient] for ingredient in range(ingredients[i][1], ingredients[i][1]+ingredients[i][0])):\n                                                                            continue\n                                                                            for y in range(y+1, m+1):\n                                                                                if all(ingredients[i][ingredient] == ingredients[j][ingredient] for ingredient in range(ingredients[i][1], ingredients[i][1]+ingredients[i][0])):\n                                                                                    continue\n                                                                                    for z in range(z+1,"
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 1 1 1 0\\n2 3 1 5 3 2\\n2 1 2\\n3 3 4 5\\n1 6\") == \"180\"\nassert solution(\"3 2 2 1 1\\n2 3 2\\n1 1\\n1 2\\n1 2\\n1 3\\n1 1\\n2 3\\n\") == \"22\"\nassert solution(\"3 1 1 1 1\\n5 5 5\\n3 1 2 3\\n3 1 2 3\\n3 1 2 3\\n2 1\\n\") == \"0\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 1 1 1 0\\n2 3 1 5 3 2\\n2 1 2\\n3 3 4 5\\n1 6\\n\") == \"180\"\nassert solution(\"3 2 2 1 1\\n2 3 2\\n1 1\\n1 2\\n1 2\\n1 3\\n1 1\\n2 3\\n\") == \"22\"\nassert solution(\"3 1 1 1 1\\n5 5 5\\n3 1 2 3\\n3 1 2 3\\n3 1 2 3\\n2 1\\n\") == \"0\""
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3') == '20 20'\nassert solution('6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3') == '17 17'\nassert solution('3 3 2\\n...\\n.#. \\n... \\nup 2\\nright 2') == '-1 -1'"
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution( \"\"\"6 8 5\n........\n...#....\n########\n"
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 1:\\n20 20\\n\\n\\n\\nSample Input 2:\\n6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 2:\\n17 17\\n\\n\\n\\nSample Input 3:\\n3 3 2\\n...\\n.#. \\n... \\nup 2\\nright 2\\nSample Output 3:\\n-1 -1\\n') == '20 20\\n'\nassert solution('6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 2:\\n17 17\\n\\n\\n\\nSample Input 3:\\n3 3 2\\n...\\n.#. \\n... \\nup 2\\nright 2\\nSample Output 3:\\n-1 -1\\n') == '17 17\\n'\nassert solution('3 3 2\\n...\\n.#. \\n... \\nup 2\\nright 2\\nSample Output 3:\\n-1 -1\\n') == '-1 -1\\n'"
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 8 5\\n.......\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 1: 20 20\\n\\nSample Input 2: 6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 2: 17 17\\n\\nSample Input 3: 3 3 2\\n... \\n.#. \\n... \\nup 2\\nright 2\\nSample Output 3: -1 -1\") == (\"20 20\", \"17 17\", \"-1 -1\")"
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 1: 20 20\\n\\nSample Input 2: 6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 2: 17 17\\n\\nSample Input 3: 3 3 2\\n...\\n.#.\\n...\\nup 2\\nright 2\\nSample Output 3: -1 -1\") == (\"20 20\\n\", \"17 17\\n\")"
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 1: 20 20\\nSample Input 2: 6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 2: 17 17\\nSample Input 3: 3 3 2\\n...\\n.#. \\n... \\nup 2\\nright 2\\nSample Output 3: -1 -1') == '20 20\\n17 17\\n-1 -1'"
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Input 1:\\n6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 1:\\n20 20\\n\\nSample Input 2:\\n6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 2:\\n17 17\\n\\nSample Input 3:\\n3 3 2\\n...\\n.#. \\n... \\nup 2\\nright 2\\nSample Output 3:\\n-1 -1\") == \"20 20\\n\\n17 17\\n\\n-1 -1\""
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 1:20 20\\n\\nSample Input 2:6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 2:17 17\\n\\nSample Input 3:3 3 2\\n... \\n.#.\\n... \\nup 2\\nright 2\\nSample Output 3:-1 -1\\ndef solution(stdin: str) -> str:\n    pass\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n\\n###\\n"
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"6 8 5\n........\n...#....\n########\n"
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\n\") == \"20 20\\n\"\n\nassert solution(\"6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\n\") == \"17 17\\n\"\n\nassert solution(\"3 3 2\\n...\\n.#. \\n... \\nup 2\\nright 2\\n\") == \"-1 -1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n### Response:\\n\\nassert solution(\\\"6 8 5\\\\n........\\\\n...#....\\\\n########\\\\n#..#...#\\\\n#..#####\\\\n#.......\\\\nup 3\\\\nright 7\\\\ndown 2\\\\nleft 4\\\\nup 3\\\\n\\\") == \\\"20 20\\\\n\\\"\\n\\nassert solution(\\\"6 8 5\\\\n........\\\\n........\\\\n###.####\\\\n#......#\\\\n#..#####\\\\n#.......\\\\nup 3\\\\nright 7\\\\ndown 2\\\\nleft 4\\\\nup 3\\\\n\\\") == \\\"17 17\\\\n\\\"\\n\\nassert solution(\\\"3 3 2\\\\n...\\\\n.#. \\\\n... \\\\nup 2\\\\nright 2\\\\n\\\") == \\\"-1 -1\\\\ndef solution(stdin: str) -> str:\\\\n    pass\\n\\n### Solution:\\n\\ndef solution(stdin: str) -> str:\\n    lines = stdin.strip().splitlines()\\n    h, w, n = int(lines[0].split()[0]), int(lines[0].split()[1]), int(lines[0].split()[2])\\n    min_time = float('inf')\\n    max_time = -1\\n    marker_time = -1\\n    for i in range(1, h+1):\\n        for j in range(1, w+1):\\n            for cmd in lines[i+1:]:\\n                direction, distance = cmd.split()[:2]\\n                distance = int(distance)\\n                if direction == 'up':\\n                    marker_time = i\\n                    marker_time += w * distance\\n                elif direction == 'down':\\n                    marker_time = i\\n                    marker_time -= w * distance\\n                elif direction == 'left':\\n                    marker_time = i\\n                    marker_time -= w * distance\\n                elif direction == 'right':\\n                    marker_time = i\\n                    marker_time += w * distance\\n                if marker_time < min_time:\\n                    min_time = marker_time\\n                elif marker_time > max_time:\\n                    max_time = marker_time\\n    return f\\\"{min_time} {max_time}\\\" if min_time!= -1 else \\\"-1 -1\\\"\\n\\n### Test Cases:\\n\\nassert solution(\\\"6 8 5\\\\n........\\\\n...#....\\\\n########\\\\n#..#...#\\\\n#..#####\\\\n#.......\\\\nup 3\\\\nright 7\\\\ndown 2\\\\nleft 4\\\\nup 3\\\\n\\\") == \\\"20 20\\\\n\\\"\\n\\nassert solution(\\\"6 8 5\\\\n........\\\\n........\\\\n###.####\\\\n#......#\\\\n#..#####\\\\n#.......\\\\nup 3\\\\nright 7\\\\ndown 2\\\\nleft 4\\\\nup 3\\\\n\\\") == \\\"17 17\\\\n\\\"\\n\\nassert solution(\\\"3 3 2\\\\n...\\\\n.#. \\\\n... \\\\nup 2\\\\nright 2\\\\n\\\") == \\\"-1 -1\\\\ndef solution(stdin: str) -> str:\\\\n    pass\\n\\nassert solution(\\\"6 8 5\\\\n........\\\\n...#....\\\\n########\\\\n#..#...#\\\\n#..#####\\\\n#.......\\\\nup 3\\\\nright 7\\\\ndown 2\\\\nleft 4\\\\nup 3\\\\"
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"impossible\", \"Your solution is incorrect.\""
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == 'impossible'"
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"371\\n3\\n2 40 65\\n2 100 150\\n2 300 320\") == \"impossible\"\nassert solution(\"310\\n3\\n2 40 65\\n2 100 150\\n2 300 320\") == \"300\"\nassert solution(\"90\\n2\\n2 20 35\\n2 88 200\") == \"88\""
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"371\\n3\\n2 40 65\\n2 100 150\\n2 300 320\\n\") == \"impossible\"\nassert solution(\"310\\n3\\n2 40 65\\n2 100 150\\n2 300 320\\n\") == \"300\"\nassert solution(\"90\\n2\\n2 20 35\\n2 88 200\\n\") == \"88\""
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"impossible\""
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"impossible\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"impossible\", \"Test failed\"\n"
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"impossible\" # Your solution here"
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"impossible\" # expected output: impossible"
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('371\\n3\\n2 40 65\\n2 100 150\\n2 300 320') == 'impossible'"
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\") == \"cannot fold\\n\"\nassert solution(\"......\\n......\\n......\\n......\\n......\\n......\") == \"cannot fold\\n\"\nassert solution(\"......\\n......\\n......\\n......\\n......\\n......\") == \"cannot fold\\n\"\nassert solution(\"......\\n......\\n......\\n......\\n......\\n......\") == \"cannot fold\\n\"\nassert solution(\"......\\n......\\n......\\n......\\n......\\n......\") == \"cannot fold\\n\""
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n......\\n..#..#\\n...#\\n"
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\\n') == 'cannot fold\\n'\n\nassert solution('..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\\n') == 'can fold\\n'\n\nassert solution('..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\\n') == 'cannot fold\\n'"
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"......\\n......\\n######\\n......\\n......\\n......\\n\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......"
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"......\\n.....#\\n..#...\\n...#.\\n..#...\\n..#...\\n......\\n.....#\\n..#...\\n...#.\\n..#...\\n..#...\\n......\\n.....#\\n..#...\\n...#.\\n..#...\\n..#...\\n......\\n.....#\\n..#...\\n...#.\\n..#...\\n..#...\\n......\\n.....#\\n..#...\\n...#.\\n..#...\\n..#...\\n......\\n.....#\\n..#...\\n...#.\\n..#...\\n..#...\\n......\\n.....#\\n..#...\\n...#.\\n..#...\\n..#...\\n......\\n.....#\\n..#...\\n...#.\\n..#...\\n..#...\\n......\\n.....#\\n..#...\\n...#.\\n..#...\\n..#...\\n......\\n.....#\\n..#...\\n...#.\\n..#...\\n..#...\\n......\\n.....#\\n..#...\\n...#.\\n..#...\\n..#...\\n......\\n.....#\\n..#...\\n...#.\\n..#...\\n..#...\\n......\\n.....#\\n..#...\\n...#.\\n..#...\\n..#...\\n......\\n.....#\\n..#...\\n...#.\\n..#...\\n..#...\\n......\\n.....#\\n..#...\\n...#.\\n..#...\\n..#...\\n......\\n.....#\\n..#...\\n...#.\\n..#...\\n..#...\\n......\\n.....#\\n..#...\\n...#.\\n..#...\\n..#...\\n......\\n.....#\\n..#...\\n...#.\\n..#...\\n..#...\\n......\\n.....#\\n..#...\\n...#.\\n..#...\\n..#...\\n......\\n.....#\\n..#...\\n...#.\\n..#...\\n..#...\\n......\\n.....#\\n..#...\\n...#.\\n..#...\\n..#...\\n......\\n.....#\\n..#...\\n...#.\\n..#...\\n..#...\\n......\\n.....#\\n..#...\\n...#.\\n..#...\\n..#...\\n......\\n.....#\\n..#...\\n...#.\\n..#...\\n..#...\\n......\\n.....#\\n..#...\\n...#.\\n..#...\\n..#...\\n......\\n.....#\\n..#...\\n...#.\\n..#...\\n..#...\\n......\\n.....#\\n..#...\\n...#.\\n..#...\\n..#...\\n......\\n.....#\\n..#...\\n...#.\\n..#...\\n..#...\\n......\\n.....#\\n..#...\\n...#.\\n..#...\\n..#...\\n......\\n.....#\\n..#...\\n...#.\\n..#...\\n..#...\\n......\\n.....#\\n..#...\\n...#.\\n..#...\\n..#...\\n......\\n.....#\\n..#...\\n...#.\\n..#...\\n..#...\\n......\\n.....#\\n..#...\\n...#.\\n..#...\\n..#...\\n......\\n.....#\\n..#...\\n...#.\\n..#...\\n..#...\\n......\\n.....#\\n..#...\\n...#.\\n..#...\\n..#...\\n......\\n.....#\\n..#...\\n...#.\\n..#...\\n..#...\\n......\\n.....#\\n..#...\\n...#.\\n..#...\\n..#...\\n......\\n.....#\\n..#...\\n...#.\\n..#...\\n..#...\\n......\\n.....#\\n..#...\\n...#.\\n..#...\\n..#...\\n......\\n.....#\\n..#...\\n...#.\\n..#...\\n..#...\\n......\\n.....#\\n..#...\\n...#.\\n..#...\\n..#...\\n......\\n.....#\\n..#...\\n...#.\\n..#...\\n..#...\\n......\\n.....#\\n..#...\\n...#.\\n..#...\\n..#...\\n......\\n.....#\\n..#...\\n...#.\\n..#...\\n..#...\\n......\\n.....#\\n..#...\\n...#.\\n..#...\\n..#...\\n......\\n.....#\\n..#...\\n...#.\\n..#...\\n..#...\\n......\\n.....#\\n..#...\\n..."
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n..##..\n...#..\n..##..\n...#..\n......\n......\n''') == 'can fold'\n\nassert solution('''\n......\n......\n......\n......\n......\n..##..\n...#..\n..##..\n...#..\n''') == 'cannot fold'\n\nassert solution('''\n....\n....\n....\n....\n....\n...#\n....\n....\n....\n''') == 'cannot fold'\n\nassert solution('''\n"
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('......\\n......\\n######\\n......\\n......\\n......\\n') == 'cannot fold'\n\nassert solution('......\\n#.....\\n####..\\n#.....\\n......\\n......\\n......\\n') == 'can fold'\n\nassert solution('..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\\n......\\n') == 'cannot fold'"
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"......\\n......\\n######\\n......\\n......\\n......\\n......\\n......\\n\") == \"can fold\"\nassert solution(\"......\\n......\\n#######\\n......\\n......\\n......\\n......\\n......\\n\") == \"cannot fold\"\nassert solution(\"..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\\n......\\n......\\n......\\n\") == \"cannot fold\""
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"......\\n......\\n######\\n......\\n......\\n......\\n\") == \"cannot fold\"\nassert solution(\"......\\n#.....\\n####..\\n#.....\\n......\\n......\\n\") == \"can fold\"\nassert solution(\"..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\\n\") == \"cannot fold\""
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"......\\n......\\n######\\n......\\n......\\n......\") == \"can fold\"\n\nassert solution(\"......\\n#.....\\n####..\\n#.....\\n......\\n......\") == \"cannot fold\"\n\nassert solution(\"..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\") == \"cannot fold\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('abcefgabc') == 'abc'\nassert solution('abcbabcba') == 'abcba'\nassert solution('aaaa') == 'aaa'"
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: '{expected_output}', but got: '{solution(input())}'\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abcefgabc\") == \"abc\", \"Test case 1 failed\"\nassert solution(\"abcbabcba\") == \"abcba\", \"Test case 2 failed\"\nassert solution(\"aaaa\") == \"aaa\", \"Test case 3 failed\"\n"
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\""
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('sample_input.txt', 'r')) == solution(open('sample_input.txt', 'r'))"
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"Output here\", \"Solution should return 'Output here', but returned '{}' instead.\".format(solution())"
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1 4\\n2 5\") == \"4\\n\"\nassert solution(\"2\\n1 4\\n2 10005\") == \"6\\n\"\nassert solution(\"3\\n1 4\\n2 10\\n0 15\") == \"4\\n\""
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"4\""
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"\"\"\n6\n1 4\n2 10\n0 15\n\"\"\""
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_data) == output_data, f\"Test failed for input {input_data} and output {output_data}\"\n"
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n2 4\\n2 5\\n\") == \"4\\n\"\nassert solution(\"1\\n2 4\\n2 10005\\n\") == \"6\\n\"\nassert solution(\"1\\n2 4\\n0 15\\n\") == \"4\\n\"\nassert solution(\"1\\n3 4\\n2 10\\n\") == \"4\\n\""
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\nassert solution(sample_input_3) == sample_output_3"
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1 4\\n2 5\\n\") == \"4\\n\"\nassert solution(\"2\\n1 4\\n2 10005\\n\") == \"6\\n\"\nassert solution(\"3\\n1 4\\n2 10\\n0 15\\n\") == \"4\\n\""
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_output, f\"Test case {i+1} failed.\"\n"
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7\\n2 3 4 4 8 12 24\") == 2\nassert solution(\"3\\n7 7 7\") == 3\nassert solution(\"5\\n1 2 3 2 1\") == 0"
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\nassert solution(sample_input_3) == sample_output_3"
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(str(input())) == str(output()), \"Test Case Failed\""
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7\\n2 3 4 4 8 12 24\") == 2\nassert solution(\"3\\n7 7 7\") == 3\nassert solution(\"5\\n1 2 3 2 1\") == 0"
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input1) == \"2\"\nassert solution(sample_input2) == \"3\"\nassert solution(sample_input3) == \"0\""
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"The output {output} is incorrect for the sample test case with input {stdin}\""
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected, f\"Test failed: {solution(stdin)}!= {expected}\""
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\\n2 3 4 4 8 12 24\") == 2\nassert solution(\"3\\n7 7 7\") == 3\nassert solution(\"5\\n1 2 3 2 1\") == 0"
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7\\n2 3 4 4 8 12 24\") == \"2\"\nassert solution(\"3\\n7 7 7\") == \"3\"\nassert solution(\"5\\n1 2 3 2 1\") == \"0\"\n\nfrom typing import List"
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"3\"\nassert solution(stdin) == \"0\""
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 5 4\\nS#.F.\\n.MFMG\\nSample Output 1:\\n3\\n\\nSample Input 2:\\n1 2 1\\nGS\\nSample Output 2:\\n1\\n\\nSample Input 3:\\n2 2 10\\nS#\\n#G\\nSample Output 3:\\n-1') == '3'\nassert solution('1 2 1\\nGS\\nSample Output 2:\\n1\\n\\nSample Input 3:\\n2 2 10\\nS#\\n#G\\nSample Output 3:\\n-1') == '1'\n"
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input1) == output1, \"Incorrect output for input1\"\nassert solution(input2) == output2, \"Incorrect output for input2\"\nassert solution(input3) == output3, \"Incorrect output for input3\""
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"3\"\n"
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 5 4\\nS#.F.\\n.MFMG\") == \"3\"\nassert solution(\"1 2 1\\nGS\") == \"1\"\nassert solution(\"2 2 10\\nS#\") == \"-1\""
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 5 4\\nS#.F.\\n.MFMG\") == \"3\\n\"\nassert solution(\"1 2 1\\nGS\") == \"1\\n\"\nassert solution(\"2 2 10\\nS#\") == \"-1\\n\""
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 5 4\\nS#.F.\\n.MFMG\") == \"3\"\nassert solution(\"1 2 1\\nGS\") == \"1\"\nassert solution(\"2 2 10\\nS#\") == \"-1\""
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input1) == \"3\"\nassert solution(sample_input2) == \"1\"\nassert solution(sample_input3) == \"-1\""
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 5 4\\nS#.F.\\n.MFMG') == '3\\n'\nassert solution('1 2 1\\nGS') == '1\\n'\nassert solution('2 2 10\\nS#') == '-1\\n'"
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"test_input.txt\", \"r\")) == \"3\"\nassert solution(open(\"test_input.txt\", \"r\")) == \"1\"\nassert solution(open(\"test_input.txt\", \"r\")) == \"-1\""
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 5 4\\nS#.F.\\n.MFMG\\n\") == \"3\"\nassert solution(\"1 2 1\\nGS\\n\") == \"1\"\nassert solution(\"2 2 10\\nS#\\n#G\\n\") == \"-1\""
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\nS..\\n.#.\\n..G\\nDRRDD\") == \"1\\n\"\nassert solution(\"3 7\\n.......\\n.G.#.S.\\n.......\\nLDLDLLDR\") == \"1\\n\"\nassert solution(\"3 7\\n.#.....\\n.G.##S.\\n.......\\nLDLDLLDR\") == \"2\\n\""
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\nS..\\n.#.\\n..G\\nDRRDD\\n\") == \"1\\n\"\nassert solution(\"3 7\\n.......\\n.G.#.S.\\n.......\\nLDLDLLDR\\n\") == \"1\\n\"\nassert solution(\"3 7\\n.#.....\\n.G.##S.\\n.......\\nLDLDLLDR\\n\") == \"2\\n\""
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\nS..\\n.#.\\n..G\\nDRRDD\") == \"1\\n\"\nassert solution(\"3 7\\n.......\\n.G.#.S.\\n.......\\nLDLDLLDR\") == \"1\\n\"\nassert solution(\"3 7\\n.#.....\\n.G.##S.\\n.......\\nLDLDLLDR\") == \"2\\n\""
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\nS..\\n.#.\\n..G\\nDRRDD\") == \"1\"\nassert solution(\"3 7\\n.......\\n.G.#.S.\\n.......\\nLDLDLLDR\") == \"1\"\nassert solution(\"3 7\\n.#.....\\n.G.##S.\\n.......\\nLDLDLLDR\") == \"2\""
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''3 3\nS..\n.#.\n..G\nDRRDD''') == '1\\n'\n\nassert solution('''3 7\n.......\n.G.#.S.\n.......\nLDLDLLDR''') == '1\\n'\n\nassert solution('''3 7\n.#.....\n.G.##S.\n.......\nLDLDLLDR''') == '2\\n'"
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\nS..\\n.#.\\n..G\\nDRRDD\") == \"1\\n\"\nassert solution(\"3 7\\n.......\\n.G.#.S.\\n.......\\nLDLDLLDR\") == \"1\\n\"\nassert solution(\"3 7\\n.#.....\\n.G.##S.\\n.......\\nLDLDLLDR\") == \"2\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\nS..\\n.#. \\n..G\\nDRRDD\\n\") == \"1\\n\"\nassert solution(\"3 7\\n.......\\n.G.#.S.\\n.......\\nLDLDLLDR\\n\") == \"1\\n\"\nassert solution(\"3 7\\n.#.....\\n.G.##S.\\n.......\\nLDLDLLDR\\n\") == \"2\\n\""
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\nS..\\n.#.\\n..G\\nDRRDD\\n\\n3 7\\n.......\\n.G.#.S.\\n.......\\nLDLDLLDR\\n\") == \"1\"\nassert solution(\"3 7\\n.......\\n.G.#.S.\\n.......\\nLDLDLLDR\\n\") == \"1\"\nassert solution(\"3 7\\n.#.....\\n.G.##S.\\n.......\\nLDLDLLDR\\n\") == \"2\""
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\nS..\\n.#.\\n..G\\nDRRDD\\n\") == \"1\\n\"\nassert solution(\"3 7\\n.......\\n.G.#.S.\\n.......\\nLDLDLLDR\\n\") == \"1\\n\"\nassert solution(\"3 7\\n.#.....\\n.G.##S.\\n.......\\nLDLDLLDR\\n\") == \"2\\n\""
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\nS..\\n.#.\\n..G\\nDRRDD\") == \"1\\n\"\nassert solution(\"3 7\\n.......\\n.G.#.S.\\n.......\\nLDLDLLDR\") == \"1\\n\"\nassert solution(\"3 7\\n.#.....\\n.G.##S.\\n.......\\nLDLDLLDR\") == \"2\\n\""
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n999999 0 1000\\n999900 950 451\\n987654 123 13222\\n\") == \"1000200 799\\n\"\nassert solution(\"2\\n100 0 101\\n0 200 199\\n\") == \"uncertain\\n\"\nassert solution(\"2\\n100 0 100\\n0 200 199\\n\") == \"impossible\\n\""
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('mps_receiver.txt', 'r').read()) == \"1000200 799\"\nassert solution(open('mps_receiver2.txt', 'r').read()) == \"uncertain\"\nassert solution(open('mps_receiver3.txt', 'r').read()) == \"impossible\""
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"999999 0 1000\\n999900 950 451\\n987654 123 13222\") == \"1000200 799\"\nassert solution(\"2\\n100 0 101\\n0 200 199\") == \"uncertain\"\nassert solution(\"2\\n100 0 100\\n0 200 199\") == \"impossible\""
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1000200 799\\n\", \"Incorrect output 1\"\n\nassert solution() == \"uncertain\\n\", \"Incorrect output 2\"\n\nassert solution() == \"impossible\\n\", \"Incorrect output 3\""
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin='3\\n999999 0 1000\\n999900 950 451\\n987654 123 13222\\n') == '1000200 799\\n'\nassert solution(stdin='2\\n100 0 101\\n0 200 199\\n') == 'uncertain\\n'\nassert solution(stdin='2\\n100 0 100\\n0 200 199\\n') == 'impossible\\n'"
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 1234567890"
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"1000200 799\", \"The expected output is '1000200 799', but the actual output is '{}'.\".format(solution())"
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1000200 799\\n\"\nassert solution(stdin) == \"uncertain\\n\"\nassert solution(stdin) == \"impossible\\n\""
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('Sample Input 1') == '1000200 799'\nassert solution('Sample Input 2') == 'uncertain'\nassert solution('Sample Input 3') == 'impossible'"
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"999999 0 1000\\n999900 950 451\\n987654 123 13222\\n\") == \"1000200 799\"\nassert solution(\"2\\n100 0 101\\n0 200 199\\n\") == \"uncertain\"\nassert solution(\"2\\n100 0 100\\n0 200 199\\n\") == \"impossible\""
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2\\n4 7\\n9 8\\n14 17\\n19 18\\n') == '2\\n1\\n'\nassert solution('2\\n4 7\\n14 17\\n9 8\\n19 18\\n') == '1\\n2\\n'\nassert solution('2\\n4 8\\n9 7\\n14 18\\n19 17\\n') =='syntax error\\n'\n\nfrom typing import List"
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_1) == ['1', '2']\nassert solution(input_2) == ['2', '1']\nassert solution(input_3) == ['syntax error']"
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Sample Input 1\") == \"2\\n1\\n\"\nassert solution(\"Sample Input 2\") == \"1\\n2\\n\"\nassert solution(\"Sample Input 3\") == \"syntax error\\n\""
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n4 7\\n9 8\\n14 17\\n19 18\") == \"2\\n1\\n\"\nassert solution(\"2\\n4 7\\n14 17\\n9 8\\n19 18\") == \"1\\n2\\n\"\nassert solution(\"2\\n4 8\\n9 7\\n14 18\\n19 17\") == \"syntax error\"\n"
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n4 7\\n9 8\\n14 17\\n19 18\\n') == '2\\n1\\n'\nassert solution('2\\n4 7\\n14 17\\n9 8\\n19 18\\n') == '1\\n2\\n'\nassert solution('2\\n4 8\\n9 7\\n14 18\\n19 17\\n') =='syntax error'"
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Expected output: {output}\\nGot: {solution(input())}\"\n\ninput_1 = '''\n2\n4 7\n9 8\n14 17\n19 18\n'''\noutput_1 = '''\n2\n1\n'''\n\ninput_2 = '''\n2\n4 7\n14 17\n9 8\n19 18\n'''\noutput_2 = '''\n1\n2\n'''\n\ninput_3 = '''\n2\n4 8\n9 7\n14 18\n19 17\n'''\noutput_3 = '''\nsyntax error\n"
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"\"\"\n1\n1\n\"\"\"\n\nassert solution(stdin) == \"\"\"\n1\n1\n\"\"\"\n\nassert solution(stdin) == \"\"\"\n1\n1\n\"\"\"\n\nassert solution(stdin) == \"\"\"\n1\n1\n\"\"\"\n\nassert solution(stdin) == \"\"\"\n1\n1\n\"\"\""
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '1\\n2\\n' # output: 1\nassert solution(input()) == '2\\n1\\n' # output: 2"
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 7\\n9 8\\n14 17\\n19 18\") == \"2\\n1\"\nassert solution(\"2\\n4 7\\n14 17\\n9 8\\n19 18\") == \"1\\n2\"\nassert solution(\"2\\n4 8\\n9 7\\n14 18\\n19 17\") == \"syntax error\""
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"_ 90 22 _ 6 _ _ _ _ 81\n_ 40 _ _ _ 12 60 _ 90 _\"\"\") == \"1\"\n\nassert solution(\"\"\"85 55 _ 99 51 _ _ _ _ _\n_ _ _ _ _ _ _ 85 63 153\"\"\") == \"1\"\n\nassert solution(\"\"\"160 _ _ 136 _ _ _ _ _ 170\n_ _ _ _ 120 _ _ 144 _ _\"\"\") == \"8640\""
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed: {solution(input())}!= {expected_output}\"\nfor i in range(2):\n    with open(f\"input{i + 1}.txt\", \"r\") as f:\n        input_data = f.read().strip().split()\n        expected_output = int(input_data[0])\n        puzzle_data = [list(map(int, entry.split())) for entry in input_data[1:]]\n        solution = solution(puzzle_data)\n        assert solution == expected_output, f\"Test case failed for input {i + 1}:\\nExpected: {expected_output}\\nGot: {solution}\"\n"
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n_ 90 22 _ 6 _ _ _ _ 81\n_ 40 _ _ _ 12 60 _ 90 _\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n85 55 _ 99 51 _ _ _ _ _\n_ _ _ _ _ _ _ 85 63 153\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n160 _ _ 136 _ _ _ _ _ 170\n_ _ _ _ 120 _ _ 144 _ _\n\"\"\") == \"8640\""
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"90 22 _ 6 _ _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _\") == \"1\"\nassert solution(\"85 55 _ 99 51 _ _ _ _ _\\n_ _ _ _ _ _ _ 85 63 153\") == \"1\"\nassert solution(\"160 _ _ 136 _ _ _ _ _ 170\\n_ _ _ _ 120 _ _ 144 _ _\") == \"8640\""
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"85 55 _ 99 51 _ _ _ _ _\") == \"1\"\nassert solution(\"160 _ _ 136 _ _ _ _ _ 170\") == \"8640\"\nassert solution(\"90 22 _ 6 _ _ _ _ 81\") == \"1\"\nassert solution(\"_ 90 22 _ 6 _ _ _ _ 81\") == \"many\""
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n90 22 _ 6 _ _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _\") == \"1\\n\"\nassert solution(\"85 55 _ 99 51 _ _ _ _ _\\n_ _ _ _ _ _ _ 85 63 153\") == \"1\\n\"\nassert solution(\"160 _ _ 136 _ _ _ _ _ 170\\n_ _ _ _ 120 _ _ 144 _ _\") == \"8640\\n\""
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n_ 90 22 _ 6 _ _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _\") == \"1\"\nassert solution(\"85 55 _ 99 51 _ _ _ _ _\\n_ _ _ _ _ _ _ 85 63 153\") == \"1\"\nassert solution(\"160 _ _ 136 _ _ _ _ _ 170\\n_ _ _ _ 120 _ _ 144 _ _\") == \"8640\""
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n_ 1 2 3 4 5\\n_ _ _ 6 _ _ 7 8 9\\n_ 10 11 12 13 14 _\") == \"1\\n\"\nassert solution(\"10\\n_ _ _ _ _ 15 _ _ _ 20\\n_ _ _ 16 17 18 19 20 _\") == \"1\\n\"\nassert solution(\"10\\n_ _ 11 12 13 14 _ 20\\n_ _ _ _ 15 _ 16 _ 17\\n_ _ _ _ 18 19 20 _ _\") == \"1\\n\"\nassert solution(\"2\\n10 10\\n_ _ _ _ _ _ _ 10 10\\n_ _ _ _ _ _ _ _\") == \"many\\n\"\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\") == \"many\\n\""
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_1) == \"1\", \"Incorrect output 1\"\nassert solution(input_2) == \"1\", \"Incorrect output 2\"\nassert solution(input_3) == \"8640\", \"Incorrect output 3\""
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"many\""
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input1) == output1, f\"Expected: {output1}\\nGot: {solution(input1)}\"\nassert solution(input2) == output2, f\"Expected: {output2}\\nGot: {solution(input2)}\"\nassert solution(input3) == output3, f\"Expected: {output3}\\nGot: {solution(input3)}\""
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"2\\n\""
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\n2 1\\n1 5\\n3 1\\n4 3\\n1 2\\n2 3\\n2 4\\n1 5\\n3 6\\n2 7\\n7 8\\n5 9\\n5 10') == 24, \"The output is incorrect.\""
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"kanto_region.in\", \"r\")) == \"24\""
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n2 1\\n1 5\\n3 1\\n4 3\\n5 9\\n\") == \"2\\n\"\nassert solution(\"10\\n1 2\\n2 3\\n2 4\\n1 5\\n3 6\\n2 7\\n7 8\\n5 9\\n5 10\\n\") == \"24\\n\"\n"
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2\", \"The number of optimal paths of length 2 is incorrect.\""
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"2\", \"Test case 1 failed.\"\nassert solution(\"5\") == \"8\", \"Test case 2 failed.\"\nassert solution(\"10\") == \"24\", \"Test case 3 failed.\""
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '2\\n', 'Test case 1 failed'\n\nassert solution() == '8\\n', 'Test case 2 failed'\n\nassert solution() == '24\\n', 'Test case 3 failed'"
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n1 2\\n1 3\\n') == '2\\n'\nassert solution('5\\n2 1\\n1 5\\n3 1\\n4 3\\n') == '8\\n'\nassert solution('10\\n1 2\\n2 3\\n2 4\\n1 5\\n3 6\\n2 7\\n7 8\\n5 9\\n5 10\\n') == '24\\n'"
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 2\\n1 3\\n\") == \"2\\n\"\nassert solution(\"5\\n2 1\\n1 5\\n3 1\\n4 3\\n\") == \"8\\n\"\nassert solution(\"10\\n1 2\\n2 3\\n2 4\\n1 5\\n3 6\\n2 7\\n7 8\\n5 9\\n5 10\\n\") == \"24\\n\""
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"secretmessage\") == \"essa\"\nassert solution(\"treetreetreetree\") == \"3\"\nassert solution(\"oranges\") == \"0\""
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"secretmessage\") == \"essa\"\nassert solution(\"treetreetreetree\") == \"3\"\nassert solution(\"oranges\") == \"0\"\n\nfrom typing import List"
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"secretmessage\") == \"essa\"\nassert solution(\"treetreetreetree\") == \"3\"\nassert solution(\"oranges\") == \"0\""
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r').read()) == ['essa', '3']\n"
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"secretmessage\\nboot\") == \"essa\"\nassert solution(\"treetreetreetree\\nwood\") == \"3\"\nassert solution(\"oranges\\napples\") == \"0\""
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"secretmessage\") == \"essa\", \"Sample Input 1:'secretmessage' should decrypt to 'essa'.\"\nassert solution(\"treetreetreetree\") == \"wood\", \"Sample Input 2: 'treetreetreetree' should decrypt to 'wood'.\"\nassert solution(\"orangesapples\") == \"0\", \"Sample Input 3: 'orangesapples' should decrypt to '0'.\""
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"secretmessage\") == \"essa\", \"Incorrect output for example 1\"\nassert solution(\"treetreetreetreetree\") == \"3\", \"Incorrect output for example 2\"\nassert solution(\"oranges\") == \"0\", \"Incorrect output for example 3\""
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"secretmessage\") == \"essa\"\nassert solution(\"treetreetreetree\") == \"3\"\nassert solution(\"oranges\") == \"0\""
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"secretmessage\") == \"essa\"\nassert solution(\"treetreetreetree\") == \"3\"\nassert solution(\"oranges\") == \"0\""
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"secretmessage\") == \"essa\", \"Error: Incorrect output for secretmessage\"\nassert solution(\"treetreetreetreetree\") == \"3\", \"Error: Incorrect output for treetreetreetreetree\"\nassert solution(\"oranges\") == \"0\", \"Error: Incorrect output for oranges\""
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=input()) == output, f\"Expected {output}, but got {solution(stdin=input())}\""
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, \"The solution is incorrect.\""
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n>^<^\\n######\\n#.#..#\\n#....#\\n#..R.#\\n#....#\\n######\") == 2\nassert solution(\"4\\nv<^>\\n####\\n#.R#\\n#..#\\n####\") == 4\nassert solution(\"4\\n<<<\\n####\\n#.R#\\n#..#\\n####\") == 1"
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '2'"
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('6\\n>^<^\\n######\\n#.#..#\\n#....#\\n#..R.#\\n#....#\\n######') == 2\nassert solution('4\\nv<^>\\n####\\n#.R#\\n#..#\\n####') == 4\nassert solution('4\\n<<<\\n####\\n#.R#\\n#..#\\n####') == 1"
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input1) == '2', \"Incorrect output for the first example\"\nassert solution(sample_input2) == '4', \"Incorrect output for the second example\"\nassert solution(sample_input3) == '1', \"Incorrect output for the third example\""
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n>^<^\\n######\\n#.#..#\\n#....#\\n#..R.#\\n#....#\\n######\") == \"2\"\nassert solution(\"4\\nv<^>\\n####\\n#.R#\\n#..#\\n####\") == \"4\"\nassert solution(\"4\\n<<<\\n####\\n#.R#\\n#..#\\n####\") == \"1\""
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '1'\n"
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '1'\nassert solution() == '4'"
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin='6\\n>^<^\\n######\\n#.#..#\\n#....#\\n#..R.#\\n#....#\\n######') == '2'\nassert solution(stdin='4\\nv<^>\\n####\\n#.R#\\n#..#\\n####') == '4'\nassert solution(stdin='4\\n<<<\\n####\\n#.R#\\n#..#\\n####') == '1'"
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin: str) == \"Output a single integer, the total number of fogs that are missed.\""
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution, \"Solution not implemented.\""
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '3'"
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '3', 'Your solution is not correct.'"
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"Output: 3\""
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 3"
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 3"
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n2 3 0 2 9 2 3 0\\n1 6 1 4 6 3 -1 -2\\n\") == \"3\\n\"\nassert solution(\"3\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\\n\") == \"6\\n\"\nassert solution(\"2\\n7 0 0 20 10 3 0 10\\n10 1 0 2 5 2 2 7\\n\") == \"11\\n\""
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"3\\n\", \"The output should be 3\"\nassert solution(\"2\\n2 3 0 2 9 2 3 0\\n1 6 1 4 6 3 -1 -2\") == \"3\\n\", \"The output should be 3\"\nassert solution(\"3\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\") == \"6\\n\", \"The output should be 6\"\nassert solution(\"2\\n7 0 0 20 10 3 0 10\\n10 1 0 2 5 2 2 7\") == \"11\\n\", \"The output should be 11\""
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n2 3 0 2 9 2 3 0\\n1 6 1 4 6 3 -1 -2\\n\") == \"3\"\nassert solution(\"3\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\\n\") == \"6\"\nassert solution(\"2\\n7 0 0 20 10 3 0 10\\n10 1 0 2 5 2 2 7\\n\") == \"11\""
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"60.0 0.0 50.0 170.0\") == \"168.7916512460\"\nassert solution(\"60.0 0.0 50.0 170.0\") == \"163.5274740179\"\nassert solution(\"0.0 1.0 4.0 1.0\") == \"3.7320508076\""
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\") == \"168.7916512460\", \"Test 1\"\nassert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\") == \"163.5274740179\", \"Test 2\"\nassert solution(\"0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\") == \"3.7320508076\", \"Test 3\""
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"168.7916512460\", \"The given inputs are incorrect.\"\n\nimport math"
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\\n60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0') == '168.7916512460\\n'\nassert solution('0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\\n0.0 0.0 4.0 0.0\\n0.0 0.0 4.0 0.0\\n0.0 0.0 4.0 0.0\\n0.0 0.0 4.0 0.0\\n0.0 0.0 4.0 0.0\\n0.0 0.0 4.0 0.0\\n0.0 0.0 4.0 0.0\\n0.0 0.0 4.0 0.0\\n0.0 0.0 4.0 0.0\\n0.0 0.0 4.0 0.0\\n0.0 0.0 4.0 0.0\\n0.0 0.0 4.0 0.0\\n0.0 0.0 4.0 0.0\\n0.0 0.0 4.0 0.0\\n0.0 0.0 4.0 0.0\\n0.0 0.0 4.0 0.0\\n0.0 0.0 4.0 0.0\\n0.0 0.0 4.0 0.0\\n0.0 0.0 4.0 0.0\\n0.0 0.0 4.0 0.0\\n0.0 0.0 4.0 0.0\\n0.0 0.0 4.0 0.0\\n0.0 0.0 4.0 0.0\\n0.0 0.0 4.0 0.0\\n0.0 0.0 4.0 0.0\\n0.0 0.0 4.0 0.0\\n0.0 0.0 4.0 0.0\\n0.0 0.0 4.0 0.0\\n0.0 0.0 4.0 0.0\\n0.0 0.0 4.0 0.0\\n0.0 0.0 4.0 0.0\\n0.0 0.0 4.0 0.0\\n0.0 0.0 4.0 0.0\\n0.0 0.0 4.0 0.0\\n0.0 0.0 4.0 0.0\\n0.0 0.0 4.0 0.0\\n0.0 0.0 4.0 0.0\\n0.0 0.0 4.0 0.0\\n0.0 0.0 4.0 0.0\\n0.0 0.0 4.0 0.0\\n0.0 0.0 4.0 0.0\\n0.0 0.0 4.0 0.0\\n0.0 0.0 4.0 0.0\\n0.0 0.0 4.0 0.0\\n0.0 0.0 4.0 0.0\\n0.0 0.0 4.0 0.0\\n0.0 0.0 4.0 0.0\\n"
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0') == '168.7916512460'\nassert solution('60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0') == '163.5274740179'\nassert solution('0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0') == '3.7320508076'"
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"168.7916512460\"\n"
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\") == \"168.7916512460\"\nassert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\") == \"163.5274740179\"\nassert solution(\"0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\") == \"3.7320508076\""
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Test case {i+1} failed: {solution(input())}!= {output}\"\nfor i, (input, output) in enumerate(zip(inputs, outputs)):\n    print(f\"Test case {i+1}:\")\n    assert solution(input) == output, f\"Test case {i+1} failed: {solution(input)}!= {output}\"\n"
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"168.7916512460\"\nassert solution(stdin) == \"163.5274740179\"\nassert solution(stdin) == \"3.7320508076\""
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected, f\"Sample Input {i+1}, expected {expected}, got {solution(stdin)}\"\nfor i, (stdin, expected) in enumerate(zip(sample_inputs, sample_outputs)):\n    assert solution(stdin) == expected, f\"Sample Input {i+1}, expected {expected}, got {solution(stdin)}\""
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) =='madam'\nassert solution(10) == 'canterlot'"
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"rarity\"\nassert solution() == \"canterlot\"\nassert solution() == \"madam\""
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"rarity\"\n\nassert solution(stdin) == \"canterlot\"\n\nassert solution(stdin) == \"madam\""
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"rarity\"\n\nassert solution(stdin) == \"canterlot\"\n\nassert solution(stdin) == \"madam\"\n\nfrom typing import List"
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) =='madam'\nassert solution(4) == 'canterlot'\nassert solution(5) == 'rarity'"
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(2) == 'rarity'\nassert solution(4) =='madam'"
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(6, 5, 3) == \"rarity\"\nassert solution(9, 8, 1) == \"canterlot\"\nassert solution(5, 3, 5) == \"madam\""
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 5 3\") == \"rarity\"\nassert solution(\"9 8 1\") == \"canterlot\"\nassert solution(\"5 3 5\") == \"madam\""
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) =='madam'\nassert solution(1) == 'rarity'\nassert solution(6) == 'canterlot'"
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 'rarity'\nassert solution(7) == 'canterlot'"
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\"\nassert solution(\"International contest- motivation high Programmers have fun!.\") == \"International contest- motivation high Programmers have fun!."
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road.\\nLeaves, glowing in autumn sun, fall in Virginia.\"\n\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\\n\"\n\nassert solution(\"International contest- motivation high Programmers have fun!\") == \"International\\ncontest- motivation high\\nProgrammers have fun!\\n\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\"\nassert solution(\"International contest- motivation high Programmers have fun!\") == \"International contest- motivation high Programmers have fun!\"\nassert solution(\"The quick brown fox jumps over the lazy dog. The dog barks loudly and the fox runs slowly.\") == \"The quick brown fox jumps over the lazy dog. The dog barks loudly and the fox runs slowly.\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"A haiku is a three-line poem in which the first and third lines contain 5 syllables each, and the second line contains 7 syllables. An example of a haiku is: Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"\"\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\"\"\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road\\nLeaves, glowing in autumn sun,\\nfall in Virginia.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\\n\"\nassert solution(\"International contest- motivation high Programmers have fun!\") == \"International\\ncontest- motivation high\\nProgrammers have fun!\\ndef solution(stdin: str) -> str:\\ndef solution(stdin: str) -> str:\\ndef solution(stdin: str) -> str:\\ndef solution(stdin: str) -> str:\\n\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\"\nassert solution(\"International contest- motivation high Programmers have fun!. def solution(stdin: str) -> str: pass\") == \"International contest- motivation high Programmers have fun!. def solution(stdin: str) -> str: pass\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road.\\nLeaves, glowing in autumn sun, fall in Virginia.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\\n\"\nassert solution(\"International contest- motivation high Programmers have fun!\") == \"International\\ncontest- motivation high\\nProgrammers have fun!\\n\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road.\" + \\\n    \" Leaves, glowing in autumn sun, \" + \\\n    \"fall in Virginia.\"\n\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\"\n\nassert solution(\"International contest- motivation high Programmers have fun!\") == \"International contest- motivation high\" + \\\n    \" Programmers have fun!. \" + \\\n    \"def solution(stdin: str) -> str: \" + \\\n    \"pass\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\"\nassert solution(\"International contest- motivation high Programmers have fun!\") == \"International contest- motivation high Programmers have fun!\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\"\nassert solution(\"International contest- motivation high Programmers have fun!.\") == \"International contest- motivation high Programmers have fun!.def solution(stdin: str) -> str:pass\""
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('ThoreTiemann\\nThoreHusfeldt\\n') == 'ThoreH'\nassert solution('ThoreHusfeldt\\nJohanSannemo\\n') == 'Thore is awesome'\nassert solution('ThoreHusfeldter\\nThoreHusfeldt\\n') == 'Thore sucks'"
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(str(2)) == \"ThoreH\"\nassert solution(str(3)) == \"Thore is awesome\""
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\nThoreTiemann\\nThoreHusfeldt\") == \"ThoreH\\n\"\nassert solution(\"2\\nThoreHusfeldt\\nJohanSannemo\") == \"Thore is awesome\\n\"\nassert solution(\"2\\nThoreHusfeldter\\nThoreHusfeldt\") == \"Thore sucks\\n\""
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"Thore is awesome\"\nassert solution(\"2\\nThoreTiemann\\nThoreHusfeldt\\n\") == \"ThoreH\"\nassert solution(\"2\\nThoreHusfeldt\\nJohanSannemo\\n\") == \"Thore is awesome\"\nassert solution(\"2\\nThoreHusfeldter\\nThoreHusfeldt\\n\") == \"Thore sucks\""
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\nThoreTiemann\\nThoreHusfeldt\") == \"ThoreH\"\nassert solution(\"2\\nThoreHusfeldt\\nJohanSannemo\") == \"Thore is awesome\"\nassert solution(\"2\\nThoreHusfeldter\\nThoreHusfeldt\") == \"Thore sucks\""
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin='2\\nThoreTiemann\\nThoreHusfeldt\\n') == 'ThoreH\\n'\nassert solution(stdin='2\\nThoreHusfeldt\\nJohanSannemo\\n') == 'Thore is awesome\\n'\nassert solution(stdin='2\\nThoreHusfeldter\\nThoreHusfeldt\\n') == 'Thore sucks\\n'"
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\nThoreTiemann\\nThoreHusfeldt\") == \"ThoreH\"\nassert solution(\"2\\nThoreHusfeldt\\nJohanSannemo\") == \"Thore is awesome\"\nassert solution(\"2\\nThoreHusfeldter\\nThoreHusfeldt\") == \"Thore sucks\""
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == 'ThoreH'\nassert solution(2) == 'Thore is awesome'\nassert solution(3) == 'Thore sucks'\n\nfrom typing import List"
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == expected\n"
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == 'ThoreH'"
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('P*P') == 6, \"Incorrect output\"\nassert solution('L*R') == 25, \"Incorrect output\"\nassert solution('**') == 33, \"Incorrect output\""
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"P*P\") == \"6\"\nassert solution(\"L*R\") == \"25\"\nassert solution(\"**\") == \"33\""
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"P*P\") == 6, \"Invalid output\"\nassert solution(\"L*R\") == 25, \"Invalid output\"\nassert solution(\"**\") == 33, \"Invalid output\""
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"P*P\") == 6\nassert solution(\"L*R\") == 25\nassert solution(\"**\") == 33"
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"P*P\") == 6, \"Test 1 failed\"\nassert solution(\"L*R\") == 25, \"Test 2 failed\"\nassert solution(\"**\") == 33, \"Test 3 failed\""
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('P*P') == 6, \"Incorrect output for solution 1\"\nassert solution('L*R') == 25, \"Incorrect output for solution 2\"\nassert solution('**') == 33, \"Incorrect output for solution 3\""
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"P*P\") == 6, \"Test 1 failed\"\nassert solution(\"L*R\") == 25, \"Test 2 failed\"\nassert solution(\"**\") == 33, \"Test 3 failed\""
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"P*P\") == \"6\", \"Test 1\"\nassert solution(\"L*R\") == \"25\", \"Test 2\"\nassert solution(\"**\") == \"33\", \"Test 3\""
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"P*P\") == \"6\", \"Test failed: Solution 1 failed\"\nassert solution(\"L*R\") == \"25\", \"Test failed: Solution 2 failed\"\nassert solution(\"**\") == \"33\", \"Test failed: Solution 3 failed\""
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Solution: {solution(input())}, Expected: {output()}\""
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"herp is derp\\nderp is herp\\nherp is herp\\nderp is derp\") == \"yes\", \"herp is derp\\nderp is herp\\nherp is herp\\nderp is derp\"\nassert solution(\"oskar not lukas\\nostrak is poptart\\nlukas is smart\") == \"wait what?\", \"oskar not lukas\\nostrak is poptart\\nlukas is smart\"\nassert solution(\"moo not foo\") == \"yes\", \"moo not foo\"\n\nfrom typing import List"
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"herp is derp\") == \"yes\"\nassert solution(\"oskar not lukas\") == \"wait what?\"\nassert solution(\"moo not foo\") == \"yes\""
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"wait what?\"\nassert solution(4) == \"yes\""
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == 'yes'\nassert solution(input()) == 'yes'\nassert solution(input()) == 'wait what?'\nassert solution(input()) == 'wait what?'\nassert solution(input()) == 'wait what?'"
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(4) == \"yes\"\nassert solution(3) == \"wait what?\"\nassert solution(1) == \"yes\""
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\nherp is derp\\nderp is herp\\nherp is herp\\nderp is derp\\n') == 'yes\\n'\nassert solution('3\\nosskar not lukas\\nosskar is poptart\\nlukas is smart\\n') == 'wait what?\\n'\nassert solution('1\\nmoo not foo\\n') == 'yes\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n\nfrom typing import List"
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"yes\\n\""
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"herp is derp\") == \"yes\"\nassert solution(\"oskar not lukas\") == \"wait what?\"\nassert solution(\"moo not foo\") == \"yes\""
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\nherp is derp\\nderp is herp\\nherp is herp\\nderp is derp') == 'yes'\nassert solution('3\\noskar not lukas\\noskar is poptart\\nlukas is smart') == 'wait what?'\nassert solution('1\\nmoo not foo') == 'yes'\n\nfrom typing import List"
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input1) == 'yes'\nassert solution(sample_input2) == 'wait what?'"
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == 'impossible'\n"
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected_output, f\"The expected output is: {expected_output}, but the actual output is: {solution(stdin)}\""
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Expected output: {expected_output}, but got: {solution(input())}\""
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\nAACCMMMA\\nACA\\nMM\\nACMAA\\nAA\\nA\\n\") == \"1 4\\nMM\\nA\\nAA\\nACA\\nACMAA\\n\"\nassert solution(\"3\\nACMA\\nACM\\nACA\\nAMA\\n\") == \"impossible\\n\"\nassert solution(\"1\\nAM\\nMA\\n\") == \"impossible\\n\""
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\nAACCMMMAA\\nACA\\nMM\\nACMAA\\nAA\\nA\\n\") == \"1 4\\nMM\\nA\\nAA\\nACA\\nACMAA\\n\"\nassert solution(\"3\\nACMA\\ACM\\nACA\\nAMA\\n\") == \"impossible\\n\"\nassert solution(\"1\\nAM\\nMA\\n\") == \"impossible\\n\""
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\nAACCMMAA\\nACA\\nMM\\nACMAA\\nAA\\nA\\nSample Output 1:\\n1 4\\nMM\\nA\\nAA\\nACA\\nACMAA\\n\") == \"1 4\\nMM\\nA\\nAA\\nACA\\nACMAA\\n\"\nassert solution(\"2\\nAACCMMAA\\nACA\\nMM\\nACMAA\\nAA\\nA\\nSample Output 2:\\nimpossible\\n\") == \"impossible\\n\"\nassert solution(\"3\\nACMA\\ACM\\ACA\\AMA\\nSample Output 3:\\nimpossible\\n\") == \"impossible\\n\""
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"impossible\\nimpossible\\nimpossible\\nimpossible\\nimpossible\\n\""
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"impossible\", \"your solution should output impossible\""
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\nAACC\\nACA\\nMM\\nACMAA\\nAA\\nA\\nSample Output 1: 1 4\\nMM\\nA\\nAA\\nACA\\nACMAA\\n\\nSample Input 2: 3\\nACMA\\ACM\\ACA\\nAMA\\nSample Output 2: impossible\\n\\nSample Input 3: 1\\nAM\\nMA\\nSample Output 3: impossible\\ndef solution(stdin: str) -> str: \\n    pass"
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"impossible\", \"Solution is incorrect\""
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"100 111 5\\n20 0.5 10\\n80 0.5 2\\n85 0.5 2\\n90 0.5 2\\n95 0.5 2\\n\") == \"124\"\nassert solution(\"2 4 1\\n1 0.5 5\\n\") == \"3\"\nassert solution(\"10 20 3\\n5 0.3 8\\n6 0.8 3\\n8 0.9 3\\n\") == \"18.9029850746\""
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"100 111 5\\n20 0.5 10\\n80 0.5 2\\n85 0.5 2\\n90 0.5 2\\n95 0.5 2\\n\") == \"124\""
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution( \"\"\"\n100 111 5\n20 0.5 10\n80 0.5 2\n85 0.5 2\n90 0.5 2\n95 0.5 2\n\"\"\") == \"124\"\n\nassert solution( \"\"\"\n2 4 1\n1 0.5 5\n\"\"\") == \"3\"\n\nassert solution( \"\"\"\n10 20 3\n5 0.3 8\n6 0.8 3\n8 0.9 3\n\"\"\") == \"18.9029850746\""
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"18.9029850746\", \"Incorrect solution\"\n"
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"100 111 5\\n20 0.5 10\\n80 0.5 2\\n85 0.5 2\\n90 0.5 2\\n95 0.5 2\\n\") == 124\nassert solution(\"2 4 1\\n1 0.5 5\\n\") == 3\nassert solution(\"10 20 3\\n5 0.3 8\\n6 0.8 3\\n8 0.9 3\\n\") == 18.9029850746\n"
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n100 111 5\n20 0.5 10\n80 0.5 2\n85 0.5 2\n90 0.5 2\n95 0.5 2\n''') == '124'\n\nassert solution('''\n2 4 1\n1 0.5 5\n''') == '3'\n\nassert solution('''\n10 20 3\n5 0.3 8\n6 0.8 3\n8 0.9 3\n''') == '18.9029850746'"
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"100 111 5\n20 0.5 10\n80 0.5 2\n85 0.5 2\n90 0.5 2\n95 0.5 2\"\"\"\n) == \"124\"\n\nassert solution(\n    \"\"\"2 4 1\n1 0.5 5\"\"\"\n) == \"3\"\n\nassert solution(\n    \"\"\"10 20 3\n5 0.3 8\n6 0.8 3\n8 0.9 3\"\"\"\n) == \"18.9029850746\""
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    100 111 5\n    20 0.5 10\n    80 0.5 2\n    85 0.5 2\n    90 0.5 2\n    95 0.5 2\n    \"\"\"\n) == \"124\"\n\nassert solution(\n    \"\"\"\n    2 4 1\n    1 0.5 5\n    \"\"\"\n) == \"3\"\n\nassert solution(\n    \"\"\"\n    10 20 3\n    5 0.3 8\n    6 0.8 3\n    8 0.9 3\n    \"\"\"\n) == \"18.9029850746\""
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n100 111 5\n20 0.5 10\n80 0.5 2\n85 0.5 2\n90 0.5 2\n95 0.5 2\n''') == '124'\n\nassert solution('''\n2 4 1\n1 0.5 5\n''') == '3'\n\nassert solution('''\n10 20 3\n5 0.3 8\n6 0.8 3\n8 0.9 3\n''') == '18.9029850746'"
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n2 1\\n\") == \"2 1 2\\n\"\nassert solution(\"2 1\\n\") == \"1\\n\"\nassert solution(\"5 22\\n\") == \"4 3 4 2\\n\""
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 3') == '2 1 2\\n'\nassert solution('2 1') == '1\\n'\nassert solution('5 22') == '4 3 4 2\\n'"
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\") == \"2 1 2\", \"Sample Input 1\"\nassert solution(\"2 1\") == \"1\", \"Sample Input 2\"\nassert solution(\"5 22\") == \"4 3 4 2\", \"Sample Input 3\"\n"
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n2 1\\n5 22\\n\") == \"2 1 2\\n4 3 4 2\\n\"\nassert solution(\"4 3\\n\") == \"4 3\\n\"\nassert solution(\"2 1\\n\") == \"1\\n\"\nassert solution(\"4 3\\n2 1\\n\") == \"2 1\\n\"\nassert solution(\"4 3\\n2 1\\n\") == \"2 1\\n\"\nassert solution(\"4 3\\n2 1\\n\") == \"2 1\\n\"\nassert solution(\"4 3\\n2 1\\n\") == \"2 1\\n\"\nassert solution(\"4 3\\n2 1\\n\") == \"2 1\\n\"\nassert solution(\"4 3\\n2 1\\n\") == \"2 1\\n\"\nassert solution(\"4 3\\n2 1\\n\") == \"2 1\\n\"\nassert solution(\"4 3\\n2 1\\n\") == \"2 1\\n\"\nassert solution(\"4 3\\n2 1\\n\") == \"2 1\\n\"\nassert solution(\"4 3\\n2 1\\n\") == \"2 1\\n\"\nassert solution(\"4 3\\n2 1\\n\") == \"2 1\\n\"\nassert solution(\"4 3\\n2 1\\n\") == \"2 1\\n\"\nassert solution(\"4 3\\n2 1\\n\") == \"2 1\\n\"\nassert solution(\"4 3\\n2 1\\n\") == \"2 1\\n\"\nassert solution(\"4 3\\n2 1\\n\") == \"2 1\\n\"\nassert solution(\"4 3\\n2 1\\n\") == \"2 1\\n\"\nassert solution(\"4 3\\n2 1\\n\") == \"2 1\\n\"\nassert solution(\"4 3\\n2 1\\n\") == \"2 1\\n\"\nassert solution(\"4 3\\n2 1\\n\") == \"2 1\\n\"\nassert solution(\"4 3\\n2 1\\n\") == \"2 1\\n\"\nassert solution(\"4 3\\n2 1\\n\") == \"2 1\\n\"\nassert solution(\"4 3\\n2 1\\n\") == \"2 1\\n\"\nassert solution(\"4 3\\n2 1\\n\") == \"2 1\\n\"\nassert solution(\"4 3\\n2 1\\n\") == \"2 1\\n\"\nassert solution(\"4 3\\n2 1\\n\") == \"2 1\\n\"\nassert solution(\"4 3\\n2 1\\n\") == \"2 1\\n\"\nassert solution(\"4 3\\n2 1\\n\") == \"2 1\\n\"\nassert solution(\"4 3\\n2 1\\n\") == \"2 1\\n\"\nassert solution(\"4 3\\n2 1\\n\") == \"2 1\\n\"\nassert solution(\"4 3\\n2 1\\n\") == \"2 1\\n\"\nassert solution(\"4 3\\n2 1\\n\") == \"2 1\\n\"\nassert solution(\"4 3\\n2 1\\n\") == \"2 1\\n\"\nassert solution(\"4 3\\n2 1\\n\") == \"2 1\\n\"\nassert solution(\"4 3\\n2 1\\n\") == \"2 1\\n\"\nassert solution(\"4 3\\n2 1\\n\") == \"2 1\\n\"\nassert solution(\"4 3\\n2 1\\n\") == \"2 1\\n\"\nassert solution(\"4 3\\n2 1\\n\") == \"2 1\\n\"\nassert solution(\"4 3\\n2 1\\n\") == \"2 1\\n\"\nassert solution(\"4 3\\n2 1\\n\") == \"2 1\\n\"\nassert solution(\"4 3\\n2 1\\n\") == \"2 1\\n\"\nassert solution(\"4 3\\n2 1\\n\") == \"2 1\\n\"\nassert solution(\"4 3\\n2"
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n2 1\\n\") == \"2 1 2\\n\"\nassert solution(\"2 1\\n\") == \"1\\n\"\nassert solution(\"5 22\\n\") == \"4 3 4 2\\n\""
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=str(3)) == '2 1 2'\nassert solution(stdin=str(4)) == '1'\nassert solution(stdin=str(22)) == '4 3 4 2'"
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 3') == '2 1 2', 'Sample Input 1'\nassert solution('2 1') == '1', 'Sample Input 2'\nassert solution('5 22') == '4 3 4 2', 'Sample Input 3'"
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n2 1\\n2 1\\n5 22\") == \"2 1 2\"\nassert solution(\"4 3\\n2 1\\n2 1\\n5 22\") == \"2 1 2\"\nassert solution(\"4 3\\n2 1\\n2 1\\n5 22\") == \"2 1 2\"\nassert solution(\"4 3\\n2 1\\n2 1\\n5 22\") == \"2 1 2\"\nassert solution(\"4 3\\n2 1\\n2 1\\n5 22\") == \"2 1 2\"\nassert solution(\"4 3\\n2 1\\n2 1\\n5 22\") == \"2 1 2\"\nassert solution(\"4 3\\n2 1\\n2 1\\n5 22\") == \"2 1 2\"\nassert solution(\"4 3\\n2 1\\n2 1\\n5 22\") == \"2 1 2\"\nassert solution(\"4 3\\n2 1\\n2 1\\n5 22\") == \"2 1 2\""
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\", \"Incorrect Output\"\n"
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\n1 2\\n1 3\\n3 4\\n2 4\\n\") == \"2\\n\"\nassert solution(\"7 6\\n1 2\\n2 3\\n2 5\\n6 3\\n7 2\\n3 4\\n\") == \"2\\n\"\nassert solution(\"7 5\\n1 2\\n2 3\\n3 4\\n5 6\\n6 7\\n\") == \"0\\n\""
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(r\"4 4\\n1 2\\n1 3\\n3 4\\n2 4\\n\") == \"2\\n\"\nassert solution(r\"7 6\\n1 2\\n2 3\\n2 5\\n6 3\\n7 2\\n3 4\\n\") == \"2\\n\"\nassert solution(r\"7 5\\n1 2\\n2 3\\n3 4\\n5 6\\n6 7\\n\") == \"0\\n\""
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(''), 'Expected an empty input.'\nassert solution('4 4\\n1 2\\n1 3\\n3 4\\n2 4'), 'Expected input with only one valid path.'\nassert solution('7 6\\n1 2\\n2 3\\n2 5\\n6 3\\n7 2\\n3 4'), 'Expected input with multiple valid paths.'\nassert solution('7 5\\n1 2\\n2 3\\n3 4\\n5 6\\n6 7'), 'Expected input with a blocked road.'"
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\n1 2\\n1 3\\n3 4\\n2 4\") == 2\nassert solution(\"7 6\\n1 2\\n2 3\\n2 5\\n6 3\\n7 2\\n3 4\") == 2\nassert solution(\"7 5\\n1 2\\n2 3\\n3 4\\n5 6\\n6 7\") == 0"
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n1 2\\n1 3\\n3 4\\n2 4\") == \"2\\n\"\nassert solution(\"7 6\\n1 2\\n2 3\\n2 5\\n6 3\\n7 2\\n3 4\") == \"2\\n\"\nassert solution(\"7 5\\n1 2\\n2 3\\n3 4\\n5 6\\n6 7\") == \"0\\n\""
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == output, f\"Expected {output}, but got {solution(stdin)}\""
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n1 2\\n1 3\\n3 4\\n2 4\\nSample Output 1: 2\\n\\nSample Input 2: 7 6\\n1 2\\n2 3\\n2 5\\n6 3\\n7 2\\n3 4\\n\\nSample Output 2: 2\\n\\nSample Input 3: 7 5\\n1 2\\n2 3\\n3 4\\n5 6\\n6 7\\nSample Output 3: 0\") == \"2\\n\"\nassert solution(\"7 6\\n1 2\\n2 3\\n2 5\\n6 3\\n7 2\\n3 4\\n\\nSample Output 2: 2\\n\\nSample Input 4: 5 8\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100\\n100 101\\n101 102\\n102 103\\n103 104\\n104 105\\n105 106\\n106 107\\n107 108\\n108 109\\n109 110\\n110 111\\n111 112\\n112 113\\n113 114\\n114 115\\n115 116\\"
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 2, \"Your solution is incorrect.\""
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 4\\n1 2\\n1 3\\n3 4\\n2 4\\n') == '2\\n'\nassert solution('7 6\\n1 2\\n2 3\\n2 5\\n6 3\\n7 2\\n3 4\\n') == '2\\n'\nassert solution('7 5\\n1 2\\n2 3\\n3 4\\n5 6\\n6 7\\n') == '0\\n'"
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"20 0\\n1.00 0.10\\n\") == 20.000000000000001\nassert solution(\" -10 10\\n10.00 1.00\\n\") == 3.141592653589793\nassert solution(\"0 20\\n1.00 0.10\\n\") == 28.264459104971302"
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"20 0\\n1.00 0.10\") == \"20.00000000\"\nassert solution(\"-10 10\\n10.00 1.00\") == \"3.14159265\"\nassert solution(\"0 20\\n1.00 0.10\") == \"28.26445910\"\n\nfrom typing import List"
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"20 0\\n1.00 0.10\") == \"20.00000000\", \"Sample Input 1\"\nassert solution(\"-10 10\\n10.00 1.00\") == \"3.14159265\", \"Sample Input 2\"\nassert solution(\"0 20\\n1.00 0.10\") == \"28.26445910\", \"Sample Input 3\""
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '3.14159265', \"Test case 1 failed\"\nassert solution(stdin) == '28.26445910', \"Test case 2 failed\"\nassert solution(stdin) == '20.00000000', \"Test case 3 failed\""
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"20 0\\n1.00 0.10\") == \"20.00000000\"\nassert solution(\"-10 10\\n10.00 1.00\") == \"3.14159265\"\nassert solution(\"0 20\\n1.00 0.10\") == \"28.26445910\""
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=input()) == output"
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Test case failed: {input()}\\nExpected output: {output}\\nActual output: {solution(input())}\""
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input1) == '20.00000000', \"Test case 1 failed.\"\nassert solution(sample_input2) == '3.14159265', \"Test case 2 failed.\"\nassert solution(sample_input3) == '28.26445910', \"Test case 3 failed.\""
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '3.14159265\\n', 'The solution is incorrect.'"
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, got: {solution(input())}\"\n\ninput_data = [\n    input(),\n    input(),\n]\n\nx = int(input_data[0])\ny = int(input_data[1])\nv = float(input_data[2])\nw = float(input_data[3])"
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"170\"\nassert solution() == \"150\""
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n2 100\\n1 100\\n4 70\\n3 70\\n\") == \"170\\n\"\nassert solution(\"3\\n2 120\\n3 50\\n2 80\\n\") == \"150\\n\""
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n2 100\\n1 100\\n4 70\\n3 70\\n') == '170'\nassert solution('3\\n2 120\\n3 50\\n2 80\\n') == '150'"
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n2 100\\n1 100\\n4 70\\n3 70\") == \"170\\n\"\n\nassert solution(\"3\\n2 120\\n3 50\\n2 80\") == \"150\\n\""
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 170\nassert solution() == 150\n"
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n2 100\\n1 100\\n4 70\\n3 70\\n\") == \"170\\n\"\nassert solution(\"3\\n2 120\\n3 50\\n2 80\\n\") == \"150\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"170\\n\"\n"
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n2 100\\n1 100\\n4 70\\n3 70') == '170\\n'"
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n4\n2 100\n1 100\n4 70\n3 70\n''') == '170'\nassert solution('''\n3\n2 120\n3 50\n2 80\n''') == '150'"
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(None) == 170\nassert solution(None) == 150\n"
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2\", \"Your solution is not correct!\""
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3\\n1 2\\n1 3\\n2 4\\n\") == \"2\\n\"\nassert solution(\"6 6\\n1 2\\n1 3\\n2 4\\n3 4\\n3 5\\n5 6\\n\") == \"5\\n\""
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2\\n\", \"Output incorrect\""
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n1 2\\n1 3\\n2 4\\n\") == \"2\\n\"\nassert solution(\"6 6\\n1 2\\n1 3\\n2 4\\n3 4\\n3 5\\n5 6\\n\") == \"5\\n\""
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\"\n"
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output() for input, output in zip(samples, outputs)\n\nsamples = [\n    (\"4 3\\n1 2\\n1 3\\n2 4\\n\", \"2\"),\n    (\"6 6\\n1 2\\n1 3\\n2 4\\n3 4\\n3 5\\n5 6\\n\", \"5\")\n]\n\noutputs = [\n    (\"2\",),\n    (\"5\",)\n]"
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\", \"Your solution is incorrect.\"\nprint(\"Your solution is correct!\")"
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input1) == \"0.5\"\nassert solution(sample_input2) == \"0.0446429\""
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == expected_output, f\"The solution is incorrect. Expected output: {expected_output}, but got: {solution}\"\n"
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin='3\\n1\\n0\\n2 1 2\\n1 0\\n1 0\\n') == '0.5\\n'\n\nassert solution(stdin='8\\n6\\n1 0 2 3 0 1\\n7 1 2 3 4 5 6 7\\n1 0\\n2 0 3\\n2 0 2\\n1 0\\n1 0\\n1 0\\n1 0\\n') == '0.0446429\\n'"
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1\\n0\\n2 1 2\\n1 0\\n1 0\\n\") == \"0.5\"\nassert solution(\"8\\n6\\n1 0 2 3 0 1\\n7 1 2 3 4 5 6 7\\n1 0\\n2 0 3\\n2 0 2\\n1 0\\n1 0\\n1 0\\n1 0\\n\") == \"0.0446429\""
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1\\n0\\n2 1 2\\n1 0\\n1 0\\n\") == \"0.5\\n\"\nassert solution(\"8\\n6\\n1 0 2 3 0 1\\n7 1 2 3 4 5 6 7\\n1 0\\n2 0 3\\n2 0 2\\n1 0\\n1 0\\n1 0\\n1 0\\n\") == \"0.0446429\\n\""
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == '0.0446429', \"Your solution is incorrect. The chance the captain will be able to complete his mission without being discovered by the Borg sentry is incorrect. Please make sure to use the correct number of inputs and the correct function signature.\""
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 0.5, \"Incorrect output\""
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output() for input, output in zip(stdin_data, stdout_data)\n\nstdin_data = [\n    '''\n3\n1\n0\n2 1 2\n1 0\n1 0\n''',\n    '''\n8\n6\n1 0 2 3 0 1\n7 1 2 3 4 5 6 7\n1 0\n2 0 3\n2 0 2\n1 0\n1 0\n1 0\n1 0\n1 0\n'''\n]\n\nstdout_data = [\n    '''\n0.5\n''',\n    '''\n0.0446429\n'''\n]"
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1\\n0\\n2 1 2\\n1 0\\n1 0\") == 0.5\nassert solution(\"8\\n6\\n1 0 2 3 0 1\\n7 1 2 3 4 5 6 7\\n1 0\\n2 0 3\\n2 0 2\\n1 0\\n1 0\\n1 0\\n1 0\") == 0.0446429"
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1\\n0\\n2 1 2\\n1 0\\n1 0\") == \"0.5\"\nassert solution(\"8\\n6\\n1 0 2 3 0 1\\n7 1 2 3 4 5 6 7\\n1 0\\n2 0 3\\n2 0 2\\n1 0\\n1 0\\n1 0\\n1 0\") == \"0.0446429\""
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Output {solution(input())} is not as expected.\""
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"tests/sample_input.txt\", \"r\")) == \"3\\n1 6 1\\n2 5 2\\n3 4 3\\n\"\n"
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin='Sample Input 1') == '3\\n1 6 1\\n2 5 2\\n3 4 3'\nassert solution(stdin='Sample Input 2') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n1 2 3 3 2 1\\n\") == \"3\\n1 6 1\\n2 5 2\\n3 4 3\\nIMPOSSIBLE\"\nassert solution(\"4\\n1 2 1 2\\n\") == \"IMPOSSIBLE\"\nassert solution(\"6\\n1 2 3 3 2 1\\n\") == \"3\\n1 6 1\\n2 5 2\\n3 4 3\\nIMPOSSIBLE\"\nassert solution(\"4\\n1 2 1 2\\n\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(6) == \"3\\n1 6 1\\n2 5 2\\n3 4 3\"\nassert solution(4) == \"IMPOSSIBLE\""
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"3\\n1 6 1\\n2 5 2\\n3 4 3\"\n"
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input1) == expected_output1\nassert solution(sample_input2) == expected_output2"
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6\\n1 2 3 3 2 1\\n') == '3\\n1 6 1\\n2 5 2\\n3 4 3\\nIMPOSSIBLE'\nassert solution('4\\n1 2 1 2\\n') == 'IMPOSSIBLE'"
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"\"\"\n3\n1 6 1\n2 5 2\n3 4 3\n\"\"\""
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '3\\n1 6 1\\n2 5 2\\n3 4 3\\nIMPOSSIBLE\\n'"
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Expected Output: {expected_output}, Received: {solution(input())}\""
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1 2 100\\n\", \"Test failed\"\nprint(\"Test passed\")"
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    '''\n    3\n    1 2\n    1 100\n    1 1\n    '''\n) == '''\n    1 2 100\n    1 1 100\n    '''\nassert solution(\n    '''\n    2\n    5 10 20 30 40 50\n    2 28 27\n    '''\n) == '''\n    10 20 28 27 30 40 50\n    '''"
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"1 2 100\", \"Expected output: 1 2 100\"\nassert solution(2) == \"10 20 28 27 30 40 50\", \"Expected output: 10 20 28 27 30 40 50\"\n\nfrom typing import List"
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n2\\n1\\n1\\n\") == \"1 2 100\", \"Test 1 failed.\"\nassert solution(\"2\\n5 10 20 30 40 50\\n2 28 27\\n\") == \"10 20 28 27 30 40 50\", \"Test 2 failed.\"\nassert solution(\"1\\n2\\n1\\n1\\n\") == \"1 2 100\", \"Test 3 failed.\"\nassert solution(\"2\\n5 10 20 30 40 50\\n2 28 27\\n\") == \"10 20 28 27 30 40 50\", \"Test 4 failed.\"\nassert solution(\"2\\n5 10 20 30 40 50\\n2 28 27\\n\") == \"10 20 28 27 30 40 50\", \"Test 5 failed.\""
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2\\n1 100\\n1 1\\n2\\n5 10 20 30 40 50\\n2 28 27\") == \"1 2 100\\n1 100 1\\n1 1 28\\n1 1 27\\n10 20 28 27 30 40 50\""
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2\\n1 100\\n1 1\\n\") == \"1 2 100\\n\"\nassert solution(\"2\\n5 10 20 30 40 50\\n2 28 27\\n\") == \"10 20 28 27 30 40 50\\n\""
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '1 2 100'\nassert solution() == '10 20 28 27 30 40 50'"
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1 2 100\\n10 20 28 27 30 40 50\\n\"\nassert solution(\"1\\n2\\n100\\n1\\n2\\n5\\n10\\n20\\n28\\n27\\n30\\n40\\n50\\n\") == \"1 2 100\\n10 20 28 27 30 40 50\\n\"\n"
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 2\\n1 100\\n1 1\\n\") == \"1 2 100\\n\"\nassert solution(\"2\\n5 10 20 30 40 50\\n2 28 27\\n\") == \"10 20 28 27 30 40 50\\n\""
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Sample Input 1\") == \"2600\", \"Incorrect output for Sample Input 1\"\nassert solution(\"Sample Input 2\") == \"506\", \"Incorrect output for Sample Input 2\""
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2600\""
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0\\nSample Output 1: 2600\\n\") == 2600\nassert solution(\"3\\nA 1 1\\nAC 2 1\\nBC 2 1\\n\") == 506\n"
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0\\nSample Output 1:\\n2600\\nSample Input 2:\\n3\\nAC 2 1\\nBC 2 1\\nSample Output 2:\\n506\") == 506\nassert solution(\"3\\nAC 2 1\\nBC 2 1\\nSample Output 2:\\n506\\nSample Input 2:\\n3\\nAB 1 1\\nAC 2 1\\nBC 2 1\\nSample Output 2:\\n506\") == 506\nassert solution(\"1\\nSample Output 1:\\n2600\\nSample Input 2:\\n3\\nAB 1 1\\nAC 2 1\\nBC 2 1\\nSample Output 2:\\n506\") == 506\nassert solution(\"2\\nSample Output 1:\\n2600\\nSample Input 2:\\n3\\nAC 2 1\\nBC 2 1\\nSample Output 2:\\n506\") == 506\nassert solution(\"3\\nAB 1 1\\nAC 2 1\\nBC 2 1\\nSample Output 2:\\n506\\nSample Input 2:\\n3\\nAC 2 1\\nBC 2 1\\nSample Output 2:\\n506\") == 506\nassert solution(\"2\\nSample Output 1:\\n2600\\nSample Input 2:\\n3\\nAC 2 1\\nBC 2 1\\nSample Output 2:\\n506\\nSample Input 2:\\n3\\nAB 1 1\\nAC 2 1\\nBC 2 1\\nSample Output 2:\\n506\") == 506\nassert solution(\"1\\nSample Output 1:\\n2600\\nSample Input 2:\\n3\\nAB 1 1\\nAC 2 1\\nBC 2 1\\nSample Output 2:\\n506\\nSample Input 2:\\n3\\nAC 2 1\\nBC 2 1\\nSample Output 2:\\n506\\nSample Input 2:\\n3\\nAB 1 1\\nAC 2 1\\nBC 2 1\\nSample Output 2:\\n506\") == 506"
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Wrong output: {solution(stdin)}!= {expected}\""
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''0\nSample Output 1:\n2600\n\nSample Input 2:\n3\nAB 1 1\nAC 2 1\nBC 2 1\nSample Output 2:\n506''') == 506"
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Test failed. Got: {output}, Expected: {output}\"\n\nfrom typing import List"
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for input {input()}, expected output {expected_output}\""
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2600\"\n"
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0\\nSample Input 1\\nSample Output 1\\nSample Input 2\\nSample Output 2\\n\") == \"2600\\n506\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"(())\") == \"possible\", \"Sample Input 1\"\nassert solution(\"()()\") == \"possible\", \"Sample Input 2\""
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('()))') == 'possible'\nassert solution(')))(') == 'impossible'"
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"()))\" == \"possible\", \"Test failed\"\nassert solution(\"())))\") == \"impossible\", \"Test failed\""
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"()))\") == \"possible\"\nassert solution(\"())))\") == \"impossible\""
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('()') == 'possible'\nassert solution('())') == 'possible'\nassert solution('(())') == 'possible'\nassert solution('(())())') == 'possible'\nassert solution('(())()()()()') == 'impossible'"
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"())\") == \"possible\"\nassert solution(\"()()\") == \"possible\"\nassert solution(\"(()())()\") == \"possible\"\n\nassert solution(\"()\") == \"impossible\"\nassert solution(\"()()()\") == \"impossible\"\nassert solution(\"(()())()\") == \"impossible\"\n\nassert solution(\"()()()\") == \"impossible\"\nassert solution(\"())(())()\") == \"impossible\"\nassert solution(\"()()(())()\") == \"impossible\"\n\nassert solution(\"()()()()\") == \"possible\"\nassert solution(\"((()))\") == \"impossible\"\nassert solution(\"())\") == \"impossible\"\n\nassert solution(\"(())()())\") == \"impossible\"\nassert solution(\"()()())()\") == \"impossible\"\nassert solution(\"(()())(())()\") == \"impossible\"\n\nassert solution(\"()()())()\") == \"possible\"\nassert solution(\"((()))())\") == \"possible\"\nassert solution(\"(())()())()\") == \"possible\"\n\nassert solution(\"()())()()\") == \"impossible\"\nassert solution(\"())(())(())()\") == \"impossible\"\nassert solution(\"()())(())(())()\") == \"impossible\"\n\nassert solution(\"())(())(())())\") == \"impossible\"\nassert solution(\"())(())(())()\") == \"possible\"\nassert solution(\"())(())()\") == \"impossible\"\n\nassert solution(\"(())(())(())())\") == \"impossible\"\nassert solution(\"(())(())()\") == \"possible\"\nassert solution(\"())(())()()\") == \"impossible\"\n\nassert solution(\"())(())()()()\") == \"possible\"\nassert solution(\"(())(())()()()\") == \"possible\"\nassert solution(\"())(())()(())\") == \"possible\"\n\nassert solution(\"())(())(())()()\") == \"possible\"\nassert solution(\"(())()()()()\") == \"possible\"\nassert solution(\"())(())()()(())\") == \"possible\"\n\nassert solution(\"())(())(())()()\") == \"possible\"\nassert solution(\"(())()()()())\") == \"possible\"\nassert solution(\"())(())(())()()\") == \"possible\"\n\nassert solution(\"())(())()()()()\") == \"possible\"\nassert solution(\"(())()()()())()\") == \"possible\"\nassert solution(\"())(())(())()()())\") == \"possible\"\n\nassert solution(\"())(())()()()())()\") == \"possible\"\nassert solution(\"(())()()()())()\") == \"possible\"\nassert solution(\"())(())(())()()())\") == \"possible\"\n\nassert solution(\"())(())()()()())()()\") == \"possible\"\nassert solution(\"(())()()()())()()\") == \"possible\"\nassert solution(\"())(())(())()()())())\") == \"possible\"\n\nassert solution(\"())(())()()()())()\") == \"possible\"\nassert solution(\"(())()()()())()()\") == \"possible\"\nassert solution(\"())(())(())()()())())()\") == \"possible\"\n\nassert solution(\"())(())()()()())()()\") == \"possible\"\nassert solution(\"(())()()()())()()\") == \"possible\"\nassert solution(\"())(())(())()()())())()\") == \"possible\"\n\nassert solution(\"())(())()()()())()()()\") == \"possible\"\nassert solution(\"(())()()()())()()()\") == \"possible\"\nassert solution(\"())(())(())()()())()()\") == \"possible\"\n\nassert solution(\"())(())()()()())()()()()\") == \"possible\"\nassert solution(\"(())()()()())()()()\") == \"possible\"\nassert solution(\"())(())(())()()())()()()\") == \"possible\"\n\nassert solution(\"())(())()()()())()()()()()\") == \"possible\"\nassert solution(\"(())()()()())()()()\") == \"possible\"\nassert solution(\"())(())(())()()())()()()()()\") == \"possible\"\n\nassert solution(\"())(())()()()())()()()()()\") == \"possible\"\nassert solution(\"(())()()()())()()()()\") == \"possible\"\nassert solution(\"())(())(())()()())()()()()()\") == \"possible\"\n\nassert solution(\"())(())()()()())()()()()()()()\") == \"possible\"\nassert solution(\"(())()()()())()()()()\") == \"possible\"\nassert solution(\"())(())(())()()())()()()()()()\") == \"possible\"\n\nassert solution(\"())(())()()()())()"
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"(())\") == \"possible\"\nassert solution(\"(())()\") == \"impossible\"\nassert solution(\"(()())()\") == \"impossible\"\nassert solution(\"(()))\") == \"impossible\"\nassert solution(\"(()))(()()))()(()()))(())()(()()))())())()\") == \"possible\""
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"()))\") == \"possible\"\nassert solution(\"())()\") == \"possible\"\nassert solution(\"(()())()\") == \"possible\"\nassert solution(\"(())\") == \"impossible\"\nassert solution(\"()()\") == \"impossible\"\nassert solution(\"(())\") == \"impossible\"\nassert solution(\"()()\") == \"impossible\""
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"()))\") == \"possible\"\nassert solution(\")))(\") == \"impossible\""
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"())\") == \"possible\"\nassert solution(\"())())\") == \"possible\"\nassert solution(\"(())\") == \"possible\"\nassert solution(\"(())())\") == \"impossible\"\nassert solution(\"(()))\") == \"impossible\"\nassert solution(\"(()))\") == \"possible\"\nassert solution(\"())())(()))\") == \"possible\"\nassert solution(\"(())(()()))()\") == \"possible\"\nassert solution(\"(())(())\") == \"possible\"\nassert solution(\"(())())(()()))\") == \"possible\"\nassert solution(\"(())()())()\") == \"impossible\"\nassert solution(\"(()()))(())\") == \"possible\"\nassert solution(\"((()()))(())()\") == \"possible\"\nassert solution(\"(()())(())()))\") == \"possible\"\nassert solution(\"((()))(())(()()))\") == \"possible\"\nassert solution(\"(()()))(())())\") == \"impossible\"\nassert solution(\"())(())(())\") == \"impossible\"\nassert solution(\"(()()))(())())(())(()()))\") == \"possible\"\nassert solution(\"((())())(()))\") == \"possible\"\nassert solution(\"())(())())(())(()()))\") == \"impossible\"\nassert solution(\"(()()))(())())(())(()()))\") == \"possible\"\nassert solution(\"())(())(()()))(())(()))\") == \"possible\"\nassert solution(\"())(())()())(())(()()))\") == \"possible\"\nassert solution(\"(())())()())(())(()()))\") == \"impossible\"\nassert solution(\"(()()))(())(()()))(())(()))()\") == \"possible\"\nassert solution(\"())(())()())(())(()()))(())(()))()\") == \"possible\"\nassert solution(\"())(())(()()))(())(()()))(())(()))()\") == \"possible\"\nassert solution(\"(()()))(())())(())(()()))(())(()()))(())()\") == \"possible\"\nassert solution(\"(()()))(())())(())(()()))(())(()()))()()\") == \"possible\"\nassert solution(\"((())())(()()))(())(()()))(())(()()))(())(()()))(())()\") == \"possible\"\nassert solution(\"())(())())(())(()()))(())(()()))(())(()()))(())()()\") == \"possible\"\nassert solution(\"())(())())(())(()()))(())(()()))(())(()()))(())()\") == \"possible\"\nassert solution(\"(()()))(())())(())(()()))(())(()()))(())(()()))(())()()\") == \"possible\"\nassert solution(\"(()()))(())())(())(()()))(())(()()))(())(()()))(())()\") == \"possible\"\nassert solution(\"((())())(()()))(())(()()))(())(()()))(())(()()))(())()()\") == \"possible\"\nassert solution(\"(()()))(())())(())(()()))(())(()()))(())(()()))(())()()\") == \"possible\"\nassert solution(\"(()()))(())())(())(()()))(())(()()))(())(()()))(())()()\") == \"possible\"\nassert solution(\"((())())(()()))(())(()()))(())(()()))(())(()()))(())()()\") == \"possible\"\nassert solution(\"())(())())(())(()()))(())(()()))(())(()()))(())()()\") == \"possible\"\nassert solution(\"())(())())(())(()()))(())(()()))(())(()()))(())()()\") == \"possible\"\nassert solution(\"(()()))(())())(())(()()))(())(()()))(())(()()))(())()()\") == \"possible\"\nassert solution(\"(()()))(())())(())(()()))(())(()()))(())(()()))(())()()\") == \"possible\"\nassert solution(\"((())())(()()))(())(()()))(())(()()))(())(()()))(())()()\") == \"possible\"\nassert solution(\"())(())())(())(()()))(())(()()))(())(()()))(())()()\") == \"possible\"\nassert solution(\"())(())())(())(()()))(())(()()))(())(()()))(())()()\") == \"possible\"\nassert solution(\"(()()))(())())(())(()()))(())(()()))(())(()()))(())()()\") == \"possible\"\nassert solution(\"(()()))(())())(())(()()))(())(()()))(())(()()))(())()()\") == \"possible\"\nassert solution(\"(()()))(())())(())(()()))(())(()()))(())(()()))(())()()\") == \"possible\"\nassert solution(\"(()()))(())())(())(()()))(())(()()))(())(()()))(())()()\") == \"possible\"\nassert solution(\"((())())(()()))(())(()()))(())(()()))(())(()()))(())()()\") == \"possible\"\nassert solution(\"())(())())(())(()()))(())(()()))(())(()()))(())()()\") == \"possible\"\nassert solution(\"())(())())(())(()()))(())(()()))(())(()()))(())()()\") == \"possible\"\nassert solution(\"(()()))(())())(())(()()))(())(()()))(())(()()))(())()()\") == \"possible\"\nassert solution(\"(()()))(())())(())(()()))(())(()"
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    '''\n    2 3\n    1 1800 9000 1800\n    1 2000 9200 1600\n    1 2200 9400 1400\n    '''\n) == 1800\n\nassert solution(\n    '''\n    2 2\n    1 1800 3600 1800\n    1 1900 3600 1600\n    '''\n) == 'impossible'"
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n1 1800 9000 1800\\n1 2000 9200 1600\\n1 2200 9400 1400\") == \"1800\"\n\nassert solution(\"2 2\\n1 1800 3600 1800\\n1 1900 3600 1600\") == \"impossible\""
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2"
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n2 3\n1 1800 9000 1800\n1 2000 9200 1600\n1 2200 9400 1400\n\"\"\") == \"\"\"\n1800\n\"\"\"\n\nassert solution(\"\"\"\n2 2\n1 1800 3600 1800\n1 1900 3600 1600\n\"\"\") == \"\"\"\nimpossible\n\"\"\""
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n1 1800 9000 1800\\n1 2000 9200 1600\\n1 2200 9400 1400\") == \"1800\\n\"\nassert solution(\"2 2\\n1 1800 3600 1800\\n1 1900 3600 1600\") == \"impossible\\ndef solution(stdin: str) -> str:\n    pass\""
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Your code is incorrect. The output is '{solution(input())}', but the expected output is '{output()}'.\""
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"1800\\n\""
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 1800 9000 1800\\n1 2000 9200 1600\\n1 2200 9400 1400') == '1800'\nassert solution('1 1800 3600 1800\\n1 1900 3600 1600') == 'impossible'"
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(r'''\n2 3\n1 1800 9000 1800\n1 2000 9200 1600\n1 2200 9400 1400\n''') == '1800'\n\nassert solution(r'''\n2 2\n1 1800 3600 1800\n1 1900 3600 1600\n''') == 'impossible'"
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 2') == 'A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2\\n'"
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\\n2 3\\n\") == \"A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2\\n\"\nassert solution(\"2 3\\n\") == \"A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2\\nA1-C2 A2-B2 B1-C1\\n\"\n"
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\") == \"A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2\\n\"\nassert solution(\"2 3\") == \"A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2\\nA1-C2 A2-B2 B1-C1\\n\"\n"
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2\\n2 3\\n\") == \"A1-B2 B1-A2 A3-B3 A2-B3 A1-B1\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2\\n\"\nassert solution(\"2 3\\n\") == \"A1-B1 A2-C2 B2-C1 A1-C1 A2-B1 B2-C2 A1-B2 A2-C1 B1-C2 A1-C2 A2-B2 B1-C1\\n\"\nassert solution(\"3 4\\n\") == \"A1-B1 A2-B2 A3-B3 A4-B4\\nA2-B3 B2-A3 A1-B1 A2-B2 A3-B3 A4-B4\\nA1-B1 A2-B2 A3-B3 A4-B4\\nA2-B3 B2-A3 A1-B1 A2-B2 A3-B3 A4-B4\\nA1-B1 A2-B2 A3-B3 A4-B4\\nA2-B3 B2-A3 A1-B1 A2-B2 A3-B3 A4-B4\\nA1-B1 A2-B2 A3-B3 A4-B4\\nA2-B3 B2-A3 A1-B1 A2-B2 A3-B3 A4-B4\\nA1-B1 A2-B2 A3-B3 A4-B4\\nA2-B3 B2-A3 A1-B1 A2-B2 A3-B3 A4-B4\\nA1-B1 A2-B2 A3-B3 A4-B4\\nA2-B3 B2-A3 A1-B1 A2-B2 A3-B3 A4-B4\\nA1-B1 A2-B2 A3-B3 A4-B4\\nA2-B3 B2-A3 A1-B1 A2-B2 A3-B3 A4-B4\\nA1-B1 A2-B2 A3-B3 A4-B4\\nA2-B3 B2-A3 A1-B1 A2-B2 A3-B3 A4-B4\\nA1-B1 A2-B2 A3-B3 A4-B4\\nA2-B3 B2-A3 A1-B1 A2-B2 A3-B3 A4-B4\\nA1-B1 A2-B2 A3-B3 A4-B4\\nA2-B3 B2-A3 A1-B1 A2-B2 A3-B3 A4-B4\\nA1-B1 A2-B2 A3-B3 A4-B4\\nA2-B3 B2-A3 A1-B1 A2-B2 A3-B3 A4-B4\\nA1-B1 A2-B2 A3-B3 A4-B4\\nA2-B3 B2-A3 A1-B1 A2-B2 A3-B3 A4-B4\\nA1-B1 A2-B2 A3-B3 A4-B4\\nA2-B3 B2-A3 A1-B1 A2-B2 A3-B3 A4-B4\\nA1-B1 A2-B2 A3-B3 A4-B4\\nA2-B3 B2-A3 A1-B1 A2-B2 A3-B3 A4-B4\\nA1-B1 A2-B2 A3-B3 A4-B4\\nA2-B3 B2-A3 A1-B1 A2-B2 A3-B3 A4-B4\\nA1-B1 A2-B2 A3-B3 A4-B4\\nA2-B3 B2-A3 A1-B1 A2-B2 A3-B3 A4-B4\\nA1-B1 A2-B2 A3-B3 A4-B4\\nA2-B3 B2-A3"
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 2') == 'A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2'\n\nassert solution('2 3') == 'A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2\\nA1-C2 A2-B2 B1-C1'"
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2\") == \"A1-B2 B1-A2 A3-B3 A2-B3 A1-B1 A3-B1 A2-B2\\n\"\nassert solution(\"2 3\") == \"A1-B1 A2-C2 B2-C1 A1-C1 A2-B1 B2-C2 A1-B2 A2-C1 B1-C2 A1-C2 A2-B2 B1-C1\\n\""
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"\"\"\nA1-B2 B1-A2 A3-B3\nA2-B3 B2-A3 A1-B1\nA3-B1 B3-A1 A2-B2\n\"\"\"\n"
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\n2 3\\n\") == \"A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2\\n\"\nassert solution(\"2 3\\n2 3\\n\") == \"A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2\\nA1-C2 A2-B2 B1-C1\\n\"\n"
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 'A1-B1 A2-C1 B2-C2\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2\\nA1-C2 A2-B2 B1-C1\\n'\n"
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\") == \"A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2\\n\"\nassert solution(\"2 3\") == \"A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2\\nA1-C2 A2-B2 B1-C1\\n\""
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n..\\n..\") == \"7\\n\"\nassert solution(\"4 4\\nX.XX\\nX..X\\n..X. \\n..XX\") == \"9\\n\""
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\n..\\n..\") == \"7\"\nassert solution(\"4 4\\nX.XX\\nX..X\\n..X. \\n..XX\") == \"9\""
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\n..\\n..\") == \"7\\n\"\nassert solution(\"4 4\\nX.XX\\nX..X\\n..X.\\n..XX\") == \"9\\n\""
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\n..\\n..\") == 7\nassert solution(\"4 4\\nX.XX\\nX..X\\n..X."
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\n..\\n..\\n4 4\\nX.XX\\nX..X\\n..X. \\n..XX\") == \"7\"\n\nassert solution(\"4 4\\nX.XX\\nX..X\\n..X. \\n..XX\") == \"9\""
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 4\\nX.XX\\nX..X\\n..X. \\n..XX\\n') == '9\\n'\nassert solution('2 2\\n.. \\n.. \\n') == '7\\n'"
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 2\\n..\\n..') == 7\nassert solution('4 4\\nX.XX\\nX..X\\n..X. \\n..XX') == 9"
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, \"Test Case Failed\""
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\n..\\n..\") == \"7\"\nassert solution(\"4 4\\nX.XX\\nX..X\\n..X. \\n..XX\") == \"9\"\n"
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == \"7\", \"Example 1\"\nassert solution(sample_input_2) == \"9\", \"Example 2\""
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == 600, \"Expected 600, but got {}\".format(solution(sample_input_1))\nassert solution(sample_input_2) == 100, \"Expected 100, but got {}\".format(solution(sample_input_2))"
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Output the minimum cost to reach square (0,0).\""
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n3 3 2 2 100\\n1 1 1 1 500\\n2\\n2 0 2 1 100\\n6 0 8 1 1\\n\") == \"600\\n\"\nassert solution(\"2\\n2 0 2 1 100\\n6 0 8 1 1\\n\") == \"100\\n\""
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n3 3 2 2 100\\n1 1 1 1 500\") == \"600\"\nassert solution(\"2\\n2 0 2 1 100\\n6 0 8 1 1\") == \"100\""
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n3 3 2 2 100\\n1 1 1 1 500\\n2\\n2 0 2 1 100\\n6 0 8 1 1\\n\") == 600\nassert solution(\"2\\n2 0 2 1 100\\n6 0 8 1 1\\n\") == 100"
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 600, \"Expected 600, got {}\".format(solution())"
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n3 3 2 2 100\\n1 1 1 1 500\\n2\\n2 0 2 1 100\\n6 0 8 1 1\\n\") == \"600\"\nassert solution(\"1\\n2 0 2 1 100\\n6 0 8 1 1\\n\") == \"100\"\nassert solution(\"1\\n2 0 2 1 100\\n6 0 8 1 1\\n\") == \"-1\"\nassert solution(\"2\\n2 0 2 1 100\\n6 0 8 1 1\\n\") == \"100\""
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n3 3 2 2 100\\n1 1 1 1 500\") == \"600\\n\"\nassert solution(\"2\\n2 0 2 1 100\\n6 0 8 1 1\") == \"100\\n\""
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n3 3 2 2 100\\n1 1 1 1 500\") == \"600\\n\"\nassert solution(\"1\\n2 0 2 1 100\\n6 0 8 1 1\") == \"100\\n\""
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == '600', 'Test 1 failed'\nassert solution(sample_input_2) == '100', 'Test 2 failed'"
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n361\") == \"3\"\nassert solution(\"2\\n11\") == \"0\""
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == 3\n"
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(361) == 3, \"The value of S361 is incorrect\"\nassert solution(11) == 0, \"The value of S11 is incorrect\""
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3, \"361\") == 3\nassert solution(2, \"11\") == 0"
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n361\") == \"3\\n\"\nassert solution(\"2\\n11\") == \"0\\n\""
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == 3\nassert solution(2) == 0"
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2\n\nfrom typing import List"
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n361\") == \"3\"\nassert solution(\"2\\n11\") == \"0\""
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"cancel road trip\""
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 10\\n2 100\\n1 10\\n11 5\") == \"10\"\nassert solution(\"3 10\\n2 100\\n1 10\\n13 5\") == \"cancel road trip\""
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == expected_solution\n"
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution.__name__ == \"__main__\"\nn, g = map(int, input().split())\ngas_stations = [list(map(int, input().split())) for _ in range(n)]"
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 10\\n2 100\\n1 10\\n11 5\") == \"10\"\nassert solution(\"3 10\\n2 100\\n1 10\\n13 5\") == \"cancel road trip\""
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == '''\n10\n2 100\n1 10\n11 5\n1\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n11\n1"
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"10\"\nassert solution(\"Sample Input 1\") == \"10\"\nassert solution(\"Sample Input 2\") == \"cancel road trip\""
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 10\\n2 100\\n1 10\\n11 5\") == 10\nassert solution(\"3 10\\n2 100\\n1 10\\n13 5\") == \"cancel road trip\"\n\nfrom typing import List"
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n3 10\n2 100\n1 10\n11 5\n''') == '10'\n\nassert solution('''\n3 10\n2 100\n1 10\n13 5\n''') == 'cancel road trip'"
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 10\\n2 100\\n1 10\\n11 5\") == \"10\"\nassert solution(\"3 10\\n2 100\\n1 10\\n13 5\") == \"cancel road trip\""
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 9\\n2 8\\n1 1\\n3 4\\n5 100\") == \"1 8 9 9 100 101 108 109 109\"\nassert solution(\"5 7\\n2 2\\n3 8\\n2 7\\n2 4\\n3 8\") == \"0 7 8 11 15 16 19\""
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 9\\n2 8\\n1 1\\n3 4\\n5 100\") == \"1 8 9 9 100 101 108 109 109\"\nassert solution(\"5 7\\n2 2\\n3 8\\n2 7\\n2 4\\n3 8\") == \"0 7 8 11 15 16 19\""
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected_output, f\"Test case failed: {solution(stdin)}!= {expected_output}\""
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n4 9\n2 8\n1 1\n3 4\n5 100\n\"\"\"\n) == \"1 8 9 9 100 101 108 109 109\"\n\nassert solution(\n\"\"\"\n5 7\n2 2\n3 8\n2 7\n2 4\n3 8\n\"\"\"\n) == \"0 7 8 11 15 16 19\""
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input1) == expected1, f\"Incorrect output for test case 1: {solution(input1)}!= {expected1}\"\nassert solution(input2) == expected2, f\"Incorrect output for test case 2: {solution(input2)}!= {expected2}\""
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Test case {i+1} failed\"\n"
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 9\\n2 8\\n1 1\\n3 4\\n5 100\") == \"1 8 9 9 100 101 108 109 109\"\nassert solution(\"5 7\\n2 2\\n3 8\\n2 7\\n2 4\\n3 8\") == \"0 7 8 11 15 16 19\"\n"
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == ['0 7 8 11 15 16 19']\n"
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 9\\n2 8\\n1 1\\n3 4\\n5 100') == '1 8 9 9 100 101 108 109 109'"
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r')) == '1 8 9 9 100 101 108 109 109'\nassert solution(open('test_input1.txt', 'r')) == '1 8 9 9 100 101 108 109 109'\nassert solution(open('test_input2.txt', 'r')) == '0 7 8 11 15 16 19'"
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\\n\") == \"1\"\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\\n\") == \"3\""
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\\n\") == \"1\\n\"\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\\n\") == \"3\\n\""
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n1 3 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3\n''') == '''\n3\n'''\n\nassert solution('''\n1 5 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3\n''') == '''\n1\n'''\n\nassert solution('''\n1 3 10\n0 0 5\n3 3\n-3 3\n3 -3\n3 0\n0 3\n''') == '''\n6\n'''"
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == \"1\", \"Expected output: 1, but got: {}\".format(solution(sample_input1))\nassert solution(sample_input2) == \"3\", \"Expected output: 3, but got: {}\".format(solution(sample_input2))"
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 3, \"Wrong output\""
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\\n\") == 1\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\\n\") == 3"
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == \"1\\n\"\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == \"3\\n\""
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\\n\") == \"1\\n\", \"Test case 1 failed\"\n\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\\n3 0\\n\") == \"3\\n\", \"Test case 2 failed\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n1 3 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3\n''') == '1\\n'\n\nassert solution('''\n1 5 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3\n''') == '3\\n'"
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 10000\\n1\\n1\\n1\\n1\\n1\\n\") == \"4\\n4\\n2\\n2\\n0\\n\"\nassert solution(\"5 9\\n1\\n1\\n10\\n1\\n9\\n\") == \"2\\n0\\n0\\n2\\n0\\n\""
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 10000\\n1\\n1\\n1\\n1\\n1') == '4\\n4\\n2\\n2\\n0'\nassert solution('5 9\\n1\\n1\\n10\\n1\\n9') == '2\\n0\\n0\\n2\\n0'\nprint(\"All tests passed!\")"
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 10000\\n1\\n1\\n1\\n1\\n1\\n\") == \"4\\n4\\n2\\n2\\n0\\n\"\nassert solution(\"5 9\\n1\\n1\\n10\\n1\\n9\\n\") == \"2\\n0\\n0\\n2\\n0\\n\""
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 10000\\n1\\n1\\n1\\n1\\n1\\n') == '4\\n4\\n2\\n2\\n0\\n'\nassert solution('5 9\\n1\\n1\\n10\\n1\\n9\\n') == '2\\n0\\n0\\n2\\n0\\n'"
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 10000\\n1\\n1\\n1\\n1\\n1\") == \"4\\n4\\n2\\n2\\n0\"\nassert solution(\"5 9\\n1\\n1\\n10\\n1\\n9\") == \"2\\n0\\n0\\n2\\n0\"\n"
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 10000\\n1\\n1\\n1\\n1\\n1\") == \"4\\n4\\n2\\n2\\n0\"\nassert solution(\"5 9\\n1\\n1\\n10\\n1\\n9\") == \"2\\n0\\n0\\n2\\n0\""
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt').read()) == 'Output the length of the longest interesting subsequence starting with the i-th element.\\n0\\n0\\n2\\n0\\n'\n\nopen('input.txt', 'w').write('5 10000\\n1\\n1\\n1\\n1\\n1\\nSample Output 1: 4\\n4\\n2\\n2\\n0\\n\\nSample Input 2: 5 9\\n1\\n1\\n10\\n1\\n9\\nSample Output 2: 2\\n0\\n0\\n2\\n0\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nmain()\\n')"
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()\nassert solution(input()) == output()\nassert solution(input()) == output()\nassert solution(input()) == output()\nassert solution(input()) == output()"
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 10000\\n1\\n1\\n1\\n1\\n1\\n\") == \"4\\n4\\n2\\n2\\n0\\n\"\nassert solution(\"5 9\\n1\\n1\\n10\\n1\\n9\\n\") == \"2\\n0\\n0\\n2\\n0\\n\"\n"
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\nne\") == \"NE\", \"Test case 1 failed\"\nassert solution(\"4\\nkava\") == \"DA\", \"Test case 2 failed\""
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\ne\\n4\\nkava\\n') == 'NE\\na\\n'"
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\nne\") == \"NE\\n\", \"Incorrect output 1\"\nassert solution(\"4\\nkava\") == \"DA\\nak\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Incorrect output 2\"\n"
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\nne\\n\") == \"NE\"\nassert solution(\"4\\nkava\\n\") == \"DA\""
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=input()) == expected_output"
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\nne\") == \"NE\"\nassert solution(\"4\\nkava\") == \"DA\""
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\nne\\n\") == \"NE\\n\"\nassert solution(\"4\\nkava\\n\") == \"DA\\nak\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\nne\") == \"NE\\n\"\nassert solution(\"4\\nkava\") == \"DA\\n\""
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\nne\\n\") == \"NE\"\nassert solution(\"4\\nkava\\n\") == \"DA\""
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 'NE'"
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(r'4 4 4\n1 2\n1 3\n2 4\n3 4\n1 1 4\n2 1 4\n1 1 3\n2 2 3 2') == [2, 0, 2, 1]\n\nassert solution(r'8 10 4\n1 2\n2 3\n1 3\n3 6\n6 8\n2 4\n2 5\n4 7\n5 7\n7 8\n2 3 4 5 6\n2 2 6 8\n1 1 6\n1 1 8') == [0, 0, 3, 2, 1]"
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == output\n"
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4 4\\n1 2\\n1 3\\n2 4\\n3 4\\n1 1 4\\n2 1 4\\n1 1 3\\n2 2 3 2\") == \"2\\n0\\n2\\n1\"\nassert solution(\"8 10 4\\n1 2\\n2 3\\n1 3\\n3 6\\n6 8\\n2 4\\n2 5\\n4 7\\n5 7\\n7 8\\n2 3 4 5 6\\n2 2 6 8\\n1 1 6\\n1 1 8\") == \"0\\n0\\n3\\n2\""
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 4 4\\n1 2\\n1 3\\n2 4\\n3 4\\n1 1 4\\n2 1 4\\n1 1 3\\n2 2 3 2') == '2\\n0\\n2\\n1\\n'\nassert solution('8 10 4\\n1 2\\n2 3\\n1 3\\n3 6\\n6 8\\n2 4\\n2 5\\n4 7\\n5 7\\n7 8\\n2 3 4 5 6\\n2 2 6 8\\n1 1 6\\n1 1 8') == '0\\n0\\n3\\n2\\n'"
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"4 4 4\\n1 2\\n1 3\\n2 4\\n3 4\\n1 1 4\\n2 1 4\\n1 1 3\\n2 2 3 2\"\n) == \"2\\n0\\n2\\n1\"\n\nassert solution(\n    \"8 10 4\\n1 2\\n2 3\\n1 3\\n3 6\\n6 8\\n2 4\\n2 5\\n4 7\\n5 7\\n7 8\\n2 3 4 5 6\\n2 2 6 8\\n1 1 6\\n1 1 8\"\n) == \"0\\n0\\n3\\n2\""
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4 4\\n1 2\\n1 3\\n2 4\\n3 4\\n1 1 4\\n2 1 4\\n1 1 3\\n2 2 3 2\") == \"2\\n0\\n2\\n1\"\nassert solution(\"8 10 4\\n1 2\\n2 3\\n1 3\\n3 6\\n6 8\\n2 4\\n2 5\\n4 7\\n5 7\\n7 8\\n2 3 4 5 6\\n2 2 6 8\\n1 1 6\\n1 1 8\") == \"0\\n0\\n3\\n2\""
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 4 4\\n1 2\\n1 3\\n2 4\\n3 4\\n1 1 4\\n2 1 4\\n1 1 3\\n2 2 3 2') == '2\\n0\\n2\\n1'\nassert solution('8 10 4\\n1 2\\n2 3\\n1 3\\n3 6\\n6 8\\n2 4\\n2 5\\n4 7\\n5 7\\n7 8\\n2 3 4 5 6\\n2 2 6 8\\n1 1 6\\n1 1 8') == '0\\n0\\n3\\n2'"
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 4 4\\n1 2\\n1 3\\n2 4\\n3 4\\n1 1 4\\n2 1 4\\n1 1 3\\n2 2 3 2') == '2\\n0\\n2\\n1\\n'\nassert solution('8 10 4\\n1 2\\n2 3\\n1 3\\n3 6\\n6 8\\n2 4\\n2 5\\n4 7\\n5 7\\n7 8\\n2 3 4 5 6\\n2 2 6 8\\n1 1 6\\n1 1 8') == '0\\n0\\n3\\n2\\n'"
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input) == output, f\"Test case {i+1} failed\" for i, (n, m, q), output in enumerate(test_cases)"
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4 4\\n1 2\\n1 3\\n2 4\\n3 4\\n1 1 4\\n2 1 4\\n1 1 3\\n2 2 3 2\\n\") == \"2\\n0\\n2\\n1\\n\"\nassert solution(\"8 10 4\\n1 2\\n2 3\\n1 3\\n3 6\\n6 8\\n2 4\\n2 5\\n4 7\\n5 7\\n7 8\\n2 3 4 5 6\\n2 2 6 8\\n1 1 6\\n1 1 8\\n\") == \"0\\n0\\n3\\n2\\n\""
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 2, \"Solution does not work as expected\""
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 1\\n2 1 3\") == \"2\\n\"\nassert solution(\"2 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 1\\n2 1 3\\n\") == \"1\\n\""
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Test case {i+1} failed: Expected output {expected}, got {solution(stdin)}\""
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 1\\n2 1 3\") == \"2\"\nassert solution(\"2 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 3\") == \"1\"\n"
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 1\\n2 1 3\") == \"2\"\n\nassert solution(\"2 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 3\\n4 3 1\") == \"1\""
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 1\\n2 1 3\\n\") == \"2\\n\""
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 1\\n2 1 3\\n\") == 2\nassert solution(\"2 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 3\\n2 1 1\\n\") == 1"
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 1\\n2 1 3\\n') == 2\nassert solution('2 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 3\\n') == 1\n"
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"40.500000000\", \"Your solution is incorrect. Please check the problem statement and examples provided.\""
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"40.500000000\", \"Expected 40.500000000, but got: \" + solution(stdin)\nassert solution(stdin) == \"49.000000000\", \"Expected 49.000000000, but got: \" + solution(stdin)"
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 15\\nD 4 10 1\\nC 6 1\") == \"40.500000000\\n\"\nassert solution(\"3 15\\nD 4 10 1\\nC 6 1\\nC 9 3\") == \"49.000000000\\n\"\nassert solution(\"2 10\\nD 4 10 1\\nC 6 1\") == \"Impossible\\n\"\nassert solution(\"5 50\\nD 4 10 1\\nC 6 1\") == \"Impossible\\n\"\nassert solution(\"2 2\\nD 4 10 1\\nC 6 1\") == \"Impossible\\n\"\nassert solution(\"3 10\\nD 4 10 1\\nC 6 1\") == \"Impossible\\n\"\nassert solution(\"1 10000\\nD 4 10 1\\nC 6 1\") == \"Impossible\\n\"\nassert solution(\"5 1000\\nD 4 10 1\\nC 6 1\") == \"Impossible\\n\"\nassert solution(\"5 500\\nD 4 10 1\\nC 6 1\") == \"Impossible\\n\"\nassert solution(\"2 10000\\nD 4 10 1\\nC 6 1\") == \"Impossible\\n\"\nassert solution(\"3 10000\\nD 4 10 1\\nC 6 1\") == \"Impossible\\n\"\nassert solution(\"4 10000\\nD 4 10 1\\nC 6 1\") == \"Impossible\\n\"\nassert solution(\"5 10000\\nD 4 10 1\\nC 6 1\") == \"Impossible\\n\"\nassert solution(\"2 10000\\nD 4 10 1\\nC 6 1\") == \"Impossible\\n\"\nassert solution(\"3 10000\\nD 4 10 1\\nC 6 1\") == \"Impossible\\n\"\nassert solution(\"4 10000\\nD 4 10 1\\nC 6 1\") == \"Impossible\\n\"\nassert solution(\"5 10000\\nD 4 10 1\\nC 6 1\") == \"Impossible\\n\"\nassert solution(\"6 10000\\nD 4 10 1\\nC 6 1\") == \"Impossible\\n\"\nassert solution(\"7 10000\\nD 4 10 1\\nC 6 1\") == \"Impossible\\n\"\nassert solution(\"8 10000\\nD 4 10 1\\nC 6 1\") == \"Impossible\\n\"\nassert solution(\"9 10000\\nD 4 10 1\\nC 6 1\") == \"Impossible\\n\"\nassert solution(\"10 10000\\nD 4 10 1\\nC 6 1\") == \"Impossible\\n\"\nassert solution(\"11 10000\\nD 4 10 1\\nC 6 1\") == \"Impossible\\n\"\nassert solution(\"12 10000\\nD 4 10 1\\nC 6 1\") == \"Impossible\\n\"\nassert solution(\"13 10000\\nD 4 10 1\\nC 6 1\") == \"Impossible\\n\"\nassert solution(\"14 10000\\nD 4 10 1\\nC 6 1\") == \"Impossible\\n\"\nassert solution(\"15 10000\\nD 4 10 1\\nC 6 1\") == \"Impossible\\n\"\nassert solution(\"16 10000\\nD 4 10 1\\nC 6 1\") == \"Impossible\\n\"\nassert solution(\"17 "
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"40.500000000\", \"Test 1 failed\"\nassert solution() == \"49.000000000\", \"Test 2 failed\""
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '40.500000000\\n'"
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 15\\nD 4 10 1\\nC 6 1\\n\") == \"40.500000000\"\nassert solution(\"3 15\\nD 4 10 1\\nC 6 1\\nC 9 3\\n\") == \"49.000000000\""
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"Test case failed\"\n"
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"40.500000000\", \"Your code is incorrect.\"\nprint(\"Correct!\")"
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 15\\nD 4 10 1\\nC 6 1\") == \"40.500000000\"\nassert solution(\"3 15\\nD 4 10 1\\nC 6 1\\nC 9 3\") == \"49.000000000\"\nassert solution(\"1 5\\nD 1 1 1\\nC 1 1\") == \"impossible\""
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\\na 2 10 3\\nb 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\") == [\"5\", \"4\", \"9\", \"3\", \"1\", \"10\", \"7\", \"6\", \"2\"]\nassert solution(\"10\\na 2 10 3\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\") == [\"fail\"]"
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == expected_output1\nassert solution(sample_input2) == expected_output2"
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('10\\na 2 10 3\\nb 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\n') == '5 4 9 3 1 10 7 6 2\\n'\nassert solution('10\\na 2 10 3\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\n') == 'fail\\n'"
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt')) == '5 4 9 3 1 10 7 6 2\\n'\nassert solution(open('input.txt', 'r')) == '5 4 9 3 1 10 7 6 2\\n'"
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Test failed: expected output '{expected}', but got '{solution(stdin)}'.\""
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(SampleInput1) == Solution.output1\nassert solution(SampleInput2) == Solution.output2"
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n10\na 2 10 3\nb 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\n''') == '''\n5 4 9 3 1 10 7 6 2\n'''\n\nassert solution('''\n10\na 2 10 3\na 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\n''') == '''\nfail\n'''"
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input(1)) == sample_output(1)\nassert solution(sample_input(2)) == sample_output(2)"
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('10\\na 2 10 3\\nb 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\n') == ['5', '4', '9', '3', '1', '10', '7', '6', '2']\nassert solution('10\\na 2 10 3\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\n') == ['fail']"
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_output, f\"Test case {case} failed. Expected output: {expected_output}, Actual output: {solution(stdin)}\""
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"00:00\") == 3\nassert solution(\"01:01\") == 3\nassert solution(\"00:08\") == 3\nassert solution(\"00:00\") == 3"
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('00:00\\n01:01') == '3\\n00:00\\n01:00\\n01:01\\n'\n\nimport re"
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('00:00\\n01:01\\n') == '3\\n00:00\\n01:00\\n01:01\\n'\nassert solution('00:08\\n00:00\\n') == '3\\n00:08\\n00:09\\n00:00\\n'"
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('00:00\\n01:01') == '3\\n00:00\\n01:00\\n01:01\\n'\nassert solution('00:08\\n00:00') == '3\\n00:08\\n00:09\\n00:00\\n'"
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"00:00\") == \"3\\n00:00\\n01:01\"\nassert solution(\"00:08\") == \"3\\n00:08\\n00:09\\n00:00\""
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"00:00\\n01:01\") == \"3\\n00:00\\n01:00\\n01:01\\n\"\nassert solution(\"00:08\\n00:00\") == \"3\\n00:08\\n00:09\\n00:00\\n\""
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('00:00\\n01:01') == '3\\n00:00\\n01:00\\n01:01\\n'\nassert solution('00:08\\n00:00') == '3\\n00:08\\n00:09\\n00:00\\n'"
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"00:00\\n01:01\") == \"3\\n00:00\\n01:00\\n01:01\"\nassert solution(\"00:08\\n00:00\") == \"3\\n00:08\\n00:09\\n00:00\""
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"00:00\\n01:01\") == \"3\\n00:00\\n01:00\\n01:01\\n\", \"Test 1\"\nassert solution(\"00:08\\n00:00\") == \"3\\n00:08\\n00:09\\n00:00\\n\", \"Test 2\""
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"00:00\") == \"00:00\"\nassert solution(\"01:01\") == \"01:00\"\nassert solution(\"00:08\") == \"00:09\""
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"(())\" == \"4,8:8,8:\")\nassert solution(\"()\") == \"4,4:\""
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('(())') == '4,8:8,8:'\nassert solution('()') == '4,4:'\nassert solution('abc') == ''\n"
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"(())\" == \"4,8:8,8:\")"
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"(())\") == \"4,8:8,8:\"\nassert solution(\"()\") == \"4,4:\""
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"(())\" == \"4,8:8,8:\")\nassert solution(\"(a))\" == \"4,2:2,2:a\")\nassert solution(\"(a(b)c)\" == \"4,5:5,5:a,b,c\")\nassert solution(\"(a(b)c(d))\" == \"4,9:9,9:a,b,c,d\")"
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''(())''') == '4,8:8,8:'\nassert solution('''()''') == '4,4:'\nassert solution('''(()((((()))())''') == '4,8:8,8:'\nassert solution('''(())())''') == '5,5:5,5:'\nassert solution('''()(())()''') == '4,4:4,4:'"
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"(())\") == \"4,8:8,8:\"\nassert solution(\"(())\") == \"4,4:\"\nassert solution(\"(()\")) == \"4,4:\"\nassert solution(\"((()))\") == \"4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16:4,16:16,16"
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"(())\") == \"4,8:8,8:\"\nassert solution(\"()\") == \"4,4:\""
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"(())\") == \"4,8:8,8:\"\nassert solution(\"()\") == \"4,4:\"\n"
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution((\"(())\")) == \"4,8:8,8:\"\nassert solution((\"())\")) == \"4,4:\"\nassert solution((\"(())\")) == \"4,8:8,8:\"\nassert solution((\"())\")) == \"4,4:\""
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input) == output, f\"Expected '{output}', got '{solution(input)}'\" for input, output in zip(input, output)"
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == \"5\", \"Invalid Output\"\nassert solution(sample_input2) == \"185\", \"Invalid Output\"\n\nfrom typing import List"
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n1 1\n26 02 03 03 1\n26 02 03 03 2\n\"\"\"\n) == \"5\"\n\nassert solution(\n\"\"\"\n1 1\n26 02 03 03 1\n26 02 03 03 2\n31 12 25 25 2\n31 12 25 25 2\n\"\"\"\n) == \"185\"\n\nassert solution(\n\"\"\"\n1 1\n26 02 03 03 1\n26 02 03 03 2\n31 12 25 25 2\n31 12 25 25 2\n31 12 25 25 2\n31 12 25 25 2\n31 12 25 25 2\n31 12 25 25 2\n31 12 25 25 2\n31 12 25 25 2\n31 12 25 25 2\n31 12 25 25 2\n31 12 25 25 2\n31 12 25 25 2\n31 12 25 25 2\n31 12 25 25 2\n31 12 25 25 2\n31 12 25 25 2\n31 12 25 25 2\n31 12 25 25 2\n31 12 25 25 2\n31 12 25 25 2\n31 12 25 25 2\n31 12 25 25 2\n31 12 25 25 2\n31 12 25 25 2\n31 12 25 25 2\n31 12 25 25 2\n31 12 25 25 2\n31 12 25 25 2\n31 12 25 25 2\n31 12 25 25 2\n31 12 25 25 2\n31 12 25 25 2\n31 12 25 25 2\n31 12 25 25 2\n31 12 25 25 2\n31 12 25 25 2\n31 12 25 25 2\n31 12 25 25 2\n31 12 25 25 2\n31 12 25 25 2\n31 12 25 25 2\n31 12 25 25 2\n31 12 25 25 2\n31 12 25 25 2\n31 12 25 25 2\n31 12 25 25 2\n31 12 25 25 2\n31 12 25 25 2\n31 12 25 25 2\n31 12 25 25 2\n31 12 25 25 2\n31 12 25 25 2\n31 12 25 25 2\n31 12 25 25 2\n31 12 25 25 2\n31 12 25 25 2\n31 12 25 25 2\n31 12 25 25 2\n31 12 25 25 2\n31 12 25 25 2\n31 12 25 25 2\n31 12 25 2"
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n1 1\n26 02 03 03 1\n''') == '5'\nassert solution('''\n1 1\n26 02 03 03 2\n''') == '185'\nassert solution('''\n1 1\n26 02 03 03 3\n''') == '-1'\nassert solution('''\n1 1\n26 02 03 03 1\n26 02 03 03 2\n''') == '185'\nassert solution('''\n1 1\n26 02 03 03 2\n26 02 03 03 1\n''') == '-1'"
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 185, \"Expected 185, but got {}\".format(solution())"
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '5', 'Expected output is \"5\", but got \"{}\"'.format(solution(stdin))"
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 5, \"Your solution is incorrect\""
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"5\" # expected output: 5"
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    '''\n    1 1\n    26 02 03 03 1\n    26 02 03 03 2\n    '''\n) == '5'\n\nassert solution(\n    '''\n    1 1\n    26 02 03 03 1\n    26 02 03 03 3\n    '''\n) == '185'\n\nassert solution(\n    '''\n    1 1\n    26 02 03 03 1\n    26 02 03 03 1\n    '''\n) == '-1'\n\nassert solution(\n    '''\n    1 1\n    26 02 03 03 2\n    26 02 03 03 1\n    '''\n) == '185'\n\nassert solution(\n    '''\n    1 1\n    26 02 03 03 1\n    26 02 03 03 1\n    26 02 03 03 1\n    '''\n) == '-1'\n\nassert solution(\n    '''\n    1 1\n    26 02 03 03 1\n    26 02 03 03 1\n    26 02 03 03 1\n    26 02 03 03 1\n    '''\n) == '-1'"
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\\n26 02 03 03 1\\n26 02 03 03 2\\n\") == \"5\\n185\\n\"\nassert solution(\"1 1\\n26 02 03 03 1\\n26 02 03 03 3\\n\") == \"-1\\n\""
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == {\n    \"Marek loves dancing and he has danced a lot in the last couple of years. He has actually danced so much that he became too good in all of the traditional dances like swing, salsa, ballroom and hip-hop and now all partners he dances with can not keep up with him. Therefore he started to invent his own dances and even tries to convince other people to dance these new dances with him. Marek got really excited when he heard about the coming wedding of his best friend Miroslav. For a whole month he worked on a special dance for the wedding. The dance was performed by $N$ people and there were $N$ marks on the floor. There was an arrow from each mark to another mark and every mark had exactly one incoming arrow. Marek did not want anyone to stand on one place the whole time, so no arrow pointed from a mark back to the same mark. At the wedding, every person first picked a mark on the floor and no 2 persons picked the same one. Then Marek played some music and every 10 seconds there was a loud signal when all dancers had to move along the arrow on the floor to another mark. The placement of the marks was such that everybody could follow the arrow to the next mark in 10 seconds without any trouble. A year has passed since Miroslav\u2019s wedding and another wedding is coming up. Marek would like to do a similar dance at this wedding as well. He lost all the drawings he had, but luckily he found two photos from exactly when the dance started and when it ended. Marek also remembers that the signal was triggered $K$ times during the time the song was played, so people moved $K$ times along the arrows. Given the two photos, can you help Marek reconstruct the arrows on the floor so that each arrow connects two different marks? On the two photos it can be seen for every person to which position he or she moved. Marek therefore numbered the people in the first photo from $1$ to $N$ and then wrote the number of the person whose place they took in the second photo. Marek\u2019s time is running out, so he is interested in any placement of arrows that could produce the two photos.\": [1, 6, 1, 2, 3, 4],\n    \"Sample Input 2:\n4 2\n3 4 1 2\": [2, 3, 4, 1],\n}"
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"\"\"5 6 1 2 3 4\"\"\""
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"5 6 1 2 3 4 \"\nassert solution() == \"2 3 4 1\"\nassert solution() == \"Impossible\""
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\\n\") == \"5 6 1 2 3 4 \"\nassert solution(\"4 2\\n3 4 1 2\\n\") == \"2 3 4 1\""
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 'Impossible\\n'\n"
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Error: solution({input()})!= output\\n{output}\""
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: '{expected_output}', Received output: '{solution(input())}'\""
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"Test failed with input {input()} and expected output {expected}\""
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4 \"\nassert solution(\"4 2\\n3 4 1 2\") == \"2 3 4 1\""
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\\n\") == \"5 6 1 2 3 4\\n\"\nassert solution(\"4 2\\n3 4 1 2\\n\") == \"2 3 4 1\\n\""
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1374 2\\n210 1\\n\") == \"7413\\n201\\n\"\nassert solution(\"1374 2\\n1234 5\\n\") == \"12345\\n13742\\n\"\nassert solution(\"1374 2\\n1234 5\\n\") == \"12345\\n13742\\n\""
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1374 2\\n210 1\") == \"7413\""
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1374 2\") == \"7413\"\nassert solution(\"210 1\") == \"201\""
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Error: Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == output\n"
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1374 2\") == \"7413\"\nassert solution(\"210 1\") == \"201\""
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == output\n"
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '0.666666666666667'\nassert solution() == '0.733333333333333'"
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 1\\n1 0\\n\") == \"0.666666666666667\"\nassert solution(\"3\\n0 0\\n1 1\\n2 0\\n\") == \"0.733333333333333\""
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"0.733333333333333\""
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution([4, 0, 0, 0, 0]) == 0.666666666666667\nassert solution([3, 0, 1, 1, 0]) == 0.733333333333333"
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('0 0\\n0 1\\n1 1\\n1 0\\n') == '0.666666666666667\\n'\nassert solution('3\\n0 0\\n1 1\\n2 0\\n') == '0.733333333333333\\n'"
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"0.666666666666667\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"0.666666666666667\"\nassert solution(open(\"input_2.txt\", \"r\")) == \"0.733333333333333\"\n"
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input_1) == '0.666666666666667'\nassert solution(sample_input_2) == '0.733333333333333'\n\nsample_input_1 = \"\"\"\n4\n0 0\n0 1\n1 1\n1 0\n\"\"\"\n\nsample_input_2 = \"\"\"\n3\n0 0\n1 1\n2 0\n\"\"\""
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 0.666666666666667\nassert solution() == 0.733333333333333"
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '21', \"Expected output 21, got {}\".format(solution())"
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 3 4\\n10 1 3\\n0 1 20\\n2 3 100\\n10 1 10\\n10 1 10') == '9'\nassert solution('2 3 100\\n10 1 10\\n10 1 10') == '21'\n"
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '9', \"Solution not correct\"\n"
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"9\"\nassert solution(open(\"input2.txt\", \"r\")) == \"21\""
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == \"9\", \"Incorrect solution for sample input 1\"\n\nassert solution(sample_input2) == \"21\", \"Incorrect solution for sample input 2\""
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, but got {solution(stdin)}\""
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, but got {solution(stdin)}\"\n"
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n2 3 4\n10 1 3\n0 1 20\n''') == '9'\nassert solution('''\n2 3 100\n10 1 10\n10 1 10\n''') == '21'"
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == 'Output the minimum total cost (in dollars) to provide a wireless network that covers every corridor.'\n"
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == expected, f\"Solution: {solution}\\nExpected: {expected}\"\n"
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"0\", \"The input is invalid.\"\n\nn, m, t, op = map(int, input().split())"
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 2 7 -\\n1 1 1 2\\n\") == \"2\"\nassert solution(\"9 2 7 -\\n1 1 1 2\\n\") == \"4\""
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 2 7 -\\n1 1 1 2\") == \"2\"\nassert solution(\"9 2 7 -\\n1 1 1 2\") == \"4\""
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 2 7 -\\n1 1 1 2\\n\") == \"2\"\nassert solution(\"9 2 7 -\\n1 1 1 2\\n\") == \"4\""
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 2 7 -\\n1 1 1 2\") == \"2\"\nassert solution(\"9 2 7 -\\n1 1 1 2\") == \"4\""
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 2 7 -\\n1 1 1 2\\n\") == \"2\"\nassert solution(\"9 2 7 -\\n1 1 1 2\\n\") == \"4\""
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 2 7 -\\n1 1 1 2\") == \"2\"\nassert solution(\"9 2 7 -\\n1 1 1 2\") == \"4\""
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 2 7 -\\n1 1 1 2\\n\") == \"2\"\nassert solution(\"9 2 7 -\\n1 1 1 2\\n\") == \"4\""
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('8 2 7 -\\n1 1 1 2\\n') == '2'\nassert solution('9 2 7 -\\n1 1 1 2\\n') == '4'"
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"3\\n4\\n3\\n2\\n1\"\n"
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == \"3\\n4\\n3\\n\"\nassert solution(sample_input_2) == \"2\\n3\\n2\\n1\\n\"\n"
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n1 2 5\\n2 3 5\\n3 4 5\\n4 4\\n1 2 5\\n2 3 5\\n3 4 5\\n1 4 8\") == \"3\\n4\\n3\\n2\\n1\""
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3\\n1 2 5\\n2 3 5\\n3 4 5\") == \"3\\n4\\n3\\n2\\n1\\n\"\nassert solution(\"4 4\\n1 2 5\\n2 3 5\\n3 4 5\\n1 4 8\") == \"2\\n3\\n2\\n1\\n\""
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n1 2 5\\n2 3 5\\n3 4 5\") == \"3\\n4\\n3\\n2\\n1\"\nassert solution(\"4 4\\n1 2 5\\n2 3 5\\n3 4 5\\n1 4 8\") == \"2\\n3\\n2\\n1\"\nassert solution(\"4 5\\n1 2 5\\n2 3 5\\n3 4 5\\n4 5 6\") == \"2\\n3\\n2\\n1\""
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\") == []\nassert solution(\"4 3\\n1 2 5\\n2 3 5\\n3 4 5\") == [3, 4, 3, 2]\nassert solution(\"4 4\\n1 2 5\\n2 3 5\\n3 4 5\\n1 4 8\") == [2, 3, 2, 1]\n"
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    4 3\n    1 2 5\n    2 3 5\n    3 4 5\n    \"\"\"\n) == \"3\\n4\\n3\\n\"\n\nassert solution(\n    \"\"\"\n    4 4\n    1 2 5\n    2 3 5\n    3 4 5\n    1 4 8\n    \"\"\"\n) == \"2\\n3\\n2\\n1\\n\""
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected, f\"Expected output: {expected}\\nGot output: {solution(stdin)}\""
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(str(4, 3)) == 3\nassert solution(str(4, 4)) == 2\n"
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input1) == \"3\\n4\"\nassert solution(sample_input2) == \"2\\n3\\n2\\n1\""
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n2 1\\n\") == \"6\"\nassert solution(\"3 4\\n2 3 1\\n\") == \"24\"\n"
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == output, f\"Expected {output}, got {solution(stdin)}\""
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '6\\n24'"
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\n2 1\") == \"6\"\nassert solution(\"3 4\\n2 3 1\") == \"24\""
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"6\\n24\\n\"\n"
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n2 1\\n\") == \"6\\n\"\nassert solution(\"3 4\\n2 3 1\\n\") == \"24\\n\""
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    2 3\n    2 1\n    \"\"\"\n) == \"6\\n\"\n\nassert solution(\n    \"\"\"\n    3 4\n    2 3 1\n    \"\"\"\n) == \"24\\n\""
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r')) == '6'\nassert solution(open('input.txt', 'r')) == '24'"
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 24\n"
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"6\\n\", \"Incorrect output\""
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"Sample Input {i+1}, Expected Output {expected}, Actual Output {solution(stdin)}\""
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\"\n"
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected, f\"Output: {solution(stdin)}, Expected: {expected}\""
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1 2\\n\") == 2\nassert solution(\"5\\n3 4 5 1 2\\n\") == 1\n"
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1 2\\nSample Output 1: \\n2\") == 2\nassert solution(\"5\\n3 4 5 1 2\\nSample Output 2: \\n1\") == 1"
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1 2\") == \"2\\n\", \"Incorrect output for 2\"\nassert solution(\"5\\n3 4 5 1 2\") == \"1\\n\", \"Incorrect output for 5\""
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 2"
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\", \"The correct output is not provided.\""
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '2'"
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1 2\") == \"2\\n\"\nassert solution(\"5\\n3 4 5 1 2\") == \"1\\n\""
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input1) == '9\\n'\nassert solution(sample_input2) == '4\\n'"
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\nr: int,\ns: int,\nA: List[List[int]],\n) -> int:\n    n = r * s\n\n    def is_cool(A_ij: int) -> bool:\n        return A_ij <= A_ij + A[0][A[1]]\n\n    def max_cool_elements(A_ij: int) -> int:\n        count = 1\n        for i in range(s):\n            if A[0][i]!= A[i][0]:\n                break\n            count += A[0][i] + 1\n        for j in range(r):\n            if A[j][0]!= A[j][1]:\n                break\n            count += A[j][0] + 1\n        return count\n\n    cool_count = 0\n    for i in range(n):\n        if is_cool(A[i // s][i % s]):\n            cool_count += max_cool_elements(A[i // s][i % s])\n\n    if cool_count > 0:\n        return cool_count\n    else:\n        return 0"
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n1 4 10\\n5 2 6\\n11 1 3\\n\") == \"9\\n\"\nassert solution(\"3 3\\n1 3 1\\n2 1 2\\n1 1 1\\n\") == \"4\\n\""
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Output Here\", \"Test failed\""
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"The output does not match the expected output.\\nInput: {input()}\\nOutput: {output}\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 9, \"Incorrect solution\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == \"9\", \"Sample Input 1\"\nassert solution(sample_input_2) == \"4\", \"Sample Input 2\""
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n1 4 10\\n5 2 6\\n11 1 3\\n\") == \"9\\n\"\nassert solution(\"3 3\\n1 3 1\\n2 1 2\\n1 1 1\\n\") == \"4\\n\""
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n1 4 10\\n5 2 6\\n11 1 3\\n\") == \"9\\n\"\nassert solution(\"3 3\\n1 3 1\\n2 1 2\\n1 1 1\\n\") == \"4\\n\""
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n1 4 10\\n5 2 6\\n11 1 3\\n\") == \"9\\n\"\nassert solution(\"3 3\\n1 3 1\\n2 1 2\\n1 1 1\\n\") == \"4\\n\""
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input1) == '6'\nassert solution(sample_input2) == '3'"
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n2 1 3 4\\n1 2\\n1 3\\n3 4\\n') == '6'\nassert solution('4\\n3 4 5 6\\n1 2\\n1 3\\n2 4\\n') == '3'"
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Solution returned {solution(input())}, but expected {expected_output}\""
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3, 1, 3, 4) == 6, \"Solution 1 failed\"\nassert solution(4, 2, 1, 2, 1, 3, 4) == 3, \"Solution 2 failed\""
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Sample Input 1\") == \"6\\n\"\nassert solution(\"Sample Input 2\") == \"3\\n\""
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 6, \"The solution is not correct\""
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    4\n    2 1 3 4\n    1 2\n    1 3\n    3 4\n    \"\"\"\n) == \"6\"\n\nassert solution(\n    \"\"\"\n    4\n    3 4 5 6\n    1 2\n    1 3\n    2 4\n    \"\"\"\n) == \"3\"\n\nassert solution(\n    \"\"\"\n    4\n    2 3 2 1\n    1 1 1 1\n    2 2 2 2\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    4\n    1 1 1 1\n    1 1 1 1\n    1 1 1 1\n    1 1 1 1\n    \"\"\"\n) == \"1\""
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '6\\n'"
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Solution did not produce the expected output.\\nInput: {stdin}\\nOutput: {output}\\n\""
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 10\\n5 8\\n\") == \"18\\n8\\n\"\nassert solution(\"3\\n17 144\\n121 121\\n89 98\\n\") == \"265\\n25\\n10\\n\""
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"The answer is: 265\""
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1 10\\n5 8\\n\") == \"18\\n8\\n\"\nassert solution(\"3\\n17 144\\n121 121\\n89 98\\n\") == \"265\\n25\\n10\\n\""
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == \"18\", \"sample_input_1 should return 18\"\nassert solution(sample_input_2) == \"265\", \"sample_input_2 should return 265\"\n\nsample_input_1 = \"\"\"\n2\n1 10\n5 8\n\"\"\"\n\nsample_input_2 = \"\"\"\n3\n17 144\n121 121\n89 98\n\"\"\""
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 'Solution not provided.'"
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=solution.py) == \"18\\n8\\n\""
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"18\", \"Incorrect answer for sample input 1\"\nassert solution() == \"8\", \"Incorrect answer for sample input 2\""
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"2\\n1 10\\n5 8\\n\"\n) == \"18\\n8\\n\"\n\nassert solution(\n    \"3\\n17 144\\n121 121\\n89 98\\n\"\n) == \"265\\n25\\n10\\n\""
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n1 10\\n5 8\\n2\\n17 144\\n121 121\\n89 98\\n1\\n1 10\\n5 8\\n2\\n17 144\\n121 121\\n89 98\\n1\\n1 10\\n5 8\\n2\\n17 144\\n121 121\\n89 98\\n1\\n1 10\\n5 8\\n2\\n17 144\\n121 121\\n89 98\\n1\\n1 10\\n5 8\\n2\\n17 144\\n121 121\\n89 98\\n1\\n1 10\\n5 8\\n2\\n17 144\\n121 121\\n89 98\\n1\\n1 10\\n5 8\\n2\\n17 144\\n121 121\\n89 98\\n1\\n1 10\\n5 8\\n2\\n17 144\\n121 121\\n89 98\\n1\\n1 10\\n5 8\\n2\\n17 144\\n121 121\\n89 98\\n1\\n1 10\\n5 8\\n2\\n17 144\\n121 121\\n89 98\\n1\\n1 10\\n5 8\\n2\\n17 144\\n121 121\\n89 98\\n1\\n1 10\\n5 8\\n2\\n17 144\\n121 121\\n89 98\\n1\\n1 10\\n5 8\\n2\\n17 144\\n121 121\\n89 98\\n1\\n1 10\\n5 8\\n2\\n17 144\\n121 121\\n89 98\\n1\\n1 10\\n5 8\\n2\\n17 144\\n121 121\\n89 98\\n1\\n1 10\\n5 8\\n2\\n17 144\\n121 121\\n89 98\\n1\\n1 10\\n5 8\\n2\\n17 144\\n121 121\\n89 98\\n1\\n1 10\\n5 8\\n2\\n17 144\\n121 121\\n89 98\\n1\\n1 10\\n5 8\\n2\\n17 144\\n121 121\\n89 98\\n1\\n1 10\\n5 8\\n2\\n17 144\\n121 121\\n89 98\\n1\\n1 10\\n5 8\\n2\\n17 144\\n121 121\\n89 98\\n1\\n1 10\\n5 8\\n2\\n17 144\\n121 121\\n89 98\\n1\\n1 10\\n5 8\\n2\\n17 144\\n121 121\\n89 98\\n1\\n1 10\\n5 8\\n2\\n17 144\\n121 121\\n89 98\\n1\\n1 10\\n5 8\\n2\\n17 144\\n121 121\\n89 98"
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1 10\\n5 8\\n\") == \"18\\n8\\n\"\nassert solution(\"3\\n17 144\\n121 121\\n89 98\\n\") == \"265\\n25\\n10\\n\""
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n0 0\\n1 1\\n2 1\\n1 0\") == 0.5\nassert solution(\"5 5\\n0 4\\n4 2\\n4 1\\n3 -1\\n-2 4\") == 12.5"
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n0 0\\n1 1\\n2 1\\n1 0\") == 0.5\nassert solution(\"5 5\\n0 4\\n4 2\\n4 1\\n3 -1\\n-2 4\") == 12.5"
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 0.50000000, \"The expected area of the piece of cake that Alice cuts out is 0.5.\""
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3\\n0 0\\n1 1\\n2 1\\n1 0\") == 0.5\nassert solution(\"5 5\\n0 4\\n4 2\\n4 1\\n3 -1\\n-2 4\") == 12.5"
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n4 3\n0 0\n1 1\n2 1\n1 0\n''') == 0.5\n\nassert solution('''\n5 5\n0 4\n4 2\n4 1\n3 -1\n-2 4\n''') == 12.5"
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '0.50000000', '0.50000000'\nassert solution(stdin) == '12.50000000', '12.50000000'"
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n0 0\\n1 1\\n2 1\\n1 0\\n5 5\\n0 4\\n4 2\\n4 1\\n3 -1\\n-2 4\\n\") == \"0.50000000\\n\"\nassert solution(\"5 5\\n0 4\\n4 2\\n4 1\\n3 -1\\n-2 4\\n\") == \"12.50000000\\n\""
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n0 0\\n1 1\\n2 1\\n1 0\\n\") == \"0.50000000\"\nassert solution(\"5 5\\n0 4\\n4 2\\n4 1\\n3 -1\\n-2 4\\n\") == \"12.50000000\"\n"
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n0 0\\n1 1\\n2 1\\n1 0\") == 0.5\nassert solution(\"5 5\\n0 4\\n4 2\\n4 1\\n3 -1\\n-2 4\") == 12.5"
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2\"\nassert solution() == \"1\""
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2\""
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 1 3\\n0 1\\n1 2\\n2 3\\n1\") == \"2\"\nassert solution(\"4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\") == \"1\""
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 1 3\\n0 1\\n1 2\\n2 3\\n1\") == \"2\"\nassert solution(\"4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\") == \"1\""
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '2\\n', \"Test failed\""
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 1 3\\n0 1\\n1 2\\n2 3\\n1\\n4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\") == 2\nassert solution(\"4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\") == 1"
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"2\\n\"\n"
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 1 3\\n0 1\\n1 2\\n2 3\\n1\") == 2\nassert solution(\"4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\") == 1"
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n\\tpass\""
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), \"The output is incorrect.\""
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 1\") == \"6\"\nassert solution(\"2 2 2\") == \"30\""
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2 1\") == \"6\\n\"\nassert solution(\"2 2 2\") == \"30\\n\""
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Output the number of different possible arrangements of delivery, modulo a prime number 10^9+7. If there is no such order, output 0.\""
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '6', \"Sample Input 1 should output '6', but got '{}'.\".format(solution(stdin))\n\nassert solution(stdin) == '30', \"Sample Input 2 should output '30', but got '{}'.\".format(solution(stdin))"
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 1\") == \"6\"\nassert solution(\"2 2 2\") == \"30\""
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}.\""
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"The output is {solution(input())}, but the expected output is {expected_output}.\""
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1000, 1000, 1000) == 13750933227584952771774709268258100124259387924466001304237730626771306222277859918117235809393309822933261789257291314936987103473177741279306651439924982605477557157854340955999535894982352798399050986249527271927273175682556908758887115265671027216611408332900251172651275293722885634956801585716503985541745164702585277076060773647835962754822758691528516262194643762984351241025057548283436681936845615004123703258630489953567277446250103136964902991163784832963916928179628382767042906349181937903325569556242591507315338598156733010418733092678192749910129189928610721961162524542743961344728577754994607835849447261961287815750162031637487622796790191742755872168116252249498867077589915600452706013503951945055077032585896213476223355500641482954204776500207518210906438138091034501288480966209119326992132064069913157351201268283600519647398492476645279544770482660734321889990152895742679072726171057347135997352991655822090813314768011734329753497575577992338332131190571550447044129677346390"
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 1\") == 6\nassert solution(\"2 2 2\") == 30"
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt').readline()) == \"2021 2020 2020\"\n"
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2020 2020 2020\\n\") == \"2021 2020 2020\\n\"\nassert solution(\"2\\n1 9999999\\n\") == \"impossible\\n\""
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == '2021 2020 2020'\nassert solution(sample_input2) == 'impossible'"
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('Sample Input 1\\n3\\n2020 2020 2020\\nSample Output 1\\n2021 2020 2020\\n') == '2021 2020 2020'\nassert solution('Sample Input 2\\n2\\n1 9999999\\nSample Output 2\\nimpossible\\ndef solution(stdin: str) -> str:\\n    pass\\n') == 'impossible'"
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n2020 2020 2020\") == \"2021 2020 2020\"\nassert solution(\"2\\n1 9999999\") == \"impossible\""
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Test failed: Solution returned {solution(input())}, but expected {expected_output}.\""
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input1) == output1, \"Test failed for sample input 1\"\nassert solution(input2) == output2, \"Test failed for sample input 2\""
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Incorrect output. Input: {input()}, Output: {output}\"\n"
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2"
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == '2021 2020 2020'\nassert solution(sample_input_2) == 'impossible'\n\nfrom typing import List\n"
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"30 70\") == \"11\"\nassert solution(\"66 69\") == \"2\""
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"30 70\") == \"11\"\nassert solution(\"66 69\") == \"2\""
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Wrong output! Expected: {expected_output}, got: {solution(input())}\""
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"30 70\") == \"11\"\nassert solution(\"66 69\") == \"2\""
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(30, 70) == 11\nassert solution(66, 69) == 2\n"
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input(\"Enter the number of houses: \")) == '11\\n'"
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"30 70\") == \"11\"\nassert solution(\"66 69\") == \"2\""
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"30 70\") == \"11\", \"Sample Input 1\"\nassert solution(\"66 69\") == \"2\", \"Sample Input 2\""
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(30, 70) == 11\nassert solution(66, 69) == 2"
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"30 70\") == \"11\"\nassert solution(\"66 69\") == \"2\"\n"
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2"
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('Sample Input 1\\n2 2 0\\n>@\\n>~\\nSample Output 1: 2\\n\\nSample Input 2\\n3 5 1\\n>>@<<\\n>~#~<\\n>>>>~\\nSample Output 2: 4\\n') == '2\\n4\\n'"
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 2 0\\n>@\\n>~') == '2\\n'\nassert solution('3 5 1\\n>>@<<\\n>~#\\n>>>>~') == '4\\n'"
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"2 2 0\n>@\n>~\"\"\") == \"2\\n\"\n\nassert solution(\"\"\"3 5 1\n>>@<<\n>~#~<\n>>>>~\"\"\") == \"4\\n\""
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"4\\n\", \"Expected output is 4, but got: \" + solution(stdin)\n\nfrom typing import List\n"
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r')) == '2'\nassert solution(open('input2.txt', 'r')) == '4'\n\nfrom typing import List"
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n2 2 0\n>@\n>~\n''') == '2\\n'\nassert solution('''\n3 5 1\n>>@<<\n>~#~<\n>>>>~\n''') == '4\\n'"
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 2 0\\n>@\\n>~') == '2'\nassert solution('3 5 1\\n>>@<<\\n>~#~<\\n>>>>~') == '4'"
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input) == output, f\"Input: {input}, Output: {output}\" for input, output in zip(sample_input, sample_output)\n"
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 2 0\\n>@\\n>~') == '2\\n'\nassert solution('3 5 1\\n>>@<<\\n>~#~<\\n>>>>~') == '4\\n'\nassert solution('2 2 1\\n>@\\n>~') == 'begin repairs\\n'\n\nfrom typing import List\n"
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('143175=120') == '14+31+75=120'\nassert solution('5025=30') == '5+025=30'"
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    143175=120\n    \"\"\"\n) == \"\"\"\n    14+31+75=120\n    \"\"\"\n)\n\nassert solution(\n    \"\"\"\n    5025=30\n    \"\"\"\n) == \"\"\"\n    5+025=30\n    \"\"\"\n)"
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('143175=120') == '14+31+75=120'\nassert solution('5025=30') == '5+025=30'"
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\""
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('143175=120\\n5025=30') == '14+31+75=120\\n5+025=30'\nassert solution('123456789=9876543210') == '1234+56789=9876543210'\nassert solution('999999999=0') == '9999+9999=0'"
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"143175=120\\n5025=30\\n\") == \"14+31+75=120\\n5+025=30\\n\""
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_data1) == output1\nassert solution(input_data2) == output2"
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output() for input, output in [\n    ('143175=120', '14+31+75=120'),\n    ('5025=30', '5+025=30'),\n]"
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\""
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\\n\"\nassert solution(\"5025=30\") == \"5+025=30\\n\""
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == ['1 2']"
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8\\n1\\n3\\n2\\n4\\n1\\n5\\n2\\n4\\n\") == \"1 2\\n\"\nassert solution(\"8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n1\\n\") == \"-1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nimport sys\n"
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == \"1 2\"\nassert solution(2) == \"-1\"\nassert solution(3) == \"2 1\"\nassert solution(4) == \"1 4\"\nassert solution(5) == \"4 1\"\nassert solution(6) == \"1 1\"\nassert solution(7) == \"1 1\"\nassert solution(8) == \"1 1\""
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1 2\\n\"\nassert solution() == \"-1\\n\"\nassert solution() == \"-1\\n\"\nassert solution() == \"2 1\\n\"\nassert solution() == \"1 1\\n\"\nassert solution() == \"-1\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8\\n1\\n3\\n2\\n4\\n1\\n5\\n2\\n4\\n\") == \"1 2\\n\"\nassert solution(\"8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n1\\n\") == \"-1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nsolution(\"8\\n1\\n3\\n2\\n4\\n1\\n5\\n2\\n4\\n\")"
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"1 2\\n\"\n"
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == expected_solution, f\"Solution is incorrect. Expected: {expected_solution}, Received: {solution}\"\n"
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1 2\\n\"  # expected output: \"1 2\"\nassert solution(stdin) == \"1 2\\n\"  # expected output: \"1 2\"\nassert solution(stdin) == \"-1\\n\"  # expected output: \"-1\""
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '1 2'\nassert solution() == '-1'"
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\n\nfrom typing import List"
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1101\") == \"1\", \"Test 1 failed\"\nassert solution(\"1\") == \"0\", \"Test 2 failed\""
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1101\") == \"1\", \"Sample Input 1\"\nassert solution(\"1\") == \"0\", \"Sample Input 2\""
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1101') == '1'\nassert solution('1') == '0'"
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1101\") == \"1\\n\", \"Test case 1 failed\"\nassert solution(\"1\") == \"0\\n\", \"Test case 2 failed\""
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\") == 0, \"Expected 0, got %s\" % solution(\"\")"
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1101\") == \"1\\n\"\nassert solution(\"1\") == \"0\\n\""
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input1) == sample_output1, \"Test 1 failed\"\nassert solution(sample_input2) == sample_output2, \"Test 2 failed\""
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1101\") == \"1\", \"sample 1 incorrect\"\nassert solution(\"1\") == \"0\", \"sample 2 incorrect\""
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1101\") == \"1\", \"The answer for the first test case should be '1', but got '{}'\".format(solution(\"1101\"))\nassert solution(\"1\") == \"0\", \"The answer for the second test case should be '0', but got '{}'\".format(solution(\"1\"))"
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1101\") == 1\nassert solution(\"1\") == 0"
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('example.in')) == '1\\n0\\n2\\n'\nassert solution(open('example.out')) == '1\\n2\\n3\\n'"
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n3 1 3 1\\n2 2 1\\n3 3 1 3\\n1 2\\n2 3\\n3 1\") == \"1\\n0\\n2\""
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}, Received: {solution(stdin)}\""
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('tests/example_input.txt')) == '''\n1\n0\n2\n'''\n\nassert solution(open('tests/input.txt')) == '''\n5\n3 1 3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2 3\n3 1\n1 2\n2"
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n3 3\n3 1 3 1\n2 2 1\n3 3 1 3\n1 2\n2 3\n3 1\n''') == '1\\n0\\n2'\nassert solution('''\n2 1\n4 1 6 3 6\n7 3 4 2 6 5 6 1\n1 2\n''') == '3'"
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(None) == \"\"\"\n\"\"\"\n"
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n3 3\n3 1 3 1\n2 2 1\n3 3 1 3\n1 2\n2 3\n3 1\n''') == '''\n1\n0\n2\n'''\n\nassert solution('''\n2 1\n4 1 6 3 6\n7 3 4 2 6 5 6 1\n1 2\n''') == '''\n3\n'''"
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n3 1 3 1\\n2 2 1\\n3 3 1 3\\n1 2\\n2 3\\n3 1\") == \"1\\n0\\n2\"\nassert solution(\"2 1\\n4 1 6 3 6\\n7 3 4 2 6 5 6 1\\n1 2\\nSample Output 2:\\n3\\ndef solution(stdin: str) -> str:\n    pass"
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    3 3\n    3 1 3 1\n    2 2 1\n    3 3 1 3\n    1 2\n    2 3\n    3 1\n    \"\"\"\n) == \"1\\n0\\n2\\n\"\n\nassert solution(\n    \"\"\"\n    2 1\n    4 1 6 3 6\n    7 3 4 2 6 5 6 1\n    1 2\n    \"\"\"\n) == \"3\\n\""
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n3 1 3 1\\n2 2 1\\n3 3 1 3\\n1 2\\n2 3\\n3 1\") == \"1\\n0\\n2\"\nassert solution(\"2 1\\n4 1 6 3 6\\n7 3 4 2 6 5 6 1\\n1 2\") == \"3\\n\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == Solution.max_consecutive_subsequence\n"
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, \"Expected output: {}\\nActual output: {}\".format(output, solution(input()))"
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output\n"
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"Your code is incorrect. Please check the given examples and input/output constraints.\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == sample_output_1, \"Incorrect Solution\"\nassert solution(sample_input_2) == sample_output_2, \"Incorrect Solution\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 1\\n1 2 3 4\\n\") == \"4.000000\"\nassert solution(\"4 2\\n2 4 3 4\\n\") == \"3.666666\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 1\\n1 2 3 4\\n4 2\\n2 4 3 4\") == \"4.000000\\n\"\nassert solution(\"4 2\\n2 4 3 4\\n4 2\\n2 4 3 4\") == \"3.666666\\n\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 1\\n1 2 3 4\\n\") == \"4.000000\\n\"\nassert solution(\"4 2\\n2 4 3 4\\n\") == \"3.666666\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == output\n"
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution([4, 1]) == '4.000000'\nassert solution([4, 2]) == '3.666666'"
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.0 0.0\n0.0 2.0\"\"\") == 0.75\n\nassert solution(\"\"\"2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n0.0 2.0\"\"\") == 0.625"
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.0 0.0\\n0.0 2.0\\n\") == \"0.750\"\nassert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0\\n\") == \"0.625\""
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"0.750\\n\", \"Incorrect output\""
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.0 0.0\\n0.0 2.0\") == \"0.750\"\nassert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0\") == \"0.625\""
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.0 0.0\\n0.0 2.0') == 0.750\nassert solution('2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0') == 0.625"
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.0 0.0\\n0.0 2.0\") == \"0.750\"\nassert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0\") == \"0.625\""
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.0 0.0\\n0.0 2.0\") == 0.75\nassert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0\") == 0.625"
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Error: Your code does not pass the test cases.\\n\\nExpected Output: {output}\\n\\nActual Output: {solution(input())}\""
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.0 0.0\\n0.0 2.0') == 0.75\nassert solution('2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0') == 0.625\n"
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.0 0.0\\n0.0 2.0\") == 0.750, \"Sample Output 1 incorrect.\"\nassert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0\") == 0.625, \"Sample Output 2 incorrect.\""
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"2\"\nprint(\"pass\")"
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 3\\n1 2 4\\n0 3 6\\n4 0 3') == '2'\nassert solution('3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0') == '37'"
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n1 2 4\\n0 3 6\\n4 0 3\") == 2, \"Expected 2, got {}\".format(solution(\"3 3\\n1 2 4\\n0 3 6\\n4 0 3\"))\n\nassert solution(\"3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0\") == 37, \"Expected 37, got {}\".format(solution(\"3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0\"))"
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == \"2\", \"Your code is not working as expected.\"\nassert solution(sample_input2) == \"37\", \"Your code is not working as expected.\""
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(solution.__doc__) == \"2\""
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n1 2 4\\n0 3 6\\n4 0 3\") == 2\nassert solution(\"3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0\") == 37\n"
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n1 2 4\\n0 3 6\\n4 0 3\") == \"2\\n\"\nassert solution(\"3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0\") == \"37\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n1 2 4\\n0 3 6\\n4 0 3\") == \"2\", \"Your solution is incorrect.\"\n\nassert solution(\"3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0\") == \"37\", \"Your solution is incorrect.\""
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n1 2 4\\n0 3 6\\n4 0 3\") == \"2\"\nassert solution(\"3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0\") == \"37\""
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2\\n\", \"Sample Output 1\"\nassert solution(input()) == \"37\\n\", \"Sample Output 2\""
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Your solution is incorrect. Please check the output for {input()} and {output()}\""
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n1234\\n1 4\\n1 4\\n1 4\") == \"10\\n14\\n18\\n\"\nassert solution(\"4 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\") == \"1\\n4\\n9\\n16\\n\""
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n1234\\n1 4\\n1 4\\n1 4\") == \"10\\n14\\n18\"\nassert solution(\"4 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\") == \"1\\n4\\n9\\n16\""
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3\\n1234\\n1 4\\n1 4\\n1 4\") == \"10\\n14\\n18\"\nassert solution(\"4 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\") == \"1\\n4\\n9\\n16\""
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n1234\\n1 4\\n1 4\\n1 4\") == \"10\\n14\\n18\"\n\nassert solution(\"4 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\") == \"1\\n4\\n9\\n16\""
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"10\\n14\\n18\\n\", \"Test case 1 failed.\""
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"Output mismatch: got {solution(input())}, expected {expected}\"\n"
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n1234\\n1 4\\n1 4\\n1 4\") == \"10\\n14\\n18\\n\"\nassert solution(\"4 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\") == \"1\\n4\\n9\\n16\\n\""
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == [10, 14, 18], \"Test case 1 failed\""
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n4 3\n1234\n1 4\n1 4\n1 4\n''') == '10\\n14\\n18\\n'\nassert solution('''\n4 4\n1234\n1 1\n1 2\n1 3\n1 4\n''') == '1\\n4\\n9\\n16\\n'"
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"2\\n\""
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2\\n\", \"Your code is incorrect.\""
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"Solution\"\n"
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n4 2 3\\n1 3\\n2 3\\n3 4\\n\") == \"2\"\nassert solution(\"2\\n5 2 4\\n1 3\\n3 4\\n2 4\\n4 5\\n\") == \"1\""
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 2 3\\n1 3\\n2 3\\n3 4') == '2\\n'\nassert solution('5 2 4\\n1 3\\n3 4\\n2 4\\n4 5') == '1\\n'"
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2 3\\n1 3\\n2 3\\n3 4\\n\") == \"2\"\nassert solution(\"5 2 4\\n1 3\\n3 4\\n2 4\\n4 5\\n\") == \"1\""
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(306, 2, 3) == 2\nassert solution(306, 2, 4) == 1\nassert solution(306, 2, 5) == 1"
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n4 2 3\n1 3\n2 3\n3 4\n''') == '2'\n\nassert solution('''\n5 2 4\n1 3\n3 4\n2 4\n4 5\n''') == '1'"
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input(\"Enter the number of triangles Garry wrote down: \")) == \"yes\"\nassert solution(input(\"Enter the number of triangles Jerry wrote down: \")) == \"no\""
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Your code is incorrect. Expected {expected}, but got {solution(input())}.\"\n"
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"no\", \"Expected 'no', but got '{}'\".format(solution(stdin))"
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0\") == \"no\"\nassert solution(\"2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\") == \"no\"\n\nsolution(\"1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0\") == \"no\"\nsolution(\"2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\") == \"no\""
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 'yes'\nprint(\"All assertions passed!\")"
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0\\n\") == \"no\"\n\nassert solution(\"2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\\n\") == \"no\""
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0\") == \"no\\n\"\nassert solution(\"2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\") == \"no\\n\""
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(''), 'Case 1: No input given'\n\nstdin = \"\"\"\n1\n10000 0 10000 10000 0 10000\n3\n10000 0 10000 10000 5000 5000\n5000 5000 10000 10000 0 10000\n0 0 0 1000 1000 0\n\"\"\"\n\nfor line in stdin.splitlines():\n    if len(line.split())!= 6:\n        assert False, f'Case {i+1}: Invalid input format'"
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0\") == \"no\"\nassert solution(\"2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\") == \"no\""
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0\\n\") == \"no\\n\"\nassert solution(\"2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\\n\") == \"no\\n\""
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2"
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 3\\n1 2\\n2 3\\n1 3\\n') == 'YES\\n1 3\\n2 1\\n3 2\\n'\nassert solution('4 3\\n1 2\\n1 3\\n1 4\\n') == 'NO'\n"
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 3\\n1 2\\n2 3\\n1 3\\n') == 'YES\\n1 3\\n2 1\\n3 2\\n'"
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(123) == 'YES\\n1 2\\n1 3\\n2 1\\n3 2\\n'\nassert solution(3) == 'NO\\n'\nassert solution(1) == 'YES\\n'\nassert solution(3) == 'NO\\n1 2\\n1 3\\n2 1\\n3 2\\n'"
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"YES\\n1 3\\n2 1\\n3 2\"\n"
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == 'YES\\n1 3\\n2 1\\n3 2'\nassert solution(sample_input_2) == 'NO'"
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n1 2\\n2 3\\n1 3\") == \"YES\\n1 3\\n2 1\\n3 2\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\") == \"NO\""
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"YES\\n1 3\\n2 1\\n3 2\"\nassert solution() == \"NO\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r')) == 'YES\\n1 3\\n2 1\\n3 2'\nassert solution(open('input1.txt', 'r')) == 'YES\\n1 3\\n2 1\\n3 2'\nassert solution(open('input2.txt', 'r')) == 'NO\\ndef solution(stdin: str) -> str:\n    pass'"
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n0 > 1\\n1 = 2\\n0 = 2\\n\") == \"inconsistent\"\nassert solution(\"5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 > 3\\n1 > 4\\n\") == \"consistent\""
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 3\\n0 > 1\\n1 = 2\\n0 = 2\\n') == 'consistent\\n'\nassert solution('5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 > 3\\n1 > 4\\n') == 'consistent\\n'"
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(read_input()) == \"consistent\""
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == output, f\"Expected {output}, got {solution(stdin)}\""
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"consistent\""
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"inconsistent\", \"Solution should return inconsistent\""
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n0 > 1\\n1 = 2\\n0 = 2\") == \"inconsistent\"\nassert solution(\"5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 > 3\\n1 > 4\") == \"consistent\""
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"sample_input1.txt\", \"r\").read()) == \"inconsistent\"\nassert solution(open(\"sample_input2.txt\", \"r\").read()) == \"consistent\""
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n0 > 1\\n1 = 2\\n0 = 2\") == \"inconsistent\"\nassert solution(\"5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 > 3\\n1 > 4\") == \"consistent\""
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == expected_result, f\"Expected {expected_result}, got {solution}\"\n"
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1.57079633\\n\"\nassert solution(stdin) == \"41938.65135885\\n\"\n"
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 0 0\\n1 1 0\\n0 0 0\\n0 0 1\") == 1.57079633\nassert solution(\"4\\n-100 0 0\\n10 0 10\\n-10 -10 -10\\n0 0 0\") == 41938.65135885"
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == 1.57079633, \"The output is not correct.\""
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 0 0\\n1 1 0\\n0 0 0\\n0 0 1\") == 1.57079633\n\nassert solution(\"4\\n-100 0 0\\n10 0 10\\n-10 -10 -10\\n0 0 0\") == 41938.65135885"
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 1.57079633, \"Expected 1.57079633, got {}\"\nassert solution() == 41938.65135885, \"Expected 41938.65135885, got {}\""
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n1 0 0\\n1 1 0\\n0 0 0\\n0 0 1') == '1.57079633'\nassert solution('4\\n-100 0 0\\n10 0 10\\n-10 -10 -10\\n0 0 0') == '41938.65135885'"
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 41938.65135885\n"
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input_1) == expected_output_1, \"Expected output is not as expected.\"\nassert solution(sample_input_2) == expected_output_2, \"Expected output is not as expected.\"\n\nsample_input_1 = \"\"\"\n4\n1 0 0\n1 1 0\n0 0 0\n0 0 1\n\"\"\"\n\nsample_input_2 = \"\"\"\n4\n-100 0 0\n10 0 10\n-10 -10 -10\n0 0 0\n\"\"\"\n\nexpected_output_1 = \"1.57079633\"\nexpected_output_2 = \"41938.65135885\""
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '1.57079633'"
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin='11\\nsabcabcfabc\\n18\\ntrutrutiktiktappop\\n') == '3\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n\nassert solution(stdin='10\\nhello\\n1\\nworld\\n2\\nabc\\n3\\ndef\\n') == '2\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n\nassert solution(stdin='1\\n') == '0\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n\nassert solution(stdin='100\\n') == '0\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(solution(input(\"\"))) == 0, \"Expected zero length string\"\nassert solution(solution(input(\"\")) + \"a\" + solution(input(\"\")) + \"b\" + solution(input(\"\")) + \"c\" + solution(input(\"\")) + \"d\" + solution(input(\"\")) + \"e\" + solution(input(\"\")) + \"f\" + solution(input(\"\")) + \"g\" + solution(input(\"\")) + \"h\" + solution(input(\"\")) + \"i\" + solution(input(\"\")) + \"j\" + solution(input(\"\")) + \"k\" + solution(input(\"\")) + \"l\" + solution(input(\"\")) + \"m\" + solution(input(\"\")) + \"n\" + solution(input(\"\")) + \"o\" + solution(input(\"\")) + \"p\" + solution(input(\"\")) + \"q\" + solution(input(\"\")) + \"r\" + solution(input(\"\")) + \"s\" + solution(input(\"\")) + \"t\" + solution(input(\"\")) + \"u\" + solution(input(\"\")) + \"v\" + solution(input(\"\")) + \"w\" + solution(input(\"\")) + \"x\" + solution(input(\"\")) + \"y\" + solution(input(\"\")) + \"z\") == 3, \"Expected three unique strings\""
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == sample_output1, \"The solution should return the correct output for the given input.\"\nassert solution(sample_input2) == sample_output2, \"The solution should return the correct output for the given input.\""
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('11\\nsabcabcfabc') == 3\nassert solution('18\\ntrutrutiktiktappop') == 4"
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input1) == expected_output1, f\"Test Case 1 failed. Expected {expected_output1}, got {solution(sample_input1)}\"\nassert solution(sample_input2) == expected_output2, f\"Test Case 2 failed. Expected {expected_output2}, got {solution(sample_input2)}\""
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r')) == '3'\nassert solution(open('sample_input.txt', 'r')) == '3'"
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"3\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"4\""
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    '''\n    11\n    sabcabcfabc\n    18\n    trutrutiktiktappop\n    '''\n) == '4\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'"
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Test failed: {solution(input())}!= {output}\""
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('11\\nsabcabcfabc') == '3'\nassert solution('18\\ntrutrutiktiktappop') == '4'"
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n2 3 1\\n3 1 2') == '2\\n'\nassert solution('6\\n5 1 6 3 2 4\\n4 6 5 1 3 2') == '5\\n'"
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n2 3 1\\n3 1 2') == '2'\nassert solution('6\\n5 1 6 3 2 4\\n4 6 5 1 3 2') == '5'"
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n2 3 1\\n3 1 2\") == \"2\\n\", \"Test 1 failed\"\nassert solution(\"6\\n5 1 6 3 2 4\\n4 6 5 1 3 2\") == \"5\\n\", \"Test 2 failed\""
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n2 3 1\\n3 1 2\") == 2\nassert solution(\"6\\n5 1 6 3 2 4\\n4 6 5 1 3 2\") == 5"
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n2 3 1\\n3 1 2\") == 2\nassert solution(\"6\\n5 1 6 3 2 4\\n4 6 5 1 3 2\") == 5"
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n2 3 1\\n3 1 2\\n\") == \"2\"\nassert solution(\"6\\n5 1 6 3 2 4\\n4 6 5 1 3 2\\n\") == \"5\""
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt').readline()) == '2\\n'\n\nSolution:\nTo solve this problem, we can use a brute force approach. We will take the new positions of each card as input and then check how many shuffles it will take for each position. We can then return the minimum number of shuffles.\n\nLet's start by writing the code to solve the problem:\n\n```python\n"
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n2 3 1\\n3 1 2\") == \"2\\n\"\nassert solution(\"6\\n5 1 6 3 2 4\\n4 6 5 1 3 2\") == \"5\\n\""
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n2 3 1\\n3 1 2') == 2\nassert solution('6\\n5 1 6 3 2 4\\n4 6 5 1 3 2') == 5"
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n2 3 1\\n3 1 2\") == 2\nassert solution(\"6\\n5 1 6 3 2 4\\n4 6 5 1 3 2\") == 5"
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"4\"\n"
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\\n0 10 20\\n0 10\") == \"4\\n\"\nassert solution(\"6 1\\n0 10 20 26 40 50\\n0 40\") == \"9\\n\""
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == \"4\", \"Sample Input 1\"\nassert solution(sample_input2) == \"9\", \"Sample Input 2\""
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1\\n0 10 20\\n0 10\") == 4\nassert solution(\"6 1\\n0 10 20 26 40 50\\n0 40\") == 9"
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3 1\n0 10 20\n0 10\n\"\"\") == \"4\"\nassert solution(\"\"\"\n6 1\n0 10 20 26 40 50\n0 40\n\"\"\") == \"9\""
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"Output\"  # Write the correct code for the solution."
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"4\\n\"  # example output"
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1\\n0 10 20\\n0 10\\n\") == \"4\"\nassert solution(\"6 1\\n0 10 20 26 40 50\\n0 40\\n\") == \"9\""
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1\\n0 10 20\\n0 10\\n\") == \"4\"\nassert solution(\"6 1\\n0 10 20 26 40 50\\n0 40\\n\") == \"9\""
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"Output: 4\\n\", \"Test failed\"\nprint(\"Test passed\")"
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\\nshuffle([1,2,1,2])\") == \"not equal\"\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\\n[1,2,3,4,5,6]\") == \"equal\""
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('concat(shuffle([1,2]),shuffle([1,2]))\\nshuffle([1,2,1,2])') == 'not equal'\nassert solution('sorted(concat([3,2,1],[4,5,6]))\\n[1,2,3,4,5,6]') == 'equal'"
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\\nshuffle([1,2,1,2])\") == \"not equal\"\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\\n[1,2,3,4,5,6]\") == \"equal\"\nassert solution(\"def solution(stdin: str) -> str:\\n    pass\\n\") == \"not equal\""
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\\nshuffle([1,2,1,2])\") == \"not equal\"\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\\n[1,2,3,4,5,6]\") == \"equal\"\n"
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\\nshuffle([1,2,1,2])\\n\") == \"not equal\"\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\\n[1,2,3,4,5,6]\\n\") == \"equal\""
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\\nshuffle([1,2,1,2])\\n\") == \"not equal\\n\"\n\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\\n[1,2,3,4,5,6]\\n\") == \"equal\\n\"\n\nassert solution(\"def solution(stdin: str) -> str:\\n    pass\\n\\n\") == \"not equal\\n\""
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\") == \"not equal\"\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\") == \"equal\""
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\\nshuffle([1,2,1,2])\") == \"equal\"\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\\n[1,2,3,4,5,6]\") == \"equal\""
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\\nshuffle([1,2,1,2])\") == \"not equal\", \"Test 1 failed\"\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\\n[1,2,3,4,5,6]\") == \"equal\", \"Test 2 failed\""
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\\nshuffle([1,2,1,2])\") == \"not equal\"\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\\n[1,2,3,4,5,6]\") == \"equal\""
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input1) == 'Oh no'\nassert solution(sample_input2) == '1'"
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 2\\n3 2\\n1 2 1 2\\n2 3 1 2') == 'Oh no\\n'\nassert solution('1 3\\n3 2\\n1 2 1 2\\n2 3 1 2') == '1\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n"
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n1 2\n3 2\n1 2 1 2\n2 3 1 2\n\"\"\") == \"Oh no\"\n\nassert solution(\"\"\"\n1 3\n3 2\n1 2 1 2\n2 3 1 2\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n1 3\n3 2\n1 2 1 2\n2 3 1 1\n\"\"\") == \"2\""
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    1 2\n    3 2\n    1 2 1 2\n    2 3 1 2\n    \"\"\"\n) == 'Oh no'\n\nassert solution(\n    \"\"\"\n    1 3\n    3 2\n    1 2 1 2\n    2 3 1 2\n    \"\"\"\n) == '1'\n\nassert solution(\n    \"\"\"\n    1 2\n    3 1\n    1 2 1 2\n    2 3 1 2\n    \"\"\"\n) == '1'"
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('sample_input1.txt')) == 'Oh no'\nassert solution(open('sample_input2.txt')) == '1'"
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output() for input_, output_ in zip(sample_input, sample_output)"
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 'Oh no'"
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_str=\"1 2\\n3 2\\n1 2 1 2\\n2 3 1 2\") == \"Oh no\\n\"\nassert solution(input_str=\"1 3\\n3 2\\n1 2 1 2\\n2 3 1 2\") == \"1\\ndef solution(stdin: str) -> str:\n    pass\\n\""
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"Oh no\"\nassert solution(open(\"sample_input1.txt\", \"r\")) == \"Oh no\"\nassert solution(open(\"sample_input2.txt\", \"r\")) == \"1\""
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"4 4\\n1 2 2\\n2 3 1\\n3 4 1\\n4 1 2\"\n) == 3\n\nassert solution(\n    \"5 5\\n1 2 1\\n2 3 1\\n2 4 1\\n2 5 1\\n4 5 1\"\n) == \"impossible\""
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('sample_input.txt', 'r')) == '3'\nassert solution(open('sample_input2.txt', 'r')) == 'impossible'\n\nfrom typing import List\n"
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == '3'\nassert solution(sample_input_2) == 'impossible'"
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input1) == '3'\nassert solution(input2) == 'impossible'"
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\n1 2 2\\n2 3 1\\n3 4 1\\n4 1 2\") == 3\nassert solution(\"5 5\\n1 2 1\\n2 3 1\\n2 4 1\\n2 5 1\\n4 5 1\") == \"impossible\""
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"impossible\""
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2"
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n2 1 1 1 3\\n\") == \"2\"\nassert solution(\"1\\n22\\n\") == \"4\"\n"
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2 1 1 1 3\") == \"2\\n\", \"Test 1\"\nassert solution(\"1\\n22\") == \"4\\n\", \"Test 2\""
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n2 1 1 1 3\\n') == '2'\nassert solution('1\\n22\\n') == '4'"
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''All 'work' and no 'play''' == 'All \"work\" and no \"play\"'), \"The first example should be 'All \\\"work\\\" and no \\\"play\\\"'.\"\nassert solution('''This is a string''') == 'This is a string', \"The second example should be 'This is a string'.\"\nassert solution('''abc''') == 'abc', \"The third example should be 'abc'.\"\nassert solution('''a''') == 'a', \"The fourth example should be 'a'.\"\nassert solution('''This is a string''') == 'This is a string', \"The fifth example should be 'This is a string'.\""
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output() # Add your test case here"
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Test case {test_case} failed. Expected output: {output()}, but got: {solution(input())}\"\n\ntest_case = 1\ninput_str = \"2 1 1 1 3\"\noutput = 2\nsolution(input_str)"
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2 1 1 1 3\\n1\\n22\") == \"2\"\nassert solution(\"1\\n22\") == \"4\""
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), \"Test case failed. Please check the given code and submit the correct solution.\""
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\nr\"\"\"\n5\n2 1 1 1 3\n\"\"\") == \"2\\n\"\n\nassert solution(\nr\"\"\"\n1\n22\n\"\"\") == \"4\\n\""
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n3 1 5\\n4\\n1 2 3 4\\n') == '3\\n'\nassert solution('4\\n1 2 3 4\\n') == '2\\n'"
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3 1 5\") == \"3\\n\", \"First move is not 3\"\nassert solution(\"4\\n1 2 3 4\") == \"2\\n\", \"First move is not 2\""
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"3\"\nassert solution(input()) == \"2\"\n"
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3, \"3 1 5\") == \"3\\n\"\nassert solution(4, \"1 2 3 4\") == \"2\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n3 1 5\\n\") == \"3\\n\"\nassert solution(\"4\\n1 2 3 4\\n\") == \"2\\n\""
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r').read()) == '3\\n', \"Solution should be 3.\"\nassert solution(open('input2.txt', 'r').read()) == '2\\n', \"Solution should be 2.\""
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected, f\"Test case failed: expected '{expected}', got '{solution(stdin)}'\""
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n3 1 5\") == \"3\\n\"\nassert solution(\"4\\n1 2 3 4\") == \"2\\n\""
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3, 3, 1, 5) == 3\nassert solution(4, 1, 2, 3, 4) == 2\n"
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1 5\") == \"3\"\nassert solution(\"4 1 2 3 4\") == \"2\""
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('a+b-c\\na-b+d-c') == '- +d-'\nassert solution('knuth-morris-pratt\\knuthmorrispratt') == '<any> <empty>'"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('a+b-c') == '- +d-'\nassert solution('a-b+d-c') == 'd- +c+'\nassert solution('knuth-morris-pratt') == '<any> <empty>'"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('') == '<empty>'\nassert solution('a+b-c') == '- - -'\nassert solution('a-b+d-c') == '- - -'\nassert solution('knuth-morris-pratt') == 'def <empty>'"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"a+b-c\\na-b+d-c\") == ['- +d-', '<any>']\nassert solution(\"knuth-morris-pratt\\knuthmorrispratt\") == ['<any> <empty>']\nassert solution(\"\") == ['<empty>']\nassert solution(\"a\") == ['<any>']\nassert solution(\"a+b-c\\na-b+d-c\\na+b-c\\na-b+d-c\") == ['- +d-', '<any>']\nassert solution(\"a+b-c\\na-b+d-c\\na+b-c\\na-b+d-c\\na+b-c\\na-b+d-c\\na+b-c\\na-b+d-c\\na+b-c\\na-b+d-c\\na+b-c\\na-b+d-c\\na+b-c\\na-b+d-c\\na+b-c\\na-b+d-c\\na+b-c\\na-b+d-c\\na+b-c\\na-b+d-c\\na+b-c\\na-b+d-c\\na+b-c\\na-b+d-c\\na+b-c\\na-b+d-c\\na+b-c\\na-b+d-c\\na+b-c\\na-b+d-c\\na+b-c\\na-b+d-c\\na+b-c\\na-b+d-c\\na+b-c\\na-b+d-c\\na+b-c\\na-b+d-c\\na+b-c\\na-b+d-c\\na+b-c\\na-b+d-c\\na+b-c\\na-b+d-c\\na+b-c\\na-b+d-c\\na+b-c\\na-b+d-c\\na+b-c\\na-b+d-c\\na+b-c\\na-b+d-c\\na+b-c\\na-b+d-c\\na+b-c\\na-b+d-c\\na+b-c\\na-b+d-c\\na+b-c\\na-b+d-c\\na+b-c\\na-b+d-c\\na+b-c\\na-b+d-c\\na+b-c\\na-b+d-c\\na+b-c\\na-b+d-c\\na+b-c\\na-b+d-c\\na+b-c\\na-b+d-c\\na+b-c\\na-b+d-c\\na+b-c\\na-b+d-c\\na+b-c\\na-b+d-c\\na+b-c\\na-b+d-c\\na+b-c\\na-b+d-c\\na+b-c\\na-b+d-c\\na+b-c\\na-b+d-c\\na+b-c\\na-b+d-c\\na+b-c\\na-b+d-c\\na+b-c\\na-b+d-c\\na+b-c\\na-b+d-c\\na+b-c\\na-b+d-c\\na+b-c\\na-b+d-c\\na+b-c\\na-b+d-c\\na+b-c\\na-b+d-c\\na+b-c\\na-b+d-c\\na+b-c\\na-b+d-c\\na+b-c\\na-b+d-c\\na+b-c\\na-b+d-c\\na+b-c\\na-b+d-c\\na+b-c\\na-b+d-c\\na+b-c\\na-b+d-c\\na+b-c\\na-b+d-c\\na+b-c\\na-b+d-c\\na+b-c\\na-b+d-c\\na+b-c\\na-b+d-c\\na+b-c\\na-b+d-c\\na+b-c\\na-b+d-c\\na+b-c\\"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output() for input, output in [\n    (\"a+b-c\", \"- +d-\"),\n    (\"knuth-morris-pratt\", \"def <empty>\"),\n    (\"knuthmorrispratt\", \"<any> <empty>\"),\n]"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"a+b-c\") == \"- +d-\"\nassert solution(\"knuth-morris-pratt\") == \"<any> <empty>\"\n\nfrom typing import List"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"a+b-c\") == [\"-+d-\"]\nassert solution(\"a-b+d-c\") == [\"-+d-\"]\nassert solution(\"knuth-morris-pratt\") == [\"<any>\", \"<empty>\"]"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('a+b-c\\na-b+d-c') == ['- +d-', '<any> <empty>']\nassert solution('knuth-morris-pratt\\knuthmorrispratt') == ['<any> <empty>']"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"a+b-c\\na-b+d-c\") == [\"- +d-\", \"<any>\"]\nassert solution(\"knuth-morris-pratt\\knuthmorrispratt\") == [\"<any> <empty>\"]"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"a+b-c\\na-b+d-c\") == \"- +d-\"\n\nassert solution(\"knuth-morris-pratt\\knuthmorrispratt\") == \"<any> <empty>\""
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1\\n0\\n7\\nt 0\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\n\") == \"0\\n1\\n3\\n2\\n3\\n5\\n3\\n\"\nassert solution(\"3 0\\n2 6 6\\n10\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\nt 7\\nt 8\\nt 9\\nt 10\\n\") == \"11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\\n\""
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 1\\n0\\n7\\nt 0\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\n') == '0\\n1\\n3\\n2\\n3\\n5\\n3\\n'\nassert solution('3 0\\n2 6 6\\n10\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\nt 7\\nt 8\\nt 9\\nt 10\\n') == '11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\\n'\n"
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '''0\n1\n3\n2\n3\n5\n3\n'''"
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"1 1\\n0\\n7\\nt 0\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\n\"\n) == \"0\\n1\\n3\\n2\\n3\\n5\\n3\\n\"\n\nassert solution(\n    \"3 0\\n2 6 6\\n10\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\nt 7\\nt 8\\nt 9\\nt 10\\n\"\n) == \"11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\\n0\\n7\\nt 0\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\n\") == \"0\\n1\\n3\\n2\\n3\\n5\\n3\\n\"\nassert solution(\"3 0\\n2 6 6\\n10\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\nt 7\\nt 8\\nt 9\\nt 10\\n\") == \"11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\\n\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == expected_output_1, \"Test 1 failed\"\nassert solution(sample_input_2) == expected_output_2, \"Test 2 failed\""
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1\\n0\\n7\\nt 0\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\") == \"0\\n1\\n3\\n2\\n3\\n5\\n3\\n\"\nassert solution(\"3 0\\n2 6 6\\n10\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\nt 7\\nt 8\\nt 9\\nt 10\") == \"11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\"\n\nassert solution(\"1 1\\n0\\n7\\nt 0\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\") == \"0\\n1\\n3\\n2\\n3\\n5\\n3\\n\"\nassert solution(\"3 0\\n2 6 6\\n10\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\nt 7\\nt 8\\nt 9\\nt 10\") == \"11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\""
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n    1 1\n    0\n    7\n    t 0\n    t 1\n    t 2\n    t 3\n    t 4\n    t 5\n    t 6\n''') == '0\\n1\\n3\\n2\\n3\\n5\\n3\\n'\n\nassert solution('''\n    3 0\n    2 6 6\n    10\n    t 1\n    t 2\n    t 3\n    t 4\n    t 5\n    t 6\n    t 7\n    t 8\n    t 9\n    t 10\n''') == '11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\\n'"
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=input()) == output, f\"Test failed. Got: {solution(stdin=input())}, expected: {output}\""
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 8\\n1 2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1\") == \"2\\n4 6\"\nassert solution(\"5 6\\n1 2 2\\n2 3 2\\n3 5 2\\n1 4 3\\n4 5 3\\n1 5 6\") == \"0\""
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '2\\n4 6\\n'"
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('test_input.txt')) == '2\\n4 6'\nassert solution(open('test_input.txt', 'r')) == '2\\n4 6'"
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1\") == \"2\\n4 6\"\nassert solution(\"1 2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1\") == \"2\\n4 6\"\nassert solution(\"1 2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1\") == \"2\\n4 6\""
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '2\\n4 6'"
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(str(input())) == 'Output 1: 2\\nOutput 2: 0'"
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1\") == [\"2\"]\nassert solution(\"5\\n1 2 2\\n2 3 2\\n3 5 2\\n1 4 3\\n4 5 3\\n1 5 6\") == [\"0\"]"
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1\") == \"2\\n4 6\"\nassert solution(\"5 6\\n1 2 2\\n2 3 2\\n3 5 2\\n1 4 3\\n4 5 3\\n1 5 6\") == \"0\""
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('7 8\\n1 2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1') == '2\\n4 6'\nassert solution('5 6\\n1 2 2\\n2 3 2\\n3 5 2\\n1 4 3\\n4 5 3\\n1 5 6') == '0'"
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(str(12)) == '4\\n5\\n6\\n1\\n2\\n3\\n'\nassert solution(str(6)) == '1\\n2\\n3\\n'"
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected_output"
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == {\n    # Example 1\n    \"\"\"\n    12\n    1 1\n    1 2\n    1 3\n    1 1\n    1 2\n    1 3\n    2 1\n    2 2\n    2 3\n    2 4\n    2 5\n    2 6\n    \"\"\"\n    \"4\\n5\\n6\\n1\\n2\\n3\\n\": \"4\\n5\\n6\\n1\\n2\\n3\\n\",\n\n    # Example 2\n    \"\"\"\n    6\n    1 1\n    1 2\n    1 3\n    2 1\n    2 2\n    2 3\n    \"\"\"\n    \"1\\n2\\n3\\n\"\n}"
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution"
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"12\\n1 1\\n1 2\\n1 3\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n2 6\") == \"4\\n5\\n6\\n1\\n2\\n3\\n\""
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"12\") == \"4\\n5\\n6\\n1\\n2\\n3\\n\"\nassert solution(\"6\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n\") == \"1\\n2\\n3\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution.__name__ == \"solution\"\n"
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution"
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '''\n4\n5\n6\n1\n2\n3\n'''"
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == \"4\\n5\\n6\\n1\\n2\\n3\\n\"\nassert solution(2) == \"1\\n2\\n3\\n\"\nassert solution(3) == \"1\\n2\\n3\\n\"\nassert solution(4) == \"4\\n5\\n6\\n1\\n2\\n3\\n\"\nassert solution(5) == \"5\\n6\\n1\\n2\\n3\\n\"\nassert solution(6) == \"6\\n1\\n2\\n3\\n\"\nassert solution(7) == \"4\\n5\\n6\\n1\\n2\\n3\\n\"\nassert solution(8) == \"5\\n6\\n1\\n2\\n3\\n\"\nassert solution(9) == \"6\\n1\\n2\\n3\\n\"\nassert solution(10) == \"1\\n2\\n3\\n\"\nassert solution(11) == \"2\\n3\\n1\\n\"\nassert solution(12) == \"3\\n1\\n2\\n\"\nassert solution(13) == \"1\\n2\\n3\\n\"\nassert solution(14) == \"2\\n3\\n1\\n\"\nassert solution(15) == \"3\\n1\\n2\\n\"\nassert solution(16) == \"1\\n2\\n3\\n\"\nassert solution(17) == \"2\\n3\\n1\\n\"\nassert solution(18) == \"3\\n1\\n2\\n\"\nassert solution(19) == \"1\\n2\\n3\\n\"\nassert solution(20) == \"2\\n3\\n1\\n\"\nassert solution(21) == \"3\\n1\\n2\\n\"\nassert solution(22) == \"1\\n2\\n3\\n\"\nassert solution(23) == \"2\\n3\\n1\\n\"\nassert solution(24) == \"3\\n1\\n2\\n\"\nassert solution(25) == \"1\\n2\\n3\\n\"\nassert solution(26) == \"2\\n3\\n1\\n\"\nassert solution(27) == \"3\\n1\\n2\\n\"\nassert solution(28) == \"1\\n2\\n3\\n\"\nassert solution(29) == \"2\\n3\\n1\\n\"\nassert solution(30) == \"3\\n1\\n2\\n\"\nassert solution(31) == \"1\\n2\\n3\\n\"\nassert solution(32) == \"2\\n3\\n1\\n\"\nassert solution(33) == \"3\\n1\\n2\\n\"\nassert solution(34) == \"1\\n2\\n3\\n\"\nassert solution(35) == \"2\\n3\\n1\\n\"\nassert solution(36) == \"3\\n1\\n2\\n\"\nassert solution(37) == \"1\\n2\\n3\\n\"\nassert solution(38) == \"2\\n3\\n1\\n\"\nassert solution(39) == \"3\\n1\\n2\\n\"\nassert solution(40) == \"1\\n2\\n3\\n\"\nassert solution(41) == \"2\\n3\\n1\\n\"\nassert solution(42) == \"3\\n1\\n2\\n\"\nassert solution(43) == \"1\\n2\\n3\\n\"\nassert solution(44) == \"2\\n3\\n1\\n\"\nassert solution(45) == \"3\\n1\\n2\\n\"\nassert solution(46) == \"1\\n2\\n3\\n\"\nassert solution(47) == \"2\\n3\\n1\\n\"\nassert solution(48) == \"3\\n1\\n2\\n\"\nassert solution(49) == \"1\\n2\\n3\\n\"\nassert solution(50) == \"2\\n3\\n1\\n\"\nassert solution(51) == \"3\\n1\\n2\\n\"\nassert solution(52) == \"1\\n2\\n3\\n\"\nassert solution"
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"CPCC\") == \"1\", \"Invalid output: 1\"\nassert solution(\"PPPPCCCC\") == \"8\", \"Invalid output: 8\""
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('CPCC') == '1', \"Incorrect output for example 1\"\nassert solution('PPPPCCCC') == '8', \"Incorrect output for example 2\""
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"PPPPCCCC\") == 8, \"Expected output 8, but got {}\".format(solution(\"PPPPCCCC\"))"
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"CPCC\") == \"1\"\nassert solution(\"PPPPCCCC\") == \"8\""
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"PPPPCCCC\") == \"8\""
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"CPCC\") == \"1\"\nassert solution(\"PPPPCCCC\") == \"8\""
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"CPCC\") == \"1\"\nassert solution(\"PPPPCCCC\") == \"8\""
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('CPCC') == 1\nassert solution('PPPPCCCC') == 8"
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('CPCC') == '1'\nassert solution('PPPPCCCC') == '8'"
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"CPCC\") == 1\nassert solution(\"PPPPCCCC\") == 8"
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2 1\\n1 2\\n2 3\\n2\") == [1, 2, 3]\nassert solution(\"3 2 1\\n1 3\\n2 3\\n3\") == [3]\nassert solution(\"3 2 1\\n1 4\\n2 3\\n3\") == []"
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, but got: {solution(stdin)}\""
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2 1\\n1 2\\n2 3\\n2\\n\") == [\"1 2 3\"]\nassert solution(\"3 2 1\\n1 3\\n2 3\\n3\\n\") == [\"3\"]\nassert solution(\"3 2 1\\n1 2\\n2 3\\n4\\n\") == [\"1 2 3\"]\n"
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '1 2 3\\n'"
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == expected, f\"Expected {expected}, got {solution()}\""
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1\\n3\\n2\\n1\\n2\\n3') == '1 2 3'\nassert solution('2\\n2\\n3\\n3\\n1') == '2 3'\nassert solution('3\\n1\\n3\\n1\\n2\\n2\\n1\\n3\\n3\\n2') == '3'\nassert solution('5\\n5\\n5\\n5\\n5') == ''"
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == [\"1 2 3\"]"
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\""
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), \"Expected output: {}\\nGot: {}\".format(output(), solution(input()))"
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input) == output, f\"Test failed for input: {input}, expected output: {output}, received output: {solution(input)}\""
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n2 4 2 3 4\") == 39\nassert solution(\"5 1\\n1 0 1 1 1\") == 4\n"
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n2 4 2 3 4\\n\") == \"39\"\nassert solution(\"5 1\\n1 0 1 1 1\\n\") == \"4\""
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution"
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n2 4 2 3 4\\n\") == \"39\"\nassert solution(\"5 1\\n1 0 1 1 1\\n\") == \"4\""
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"5 3\n   2 4 2 3 4\"\"\"\n) == 39\n\nassert solution(\n    \"\"\"5 1\n   1 0 1 1 1\"\"\"\n) == 4"
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"39\"\nassert solution(open(\"example1.txt\", \"r\").read()) == \"39\"\nassert solution(open(\"example2.txt\", \"r\").read()) == \"4\""
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n2 4 2 3 4\") == \"39\", \"The solution is incorrect\"\nassert solution(\"5 1\\n1 0 1 1 1\") == \"4\", \"The solution is incorrect\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n2 4 2 3 4\") == \"39\\n\"\nassert solution(\"5 1\\n1 0 1 1 1\") == \"4\\n\""
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == sample_output, f\"Expected {sample_output}, got {solution(sample_input)}\""
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"39\"\nassert solution(open(\"input2.txt\", \"r\").read()) == \"4\""
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\nxx.\\nxxx\\n...\\n4 6\\nxx....\\nxx.xxx\\n...xxx\\n...xxx\\n\") == \"1 1 2\\n2 4 3\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\nxx.\\nxxx\\n...\\n4 6\\nxx....\\nxx.xxx\\n...xxx\\n...xxx\\n\") == \"1 1 2\\n2 4 3\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"\n"
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n3 3\nxx.\nxxx\n...\n''') == '1 1 2\\n2 3 1'\n\nassert solution('''\n4 6\nxx....\nxx.xxx\n...xxx\n...xxx\n''') == '1 1 2\\n2 4 3\\ndef solution(stdin: str) -> str: \\n    pass'"
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"sample_input_1.txt\", \"r\")) == \"1 1 2\\n2 3 1\\n\"\nassert solution(open(\"sample_input_2.txt\", \"r\")) == \"1 1 2\\n2 4 3\\ndef solution(stdin: str) -> str:\n    pass\""
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '1 1 2\\n2 3 1'\nassert solution() == '1 1 2\\n2 4 3'"
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1 1 2\\n2 3 1\\n\""
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 3\\nxx.\\nxxx\\n...\\n4 6\\nxx....\\nxx.xxx\\n...xxx\\n...xxx') == '1 1 2\\n2 4 3\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nprint(solution(stdin))\\n'"
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\nxx.\\nxxx\\n...\\n\") == \"1 1 2\\n2 3 1\\n\"\nassert solution(\"4 6\\nxx....\\nxx.xxx\\n...xxx\\n...xxx\\n\") == \"1 1 2\\n2 4 3\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\nxx.\\nxxx\\n...\\n\") == \"1 1 2\\n2 3 1\"\nassert solution(\"4 6\\nxx....\\nxx.xxx\\n...xxx\\n...xxx\\n\") == \"1 1 2\\n2 4 3\""
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 3\\nxx.\\nxxx\\n...\\n') == '1 1 2\\n2 3 1\\n'\nassert solution('4 6\\nxx....\\nx.xxx\\n...xxx\\n...xxx\\n') == '1 1 2\\n2 4 3\\ndef solution(stdin: str) -> str:\\n    pass'\n"
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3 1 2\n1 2 1\n0 2 0\n0 1 0\n\"\"\") == \"indistinguishable\"\n\nassert solution(\"\"\"\n2 0 1\n1 1 1\n0 0 0\n\"\"\") == \"0\""
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 1 2\\n1 2 1\\n0 2 0\\n0 1 0') == 'indistinguishable\\n'\nassert solution('2 0 1\\n1 1 1\\n0 0 0') == '0\\n'"
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1 2\\n1 2 1\\n0 2 0\\n0 1 0\") == \"indistinguishable\"\nassert solution(\"2 0 1\\n1 1 1\\n0 0 0\") == \"0\""
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Solution mismatch. Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 1 2\\n1 2 1\\n0 2 0\\n0 1 0') == 'indistinguishable\\n'\nassert solution('2 0 1\\n1 1 1\\n0 0 0') == '0\\n'"
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"indistinguishable\"\nassert solution() == \"0\""
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1 2\\n1 2 1\\n0 2 0\\n0 1 0\") == \"indistinguishable\\n\"\nassert solution(\"2 0 1\\n1 1 1\\n0 0 0\") == \"0\\n\""
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 1 2\\n1 2 1\\n0 2 0\\n0 1 0') == 'indistinguishable\\n'\n\nassert solution('2 0 1\\n1 1 1\\n0 0 0') == '0\\n'"
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1 2\\n1 2 1\\n0 2 0\\n0 1 0\") == \"indistinguishable\"\nassert solution(\"2 0 1\\n1 1 1\\n0 0 0\") == \"0\""
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1 2\\n1 2 1\\n0 2 0\\n0 1 0\") == \"indistinguishable\"\nassert solution(\"2 0 1\\n1 1 1\\n0 0 0\") == \"0\""
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0110\\n1001\") == \"1111\\n0111\\n1110\\n1111\""
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0110\\n1001\") == \"1111\\n0111\\n1110\\n1111\"\nassert solution(\"0\\n1\") == \"-1\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('0110\\n1001') == '1111\\n0111\\n1110\\n1111'\n\nassert solution('0') == '-1'"
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Your solution is incorrect. Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0110\") == \"1111\\n0111\\n1110\\n1111\"\nassert solution(\"0\") == \"-1\""
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Test case {test_case_count} failed. Expected output: {output()}, Got: {solution(input())}\""
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0110\\n1001\") == \"1111\\n0111\\n1110\\n1111\"\nassert solution(\"0\\n1\") == \"-1\""
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0110\\n1001\") == \"1111\\n0111\\n1110\\n1111\"\nassert solution(\"0\\n1\") == \"-1\""
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0110\\n1001\") == \"1111\\n0111\\n1110\\n1111\"\nassert solution(\"0\\n1\") == \"-1\"\n"
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Solution does not match expected result\\nInput: {input()}\\nExpected Output: {expected}\\nSolution: {solution(input())}\"\n"
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('10000') == '+0000'\nassert solution('1111') == '+000-'\n"
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10000\") == \"+0000\"\nassert solution(\"1111\") == \"+000-\"\n\nfrom typing import List"
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10000\") == \"+0000\"\nassert solution(\"1111\") == \"+000-\""
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10000\") == \"+0000\"\nassert solution(\"1111\") == \"+000-\""
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, \"The function should return the expected output, but instead it returned '{}'.\".format(solution(input()))"
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10000\") == \"+0000\"\nassert solution(\"1111\") == \"+000-\"\n"
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(10000) == '+0000'\nassert solution(1111) == '+000-'"
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10000\") == \"+0000\"\nassert solution(\"1111\") == \"+000-\""
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10000\") == \"+0000\"\nassert solution(\"1111\") == \"+000-\""
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10000\") == \"+0000\"\nassert solution(\"1111\") == \"+000-\""
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"9\"\n"
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == expected\n"
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"9\", \"Testcase 1 failed\"\n\nassert solution(input()) == \"2\", \"Testcase 2 failed\""
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == \"9\", \"Test 1 failed\"\nassert solution(sample_input2) == \"2\", \"Test 2 failed\""
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 8 3 2\\n1 2\\n7 3 4\\n5 6\\n1 3 2\\n1 4 1\\n1 5 1\\n1 6 6\\n2 3 9\\n2 4 2\\n2 6 4\\n7 6 5\") == \"9\"\nassert solution(\"2 1 1 1\\n2 2\\n1\\n1\\n1 2 1\") == \"2\""
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"9\\n\"\n"
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 8 3 2\\n1 2\\n7 3 4\\n5 6\\n1 3 2\\n1 4 1\\n1 5 1\\n1 6 6\\n2 3 9\\n2 4 2\\n2 6 4\\n7 6 5\") == \"9\", \"Test case 1 failed\"\n\nassert solution(\"2 1 1 1\\n2 2\\n1\\n1\\n1 2 1\\n\") == \"2\", \"Test case 2 failed\""
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n7 8 3 2\n1 2\n7 3 4\n5 6\n1 3 2\n1 4 1\n1 5 1\n1 6 6\n2 3 9\n2 4 2\n2 6 4\n7 6 5\n''') == '9'"
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"9\\n\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Output\""
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 3 1\\n2 2\\n1 1 R\\n010\\n000\\n000') == '2'\nassert solution('3 4 2\\n2 2\\n3 4 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301') == '7'"
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt').read()) == '2\\n'\n"
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n    3 3 1\n    2 2\n    1 1 R\n    010\n    000\n    000''') == 2\n\nassert solution('''\n    3 4 2\n    2 2\n    3 4 R\n    2327\n    6009\n    2112\n    3 2 R\n    1310\n    2101\n    1301''') == 7\n\nassert solution('''\n    5 5 3\n    2 3\n    4 1\n    3 5 R\n    1111\n    2222\n    2222\n    1111\n    3333\n    4444\n    5555\n    1111\n    2222\n    3333\n    4444\n    5555\n    6666\n    7777\n    8888\n    9999\n    1111\n    2222\n    3333\n    4444\n    5555\n    6666\n    7777\n    8888\n    9999\n    1111\n    2222\n    3333\n    4444\n    5555\n    6666\n    7777\n    8888\n    9999\n    1111\n    2222\n    3333\n    4444\n    5555\n    6666\n    7777\n    8888\n    9999\n    1111\n    2222\n    3333\n    4444\n    5555\n    6666\n    7777\n    8888\n    9999\n    1111\n    2222\n    3333\n    4444\n    5555\n    6666\n    7777\n    8888\n    9999\n    1111\n    2222\n    3333\n    4444\n    5555\n    6666\n    7777\n    8888\n    9999\n    1111\n    2222\n    3333\n    4444\n    5555\n    6666\n    7777\n    8888\n    9999\n    1111\n    2222\n    3333\n    4444\n    5555\n    6666\n    7777\n    8888\n    9999\n    1111\n    2222\n    3333\n    4444\n    5555\n    6666\n    7777\n    8888\n    9999\n    1111\n    2222\n    3333\n    4444\n    5555\n    6666\n    7777\n    8888\n    9999\n    1111\n    2222\n    3333\n    4444\n    5555\n    6666\n    7777\n    8888\n    9999\n    1111\n    2222\n    3333\n    4444\n    5555\n    6666\n    7777\n    8888\n    9999\n    1111\n    2222\n    3333\n    4444\n    5555\n    6666\n    7777\n    8888\n    9999\n    1111\n    2222\n    3333\n    4444\n    5555\n    6666\n    7777\n    8888\n    9999\n    1111\n    2222\n    3333\n    4444\n    5555\n    6666\n    7777\n    8888\n    9999\n    1111\n    2222\n    3333\n    4444\n    5555\n    6666\n    7777\n    8888\n    9999\n    1111\n    2222\n    3333\n    4444\n    5555\n    6666\n    7777\n    8888\n    9999\n    1111\n    2222\n    3333\n    4444\n    5555\n    6666\n    7777\n    8888\n    9999\n    1111\n    2222\n    3333\n    4"
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input) == expected, f\"Test case {case_num} failed\""
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3 1\\n2 2\\n1 1 R\\n010\\n000\\n000\") == 2\nassert solution(\"3 4 2\\n2 2\\n3 4 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301\") == 7"
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3 1\\n2 2\\n1 1 R\\n010\\n000\\n000\") == 2\nassert solution(\"3 4 2\\n2 2\\n3 4 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301\") == 7\nassert solution(\"3 3 1\\n2 2\\n1 1 R\\n010\\n000\\n000\") == -1"
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 3 1\\n2 2\\n1 1 U\\n010\\n000\\n000') == '2'\nassert solution('3 4 2\\n2 2\\n3 4 U\\n2327\\n6009\\n2112\\n3 2 U\\n1310\\n2101\\n1301') == '7'"
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3 1\\n2 2\\n1 1 R\\n010\\n000\\n000\") == 2\nassert solution(\"3 4 2\\n2 2\\n3 4 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301\") == 7"
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 3 1\\n2 2\\n1 1 R\\n010\\n000\\n000') == 2\nassert solution('3 4 2\\n2 2\\n3 4 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301') == 7"
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"2\\n\"\nassert solution(open(\"input2.txt\", \"r\").read()) == \"7\\n\""
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n2 2 1 2 3\\n\") == \"2\\n\"\nassert solution(\"8\\n1 2 4 1 1 2 5 1\\n\") == \"4\\n\""
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2\\n\"\n"
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\n2 2 1 2 3\\n') == '2\\n'\nassert solution('8\\n1 2 4 1 1 2 5 1\\n') == '4\\n'"
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == '2\\n'"
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2 1 2 3\") == \"2\"\nassert solution(\"8 1 2 4 1 1 2 5 1\") == \"4\""
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"2\", \"Sample Input 1\"\nassert solution(input()) == \"4\", \"Sample Input 2\""
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n2 2 1 2 3\\n\") == 2\nassert solution(\"8\\n1 2 4 1 1 2 5 1\\n\") == 4"
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"2\\n\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"2\\n\""
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2 2 1 2 3\") == \"2\\n\"\nassert solution(\"8\\n1 2 4 1 1 2 5 1\") == \"4\\n\""
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin: str) == \"NE\\nNE\\nNE\""
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected, f\"Sample Input {index + 1}, expected output: '{expected}', but got: '{solution(stdin)}'\" for index, (stdin, expected) in enumerate(test_cases)"
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"D 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3\\n\") == [\"NE\", \"NE\", \"NE\", \"3\", \"1\", \"3\"]\nassert solution(\"D 8 8\\nD 2 4\\nD 5 6\\nP 2\\nD 6 2\\nP 4\\n\") == [\"3\", \"1\", \"def solution(stdin: str) -> str:\", \"2\", \"4\", \"6\"]"
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"NE\"\nassert solution() == \"NE\"\nassert solution() == \"NE\"\nassert solution() == \"1\"\nassert solution() == \"2\"\nassert solution() == \"3\""
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed: expected {expected_output}, got {solution(stdin)}\""
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == [\"NE\", \"NE\", \"NE\"] # Example 1"
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\nD 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3\") == [\"NE\", \"NE\", \"NE\"]"
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"D 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3\") == \"NE\\nNE\\nNE\"\nassert solution(\"D 8 8\\nD 2 4\\nD 5 6\\nP 2\\nD 6 2\\nP 4\") == \"3\\n1\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=open(\"input.txt\", \"r\")) == expected\nprint(\"All tests passed\")"
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2 1 10\\n0 0\\n1 4\\n3 2\") == \"2\"\nassert solution(\"2 3 5 6\\n1 1\\n1 1 6\\n1 2 2\") == \"5\""
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2\"\nassert solution() == \"5\""
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2 1 10\\n0 0\\n1 4\\n3 2\") == \"2\"\nassert solution(\"2 3 5 6\\n1 1\\n1 1 6\\n1 2 2\") == \"5\"\n\nfrom typing import List"
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2\", \"Test case 1 failed\"\n\nassert solution() == \"5\", \"Test case 2 failed\"\n\nfrom typing import List"
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n2 2 1 10\n0 0\n1 4\n3 2\n''') == '2'\n\nassert solution('''\n2 3 5 6\n1 1\n1 1 6\n1 2 2\n''') == '5'"
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2 1 10\\n0 0\\n1 4\\n3 2\") == \"2\"\nassert solution(\"2 3 5 6\\n1 1\\n1 1 6\\n1 2 2\") == \"5\""
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2\""
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Testcase {i+1} failed: got {solution(input())}, expected {expected_output}\""
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 2 1 10\\n0 0\\n1 4\\n3 2') == 2\nassert solution('2 3 5 6\\n1 1\\n1 1 6\\n1 2 2') == 5"
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\\n\", \"Solution should return '2', but returned 'None'\""
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == '''2.0000000000'''"
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1.0 0.0 1.4\\n-1.0 0.0 -1.4\\n0.0 1.0 -0.2\") == \"2.0000000000\"\nassert solution(\"5\\n1.4 1.0 0.0\\n-0.4 -1.0 0.0\\n-0.1 -0.25 -0.5\\n-1.2 0.0 0.9\\n0.2 0.5 0.5\") == \"2.0000000000\""
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\""
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(str(3)) == \"2.0\"\nassert solution(str(5)) == \"2.0\""
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1.0 0.0 1.4\\n-1.0 0.0 -1.4\\n0.0 1.0 -0.2\") == \"2.0000000000\"  # Correct answer\nassert solution(\"1.4 1.0 0.0\\n-0.4 -1.0 0.0\\n-0.1 -0.25 -0.5\\n-1.2 0.0 0.9\\n0.2 0.5 0.5\") == \"2.0000000000\"  # Correct answer\nassert solution(\"1.0 0.0 -1.4\\n0.0 -1.4 1.4\\n0.0 0.0 -1.4\") == \"1.0000000000\"  # Correct answer\nassert solution(\"0.0 1.0 -0.2\\n0.0 -1.0 1.0\\n-1.0 0.0 -1.4\") == \"1.0000000000\"  # Correct answer\nassert solution(\"0.0 1.0 -0.2\\n0.0 -1.0 1.0\\n-1.0 0.0 -1.4\\n0.0 1.0 -1.4\\n0.0 -1.0 1.0\") == \"2.0000000000\"  # Correct answer"
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 2.0000000000, \"The solution is incorrect\""
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2.0000000000\""
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"2.0000000000\", \"Test 1 failed\"\nassert solution() == \"2.0000000000\", \"Test 2 failed\""
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n1.0 0.0 1.4\\n-1.0 0.0 -1.4\\n0.0 1.0 -0.2\\n2\") == 2.0\nassert solution(\"2\\n1.4 1.0 0.0\\n-0.4 -1.0 0.0\\n-0.1 -0.25 -0.5\\n-1.2 0.0 0.9\\n0.2 0.5 0.5\") == 2.0"
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2.0000000000\\n\", \"Test case 1 failed\"\n\nfrom typing import List"
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 9 5\") == \"1\\n5\"\nassert solution(\"1 100 10\") == \"9\\n19\"\n\nfrom typing import List"
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 9 5\\n1 100 10\") == \"1\\n9\\n19\"\nassert solution(\"1 101 5\\n1 101 10\") == \"1\\n101\\n101\"\nassert solution(\"2 3 5\\n2 3 7\") == \"2\\n3\"\nassert solution(\"1 1 1\\n1 2 3\") == \"1\\n1\\n1\"\nassert solution(\"1 10 10\") == \"10\"\nassert solution(\"100 100 100\") == \"100\\n100\\n100\"\nassert solution(\"1 9 5\\n2 3 7\") == \"1\\n3\"\nassert solution(\"1 100 10\") == \"1\\n10\"\n"
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 9 5') == '1\\n5'\nassert solution('1 100 10') == '9\\n19'"
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 9 5\\n1 100 10\") == \"1\\n9\\n19\""
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 9 5\") == \"1\\n5\"\nassert solution(\"1 100 10\") == \"9\\n19\""
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(str(1) + \" \" + str(9) + \" \" + str(5)) == \"1\\n5\\n\"\nassert solution(str(1) + \" \" + str(100) + \" \" + str(10)) == \"9\\n19\\n\""
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 9 5\") == \"1\\n5\\n\", \"Input 1\"\nassert solution(\"1 100 10\") == \"9\\n19\\n\", \"Input 2\"\n"
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '1'"
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1\\n1\\n1\") == \"1\\n1\"\nassert solution(\"4 5\\n4 1 2 4 4\\n4 3 2 1\") == \"7\\n4 4 2 4 4 1 4\""
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 1\\n1\\n1\\n') == '1\\n1'\nassert solution('4 5\\n4 1 2 4 4\\n4 3 2 1\\n') == '7\\n4 4 2 4 4 1 4'"
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 1\\n1\\n1\\n') == '1\\n1\\n'\nassert solution('4 5\\n4 1 2 4 4\\n4 3 2 1\\n') == '7\\n4 4 2 4 4 1 4\\n'"
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''1 1\n1''') == '1\\n1\\n'\nassert solution('''4 5\n4 1 2 4 4\n4 3 2 1''') == '7\\n4 4 2 4 4 1 4\\n'"
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\\n1\\n1\") == \"1\\n1\"\nassert solution(\"4 5\\n4 1 2 4 4\\n4 3 2 1\") == \"7\\n4 4 2 4 4 1 4\""
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1\\n1\\n1\\n\") == \"1\\n1\"\nassert solution(\"4 5\\n4 1 2 4 4\\n4 3 2 1\\n\") == \"7\\n4 4 2 4 4 1 4\""
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1\\n1\\n1\\n\") == \"1\\n1\"\nassert solution(\"4 5\\n4 1 2 4 4\\n4 3 2 1\\n\") == \"7\\n4 4 2 4 4 1 4\""
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Test failed: Expected output '{expected_output}', got '{solution(input())}'\""
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\\n1\") == \"1\\n1 \"\nassert solution(\"4 5\\n4 1 2 4 4\\n4 3 2 1\") == \"7\\n4 4 2 4 4 1 4\""
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == sample_output_1, \"Test 1 failed\"\nassert solution(sample_input_2) == sample_output_2, \"Test 2 failed\""
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input1) == output1, \"Expected output: \" + str(output1) + \", but got: \" + str(solution(input1))\nassert solution(input2) == output2, \"Expected output: \" + str(output2) + \", but got: \" + str(solution(input2))\n\ninput1 = [2, 10, 3, 2]\ninput2 = [10, 10, 5, 0]\noutput1 = 4\noutput2 = 10"
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 10 3 2\") == \"4\\n\", \"Test Case 1 failed\"\nassert solution(\"10 10 5 0\") == \"10\\n\", \"Test Case 2 failed\"\nassert solution(\"1000 1000 1000 1000\") == \"1000\\n\", \"Test Case 3 failed\"\n"
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"Test failed\""
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 4\nassert solution(5) == 10\nassert solution(10, 3, 5, 4) == 10\nassert solution(10, 6, 5, 4) == 10"
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"4\", \"The expected output is '4', but it is actually '%s'\" % solution()"
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 10 3 2') == '4', 'Test 1'\nassert solution('10 10 5 0') == '10', 'Test 2'"
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, but got {solution(stdin)}\""
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 10 3 2\") == \"4\\n\"\nassert solution(\"10 10 5 0\") == \"10\\n\""
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected, f\"Got {solution(stdin)}, expected {expected}\""
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1 20\\n0123456789\\n\") == \"10\\n\"\nassert solution(\"6 100 9294\\n23689\\n\") == \"111\\n\""
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5') == '10'\nassert solution('2\\n3\\n4\\n5\\n6') == '10'\nassert solution('3\\n4\\n5\\n6\\n7') == '10'\nassert solution('4\\n5\\n6\\n7\\n8') == '10'\nassert solution('5\\n6\\n7\\n8\\n9') == '10'"
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1 20\\n0123456789\\n\") == \"10\"\nassert solution(\"6 100 9294\\n23689\\n\") == \"111\"\nassert solution(\"5 2 3\\n45\\n\") == \"2\""
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 1 20\\n0123456789\\n') == 10\nassert solution('6 100 9294\\n23689\\n') == 111"
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1 20\\n0123456789\") == \"10\"\nassert solution(\"6 100 9294\\n23689\") == \"111\""
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 1 20\\n0123456789') == '10\\n'\nassert solution('6 100 9294\\n23689') == '111\\n'"
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1 20\\n0123456789\") == \"10\"\nassert solution(\"6 100 9294\\n23689\") == \"111\""
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1 20\\n0123456789\\n\") == \"10\"\nassert solution(\"6 100 9294\\n23689\\n\") == \"111\""
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1 20\\n0123456789\\n\") == 10\nassert solution(\"6 100 9294\\n23689\\n\") == 111"
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1 20\\n0123456789\") == \"10\"\nassert solution(\"6 100 9294\\n23689\") == \"111\""
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\") == \"1.5 2.6\\n\"\nassert solution(\"5 2\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\") == \"1.5 3.6\\n\""
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\") == \"1.500000 2.666667\\n\", \"Sample Output 1\"\nassert solution(\"5 2\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\") == \"1.500000 3.666667\\n\", \"Sample Output 2\""
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\") == \"1.5 2.67\"\nassert solution(\"5 2\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\") == \"1.5 3.67\""
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 3\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\\n\") == \"1.500000 2.666667\\n\"\nassert solution(\"5 3\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\\n\") == \"1.500000 2.666667\\n\"\nassert solution(\"5 2\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\\n\") == \"1.500000 3.666667\\n\"\nassert solution(\"1 1\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\\n\") == \"0.000000 0.000000\\n\"\nassert solution(\"5 1\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\\n\") == \"0.000000 0.000000\\n\"\nassert solution(\"1 0\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\\n\") == \"0.000000 0.000000\\n\""
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 3\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\\n') == '1.500000 2.666667\\n', \"The solution should return the expected output.\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1.500000 2.666667\""
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2\n\nfrom typing import List"
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution, \"No solution provided\""
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, \"The output is incorrect.\"\n"
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_data) == output_data, \"Test failed\""
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 6\\n101010\\n111001\\n101001\\n\") == \"3\\n\"\nassert solution(\"4 5\\n10010\\n01010\\n10101\\n01001\\n\") == \"3\\n\"\nassert solution(\"3 6\\n101010\\n111001\\n101001\\n2 2\\n111001\\n101001\\n\") == \"-1\\n\""
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 6\\n101010\\n111001\\n101001\\n\") == \"3\"\nassert solution(\"4 5\\n10010\\n01010\\n10101\\n01001\\n\") == \"3\""
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input(\"Enter the size of the matrix: \")) == \"Output the size of the largest killer on a single line, or output -1 if there are no square killers.\""
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output\nelse:\n    print('-1')"
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 6\\n101010\\n111001\\n101001\\n\") == \"3\\n\"\nassert solution(\"4 5\\n10010\\n01010\\n10101\\n01001\\n\") == \"3\\n\"\nassert solution(\"3 6\\n101010\\n111001\\n101001\\n\") == \"3\\n\"\nassert solution(\"4 5\\n10010\\n01010\\n10101\\n01001\\n\") == \"3\\n\"\nassert solution(\"3 6\\n101010\\n111001\\n101001\\n\") == \"3\\n\"\nassert solution(\"4 5\\n10010\\n01010\\n10101\\n01001\\n\") == \"3\\n\"\nassert solution(\"3 6\\n101010\\n111001\\n101001\\n\") == \"3\\n\"\nassert solution(\"4 5\\n10010\\n01010\\n10101\\n01001\\n\") == \"3\\n\"\nassert solution(\"3 6\\n101010\\n111001\\n101001\\n\") == \"3\\n\"\nassert solution(\"4 5\\n10010\\n01010\\n10101\\n01001\\n\") == \"3\\n\"\nassert solution(\"3 6\\n101010\\n111001\\n101001\\n\") == \"3\\n\"\nassert solution(\"4 5\\n10010\\n01010\\n10101\\n01001\\n\") == \"3\\n\"\nassert solution(\"3 6\\n101010\\n111001\\n101001\\n\") == \"3\\n\"\nassert solution(\"4 5\\n10010\\n01010\\n10101\\n01001\\n\") == \"3\\n\"\nassert solution(\"3 6\\n101010\\n111001\\n101001\\n\") == \"3\\n\"\nassert solution(\"4 5\\n10010\\n01010\\n10101\\n01001\\n\") == \"3\\n\"\nassert solution(\"3 6\\n101010\\n111001\\n101001\\n\") == \"3\\n\"\nassert solution(\"4 5\\n10010\\n01010\\n10101\\n01001\\n\") == \"3\\n\"\nassert solution(\"3 6\\n101010\\n111001\\n101001\\n\") == \"3\\n\"\nassert solution(\"4 5\\n10010\\n01010\\n10101\\n01001\\n\") == \"3\\n\"\nassert solution(\"3 6\\n101010\\n111001\\n101001\\n\") == \"3\\n\"\nassert solution(\"4 5\\n10010\\n01010\\n10101\\n01001\\n\") == \"3\\n\"\nassert solution(\"3 6\\n101010\\n111001\\n101001\\n\") == \"3\\n\"\nassert solution(\"4 5\\n10010\\n01010\\n10101\\n01001\\n\") == \"3\\n\"\nassert solution(\"3 6\\n101010\\n11"
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"3\\n\", \"Expected output: '3\\n', but got: '{}'\".format(solution(stdin))"
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 3, \"Incorrect output\""
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r').read()) == '3'"
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected_output, f\"Output is '{solution(stdin)}', but expected output is '{expected_output}'\""
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"3 4\\n3 -1\""
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 0\\n0 1\\n1 0\\n0 -1\\n-1 0\") == [\"-3 -1\", \"3 1\"]\nassert solution(\"4\\n2 4\\n6 -1\\n3 5\\n-1 -1\") == [\"3 4\", \"3 -1\"]\n"
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n0 0\\n0 1\\n1 0\\n0 -1\\n-1 0\") == \"-3 -1\\n3 1\""
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n0 0\\n0 1\\n1 0\\n0 -1\\n-1 0\\n\") == \"-3 -1\\n3 1\"\nassert solution(\"4\\n2 4\\n6 -1\\n3 5\\n-1 -1\\n\") == \"3 4\\n3 -1\"\n"
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n5\n0 0\n0 1\n1 0\n0 -1\n-1 0\n''') == '-3 -1\\n3 1'\n\nassert solution('''\n4\n2 4\n6 -1\n3 5\n-1 -1\n''') == '3 4\\n3 -1'"
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n0 0\\n0 1\\n1 0\\n0 -1\\n-1 0') == '-3 -1\\n3 1'\nassert solution('4\\n2 4\\n6 -1\\n3 5\\n-1 -1') == '3 4\\n3 -1'"
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == solution\n"
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"-3 -1\\n3 1\"\nassert solution(\"5\\n0 0\\n0 1\\n1 0\\n0 -1\\n-1 0\") == \"-3 -1\\n3 1\"\nassert solution(\"4\\n2 4\\n6 -1\\n3 5\\n-1 -1\") == \"3 4\\n3 -1\""
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"Sample Output 1\"\nassert solution() == \"Sample Output 2\""
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 6 5 45 20\\n0 0\\n2 0\\n1 1.5\") == \"2 5.086781\"\nassert solution(\"3 0.25 2 45 20\\n0 0\\n2 0\\n1 1.5\") == \"1 12.715255\""
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 6 5 45 20\\n0 0\\n2 0\\n1 1.5\") == \"2 5.086781\\n\", \"Test 1 failed\"\nassert solution(\"3 0.25 2 45 20\\n0 0\\n2 0\\n1 1.5\") == \"1 12.715255\\n\", \"Test 2 failed\""
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 6 5 45 20\\n0 0\\n2 0\\n1 1.5') == '2 5.086781\\n'\nassert solution('3 0.25 2 45 20\\n0 0\\n2 0\\n1 1.5') == '1 12.715255\\n'"
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    3 6 5 45 20\n    0 0\n    2 0\n    1 1.5\n    \"\"\"\n) == \"\"\"\n2 5.086781\n\"\"\""
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output, f\"Incorrect output for solution:\\nExpected: {expected_output}\\nActual: {solution(stdin)}\""
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n3 6 5 45 20\n0 0\n2 0\n1 1.5\n''') == '''\n2 5.086781\n'''\n\nassert solution('''\n3 0.25 2 45 20\n0 0\n2 0\n1 1.5\n''') == '''\n1 12.715255\n'''"
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"Output two numbers 1 and 12.715255\""
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"Test case failed.\"\n"
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('Sample Input 1') == '8\\n'\nassert solution('Sample Input 2') == '1\\n'"
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Test {case} failed. Expected: {expected}, got: {solution(input())}\""
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\\n') == '8'\nassert solution('4\\n5 1 7 1\\n1 1 5 1\\n4 0 4 4\\n7 0 3 4\\n') == '1'"
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1\\n0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\\n') == '8\\n'\nassert solution('2\\n5 1 7 1\\n1 1 5 1\\n4 0 4 4\\n7 0 3 4\\n') == '1\\n'"
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"6\\n0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\\n\") == \"8\""
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(r'6\\n0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\\n') == '8\\n'"
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('6\\n0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\\n') == 8\nassert solution('4\\n5 1 7 1\\n1 1 5 1\\n4 0 4 4\\n7 0 3 4\\n') == 1\n\nfrom typing import List"
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6\\n0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\\n') == 8\nassert solution('4\\n5 1 7 1\\n1 1 5 1\\n4 0 4 4\\n7 0 3 4\\n') == 1"
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\\n\") == \"8\\n\", \"Incorrect output\"\nassert solution(\"5 1 7 1\\n1 1 5 1\\n4 0 4 4\\n7 0 3 4\\n\") == \"1\\n\", \"Incorrect output\""
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\") == 8\nassert solution(\"5 1 7 1\\n1 1 5 1\\n4 0 4 4\\n7 0 3 4\") == 1\n"
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(7) == [4, 3], \"Invalid output for sample case 1\"\nassert solution(10) == [\"impossible\"], \"Invalid output for sample case 2\"\n\nfrom typing import List"
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(7) == \"4 3\"\nassert solution(10) == \"impossible\"\n\nfrom typing import List"
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('7') == '4 3\\n'\nassert solution('10') == 'impossible\\n'"
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(2) == \"4 3\"\nassert solution(11) == \"impossible\""
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == \"impossible\"\nassert solution(7) == \"4 3\"\nassert solution(10) == \"impossible\"\n\nfrom typing import List"
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == 1\nassert solution(10) == 4 3\nassert solution(5) == 0\nassert solution(1000000000) == 4 3\n\nfrom typing import List"
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(7) == \"4 3\"\nassert solution(10) == \"impossible\""
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\") == \"4 3\\n\"\nassert solution(\"10\") == \"impossible\\n\""
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(7) == (4, 3)\nassert solution(10) == \"impossible\""
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(10) == \"impossible\""
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Test failed: {input()}, {output}\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"16\\n\", \"The output should be 16.\"\nassert solution(stdin) == \"109\\n\", \"The output should be 109.\""
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r')) == '16'"
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == 16\nassert solution(2) == 109\n"
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"109\""
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"16\"\nassert solution(5) == \"119\"\nassert solution(7) == \"183\""
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == sample_output_1, f\"Expected {sample_output_1}, got {solution(sample_input_1)}\"\nassert solution(sample_input_2) == sample_output_2, f\"Expected {sample_output_2}, got {solution(sample_input_2)}\"\n\nfrom typing import List"
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input1) == '16'\nassert solution(sample_input2) == '109'"
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n3\\n\\n2\\n4\\n1\") == \"16\"\nassert solution(\"1\\n3\\n\\n2\\n4\\n1\\n\") == \"16\"\nassert solution(\"2\\n1\\n3\\n4\\n\\n\") == \"109\"\n\nsolution = '''\n"
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"16\"\nassert solution(5) == \"109\""
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n5 3 1 1\\n1 3\\n2 3\\n4 1\") == \"5\\n1 3 1\\n2 3 2\\n4 1 0\""
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n5 1\\n1 2\\n1 2\\n1 2\") == \"3\\n1 2 1\\n1 2 2\\n1 2 2\"\nassert solution(\"4 3\\n5 3 1 1\\n1 3\\n2 3\\n4 1\") == \"5\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1\\n3 1 0\"\nassert solution(\"2 1\\n2 3\\n4 3\\n5 2\\n5 4\\n5 6\") == \"2\\n3 2 0\\n3 4 1\\n4 3 0\"\nassert solution(\"5 1\\n5 3\\n5 5\\n5 7\\n5 9\") == \"5\""
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received: {solution(input())}\""
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n5 3 1 1\\n1 3\\n2 3\\n4 1\") == \"5\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1\\n3 1 0\""
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == [\"1 3 1\", \"2 3 2\", \"4 1 0\", \"2 4 1\", \"3 1 0\"]"
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"\"\"\n3\n1 2 1\n1 2 2\n1 2 2\n5\n1 3 1\n2 3 2\n4 1 0\n2 4 1\n3 1 0\n\"\"\""
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"3\\n1 2 1\\n1 2 2\\n1 2 2\"\n"
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    2 3\n    5 1\n    1 2\n    1 2\n    1 2\n    \"\"\"\n) == \"3\\n1 2 1\\n1 2 2\\n1 2 2\"\n\nassert solution(\n    \"\"\"\n    4 3\n    5 3 1 1\n    1 3\n    2 3\n    4 1\n    \"\"\"\n) == \"5\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1\\n3 1 0\"\n\nassert solution(\n    \"\"\"\n    3 2\n    5 1\n    1 2\n    1 2\n    1 2\n    \"\"\"\n) == \"2\\n1 2 1\\n1 2 2\\n1 2 2\"\n\nassert solution(\n    \"\"\"\n    6 5\n    5 1\n    1 2\n    1 2\n    1 2\n    1 2\n    \"\"\"\n) == \"6\\n1 2 1\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\""
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"sample_input.txt\", \"r\").read()) == \"3\\n1 2 1\\n1 2 2\\n1 2 2\"\n\nfrom typing import List\n"
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n5 1\\n1 2\\n1 2\\n1 2\\n\") == \"3\\n1 2 1\\n1 2 2\\n1 2 2\\n\"\nassert solution(\"4 3\\n5 3 1 1\\n1 3\\n2 3\\n4 1\\n\") == \"5\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1\\n3 1 0\\n\"\nassert solution(\"1 2\\n3 4\\n\") == \"0\\n\"\nassert solution(\"1 1\\n\") == \"0\\n\"\nassert solution(\"2 1\\n\") == \"0\\n\"\nassert solution(\"2 3\\n5 1\\n1 2\\n1 2\\n1 2\\n\") == \"3\\n1 2 1\\n1 2 2\\n1 2 2\\n\"\nassert solution(\"3 1\\n3 1\\n\") == \"0\\n\"\nassert solution(\"3 2\\n4 2\\n\") == \"0\\n\"\nassert solution(\"3 2\\n4 2\\n\") == \"0\\n\"\nassert solution(\"2 3\\n5 1\\n1 2\\n1 2\\n1 2\\n\") == \"3\\n1 2 1\\n1 2 2\\n1 2 2\\n\"\nassert solution(\"3 4\\n2 4\\n\") == \"0\\n\"\nassert solution(\"1 1\\n\") == \"0\\n\"\nassert solution(\"1 1\\n\") == \"0\\n\"\nassert solution(\"1 1\\n\") == \"0\\n\"\nassert solution(\"1 1\\n\") == \"0\\n\"\nassert solution(\"1 1\\n\") == \"0\\n\"\nassert solution(\"1 1\\n\") == \"0\\n\"\nassert solution(\"1 1\\n\") == \"0\\n\"\nassert solution(\"1 1\\n\") == \"0\\n\"\nassert solution(\"1 1\\n\") == \"0\\n\"\nassert solution(\"1 1\\n\") == \"0\\n\"\nassert solution(\"1 1\\n\") == \"0\\n\"\nassert solution(\"1 1\\n\") == \"0\\n\"\nassert solution(\"1 1\\n\") == \"0\\n\"\nassert solution(\"1 1\\n\") == \"0\\n\"\nassert solution(\"1 1\\n\") == \"0\\n\"\nassert solution(\"1 1\\n\") == \"0\\n\"\nassert solution(\"1 1\\n\") == \"0\\n\"\nassert solution(\"1 1\\n\") == \"0\\n\"\nassert solution(\"1 1\\n\") == \"0\\n\"\nassert solution(\"1 1\\n\") == \"0\\n\"\nassert solution(\"1 1\\n\") == \"0\\n\"\nassert solution(\"1 1\\n\") == \"0\\n\"\nassert solution(\"1 1\\n\") == \"0\\n\"\nassert solution(\"1 1\\n\") == \"0\\n\"\nassert solution(\"1 1\\n\") == \"0\\n\"\nassert solution(\"1 1\\n\") == \"0\\n\"\nassert solution(\"1 1\\n\") == \"0\\n\"\nassert solution(\"1 1\\n\") == \"0\\n\"\nassert solution(\"1 1\\n\") == \"0\\n\"\nassert solution(\"1 1\\n\") == \"0\\n\"\nassert solution(\"1 1\\n\") == \"0\\n\"\nassert solution(\"1 1\\n\") == \"0\\n\"\nassert solution(\"1 1\\n\") == \"0\\n\"\nassert solution(\"1 1\\n\") == \"0\\n\"\nassert solution(\"1 1\\n\") == \"0\\n\"\nassert solution(\"1 1\\n\") == \"0\\n\"\nassert solution(\"1 1\\n\") == \"0\\n\"\nassert solution(\"1 1\\n\") == \"0\\n\"\nassert solution(\"1 1\\n\") == \"0\\n\"\nassert solution(\"1 1\\n\") == \"0\\n\"\nassert solution(\""
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input1) == \"1 2\"\nassert solution(sample_input2) == \"impossible\"\n\nfrom typing import List\n"
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}\\nGot: {solution(stdin)}\"\n"
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == expected_output1\nassert solution(sample_input2) == expected_output2"
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n6 7\\n0 1 1\\n0 2 2\\n1 1 3\\n2 1 2\\n2 2 1\\n3 2 3\\n4 2 1\\n\") == \"1 2\\n\"\nassert solution(\"2 1\\n20 3\\n0 1 1\\n10 1 0\\n10 2 1\\n\") == \"impossible\\n\""
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n6 7\\n0 1 1\\n0 2 2\\n1 1 3\\n2 1 2\\n2 2 1\\n3 2 3\\n4 2 1\") == [\"1 2\"]\nassert solution(\"2 1\\n20 3\\n0 1 1\\n10 1 0\\n10 2 1\") == [\"impossible\"]"
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2\n\nsample_input_1 = \"\"\"\n2 3\n6 7\n0 1 1\n0 2 2\n1 1 3\n2 1 2\n2 2 1\n3 2 3\n4 2 1\n\"\"\"\n\nsample_input_2 = \"\"\"\n2 1\n20 3\n0 1 1\n10 1 0\n10 2 1\n\"\"\"\n\nexpected_output_1 = \"1 2\"\nexpected_output_2 = \"impossible\""
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n6 7\\n0 1 1\\n0 2 2\\n1 1 3\\n2 1 2\\n2 2 1\\n3 2 3\\n4 2 1\\n\") == \"1 2\\n\"\nassert solution(\"2 1\\n20 3\\n0 1 1\\n10 1 0\\n10 2 1\\n\") == \"impossible\\n\""
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == ['1', '2']\nassert solution() == ['impossible']\nassert solution() == []"
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n6 7\\n0 1 1\\n0 2 2\\n1 1 3\\n2 1 2\\n2 2 1\\n3 2 3\\n4 2 1\") == [\"1\", \"2\"]\nassert solution(\"2 1\\n20 3\\n0 1 1\\n10 1 0\\n10 2 1\") == [\"impossible\"]"
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(10) == \"5 2\"\nassert solution(2020) == \"2020 1\"\n\nfrom typing import Tuple"
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(10) == \"5 2\"\nassert solution(2020) == \"2020 1\""
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(10) == [5, 2]\nassert solution(2020) == [2020, 1]"
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(10) == (5, 2)\nassert solution(2020) == (2020, 1)"
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10\") == \"5 2\"\nassert solution(\"2020\") == \"2020 1\""
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(10) == (5, 2)\nassert solution(2020) == (2020, 1)"
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == \"5 2\"\nassert solution(2020) == \"2020 1\""
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10\") == \"5 2\"\nassert solution(\"2020\") == \"2020 1\""
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(10) == (5, 2), \"Expected (5, 2), got ({}, {})\".format(solution(10), (5, 2))\nassert solution(2020) == (2020, 1), \"Expected (2020, 1), got ({}, {})\".format(solution(2020), (2020, 1))"
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10\") == \"5 2\", \"Incorrect output\"\nassert solution(\"2020\") == \"2020 1\", \"Incorrect output\""
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"impossible\"\nassert solution() == \"unique\"\nassert solution() == \"ambiguous\""
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == \"impossible\"\nassert solution(sample_input_2) == \"unique\""
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == 'impossible', 'Incorrect output'"
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\\n') == 'impossible'\nassert solution('3\\n4\\n0 chocolate\\n1 icecream\\n2 cookies\\n2 chocolate\\n3\\nchocolate\\nicecream\\ncookies\\n') == 'unique'\nassert solution('3\\n4\\n0 chocolate\\n1 icecream\\n2 cookies\\n2 chocolate\\n3\\nchocolate\\nicecream\\ncookies\\n') == 'ambiguous'"
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\\nSample Output 1: impossible\\nSample Input 2: 3\\n4\\n0 chocolate\\n1 icecream\\n2 cookies\\n2 chocolate\\n3\\nchocolate\\nicecream\\ncookies\\nSample Output 2: unique\\ndef solution(stdin: str) -> str:\n    pass') == 'impossible'"
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\\n\") == \"impossible\"\nassert solution(\"3\\n4\\n0 chocolate\\n1 icecream\\n2 cookies\\n2 chocolate\\n3\\nchocolate\\nicecream\\ncookies\\n\") == \"unique\"\nassert solution(\"3\\n4\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\nicecream\\ncookies\\n\") == \"ambiguous\""
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\") == \"impossible\"\nassert solution(\"3\\n4\\n0 chocolate\\n1 icecream\\n2 cookies\\n2 chocolate\\n3\\nchocolate\\nicecream\") == \"unique\"\nassert solution(\"3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\") == \"impossible\""
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream') == 'impossible'\nassert solution('3\\n4\\n0 chocolate\\n1 icecream\\n2 cookies\\n2 chocolate\\n3\\nchocolate\\nicecream') == 'unique'"
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\\nSample Output 1: impossible\\n\\n3\\n4\\n0 chocolate\\n1 icecream\\n2 cookies\\n2 chocolate\\n3\\nchocolate\\nicecream\\ncookies\\nSample Output 2: unique\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\"
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\\n\") == \"impossible\"\n\nassert solution(\"3\\n4\\n0 chocolate\\n1 icecream\\n2 cookies\\n2 chocolate\\n3\\nchocolate\\nicecream\\ncookies\\n\") == \"unique\"\n\nfrom typing import List"
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"The given output is incorrect. Expected: {output}, but got {solution(input())}.\""
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"0\", \"Sample Input 1\"\nassert solution(input()) == \"0\", \"Sample Input 2\""
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Test failed: {output}!= {solution(input())}\""
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Test failed for solution(input()) == output\\nInput: {input()}\\nOutput: {output}\\n\""
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"0\"\nassert solution(input()) == \"1\""
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for input {input()}, expected output {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 0 10\") == \"0\"\nassert solution(\"1 2 10\") == \"1\""
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Solution incorrect for input {input()}\""
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == sample_output"
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"1 1\n1.\n1.\n1 1\"\"\") == \"1 pan\"\n\nassert solution(\"\"\"1 1\n1 1\n1 1\n1 1\"\"\") == \"1 zoom out\"\n\nassert solution(\"\"\"1 1\n1 1\n1 1\n1 1\n\"\"\") == \"3 rotate clockwise\"\n\nassert solution(\"\"\"1 1\n1 1\n1 1\n1 1\n\"\"\") == \"3 rotate counter-clockwise\""
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"............................................................\\n............................................................\\n....XXXX....................................................\\n....XXXX..................................XXXX..............\\n....XXXX...................................XXX..............\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\"
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('............................................................\\n'\n                   '............................................................\\n'\n                   '....XXXX....................................................\\n'\n                   '....XXXX..................................XXXX..............\\n'\n                   '....XXXX...................................XXX..............\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\n'\n                   '............................................................\\"
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n............................................................\n............................................................\n....XXXX....................................................\n....XXXX..................................XXXX..............\n....XXXX...................................XXX..............\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n\"\"\") == \"1 pan\"\n\nassert solution(\"\"\"\n............................................................\n............................................................\n...............................................XX...........\n.....................................XXX......XXXX..........\n....................................XXXX........X...........\n........XXX....XXX....................X.....................\n.........XXX...XX...........................................\n............................................................\n............XX..............................................\n...........XXX..............................................\n............................................................\n............................................XX..............\n...........................................XXXX.............\n.............................................XX.............\n............................................................\n\"\"\") == \"3 zoom out\"\n\nassert solution(\"\"\"\n............................................................\n............................................................\n............XXXX....................................................\n............XXXX....................................................\n............XXXX..................................XXXX..............\n............XXXX...................................XXX..............\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n\"\"\") == \"1 pan\""
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n............................................................\n............................................................\n....XXXX....................................................\n....XXXX..................................XXXX..............\n....XXXX...................................XXX..............\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................"
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2"
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input1) == output1, \"Test 1 Failed\"\nassert solution(input2) == output2, \"Test 2 Failed\""
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2"
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n....XXXX....................................................\n....XXXX..................................XXXX..............\n....XXXX...................................XXX..............\n....XXXX....................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n..............XX..............................................\n.............XXXX...........................................\n...............XX...........................................\n............................................................\n............................................XX..............\n...........................................XXXX.............\n.............................................XX.............\n............................................................\n''') == '1 pan'"
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2 pan\""
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 20\\n apples are great!\\n++++++++++++++++++++\\n+ oranges are      +\\n+ way better!      +\\n+ #oranges>apples  +\\n++++++++++++++++++++\\n check out our    \\n fresh apples!\\n\") == \" apples are great!\\n fresh apples!\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"+++++++\\n+++++++\\n+++++++\\n+++++++\\n\""
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 20\\napples are great!\\n++++++++++++++++++++\\n+ oranges are\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++\\n check out our\\nfresh apples!\\n\") == \" apples are great!\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n"
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 20\\napples are great!\\n++++++++++++++++++++\\n+ oranges are      +\\n+ way better!      +\\n+ #oranges>apples  +\\n++++++++++++++++++++\\n check out our\\nfresh apples!\\n\") == \" apples are great!\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"+++++++\\n\"\nassert solution(\"5 5\\n$+$+$+$+$+$+$+$+$+$+\\n$+$+$+$+$+$+$+$+$+$+\\n$+$+$+$+$+$+$+$+$+$+\\n$+$+$+$+$+$+$+$+$+$+\\n$+$+$+$+$+$+$+$+$+$+$+\\n\") == \"$+$+$+$+$+$+$+$+$+$+$+\\n\"\nassert solution(\"2 2\\n!@#$%^&*()_+-={}[]|;:'\\\",.<>?\\n@#$%^&*()_+-={}[]|;:'\\\",.<>?\\n!@#$%^&*()_+-={}[]|;:'\\\",.<>?\\n\") == \"!@#$%^&*()_+-={}[]|;:'\\\",.<>?\\n\"\nassert solution(\"3 3\\n\\n$+$+$+$+$+$+$+$+$+$+\\n$+$+$+$+$+$+$+$+$+$+$+\\n$+$+$+$+$+$+$+$+$+$+$+\\n$+$+$+$+$+$+$+$+$+$+$+\\n$+$+$+$+$+$+$+$+$+$+\\n\") == \"\\n\"\n"
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 20\\napples are great!\\n++++++++++++++++++++\\n+ oranges are\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++\\n check out our\\nfresh apples!\\n\") == \"apples are great!\\nfresh apples!\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n\"\nassert solution(\"8 1\\napples are great!\\n++++++++++++++++++++\\n+ oranges are\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++\\n check out our\\nfresh apples!\\n\") == \"apples are great!\\nfresh apples!\\n\"\nassert solution(\"7 1\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n\"\nassert solution(\"8 10\\napples are great!\\n++++++++++++++++++++\\n+ oranges are\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++\\n check out our\\nfresh apples!\\n\") == \"apples are great!\\nfresh apples!\\n\"\nassert solution(\"7 10\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n\"\nassert solution(\"8 20\\napples are great!\\n++++++++++++++++++++\\n+ oranges are\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++\\n check out our\\nfresh apples!\\n\") == \"apples are great!\\nfresh apples!\\n\"\nassert solution(\"7 20\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n\""
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 20\\napples are great!\\n++++++++++++++++++++\\n+ oranges are    +\\n+ way better!\\n+ #oranges>apples  +\\n++++++++++++++++++++\\n check out our    \\nfresh apples!\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n"
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 20\\nappl c are great!\\n++++++++++++++++++++\\n+ oranges are      +\\n+ way better!      +\\n+ #oranges>apples  +\\n++++++++++++++++++++\\n check out our    \\nfresh apples!\\n\") == \" apples are great!\\n fresh apples!\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"+++++++\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"+++++++\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"+++++++\\n\""
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 20\\napples are great!\\n++++++++++++++++++++\\n+ oranges are      +\\n+ way better!      +\\n+ #oranges>apples  +\\n++++++++++++++++++++\\n check out our\\n fresh apples!\\n\") == \" apples are great!\\n fresh apples!\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"+++++++\\n+++++++\\n\""
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 20\\napplnes are great!\\n++++++++++++++++++++\\n+ oranges are\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++\\n check out our fresh apples!\\nSample Output 1:\\n apples are great!\\n\\n check out our fresh apples!\\n\\n\") == \"apples are great!\\n check out our fresh apples!\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\nSample Output 2:\\n\\n\\n\\n\\n\\n\\n\\n\\n\") == \"+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\""
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 20\\n apples are great!\\n++++++++++++++++++++\\n+ oranges are      +\\n+ way better!      +\\n+ #oranges>apples  +\\n++++++++++++++++++++\\n check out our    \\nfresh apples!\") == \" apples are great!\\n check out our    \\nfresh apples!\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"+++++++\\n+++++++\\n+++++++\\n+++++++\\n\""
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2.0\""
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2.0\""
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"HH\") == \"2.0\", \"Input 1\"\nassert solution(\"H?\") == \"1.5\", \"Input 2\""
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"HH\") == \"2.0\"\nassert solution(\"H?\") == \"1.5\""
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"HH\") == \"2.0\"\nassert solution(\"H?\") == \"1.5\""
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Solution should be {expected_output}, not {solution(input())}.\""
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"HH\") == \"2.0\", \"The first example is incorrect.\"\nassert solution(\"H?\") == \"1.5\", \"The second example is incorrect.\""
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"HH\") == 2.0, \"The solution is incorrect\"\nassert solution(\"H?\") == 1.5, \"The solution is incorrect\"\nassert solution(\"HHHH\") == 2.0, \"The solution is incorrect\""
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"HH\") == \"2.0\", \"Incorrect output\"\nassert solution(\"H?\") == \"1.5\", \"Incorrect output\""
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('HH') == 2.0\nassert solution('H?') == 1.5"
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n0001\\n0001\\n0011\\n1110\") == \"1\\n0001\\n0001\\n0011\\n1111\"\nassert solution(\"4\\n1111\\n1111\\n1111\\n1111\") == \"6\\n0011\\n0011\\n0111\\n1101\""
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"1\\n001\\n011\\n110\"\nassert solution(4) == \"6\\n0011\\n0011\\n0111\\n1101\"\n"
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n0001\\n0001\\n0011\\n1110\") == \"1\\n0001\\n0001\\n0011\\n1111\"\nassert solution(\"4\\n1111\\n1111\\n1111\\n1111\") == \"6\\n0011\\n0011\\n0111\\n1101\""
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n0001\\n0001\\n0011\\n1110') == '1\\n0001\\n0001\\n0011\\n1111'\nassert solution('4\\n1111\\n1111\\n1111\\n1111') == '6\\n0011\\n0011\\n0111\\n1101'"
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\"\n"
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n0001\\n0001\\n0011\\n1110\") == \"1\\n0001\\n0001\\n0011\\n1111\\n\"\nassert solution(\"4\\n1111\\n1111\\n1111\\n1111\") == \"6\\n0011\\n0011\\n0111\\n1101\\n\""
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output\nprint(output)"
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == solution()"
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n0001\\n0001\\n0011\\n1110') == '1\\n0001\\n0001\\n0011\\n1111'\nassert solution('4\\n1111\\n1111\\n1111\\n1111') == '6\\n0011\\n0011\\n0111\\n1101'"
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"h 1 4 1\\nv 2 4 2\\nh 10 2 2\\nv 11 2 3\\n\") == 2\nassert solution(\"h 1 10 1\\nh 5 10 2\\nv 1 10 1\\nv 5 10 3\\n\") == 4"
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"h 1 4 1\\nv 2 4 2\\nh 10 2 2\\nv 11 2 3\") == \"2\\n\"\nassert solution(\"h 1 10 1\\nh 5 10 2\\nv 1 10 1\\nv 5 10 3\") == \"4\\n\""
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(None) == \"Sample Input 1\"\nassert solution(None) == \"Sample Output 1\"\nassert solution(None) == \"Sample Input 2\"\nassert solution(None) == \"Sample Output 2\""
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\nh 1 4 1\\nv 2 4 2\\nh 10 2 2\\nv 11 2 3') == '2'\n\nassert solution('4\\nh 1 10 1\\nh 5 10 2\\nv 1 10 1\\nv 5 10 3') == '4'"
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\nh 1 4 1\\nv 2 4 2\\nh 10 2 2\\nv 11 2 3') == '2\\n'\nassert solution('4\\nh 1 10 1\\nh 5 10 2\\nv 1 10 1\\nv 5 10 3') == '4\\n'"
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2\", \"Expected output: 2\\nActual output: {}\""
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"sample_input_1.txt\", \"r\").read()) == \"2\\n\"\nassert solution(open(\"sample_input_2.txt\", \"r\").read()) == \"4\\n\""
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\nh 1 4 1\\nv 2 4 2\\nh 10 2 2\\nv 11 2 3\") == 2\nassert solution(\"4\\nh 1 10 1\\nh 5 10 2\\nv 1 10 1\\nv 5 10 3\") == 4\n"
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"h 1 4 1\\nv 2 4 2\\nh 10 2 2\\nv 11 2 3\") == \"2\\n\"\nassert solution(\"h 1 10 1\\nh 5 10 2\\nv 1 10 1\\nv 5 10 3\") == \"4\\n\""
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5\") == \"2\\n\"\nassert solution(\"3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8\") == \"4\\n\""
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n2 4\n1 0 2 0\n3 5 4 0\n2 1 0 0\n3 0 4 5\n\"\"\") == \"\"\"\n2\n\"\"\"\n\nassert solution(\"\"\"\n3 3\n1 2 3\n4 5 6\n7 8 0\n4 2 3\n6 5 1\n0 7 8\n\"\"\") == \"\"\"\n4\n\"\"\""
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5\") == \"2\\n\"\nassert solution(\"3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8\") == \"4\\n\""
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2\", \"Expected: 2, but got: {}\".format(solution(stdin))\n"
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5') == '2\\n'\nassert solution('3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8') == '4\\n'"
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5') == '2\\n'\nassert solution('3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8') == '4\\n'\nassert solution('') == '-1\\n'"
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5\") == \"2\\n\"\nassert solution(\"3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8\") == \"4\\n\"\n"
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5\") == \"2\\n\"\nassert solution(\"3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8\") == \"4\\n\""
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5') == '2\\n'\nassert solution('3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8') == '4\\n'"
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == sample_output, \"The solution is incorrect for the given input.\""
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == \"2\", \"The first sample input is incorrect.\"\nassert solution(sample_input_2) == \"4\", \"The second sample input is incorrect.\""
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(f\"\"\"6\n1 2 3 3 4 2\"\"\") == 2\nassert solution(f\"\"\"8\n1 2 1 3 1 3 1 2\"\"\") == 4"
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n1 2 3 3 4 2\") == \"2\"\nassert solution(\"8\\n1 2 1 3 1 3 1 2\") == \"4\""
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"6\\n1 2 3 3 4 2\\n8\\n1 2 1 3 1 3 1 2\") == 2, \"Output 1 is incorrect.\"\nassert solution(stdin=\"6\\n1 2 3 3 4 2\\n8\\n1 2 1 3 1 3 1 2\") == 2, \"Output 2 is incorrect.\""
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"6\\n1 2 3 3 4 2\\n\"\n) == \"2\\n\"\n\nassert solution(\n    \"8\\n1 2 1 3 1 3 1 2\\n\"\n) == \"4\\n\""
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"Expected output\\n\", \"Your solution is incorrect!\""
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n1 2 3 3 4 2\\n\") == \"2\\n\"\nassert solution(\"8\\n1 2 1 3 1 3 1 2\\n\") == \"4\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n1 2 3 3 4 2\") == 2\nassert solution(\"8\\n1 2 1 3 1 3 1 2\") == 4"
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\n\nfrom typing import List"
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n        2 2 2\n        1 1 1\n        2 2 1\n        2 2 2 1\n        1 1 1 2\n        ''') == '''\n        4\n        0\n        '''\n\nassert solution('''\n        2 2 2\n        1 1 1\n        2 2 2\n        2 2 2 1\n        1 1 1 2\n        ''') == '''\n        4\n        2\n        '''"
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == sample_output_1, f\"The solution is incorrect for the given input: {solution(sample_input_1)}\"\nassert solution(sample_input_2) == sample_output_2, f\"The solution is incorrect for the given input: {solution(sample_input_2)}\""
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2 2\\n1 1 1\\n2 2 1\\n2 2 2 1\\n1 1 1 2\\n\") == \"4\\n0\\n\"\nassert solution(\"2 2 2\\n1 1 1\\n2 2 2\\n2 2 2 1\\n1 1 1 2\\n\") == \"4\\n2\\n\""
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == \"4\\n0\\n\"\nassert solution(sample_input_2) == \"4\\n2\\n\""
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2 2\\n1 1 1\\n2 2 1\\n2 2 2 1\\n1 1 1 2\") == \"4\\n0\\n\"\nassert solution(\"2 2 2\\n1 1 1\\n2 2 2\\n2 2 2 1\\n1 1 1 2\") == \"4\\n2\\n\""
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 2 2\\n1 1 1\\n2 2 1\\n2 2 2 1\\n1 1 1 2\\n') == '4\\n0\\n'\nassert solution('2 2 2\\n1 1 1\\n2 2 2\\n2 2 2 1\\n1 1 1 2\\n') == '4\\n2\\n'\n"
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2 2\\n1 1 1\\n2 2 1\\n2 2 2 1\\n1 1 1 2\\n\") == \"4\\n0\\n\"\nassert solution(\"2 2 2\\n1 1 1\\n2 2 2\\n2 2 2 1\\n1 1 1 2\\n\") == \"4\\n2\\n\""
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2 2\\n1 1 1\\n2 2 1\\n2 2 2 1\\n1 1 1 2\") == \"4\\n0\\n\"\nassert solution(\"2 2 2\\n1 1 1\\n2 2 2\\n2 2 2 1\\n1 1 1 2\") == \"4\\n2\\n\""
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass'\n"
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 2 2\\n1 1 1\\n2 2 1\\n2 2 2 1\\n1 1 1 2') == 4\nassert solution('2 2 2\\n1 1 1\\n2 2 2\\n2 2 2 1\\n1 1 1 2') == 4\nassert solution('2 2 2\\n1 1 1\\n2 2 2\\n2 2 2 1\\n1 1 1 2') == 4\nassert solution('2 2 2\\n1 1 1\\n2 2 2\\n2 2 2 1\\n1 1 1 2') == 4\nassert solution('2 2 2\\n1 1 1\\n2 2 2\\n2 2 2 1\\n1 1 1 2') == 4"
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"impossible\"\n\nfrom typing import List"
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2\") == \"1\\n\"\nassert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n1 2\") == \"impossible\\n\""
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nif __name__ == '__main__':\\n    solution(input())\"\nassert solution == '''def solution(stdin: str) -> str:\n    pass"
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"impossible\""
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1\\n\", \"Expected '1', got '{}'\".format(solution())"
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1\"\nassert solution() == \"impossible\""
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"1\\n\", \"Output 1 is incorrect.\"\nassert solution(stdin) == \"impossible\\n\", \"Output 2 is incorrect.\""
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2\") == 1\nassert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n1 2\") == \"impossible\""
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2\\n\") == \"1\"\nassert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n1 2\\n\") == \"impossible\""
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"1\", \"Test 1 failed\"\nassert solution() == \"impossible\", \"Test 2 failed\""
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Incorrect output: {solution(input())}\"\n"
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(str(input())) == str(expected), f\"Solution failed for {str(input())}\"\n\nN = int(input())\nK = int(input())\nQ = int(input())\n\nX = list(map(int, input().split()))\n\nseq = [0] * N\n\nfor _ in range(K):\n    i = 0\n    while i < N:\n        seq[i] = seq[i] + 1\n        i = i + X[i//N]\n\nexpected = [seq[i] + seq[i+1] + seq[i+2] +... + seq[i+X[i//N]] for i in range(X[0], X[-1]+1)]\n\nassert expected == list(map(str, expected)), f\"Expected {expected} but got {list(map(str, expected))}\""
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 4\\n1 1 2 1\\n3\\n0 9\\n2 6\\n7 7\") == \"35\\n18\\n3\\n\\n8\\n2\\n1\"\nassert solution(\"11 3\\n3 7 10\\n3\\n0 10\\n2 6\\n7 7\") == \"8\\n2\\n1\"\n"
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Expected output: {output()}, but got {solution(input())}\""
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('10 4\\n1 1 2 1\\n3\\n0 9\\n2 6\\n7 7') == '35'\nassert solution('11 3\\n3 7 10\\n3\\n0 10\\n2 6\\n7 7') == '8'\n"
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Test {index + 1} failed!\" for index, (input, output) in enumerate(zip(inputs, outputs))"
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 4\\n1 1 2 1\\n3\\n0 9\\n2 6\\n7 7\\nSample Input 1:10 4\\n1 1 2 1\\n3\\n0 9\\n2 6\\n7 7\\nSample Output 1:35\\n18\\n3\\n\\n\\nSample Input 2:11 3\\n3 7 10\\n3\\n0 10\\n2 6\\n7 7\\nSample Output 2:8\\n2\\n1\\n\") == 35\nassert solution(\"10 4\\n1 1 2 1\\n3\\n0 9\\n2 6\\n7 7\\nSample Input 1:10 4\\n1 1 2 1\\n3\\n0 9\\n2 6\\n7 7\\nSample Output 1:35\\n18\\n3\\n\\n\\nSample Input 2:11 3\\n3 7 10\\n3\\n0 10\\n2 6\\n7 7\\nSample Output 2:8\\n2\\n1\\n\") == 8"
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(10, 4) == \"35\\n18\\n3\\n\"\nassert solution(11, 3) == \"8\\n2\\n1\\n\""
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"35\\n18\\n3\\n8\\n2\\n1\""
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 4\\n1 1 2 1\\n3\\n0 9\\n2 6\\n7 7\\n\") == \"35\\n18\\n3\\n8\\n2\\n1\\n\"\nassert solution(\"11 3\\n3 7 10\\n3\\n0 10\\n2 6\\n7 7\\n\") == \"8\\n2\\n1\\n\""
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    '''\n    4\n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    '''\n) == \"\"\"\n0\n1\n2\n3\n4\n6\n7\n\"\"\""
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"4\\n1\\n2\\n3\\n4\\n\"\n) == \"0\\n1\\n3\\n6\\n\"\n\nassert solution(\n    \"5\\n3\\n2\\n4\\n1\\n5\\n\"\n) == \"0\\n1\\n2\\n4\\n6\\n\""
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1\\n2\\n3\\n4\\n\") == \"0\\n1\\n3\\n6\\n\", \"Test 1\"\nassert solution(\"5\\n3\\n2\\n4\\n1\\n5\\n\") == \"0\\n1\\n2\\n4\\n6\\n\", \"Test 2\"\n"
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3)<|im_sep|>"
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"0\\n1\\n3\\n6\\n\""
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n\") == \"0\\n1\\n3\\n6\\n\""
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1\\n2\\n3\\n4\") == \"0\\n1\\n3\\n6\\n\"\nassert solution(\"5\\n3\\n2\\n4\\n1\\n5\") == \"0\\n1\\n2\\n4\\n6\\n\""
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"0\\n1\\n3\\n6\\n\", \"Incorrect output\""
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"0\\n1\\n3\\n6\\n\", \"Your solution is incorrect.\""
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n    4\n    1\n    2\n    3\n    4\n''') == '0\\n1\\n3\\n6\\n'\n\nassert solution('''\n    5\n    3\n    2\n    4\n    1\n    5\n''') == '0\\n1\\n2\\n4\\n6\\n'"
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 3 2 2\\n1 1 3 2\\n2 4 7 3\\n3 3 5 3\\n\") == \"2 4 1 3\\n\"\nassert solution(\"4\\n0 0 1 1\\n1 2 0 3\\n2 2 3 3\\n4 0 3 1\\n\") == \"4 3 1 2\\n\""
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == '2 4 1 3\\n4 3 1 2'"
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n1 3 2 2\\n1 1 3 2\\n2 4 7 3\\n3 3 5 3') == '2 4 1 3'"
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '4 3 1 2', \"Expected: '4 3 1 2', but got: '{}'\".format(solution())"
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '2 4 1 3'\n"
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 3 2 2\\n1 1 3 2\\n2 4 7 3\\n3 3 5 3\") == \"2 4 1 3\\n4 3 1 2\""
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"2 4 1 3\\n4 3 1 2\"\n"
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 3 2 2\\n1 1 3 2\\n2 4 7 3\\n3 3 5 3\") == \"2 4 1 3\"\nassert solution(\"4\\n0 0 1 1\\n1 2 0 3\\n2 2 3 3\\n4 0 3 1\") == \"4 3 1 2\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    '''\n    4\n    1 3 2 2\n    1 1 3 2\n    2 4 7 3\n    3 3 5 3\n    '''\n) == \"2 4 1 3\\n4 3 1 2\"\n\nassert solution(\n    '''\n    4\n    0 0 1 1\n    1 2 0 3\n    2 2 3 3\n    4 0 3 1\n    '''\n) == \"4 3 1 2\"\n\nassert solution(\n    '''\n    4\n    1 2 3 1\n    2 2 4 2\n    3 3 5 3\n    4 4 6 4\n    '''\n) == \"4 3 1 2\""
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input1) == output1, \"Invalid output 1\"\nassert solution(input2) == output2, \"Invalid output 2\""
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\"\n"
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\", \"Test case 1 failed.\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\", \"Test case 2 failed.\""
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\""
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_str) == expected_output, f\"Test failed for input {input_str}, expected output {expected_output}\""
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\"\n\nfrom typing import List"
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5') == 'Theta wins'\nassert solution('89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49') == 'Theta wins'"
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(stdin=\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\""
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\""
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5') == 'Theta wins', \"Solution 1 incorrect\"\nassert solution('89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49') == 'Theta wins', \"Solution 2 incorrect\""
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\""
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 'truther\\n'\nassert solution() == 'fabulist\\n'\nassert solution() == 'charlatan\\n'"
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == 'truther\\nfabulist\\n'\n"
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt').read()) == \"\"\"\ncharlatan\n\"\"\""
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Input 1\") == \"Output 1\\ncharlatan\\n\"\nassert solution(\"Input 2\") == \"Output 2\\nfabulist\\ntruther\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 2\\n1 charlatan 1\\n1 not charlatan 1\\n') == 'charlatan\\n'\nassert solution('2 1\\n1 and fabulist 1 fabulist 2\\n') == 'fabulist\\ntruther\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nprint(\"All test cases pass!\")"
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"The provided code does not produce the expected output.\""
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 2\\n1 charlatan 1\\n1 not charlatan 1\\n') == ['charlatan']\nassert solution('2 1\\n1 and fabulist 1 fabulist 2\\n') == ['fabulist', 'truther']\n\nfrom typing import List"
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input1) == expected_output1, f\"Test Case 1 failed. Got: {solution(input1)}, Expected: {expected_output1}\"\nassert solution(input2) == expected_output2, f\"Test Case 2 failed. Got: {solution(input2)}, Expected: {expected_output2}\""
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 2\\n1 charlatan 1\\n1 not charlatan 1\\n') == 'charlatan\\n'\nassert solution('2 1\\n1 and fabulist 1 fabulist 2\\n') == 'fabulist\\ntruther\\n'"
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 'charlatan\\n'"
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    5\n    1.00 5.00\n    3.00 3.00\n    4.00 2.00\n    6.00 4.50\n    7.00 1.00\n    \"\"\"\n) == \"4\\n\"\n\nassert solution(\n    \"\"\"\n    3\n    -1.50 -1.00\n    1.50 -1.00\n    0.00 1.00\n    \"\"\"\n) == \"3\\n\""
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\"\n"
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"Output the maximum number of fruits that can be sliced with one straight-line swipe.\""
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1.00 5.00\\n3.00 3.00\\n4.00 2.00\\n6.00 4.50\\n7.00 1.00\\n\") == \"4\\n\"\nassert solution(\"3\\n-1.50 -1.00\\n1.50 -1.00\\n0.00 1.00\\n\") == \"3\\n\""
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1.00 5.00\\n3.00 3.00\\n4.00 2.00\\n6.00 4.50\\n7.00 1.00\") == 4\nassert solution(\"3\\n-1.50 -1.00\\n1.50 -1.00\\n0.00 1.00\") == 3"
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1.00 5.00\\n3.00 3.00\\n4.00 2.00\\n6.00 4.50\\n7.00 1.00\") == \"4\"\nassert solution(\"1.50 -1.00\\n-1.50 -1.00\\n0.00 1.00\") == \"3\""
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Test failed for example 1. Expected {output}, got {solution(input())}.\"\nassert solution(input()) == output, f\"Test failed for example 2. Expected {output}, got {solution(input())}.\""
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1.00 5.00\\n3.00 3.00\\n4.00 2.00\\n6.00 4.50\\n7.00 1.00\\n\") == \"4\\n\", \"Test case 1 failed\"\n\nassert solution(\"3\\n-1.50 -1.00\\n1.50 -1.00\\n0.00 1.00\\n\") == \"3\\n\", \"Test case 2 failed\""
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\"\n"
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 5 2\\nR..?.\\n.X...\\n100 100 7 100 8\\n') == '16'\nassert solution('2 3 1\\nX..\\n.?.\\n10 1000 1\\n') == '10'\n"
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 5 2\\nR..?.\\n.X...\\n100 100 7 100 8\") == \"16\"\nassert solution(\"2 3 1\\nX..\\n.?.\\n10 1000 1\") == \"10\""
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"16\", \"Test case 1 failed\"\n\nassert solution(\"2 5 2\\nR..?.\\n.X...\\n100 100 7 100 8\") == \"16\", \"Test case 2 failed\"\n\nassert solution(\"2 3 1\\nX..\\n.?.\\n10 1000 1\") == \"10\", \"Test case 3 failed\""
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 5 2\\nR..?.\\n.X...\\n100 100 7 100 8\") == \"16\\n\"\nassert solution(\"2 3 1\\nX..\\n.?.\\n10 1000 1\") == \"10\\n\""
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"16\"\n"
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 5 2\\nR..?\\n.X...\\n100 100 7 100 8\\n2 3 1\\nX..\\n.?.\\n10 1000 1\\n') == '16'\n"
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 5 2\\nR..?.\\n.X...\\n100 100 7 100 8\") == \"16\"\n\nassert solution(\"2 3 1\\nX..\\n.?.\\n10 1000 1\") == \"10\""
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''2 5 2\nR..?.\n.X...\n100 100 7 100 8\n''') == '16\\n'\n\nassert solution('''2 3 1\nX..\n.?.\n10 1000 1\n''') == '10\\n'"
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 5 2\\nR..?\\n.X...\\n100 100 7 100 8') == '16', 'Test case 1 failed'\nassert solution('2 3 1\\nX..\\n.?\\n10 1000 1') == '10', 'Test case 2 failed'\n"
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"16\", \"Incorrect Output\""
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1.414\"\n"
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '1.414'\nprint(\"All test cases passed\")"
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n0 4 4\\n1 5 1\\n2 6 1\") == \"1.414\"\nassert solution(\"6 11\\n0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10\") == \"5.657\""
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 5.657, \"The output is not as expected.\""
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r')) == '1.414'"
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n3 3\n0 4 4\n1 5 1\n2 6 1\n''') == '1.414'\n\nassert solution('''\n6 11\n0 0 1\n0 1 2\n1 0 3\n1 1 4\n5 5 1\n20 20 10\n''') == '5.657'"
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 3\\n0 4 4\\n1 5 1\\n2 6 1') == '1.414\\n'\nassert solution('6 11\\n0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10') == '5.657\\n'"
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected_output, f\"Got '{solution(stdin)}', expected '{expected_output}'\""
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 3\\n0 4 4\\n1 5 1\\n2 6 1') == '1.414'\nassert solution('6 11\\n0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10') == '5.657'"
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"0.433\"\n"
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 1 1 1 1') == 1.0\nassert solution('3 1 1 1') == 0.433\n"
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 1 1 1 1\") == \"1.0\"\nassert solution(\"3 1 1 1\") == \"0.433\""
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n4 1 1 1 1\n\"\"\") == \"1.0\"\n\nassert solution(\"\"\"\n3 1 1 1\n\"\"\") == \"0.433\""
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 1 1 1 1\") == 1.0\nassert solution(\"3 1 1 1\") == 0.433"
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"0\""
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 1 1 1 1\") == \"1.0\\n\"\nassert solution(\"3 1 1 1\") == \"0.433\\n\""
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 1.0, \"Write your solution here\""
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 1 1 1 1\") == 1.0\nassert solution(\"3 1 1 1\") == 0.433"
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"Barica should start at plant 1 and go to plant N with the largest amount of energy.\""
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == expected_output, f\"Test failed with input {stdin} and output {expected_output}\""
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 5\\n1 1 5\\n2 1 5\\n1 2 4\\n2 3 5\\n3 2 30\\n3 3 5\") == \"5\\n4\\n1 1\\n2 1\\n2 3\\n3 3\"\nassert solution(\"8 10\\n1 1 15\\n2 2 30\\n1 2 8\\n2 1 7\\n3 2 8\\n2 3 7\\n4 2 100\\n3 3 15\") == \"36\"\nprint(\"All test cases pass!\")"
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == expected, f\"Test failed. Expected: {expected}, got: {solution}\""
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"Barica can not make a jump if she doesn\u2019t have enough energy units beforehand.\\n\"\nassert solution == \"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n\"\n"
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"6 5\n1 1 5\n2 1 5\n1 2 4\n2 3 5\n3 2 30\n3 3 5\"\"\") == \"5\\n4\\n1 1\\n2 1\\n2 3\\n3 3\\n\"\n\nassert solution(\"\"\"8 10\n1 1 15\n2 2 30\n1 2 8\n2 1 7\n3 2 8\n2 3 7\n4 2 100\n3 3 15\"\"\") == \"36\\n5\\n1 1\\n1 2\\n2 2\\n3 2\\n3 3\\n\""
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 5\\n1 1 5\\n2 1 5\\n1 2 4\\n2 3 5\\n3 2 30\\n3 3 5\\n\") == \"5\\n4\\n1 1\\n2 1\\n2 3\\n3 3\\n\"\nassert solution(\"8 10\\n1 1 15\\n2 2 30\\n1 2 8\\n2 1 7\\n3 2 8\\n2 3 7\\n4 2 100\\n3 3 15\\n\") == \"36\\n5\\n1 1\\n1 2\\n2 2\\n3 2\\n3 3\\n\"\n"
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 5\\n1 1 5\\n2 1 5\\n1 2 4\\n2 3 5\\n3 2 30\\n3 3 5\") == \"5\\n4\\n1 1\\n2 1\\n2 3\\n3 3\"\nassert solution(\"8 10\\n1 1 15\\n2 2 30\\n1 2 8\\n2 1 7\\n3 2 8\\n2 3 7\\n4 2 100\\n3 3 15\") == \"36\\n5\\n1 1\\n1 2\\n2 2\\n3 2\\n3 3\""
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 'Output the final energy level on the first line. Output an integer L, the number of plants Barica should travel, including plants 1 and N. On the following L lines, output the sequence of plants Barica should travel.'"
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output() # check if the output matches the expected output\n"
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1\\n2 1\\n1 2\\n\") == \"1\"\nassert solution(\"3 2\\n2 1 3\\n1 3\\n2 3\\n\") == \"3\""
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    2 1\n    2 1\n    1 2\n    \"\"\"\n) == \"1\"\n\nassert solution(\n    \"\"\"\n    3 2\n    2 1 3\n    1 3\n    2 3\n    \"\"\"\n) == \"3\"\n\nassert solution(\n    \"\"\"\n    1 1\n    1 2\n    2 2\n    1 1\n    1 2\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    1 1\n    2 2\n    "
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(solution) == \"1\"\nassert solution(\"2 1\\n2 1\\n1 2\\n\") == \"1\"\nassert solution(\"3 2\\n2 1 3\\n1 3\\n2 3\\n\") == \"3\""
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    2 1\n    2 1\n    1 2\n    \"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n    3 2\n    2 1 3\n    1 3\n    2 3\n    \"\"\"\n) == \"3\\n\""
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1\\n2 1\\n1 2\\n\") == \"1\\n\"\nassert solution(\"3 2\\n2 1 3\\n1 3\\n2 3\\n\") == \"3\\n\""
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n2 1\\n2 1\\n1 2\\n2 1 3\\n1 3\\n2 3\\n\") == \"1\\n\"\nassert solution(\"2\\n2 1\\n2 1\\n1 2\\n2 1 3\\n1 3\\n2 3\\n\") == \"1\\n\"\nassert solution(\"3\\n2 1\\n2 1\\n1 2\\n2 1 3\\n1 3\\n2 3\\n\") == \"1\\n\""
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Arrange\\n2 1\\n2 1\\n1 2\\nSample Input 1:\\n2 1\\nSample Output 1:\\n1\\n\\nSample Input 2:\\n3 2\\n2 1 3\\n1 3\\n2 3\\nSample Output 2:\\n3\\n\") == \"1\""
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1\\n2 1\\n1 2\\n\") == \"1\\n\"\nassert solution(\"3 2\\n2 1 3\\n1 3\\n2 3\\n\") == \"3\\n\""
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1\\n2 1\\n1 2\\n\") == \"1\\n\"\nassert solution(\"3 2\\n2 1 3\\n1 3\\n2 3\\n\") == \"3\\n\""
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 8\\n1 4\\n4 5\\n1 5\\n1 2\\n1 3\\n2 3\\n3 5\\n2 5\") == -1\nassert solution(\"6 5\\n2 4\\n3 5\\n1 5\\n3 6\\n1 6\") == 5"
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 8\\n1 4\\n4 5\\n1 5\\n1 2\\n1 3\\n2 3\\n3 5\\n2 5\") == -1\nassert solution(\"6 5\\n2 4\\n3 5\\n1 5\\n3 6\\n1 6\") == 5"
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"Output: -1\\n\""
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 8\\n1 4\\n4 5\\n1 5\\n1 2\\n1 3\\n2 3\\n3 5\\n2 5\") == -1\nassert solution(\"6 5\\n2 4\\n3 5\\n1 5\\n3 6\\n1 6\") == 5"
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 8\\n1 4\\n4 5\\n1 5\\n1 2\\n1 3\\n2 3\\n3 5\\n2 5\") == -1\n\nassert solution(\"6 5\\n2 4\\n3 5\\n1 5\\n3 6\\n1 6\") == 5"
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Expected: {output}, Actual: {solution(input())}\""
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    5 8\n    1 4\n    4 5\n    1 5\n    1 2\n    1 3\n    2 3\n    3 5\n    2 5\n    \"\"\"\n) == -1\n\nassert solution(\n    \"\"\"\n    6 5\n    2 4\n    3 5\n    1 5\n    3 6\n    1 6\n    \"\"\"\n) == 5"
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 8\\n1 4\\n4 5\\n1 5\\n1 2\\n1 3\\n2 3\\n3 5\\n2 5\\n\") == -1\n\nassert solution(\"6 5\\n2 4\\n3 5\\n1 5\\n3 6\\n1 6\\n\") == 5"
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 8\\n1 4\\n4 5\\n1 5\\n1 2\\n1 3\\n2 3\\n3 5\\n2 5\\n\") == -1\nassert solution(\"6 5\\n2 4\\n3 5\\n1 5\\n3 6\\n1 6\\n\") == 5"
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == -1, \"You should implement the solution here.\""
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 1\\n1 1\\n5 1\\n5 5\\n4 2\\n\") == \"4.00\\n\"\nassert solution(\"6 3\\n-8 -8\\n0 -1\\n8 -8\\n1 0\\n0 10\\n-1 0\\n\") == \"9.00\\n\"\nassert solution(\"4 1\\n1 1\\n5 1\\n5 5\\n4 2\\n5 5\\n1 1\\n\") == \"4.00\\n\"\nassert solution(\"6 3\\n-8 -8\\n0 -1\\n8 -8\\n1 0\\n0 10\\n-1 0\\n5 5\\n1 1\\n\") == \"9.00\\n\""
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 4.0\n"
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 4.00\nassert solution() == 9.00"
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '4.00', 'Solution is incorrect'"
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 1\\n1 1\\n5 1\\n5 5\\n4 2\\n\") == \"4.00\\n\"\nassert solution(\"6 3\\n-8 -8\\n0 -1\\n8 -8\\n1 0\\n0 10\\n-1 0\\n\") == \"9.00\\n\"\nassert solution(\"4 3\\n1 2\\n3 4\\n\") == \"2.00\\n\"\nassert solution(\"5 1\\n1 3\\n2 2\\n3 4\\n4 2\\n\") == \"3.00\\n\"\nassert solution(\"1 2\\n3 4\\n5 6\\n7 8\\n\") == \"2.00\\n\"\nassert solution(\"6 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n\") == \"3.00\\n\""
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 1\\n1 1\\n5 1\\n5 5\\n4 2\\n\") == 4.00\nassert solution(\"6 3\\n-8 -8\\n0 -1\\n8 -8\\n1 0\\n0 10\\n-1 0\\n\") == 9.00"
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected_output, f\"Testcase failed: {stdin}\"\nprint(f\"Testcase passed: {stdin}\")"
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 1\\n1 1\\n5 1\\n5 5\\n4 2\\n\") == 4.00\nassert solution(\"6 3\\n-8 -8\\n0 -1\\n8 -8\\n1 0\\n0 10\\n-1 0\\n\") == 9.00"
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 4.00\nassert solution() == 9.00"
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"4.00\""
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3 2\\nPAINT 2 0 0 3 3\\nPAINT 3 0 3 3 3\\n\") == \"2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\\n\"\nassert solution(\"3 3 4\\nPAINT 3 0 0 1 1\\nSAVE\\nPAINT 2 1 1 2 2\\nLOAD 1\\n\") == \"3 1 1\\n1 3 1\\n1 1 1\\n\""
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3 2\\nPAINT 2 0 0 3 3\\nPAINT 3 0 3 3 3\\n\") == \"2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\"\nassert solution(\"3 3 4\\nPAINT 3 0 0 1 1\\nSAVE\\nPAINT 2 1 1 2 2\\nLOAD 1\\n\") == \"3 1 1\\n1 3 1\\n1 1 1\""
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3 2\\nPAINT 2 0 0 3 3\\nPAINT 3 0 3 3 3\\n\") == '2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\\n'\nassert solution(\"3 3 4\\nPAINT 3 0 0 1 1\\nSAVE\\nPAINT 2 1 1 2 2\\nLOAD 1\\n\") == '3 1 1\\n1 3 1\\n1 1 1\\n'"
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3 2\\nPAINT 2 0 0 3 3\\nPAINT 3 0 3 3 3\\n\") == \"2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\\n\"\n\nassert solution(\"3 3 4\\nPAINT 3 0 0 1 1\\nSAVE\\nPAINT 2 1 1 2 2\\nLOAD 1\\n\") == \"3 1 1\\n1 3 1\\n1 1 1\\n\"\n\nassert solution(\"4 1000 2\\nPAINT 2 0 0 3 3\\nSAVE\\nPAINT 3 0 3 3 3\\nLOAD 2\\n\") == \"2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\\n\"\n\nassert solution(\"4 2 1000\\nPAINT 2 0 0 3 3\\nSAVE\\nPAINT 3 0 3 3 3\\nLOAD 1\\n\") == \"2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\\n\"\n\nassert solution(\"3 3 4\\nPAINT 3 0 0 1 1\\nSAVE\\nPAINT 2 1 1 2 2\\nLOAD 1\\n\") == \"3 1 1\\n1 3 1\\n1 1 1\\n\"\n\nassert solution(\"4 1000 2\\nPAINT 2 0 0 3 3\\nSAVE\\nPAINT 3 0 3 3 3\\nLOAD 2\\n\") == \"2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\\n\"\n\nassert solution(\"4 2 1000\\nPAINT 2 0 0 3 3\\nSAVE\\nPAINT 3 0 3 3 3\\nLOAD 1\\n\") == \"2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\\n\""
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}, Received: {solution(input())}\""
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3 2\\nPAINT 2 0 0 3 3\\nPAINT 3 0 3 3 3\\n\") == \"2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\\n\", \"Sample Input 1\"\nassert solution(\"3 3 4\\nPAINT 3 0 0 1 1\\nSAVE\\nPAINT 2 1 1 2 2\\nLOAD 1\\n\") == \"3 1 1\\n1 3 1\\n1 1 1\\n\", \"Sample Input 2\""
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3 2\\nPAINT 2 0 0 3 3\\nPAINT 3 0 3 3 3\\n\") == \"2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\"\nassert solution(\"3 3 4\\nPAINT 3 0 0 1 1\\nSAVE\\nPAINT 2 1 1 2 2\\nLOAD 1\\n\") == \"3 1 1\\n1 3 1\\n1 1 1\""
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3 2\\nPAINT 2 0 0 3 3\\nPAINT 3 0 3 3 3\\n\") == \"2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\\n\"\nassert solution(\"3 3 4\\nPAINT 3 0 0 1 1\\nSAVE\\nPAINT 2 1 1 2 2\\nLOAD 1\\n\") == \"3 1 1\\n1 3 1\\n1 1 1\\n\""
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3 2\\nPAINT 2 0 0 3 3\\nPAINT 3 0 3 3 3\\n\") == \"2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\\n\"\nassert solution(\"3 3 4\\nPAINT 3 0 0 1 1\\nSAVE\\nPAINT 2 1 1 2 2\\nLOAD 1\\n\") == \"3 1 1\\n1 3 1\\n1 1 1\\n\""
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"\"\"2 1 2 3\n1 2 1 2\n2 1 2 3\n1 2 1 2\"\"\", \"The solution is incorrect.\""
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\") == \"1 4 2 3\"\nassert solution(\"5 1\") == \"-1\"\n"
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\") == \"1 4 2 3\\n\"\nassert solution(\"5 1\") == \"-1\\n\""
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\") == \"1 4 2 3\"\nassert solution(\"5 1\") == \"-1\""
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '1 4 2 3'\nassert solution() == '-1'\n\nfrom typing import List"
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n\") == \"1 4 2 3 5 6\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\") == \"-1\"\n"
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin='Sample Input 1\\n4 3\\nSample Output 1\\n1 4 2 3\\n\\nSample Input 2\\n5 1\\nSample Output 2\\n-1\\ndef solution(stdin: str) -> str:\\n    pass\\n') == '1 4 2 3\\n'\nassert solution(stdin='Sample Input 1\\n4 3\\nSample Output 1\\n1 4 2 3\\n\\nSample Input 2\\n5 1\\nSample Output 2\\n-1\\ndef solution(stdin: str) -> str:\\n    pass\\n') == '1 4 2 3\\n'\nassert solution(stdin='Sample Input 1\\n4 3\\nSample Output 1\\n1 4 2 3\\n\\nSample Input 2\\n5 1\\nSample Output 2\\n-1\\ndef solution(stdin: str) -> str:\\n    pass\\n') == '1 4 2 3\\n'\nassert solution(stdin='Sample Input 1\\n4 3\\nSample Output 1\\n1 4 2 3\\n\\nSample Input 2\\n5 1\\nSample Output 2\\n-1\\ndef solution(stdin: str) -> str:\\n    pass\\n') == '1 4 2 3\\n'\nassert solution(stdin='Sample Input 1\\n4 3\\nSample Output 1\\n1 4 2 3\\n\\nSample Input 2\\n5 1\\nSample Output 2\\n-1\\ndef solution(stdin: str) -> str:\\n    pass\\n') == '1 4 2 3\\n'\nassert solution(stdin='Sample Input 1\\n4 3\\nSample Output 1\\n1 4 2 3\\n\\nSample Input 2\\n5 1\\nSample Output 2\\n-1\\ndef solution(stdin: str) -> str:\\n    pass\\n') == '1 4 2 3\\n'\nassert solution(stdin='Sample Input 1\\n4 3\\nSample Output 1\\n1 4 2 3\\n\\nSample Input 2\\n5 1\\nSample Output 2\\n-1\\ndef solution(stdin: str) -> str:\\n    pass\\n') == '1 4 2 3\\n'\nassert solution(stdin='Sample Input 1\\n4 3\\nSample Output 1\\n1 4 2 3\\n\\nSample Input 2\\n5 1\\nSample Output 2\\n-1\\ndef solution(stdin: str) -> str:\\n    pass\\n') == '1 4 2 3\\n'\nassert solution(stdin='Sample Input 1\\n4 3\\nSample Output 1\\n1 4 2 3\\n\\nSample Input 2\\n5 1\\nSample Output 2\\n-1\\ndef solution(stdin: str) -> str:\\n    pass\\n') == '1 4 2 3\\n'\nassert solution(stdin='Sample Input 1\\n4 3\\nSample Output 1\\n1 4 2 3\\n\\nSample Input 2\\n5 1\\nSample Output 2\\n-1\\ndef solution(stdin: str) -> str:\\n    pass\\n') == '1 4 2 3\\n'\nassert solution(stdin='Sample Input 1\\n4 3\\nSample Output 1\\n1 4 2 3\\n\\nSample Input 2\\n5 1\\nSample Output 2\\n-1\\ndef solution(stdin: str) -> str:\\n    pass\\n') == '1 4 2 3\\n'\nassert solution(stdin='Sample Input 1\\n4 3\\nSample Output 1\\n1 4 2 3\\n\\nSample Input 2\\n5 1\\nSample Output 2\\n-1\\ndef solution(stdin: str) -> str:\\n    pass\\n') == '1 4 2 3\\n'\nassert solution(stdin='Sample Input 1\\n4 3\\nSample Output 1\\n1 4 2 3\\n\\nSample Input 2\\n5 1"
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed. Expected: {expected_output}, Received: {solution(input())}\""
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n5 1\\n\") == \"1 4 2 3\\n-1\\n\""
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\") == \"1 4 2 3\"\nassert solution(\"5 1\") == \"-1\"\n"
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"1 4 2 3\\n\"\nprint(\"Sample Input 1: 4 3\")\nprint(\"Sample Output 1: 1 4 2 3\")\n\nassert solution(stdin) == \"-1\\n\"\nprint(\"Sample Input 2: 5 1\")\nprint(\"Sample Output 2: -1\")"
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(4) == 1\nassert solution(3) == 0"
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '1'\n\nimport math"
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 1"
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(solution) == 1"
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n4 2\\n2 1\\n1 3\") == \"1\"\nassert solution(\"4\\n5 0\\n2 6\\n8 6\\n5 7\") == \"0\""
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1\""
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed: {solution(stdin)}!= {expected_output}\""
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == output\n"
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == output"
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Test case {i+1} failed: {output}!= {solution(input())}\" for i, (input, output) in enumerate([\n    ((\"3\", \"4 2\\n2 1\\n1 3\"), \"1\"),\n    ((\"4\", \"5 0\\n2 6\\n8 6\\n5 7\"), \"0\")\n])"
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10\\n\") == \"4 140\\n\", \"Test 1 failed.\"\nassert solution(\"2 1 0 1\\n0 1 1000 100\\n\") == \"1000 100000\\n\", \"Test 2 failed.\""
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == expected_output1\nassert solution(sample_input2) == expected_output2"
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"4 140\\n100000\\n\", \"Please implement the solution function\""
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n    4 4 0 3\n    0 1 4 10\n    1 2 2 10\n    0 2 4 30\n    2 3 4 10\n    ''') == '4 140'\n\nassert solution('''\n    2 1 0 1\n    0 1 1000 100\n    ''') == '1000 100000'"
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '4 140\\n1000 100000\\n'"
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10') == '4 140\\n'\nassert solution('2 1 0 1\\n0 1 1000 100') == '1000 100000\\n'"
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"4 140\\n1000 100000\\n\", \"Test failed!\""
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n4 4 0 3\n0 1 4 10\n1 2 2 10\n0 2 4 30\n2 3 4 10\n\"\"\") == \"4 140\\n\"\n\nassert solution(\"\"\"\n2 1 0 1\n0 1 1000 100\n\"\"\") == \"1000 100000\\n\""
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10\") == \"4 140\\n\"\n\nassert solution(\"2 1 0 1\\n0 1 1000 100\") == \"1000 100000\\n\""
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10\") == \"4 140\"\nassert solution(\"2 1 0 1\\n0 1 1000 100\") == \"1000 100000\""
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input1) == '3'\nassert solution(sample_input2) == 'impossible'"
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt').read()) == \"3\\n\"\nassert solution(open('sample_input1.txt').read()) == \"3\\n\"\nassert solution(open('sample_input2.txt').read()) == \"impossible\\n\""
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"3\\n\""
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution([100, 7, 1, 50, 50, 70, 70, 90, 90, 40, 20, 60, 60, 80, 80, 20]), \"Sample Input 1\"\nassert not solution([8, 2, 8, 3, 5, 7]), \"Sample Input 2\""
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"100 7\\n1 50\\n50 70\\n70 90\\n90 40\\n20 60\\n60 80\\n80 20\") == 3\nassert solution(\"8 2\\n8 3\\n5 7\") == \"impossible\""
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '3'"
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"100 7\\n1 50\\n50 70\\n70 90\\n90 40\\n20 60\\n60 80\\n80 20\") == 3\nassert solution(\"8 2\\n8 3\\n5 7\") == \"impossible\""
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Solution does not match expected output. Received: {solution(input())}, Expected: {output()}\"\n"
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input1) == \"3\"\nassert solution(sample_input2) == \"impossible\""
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2\n\nsample_input_1 = '''\n100 7\n1 50\n50 70\n70 90\n90 40\n20 60\n60 80\n80 20\n'''\n\nsample_input_2 = '''\n8 2\n8 3\n5 7\n'''\n\nexpected_output_1 = '''\n3\n'''\n\nexpected_output_2 = '''\nimpossible\n'''"
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"120\") == 5\nassert solution(\"51090942171709440000\") == 21"
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('120') == '5'\nassert solution('51090942171709440000') == '21'"
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(120) == 5\nassert solution(51090942171709440000) == 21"
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(120) == 5\nassert solution(51090942171709440000) == 21"
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"120\") == \"5\", \"Test case 1 failed\"\nassert solution(\"51090942171709440000\") == \"21\", \"Test case 2 failed\"\n"
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"120\") == \"5\"\nassert solution(\"51090942171709440000\") == \"21\""
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"120\") == \"5\"\nassert solution(\"51090942171709440000\") == \"21\""
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(120) == 5, \"Sample Output 1\"\nassert solution(51090942171709440000) == 21, \"Sample Output 2\""
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"120\") == \"5\", \"Sample Input 1 failed\"\nassert solution(\"51090942171709440000\") == \"21\", \"Sample Input 2 failed\"\n\nfrom typing import List"
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"120\") == 5, \"120 not equal to 5\"\nassert solution(\"51090942171709440000\") == 21, \"51090942171709440000 not equal to 21\""
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('10 1 2') == '45'\nassert solution('3 3 3') == '10'"
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"45\""
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 1 2\\n3 3 3\") == \"45\"\nassert solution(\"3 3 3\") == \"10\""
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 45"
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3 3 3) == \"10\", \"Test 1 failed\"\nassert solution(10 1 2) == \"45\", \"Test 2 failed\""
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(10, 1, 2) == 45\nassert solution(3, 3, 3) == 10"
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 1 2\") == 45\nassert solution(\"3 3 3\") == 10"
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), \"Test case not satisfied\""
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed. Expected output: {expected_output}, but got: {solution(stdin)}\""
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n\") == \"20\"\nassert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n10\\n\") == \"impossible\""
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"18\\n\"\nassert solution(stdin) == \"20\\n\""
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input1) == expected1, f\"Test case 1 failed: got {solution(input1)}, expected {expected1}\"\nassert solution(input2) == expected2, f\"Test case 2 failed: got {solution(input2)}, expected {expected2}\""
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n10\") == \"18\\n\"\nassert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\") == \"20\\n\""
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n') == '20\\n'"
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\") == \"18\"\nassert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n\") == \"20\""
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n\") == \"20\"\nassert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n\") == \"impossible\"\nassert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n10\\n\") == \"18\""
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n') == '20\\n'"
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n10\") == \"18\"\nassert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\") == \"20\""
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    5\n    3 1\n    4 1\n    5 9\n    2 6\n    5 3\n    5\n    \"\"\"\n) == \"20\""
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Output\""
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"3\\n\", \"Solution should return 3\""
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == output, f\"Expected output: '{output}', got: '{solution(stdin)}'\""
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"3\\n\"\nassert solution(open(\"input2.txt\", \"r\").read()) == \"11\\n\""
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1 5 10\\n7 8 2\") == 3\nassert solution(\"3\\n-1 -1 -1\\n5 5 5\\n10 10 10\") == 11"
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 5 10\\n7 8 2\\n\") == \"3\\n\"\nassert solution(\"3\\n-1 -1 -1\\n5 5 5\\n10 10 10\\n\") == \"11\\n\""
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"11\", \"Incorrect output\"\nassert solution(stdin) == \"11\", \"Incorrect output\""
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"3\""
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Test case {i+1} failed. Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\", \"The correct output is 2, but got '{}'\".format(solution(stdin))"
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\\n110\\n011\\n\") == 2\nassert solution(\"4 2\\n1000\\n1000\\n0000\\n0010\\n\") == 0"
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\\n110\\n011\\n4 2\\n1000\\n1000\\n0000\\n0010\") == \"2\"\nassert solution(\"4 2\\n1000\\n1000\\n0000\\n0010\\n2 4\\n1000\\n1000\\n0000\\n0010\") == \"0\"\n\nfrom functools import lru_cache"
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1\\n110\\n011\\n\") == \"2\"\nassert solution(\"4 2\\n1000\\n1000\\n0000\\n0010\\n\") == \"0\""
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 2"
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input) == output, f\"Test failed for input: {input}, output: {output}\"\nfor i in range(m):\n    assert solution(input) == output, f\"Test failed for input: {input}, output: {output}\"\nprint(0) # Remove this line to print the output"
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input) == output, \"Test failed. Expected: {}, Received: {}\".format(output, solution(input))"
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"2\", \"The solution is incorrect.\""
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 1\\n110\\n011\\n4 2\\n1000\\n1000\\n0000\\n0010') == 2"
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1\\n110\\n011\") == 2\nassert solution(\"4 2\\n1000\\n1000\\n0000\\n0010\") == 0\n\nfrom typing import List"
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n1 2 3\\n3\\n2\\n2\\n') == '1\\n'\nassert solution('3\\n1 3 2\\n2\\n') == '5\\n'\nassert solution('3\\n1 4 2\\n3\\n') == '2\\n'\nassert solution('3\\n1 2 4\\n4\\n') == '3\\n'\nassert solution('3\\n1 1 2\\n1\\n') == '1\\n'\nassert solution('3\\n2 1 3\\n3\\n') == '2\\n'\nassert solution('3\\n1 4 2\\n4\\n') == '3\\n'\nassert solution('3\\n1 1 2\\n1\\n') == '1\\n'\nassert solution('3\\n2 1 3\\n3\\n') == '2\\n'\nassert solution('3\\n1 4 2\\n4\\n') == '3\\n'\nassert solution('3\\n1 1 2\\n1\\n') == '1\\n'\nassert solution('3\\n2 1 3\\n3\\n') == '2\\n'\nassert solution('3\\n1 4 2\\n4\\n') == '3\\n'\nassert solution('3\\n1 1 2\\n1\\n') == '1\\n'\nassert solution('3\\n2 1 3\\n3\\n') == '2\\n'"
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n2\\n\") == \"1\\n\"\nassert solution(\"3\\n1 3 2\\n2\\n\") == \"5\\n\""
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == solution(stdin), \"The given solution is incorrect.\"\n"
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 1"
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '1', \"Incorrect output\""
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Input {stdin} should produce output {output()}, but got {solution(stdin)}.\"\nfor stdin, output in zip(inputs, outputs):\n    assert solution(stdin) == output, f\"Input {stdin} should produce output {output()}, but got {solution(stdin)}.\""
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n1 3 2\\n2\\n\") == \"1\\n\"\nassert solution(\"3\\n1 3 2\\n2\\n\") == \"5\\n\"\n"
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n1 3 2\\n2\\n\") == \"1\\n\"\nassert solution(\"3\\n1 3 2\\n2\\n\") == \"5\\n\""
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n2\\n\") == \"1\"\nassert solution(\"3\\n1 3 2\\n2\\n\") == \"5\""
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()\nfor _ in range(test_cases):\n    n, *prices = map(int, input().split())\n    p = int(input())\n    result = solution(n, *prices, p)\n    print(result)"
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"crashing_line\", \"Your fancy debugger will not help you in this matter.\""
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"0\""
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"1 100 20\") == \"0\"\nassert solution(stdin=\"10 10 1\") == \"19\""
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '0'"
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"Solution found\\n\"\nprint(\"Solution found\")"
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '0'"
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"1 100 20\") == \"0\"\nassert solution(stdin=\"10 10 1\") == \"19\"\nassert solution(stdin=\"10 100000 1000\") == \"19\""
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"Crash here\"\nprint(\"Crash here\")\nprint(\"This line will not be printed\")\nprint(\"This line will be printed\", end=\"\")\nprint(\"This line will be printed\", end=\"\\n\")\nprint(\"This line will be printed\", flush=True)\nprint(\"This line will be printed\", end=\"\")\nprint(\"This line will be printed\", end=\"\\n\")\nprint(\"This line will be printed\", flush=True)"
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"0\", \"Wrong answer. The program should crash after executing the first printf statement.\"\n\nfrom typing import List\nimport sys"
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == \"c\"\nassert solution(sample_input_2) == \"SHIP IT\""
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == \"c\"\nassert solution(sample_input2) == \"SHIP IT\""
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"SHIP IT\""
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('classa classb myfilec execd libe') == 'c'\nassert solution('classa 2 import classb import myfilec, libe classb 1 import execd myfilec 1 import libe libe 0') == 'SHIP IT'\nassert solution('a b c d') == 'SHIP IT'\nassert solution('a 1') == 'c'\nassert solution('import d, b, c') == 'SHIP IT'\nassert solution('b 2 import d') == 'SHIP IT'\nassert solution('import d') == 'SHIP IT'\nassert solution('import c') == 'SHIP IT'\nassert solution('c 1 import c') == 'SHIP IT'\nassert solution('d 0') == 'SHIP IT'"
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == \"c\"\nassert solution(sample_input_2) == \"SHIP IT\""
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"SHIP IT\"\n\nimport sys\nfrom collections import deque"
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"a b c d\\na 1\\nimport d, b, c\\nb 2\\nimport d\\nimport c\\nc 1\\nimport c\\nd 0\") == \"c\"\nassert solution(\"classa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0\") == \"SHIP IT\""
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\na b c d\\na 1\\nimport d, b, c\\nb 2\\nimport d\\nimport c\\nc 1\\nimport c\\nd 0\\n\") == \"c\\n\"\nassert solution(\"5\\nclassa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0\\n\") == \"SHIP IT\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input_1) == 'c'\nassert solution(sample_input_2) == 'SHIP IT'\n\nfrom collections import defaultdict"
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"a b c d\") == \"c\"\nassert solution(\"classa classb myfilec execd libe\") == \"SHIP IT\"\nassert solution(\"classa 2\") == \"SHIP IT\"\nassert solution(\"classb 1\") == \"SHIP IT\"\nassert solution(\"execd 1\") == \"SHIP IT\"\nassert solution(\"libe 0\") == \"SHIP IT\""
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5+3+x') == '1'\nassert solution('20+3+x') == '2'"
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test Case {test_case} Failed!\""
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5+3+x\\n9 10') == '1\\n'\nassert solution('20+3+x\\n0 5') == '2\\n'"
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=input()) == str(1), \"Invalid expression.\"\nassert solution(stdin=input()) == str(2), \"Invalid expression.\"\nassert solution(stdin=input()) == str(1), \"Invalid expression.\"\nassert solution(stdin=input()) == str(2), \"Invalid expression.\"\nassert solution(stdin=input()) == str(2), \"Invalid expression.\""
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5+3+x\") == \"1\\n\", \"Your solution is not correct.\"\nassert solution(\"20+3+x\") == \"2\\n\", \"Your solution is not correct.\""
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1\", \"The first line of input contains an invalid expression: $5+3+x$, but the solution should be $1$. Please check the input.\"\n\nassert solution() == \"2\", \"The second line of input contains an invalid expression: $20+3+x$, but the solution should be $2$. Please check the input.\""
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5+3+x\") == \"1\\n\"\nassert solution(\"20+3+x\") == \"2\\n\"\nassert solution(\"5+3-x\") == \"3\\n\"\nassert solution(\"20+3-x\") == \"2\\n\"\nassert solution(\"5+3*(x+1)\") == \"6\\n\"\nassert solution(\"20+3*(x+1)\") == \"10\\n\"\nassert solution(\"5+3*(x+1)*(x+1)\") == \"22\\n\"\nassert solution(\"20+3*(x+1)*(x+1)\") == \"24\\n\"\nassert solution(\"5+3*(x+1)*(x+1)*(x+1)\") == \"42\\n\"\nassert solution(\"20+3*(x+1)*(x+1)*(x+1)\") == \"40\\n\"\nassert solution(\"5+3*(x+1)*(x+1)*(x+1)*(x+1)\") == \"82\\n\"\nassert solution(\"20+3*(x+1)*(x+1)*(x+1)*(x+1)\") == \"80\\n\""
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5+3+x\\n9 10\") == \"1\\n\"\nassert solution(\"20+3+x\\n0 5\") == \"2\\n\""
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5+3+x\\n9 10\") == \"1\"\nassert solution(\"20+3+x\\n0 5\") == \"2\""
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5+3+x\\n9 10\") == \"1\\n\"\nassert solution(\"20+3+x\\n0 5\") == \"2\\n\""
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}, Got: {solution(input())}\""
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == 'yes'"
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 10\\n0 15\\n5 20\") == \"yes\"\nassert solution(\"2 10\\n1 15\\n0 20\") == \"no\""
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(), \"Please implement the solution\""
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(None) == 'no'\nassert solution('2 10\\n0 15\\n5 20') == 'yes'"
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input1) == 'yes'\nassert solution(sample_input2) == 'no'"
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\"\n"
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"yes\""
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 10\\n0 15\\n5 20\") == \"yes\"\nassert solution(\"2 10\\n1 15\\n0 20\") == \"no\"\n"
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 10\\n0 15\\n5 20\\n\") == \"yes\\n\"\nassert solution(\"2 10\\n1 15\\n0 20\\n\") == \"no\\n\""
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n4 4 4\n3\n2 green\n18 yellow\n34 red\n5 green\n''') == '0.25\\n'"
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input) == output, f\"Test failed with input: {input}, output: {output}\""
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Test case failed\"\n"
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == {\n   'solution': [\n        ['0.25'],\n        ['0'],\n    ],\n    'input': [\n        [4, 4, 4],\n        [4, 4, 4],\n    ],\n    'output': [\n        ['0.25'],\n        ['0'],\n    ],\n    'errors': [],\n}"
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4 4\\n3\\n2 green\\n18 yellow\\n34 red\\n5 green\\n\") == \"0.25\"\nassert solution(\"4 4 4\\n4\\n2 green\\n6 yellow\\n10 red\\n14 green\\n4 red\\n\") == \"0\""
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"0.25\", \"Your solution should return 0.25\""
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"0.25\""
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected, f\"Test failed for input '{stdin}'\\nExpected: {expected}\\nGot: {solution(stdin)}\"\n"
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, but got: {solution(stdin)}\""
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4 4\\n3\\n2 green\\n18 yellow\\n34 red\\n5 green\") == \"0.25\"\nassert solution(\"4 4 4\\n4\\n2 green\\n6 yellow\\n10 red\\n14 green\\n4 red\") == \"0\""
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 7\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\") == \"3\"\nassert solution(\"6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\") == \"inf\"\n\nfrom typing import List\n"
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 7\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\\n\") == \"3\"\nassert solution(\"6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\\n\") == \"inf\"\n\nfrom collections import defaultdict\nfrom itertools import permutations"
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 7\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\\n\") == \"3\"\nassert solution(\"6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\\n\") == \"inf\""
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 7\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\") == \"3\"\nassert solution(\"6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\") == \"inf\""
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 7\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\") == \"3\\n\"\nassert solution(\"6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\") == \"inf\\ndef solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input1) == \"3\", \"Test 1\"\nassert solution(sample_input2) == \"inf\", \"Test 2\""
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 7\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\") == \"3\"\nassert solution(\"6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\") == \"inf\""
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 7\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\") == 3\nassert solution(\"6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\") == \"inf\""
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"3\"\n\nassert solution(open(\"sample_input1.txt\", \"r\")) == \"3\"\nassert solution(open(\"sample_input2.txt\", \"r\")) == \"inf\""
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"The solution for the given problem has a different output.\\nExpected: {output}\\nActual: {solution(input())}\""
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 2"
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected_output, f\"Your solution is incorrect. Expected output: {expected_output}, Received output: {solution(stdin)}\""
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 2\n"
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"4\", \"The solution is incorrect.\""
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output, \"Function should return the expected output.\""
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\n1 2 3 4\\n\") == \"4\\n\"\nassert solution(\"12 3\\n2 3 4 5 6 7 4 7 8 8 12 12\\n\") == \"2\\n\""
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n1 2 3 4\\nSample Output 1:4\\n\\n12 3\\n2 3 4 5 6 7 4 7 8 8 12 12\\nSample Output 2:2\\n\") == [\"4\", \"2\"]"
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"4\"\n\nfrom typing import List"
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"The maximum number of participants that can join the excursion, so that all the participants\u2019 preferences are obeyed and the capacity of the bus is not exceeded is 4.\""
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\nhoose\\nhose\\nnose\\nnoises\\noise\\n\") == \"hoose\\noises\\noise\"\nassert solution(\"4\\nhose\\nhoose\\oose\\moose\\n\") == \"hoose\\moose\""
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"5\\nhoose\\nhose\\nose\\noises\\noise\\n\") == \"hoose\\noises\\noise\\n\"\nassert solution(stdin=\"4\\nhose\\hoose\\oose\\moose\\n\") == \"hoose\\moose\\n\""
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"sample_input_1.txt\", \"r\")) == \"hoose\\nnoises\\nnoise\"\nassert solution(open(\"sample_input_2.txt\", \"r\")) == \"hoose\\nmoose\\ndef solution(stdin: str) -> str: pass\""
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\nhoose\\nhose\\nnose\\nnoises\\noise\\n') == 'hoose\\noises\\noise'\nassert solution('4\\nhose\\nhoose\\oose\\moose\\n') == 'hoose\\moose'\nassert solution('1\\nhorse\\nhorse\\nmonkey\\n') == 'horse\\nmonkey'\nassert solution('1\\nhorse\\nhorse\\nmonkey\\n1\\n') == 'horse\\nmonkey'"
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\nhoose\\nhose\\nose\\noises\\noise\") == \"hoose\\noises\\noise\"\nassert solution(\"4\\nhose\\hoose\\oose\\moose\") == \"hoose\\moose\""
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"hoose\\nhose\\nose\\noises\\noise\") == \"hoose\\noises\\noise\"\nassert solution(\"hose\\hoose\\nose\\noises\\noise\") == \"hose\\noises\\noise\"\nassert solution(\"hoose\\nhose\\nose\\noises\\noise\\noise\") == \"hoose\\noises\\noise\"\nassert solution(\"hose\\hoose\\nose\\noises\\noise\\noise\\noise\") == \"hose\\noises\\noise\\noise\"\nassert solution(\"hose\\hoose\\nose\\noises\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\noise\\"
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin: str) == 'hoose\\noises\\noise', \"The solution is incorrect.\""
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(None) == ''  # solution"
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"hoose\\noises\\noise\", \"Output should be hoose\\noises\\noise\""
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\nhoose\\nhose\\nnose\\nnoises\\nnoise\\n\") == \"hoose\\noises\\noise\"\nassert solution(\"4\\nhose\\nhoose\\oose\\moose\\n\") == \"hoose\\moose\"\n"
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1\\n3\\n\") == \"2\\n2\\n5\\n\", \"Test 1\"\nassert solution(\"2 3\\n4\\n\") == \"0\\n16\\n8\\n\", \"Test 2\"\n"
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 1\\n3\\n2 3\\n4\\n') == '2\\n2\\n5\\n'\nassert solution('2 3\\n4\\n') == '0\\n16\\n8\\n'"
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1\\n3\\n\") == \"2\\n2\\n5\\n\"\nassert solution(\"2 3\\n4\\n\") == \"0\\n16\\n8\\n\""
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 'your_answer'"
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Testcase failed: {stdin}\\nExpected: {expected}\\nGot: {solution(stdin)}\""
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\\n3\\n\") == \"2\\n2\\n5\\n\"\nassert solution(\"2 3\\n4\\n\") == \"0\\n16\\n8\\n\""
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"1 1\\n3\\n\") == \"2\\n2\\n5\\n\", \"Sample Input 1\"\nassert solution(stdin=\"2 3\\n4\\n\") == \"0\\n16\\n8\\n\", \"Sample Input 2\""
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1\\n3\") == \"2\\n2\\n5\"\nassert solution(\"2 3\\n4\") == \"0\\n16\\n8\""
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n\\tpass\\n\"\n"
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('Sample Input 1') == '44.72135955'\nassert solution('Sample Input 2') == '68.52419365'"
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == solution(stdin)\nassert solution(stdin) == solution(stdin)"
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\nSample Input 1\\nSample Output 1\\n1\\nSample Input 2\\nSample Output 2\\n2\\n50 45 45\\n44.72135955\\n68.52419365\\n\") == \"44.72135955\\n68.52419365\\n\""
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"68.52419365\", \"Incorrect output\""
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n50 45 45\\n\") == \"44.72135955\""
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"68.52419365\"\n"
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"Output the minimum time required to reach the end of the road.\\nAnswer:68.52419365\\n\", \"Test failed!\""
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\\n50 45 45\\n1\\n1\\n50\\n50\\n\") == \"44.72135955\"\nassert solution(\"2\\n1 50 45\\n2 50\\n50\\n\") == \"68.52419365\""
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"44.72135955\"\nassert solution(open(\"input_2.txt\", \"r\").read()) == \"68.52419365\""
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3 1 5\\n1 2\\n\") == \"1\\n3\\n2\\n\"\nassert solution(\"3 4 2 3\\n1 3 1\\n\") == \"1\\n1\\n0\\n2\\n\"\n"
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 3 1 5\\n1 2\\n') == '1\\n3\\n2\\n'\nassert solution('3 4 2 3\\n1 3 1\\n') == '1\\n1\\n0\\n2\\n'"
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1\\n3\\n2\\n\""
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 3 1 5\\n1 2\\n3 1 2\\n') == '1\\n3\\n2\\n'\nassert solution('3 4 2 3\\n1 3 1\\n') == '1\\n1\\n0\\n2\\n'"
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input1) == '1\\n3\\n2\\n'\nassert solution(sample_input2) == '1\\n1\\n0\\n2\\n'"
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3 1 5\\n1 2\\n3 2\") == \"1\\n3\\n2\\n\"\nassert solution(\"3 4 2 3\\n1 3 1\\n2 2\") == \"1\\n1\\n0\\n2\\n\""
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1\\n3\\n2\\n\"\n"
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"TODO: Write the solution\""
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 3 1 5\\n1 2\\nSample Input 1:\\n2 3 1 5\\n1 2\\nSample Output 1:\\n1\\n3\\n2\\n\\n\\n\\n\\nSample Input 2:\\n3 4 2 3\\n1 3 1\\nSample Output 2:\\n1\\n1\\n0\\n2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n"
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 3\\n2 2 3 2 2') == '2'\nassert solution('2 5\\n1 1') == '3'\nassert solution('3 2\\n3 2 3 2') == '2'\nassert solution('3 1\\n1 1') == '4'"
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 5\\n1 1\\nSample Input 1:\\n2 5\\n1 1\\nSample Output 1:\\n3\\n\") == \"3\\n\"\nassert solution(\"5 3\\n2 2 3 2 2\\nSample Input 2:\\n5 3\\n2 2 3 2 2\\nSample Output 2:\\n2\\n\") == \"2\\n\""
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"3\", \"Your code is incorrect. Please fix it.\""
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected, f\"Your solution is incorrect. Expected: {expected}, Received: {solution(stdin)}\"\n"
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 2, \"Incorrect output\""
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin='2 5\\n1 1\\n2 3\\n2 2 3 2 2\\n') == '3\\n'\nassert solution(stdin='5 3\\n2 2 3 2 2\\n') == '2\\n'"
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"Output\", \"Your solution is incorrect.\""
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 5\\n1 1\\n\") == \"3\\n\"\nassert solution(\"5 3\\n2 2 3 2 2\\n\") == \"2\\n\""
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 2, \"Solution should return 2\""
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Incorrect output. Expected: {output}, Received: {solution(input())}\""
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n100 100\\n50 50\\n\") == \"50\\n\"\nassert solution(\"2\\n0 50\\n50 0\\n\") == \"25\\n\""
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2\n\ninput1 = \"2\\n100 100\\n50 50\"\noutput1 = \"50\"\ninput2 = \"2\\n0 50\\n50 0\"\noutput2 = \"25\""
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == \"50\"\nassert solution(sample_input_2) == \"25\""
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('sample_input1.txt', 'r')) == '50'\nassert solution(open('sample_input2.txt', 'r')) == '25'"
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Output the maximum probability of Jimmy Bonds successfully completing all the missions, as a percentage.\\n\"\n"
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n100 100\\n50 50\\n\") == \"50\\n\"\nassert solution(\"2\\n0 50\\n50 0\\n\") == \"25\\n\""
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n100 100\\n50 50\") == \"50\\n\"\nassert solution(\"2\\n0 50\\n50 0\") == \"25\\n\""
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 50\n"
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received: {solution(input())}\""
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n100 100\\n50 50\") == 50\nassert solution(\"2\\n0 50\\n50 0\") == 25"
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2\\n100\\n200\\n') == '160\\n'\nassert solution('3\\n100\\n200\\n2010\\n') == '250\\n'\n"
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Your solution is incorrect.\\nOutput: {output}\\nInput: {stdin}\"\n"
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution([2, 100, 200]) == 160\nassert solution([3, 100, 200, 2010]) == 250"
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n100\\n200\\n\") == \"160\\n\"\nassert solution(\"3\\n100\\n200\\n2010\\n\") == \"250\\n\"\nassert solution(\"4\\n20\\n15\\n30\\n\") == \"15\\n\"\nassert solution(\"5\\n30\\n60\\n90\\n120\\n\") == \"150\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input1) == \"160\"\nassert solution(sample_input2) == \"250\""
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed: {solution(stdin)}!= {expected_output}\""
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"160\", \"Test case 1 failed\"\n\nassert solution() == \"250\", \"Test case 2 failed\""
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n100\\n200\\n\") == \"160\\n\"\nassert solution(\"3\\n100\\n200\\n2010\\n\") == \"250\\n\"\n\nfrom typing import List\n"
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"250\"\nassert solution(10) == \"160\""
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n0 1 1\\n2 3 1\\n\") == \"2\"\nassert solution(\"5 5\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n\") == \"0\""
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\n0 1 1\\n2 3 1\") == \"2\"\nassert solution(\"5 5\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\") == \"0\""
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('Input') == 'Output'"
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n0 1 1\\n2 3 1\\n\") == \"2\\n\"\nassert solution(\"5 5\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n\") == \"0\\n\""
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"0\"\n"
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n0 1 1\\n2 3 1\\n\") == \"2\\n\"\nassert solution(\"5 5\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n\") == \"0\\n\""
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n0 1 1\\n2 3 1\\n\") == \"2\\n\"\nassert solution(\"5 5\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n\") == \"0\\n\""
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n0 1 1\\n2 3 1\\n\") == \"2\\n\"\nassert solution(\"5 5\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n\") == \"0\\n\"\n"
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n0 1 1\\n2 3 1\\n\") == \"2\\n\"\nassert solution(\"5 5\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n\") == \"0\\n\""
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n3 3 2 1\\n3 3 3\\n\") == [\"1 1\", \"1 2\", \"2 3 4\"]\nassert solution(\"4 2\\n3 3 2 2\\n6 3\\n\") == [-1]"
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\npass\""
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == \"1 1\\n1 2\\n2 3 4\"\nassert solution(sample_input2) == \"-1\""
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2"
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 3\\n3 3 2 1\\n3 3 3\\n') == '1 1\\n1 2\\n2 3 4\\n'\nassert solution('4 2\\n3 3 2 2\\n6 3\\n') == '-1\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 1, \"Expected 1, got {}\".format(solution())\nassert solution() == 2, \"Expected 2, got {}\".format(solution())\nassert solution() == -1, \"Expected -1, got {}\".format(solution())"
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"1 1\\n1 2\\n2 3 4\""
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == [\"1 1\", \"1 2\", \"2 3 4\"]"
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution([4, 3, 3, 3, 3]) == \"1\\n1\\n2\\n3\\n3\"\nassert solution([4, 2, 2, 3, 3]) == \"-1\""
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == [1, 1], \"Invalid output\"\nassert solution(input()) == [1, 2, 3, 4, 1], \"Invalid output\"\nassert solution(input()) == [1, 2, 3, 4, 1], \"Invalid output\"\nassert solution(input()) == [1, 2, 3, 4, 1], \"Invalid output\"\nassert solution(input()) == [-1], \"Invalid output\""
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3 10\\n0 0 D\\n10 1 L\\n\") == \"10.0\\n10.0\\n0.0\\n\"\nassert solution(\"4 3 7\\n1 0 D\\n3 0 D\\n4 1 L\\n6 2 D\\n\") == \"10.0\\n4.0\\n1.0\\n\""
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3 10\\n0 0 D\\n10 1 L\\nSample Output 1: 10.0\\n10.0\\n0.0\\n\") == \"10.0\\n10.0\\n0.0\\n\"\nassert solution(\"4 3 7\\n1 0 D\\n3 0 D\\n4 1 L\\n6 2 D\\nSample Output 2: 10.0\\n4.0\\n1.0\\ndef solution(stdin: str) -> str:\\n    pass\") == \"10.0\\n4.0\\n1.0\\n\""
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3 10\\n0 0 D\\n10 1 L\") == \"10.0\\n10.0\\n0.0\\n\\n\\n\\n\"\nassert solution(\"4 3 7\\n1 0 D\\n3 0 D\\n4 1 L\\n6 2 D\") == \"10.0\\n4.0\\n1.0\""
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"10.0\\n10.0\\n0.0\\n\""
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2\n\nfrom typing import List"
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"\"\"\n10.0\n10.0\n0.0\n\"\"\""
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3 10\\n0 0 D\\n10 1 L\") == \"10.0\\n10.0\\n0.0\\n\\n\\n\\n\\n\\n\"\nassert solution(\"4 3 7\\n1 0 D\\n3 0 D\\n4 1 L\\n6 2 D\") == \"10.0\\n4.0\\n1.0\""
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3 10\\n0 0 D\\n10 1 L\\n\") == \"10.0\\n10.0\\n0.0\\n\"\nassert solution(\"4 3 7\\n1 0 D\\n3 0 D\\n4 1 L\\n6 2 D\\n\") == \"10.0\\n4.0\\n1.0\\n\"\n"
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n    2 3 10\n    0 0 D\n    10 1 L\n    4 3 7\n    1 0 D\n    3 0 D\n    4 1 L\n    6 2 D\n    ''') == '''\n    10.0\n    10.0\n    0.0\n    '''\n\nprint(\"Test Passed\")"
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3 10\\n0 0 D\\n10 1 L\\n\") == \"10.0\\n10.0\\n0.0\\n\"\nassert solution(\"4 3 7\\n1 0 D\\n3 0 D\\n4 1 L\\n6 2 D\\n\") == \"10.0\\n4.0\\n1.0\\n\"\n"
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\"\n\nfrom typing import List"
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('ex eoii jpxbmx cvz uxju sjzzcn jzz') == 'we will avenge our dead parrot arr'\nassert solution('wl jkd') == 'Impossible'"
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\"\n\nfrom typing import List"
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('ex eoii jpxbmx cvz uxju sjzzcn jzz') == 'we will avenge our dead parrot arr'\nassert solution('wl jkd') == 'Impossible'"
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\""
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\""
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\""
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\""
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\""
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\""
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Hamburg Bremen\\n3\\nHamburg Bremen 15 68 10 5\\nHamburg Bremen 46 55 50 60\\nBremen Frankfurt 14 226 10 120\") == 68.3\nassert solution(\"Amsterdam Rotterdam\\n1\\nAmsterdam Utrecht 10 22 5 10\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input) == output, f\"Test failed for input {input} and output {output}\""
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected"
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Hamburg Bremen\\n3\\nHamburg Bremen 15 68 10 5\\nHamburg Bremen 46 55 50 60\\nBremen Frankfurt 14 226 10 120\\n\") == 68.3\nassert solution(\"Amsterdam Rotterdam\\n1\\nAmsterdam Utrecht 10 22 5 10\\n\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Hamburg Bremen\\n3\\nHamburg Bremen 15 68 10 5\\nHamburg Bremen 46 55 50 60\\nBremen Frankfurt 14 226 10 120\\n\") == 68.3\nassert solution(\"Amsterdam Rotterdam\\n1\\nAmsterdam Utrecht 10 22 5 10\\n\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == expected, f\"Expected {expected}, got {solution}\""
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Hamburg Bremen\\n3\\nHamburg Bremen 15 68 10 5\\nHamburg Bremen 46 55 50 60\\nBremen Frankfurt 14 226 10 120\\n\", ) == 68.3\nassert solution(\"Amsterdam Rotterdam\\n1\\nAmsterdam Utrecht 10 22 5 10\\n\", ) == \"IMPOSSIBLE\""
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"68.3\", \"Sample Output 1 should be 68.3\"\n"
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('Hamburg Bremen\\n3\\nHamburg Bremen 15 68 10 5\\nHamburg Bremen 46 55 50 60\\nBremen Frankfurt 14 226 10 120') == 68.3, \"Output 1 incorrect\"\nassert solution('Amsterdam Rotterdam\\n1\\nAmsterdam Utrecht 10 22 5 10') == 'IMPOSSIBLE', \"Output 2 incorrect\""
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Hamburg Bremen\\n3\\nHamburg Bremen 15 68 10 5\\nHamburg Bremen 46 55 50 60\\nBremen Frankfurt 14 226 10 120\") == 68.3\nassert solution(\"Amsterdam Rotterdam\\n1\\nAmsterdam Utrecht 10 22 5 10\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 'Output not provided.', 'Solution does not work as expected.'"
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n*-*.*\\n|.|.|\\n*.*-*\\n|...|\\n*.*.*\\n\") == \"3\\n\"\nassert solution(\"2\\n*.*\\n...\\n*.*\\n\") == \"4\\n\""
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n*-*.*\\n|.|.|\\n*.*-*\\n|...|\\n*.*.*\") == \"3\\n\"\nassert solution(\"2\\n*.*\\n...\\n*.*\") == \"4\\n\"\n"
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n*-*.*\\n|.|.|\\n*.*-*\\n|...|\\n*.*.*\\n') == 3\nassert solution('2\\n*.*\\n...\\n*.*\\n') == 4"
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == \"3\"\nassert solution(sample_input_2) == \"4\""
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n*-*.*\\n|.|.|\\n*.*-*\\n|...|\\n*.*.*\") == \"3\\n4\""
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt').read()) == '4'"
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input(1)) == sample_output(1)\nassert solution(sample_input(2)) == sample_output(2)"
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n*-*.*\\n|.|.|\\n*.*-*\\n|...|\\n*.*.*\") == 3\nassert solution(\"2\\n*.*\\n...\\n*.*\") == 4\nassert solution(\"1\\n*.*\\n...\\n*.*\") == 0\nassert solution(\"2\\n*.*\\n*.*\\n*.*\") == 2\nassert solution(\"2\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\n*.*\\"
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''3\n*-*.*\n|.|.|\n*.*-*\n|...|\n*.*.*''') == 3\n\nassert solution('''2\n*.*\n...\n*.*''') == 4"
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8\\n12210020\\n\") == 4\nassert solution(\"4\\n1111\\n\") == \"impossible\"\n\nfrom typing import List"
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8\\n12210020\") == \"4\\n\"\nassert solution(\"4\\n1111\") == \"impossible\\n\""
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('8\\n12210020\\n') == '4'\nassert solution('4\\n1111\\n') == 'impossible'"
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == expected_output1, \"Test 1 failed\"\nassert solution(sample_input2) == expected_output2, \"Test 2 failed\""
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '4\\n'\nassert solution(stdin) == 'impossible\\n'"
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8\\n12210020\") == 4\nassert solution(\"4\\n1111\") == \"impossible\""
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == sample_output, f\"Sample Input {sample_input} and Output {sample_output} are not matching.\""
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('8\\n12210020\\n') == '4\\n'\nassert solution('4\\n1111\\n') == 'impossible\\n'"
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8\\n12210020\\n\") == \"4\\n\", \"Sample Input 1\"\nassert solution(\"4\\n1111\\n\") == \"impossible\\n\", \"Sample Input 2\""
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('8\\n12210020\\n4\\n1111\\n') == '4\\n'\nassert solution('4\\n1111\\n') == 'impossible'\n\nfrom typing import List"
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n3\n500 500 499\n0 0 999\n1000 1000 200\n''') == '''\nBill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\n'''"
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n500 500 499\\n0 0 999\\n1000 1000 200\\n\") == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\\n\"\nassert solution(\"4\\n250 250 300\\n750 250 300\\n250 750 300\\n750 750 300\\n\") == \"Bill will be bitten.\\n\""
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\""
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n3\n500 500 499\n0 0 999\n1000 1000 200\n''') == '''\nBill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\n'''\n\nassert solution('''\n4\n250 250 300\n750 250 300\n250 750 300\n750 750 300\n''') == '''\nBill will be bitten.\n'''\n\nassert solution('''\n4\n250 250 299\n250 300 299\n250 300 300\n300 299 300\n300 300 300\n''') == '''\nBill will be bitten.\n'''"
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n500 500 499\\n0 0 999\\n1000 1000 200\") == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\\n\"\nassert solution(\"4\\n250 250 300\\n750 250 300\\n250 750 300\\n750 750 300\") == \"Bill will be bitten.\\n\""
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).'\nassert solution() == 'Bill will be bitten.'"
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''3\n500 500 499\n0 0 999\n1000 1000 200''') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\\n'\nassert solution('''4\n250 250 300\n750 250 300\n250 750 300\n750 750 300''') == 'Bill will be bitten.\\n'"
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\"\nassert solution(sample_input_2) == \"Bill will be bitten.\""
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input(\"3\\n500 500 499\\n0 0 999\\n1000 1000 200\\n\")) == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\"\nassert solution(input(\"4\\n250 250 300\\n750 250 300\\n250 750 300\\n750 750 300\\n\")) == \"Bill will be bitten.\""
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r').read()) == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\\n'\nassert solution(open('sample_input_1.txt', 'r').read()) == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\\n'\nassert solution(open('sample_input_2.txt', 'r').read()) == 'Bill will be bitten.\\n'"
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('8 3\\n++xx+x++') == '++xx+o++'\nassert solution('8 3\\nxxxxxxxx') == 'xxoooooo'\n\nfrom typing import List"
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(8, 3) == '++xx+o++'\nassert solution(8, 5) == 'xxoooooo'\nassert solution(10, 5) == 'def solution(stdin: str) -> str:\\npass'"
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\""
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == sample_output1, \"sample_input1 has incorrect output\"\nassert solution(sample_input2) == sample_output2, \"sample_input2 has incorrect output\""
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 3\\n++xx+x++\") == \"++xx+o++\\n\"\nassert solution(\"8 3\\nxxxxxxxx\") == \"xxoooooo\\ndef solution(stdin: str) -> str:pass\\n\""
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''8 3\n++xx+x++\n''') == '++xx+o++'\nassert solution('''8 3\nxxxxxxxx\n''') == 'xxoooooo'"
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 3\\n++xx+x++\\n\") == \"++xx+o++\"\nassert solution(\"8 3\\nxxxxxxxx\\n\") == \"xxoooooo\""
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Your solution is incorrect. Expected output: {expected_output}, but got {solution(input())}.\""
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 3\\n++xx+x++\") == \"++xx+o++\"\nassert solution(\"8 3\\nxxxxxxxx\") == \"xxoooooo\""
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == expected, f\"Your implementation of solution is incorrect. Expected {expected}, but got {solution}\""
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('test_input1.txt').read()) == \"close: lose\\nhe: the\\nin: inc is\\nin: in\\nis: in\\nlose: close lost\\nlost: lose\\nthe: he\\n\"\nassert solution(open('test_input2.txt').read()) == \"clock: oclock\\nhe: hen the\\nhen: he when\\nis: it\\nit: is\\noclock: clock\\nthe: he\\ntill: will\\nwhen: hen\\nwill: till\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"Lost is Close to Lose\\n\\nBetter Documents Inc. wants to add Typo Checking in to the next generation of word processors, and the Typo Checker will replace the spell checker.\\n\\nThe fox said, \\\"When?\\\"\\n\\n\\\"Not till 12 o'clock\\\", replied the hen. \\\"That clock is stopped, it will never strike.\\\"\"\n) == \"close: lose\\nhe: the\\nin: inc is\\inc: in\\nis: in\\lose: close lost\\lost: lose\\the: he\\n\"\n\nassert solution(\n    \"The fox said, \\\"When?\\\"\\n\\n\\\"Not till 12 o'clock\\\", replied the hen. \\\"That clock is stopped, it will never strike.\\\"\"\n) == \"clock: oclock\\nhe: hen the\\nen: it\\nis: it\\ne: it\\no: it\\nse: it\\nt: it\\ns: it\\nh: it\\nw: it\\nl: it\\n\""
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output"
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Lost is Close to Lose\") == \"close: lose\\nhe: the\\nin: inc is\\ninc: in\\nis: in\\nlose: close lost\\nlost: lose\\nthe: he\""
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Lost is Close to Lose\") == \"close: lose\\nhe: the\\ninc: inc is\\ninc: in\\nis: in\\nlose: close lost\\nlost: lose\\nthe: he\\n\"\n\nassert solution(\"The fox said, \\\"When?\\\" Not till 12 o'clock That clock is stopped, it will never strike.\") == \"clock: oclock\\nhe: hen the\\nhen: he when\\nis: it\\nit: is\\noclock: clock\\nthe: he\\ntill: will\\nwhen: hen\\nwill: till\\ndef solution(stdin: str) -> str: pass\\n\"\n\nassert solution(\"***\") == \"***\\n\""
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input(\"Input: \")) == expected, f\"Expected:\\n{expected}\\nActual:\\n{solution(input(\"Input: \"))}\""
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"close: lose\\nhe: the\\ninc is: in\\ninc: in\\nis: in\\nlose: close lost\\nlost: lose\\nthe: he\\n\""
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\nLost is Close to Lose\n\n\"Better Documents Inc. wants to add Typo Checking in to the\nnext generation of word processors,\" he said.\n\nSample Input 1:\nLost is Close to Lose\n\n\"Better Documents Inc. wants to add Typo Checking in to the\nnext generation of word processors,\" he said.\n\nSample Output 1:\nclose: lose\nhe: the\nin: inc is\ninc: in\nis: in\nlose: close lost\nlost: lose\nthe: he\n\nSample Input 2:\nThe fox said, \"When?\"\n\"Not till 12 o'clock\", replied the hen.\n\"That clock is stopped, it will never strike.\", he said.\n\nSample Output 2:\nclock: oclock\nhe: hen the\nhen: he when\nis: it\nit: is\noclock: clock\nthe: he\ntill: will\nwhen: hen\nwill: till\n"
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Lost is Close to Lose\") == \"close: lose\\nhe: the\\ninc: inc is\\ninc: in\\nis: in\\nlose: close lost\\nlost: lose\\nthe: he\"\nassert solution(\"The fox said, \\\"When?\\\"\") == \"clock: oclock\\nhe: hen the\\nhen: he when\\nis: it\\nit: is\\noclock: clock\\nthe: he\\ntill: will\\nwhen: hen\\nwill: till\\ndef solution(stdin: str) -> str: pass\"\nassert solution(\"The quick brown fox jumps over the lazy dog\") == \"jumps: lazy the brown\\nhuman: dog\\njumps: lazy brown\\nthe: dog the\\nlazy: dog\\nhuman: dog the\\nhuman: dog\\ndef solution(stdin: str) -> str: pass\""
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('sample_input.txt').read()) == 'close: lose\\nhe: the\\ninc: inc is\\ninc: in\\nis: in\\nlose: close lost\\nlose: lose\\nthe: he\\n'\nassert solution(open('sample_input2.txt').read()) == 'clock: oclock\\nhe: hen the\\nhen: he when\\nis: it\\nit: is\\noclock: clock\\nthe: he\\nwill: till\\nwhen: hen\\n'"
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"Write 5 lines of code to test the correctness of solution:\\nThe most common technique for shuffling a deck of cards is called the Riffle or Dovetail shuffle. The deck is split into two stacks, which are then interleaved with each other. The deck can be split anywhere, and the two stacks can be interleaved in any way.\\n\\nFor example, consider a deck with 10 unique cards:1 2 3 4 5 6 7 8 9 10\\n\\nSplit them somewhere1 2 3 4 5 6\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a07 8 9 10\\n\\nAnd interleave them in some way1 2\u00a0\u00a0 \u00a07\u00a0\u00a0 3\u00a0\u00a0 8 9\u00a0\u00a0 \u00a04 5\u00a0\u00a0 10\u00a0\u00a0 6\\n\\nDo it again. Split them somewhere1 2 7\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0 3 8 9 4 5 10 6\\n\\nAnd interleave them in some way3 8\u00a0\u00a0 \u00a01\u00a0\u00a0 9 4 5\u00a0\u00a0 \u00a02 7\u00a0\u00a0 10 6\\n\\nThis is one possible ordering after $2$ shuffles. Suppose there are $n$ unique cards, and that they start out perfectly ordered: $1, 2, 3,..., n$. Given an ordering of the deck, what is the smallest number of shuffles that could possibly put the deck in that order?\\n\\n-----Input-----Each input will consist of a single test case. Note that your program may be run multiple times on different inputs. Each test case will begin with a single integer $n$ ($1 \\le n \\le 1000000$) indicating the number of cards in the deck. On the next line will be $n$ unique integers $c$ ($1 \\le c \\le n$), with a single space between them, indicating an ordering of the $n$ cards. The values $c$ are guaranteed to be a permutation of the numbers $1 \\ldots n$.\\n\\n-----Output-----Output a single line with a single integer indicating the minimum number of shuffles that could possibly put the deck in the given order.\\n\\n-----Examples-----Sample Input 1:\\n10\\n1 2 7 3 8 9 4 5 10 6\\nSample Output 1:\\n1\\n\\nSample Input 2:\\n10\\n3 8 1 9 4 5 2 7 10 6\\nSample Output 2:\\n2\\n\""
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1\\n\", \"The solution should return 1, but got {}\".format(solution(stdin))"
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 1, \"The expected result is 1, but got {}\".format(solution(3))\nassert solution(7) == 2, \"The expected result is 2, but got {}\".format(solution(7))\nassert solution(10) == 3, \"The expected result is 3, but got {}\".format(solution(10))\nassert solution(100) == 5, \"The expected result is 5, but got {}\".format(solution(100))"
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10\\n1 2 7 3 8 9 4 5 10 6\") == \"1\\n\", \"Test 1 Failed\"\nassert solution(\"10\\n3 8 1 9 4 5 2 7 10 6\") == \"2\\n\", \"Test 2 Failed\""
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1\\n\", \"Sample Output 1:\\n1\"\n\nassert solution(stdin) == \"2\\n\", \"Sample Output 2:\\n2\""
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"2\""
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"Test case {test_case} failed. Expected: {expected}, Received: {solution(input())}\""
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('10\\n1 2 7 3 8 9 4 5 10 6') == '1\\n', \"Test case 1 failed\"\nassert solution('10\\n3 8 1 9 4 5 2 7 10 6') == '2\\n', \"Test case 2 failed\""
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n\\tpass\""
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '1'"
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('$0.142857$ 6') == '1/7', \"Incorrect output\"\nassert solution('1.6 1') == '5/3', \"Incorrect output\""
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0.142857 6\") == \"1/7\"\nassert solution(\"1.6 1\") == \"5/3\""
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0.142857 6\") == \"1/7\", \"1/7 not found\"\nassert solution(\"1.6 1\") == \"5/3\", \"5/3 not found\""
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0.142857 6\") == \"1/7\", \"Invalid input\"\nassert solution(\"1.6 1\") == \"5/3\", \"Invalid input\""
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0.142857 6\") == \"1/7\"\nassert solution(\"1.6 1\") == \"5/3\"\n"
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0.142857 6\") == 1/7\nassert solution(\"1.6 1\") == 5/3\n"
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0.142857 6\") == \"1/7\"\nassert solution(\"1.6 1\") == \"5/3\""
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, but got {solution(input())}\""
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"1/7\", \"The solution is incorrect.\""
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0.142857 6\") == \"1/7\", \"Test 1\"\nassert solution(\"1.6 1\") == \"5/3\", \"Test 2\"\n"
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"def solution(stdin: str) -> str:\\n    pass\\n\\ndef test(input):\\n    return\\n\\nif __name__ == '__main__':\\n    test(int(stdin.readline().strip()))\\n\\n\") == 10\nassert solution(\"def solution(stdin: str) -> str:\\n    pass\\n\\ndef test(input):\\n    return\\n\\nif __name__ == '__main__':\\n    test(int(stdin.readline().strip()))\\n\\n\") == 10"
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 0 0\\n0 0 1\") == 6\nassert solution(\"0 0 0\\n0 0 1\\n0 0 2\") == 10"
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 0 0\\n0 0 1\") == 6\nassert solution(\"0 0 0\\n0 0 1\\n0 0 2\") == 10"
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 0 0\\n0 0 1\") == 6\nassert solution(\"0 0 0\\n0 0 1\\n0 0 2\") == 10"
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(read_input()) == \"def solution(stdin: str) -> str:\\n    pass\", \"The solution is incorrect.\"\n"
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}\\nActual: {solution(stdin)}\""
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n0 0 0\\n2\\n0 0 1\") == 6, \"Incorrect result\"\nassert solution(\"2\\n0 0 0\\n0 0 1\") == 10, \"Incorrect result\""
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input1) == expected_output1, \"Test 1 failed\"\nassert solution(sample_input2) == expected_output2, \"Test 2 failed\""
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, \"Expected {} got {}\".format(output, solution(input()))\n"
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 10, \"Expected 10 panels, got {}\".format(solution(3))\nassert solution(6) == 6, \"Expected 6 panels, got {}\".format(solution(6))\nassert solution(9) == 10, \"Expected 10 panels, got {}\".format(solution(9))"
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n-1 2 -1\\n2 2\\n1 -1 1\\n') == '1\\n'\nassert solution('7\\n-1 4 5 1 0 -1 -1\\n-1 3 2 0 0 1\\n-1 4 -1 1 0 -1 -1\\n1 3 4 2 2 4\\n0 2 3 -1 4 4 2\\n-1 4 4 3 3 2\\n1 -1 -1 -1 4 2 -1\\n') == '1\\n'\n\nfor i in range(1, 8):\n    for j in range(1, 7):\n        assert solution(f'{i} {j}') == '1\\n'"
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == \"1\"\nassert solution(sample_input2) == \"1\""
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\") == 0, \"The example test case is invalid.\"\nassert solution(\"3\\n-1 2 -1\\n2 2\\n1 -1 1\\n\") == 1, \"The example test case is invalid.\"\nassert solution(\"7\\n-1 4 5 1 0 -1 -1\\n-1 3 2 0 0 1\\n-1 4 -1 1 0 -1 -1\\n1 3 4 2 2 4\\n0 2 3 -1 4 4 2\\n-1 4 4 3 3 2\\n1 -1 -1 -1 4 2 -1\\n\") == 1, \"The example test case is invalid.\""
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"1\", \"Solution is incorrect.\""
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 1\nassert solution(7) == 1"
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n-1 2 -1\\n2 2\\n1 -1 1') == '1\\n', \"Expected output: 1\\nActual output: {}\".format(solution('3\\n-1 2 -1\\n2 2\\n1 -1 1'))"
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n-1 2 -1\\n2 2\\n1 -1 1\\n') == '1\\n'"
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=input()) == output, f\"Expected output {output}, but got {solution(stdin=input())}\""
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}, got: {solution(stdin)}\""
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_output, f\"Test case {case_id} failed\" for case_id, (stdin, expected_output) in enumerate(tests)"
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1001\") == \"3\", \"Test case 1 failed\"\nassert solution(\"1111\") == \"1\", \"Test case 2 failed\""
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r').readline()) == '3'\nassert solution(open('input.txt', 'r').readline()) == '1'"
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1001') == '3', \"Test 1 failed\"\nassert solution('1111') == '1', \"Test 2 failed\""
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1001\") == \"3\"\nassert solution(\"1111\") == \"1\""
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1001\") == \"3\"\nassert solution(\"1111\") == \"1\""
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1001\") == \"3\\n\", \"Sample Input 1\"\nassert solution(\"1111\") == \"1\\n\", \"Sample Input 2\""
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1001\") == \"3\"\nassert solution(\"1111\") == \"1\""
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1001\") == \"3\", \"The solution for 1001 is incorrect\"\nassert solution(\"1111\") == \"1\", \"The solution for 1111 is incorrect\""
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1001\") == \"3\", \"Incorrect output for sample case 1\"\nassert solution(\"1111\") == \"1\", \"Incorrect output for sample case 2\""
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1001\") == \"3\"\nassert solution(\"1111\") == \"1\""
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 1 1\\n\") == \"LLL\"\nassert solution(\"5\\n1 2 2 1 2\\n\") == \"LLRLR\""
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input1) == output1, f\"Expected {output1}, got {solution(input1)}\"\nassert solution(input2) == output2, f\"Expected {output2}, got {solution(input2)}\""
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"\"\"\nLLL\nLLRLR\n\"\"\""
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"LLL\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"LLL\", \"Your solution is incorrect. Expected output: 'LLL'.\"\n"
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"LLL\"\n"
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"RRRRR\""
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"Expected output: {expected}, Received: {solution(input())}\""
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 1 1\\nSample Output 1:\\nLLL\\n\\n3\\n1 2 2 1 2\\nSample Output 2:\\nLLRLR\\n\") == \"LLL\\nLLRLR\"\nassert solution(\"5\\n1 2 2 1 2\\nSample Output 2:\\nLLRLR\\n\") == \"LLRLR\"\nassert solution(\"3\\n1 1 1\\nSample Output 1:\\nLLL\\n\\n3\\n1 2 2 1 2\\nSample Output 2:\\nLLRLR\\n\") == \"LLL\\nLLRLR\""
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 1 1\\n\") == \"LLL\\n\"\nassert solution(\"5\\n1 2 2 1 2\\n\") == \"LLRLR\\n\""
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 7 10\\n1 2 1000000\\n2 3 2000000\\n3 4 3000000\\n4 5 4000000\\n5 6 5000000\\n6 7 6000000\\n7 1 7000000\\n\") == 49000000000070\nassert solution(\"6 6 7\\n1 3 1000000\\n3 5 3000000\\n5 1 5000000\\n2 4 2000000\\n4 6 4000000\\n6 2 6000000\\n2 7 7000000\\n\") == 25000000000021"
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == solution(stdin2), \"Test failed\""
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 7 10\\n1 2 1000000\\n2 3 2000000\\n3 4 3000000\\n4 5 4000000\\n5 6 5000000\\n6 7 6000000\\n7 1 7000000\\n\") == \"49000000000070\"\nassert solution(\"6 6 7\\n1 3 1000000\\n3 5 3000000\\n5 1 5000000\\n2 4 2000000\\n4 6 4000000\\n6 2 6000000\\n2 1 2000000\\n\") == \"25000000000021\""
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('7 7 10\\n1 2 1000000\\n2 3 2000000\\n3 4 3000000\\n4 5 4000000\\n5 6 5000000\\n6 7 6000000\\n7 1 7000000') == 49000000000070\nassert solution('6 6 7\\n1 3 1000000\\n3 5 3000000\\n5 1 5000000\\n2 4 2000000\\n4 6 4000000\\n6 2 6000000') == 25000000000021"
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 7 10\\n1 2 1000000\\n2 3 2000000\\n3 4 3000000\\n4 5 4000000\\n5 6 5000000\\n6 7 6000000\\n7 1 7000000\") == 49000000000070\nassert solution(\"6 6 7\\n1 3 1000000\\n3 5 3000000\\n5 1 5000000\\n2 4 2000000\\n4 6 4000000\\n6 2 6000000\\n7 1 7000000\") == 25000000000021\n"
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 49000000000070, \"Test 1 failed\""
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 7 10\\n1 2 1000000\\n2 3 2000000\\n3 4 3000000\\n4 5 4000000\\n5 6 5000000\\n6 7 6000000\\n7 1 7000000\\n\") == \"49000000000070\\n\"\nassert solution(\"6 6 7\\n1 3 1000000\\n3 5 3000000\\n5 1 5000000\\n2 4 2000000\\n4 6 4000000\\n6 2 6000000\\n\") == \"25000000000021\\n\""
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 7 10\\n1 2 1000000\\n2 3 2000000\\n3 4 3000000\\n4 5 4000000\\n5 6 5000000\\n6 7 6000000\\n7 1 7000000\") == 49000000000070\nassert solution(\"6 6 7\\n1 3 1000000\\n3 5 3000000\\n5 1 5000000\\n2 4 2000000\\n4 6 4000000\\n6 2 6000000\\n7 1 7000000\") == 25000000000021\n"
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 49000000000070, \"Expected 49000000000070, but got {}\".format(solution())"
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(r'''\n4 4\n0 1\n1 0\n2 3\n3 2\n''') == '2\\n2\\n0\\n1\\n2\\n2\\n3'\n\nassert solution(r'''\n4 4\n0 1\n1 0\n2 3\n3 3\n''') == 'Yeah!'\n\nassert solution(r'''\n4 4\n0 1\n1 0\n2 3\n3 4\n''') == 'Yeah!'\n\nassert solution(r'''\n4 4\n0 1\n1 0\n2 3\n3 0\n''') == 'Yeah!'\n\nassert solution(r'''\n4 4\n0 1\n1 0\n2 3\n3 1\n''') == 'Yeah!'\n\nassert solution(r'''\n4 4\n0 1\n1 0\n2 3\n3 2\n''') == 'Yeah!'\n\nassert solution(r'''\n4 4\n0 1\n1 0\n2 3\n3 3\n''') == 'Yeah!'\n\nassert solution(r'''\n4 4\n0 1\n1 0\n2 3\n3 4\n''') == 'Yeah!'\n\nassert solution(r'''\n4 4\n0 1\n1 0\n2 3\n3 0\n''') == 'Yeah!'\n\nassert solution(r'''\n4 4\n0 1\n1 0\n2 3\n3 1\n''') == 'Yeah!'\n\nassert solution(r'''\n4 4\n0 1\n1 0\n2 3\n3 2\n''') == 'Yeah!'"
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 2\\n\") == \"2\\n2\\n0\\n1\\n2\\n2\\n3\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 3\\n\") == \"Yeah!\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 2\\n\") == \"2\\n2\\n0\\n1\\n2\\n2\\n3\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 2\\n\") == \"Yeah!\\n\""
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input1) == output1, f\"Solution for problem 1 is incorrect. Input: {input1}, Output: {output1}\"\nassert solution(input2) == output2, f\"Solution for problem 2 is incorrect. Input: {input2}, Output: {output2}\""
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 2\") == \"2\\n2\\n0\\n1\\n2\\n2\\n3\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 3\") == \"Yeah!\"\nassert solution(\"4 5\\n0 1\\n1 0\\n2 3\\n3 2\") == \"2\\n2\\n0\\n1\\n2\\n2\\n3\\n\"\nassert solution(\"4 5\\n0 1\\n1 0\\n2 3\\n3 3\") == \"Yeah!\"\nassert solution(\"4 6\\n0 1\\n1 0\\n2 3\\n3 3\\n4 4\") == \"2\\n2\\n0\\n1\\n2\\n2\\n3\\n\"\nassert solution(\"4 6\\n0 1\\n1 0\\n2 3\\n3 3\\n4 5\") == \"Yeah!\"\n"
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Test case {test_case} failed: {solution(input())}!= {output}\""
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('sample_input.txt').read()) == \"\"\"2\n2\n0\n1\n2\n2\n3\"\"\""
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'Yeah!\\n2\\n0\\n1\\n2\\n2\\n3\\n'\n"
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt').read()) == 'Yeah!\\n2\\n2\\n0\\n1\\n2\\n2\\n3'"
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 2\") == \"2\\n2\\n0\\n1\\n2\\n2\\n3\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 3\") == \"Yeah!\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 0\") == \"Yeah!\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 1\") == \"Yeah!\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 2\") == \"Yeah!\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 4\") == \"Yeah!\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 5\") == \"Yeah!\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 6\") == \"Yeah!\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 7\") == \"Yeah!\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 8\") == \"Yeah!\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 9\") == \"Yeah!\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 10\") == \"Yeah!\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 11\") == \"Yeah!\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 12\") == \"Yeah!\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 13\") == \"Yeah!\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 14\") == \"Yeah!\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 15\") == \"Yeah!\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 16\") == \"Yeah!\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 17\") == \"Yeah!\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 18\") == \"Yeah!\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 19\") == \"Yeah!\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 20\") == \"Yeah!\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 21\") == \"Yeah!\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 22\") == \"Yeah!\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 23\") == \"Yeah!\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 24\") == \"Yeah!\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 25\") == \"Yeah!\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 26\") == \"Yeah!\\n\"\nassert solution(\"4 4\\n0 1\\"
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 2\\n\") == \"2\\n2\\n0\\n1\\n2\\n2\\n3\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 3\\n\") == \"Yeah!\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 4\\n\") == \"4\\n4\\n2\\n3\\n4\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 4\\n\") == \"Yeah!\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 5\\n\") == \"Yeah!\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 5\\n\") == \"Yeah!\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 5\\n\") == \"Yeah!\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 5\\n\") == \"Yeah!\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 5\\n\") == \"Yeah!\\n\""
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"POSSIBLE\\n1 3\\n2 3\""
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n1 1 2\\n2 3\\n') == 'POSSIBLE\\n1 3\\n2 3\\n'\nassert solution('2\\n1 2\\n') == 'IMPOSSIBLE\\n'"
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"POSSIBLE\\n1 3\\n2 3\"\nassert solution(2) == \"IMPOSSIBLE\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"POSSIBLE\\n1 3\\n2 3\"\nassert solution(2) == \"IMPOSSIBLE\""
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"IMPOSSIBLE\""
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\") == \"POSSIBLE\\n1 3\\n2 3\"\nassert solution(\"1\\n2\\n2\\n3\\n3\\n4\\n4\\n5\\n5\\n6\\n6\\n7\\n7\\n8\\n8\\n9\\n9\\n10\") == \"POSSIBLE\\n1 3\\n2 3\"\nassert solution(\"1\\n2\\n2\\n3\\n3\\n4\\n4\\n5\\n5\\n6\\n6\\n7\\n7\\n8\\n8\\n9\\n9\\n10\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    3\n    1 1 2\n    2 3\n    \"\"\"\n) == \"POSSIBLE\\n1 3\\n2 3\"\n\nassert solution(\n    \"\"\"\n    2\n    1 2\n    \"\"\"\n) == \"IMPOSSIBLE\""
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 1 2\\n2\\n1 2\") == \"POSSIBLE\\n1 3\\n2 3\"\nassert solution(\"2\\n1 2\\n1\\n1\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 1 2\") == \"POSSIBLE\\n1 3\\n2 3\\n\""
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for input {input()}, expected output: {expected_output}\"\n"
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('0 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n') == '0.5 0.5 0.5\\n'\n\nassert solution('-1 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n') == '0.0 0.0 -0.0\\n'"
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == \"0.5 0.5 0.5\\n\""
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, \"Test case failed.\""
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=stdin) == expected\nprint(f\"Testcase {i+1}: {stdin} -> {expected}\")"
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"0.5 0.5 0.5\"\nassert solution(stdin) == \"0.0 0.0 -0.0\""
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 0 0\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0.5 0.5 0.5\"\nassert solution(\"-1 0 0\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0.0 0.0 -0.0\""
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('0 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n') == '0.5 0.5 0.5\\n'\nassert solution('0 -100 0\\n1 100 0\\n0 -100 1\\n0 100 1\\n') == '0.0 0.0 -0.0\\n'"
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"Here is the solution for the given problem:\\n\" + \\\n    \"The coordinates of the centre of the sphere that touches all four points are (0.5, 0.5, 0.5)\\n\"\n"
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 0 0\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0.5 0.5 0.5\\n\"\nassert solution(\"-1 0 0\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0.0 0.0 -0.0\\n\""
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('0 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n') == '0.5 0.5 0.5\\n'\nassert solution('-1 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n') == '0.0 0.0 -0.0\\n'"
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"0\\n17 17 17\\n\"\nassert solution(4) == \"2\\n2 2\\n\"\nassert solution(5) == \"0\\n17 17 17\\n\""
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2\"\nassert solution() == \"3 2 2 1 5\\n3 2 2\"\nassert solution() == \"3 2 2\"\nassert solution() == \"6 6\"\nassert solution() == \"0\""
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10\\n3 6 2 3 2 2 2 1 5 6\") == \"2\\n3 2 2 1 5\\n3 2 2\\n6 6\""
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 0, \"3\"\nassert solution(10) == 2, \"10\"\nassert solution(100) == 2, \"100\""
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('10\\n3 6 2 3 2 2 2 1 5 6\\n') == '2\\n3 2 2 1 5\\n3 2 2\\n6 6\\n'\nassert solution('3\\n17 17 17\\n') == '0\\n17 17 17\\n'"
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == expected_output, f\"Your solution is incorrect. Expected output: {expected_output}, Received output: {solution()}\"\n"
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed with input {stdin}, expected output {expected_output}\""
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10\\n3 6 2 3 2 2 2 1 5 6\") == \"2\\n3 2 2 1 5\\n3 2 2\""
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"\"\"\n2\n3 2 2 1 5\n3 2 2\n6 6\n\"\"\""
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10\\n3 6 2 3 2 2 2 1 5 6\") == \"2\\n3 2 2 1 5\\n3 2 2\"\nassert solution(\"3\\n17 17 17\") == \"0\\n17 17 17\""
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"IMPOSSIBLE\"\nprint(\"Correct\")"
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\") == \"IMPOSSIBLE\"\nassert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\") == \"74.6666666667\""
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\\n3 2\") == \"IMPOSSIBLE\"\nassert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\\n2 3\") == \"74.6666666667\""
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n3 2 1\n1 2 7\n2 3 8\n1\n2 3\n''') == 'IMPOSSIBLE'\n\nassert solution('''\n3 2 1\n1 2 7\n2 3 8\n1\n3 2\n''') == '74.6666666667'"
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_data) == output_data, f\"Test Case {i+1} failed.\" for i, (input_data, output_data) in enumerate(zip(input_data_list, output_data_list))"
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\\n3 2\\n\") == \"IMPOSSIBLE\"\nassert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\\n2 3\\n\") == \"74.6666666667\"\n"
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"IMPOSSIBLE\"\nassert solution() == \"IMPOSSIBLE\"\n\nSolution:\n\nThe problem can be solved in a number of ways. One way is to simply check if the speed of the police car is less than the maximum speed of the escape system. If it is, then the escape system is not possible. If it is not, then we need to calculate the minimal speed needed to escape.\n\nAnother way is to use a dynamic programming approach to find the minimal speed needed to escape. We can keep track of the minimum speed needed for each interchange point. We can then iterate over all possible escape paths between interchange points and calculate the minimum speed for each path. We can keep track of the minimum speed for each interchange point as we traverse through the paths.\n\nHere's one possible implementation in Python:\n\n```python\n"
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\\n3 2\\n\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\\n3 2\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\\n3 2\\n\") == \"IMPOSSIBLE\"\nassert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\\n2 3\\n\") == \"74.6666666667\""
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"0\\n1\\n2\\n1\\n2\\n2\\n1\""
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 6\\n1 2\\n2 3\\n3 1\\n3 4\\n1 4\\n4 5\\nSample Output 1:\\n1\\n2\\n1\\n2\\n2\\n1\\n\") == \"1\\n2\\n1\\n2\\n2\\n1\\n\"\nassert solution(\"7 7\\n1 2\\n2 3\\n3 1\\n4 5\\n5 6\\n6 7\\n7 4\\nSample Output 2:\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n\") == \"0\\n\""
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1\\n2\\n1\\n2\\n2\\n1\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"1\\n2\\n1\\n2\\n2\\n1\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\"\nassert solution() == \"0\\n\""
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"\"\"\n0\n1\n0\n1\n0\n1\n\"\"\""
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == [\"0\", \"1\", \"2\", \"1\", \"2\", \"2\", \"1\", \"2\", \"1\"]"
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(solution_input) == solution_output, f\"Solution ({solution_input}) does not match expected output ({solution_output})\""
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 6\\n1 2\\n2 3\\n3 1\\n3 4\\n1 4\\n4 5\\n\") == \"1\\n2\\n1\\n2\\n2\\n1\\n\""
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, got: {solution(input())}\""
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 6\\n1 2\\n2 3\\n3 1\\n3 4\\n1 4\\n4 5\\n\") == \"1\\n2\\n1\\n2\\n2\\n1\\n\"\n\nassert solution(\"7 7\\n1 2\\n2 3\\n3 1\\n4 5\\n5 6\\n6 7\\n7 4\\n\") == \"0\""
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\n    pass\"\n"
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '10'"
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 10 2\\n0\\n15\\n30\\n45\") == \"10\"\nassert solution(\"4 10 3\\n0\\n15\\n30\\n45\") == \"5\""
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(stdin)}\""
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"10\""
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 10 2\\n0\\n15\\n30\\n45') == '10'\nassert solution('4 10 3\\n0\\n15\\n30\\n45') == '5'"
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 10 2\\n0\\n15\\n30\\n45\") == \"10\"\nassert solution(\"4 10 3\\n0\\n15\\n30\\n45\") == \"5\"\n"
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 10 2\\n0\\n15\\n30\\n45') == '10'\nassert solution('4 10 3\\n0\\n15\\n30\\n45') == '5'"
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 10 2\\n0\\n15\\n30\\n45\\n\") == 10\nassert solution(\"4 10 3\\n0\\n15\\n30\\n45\\n\") == 5\n\nfrom typing import List"
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_1) == output_1, f\"Expected {output_1}, got {solution(input_1)}\"\nassert solution(input_2) == output_2, f\"Expected {output_2}, got {solution(input_2)}\""
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed: {input()}!= {expected_output}\""
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == 2, \"Expected output 2, but got: {}\".format(solution(stdin))"
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\n50 50 75\\n25 25 25\\n\") == \"2\\n\"\nassert solution(\"5 2\\n50 50 50 50\\n25 25 25 25\\n\") == \"1\\n\""
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2\", \"Test case 1 failed\""
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == expected_result, f\"The solution is {solution}, but it should be {expected_result}\""
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 2\\n50 50 75\\n25 25 25') == '2\\n'\nassert solution('5 2\\n50 50 50 50\\n25 25 25 25') == '1\\n'"
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected, f\"Your solution is incorrect. \\nExpected: {expected} \\nGot: {solution(stdin)}\""
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 2"
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n4 4\n.LX.\n.X..\n....\n.L..\n''') == '1'\n\nassert solution('''\n4 4\n.XLX\n.X..\n...L\n.X..\n''') == '2'"
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 4\\n.LX.\\n.X..\\n....\\n.L..\\n') == '1'\nassert solution('4 4\\n.XLX\\n.X..\\n...L\\n.X..\\n') == '2'"
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4\\n.LX.\\n.X..\\n....\\n.L..\") == \"1\\n\"\nassert solution(\"4 4\\n.XLX\\n.X..\\n...L\\n.X..\") == \"2\\n\""
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\n.LX.\\n.X..\\n....\\n.L..\\n\") == \"1\\n\"\nassert solution(\"4 4\\n.XLX\\n.X..\\n...L\\n.X..\\n\") == \"2\\n\""
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n4 4\n.LX.\n.X..\n....\n.L..\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n4 4\n.XLX\n.X..\n...L\n.X..\n\"\"\") == \"2\""
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 4\\n.LX.\\n.X..\\n....\\n.L..\\n') == '1\\n'\nassert solution('4 4\\n.XLX\\n.X..\\n...L\\n.X..\\n') == '2\\n'"
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Your solution is wrong. Please see the problem statement for more details.\"\n"
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    4 4\n    .LX.\n    .X..\n    ....\n    .L..\n    \"\"\"\n) == \"1\"\n\nassert solution(\n    \"\"\"\n    4 4\n    .XLX\n    .X..\n    ...L\n    .X..\n    \"\"\"\n) == \"2\""
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\n.LX.\\n.X..\\n....\\n.L..\") == \"1\"\nassert solution(\"4 4\\n.XLX\\n.X..\\n...L\\n.X..\") == \"2\""
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n.LX.\\n.X..\\n....\\n.L..\\n\") == \"1\\n\"\nassert solution(\"4 4\\n.XLX\\n.X..\\n...L\\n.X..\\n\") == \"2\\n\"\nassert solution(\"4 4\\n.LXX\\n.X..\\n...L\\n.X..\\n\") == \"2\\n\""
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(r'''\n4 2 1\n1 1\n2 0 2\n2 1 3\n1 2\n''') == 'home'\n\nassert solution(r'''\n5 2 1\n1 1\n2 0 2\n2 1 3\n2 2 4\n1 3\n''') == 'detention'"
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"detention\""
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\\n\") == \"home\\n2\\n2 0 1\\n2 2 3\\n\""
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\\n\") == \"home\\n2\\n2 0 1\\n2 2 3\\n\"\nassert solution(\"5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n\") == \"detention\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\\nSample Output 1:detention\\n2\\n2 0 1\\n2 2 3\\n\\nSample Input 2:5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\nSample Output 2:home\\n2\\n2 0 1\\n2 2 3') == 'home\\n2\\n2 0 1\\n2 2 3'\nassert solution('5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\nSample Output 2:detention\\n2\\n2 0 1\\n2 2 3') == 'detention\\n2\\n2 0 1\\n2 2 3'"
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"home\"\nassert solution(open(\"input2.txt\", \"r\")) == \"detention\""
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == 'home'\nassert solution(2) == 'detention'\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\\n\") == \"home\\n2\\n2 0 1\\n2 2 3\\n\"\nassert solution(\"5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n\") == \"detention\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == \"-1\"\n\nfrom typing import List"
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == -1"
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\n\nassert solution(\"zzzz\") == \"-1\""
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == \"-1\"\n\nfrom typing import List"
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == \"-1\"\n\nfrom typing import List"
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('tralalal') == 'allatral', \"Solution 1 failed\"\nassert solution('zzzz') == '-1', \"Solution 2 failed\"\n"
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == \"-1\""
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('tralalal') == 'allatral'\nassert solution('zzzz') == '-1'"
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == \"-1\""
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=f) == f\"Output: {output}\""
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    5\n    1 2 3 4 5\n    \"\"\"\n) == \"5\\n\"\n\nassert solution(\n    \"\"\"\n    6\n    3 2 1 6 4 5\n    \"\"\"\n) == \"8\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution([1, 2, 3, 4, 5]) == 5, \"Brandon Greg Jr. considers an array to be scary if its leftmost element is the median of its elements.\"\nassert solution([3, 2, 1, 6, 4, 5]) == 8, \"Brandon Greg Jr. considers an array to be scary if its leftmost element is the median of its elements.\""
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 2 3 4 5\\n\") == \"5\\n\"\nassert solution(\"6\\n3 2 1 6 4 5\\n\") == \"8\\n\""
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == solution(stdin), \"Solution should be the same as input.\""
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 5\n"
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4 5') == '5\\n'\nassert solution('6 3 2 1 6 4 5') == '8\\n'\n"
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input1) == 5\nassert solution(sample_input2) == 8"
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == output, f\"Output {solution(stdin)} should be equal to {output}.\""
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Solution {name} has a different output than expected\\nExpected: {expected}\\nGot: {solution(input())}\""
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1\"\nassert solution() == \"2\""
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(47) == 1\nassert solution(523) == 2\n\nfrom typing import List"
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(47) == 1\nassert solution(523) == 2"
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"The function returned {solution(input())} instead of {expected}\""
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 1, \"Expected 1, got {}\".format(solution())"
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('47') == '1\\n', \"Expected '1', got: {}\".format(solution('47'))\nassert solution('523') == '2\\n', \"Expected '2', got: {}\".format(solution('523'))"
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"47\") == 1, \"Sample Input 1 is incorrect\"\nassert solution(\"523\") == 2, \"Sample Input 2 is incorrect\""
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(47) == 1\nassert solution(523) == 2"
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(47) == 1\nassert solution(523) == 2"
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == output, f\"The function should return {output}, but instead returned {solution(stdin)}.\""
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Output as required\""
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Solution doesn't match expected output.\\nInput: {input()}\\nExpected output: {expected_output}\\nOutput: {solution(input())}\""
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"0\"\n"
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n4 5\n0 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 20\n''') == '''\n0\n'''\n\nassert solution('''\n2 2\n0 1 20\n1 0 5\n''') == '''\n1\n0 1 15\n'''"
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '0\\n0\\n0\\n0\\n0'"
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n4 5\n0 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 20\n''') == '0\\n'\n\nassert solution('''\n2 2\n0 1 20\n1 0 5\n''') == '1\\n0 1 15'\n\nassert solution('''\n6 8\n0 1 10\n1 2 5\n2 3 3\n3 0 3\n4 1 5\n5 3 3\n6 5 5\n7 4 3\n8 2 5\n9 4 5\n10 0 5\n11 5 3\n12 2 5\n13 4 5\n14 1 5\n15 3 3\n16 5 5\n17 4 3\n18 2 5\n19 4 5\n20 0 5\n''') == '0\\n'\n\nassert solution('''\n10 10\n0 1 5\n1 2 5\n2 3 3\n3 0 3\n4 1 5\n5 3 3\n6 5 5\n7 4 3\n8 2 5\n9 4 5\n10 0 5\n11 5 3\n12 2 5\n13 4 5\n14 1 5\n15 3 3\n16 5 5\n17 4 3\n18 2 5\n19 4 5\n20 0 5\n''') == '0\\n'\n\nassert solution('''\n10 10\n0 1 5\n1 2 5\n2 3 3\n3 0 3\n4 1 5\n5 3 3\n6 5 5\n7 4 3\n8 2 5\n9 4 5\n10 0 5\n11 5 3\n12 2 5\n13 4 5\n14 1 5\n15 3 3\n16 5 5\n17 4 3\n18 2 5\n19 4 5\n20 0 5\n''') == '1\\n0 1 15'"
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5\\n0 1 10\\n1 2 10\\n0 3 10\\n3 2 10\\n2 0 20\") == \"0\\n1\\n0 1 15\""
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 5\\n0 1 10\\n1 2 10\\n0 3 10\\n3 2 10\\n2 0 20') == '0\\n1\\n0 1 15'\n"
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\nr'4 5\\n'\nr'0 1 10\\n'\nr'1 2 10\\n'\nr'0 3 10\\n'\nr'3 2 10\\n'\nr'2 0 20\\n') == '0\\n'\nassert solution(\nr'2 2\\n'\nr'0 1 20\\n'\nr'1 0 5\\n') == '1\\n0 1 15\\n'"
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5\") == 5\nassert solution(\"4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4\") == 1"
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5\") == 5\nassert solution(\"4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4\") == 1\n"
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2"
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5\") == 5\nassert solution(\"4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4\") == 1"
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5\\n\") == 5\nassert solution(\"4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4\\n\") == 1"
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"5\", \"The length of the longest Fibonacci Tour Charles can take is 5.\""
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5') == '5'\nassert solution('4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4') == '1'"
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''5 6\n1 3 2 1 5\n1 3\n2 3\n1 4\n3 5\n4 5\n2 5''') == '5'\n\nassert solution('''4 3\n4 4 8 12\n1 2\n2 3\n3 4''') == '1'"
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5\") == \"5\"\nassert solution(\"4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4\") == \"1\""
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5\") == \"5\\n\"\n\nassert solution(\"4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4\") == \"1\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 7, \"Expected output 7, got {}\".format(solution())\n\nimport math"
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('020302') == 7\nassert solution('1311') == 24"
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"020302\") == \"7\"\nassert solution(\"1311\") == \"24\""
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"020302\") == \"7\"\nassert solution(\"1311\") == \"24\""
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"The function should return {output()}, but it returns {solution(input())}\""
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('020302') == '7', 'The solution is not correct'\nassert solution('1311') == '24', 'The solution is not correct'"
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"020302\") == \"7\", \"Sample Input 1\"\nassert solution(\"1311\") == \"24\", \"Sample Input 2\""
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"020302\") == \"7\"\nassert solution(\"1311\") == \"24\""
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"7\", \"The correct output must be: 7\""
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"020302\") == \"7\"\nassert solution(\"1311\") == \"24\""
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('8 10\\n#.#..##..#\\n####..####\\n###.##....\\n...#..####\\n....##....\\n.#.##..##.\\n##########\\n##########') == '3 1 3 10\\n'\nassert solution('5 20\\n###########.#.#.#.#.\\n###########...#.###.\\n##########..##.#..##\\n###########..#.#.##.\\n###########.###...#.') == '1 15 5 15\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 10\\n#.#..##..#\\n####..####\\n###.##....\\n...#..####\\n....##....\\n.#.##..##. \\n##########\\n##########\\n\") == \"3 1 3 10\"\nassert solution(\"5 20\\n###########.#.#.#.#. \\n###########...#.###. \\n##########..##.#..## \\n###########..#.#.##. \\n###########.###...#. \\n\") == \"1 15 5 15\""
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 10\\n#.#..##..#\\n####..####\\n###.##....\\n...#..####\\n....##....\\n.#.##..##.\\n##########\\n##########\\n\") == \"3 1 3 10\"\n\nassert solution(\"5 20\\n###########.#.#.#.#. \\n###########...#.###. \\n##########..##.#..## \\n###########..#.#.##. \\n###########.###...#. \\n\") == \"1 15 5 15\""
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n8 10\n"
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''8 10\n"
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"#.#..##..#\") == \"3 1 3 10\"\nassert solution(\"#.#..##..#\") == \"3 1 3 10\"\nassert solution(\"#.#..##..#\") == \"3 1 3 10\"\nassert solution(\"#.#..##..#\") == \"3 1 3 10\"\nassert solution(\"#.#..##..#\") == \"3 1 3 10\"\nassert solution(\"#.#..##..#\") == \"3 1 3 10\"\nassert solution(\"#.#..##..#\") == \"3 1 3 10\"\nassert solution(\"#.#..##..#\") == \"3 1 3 10\"\nassert solution(\"#.#..##..#\") == \"3 1 3 10\"\nassert solution(\"#.#..##..#\") == \"3 1 3 10\"\nassert solution(\"#.#..##..#\") == \"3 1 3 10\"\nassert solution(\"#.#..##..#\") == \"3 1 3 10\"\nassert solution(\"#.#..##..#\") == \"3 1 3 10\"\nassert solution(\"#.#..##..#\") == \"3 1 3 10\"\nassert solution(\"#.#..##..#\") == \"3 1 3 10\"\nassert solution(\"#.#..##..#\") == \"3 1 3 10\"\nassert solution(\"#.#..##..#\") == \"3 1 3 10\"\nassert solution(\"#.#..##..#\") == \"3 1 3 10\"\nassert solution(\"#.#..##..#\") == \"3 1 3 10\"\nassert solution(\"#.#..##..#\") == \"3 1 3 10\"\nassert solution(\"#.#..##..#\") == \"3 1 3 10\"\nassert solution(\"#.#..##..#\") == \"3 1 3 10\"\nassert solution(\"#.#..##..#\") == \"3 1 3 10\"\nassert solution(\"#.#..##..#\") == \"3 1 3 10\"\nassert solution(\"#.#..##..#\") == \"3 1 3 10\"\nassert solution(\"#.#..##..#\") == \"3 1 3 10\"\nassert solution(\"#.#..##..#\") == \"3 1 3 10\"\nassert solution(\"#.#..##..#\") == \"3 1 3 10\"\nassert solution(\"#.#..##..#\") == \"3 1 3 10\"\nassert solution(\"#.#..##..#\") == \"3 1 3 10\"\nassert solution(\"#.#..##..#\") == \"3 1 3 10\"\nassert solution(\"#.#..##..#\") == \"3 1 3 10\"\nassert solution(\"#.#..##..#\") == \"3 1 3 10\"\nassert solution(\"#.#..##..#\") == \"3 1 3 10\"\nassert solution(\"#.#..##..#\") == \"3 1 3 10\"\nassert solution(\"#.#..##..#\") == \"3 1 3 10\"\nassert solution(\"#.#..##..#\") == \"3 1 3 10\"\nassert solution(\"#.#..##..#\") == \"3 1 3 10\"\nassert solution(\"#.#..##..#\") == \"3 1 3 10\"\nassert solution(\"#.#..##..#\") == \"3 1 3 10\"\nassert solution(\"#.#..##..#\") == \"3 1 3 10\"\nassert solution(\"#.#..##..#\") == \"3 1 3 10\"\nassert solution(\"#.#..##..#\") == \"3 1 3 10\"\nassert solution(\"#.#..##..#\") == \"3 1 3 10\"\nassert solution(\"#.#..##..#\") == \"3 1 3 10\"\nassert solution(\"#.#..##..#\") == \"3 1 3 10\"\nassert solution(\"#.#..##..#\") == \"3 1 3 10\"\nassert solution(\"#.#..##..#\") == \"3 1 3 10\"\nassert solution(\"#.#..##..#\") == \"3 1 3 1"
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 10\\n#.#..##..#\\n####..####\\n###.##....\\n...#..####\\n....##....\\n.#.##..##.\\n##########\\n##########\\n\") == \"3 1 3 10\\n\"\nassert solution(\"5 20\\n###########.#.#.#.#. \\n###########...#.###. \\n##########..##.#..## \\n###########..#.#.##. \\n###########.###...#. \\n\") == \"1 15 5 15\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 10\\n#.#..##..#\\n####..####\\n###.##....\\n...#..####\\n....##....\\n.#.##..##. \\n##########\\n##########\\n\") == \"3 1 3 10\\n\"\n\nassert solution(\"5 20\\n###########.#.#.#.#.\\n###########...#.###.\\n##########..##.#..##\\n###########..#.#.##.\\n###########.###...#.\") == \"1 15 5 15\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"#.#..##..#\") == \"3 1 3 10\"\nassert solution(\"#.##....\") == \"1 15 5 15\"\nassert solution(\"####..####\") == \"def solution(stdin: str) -> str:\""
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 10\\n#.#..##..#\\n####..####\\n###.##....\\n...#..####\\n....##....\\n.#.##..##.\\n##########\\n##########\\nSample Output 1:\\n3 1 3 10\") == \"3 1 3 10\\n\"\n\nassert solution(\"5 20\\n###########.#.#.#.#.\\n###########...#.###.\\n##########..##.#..##\\n###########..#.#.##.\\n###########.###...#.\") == \"1 15 5 15\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nimport sys"
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"50 0.125\") == \"16.34\"\nassert solution(\"201 1.000\") == \"5.0\""
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '16.339203308'"
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"50 0.125\") == \"16.339203308\"\nassert solution(\"201 1.000\") == \"5.000000000\""
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input1) == output1, \"The solution is incorrect for input1\"\nassert solution(input2) == output2, \"The solution is incorrect for input2\""
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(100) == 16.34\nassert solution(201) == 5.00\nassert solution(500) == 6.00\nassert solution(1000) == 5.00\nassert solution(5000) == 6.00\nassert solution(10000) == 5.00\nassert solution(100000) == 5.00\nassert solution(1000000) == 5.00\nassert solution(10000000) == 5.00\nassert solution(100000000) == 5.00\nassert solution(1000000000) == 5.00\nassert solution(10000000000) == 5.00\nassert solution(100000000000) == 5.00\nassert solution(1000000000000) == 5.00\nassert solution(10000000000000) == 5.00\nassert solution(100000000000000) == 5.00\nassert solution(1000000000000000) == 5.00\nassert solution(10000000000000000) == 5.00\nassert solution(100000000000000000) == 5.00\nassert solution(1000000000000000000) == 5.00\nassert solution(10000000000000000000) == 5.00\nassert solution(100000000000000000000) == 5.00\nassert solution(1000000000000000000000) == 5.00\nassert solution(10000000000000000000000) == 5.00\nassert solution(1000000000000000000000000) == 5.00\nassert solution(10000000000000000000000000) == 5.00\nassert solution(1000000000000000000000000000) == 5.00\nassert solution(10000000000000000000000000000) == 5.00\nassert solution(100000000000000000000000000000) == 5.00\nassert solution(10000000000000000000000000000000) == 5.00\nassert solution(10000000000000000000000000000000) == 5.00\nassert solution(10000000000000000000000000000000) == 5.00\nassert solution(1000000000000000000000000000000000) == 5.00\nassert solution(1000000000000000000000000000000000) == 5.00\nassert solution(10000000000000000000000000000000000) == 5.00\nassert solution(10000000000000000"
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=sample_input_1) == sample_output_1\nassert solution(stdin=sample_input_2) == sample_output_2\n"
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('50 0.125') == '16.339203308'\nassert solution('201 1.000') == '5.000000000'\n"
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Test failed with input {input()}, output {output}\"\nprint(\"Test passed\")"
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '16.339203308', 'Expected Output 1: 16.339203308'"
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(50, 0.125) == 16.34, \"Your solution is incorrect.\"\nassert solution(201, 1.000) == 5.000, \"Your solution is incorrect.\""
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n0.5 1\\n\") == \"2\\n\"\nassert solution(\"4 3\\n1 11\\n0.4 1\\n\") == \"3\\n\""
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 2, \"Expected output 2, got: {}\".format(solution())"
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\n0.5 1\\n2 2\\n0.5 1\\n2 2\\n0.5 1\\n4 3\\n1 11\\n0.4 1\\n\") == \"2\\n\"\nassert solution(\"2 2\\n0.5 1\\n2 2\\n0.5 1\\n2 2\\n0.5 1\\n4 3\\n1 11\\n0.4 1\\n\") == \"3\\n\"\n\nprint(\"All tests passed.\")"
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == expected_solution, f\"Expected solution is {expected_solution}, but got {solution}\"\n\nsolution = int(input())\nk = int(input())\nv = int(input())\n\np_i = list(map(float, input().split()))\nb_i = list(map(int, input().split()))\n\ntotal_p = sum(p_i)\nexpected_positions = 0\n\nfor p in p_i:\n    if p > 0.5:\n        expected_positions += 1\n\nmax_ballots_v = 2 ** k - 1\nfor i in range(v):\n    ballots = 0\n    max_ballots = max_ballots_v\n    for j in range(k):\n        if b_i[i] & (1 << j):\n            ballots += 1\n            max_ballots = min(max_ballots, ballots)\n    if ballots > max_ballots:\n        max_ballots = ballots\n\nprint(max_ballots)"
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 2\\n0.5 1\\n') == '2\\n'\nassert solution('4 3\\n1 11\\n0.4 1\\n') == '3\\n'"
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == solution, \"Your solution is incorrect.\"\nprint(\"Correct!\")"
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n0.5 1\\n\") == \"2\"\nassert solution(\"4 3\\n1 11\\n0.4 1\\n\") == \"3\""
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Solution does not match the expected output\\nInput: {input()}\\nExpected Output: {expected_output}\\nSolution: {solution(input())}\"\n"
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n2 2\n0.5 1\n\"\"\") == \"2\\n\"\n\nassert solution(\"\"\"\n4 3\n1 11\n0.4 1\n\"\"\") == \"3\\n\""
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n2 2\n0.5 1\n\"\"\"\n) == \"2\\n\"\n\nassert solution(\n    \"\"\"\n4 3\n1 11\n0.4 1\n\"\"\"\n) == \"3\\n\""
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n7 1\\n3 2\\n10 0') == '10.5'\nassert solution('3\\n2 1\\n4 0\\n0 3') == '-1'"
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n3\n7 1\n3 2\n10 0\n\"\"\"\n) == \"10.5\\n\"\n\nassert solution(\n    \"\"\"\n3\n2 1\n4 0\n0 3\n\"\"\"\n) == \"-1\\n\""
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"TODO\" # Add your solution here\n"
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n7 1\\n3 2\\n10 0\") == \"10.5\"\nassert solution(\"3\\n2 1\\n4 0\\n0 3\") == \"-1\""
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n7 1\\n3 2\\n10 0\\n') == '10.5\\n'\nassert solution('3\\n2 1\\n4 0\\n0 3\\n') == '-1\\n'"
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"10.5\""
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"10.5\""
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected, f\"Test failed. Expected output: {expected}, got: {solution(stdin)}\""
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n7 1\\n3 2\\n10 0\\n\") == \"10.5\"\nassert solution(\"3\\n2 1\\n4 0\\n0 3\\n\") == \"-1\""
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n7 1\\n3 2\\n10 0\") == \"10.5\\n\"\nassert solution(\"3\\n2 1\\n4 0\\n0 3\") == \"-1\\n\""
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n2 0.5\n2 0.5\n1 0.5\n\"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n2 0.5\n2 0.51\n1 0.49\n\"\"\"\n) == \"2\\n\""
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2\n\nfrom typing import List"
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 0.5\\n2 0.5\\n1 0.5\") == \"1\\n\"\nassert solution(\"2 0.5\\n2 0.51\\n1 0.49\") == \"2\\n\""
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n    2 0.5\n    2 0.5\n    1 0.5\n    \n\"\"\") == \"1\\n\"\nassert solution(\"\"\"\n    2 0.5\n    2 0.51\n    1 0.49\n    \n\"\"\") == \"2\\n\""
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2\n"
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r').read()) == '1\\n'\nassert solution(open('input2.txt', 'r').read()) == '2\\n'"
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 0.5\\n2 0.5\\n1 0.5\\n') == '1\\n'\nassert solution('2 0.5\\n2 0.51\\n1 0.49\\n') == '2\\n'"
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 0.5\\n2 0.5\\n1 0.5\\n\") == \"1\\n\"\nassert solution(\"2 0.5\\n2 0.51\\n1 0.49\\n\") == \"2\\n\""
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 0.5\\n2 0.5\\n1 0.5\\n\") == \"1\\n\"\nassert solution(\"2 0.5\\n2 0.51\\n1 0.49\\n\") == \"2\\n\""
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"The output is not as expected. Expected {expected_output}, got {solution(input())}.\"\n"
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5 2\\n3 3 3 3\\n0 1\\n0 3\\n1 3\\n1 2\\n2 3\\n\") == \"yes\\n\"\nassert solution(\"5 4 4\\n1 1 2 2 2\\n0 1\\n2 3\\n3 4\\n4 2\\n\") == \"yes\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"yes\""
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5 2\\n3 3 3 3\\n0 1\\n0 3\\n1 3\\n1 2\\n2 3\") == \"yes\\n\"\nassert solution(\"5 4 4\\n1 1 2 2 2\\n0 1\\n2 3\\n3 4\\n4 2\") == \"yes\\n\""
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"yes\""
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input1) == \"yes\"\nassert solution(input2) == \"no\""
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('yes') == 'yes'\nassert solution('no') == 'no'"
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input) == expected\nprint(expected)"
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5 2\\n3 3 3 3\\n0 1\\n0 3\\n1 3\\n1 2\\n2 3\\n\") == \"yes\"\nassert solution(\"5 4 4\\n1 1 2 2 2\\n0 1\\n2 3\\n3 4\\n4 2\\n\") == \"yes\""
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"yes\"\nassert solution(input()) == \"no\""
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n4 5 2\n3 3 3 3\n0 1\n0 3\n1 3\n1 2\n2 3\n''') == 'yes'\n\nassert solution('''\n5 4 4\n1 1 2 2 2\n0 1\n2 3\n3 4\n4 2\n''') == 'no'"
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n5\\n5\\n5\") == [\"2\",\"1\",\"2\"]\nassert solution(\"4\\n20\\n15\\n17\\n14\") == [\"5\",\"8\",\"2\",\"7\"]"
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == ['2', '1', '2']\nassert solution(4) == ['5', '8', '2', '7']"
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(r'3\\n5\\n5\\n5') == '2\\n1\\n2\\n'\nassert solution(r'4\\n20\\n15\\n17\\n14') == '5\\n8\\n2\\n7\\n'\n"
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n5\\n5\\n5\\n') == '2\\n1\\n2\\n'\nassert solution('4\\n20\\n15\\n17\\n14\\n') == '5\\n8\\n2\\n7\\n'"
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"2\\n1\\n2\\n5\\n8\\n2\\n7\\n\""
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n5\\n5\\n5\") == \"2\\n1\\n2\\n\"\nassert solution(\"4\\n20\\n15\\n17\\n14\") == \"5\\n8\\n2\\n7\\n\""
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(123456789) == '2\\n1\\n2\\n'\nassert solution(100000000000000000000) == '5\\n8\\n2\\n7\\n'"
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n5\\n5\\n5\") == \"2\\n1\\n2\\n\"\nassert solution(\"4\\n20\\n15\\n17\\n14\") == \"5\\n8\\n2\\n7\\n\""
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n5\\n5\\n5\\n\") == [\"2\\n1\\n2\\n\"]\nassert solution(\"4\\n20\\n15\\n17\\n14\\n\") == [\"5\\n8\\n2\\n7\\n\"]"
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('sample_input.txt', 'r').read()) == ['python', 'java', 'python main.py', 'java main.py', 'def solution(stdin: str) -> str:', 'python -n 10']"
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"python\") == \"python\\npython main.py\\npython main.py -n 10\"\nassert solution(\"java\") == \"java\\njava\\njava\"\nassert solution(\"\") == \"\""
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\") == []\nassert solution(\"python\\n\") == [\"python\"]\nassert solution(\"python\\npython main.py\\n\") == [\"python\", \"python main.py\"]\nassert solution(\"python\\njava\\n\") == [\"python\", \"java\"]\nassert solution(\"python\\njava\\njava\\n\") == [\"python\", \"java\", \"java\"]\nassert solution(\"python\\njava\\njava\\njava\\n\") == [\"python\", \"java\", \"java\", \"java\"]\nassert solution(\"python\\njava\\njava\\njava\\njava\\n\") == [\"python\", \"java\", \"java\", \"java\", \"java\"]\nassert solution(\"python\\njava\\njava\\njava\\njava\\njava\\n\") == [\"python\", \"java\", \"java\", \"java\", \"java\", \"java\"]\nassert solution(\"python\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\n\") == [\"python\", \"java\", \"java\", \"java\", \"java\", \"java\", \"java\", \"java\", \"java\"]\nassert solution(\"python\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\n\") == [\"python\", \"java\", \"java\", \"java\", \"java\", \"java\", \"java\", \"java\", \"java\", \"java\", \"java\"]\nassert solution(\"python\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\n"
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('python') == 'python', 'Your solution is incorrect.'\nassert solution('python main.py') == 'python main.py', 'Your solution is incorrect.'\nassert solution('python main.py -n 10') == 'python main.py -n 10', 'Your solution is incorrect.'\nassert solution('') == '', 'Your solution is incorrect.'\nassert solution('^') == '', 'Your solution is incorrect.'\nassert solution('^ 1') == '', 'Your solution is incorrect.'\nassert solution('^ 1 ') == '', 'Your solution is incorrect.'\nassert solution('^ 1 ') == '', 'Your solution is incorrect.'\nassert solution('^ 1 ') == '', 'Your solution is incorrect.'\nassert solution('^ 1 ') == '', 'Your solution is incorrect.'\nassert solution('^ 1 ') == '', 'Your solution is incorrect.'\nassert solution('^ 1 ') == '', 'Your solution is incorrect.'\nassert solution('^ 1 ') == '', 'Your solution is incorrect.'\nassert solution('^ 1 ') == '', 'Your solution is incorrect.'\nassert solution('^ 1 ') == '', 'Your solution is incorrect.'\nassert solution('^ 1 ') == '', 'Your solution is incorrect.'\nassert solution('^ 1 ') == '', 'Your solution is incorrect.'\nassert solution('^ 1 ') == '', 'Your solution is incorrect.'\nassert solution('^ 1 ') == '', 'Your solution is incorrect.'\nassert solution('^ 1 ') == '', 'Your solution is incorrect.'\nassert solution('^ 1 ') == '', 'Your solution is incorrect.'\nassert solution('^ 1 ') == '', 'Your solution is incorrect.'\nassert solution('^ 1 ') == '', 'Your solution is incorrect.'\nassert solution('^ 1 ') == '', 'Your solution is incorrect.'\nassert solution('^ 1 ') == '', 'Your solution is incorrect.'\nassert solution('^ 1 ') == '', 'Your solution is incorrect.'\nassert solution('^ 1 ') == '', 'Your solution is incorrect.'\nassert solution('^ 1 ') == '', 'Your solution is incorrect.'\nassert solution('^ 1 ') == '', 'Your solution is incorrect.'\nassert solution('^ 1 ') == '', 'Your solution is incorrect.'\nassert solution('^ 1 ') == '', 'Your solution is incorrect.'\nassert solution('^ 1 ') == '', 'Your solution is incorrect.'\nassert solution('^ 1 ') == '', 'Your solution is incorrect.'\nassert solution('^ 1 ') == '', 'Your solution is incorrect.'\nassert solution('^ 1 ') == '', 'Your solution is incorrect.'\nassert solution('^ 1 ') == '', 'Your solution is incorrect.'\nassert solution('^ 1 ') == '', 'Your solution is incorrect.'\nassert solution('^ 1 ') == '', 'Your solution is incorrect.'\nassert solution('^ 1 ') == '', 'Your solution is incorrect.'\nassert solution('^ 1 ') == '', 'Your solution is incorrect.'\nassert solution('^ 1 ') == '', 'Your solution is incorrect.'\nassert solution('^ 1 ') == '', 'Your solution is incorrect.'\nassert solution('^ 1 ') == '', 'Your solution is incorrect.'\nassert solution('^ 1 ') == '', 'Your solution is incorrect.'\nassert solution('^ 1 ') == '', 'Your solution is incorrect.'\nassert solution('^ 1 ') == '', 'Your solution is incorrect.'\nassert solution('^ 1 ') == '', 'Your solution is incorrect.'\nassert solution('^ 1 ') == '', 'Your solution is incorrect.'\nassert solution('^ 1 ') == '', 'Your solution is incorrect.'\nassert solution('^ 1 ') == '', 'Your solution is incorrect.'\nassert solution('^ 1 ') == '', 'Your solution is incorrect.'\nassert solution('^ 1 ') == '', 'Your solution is incorrect.'\nassert solution('^ 1 ') == '', 'Your solution is incorrect.'\nassert solution('^ 1 ') == '', 'Your solution is incorrect.'\nassert solution('^ 1 ') == '', 'Your solution is incorrect.'\nassert solution('^ 1 ') == '', 'Your solution is incorrect.'\nassert solution('^ 1 ') == '', 'Your solution is incorrect.'\nassert solution('^ 1 ') == '', 'Your solution is incorrect.'\nassert solution('^ 1 ') == '', 'Your solution is incorrect.'\nassert solution('^ 1 ') == '', 'Your solution is incorrect.'\nassert solution('^ 1 ') == '', 'Your solution is incorrect.'\nassert solution('^ 1 ') == '', 'Your solution is incorrect.'\nassert solution('^ 1 ') == '', 'Your solution is incorrect.'\nassert solution"
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\npython\\np^ main.py\\np^ -n 10\\n\") == \"python\\npython main.py\\npython main.py -n 10\""
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('python\\np^ main.py\\n^ -n 10\\n') == ['python', 'python main.py', 'python main.py -n 10']\nassert solution('java\\n\\n^ -n 10\\n') == ['java']\nassert solution('python\\n\\n') == ['python']\nassert solution('') == []"
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\npython\\np^ main.py\\n^ -n 10') == ['python', 'python main.py', 'python main.py -n 10']\nassert solution('5\\npython\\njava\\n^\\n^^^\\n^^^') == ['python', 'java', 'java', 'python', 'java', 'def solution(stdin: str) -> str:\\n    pass']"
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"test_input.txt\").read()) == \"python python main.py python main.py -n 10\""
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('python') == 'python'\nassert solution('python main.py') == 'python main.py'\nassert solution('python main.py -n 10') == 'python main.py -n 10'\nassert solution('java') == 'java'\nassert solution('java') == 'java'\nassert solution('java') == 'java'"
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"python\\npython main.py\\npython main.py -n 10\"\nassert solution(input()) == \"python\\npython main.py\\npython main.py -n 10\"\nassert solution(input()) == \"python\\npython main.py\\npython main.py -n 10\"\nassert solution(input()) == \"python\\npython main.py\\npython main.py -n 10\"\nassert solution(input()) == \"python\\npython main.py\\npython main.py -n 10\"\nassert solution(input()) == \"python\\npython main.py\\npython main.py -n 10\"\nassert solution(input()) == \"python\\npython main.py\\npython main.py -n 10\""
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\", 5) == \"this sentence makes perfect sense\"\nassert solution(\"hitehre\", 2) == \"impossible\""
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\") == \"this sentence makes perfect sense\"\nassert solution(\"hitehre\") == \"impossible\""
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\") == \"this sentence makes perfect sense\"\nassert solution(\"hitehre\") == \"impossible\""
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('tihssnetnceemkaesprfecetsesne', 5,'makes', 'perfect','sense','sentence', 'this') == 'this sentence makes perfect sense'\nassert solution('hitehre', 2, 'there', 'hello') == 'impossible'"
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\") == \"this sentence makes perfect sense\", \"Test 1\"\nassert solution(\"hitehre\") == \"impossible\", \"Test 2\""
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\") == \"this sentence makes perfect sense\"\nassert solution(\"hitehre\") == \"impossible\""
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\") == \"this sentence makes perfect sense\""
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\") == \"this sentence makes perfect sense\"\nassert solution(\"hitehre\") == \"impossible\""
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\") == \"this sentence makes perfect sense\"\nassert solution(\"hitehre\") == \"impossible\"\n"
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\", 5, \"makes\", \"perfect\", \"sense\", \"sentence\", \"this\") == \"this sentence makes perfect sense\"\nassert solution(\"hitehre\", 2, \"there\", \"hello\") == \"impossible\"\n\nfrom typing import List"
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 2\\n2 2') == '4'\nassert solution('2 2\\n1 2') == '16'"
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 16 # Solution is correct\n"
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 2\\n2 2') == 4\nassert solution('2 2\\n2 2') == 16"
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"Output a single line with a single integer representing the number of possible arrangements, modulo $(10^{9}+9)$.\",\"Test case 1 failed\"\n\nassert solution(stdin) == \"Output a single line with a single integer representing the number of possible arrangements, modulo $(10^{9}+9)$.\",\"Test case 2 failed\""
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2\\n2 2\\n\") == 4\nassert solution(\"2 2\\n\") == 16"
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2\") == \"4\"\nassert solution(\"2 2\") == \"16\""
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == output, f\"Solution for {stdin} is incorrect. Output: {output}, Expected: {output}\""
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2\\n2 2\\n\") == \"4\"\nassert solution(\"2 2\\n2 2\\n\") == \"16\""
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2\\n2 2\\n\") == \"4\\n\"\nassert solution(\"2 2\\n\") == \"16\\n\""
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"4\"\nassert solution(\"2 2\") == \"16\""
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\""
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin='6\\nabcbab\\n2\\ncb\\ncbab\\n') == '2\\n'\nassert solution(stdin='4\\nabab\\n2\\nbac\\nbaba\\n') == '4\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=sample_input1) == '2'\nassert solution(stdin=sample_input2) == '4'"
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(b'''\n    6\nabcbab\n2\ncb\ncbab\n''') == '2'\n\nassert solution(b'''\n    4\nabab\n2\nbac\nbaba\n''') == '4'"
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input(\"Enter the length of the street: \")) == 2\nassert solution(input(\"Enter the letter sequence in the street: \")) == 4\nassert solution(input(\"Enter the number of tile patterns: \")) == 2\nassert solution(input(\"Enter the tile pattern description of 1st pattern: \")) == 0\nassert solution(input(\"Enter the tile pattern description of 2nd pattern: \")) == 3\nassert solution(input(\"Enter the tile pattern description of 3rd pattern: \")) == 0\nassert solution(input(\"Enter the tile pattern description of 4th pattern: \")) == 4\nassert solution(input(\"Enter the tile pattern description of 5th pattern: \")) == 5\nassert solution(input(\"Enter the tile pattern description of 6th pattern: \")) == 6\nassert solution(input(\"Enter the tile pattern description of 7th pattern: \")) == 7\nassert solution(input(\"Enter the tile pattern description of 8th pattern: \")) == 0\nassert solution(input(\"Enter the tile pattern description of 9th pattern: \")) == 10\nassert solution(input(\"Enter the tile pattern description of 10th pattern: \")) == 11\nassert solution(input(\"Enter the tile pattern description of 11th pattern: \")) == 12\nassert solution(input(\"Enter the tile pattern description of 12th pattern: \")) == 13\nassert solution(input(\"Enter the tile pattern description of 13th pattern: \")) == 14\nassert solution(input(\"Enter the tile pattern description of 14th pattern: \")) == 0\nassert solution(input(\"Enter the tile pattern description of 15th pattern: \")) == 16\nassert solution(input(\"Enter the tile pattern description of 16th pattern: \")) == 17\nassert solution(input(\"Enter the tile pattern description of 17th pattern: \")) == 18\nassert solution(input(\"Enter the tile pattern description of 18th pattern: \")) == 19\nassert solution(input(\"Enter the tile pattern description of 19th pattern: \")) == 20\nassert solution(input(\"Enter the tile pattern description of 20th pattern: \")) == 21\nassert solution(input(\"Enter the tile pattern description of 21st pattern: \")) == 22\nassert solution(input(\"Enter the tile pattern description of 22nd pattern: \")) == 23\nassert solution(input(\"Enter the tile pattern description of 23rd pattern: \")) == 24\nassert solution(input(\"Enter the tile pattern description of 24th pattern: \")) == 0\nassert solution(input(\"Enter the tile pattern description of 25th pattern: \")) == 26\nassert solution(input(\"Enter the tile pattern description of 26th pattern: \")) == 27\nassert solution(input(\"Enter the tile pattern description of 27th pattern: \")) == 28\nassert solution(input(\"Enter the tile pattern description of 28th pattern: \")) == 29\nassert solution(input(\"Enter the tile pattern description of 29th pattern: \")) == 30\nassert solution(input(\"Enter the tile pattern description of 30th pattern: \")) == 31\nassert solution(input(\"Enter the tile pattern description of 31st pattern: \")) == 32\nassert solution(input(\"Enter the tile pattern description of 32nd pattern: \")) == 33\nassert solution(input(\"Enter the tile pattern description of 33rd pattern: \")) == 34\nassert solution(input(\"Enter the tile pattern description of 34th pattern: \")) == 35\nassert solution(input(\"Enter the tile pattern description of 35th pattern: \")) == 36\nassert solution(input(\"Enter the tile pattern description of 36th pattern: \")) == 37\nassert solution(input(\"Enter the tile pattern description of 37th pattern: \")) == 38\nassert solution(input(\"Enter the tile pattern description of 38th pattern: \")) == 39\nassert solution(input(\"Enter the tile pattern description of 39th pattern: \")) == 40\nassert solution(input(\"Enter the tile pattern description of 40th pattern: \")) == 41\nassert solution(input(\"Enter the tile pattern description of 41st pattern: \")) == 42\nassert solution(input(\"Enter the tile pattern description of 42nd pattern: \")) == 43\nassert solution(input(\"Enter the tile pattern description of 43rd pattern: \")) == 44\nassert solution(input"
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Sample Input 1\\n6\\nabcbab\\n2\\ncb\\ncbab\\nSample Output 1\\n2\\n\\nSample Input 2\\n4\\abab\\n2\\nbac\\nbaba\\nSample Output 2\\n4\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\") == \"2\\n\\n\"\nassert solution(\"Sample Input 3\\n1\\nSample Output 3\\n1\\n\\n\") == \"1\\n\\n\""
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=input()) == output()"
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '2', 'Incorrect output'"
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Expected: {output()}, got: {solution(input())}\""
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"4\\n17.071067\\n20\\n22.928932\"\nassert solution() == \"6\\n85\\n90\\n95\\n100\\n105\""
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"50\\n4\\n110 10\\n80 10\\n80 0\\n110 0\") == \"6\\n85\\n90\\n95\\n100\\n105\\n\"\nassert solution(\"24\\n3\\n10 10\\n30 10\\n20 20\") == \"4\\n17.071067\\n20\\n22.928932\\n\""
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == solution()  # repeat the solution twice to check for correctness"
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"50\\n4\\n110 10\\n80 10\\n80 0\\n110 0\\n\") == \"6\\n85\\n90\\n95\\n100\\n105\\n\"\nassert solution(\"24\\n3\\n10 10\\n30 10\\n20 20\\n\") == \"4\\n17.071067\\n20\\n22.928932\\n\""
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution() == \"abc\"\nassert solution"
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution"
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution"
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 11\") == \"yes\"\nassert solution(\"10 7\") == \"yes\"\nassert solution(\"10 5\") == \"no\"\nassert solution(\"10 3\") == \"no\""
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 11\") == \"yes\"\nassert solution(\"10 7\") == \"yes\""
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 11\") == \"yes\"\nassert solution(\"10 7\") == \"yes\""
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 11\") == \"yes\\n\"\nassert solution(\"10 7\") == \"yes\\n\""
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"yes\"\nassert solution(input()) == \"no\""
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 11\") == \"yes\"\nassert solution(\"10 7\") == \"yes\""
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(b=10, d=11) == 'yes'\nassert solution(b=10, d=7) == 'yes'\nassert solution(b=10, d=4) == 'no'\n\nfrom typing import List"
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 11\") == \"yes\"\nassert solution(\"10 7\") == \"yes\"\nassert solution(\"10 23\") == \"no\""
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"10 11\\n10 7\\n\") == \"yes\\nno\\n\""
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 11\") == \"yes\\n\"\nassert solution(\"10 7\") == \"yes\\n\""
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == expected_output"
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3 4\\n2 5\\n1 6\\n5\\n10 30\\n20 40\\n30 50\\n10 60\\n30 40\\n\") == \"3\\n10 60\\n30 50\\n30 40\\n\""
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Test {index+1} failed\"\n"
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n3\\n2\\n1\\n6\\n5\\n3\\n4\\n\") == \"3\\n1 6\\n2 5\\n3 4\\n\"\nassert solution(\"1\\n10\\n20\\n30\\n10\\n60\\n30\\n40\\n\") == \"3\\n10 60\\n30 50\\n30 40\\n\""
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n3 4\\n2 5\\n1 6\") == \"3\\n1 6\\n2 5\\n3 4\"\nassert solution(\"5\\n10 30\\n20 40\\n30 50\\n10 60\\n30 40\") == \"3\\n10 60\\n30 50\\n30 40\"\n\nimport sys"
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n3 4\\n2 5\\n1 6\") == \"3\\n1 6\\n2 5\\n3 4\\n\"\n\nassert solution(\"5\\n10 30\\n20 40\\n30 50\\n10 60\\n30 40\") == \"3\\n10 60\\n30 50\\n30 40\\n\""
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '3\\n1 6\\n2 5\\n3 4\\n4 3\\n5 2\\n6 1\\n7 8\\n8 7\\n9 6\\n10 5\\n'"
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == 'Output the length K of the longest sequence on the first line.Each of the following K lines should contain one element of the sequence, an interval in the same format it was given in the input.'"
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"3\\n1 6\\n2 5\\n3 4\""
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3 4\\n2 5\\n1 6\\n\") == \"3\\n1 6\\n2 5\\n3 4\\n\"\nassert solution(\"5\\n10 30\\n20 40\\n30 50\\n10 60\\n30 40\\n\") == \"3\\n10 60\\n30 50\\n30 40\\n\"\nassert solution(\"3\\n1 6\\n2 5\\n3 4\\n2\\n1 4\\n4\\n\") == \"3\\n1 6\\n2 5\\n3 4\\n\"\nassert solution(\"3\\n1 6\\n2 5\\n3 4\\n\") == \"3\\n1 6\\n2 5\\n3 4\\n\"\nassert solution(\"1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n\") == \"3\\n1 6\\n2 5\\n3 4\\n\"\nassert solution(\"1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1\\n\") == \"3\\n1 6\\n2 5\\n3 4\\n\"\nassert solution(\"1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n2\\n\") == \"3\\n1 6\\n2 5\\n3 4\\n\""
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 1\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\") == 5836\nassert solution(\"5 2\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\") == 1828"
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 1\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\\n\") == \"5836\"\nassert solution(\"5 2\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\\n\") == \"1828\""
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == expected_output, f\"The solution is incorrect. Expected output: {expected_output}, but got: {solution}\""
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 1\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\\n') == '5836'\nassert solution('5 2\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\\n') == '1828'"
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 1\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\\n\") == \"5836\\n\"\nassert solution(\"5 2\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\\n\") == \"1828\\n\""
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 1\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\\n\") == \"5836\\n\"\n\nassert solution(\"5 2\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\\n\") == \"1828\\n\""
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 1\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\\n\") == \"5836\\n\"\nassert solution(\"5 2\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\\n\") == \"1828\\n\""
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Testcase failed. Input: {input()}, Output: {output()}\""
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '5836'"
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"5836\", \"The minimum amount of wasted paper needed is: \" + str(5836)"
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n7 2401 3299 0\\n6 2401 2399 0\\n2 750 750 99\\n\") == \"50\\n\"\nassert solution(\"3\\n7 100 200 200\\n8 100 300 200\\n9 100 400 200\\n\") == \"impossible\\n\""
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"impossible\" # Replace this line with your solution code."
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"impossible\""
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"The given solution is incorrect. Please check the given examples and test cases.\""
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"50\"\n"
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n7 2401 3299 0\\n6 2401 2399 0\\n2 750 750 99\\n\") == \"50\\n\"\nassert solution(\"3\\n7 100 200 200\\n8 100 300 200\\n9 100 400 200\\n\") == \"impossible\\n\""
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n7 2401 3299 0\\n6 2401 2399 0\\n2 750 750 99\") == \"50\\n\", \"Sample Input 1\"\nassert solution(\"3\\n7 100 200 200\\n8 100 300 200\\n9 100 400 200\") == \"impossible\\n\", \"Sample Input 2\""
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '50\\n'\nassert solution(stdin) == 'impossible\\n'"
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r')) == '50'\nassert solution(open('input2.txt', 'r')) == 'impossible'"
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0 0 0 0 1\"\n\nprint(\"Sample Input 1:\")\nP = float(input())\n\nprint(\"Sample Output 1:\")\nprint(\"0\" * (1-int(P+0.5)) + \"0\" * (1-int(P+1)) + \"0\" * (1-int(P+2)) + \"0\" * (1-int(P+3)) + \"1\")\n\nprint(\"Sample Input 2:\")\nP = float(input())\n\nprint(\"Sample Output 2:\")\nprint(\"0\" * (1-int(P+0.5)) + \"0\" * (1-int(P+1)) + \"0\" * (1-int(P+2)) + \"1\" * (1-int(P+3)) + \"1\")"
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Solution mismatch! Expected: '{output()}'\\nGot: '{solution(input())}'\\nInput: '{input()}'\\n\""
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5.0\") == \"0 0 0 0 1\"\nassert solution(\"4.5\") == \"0 0 0 1 1\""
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(5.0) == '0 0 0 0 1', \"Test case 1 failed\"\nassert solution(4.5) == '0 0 0 1 1', \"Test case 2 failed\""
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"5.0\") == \"0 0 0 0 1\\n\"\nassert solution(stdin=\"4.5\") == \"0 0 0 1 1\\n\""
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(5.0) == '0 0 0 0 1', 'Test 1'\nassert solution(4.5) == '0 0 0 1 1', 'Test 2'"
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(5.0) == '0 0 0 0 1', 'Test 1'\nassert solution(4.5) == '0 0 0 1 1', 'Test 2'"
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(5.0) == [0, 0, 0, 0, 1]\nassert solution(4.5) == [0, 0, 0, 1, 1]"
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()\n\ninput = \"\"\"\n5.0\n\"\"\"\n\noutput = \"\"\"\n0 0 0 0 1\n\"\"\"\n\nassert solution(input) == output\n\ninput = \"\"\"\n4.5\n\"\"\"\n\noutput = \"\"\"\n0 0 0 1 1\n\"\"\"\n\nassert solution(input) == output"
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(5.0) == \"0 0 0 0 1\", \"The correctness of the solution is not provided.\"\nassert solution(4.5) == \"0 0 0 1 1\", \"The correctness of the solution is not provided.\""
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('8 3 1\\n1 7 8 2 6 4 3 5') == '8\\n'\nassert solution('8 2 1\\n1 7 8 2 6 4 3 5') == '3\\n'"
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 3 1\\n1 7 8 2 6 4 3 5\") == \"8\\n\"\nassert solution(\"8 2 1\\n1 7 8 2 6 4 3 5\") == \"3\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 7 8 2 6 4 3 5\") == \"3\"\nassert solution(\"8 3 1\") == \"8\"\nassert solution(\"8 2 1\") == \"3\""
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 3 1\\n1 7 8 2 6 4 3 5\") == \"8\\n\", \"Test case 1 failed\"\nassert solution(\"8 2 1\\n1 7 8 2 6 4 3 5\") == \"3\\n\", \"Test case 2 failed\""
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 3 1\\n1 7 8 2 6 4 3 5\") == \"8\"\nassert solution(\"8 2 1\\n1 7 8 2 6 4 3 5\") == \"3\"\n"
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Output {solution(input())} does not match expected output {output()}\"\n"
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == \"8\\n\"\n\nassert solution(open('input.txt', 'r')) == \"3\\n\""
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 3 1\\n1 7 8 2 6 4 3 5\") == \"8\\n\"\nassert solution(\"8 2 1\\n1 7 8 2 6 4 3 5\") == \"3\\n\""
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(b'Sample Input 1\\n8 3 1\\n1 7 8 2 6 4 3 5\\n\\nSample Output 1\\n8\\n\\nSample Input 2\\n8 2 1\\n1 7 8 2 6 4 3 5\\n\\nSample Output 2\\n3\\n') == '8\\n3\\n'\nassert solution(b'Sample Input 1\\n8 3 1\\n1 7 8 2 6 4 3 5\\n\\nSample Output 1\\n8\\n\\nSample Input 2\\n8 2 1\\n1 7 8 2 6 4 3 5\\n\\nSample Output 2\\n3\\n') == '8\\n3\\n'"
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(solution_input) == solution_output, f\"The solution should return {solution_output}, but it returns {solution(solution_input)}\""
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n2 3 4 1\\nSample Output 1:\\n3\\n\\nSample Input 2:\\n6 3\\n2 2 2 4 4 4\\nSample Output 2:\\n4\") == 3"
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"3\\n\", \"Sample Output 1: 3\"\nassert solution(stdin) == \"4\\n\", \"Sample Output 2: 4\""
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\n2 3 4 1\") == \"3\"\nassert solution(\"6 3\\n2 2 2 4 4 4\") == \"4\""
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n2 3 4 1\") == \"3\"\nassert solution(\"6 3\\n2 2 2 4 4 4\") == \"4\""
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"3\\n\""
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\n2 3 4 1\") == \"3\"\nassert solution(\"6 3\\n2 2 2 4 4 4\") == \"4\""
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '3\\n'\n"
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input1) == expected1, f\"Test 1 failed. Expected: {expected1}, Received: {solution(sample_input1)}\"\nassert solution(sample_input2) == expected2, f\"Test 2 failed. Expected: {expected2}, Received: {solution(sample_input2)}\"\n\nsample_input1 = \"\"\"4 2\n2 3 4 1\"\"\"\nsample_input2 = \"\"\"6 3\n2 2 2 4 4 4\"\"\"\n\nexpected1 = 3\nexpected2 = 4"
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 2\\n2 3 4 1\\n') == '3\\n'\nassert solution('6 3\\n2 2 2 4 4 4\\n') == '4\\n'"
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == solution(stdin)  # 100% test coverage\n"
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(f\"1 1 1.732050\") == 1.732050808\nassert solution(f\"1 1 3.0\") == -1"
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1 1.732050\") == 1.732050808\nassert solution(\"1 1 3.0\") == -1\n"
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1 1.732050\") == \"1.732050808\\n\"\nassert solution(\"1 1 3.0\") == \"-1\\n\""
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1.732050808\\n\""
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 1 1.732050\\n1 1 3.0\\n') == '1.732050808\\n'\nassert solution('1 1 3.14159\\n1 1 3.14159\\n') == '-1\\ndef solution(stdin: str) -> str:\\npass\\n'\nassert solution('1 1 3.14159\\n1 1 3.1416\\n') == '-1\\ndef solution(stdin: str) -> str:\\npass\\n'\nassert solution('1 1 1.732050\\n1 1 2.0\\n') == '-1\\ndef solution(stdin: str) -> str:\\npass\\n'"
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n1 1 1.732050\n''') == '1.732050808'\nassert solution('''\n1 1 3.0\n''') == '-1'\n"
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input1) == output1, f\"Test 1: incorrect output. Expected: {output1}, Received: {solution(input1)}\"\nassert solution(input2) == output2, f\"Test 2: incorrect output. Expected: {output2}, Received: {solution(input2)}\""
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"The output is {output}, but expected {output}\""
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1 1.732050\") == 1.732050808\nassert solution(\"1 1 3.0\") == -1"
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1 1.732050\\n\") == \"1.732050808\\n\"\nassert solution(\"1 1 3.0\\n\") == \"-1\\n\"\nassert solution(\"1 2 1.5\\n1 3 1.732050\\n1 4 2.0\\n1 5 1.732050\\n\") == \"1.732050808\\n\"\nassert solution(\"1 2 1.732050\\n1 3 3.0\\n1 4 2.0\\n1 5 2.0\\n1 6 1.732050\\n\") == \"-1\\n\"\n"
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '2.4999999987500003', 'Test 1'"
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n3 4 2\\n.75\\n\") == \"2.4999999987500003\"\nassert solution(\"2\\n0 100 10\\n0 -100 100\\n.80\\n\") == \"9.999999999000002\""
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1\\n3 4 2\\n.75\\n') == '2.4999999987500003\\n'\nassert solution('2\\n0 100 10\\n0 -100 100\\n.80\\n') == '9.999999999000002\\n'\n"
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n3 4 2\\n.75\\n\") == \"2.4999999987500003\\n\"\nassert solution(\"2\\n0 100 10\\n0 -100 100\\n.80\\n\") == \"9.999999999000002\\n\""
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == 2.4999999987500003"
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(None) == \"Invalid input\"\nsolution = lambda stdin: \"Invalid input\"\n\nsolution(1) == \"Invalid input\"\nsolution = lambda stdin: \"Invalid input\"\n\nsolution(2) == \"Invalid input\"\nsolution = lambda stdin: \"Invalid input\"\n\nsolution(3) == \"Invalid input\"\nsolution = lambda stdin: \"Invalid input\"\n\nsolution(4) == \"Invalid input\"\nsolution = lambda stdin: \"Invalid input\"\n\nsolution(5) == \"Invalid input\"\nsolution = lambda stdin: \"Invalid input\"\n\nsolution(6) == \"Invalid input\"\nsolution = lambda stdin: \"Invalid input\"\n\nsolution(7) == \"Invalid input\"\nsolution = lambda stdin: \"Invalid input\"\n\nsolution(8) == \"Invalid input\"\nsolution = lambda stdin: \"Invalid input\"\n\nsolution(9) == \"Invalid input\"\nsolution = lambda stdin: \"Invalid input\"\n\nsolution(10) == \"Invalid input\"\nsolution = lambda stdin: \"Invalid input\"\n\nsolution(11) == \"Invalid input\"\nsolution = lambda stdin: \"Invalid input\"\n\nsolution(12) == \"Invalid input\"\nsolution = lambda stdin: \"Invalid input\"\n\nsolution(13) == \"Invalid input\"\nsolution = lambda stdin: \"Invalid input\"\n\nsolution(14) == \"Invalid input\"\nsolution = lambda stdin: \"Invalid input\"\n\nsolution(15) == \"Invalid input\"\nsolution = lambda stdin: \"Invalid input\"\n\nsolution(16) == \"Invalid input\"\nsolution = lambda stdin: \"Invalid input\"\n\nsolution(17) == \"Invalid input\"\nsolution = lambda stdin: \"Invalid input\"\n\nsolution(18) == \"Invalid input\"\nsolution = lambda stdin: \"Invalid input\"\n\nsolution(19) == \"Invalid input\"\nsolution = lambda stdin: \"Invalid input\"\n\nsolution(20) == \"Invalid input\"\nsolution = lambda stdin: \"Invalid input\"\n\nsolution(21) == \"Invalid input\"\nsolution = lambda stdin: \"Invalid input\"\n\nsolution(22) == \"Invalid input\"\nsolution = lambda stdin: \"Invalid input\"\n\nsolution(23) == \"Invalid input\"\nsolution = lambda stdin: \"Invalid input\"\n\nsolution(24) == \"Invalid input\"\nsolution = lambda stdin: \"Invalid input\"\n\nsolution(25) == \"Invalid input\"\nsolution = lambda stdin: \"Invalid input\"\n\nsolution(26) == \"Invalid input\"\nsolution = lambda stdin: \"Invalid input\"\n\nsolution(27) == \"Invalid input\"\nsolution = lambda stdin: \"Invalid input\"\n\nsolution(28) == \"Invalid input\"\nsolution = lambda stdin: \"Invalid input\"\n\nsolution(29) == \"Invalid input\"\nsolution = lambda stdin: \"Invalid input\"\n\nsolution(30) == \"Invalid input\"\nsolution = lambda stdin: \"Invalid input\"\n\nsolution(31) == \"Invalid input\"\nsolution = lambda stdin: \"Invalid input\"\n\nsolution(32) == \"Invalid input\"\nsolution = lambda stdin: \"Invalid input\"\n\nsolution(33) == \"Invalid input\"\nsolution = lambda stdin: \"Invalid input\"\n\nsolution(34) == \"Invalid input\"\nsolution = lambda stdin: \"Invalid input\"\n\nsolution(35) == \"Invalid input\"\nsolution = lambda stdin: \"Invalid input\"\n\nsolution(36) == \"Invalid input\"\nsolution = lambda stdin: \"Invalid input\"\n\nsolution(37) == \"Invalid input\"\nsolution = lambda stdin: \"Invalid input\"\n\nsolution(38) == \"Invalid input\"\nsolution = lambda stdin: \"Invalid input\"\n\nsolution(39) == \"Invalid input\"\nsolution = lambda stdin: \"Invalid input\"\n\nsolution(40) == \"Invalid input\"\nsolution = lambda stdin: \"Invalid input\"\n\nsolution(41) == \"Invalid input\"\nsolution = lambda stdin: \"Invalid input\"\n\nsolution(42) == \"Invalid input\"\nsolution = lambda stdin: \"Invalid input\"\n\nsolution(43) == \"Invalid input\"\nsolution = lambda stdin: \"Invalid input\"\n\nsolution(44) == \"Invalid input\"\nsolution = lambda stdin: \"Invalid input\"\n\nsolution(45) == \"Invalid input\"\nsolution = lambda stdin: \"Invalid input\"\n\nsolution(46) == \"Invalid input\"\nsolution = lambda stdin: \"Invalid input\"\n\nsolution"
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '2.4999999987500003', \"The solution for the given input is incorrect.\""
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1\\n3 4 2\\n.75\\n') == '2.4999999987500003\\n'\nassert solution('2\\n0 100 10\\n0 -100 100\\n.80\\n') == '9.999999999000002\\n'"
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1\\n3 4 2\\n.75\\n') == '2.4999999987500003\\n'\nassert solution('2\\n0 100 10\\n0 -100 100\\n.80\\n') == '9.999999999000002\\n'"
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n3 4 2\\n.75\\n2.4999999987500003\\n\") == \"2.4999999987500003\\n\"\nassert solution(\"2\\n0 100 10\\n0 -100 100\\n.80\\n9.999999999000002\\n\") == \"9.999999999000002\\n\""
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 2 6 5 1') == '0\\n3'\nassert solution('2 1 6 5 1') == '3'\nassert solution('1 1 5 1 2') == '3'\nassert solution('2 1 6 5 1') == '3'\nassert solution('1 1 5 1 2') == '3'\nassert solution('2 1 6 5 1') == '3'\nassert solution('1 1 5 1 2') == '3'\nassert solution('2 1 6 5 1') == '3'\nassert solution('1 1 5 1 2') == '3'\nassert solution('2 1 6 5 1') == '3'\nassert solution('1 1 5 1 2') == '3'\nassert solution('2 1 6 5 1') == '3'\nassert solution('1 1 5 1 2') == '3'\nassert solution('2 1 6 5 1') == '3'\nassert solution('1 1 5 1 2') == '3'\nassert solution('2 1 6 5 1') == '3'\nassert solution('1 1 5 1 2') == '3'\nassert solution('2 1 6 5 1') == '3'\nassert solution('1 1 5 1 2') == '3'\nassert solution('2 1 6 5 1') == '3'\nassert solution('1 1 5 1 2') == '3'\nassert solution('2 1 6 5 1') == '3'\nassert solution('1 1 5 1 2') == '3'\nassert solution('2 1 6 5 1') == '3'\nassert solution('1 1 5 1 2') == '3'\nassert solution('2 1 6 5 1') == '3'\nassert solution('1 1 5 1 2') == '3'\nassert solution('2 1 6 5 1') == '3'\nassert solution('1 1 5 1 2') == '3'\nassert solution('2 1 6 5 1') == '3'\nassert solution('1 1 5 1 2') == '3'\nassert solution('2 1 6 5 1') == '3'\nassert solution('1 1 5 1 2') == '3'\nassert solution('2 1 6 5 1') == '3'\nassert solution('1 1 5 1 2') == '3'\nassert solution('2 1 6 5 1') == '3'\nassert solution('1 1 5 1 2') == '3'\nassert solution('2 1 6 5 1') == '3'\nassert solution('1 1 5 1 2') == '3'\nassert solution('2 1 6 5 1') == '3'\nassert solution('1 1 5 1 2') == '3'\nassert solution('2 1 6 5 1') == '3'\nassert solution('1 1 5 1 2') == '3'\nassert solution('2 1 6 5 1') == '3'\nassert solution('1 1 5 1 2') == '3'\nassert solution('2 1 6 5 1') == '3'\nassert solution('1 1 5 1 2') == '3'\nassert solution('2 1 6 5 1') == '3'\nassert solution('1 1 5 1 2') == '3'\nassert solution('2 1 6 5 1') == '3'\nassert solution('1 1 5 1 2') == '3'\nassert solution('2 1 6 5 1') == '3'\nassert solution('1 1 5 1 2') == '3'\nassert solution('2 1 6 5 1') == '3'\nassert solution('1 1 5 1 2') == '3'\nassert solution('2 1 6 5 1') == '3'\nassert solution('1 1 5 1 2') == '"
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('day1/input1.txt', 'r').read()) == '0\\n3\\n'\nassert solution(open('day1/input2.txt', 'r').read()) == '3\\n2\\n1\\n0\\n'"
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6 3\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n') == '0\\n3\\n'\nassert solution('4 5\\n1 1 4 3 4\\n2 1 1\\n2 2 2\\n2 3 3\\n2 4 4\\n') == '3\\n2\\n1\\n0\\n'"
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(data) == expected, f\"Test {test_case} failed\""
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for input {input()}, expected {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 1 4 3 4\\n2 1 1\\n2 2 2\\n2 3 3\\n2 4 4\\n') == '3\\n2\\n1\\n0\\n'\nassert solution('6 3\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n') == '0\\n3\\n'\nassert solution('4 5\\n1 1 4 3 4\\n2 1 1\\n2 2 2\\n2 3 3\\n2 4 4\\n') == '3\\n2\\n1\\n0\\n'\n"
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"0\\n3\\n\"\nassert solution() == \"3\\n2\\n1\\n0\\n\""
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"The solution does not match the expected output: {solution(input())}!= {output}\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 2 6 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6') == '0\\n3\\n'\nassert solution('1 2 6 5 1 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6') == '3\\n2\\n1\\n0\\n'\nassert solution('6 3\\n2 1 6\\n1 1 5 1 2\\n2 1 6') == '0\\n3\\n'\nassert solution('4 5\\n1 1 4 3 4\\n2 1 1\\n2 2 2\\n2 3 3\\n2 4 4') == '3\\n2\\n1\\n0\\n'\n\nfrom typing import List\n"
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(str(input())) == str(output())\n"
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '1\\n'\nassert solution(stdin) == '4\\n'"
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 7 1000000007\") == \"1\\n\"\nassert solution(\"3 2 1000000007\") == \"4\\n\""
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1\", \"Testcase 1 failed\"\nassert solution(stdin) == \"4\", \"Testcase 2 failed\""
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1\\n\", \"Test 1 failed\"\nassert solution(stdin) == \"4\\n\", \"Test 2 failed\""
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected\nprint(f\"Solution: {expected}\")"
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin='1 7 1000000007') == '1\\n'\nassert solution(stdin='3 2 1000000007') == '4\\n'"
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1\\n\", \"Output is incorrect\""
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input1) == '1'\nassert solution(sample_input2) == '4'"
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 7 1000000007\") == \"1\\n\"\nassert solution(\"3 2 1000000007\") == \"4\\n\""
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 10\\n6\\n11\\n3 5\\n11\") == 5\nassert solution(\"10 10\\n6\\n11\\n3 5\\n10\") == 8\nassert solution(\"10 10\\n6\\n11\\n3 5\\n100\") == 100\nassert solution(\"10 10\\n6\\n11\\n3 5\\n1000\") == 1000\n"
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"10 10\\n6\\n3 5\\n11\\n\") == \"5\\n8\\n\"\nassert solution(stdin=\"10 10\\n11\\n10\\n11\\n10\\n11\\n10\\n\") == \"14\\n14\\n14\\n14\\n14\\n14\\n\"\nassert solution(stdin=\"10 10\\n11\\n10\\n10\\n10\\n10\\n10\\n\") == \"15\\n15\\n15\\n15\\n15\\n15\\n\"\nassert solution(stdin=\"10 10\\n11\\n10\\n10\\n10\\n11\\n10\\n\") == \"16\\n16\\n16\\n16\\n16\\n16\\n\"\nassert solution(stdin=\"10 10\\n11\\n11\\n11\\n11\\n11\\n11\\n\") == \"17\\n17\\n17\\n17\\n17\\n17\\n\""
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 10\\n6\\n11\\n\") == \"5\"\nassert solution(\"3 5\\n11\\n\") == \"8\""
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 10\\n6\\n3 5\\n11\") == \"5\"\nassert solution(\"3 5\\n11\") == \"8\""
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 10\\n6\\n11\\n3 5\\n11\") == \"5\"\nassert solution(\"10 10\\n10\\n11\\n3 5\\n11\") == \"8\"\n"
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 10\\n6\") == \"5\"\nassert solution(\"3 5\\n11\") == \"8\""
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"5\""
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"Test case failed\""
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), \"Test cases do not match.\""
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 10\\n6\\n\") == \"5\"\nassert solution(\"3 5\\n11\\n\") == \"8\""
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 2\\n1 2 1\\n3 2 1\\n\") == \"2\\n\"\nassert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\\n\") == \"3\\n\""
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 2\\n1 2 1\\n3 2 1\") == \"2\"\nassert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\") == \"3\""
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 2\\n1 2 1\\n3 2 1') == '2\\n'\nassert solution('2 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1') == '3\\n'\nassert solution('2 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 2\\n1 2 1\\n3 2 1') == '2\\n'"
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, \"Test case failed. Expected output: {}, Actual output: {}\".format(output, solution(input()))"
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"2\\n\""
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed: {solution(input())}!= {expected_output}\"\n"
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\").read()) == \"2\""
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 2\\n1 2 1\\n3 2 1\") == \"2\"\nassert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\") == \"3\""
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 2\\n1 2 1\\n3 2 1\") == \"2\\n\"\nassert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 2\\n1 2 1\\n3 2 1\") == \"3\\n\""
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    4 5 3\n    1 2 3\n    0 1 1\n    0 3 1\n    0 2 2\n    1 2 1\n    3 2 1\n    \"\"\"\n) == \"2\\n\"\n\nassert solution(\n    \"\"\"\n    4 5 3\n    1 2 3\n    0 1 1\n    0 3 1\n    0 2 1\n    1 2 1\n    3 2 1\n    \"\"\"\n) == \"3\\n\""
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    '''4 3\n10 20 30\n5 5 10\n2 20\n1 30\n1 32\n3 120''') == '3'\n\nassert solution(\n    '''3 1\n10\n10\n1 10\n1 10\n1 10''') == '3'"
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"3\\n\", \"Expected output: 3\\n, but got: {}\".format(solution())"
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Testcase {i+1} failed. Expected output: {expected_output}, Received output: {solution(input())}\"\nfor i, (input, expected_output) in enumerate(zip(test_cases, expected_outputs)):\n    assert solution(input) == expected_output, f\"Testcase {i+1} failed. Expected output: {expected_output}, Received output: {solution(input)}\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"3\", \"Test case failed\" # Here's the solution\n"
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"4 3\n10 20 30\n5 5 10\n2 20\n1 30\n1 32\n3 120\"\"\"\n) == \"3\\n\"\n\nassert solution(\n    \"\"\"3 1\n10\n10\n1 10\n1 10\n1 10\"\"\"\n) == \"3\\n\""
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 3\\n10 20 30\\n5 5 10\\n2 20\\n1 30\\n1 32\\n3 120\\n') == '3\\n'\nassert solution('3 1\\n10\\n10\\n1 10\\n1 10\\n1 10\\n') == '3\\n'"
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(str(4) + '\\n' + str(3) + '\\n' + str(10) + '\\n' + str(5) + '\\n' + str(5) + '\\n' + str(10) + '\\n' + str(2) + '\\n' + str(1) + '\\n' + str(1) + '\\n' + str(3) + '\\n' + str(120)) == '3', \"Test Case 1 failed\"\nassert solution(str(3) + '\\n' + str(1) + '\\n' + str(10) + '\\n' + str(10) + '\\n' + str(10) + '\\n' + str(1) + '\\n' + str(1) + '\\n' + str(10) + '\\n' + str(120)) == '3', \"Test Case 2 failed\"\n"
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '3', 'Expected output 3, got {}'.format(solution())"
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n\") == \"1\\n\"\nassert solution(\"3\\n\") == \"5\\n\""
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n\") == \"1\\n\"\nassert solution(\"3\\n\") == \"5\\n\""
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=input()) == output, f\"Test failed for input {stdin} and output {output}\""
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(2) == 1\nassert solution(3) == 5\n\nfrom collections import defaultdict"
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(4) == \"1\\n\", \"4\"\nassert solution(5) == \"5\\n\", \"5\"\nassert solution(6) == \"12\\n\", \"12\"\nassert solution(7) == \"34\\n\", \"34\"\nassert solution(10) == \"35\\n\", \"35\""
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == \"1\\n\", \"Input 1 failed.\"\nassert solution(sample_input_2) == \"5\\n\", \"Input 2 failed.\""
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n3\\n\") == \"1\\n\", \"Mirko wins if Slavko can't find a partition for his set.\"\nassert solution(\"3\\n\") == \"5\\n\", \"Output the number modulo 1000000000.\"\n"
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test case {case+1} failed: expected {expected_output}, got {solution(input())}\"\nprint(\"Test case passed\")"
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == expected, f\"Test failed. Expected {expected}, got {solution()}\""
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 5\nprint(\"All tests passed!\")"
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\""
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 1\\n0 11 9\\n1 0 10\\n0 0 0') == 2\nassert solution('4 3\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0') == -1\nassert solution('') == -1\nassert solution('3 2\\n0 0 1 2\\n0 2 1 0\\n0 0 0 0') == -1\nassert solution('3 3\\n0 0 1 2\\n0 2 1 0\\n0 0 0 0') == 2\nassert solution('10 4\\n0 2 1 0\\n0 0 3 0\\n0 0 2 0\\n0 1 0 0\\n0 0 0 0\\n1 0 0 0') == 7\nassert solution('10 5\\n0 2 1 0\\n0 0 3 0\\n0 0 2 0\\n0 1 0 0\\n0 0 0 0\\n1 0 0 0\\n0 0 0 1') == 8\nassert solution('10 7\\n0 2 1 0\\n0 0 3 0\\n0 0 2 0\\n0 1 0 0\\n0 0 0 0\\n1 0 0 0\\n0 0 0 1\\n0 0 0 1\\n0 0 0 0') == 11\n"
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '2\\n', 'Expected output: 2\\nActual output:'+ str(solution())\n"
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1\\n0 11 9\\n1 0 10\\n0 0 0\") == \"2\"\nassert solution(\"4 3\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0\") == \"-1\""
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2\\n\"\nassert solution(stdin) == \"2\\n\"\nassert solution(stdin) == \"2\\n\"\nassert solution(stdin) == \"2\\n\"\nassert solution(stdin) == \"2\\n\"\nassert solution(stdin) == \"2\\n\"\nassert solution(stdin) == \"-1\\n\"\n"
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"2\\n\"\nassert solution(open(\"example_1.txt\", \"r\")) == \"2\\n\"\nassert solution(open(\"example_2.txt\", \"r\")) == \"-1\\n\""
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 2"
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1\\n0 11 9\\n1 0 10\\n0 0 0\\n\") == \"2\"\nassert solution(\"4 3\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0\\n\") == \"-1\""
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1\\n0 11 9\\n1 0 10\\n0 0 0\") == 2\nassert solution(\"4 3\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0\") == -1"
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 1\\n0 11 9\\n1 0 10\\n0 0 0\\n4 3\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0') == 2\nassert solution('4 3\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0\\n5 4') == -1"
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n4 5 0 3\n0 1 10\n1 2 1\n1 3 1\n0 2 1\n2 3 10\n''') == '''\n4 3 5\n0 1 2\n0 2 1\n1 2 1\n1 3 1\n2 3 2\n'''\n\nassert solution('''\n2 1 0 1\n0 1 100000\n''') == '''\n2 100000 1\n0 1 100000\n'''"
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10\\n\") == \"4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\\n\"\nassert solution(\"0 1 100000\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10\\n\") == \"2 100000 1\\n0 1 100000\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\\n\""
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10') == '4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\\n'"
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10') == '4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2'\nassert solution('2 1 0 1\\n0 1 100000') == '2 100000 1\\n0 1 100000'"
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10\\n\") == \"4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\\n\"\nassert solution(\"2 1 0 1\\n0 1 100000\\n\") == \"2 100000 1\\n0 1 100000\\n\""
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10\") == \"4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\"\nassert solution(\"2 1 0 1\\n0 1 100000\") == \"2 100000 1\\n0 1 100000\""
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2"
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10') == '4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\\n'\nassert solution('2 1 0 1\\n0 1 100000') == '2 100000 1\\n0 1 100000\\n'"
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '''4 3 5\n0 1 2\n0 2 1\n1 2 1\n1 3 1\n2 3 2'''"
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\nSMS\\nMMS\\n2 3\\nS.M\\nM..\") == \"3 5\\n2 0\\n\"\nassert solution(\"2 3\\nS.M\\nM..\") == \"2 0\\n\"\nassert solution(\"2 3\\nS.M\\n..M\") == \"2 0\\n\"\nassert solution(\"2 3\\nS.M\\n..M.\") == \"2 0\\n\"\nassert solution(\"2 3\\nS.M\\n....\") == \"2 0\\n\""
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\nSMS\\nMMS\\n\") == \"3 5\\n\"\nassert solution(\"2 3\\nS.M\\nM..\\n\") == \"2 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == \"3 5\", \"Incorrect solution\"\nassert solution(sample_input2) == \"2 0\", \"Incorrect solution\""
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(solution_input) == expected_output, f\"The solution should return {expected_output}, but it returns {solution(solution_input)}\""
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Solution is not correct.\\nExpected: {expected}\\nGot: {solution(input())}\""
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(r\"\"\"\n2 3\nSMS\nMMS\n\"\"\") == \"3 5\\n2 0\"\n\nassert solution(r\"\"\"\n2 3\nS.M\nM..\n\"\"\") == \"2 0\""
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\nSMS\\nMMS\\n\") == \"3 5\\n\"\nassert solution(\"2 3\\nS.M\\nM..\\n\") == \"2 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 3\\nSMS\\nMMS\\n') == '3 5\\n'\nassert solution('2 3\\nS.M\\nM..\\n') == '2 0\\n'"
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('13\\n0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a\\n') == '2\\n3 c\\n6 c\\n'\nassert solution('6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n') == '1\\n6 b\\n'\nassert solution('6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n') == '1\\n6 b\\n'"
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n6\n0 B\n1 B\n1 T a\n2 E a\n2 S\n5 T a\n''') == '''\n1\n6 b\n'''\nassert solution('''\n13\n0 B\n1 B\n2 E a\n2 E b\n2 S\n5 G a\n5 T a\n5 E a\n5 E b\n1 S\n10 E a\n10 G b\n1 T a\n''') == '''\n2\n3 c\n6 c\n'''\nassert solution('''\n6\n0 B\n1 B\n1 T a\n2 E a\n2 S\n5 T a\n''') == '''\n1\n6 b\n'''"
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"13\\n0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a\\n\") == 2\nassert solution(\"6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n\") == 1\nassert solution(\"6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n\") == 1"
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"3\"\nassert solution(6) == \"2\"\nassert solution(13) == \"2\""
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for input {input()}.\""
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('13\\n0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a') == '2\\n3 c\\n6 c\\n'\n\nassert solution('6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n') == '1\\n6 b\\ndef solution(stdin: str) -> str:\n    pass\\n'\n\nassert solution('6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n1 S\\n10 E a\\n10 G b\\n1 T a') == '1\\n6 b\\ndef solution(stdin: str) -> str:\n    pass\\n'\n\nassert solution('13\\n0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a') == '2\\n3 c\\n6 c\\n'"
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('13\\n0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a') == '2\\n3 c\\n6 c\\n'\nassert solution('6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a') == '1\\n6 b\\n'\nassert solution('6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n') == ''"
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2\\n3 c\\n6 c\\n\""
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2\\n3 c\\n6 c\\n\""
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2\\n3 c\\n6 c\\n\"\nassert solution(stdin) == \"1\\n6 b\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 5\") == \"40\"\nassert solution(\"288 291\") == \"76\"\n"
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 5\\n288 291') == '40'\nassert solution('10 10\\n20 20') == '60'\n"
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 5\\n288 291\\n\") == \"76\\n\""
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 5\") == \"40\", \"The distance between 1 and 5 is incorrect.\"\nassert solution(\"288 291\") == \"76\", \"The distance between 288 and 291 is incorrect.\""
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 5\") == \"40\\n\", \"The distance between the numbers 1 and 5 is 40.\"\nassert solution(\"288 291\") == \"76\\n\", \"The distance between the numbers 288 and 291 is 76.\""
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 5\") == \"40\"\nassert solution(\"288 291\") == \"76\""
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 5\") == \"40\", \"Solution should return 40\"\nassert solution(\"288 291\") == \"76\", \"Solution should return 76\"\n"
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 5\\n288 291\") == \"76\", \"Expected: 76, actual: \" + solution(\"1 5\\n288 291\")"
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 5\") == \"40\\n\", \"Solution should return 40\"\nassert solution(\"288 291\") == \"76\\n\", \"Solution should return 76\""
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input(1)) == '40', \"Incorrect output\"\nassert solution(sample_input(2)) == '76', \"Incorrect output\""
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"test_cases/sample_input1.txt\", \"r\")) == \"COG\", \"Sample Input 1\"\nassert solution(open(\"test_cases/sample_input2.txt\", \"r\")) == \"0\", \"Sample Input 2\""
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(read_input(\"input.txt\")) == \"COG\"\nassert solution(read_input(\"sample_input_1.txt\")) == \"COG\"\nassert solution(read_input(\"sample_input_2.txt\")) == \"0\"\nassert solution(read_input(\"sample_input_3.txt\")) == \"0\""
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"CAT\") == \"COG\"\nassert solution(\"DOG\") == \"COG\"\nassert solution(\"COT\") == \"COG\""
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 'COG'\nassert solution() == '0'\nassert solution() == '-1'"
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=input()) == [\"COG\", 3]"
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'COG'\nassert solution(stdin) == 3"
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt')) == 'COG\\n3'\nassert solution(open('input.txt', 'r')) == 'COG\\n3'"
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"COG\"\nprint(\"Sample Output 1:\", solution(open(\"input.txt\", \"r\")))\n\nassert solution(open(\"input2.txt\", \"r\")) == 0\nprint(\"Sample Output 2:\", solution(open(\"input2.txt\", \"r\")))"
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('COT') == 'COT'\nassert solution('DOG') == 'COT'\nassert solution('CAT') == 'GAS'"
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 1\") == \"9\"\nassert solution(\"4 3\") == \"6\""
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"10 1\n\"\"\"\n) == 9\n\nassert solution(\n    \"\"\"4 3\n\"\"\"\n) == 6"
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected\n\nfrom typing import List"
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Incorrect output. Received: {solution(input())}, Expected: {expected_output}\""
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('10 1') == '9', \"Solution 1 failed\"\nassert solution('4 3') == '6', \"Solution 2 failed\""
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"9\""
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 1\") == \"9\"\nassert solution(\"4 3\") == \"6\""
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"Output the number of sequences modulo 1000000007.\\n\", \"Solution not correct.\""
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"6\\n\""
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 5\\n/.V.\\n./.V.\\n..#..\\n.V.#.\\n\\.V./') == 3\nassert solution('2 5\\nV...\\nH...V') == -1\nassert solution('5 5\\n#./\\n#.#\\n..#\\n#.\\n./#') == 3\n"
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"3\\n\""
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == expected\n"
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 5\\n/.V.\\n./.V.\\n..#..\\n.V.#. \\\\\\\\.V./\\n') == 3\nassert solution('2 5\\nV...\\nH...V\\n') == -1"
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"3\", \"Expected '3', got '{}' instead.\".format(solution(stdin))\nassert solution(stdin) == \"3\", \"Expected '3', got '{}' instead.\".format(solution(stdin))"
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 5\\n/.V.\\n./.V. \\n..#.. \\n.V.#. \\n\\.V./') == 3\nassert solution('2 5\\nV...\\nH...V') == -1"
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 5\\n/.V.\\n./.V. \\n..#.. \\n.V.#. \\n\\.V./') == 3\nassert solution('2 5\\nV...\\nH...V') == -1"
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"5 5\\n/.V.\\n./.V. \\n..#.. \\n.V.#. \\n\\.V./\\n\") == \"3\""
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 5\\n/.V.\\n./.V.\\n..#..\\n.V.#.\\n\\.V./') == 3\nassert solution('2 5\\nV...\\nH...V') == -1"
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"7\\nn fox jumps ove\\nuick brown f\\ny dog.\\nrown fox\\mps over the l\\nthe lazy dog\\n4\\ncdefghi\\nabcdefg\\n\") == \"The quick brown fox jumps over the lazy dog.\"\nassert solution(stdin=\"4\\ncdefghi\\nabcdefg\\n\") == \"AMBIGUOUS\""
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for input {input()}, expected output {expected_output}\""
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"The quick brown fox jumps over the lazy dog.\", \"Test case 1 failed.\"\nassert solution() == \"AMBIGUOUS\", \"Test case 2 failed.\""
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"AMBIGUOUS\""
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"The quick brown fox jumps over the lazy dog.\""
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"n fox jumps ove\\nuick brown f\\nthe quick b\\ny dog.\\nrown fox\\mps over the l\\nthe lazy dog\\n\") == \"The quick brown fox jumps over the lazy dog.\"\n\nassert solution(\"cdefghi\\nefgijk\\nefgijx\\nabcdefg\\n\") == \"AMBIGUOUS\""
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_data) == expected_output, f\"Solution: {solution(input_data)}, Expected: {expected_output}\""
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected\nfor input_, expected_ in [\n    (r'''7\nn fox jumps ove\nuick brown f\nThe quick b\ny dog.\nrown fox\nmps over the l\nthe lazy dog\n''', r'''The quick brown fox jumps over the lazy dog.'''),\n    (r'''4\ncdefghi\nefghijk\nefghijx\nabcdefg\n''', r'''AMBIGUOUS'''),\n]:\n    assert solution(input_) == expected_"
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"The quick brown fox jumps over the lazy dog.\", \"Incorrect output for sample 1\"\n\nassert solution(input()) == \"AMBIGUOUS\", \"Incorrect output for sample 2\""
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt').read()) == 'The quick brown fox jumps over the lazy dog.'"
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == \"--+0-\"\nassert solution(2) == \"0+-\"\nassert solution(3) == \"--+0-\"\nassert solution(4) == \"0+-\"\nassert solution(5) == \"0+-\""
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin='5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1') == '---\\n-+\\n'\nassert solution(stdin='3 2\\n1 2 1\\n-2 0 2') == '0+-\\n'\nassert solution(stdin='10 100') == 'impossible'"
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n    5 6\n        -3 -2 3\n        -2 -2 4\n        2 3 3\n        -1 1 2\n        0 1 4\n        2 5 1\n        \"\"\") == \"0+-\"\n\nassert solution(\"\"\"\n    3 2\n        -1 2 1\n        -2 0 2\n        \"\"\") == \"0+-\"\n\nassert solution(\"\"\"\n    2 3\n        -1 2 1\n        -2 0 2\n        \"\"\") == \"0+-\"\n\nassert solution(\"\"\"\n    5 1\n        -1 1 1\n        -2 0 2\n        \"\"\") == \"0+-\"\n\nassert solution(\"\"\"\n    5 1\n        -1 1 1\n        -2 0 2\n        \"\"\") == \"0+-\""
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('sample_input.txt', 'r')) == '0+-'"
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1\") == \"0+-\"\nassert solution(\"3 2\\n1 2 1\\n-2 0 2\") == \"0+-\"\nassert solution(\"5 10\\n0 1 0\\n1 1 0\\n1 1 0\\n1 1 0\\n1 1 0\") == \"0+-\""
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1\\n') == 'impossible'\n"
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1\") == \"--+0-\"\nassert solution(\"3 2\\n1 2 1\\n-2 0 2\") == \"0+-\""
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n    5 6\n        -3 -2 3\n        -2 -2 4\n        2 3 3\n        -1 1 2\n    0 1 4\n    2 5 1\n    \"\"\") == \"\"\"\n--+0-\n\"\"\""
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1\") == \"0+-\"\nassert solution(\"3 2\\n1 2 1\\n-2 0 2\") == \"0+-\"\nassert solution(\"1 1 1\\n2 2 2\\n3 3 3\\n4 4 4\\n5 5 5\") == \"impossible\""
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 2\\n1 1\\n1 1\\n1\\n1 1 1') == '1\\n'\nassert solution('2 2\\n1 2\\n2 3\\n2\\n1 2 2\\n2 2 2') == '4\\n4\\n'"
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\n1 1\\n1 1\\n1\\n1 1 1\\n\") == \"1\\n\"\nassert solution(\"2 2\\n1 2\\n2 3\\n2\\n1 2 2\\n2 2 2\\n\") == \"4\\n4\\n\""
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 2\\n1 1\\n1 1\\n1\\n1 1 1\\n2 2\\n1 2\\n2 3\\n2\\n1 2 2\\n2 2 2\\n') == '1\\n'\nassert solution('2 2\\n1 2\\n2 3\\n2\\n1 2 2\\n2 2 2\\n') == '4\\n4\\n'"
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\n1 1\\n1 1\\n1\\n1 1 1\") == \"1\\n\"\nassert solution(\"2 2\\n1 2\\n2 3\\n2\\n1 2 2\\n2 2 2\") == \"4\\n4\\n\""
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\n1 1\\n1 1\\n1\\n1 1 1\") == \"1\\n\"\nassert solution(\"2 2\\n1 2\\n2 3\\n2\\n1 2 2\\n2 2 2\") == \"4\\n4\\n\""
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1\\n\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input) == expected_output, f\"Test case {test_case} failed: Expected output: '{expected_output}', got: '{solution(input)}'.\""
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2\\n1 1\\n1 1\\n1\\n1 1 1\\n1 1 1\") == \"1\\n\""
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 2\\n1 1\\n1 1\\n1\\n1 1 1\\n') == '1\\n'\nassert solution('2 2\\n1 2\\n2 3\\n2\\n1 2 2\\n2 2 2\\n') == '4\\n4\\n'\nassert solution('2 2\\n1 1\\n1 1\\n1\\n1 1 1\\n') == '1\\n'\nassert solution('2 2\\n1 2\\n2 3\\n2\\n1 2 2\\n2 2 2\\n') == '4\\n4\\n'\nassert solution('2 2\\n1 1\\n1 1\\n1\\n1 1 1\\n') == '1\\n'\nassert solution('2 2\\n1 2\\n2 3\\n2\\n1 2 2\\n2 2 2\\n') == '4\\n4\\n'"
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, \"Test case failed.\""
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\"\nprint(\"YES\")"
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\") == \"YES\"\nassert solution(\"3 4\\nWWRR\\nWRRR\\nWRRR\\n\") == \"NO\""
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\") == \"YES\"\nassert solution(\"3 4\\nWWRR\\nWRRR\\nWRRR\") == \"NO\""
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\") == \"YES\"\nassert solution(\"3 4\\nWWRR\\nWRRR\\nWRRR\") == \"NO\""
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\") == \"YES\"\nassert solution(\"3 4\\nWWRR\\nWRRR\\nWRRR\") == \"NO\""
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Test case {test_case} failed: {solution(input())}!= {expected_output}\""
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\\n\") == \"YES\"\nassert solution(\"3 4\\nWWRR\\nWRRR\\nWRRR\\n\") == \"NO\""
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"YES\"\n"
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\\n\") == \"YES\"\nassert solution(\"3 4\\nWWRR\\nWRRR\\nWRRR\\n\") == \"NO\""
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\") == \"YES\"\nassert solution(\"3 4\\nWWRR\\nWRRR\\nWRRR\") == \"NO\""
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 3 5\\n1\\n2\\n3') == '1'\nassert solution('6 3 5\\n1\\n2\\n3\\n3\\n2\\n1') == '3'"
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Expected output: {output}, Received: {solution(input())}\""
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == 1\nassert solution(2) == 2\nassert solution(3) == 3\nassert solution(4) == 3\nassert solution(5) == 4\nassert solution(6) == 4\nassert solution(7) == 5\nassert solution(8) == 5\nassert solution(9) == 6\nassert solution(10) == 6\nassert solution(11) == 7\nassert solution(12) == 7\nassert solution(13) == 8\nassert solution(14) == 8\nassert solution(15) == 9\nassert solution(16) == 9\nassert solution(17) == 10\nassert solution(18) == 10\nassert solution(19) == 11\nassert solution(20) == 11\nassert solution(21) == 12\nassert solution(22) == 12\nassert solution(23) == 13\nassert solution(24) == 13\nassert solution(25) == 14\nassert solution(26) == 14\nassert solution(27) == 15\nassert solution(28) == 15\nassert solution(29) == 16\nassert solution(30) == 16\nassert solution(31) == 17\nassert solution(32) == 17\nassert solution(33) == 18\nassert solution(34) == 18\nassert solution(35) == 19\nassert solution(36) == 19\nassert solution(37) == 20\nassert solution(38) == 20\nassert solution(39) == 21\nassert solution(40) == 21\nassert solution(41) == 22\nassert solution(42) == 22\nassert solution(43) == 23\nassert solution(44) == 23\nassert solution(45) == 24\nassert solution(46) == 24\nassert solution(47) == 25\nassert solution(48) == 25\nassert solution(49) == 26\nassert solution(50) == 26\nassert solution(51) == 27\nassert solution(52) == 27\nassert solution(53) == 28\nassert solution(54) == 28\nassert solution(55) == 29\nassert solution(56) == 29\nassert solution(57) == 30\nassert solution(58) == 30\nassert solution(59) == 31\nassert solution(60) == 31\nassert solution(61) == 32\nassert solution(62) == 32\nassert solution(63) == 33\nassert solution(64) == 33\nassert solution(65) == 34\nassert solution(66) == 34\nassert solution(67) == 35\nassert solution(68) == 35\nassert solution(69) == 36\nassert solution(70) == 36\nassert solution(71) == 37\nassert solution(72) == 37\nassert solution(73) == 38\nassert solution(74) == 38\nassert solution(75) == 39\nassert solution(76) == 39\nassert solution(77) == 40\nassert solution(78) == 40\nassert solution(79) == 41\nassert solution(80) == 41\nassert solution(81) == 42\nassert solution(82) == 42\nassert solution(83) == 43\nassert solution(84) == 43\nassert solution(85) == 44\nassert solution(86) == 44\nassert solution(87) == 45\nassert solution(88) == 45\nassert solution(89) == 46\nassert solution(90) == 46\nassert solution(91) == 47\nassert solution(92) == 47\nassert solution(93) == 48\nassert solution(94) == 48\nassert solution(95) == 49\nassert solution(96)"
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == 1\nassert solution(2) == 2\nassert solution(3) == 3\nassert solution(4) == 4\nassert solution(5) == 6\nassert solution(6) == 6\nassert solution(7) == 6\nassert solution(8) == 6\nassert solution(9) == 6\nassert solution(10) == 6\nassert solution(11) == 6\nassert solution(12) == 6\nassert solution(13) == 6\nassert solution(14) == 6\nassert solution(15) == 6\nassert solution(16) == 6\nassert solution(17) == 6\nassert solution(18) == 6\nassert solution(19) == 6\nassert solution(20) == 6\nassert solution(21) == 6\nassert solution(22) == 6\nassert solution(23) == 6\nassert solution(24) == 6\nassert solution(25) == 6\nassert solution(26) == 6\nassert solution(27) == 6\nassert solution(28) == 6\nassert solution(29) == 6\nassert solution(30) == 6\nassert solution(31) == 6\nassert solution(32) == 6\nassert solution(33) == 6\nassert solution(34) == 6\nassert solution(35) == 6\nassert solution(36) == 6\nassert solution(37) == 6\nassert solution(38) == 6\nassert solution(39) == 6\nassert solution(40) == 6\nassert solution(41) == 6\nassert solution(42) == 6\nassert solution(43) == 6\nassert solution(44) == 6\nassert solution(45) == 6\nassert solution(46) == 6\nassert solution(47) == 6\nassert solution(48) == 6\nassert solution(49) == 6\nassert solution(50) == 6\nassert solution(51) == 6\nassert solution(52) == 6\nassert solution(53) == 6\nassert solution(54) == 6\nassert solution(55) == 6\nassert solution(56) == 6\nassert solution(57) == 6\nassert solution(58) == 6\nassert solution(59) == 6\nassert solution(60) == 6\nassert solution(61) == 6\nassert solution(62) == 6\nassert solution(63) == 6\nassert solution(64) == 6\nassert solution(65) == 6\nassert solution(66) == 6\nassert solution(67) == 6\nassert solution(68) == 6\nassert solution(69) == 6\nassert solution(70) == 6\nassert solution(71) == 6\nassert solution(72) == 6\nassert solution(73) == 6\nassert solution(74) == 6\nassert solution(75) == 6\nassert solution(76) == 6\nassert solution(77) == 6\nassert solution(78) == 6\nassert solution(79) == 6\nassert solution(80) == 6\nassert solution(81) == 6\nassert solution(82) == 6\nassert solution(83) == 6\nassert solution(84) == 6\nassert solution(85) == 6\nassert solution(86) == 6\nassert solution(87) == 6\nassert solution(88) == 6\nassert solution(89) == 6\nassert solution(90) == 6\nassert solution(91) == 6\nassert solution(92) == 6\nassert solution(93) == 6\nassert solution(94) == 6\nassert solution(95) == 6\nassert solution(96) == 6\nassert solution(97) == 6\nassert solution(98) == 6\nassert solution(99) == 6\nassert solution(100) == 6\nassert solution(101) == 6\nassert solution(102) == 6\nassert solution(103) == 6\n"
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    3 3 5\n    1\n    2\n    3\n\"\"\") == \"1\\n\"\n\nassert solution(\n    \"\"\"\n    6 3 5\n    1\n    2\n    3\n    3\n    2\n    1\n\"\"\") == \"3\\n\""
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input1) == \"1\\n\"\nassert solution(sample_input2) == \"3\\n\""
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == output, f\"Expected {output}, got {solution(stdin)}\"\n"
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 3 5 1 2 3\\n1\\n2\\n3\\n6 3 5 1 2 3 3 2 1\\n1\\n2\\n3\\n') == 1\nassert solution('6 3 5 1 2 3 3 2 1\\n1\\n2\\n3\\n') == 3"
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3 5\\n1\\n2\\n3\") == \"1\"\nassert solution(\"6 3 5\\n1\\n2\\n3\\n3\\n2\\n1\") == \"3\""
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    '''\n    3\n    0 2\n    1 2\n    3 3\n    '''\n) == '''\n    12 3\n    '''\n\nassert solution(\n    '''\n    5\n    0 2\n    1 3\n    3 3\n    7 5\n    9 5\n    '''\n) == '''\n    12 3\n    '''"
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('10\\n1 2\\n2 3\\n3 3\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10') == '3 2\\n12 3\\n', \"Incorrect output\"\n\nsolution('10\\n1 2\\n2 3\\n3 3\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10')"
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n0 2\\n1 2\\n3 3\\n') == '3 2\\n'\nassert solution('5\\n0 2\\n1 3\\n3 3\\n7 5\\n9 5\\n') == '12 3\\n'"
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n0 2\\n1 2\\n3 3\\n\") == \"3 2\\n\"\nassert solution(\"5\\n0 2\\n1 3\\n3 3\\n7 5\\n9 5\\n\") == \"12 3\\n\""
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n0 2\\n1 2\\n3 3\\n5\\n0 2\\n1 3\\n3 3\\n7 5\\n9 5\") == \"3 2\\n12 3\"\nassert solution(\"5\\n0 2\\n1 3\\n3 3\\n7 5\\n9 5\") == \"12 3\"\n"
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt').read()) == '3 2\\n12 3'\nassert solution(open('test_input.txt').read()) == '3 2\\n12 3'"
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r')) == '3 2\\n12 3'\n"
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('example.txt', 'r')) == \"3 2\\n12 3\""
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"3 2\\n12 3\""
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1\\n0\\n0\\n3\\n\") == \"100\\n000\\n01\\n01\\n01\\n\"\nassert solution(\"3\\n0\\n1 1\\n1\\n1 1\\n1\\n1\\n\") == \"0000\\n1001\\n0010\\n101\\n010\\n000\\n100\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\n1\\n0\\n0\\n3\\n') == '100\\n000\\n01\\n01\\n01\\n'\nassert solution('3\\n0\\n1 1\\n1\\n1 1\\n1\\n1\\n') == '0000\\n1001\\n0010\\n101\\n010\\n000\\n100\\n'\n"
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1\\n0\\n0\\n3\\n\") == \"100\\n000\\n01\\n01\\n01\\n\"\nassert solution(\"3\\n0\\n1 1\\n1\\n1 1\\n1\\n1\\n\") == \"0000\\n1001\\n0010\\n101\\n010\\n000\\n100\\n\""
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n1\\n0\\n0\\n3\\n') == '100\\n000\\n01\\n01\\n01\\n'\nassert solution('3\\n0\\n1 1\\n1\\n1 1\\n1\\n1\\n') == '0000\\n1001\\n0010\\n101\\n010\\n000\\n100\\n'\n"
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('sample_input_1.txt', 'r').read()) == \"100\\n000\\n01\\n01\\n01\\n\"\nassert solution(open('sample_input_2.txt', 'r').read()) == \"0000\\n1001\\n0010\\n101\\n010\\n000\\n100\\n\""
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"100\\n000\\n01\\n01\\n01\""
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2"
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1\\n0\\n0\\n3\\n\") == \"100\\n000\\n01\\n01\\n01\\n\"\nassert solution(\"3\\n0\\n1 1\\n1\\n1 1\\n1\\n1\\n\") == \"0000\\n1001\\n0010\\n101\\n010\\n000\\n100\\n\""
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1\\n0\\n0\\n3\") == \"100\\n000\\n01\\n01\\n01\"\nassert solution(\"3\\n0\\n1 1\\n1\\n1 1\\n1\\n1\\n\") == \"0000\\n1001\\n0010\\n101\\n010\\n000\\n100\""
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1\\n0\\n0\\n3\\n\") == \"100\\n000\\n01\\n01\\n01\\n\"\nassert solution(\"3\\n0\\n1 1\\n1\\n1 1\\n1\\n1\\n\") == \"0000\\n1001\\n0010\\n101\\n010\\n000\\n100\\n\""
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == '''\n"
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\\n1 2\\n2 3\\n2 3\\n\") == \"2\\n\"\nassert solution(\"4 1\\n1 3\\n4 6\\n7 8\\n2 5\\n\") == \"3\\n\""
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\\n1 2\\n2 3\\n2 3\\n\") == \"2\\n\"\nassert solution(\"4 1\\n1 3\\n4 6\\n7 8\\n2 5\\n\") == \"3\\n\""
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n3 1\n1 2\n2 3\n2 3\n''') == '2\\n'\n\nassert solution('''\n4 1\n1 3\n4 6\n7 8\n2 5\n''') == '3\\n'"
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '2\\n' # Test Case 1\n\nassert solution(input()) == '3\\n' # Test Case 2\n\nassert solution(input()) == '3\\n' # Test Case 3\n\nassert solution(input()) == '2\\n' # Test Case 4\n\nassert solution(input()) == '3\\n' # Test Case 5"
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    3 1\n    1 2\n    2 3\n    2 3\n    \"\"\"\n) == \"2\\n\"\n\nassert solution(\n    \"\"\"\n    4 1\n    1 3\n    4 6\n    7 8\n    2 5\n    \"\"\"\n) == \"3\\n\""
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1\\n1 2\\n2 3\\n2 3\\n\") == \"2\\n\"\nassert solution(\"4 1\\n1 3\\n4 6\\n7 8\\n2 5\\n\") == \"3\\n\""
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == sample_output_1, \"Ada, Bertrand and Charles often argue over which TV shows to watch, and to avoid some of their fights they have finally decided to buy a video tape recorder. This fabulous, new device can record $k$ different TV shows simultaneously, and whenever a show recorded in one the machine\u2019s $k$ slots ends, the machine is immediately ready to record another show in the same slot.\n\nThe three friends wonder how many TV shows they can record during one day. They provide you with the TV guide for today's shows, and tell you the number of shows the machine can record simultaneously. How many shows can they record, using their recording machine? Count only shows that are recorded in their entirety.\n\n-----Input-----\nThe first line of input contains two integers $n,k$ ($1\\leq k < n \\leq 100\\ 000$). Then follow $n$ lines, each containing two integers $x_ i,y_ i$, meaning that show $i$ starts at time $x_ i$ and finishes by time $y_ i$. This means that two shows $i$ and $j$, where $y_ i = x_ j$, can be recorded, without conflict, in the same recording slot. You may assume that $0 \\leq x_{i} < y_{i} \\leq 1\\ 000\\ 000\\ 000$.\n\n-----Output-----\nThe output should contain exactly one line with a single integer: the maximum number of full shows from the TV guide that can be recorded with the tape recorder.\n\n-----Examples-----\nSample Input 1:\n3 1\n1 2\n2 3\n2 3\nSample Output 1:\n2\n\nSample Input 2:\n4 1\n1 3\n4 6\n7 8\n2 5\nSample Output 2:\n3"
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1\\n1 2\\n2 3\\n2 3\") == \"2\"\nassert solution(\"4 1\\n1 3\\n4 6\\n7 8\\n2 5\") == \"3\""
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 6 500\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\") == \"90.00000000\\n\"\nassert solution(\"5 6 450\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\") == \"126.86989765\\n\""
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == expected1\nassert solution(sample_input2) == expected2"
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"Impossible\\n\", \"Test Failed\"\n"
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == '90.00000000'\nassert solution(sample_input2) == '126.86989765'"
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '90.00000000', 'Test 1 failed'\nassert solution(stdin) == '126.86989765', 'Test 2 failed'"
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"126.86989765\""
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"90.00000000\\n126.86989765\\n\""
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"90.00000000\\n\"\n"
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n5 6 500\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\n''') == '90.00000000'\n\nassert solution('''\n5 6 450\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\n''') == '126.86989765'"
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 'Impossible' # Passed"
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"37\") == \"4\\n8 29\\n9 28\\n11 26\\n15 22\"\nassert solution(\"30014\") == \"7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225\""
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(37) == '4\\n8 29\\n9 28\\n11 26\\n15 22'\nassert solution(30014) == '7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225'\n"
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(37) == '4\\n8 29\\n9 28\\n11 26\\n15 22\\n'\nassert solution(30014) == '7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225\\n'\n"
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"37\") == \"4\\n8 29\\n9 28\\n11 26\\n15 22\"\nassert solution(\"30014\") == \"7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225\"\n"
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('37') == '4\\n8 29\\n9 28\\n11 26\\n15 22'\nassert solution('30014') == '7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225'"
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('37') == '4\\n8 29\\n9 28\\n11 26\\n15 22'\nassert solution('30014') == '7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225'\nassert solution('12345') == '1\\n1 1'\nassert solution('999999') == '1\\n1000000'\nassert solution('1234567890123456789012345678901234567890') == '1\\n1234567890123456789012345678901234567890'\nassert solution('1234567890123456789012345678901234567891') == '1\\n1234567890123456789012345678901234567890'"
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(37) == \"4\\n8 29\\n9 28\\n11 26\\n15 22\"\nassert solution(30014) == \"7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225\"\n\nfrom typing import List"
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(37) == \"4\\n8 29\\n9 28\\n11 26\\n15 22\"\nassert solution(30014) == \"7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225\""
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('37') == '4\\n8 29\\n9 28\\n11 26\\n15 22'\nassert solution('30014') == '7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225'"
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"37\") == \"4\\n8 29\\n9 28\\n11 26\\n15 22\"\nassert solution(\"30014\") == \"7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225\""
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3 1\") == \"3.5\"\nassert solution(\"3 3 2\") == \"4.9\""
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3 1\") == \"3.5\"\nassert solution(\"3 3 2\") == \"4.9\""
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed for input {stdin}.\""
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"3.5\", \"Please complete the solution\"\n"
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3 1\") == \"3.5\"\nassert solution(\"3 3 2\") == \"4.9\""
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == 3.5\nassert solution(open(\"input2.txt\", \"r\").read()) == 4.9"
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"3.5\", \"Expected Output: 3.5\""
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"3.5\""
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"3.5\\n\", \"Expected output: '3.5'\\nGot: '{}'\\n\".format(solution(stdin))"
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"3.5\", \"Sample Output 1: Expected 3.5, got: \" + solution(stdin)"
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 5 1 5\") == \"19\\n\"\nassert solution(\"12 12 1 12\") == \"4\\n\""
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 5 1 5\") == 19\nassert solution(\"12 12 1 12\") == 4"
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    '''\n    1 5 1 5\n    '''\n) == '19'\n\nassert solution(\n    '''\n    12 12 1 12\n    '''\n) == '4'"
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"19\"\nassert solution() == \"4\""
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"1 5 1 5\") == 19\nassert solution(stdin=\"12 12 1 12\") == 4"
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 5 1 5\") == 19\nassert solution(\"12 12 1 12\") == 4"
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 5 1 5\\n') == '19\\n'\nassert solution('12 12 1 12\\n') == '4\\n'"
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 5 1 5\") == \"19\"\nassert solution(\"12 12 1 12\") == \"4\"\n\nfrom typing import List"
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 5 1 5\") == \"19\"\nassert solution(\"12 12 1 12\") == \"4\""
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 5\") == \"4\\n\", \"Sample Input 1\"\nassert solution(\"1 12\") == \"4\\n\", \"Sample Input 2\""
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 5\") == \"4\"\nassert solution(\"1 12\") == \"4\""
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 5\") == \"4\\n\", \"Input 1 is incorrect.\"\nassert solution(\"1 12\") == \"4\\n\", \"Input 2 is incorrect.\""
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 5\") == \"4\\n\", \"Expected output: 4\"\nassert solution(\"1 12\") == \"4\\n\", \"Expected output: 4\""
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 5\") == \"4\\n\"\nassert solution(\"1 12\") == \"4\\n\""
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 5') == '4'\nassert solution('1 12') == '4'"
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 5\") == \"4\\n\"\nassert solution(\"1 12\") == \"4\\n\""
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Test failed for input {input()}, expected output {output}, got {solution(input())}\""
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Solution failed for input {input()}:\\nActual: {solution(input())}\\nExpected: {expected}\""
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 5\") == \"4\\n\"\nassert solution(\"1 12\") == \"4\\n\""
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"car\") == \"1\"\nassert solution(\"cocar\") == \"2\""
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"car\") == 1\nassert solution(\"cocar\") == 2\n"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"cocar\") == 2\n"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('car') == '1'\nassert solution('cocaror') == '2'"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('car') == 1\nassert solution('cocar') == 2\n\nfrom collections import Counter"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"car\") == \"1\"\nassert solution(\"cocar\") == \"2\"\n\nfrom math import mod"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"car\") == \"1\"\nassert solution(\"cocar\") == \"2\""
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin='car') == 1\nassert solution(stdin='cocar') == 2"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"car\") == 1\nassert solution(\"cocaror\") == 2"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"car\") == 1\nassert solution(\"cocar\") == 2"
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\"\n"
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2"
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"0 2 0 1\\n4\\n0 2 0 1\\n5\\n1000000 1 1 1 1\\n\") == \"8\\n\"\nassert solution(stdin=\"0 2 0 1\\n4\\n0 2 0 1\\n5\\n1000000 1 1 1 1\\n\") == \"0\\n\""
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n0 2 0 1\\n5\\n1000000 1 1 1 1\\n\") == \"8\\n\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"8\", \"Test case 1 failed\"\n\nsolution(stdin) == \"0\"\n"
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Test case failed.\"\n"
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"8\"\n\nsolution(input())"
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(None) == \"Invalid Input\"\nassert solution(\"4\\n0 2 0 1\") == \"8\"\nassert solution(\"5\\n1000000 1 1 1 1\") == \"0\"\n\nfrom typing import List"
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '8', \"Your solution is incorrect. Please see the provided examples.\""
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n0 2 0 1\") == \"8\\n\"\nassert solution(\"5\\n1000000 1 1 1 1\") == \"0\\n\""
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Expected output: {output}, Received: {solution(input())}\"\nfor k in [2, 3]:\n    for n in range(1, 1e6):\n        input_str = str(k) + str(n)\n        output_str = solution(input_str)\n        if output_str!= \"-1\":\n            assert output_str == str(k) + str(n), f\"Expected output: {str(k) + str(n)}, Received: {output_str}\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 650\") == \"zyz\"\nassert solution(\"2 651\") == \"-1\"\n\nfrom typing import List"
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Error: The solution is incorrect. Expected: '{output}'. Got: '{solution(input())}'\""
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 650\\n\") == \"zyz\"\nassert solution(\"2 651\\n\") == \"-1\""
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 650\") == \"zyz\", \"Sample Input 1 failed\"\nassert solution(\"2 651\") == \"-1\", \"Sample Input 2 failed\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r')) == 'zyz'\nassert solution(open('input.txt', 'r')) == 'def solution(stdin: str) -> str:\\n    pass\\n\\n'"
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 650\") == \"zyz\"\nassert solution(\"2 651\") == \"-1\""
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'zyz'\n\nassert solution(stdin) == '-1'"
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"example_input.txt\", \"r\")) == \"zyz\""
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"zyz\"\nassert solution(stdin) == \"zyz\""
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"4\\n\"\nassert solution() == \"8\\n\""
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n0 10 0\\n10 0 1\\n12 8 1\\n5 5 0\\n11 2 1\\n11 3 0\") == \"4\\n\"\nassert solution(\"10\\n6 1 1\\n0 2 0\\n2 1 1\\n6 1 1\\n8 2 0\\n4 4 0\\n4 0 0\\n2 3 1\\n6 1 0\\n6 3 1\") == \"8\\n\""
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Test failed: expected {expected_output}, but got {solution(input())}\""
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n0 10 0\\n10 0 1\\n12 8 1\\n5 5 0\\n11 2 1\\n11 3 0\\n\") == \"4\\n\"\nassert solution(\"10\\n6 1 1\\n0 2 0\\n2 1 1\\n6 1 1\\n8 2 0\\n4 4 0\\n4 0 0\\n2 3 1\\n6 1 0\\n6 3 1\\n\") == \"8\\n\""
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n0 10 0\\n10 0 1\\n12 8 1\\n5 5 0\\n11 2 1\\n11 3 0\") == \"4\\n\", \"Expected output: 4\\nGot: \" + solution(\"6\\n0 10 0\\n10 0 1\\n12 8 1\\n5 5 0\\n11 2 1\\n11 3 0\")"
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"4\""
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"4\\n\", \"Sample Output 1\"\nassert solution(stdin) == \"8\\n\", \"Sample Output 2\"\nassert solution(stdin) == \"4\\n\", \"Sample Output 3\"\nassert solution(stdin) == \"8\\n\", \"Sample Output 4\"\nassert solution(stdin) == \"4\\n\", \"Sample Output 5\"\nassert solution(stdin) == \"8\\n\", \"Sample Output 6\"\nassert solution(stdin) == \"4\\n\", \"Sample Output 7\"\nassert solution(stdin) == \"8\\n\", \"Sample Output 8\"\nassert solution(stdin) == \"4\\n\", \"Sample Output 9\"\nassert solution(stdin) == \"8\\n\", \"Sample Output 10\""
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n0 10 0\\n10 0 1\\n12 8 1\\n5 5 0\\n11 2 1\\n11 3 0\") == \"4\", \"Test 1 failed\"\nassert solution(\"10\\n6 1 1\\n0 2 0\\n2 1 1\\n6 1 1\\n8 2 0\\n4 4 0\\n4 0 0\\n2 3 1\\n6 1 0\\n6 3 1\") == \"8\", \"Test 2 failed\""
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2\\n\"\nassert solution(stdin) == \"8\\n\""
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n10 0 1\\n12 8 1\\n5 5 0\\n11 2 1\\n11 3 0\") == \"4\\n\", \"Test Case 1 Failed\"\nassert solution(\"2\\n6 1 1\\n0 2 0\\n2 1 1\\n6 1 1\\n8 2 0\\n4 4 0\\n4 0 0\\n2 3 1\\n6 1 0\\n6 3 1\") == \"8\\n\", \"Test Case 2 Failed\""
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 4 3\\n3 4 5 7\\n1 2 10\") == \"0\\n\"\nassert solution(\"3 5 2\\n1 4 7 9 11\\n2 3\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n    2 4 3\n    3 4 5 7\n    1 2 10\n    ''') == 0\n\nassert solution('''\n    3 5 2\n    1 4 7 9 11\n    2 3\n    ''') == 2\n\nassert solution('''\n    2 2 1\n    1 1 1\n    1 1 1\n    1 1 1\n    ''') == 1\n\nassert solution('''\n    2 2 1\n    1 1 1\n    1 1 1\n    2 2\n    ''') == 1\n\nassert solution('''\n    2 2 1\n    1 1 1\n    2 2 2\n    2 2 2\n    ''') == 2\n\nassert solution('''\n    2 2 1\n    1 1 1\n    2 2 2\n    2 2 1\n    ''') == -1"
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == 0\nassert solution(sample_input_2) == 2"
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 4 3\\n3 4 5 7\\n1 2 10\\n\") == \"0\\n\"\nassert solution(\"3 5 2\\n1 4 7 9 11\\n2 3\\n\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 0\n\nassert solution == 2"
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 4 3\\n3 4 5 7\\n1 2 10\") == 0\nassert solution(\"3 5 2\\n1 4 7 9 11\\n2 3\") == 2"
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input1) == expected_output1\nassert solution(sample_input2) == expected_output2\n\nfrom typing import List"
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected"
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Expected {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 4 3\\n3 4 5 7\\n1 2 10') == 0\nassert solution('3 5 2\\n1 4 7 9 11\\n2 3') == 2\nassert solution('4 5 7\\n1 8 2 3 4\\n9 5 6 7') == 0\n"
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Test failed. Expected output: {output()}, but got {solution(input())}.\""
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 3\\n3 2\\n') == '1\\n-2 -1\\n'\nassert solution('1 2\\n3 4\\n') == '3\\n-1 1\\n2 1\\n0 -2\\n'\n"
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"\"\"1\n-2 -1\n\"\"\"\n"
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == sample_output_1, \"Incorrect output 1\"\nassert solution(sample_input_2) == sample_output_2, \"Incorrect output 2\""
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '1\\n-2 -1\\n3\\n-1 1\\n2 1\\n0 -2'"
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n3 2\\n\") == \"1\\n-2 -1\\n\"\nassert solution(\"1 2\\n3 4\\n\") == \"3\\n-1 1\\n2 1\\n0 -2\\n\""
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n3 2\\nSample Input 1:\\n1\\n2\\nSample Output 1:\\n1\\n-2 -1\\n\\nSample Input 2:\\n1 2\\n3 4\\nSample Output 2:\\n3\\n-1 1\\n2 1\\n0 -2\") == \"1\\n-2 -1\\n2 1\\n0 -2\"\n"
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n3 2\") == \"1\\n-2 -1\"\nassert solution(\"1 2\\n3 4\") == \"3\\n-1 1\\n2 1\\n0 -2\""
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"For the given input, expected output '{expected}', but got '{solution(stdin)}'.\""
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\nIVO\\nJASNA\\nJOSIPA\") == 4, \"Solution for sample input 1 is incorrect.\"\nassert solution(\"5\\nMARICA\\nMARTA\\nMATO\\nMARA\\nMARTINA\") == 24, \"Solution for sample input 2 is incorrect.\""
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\nMARICA\\nMARTA\\nMATO\\nMARA\\nMARTINA\") == \"24\" # Expected output: 24"
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"4\\n\""
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"4\\n\", \"Test case 1 failed\"\nassert solution(stdin) == \"24\\n\", \"Test case 2 failed\""
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\") == \"4\\n\"  # Output: \"4\\n\"\nassert solution(\"5\") == \"24\\n\"  # Output: \"24\\n\"\n"
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\nIVO\\nJASNA\\nJOSIPA\\n\") == \"4\\n\"\nassert solution(\"5\\nMARICA\\nMARTA\\nMATO\\nMARA\\nMARTINA\\n\") == \"24\\n\""
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2"
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\nIVO\\nJASNA\\nJOSIPA\") == 4\nassert solution(\"5\\nMARICA\\nMARTA\\nMATO\\nMARA\\nMARTINA\") == 24"
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\nIVO\\nJASNA\\nJOSIPA\\n\") == \"4\\n\"\nassert solution(\"5\\nMARICA\\nMARTA\\nMATO\\nMARA\\nMARTINA\\n\") == \"24\\n\""
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"3\n1 2 3 1\n2 3 4 1\n3 4 5 1\"\"\") == \"3\\n\"\nassert solution(\"\"\"3\n2 2 3 8\n3 1 5 6\n1 9 4 7\"\"\") == \"39\\n\""
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\", \"Test 1 failed\"\nassert solution(\"3\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1\") == \"3\", \"Test 1 failed\"\nassert solution(\"3\\n2 2 3 8\\n3 1 5 6\\n1 9 4 7\") == \"39\", \"Test 2 failed\""
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1\") == 3, \"Expected output 3\"\nassert solution(\"3\\n2 2 3 8\\n3 1 5 6\\n1 9 4 7\") == 39, \"Expected output 39\""
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1\") == 3\nassert solution(\"3\\n2 2 3 8\\n3 1 5 6\\n1 9 4 7\") == 39\n"
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1\") == \"3\\n\"\nassert solution(\"3\\n2 2 3 8\\n3 1 5 6\\n1 9 4 7\") == \"39\\n\""
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input1) == \"3\"\nassert solution(sample_input2) == \"39\""
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1\") == \"3\\n\", \"Test case 1 failed\"\nassert solution(\"3\\n2 2 3 8\\n3 1 5 6\\n1 9 4 7\") == \"39\\n\", \"Test case 2 failed\""
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n\") == \"\"\nassert solution(\"2\\n\") == \"\"\nassert solution(\"3\\n\") == \"\""
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1\\n\") == \"3\\n\", \"Testcase 1 failed\"\nassert solution(\"3\\n2 2 3 8\\n3 1 5 6\\n1 9 4 7\\n\") == \"39\\n\", \"Testcase 2 failed\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1') == '3\\n'\nassert solution('3\\n2 2 3 8\\n3 1 5 6\\n1 9 4 7') == '39\\n'\n"
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n2\n5 8 4 -2 0 0 -3 2 0 0 3\n8 10 4 -1 -1 1 -1 1 1 -1 1\n\"\"\") == 5.2696518641\n\nassert solution(\"\"\"\n1\n8 9 3 -14 -14 14 -14 0 20\n\"\"\") == 9"
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n5 8 4 -2 0 0 -3 2 0 0 3\\n8 10 4 -1 -1 1 -1 1 1 -1 1\") == 5.2696518641\nassert solution(\"1\\n8 9 3 -14 -14 14 -14 0 20\") == 9\n"
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2\n\ninput1 = '''\n2\n5 8 4 -2 0 0 -3 2 0 0 3\n8 10 4 -1 -1 1 -1 1 1 -1 1\n'''\n\ninput2 = '''\n1\n8 9 3 -14 -14 14 -14 0 20\n'''\n\noutput1 = '''\n5.2696518641\n'''\n\noutput2 = '''\n9\n'''"
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n5 8 4 -2 0 0 -3 2 0 0 3\\n8 10 4 -1 -1 1 -1 1 1 -1 1') == '5.2696518641'"
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2\\n5 8 4 -2 0 0 -3 2 0 0 3\\n8 10 4 -1 -1 1 -1 1 1 -1 1') == '5.2696518641'\nassert solution('1\\n8 9 3 -14 -14 14 -14 0 20') == '9'"
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n5 8 4 -2 0 0 -3 2 0 0 3\\n8 10 4 -1 -1 1 -1 1 1 -1 1\") == \"5.2696518641\"\nassert solution(\"1\\n8 9 3 -14 -14 14 -14 0 20\") == \"9\""
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n5 8 4 -2 0 0 -3 2 0 0 3\\n8 10 4 -1 -1 1 -1 1 1 -1 1\") == 5.2696518641\nassert solution(\"1\\n8 9 3 -14 -14 14 -14 0 20\") == 9\n\nfrom typing import List"
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(str(1)) == '9'\nassert solution(str(2)) == '5.2696518641'"
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n8 9 3 -14 -14 14 -14 0 20\") == \"9\"\nassert solution(\"2\\n5 8 4 -2 0 0 -3 2 0 0 3\") == \"5.2696518641\"\n"
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input1) == expected_output1, \"Incorrect output for sample input 1\"\nassert solution(sample_input2) == expected_output2, \"Incorrect output for sample input 2\""
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 1 1\\n2 0 2\\n3 1 1\\n\") == \"1\\n8\\n4\\n\"\nassert solution(\"3\\n4 1 1\\n5 2 3\\n5 0 3\\n\") == \"6\\n4\\n24\\n\""
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 1\nassert solution() == 8\nassert solution() == 4\nassert solution() == -1\nassert solution() == 4\nassert solution() == 24"
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n1 1 1\\n2 0 2\\n3 1 1') == '1\\n8\\n4'\nassert solution('3\\n4 1 1\\n5 2 3\\n5 0 3') == '6\\n4\\n24'"
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(str(input())) == \"1\\n8\\n4\\n\""
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n3\n1 1 1\n2 0 2\n3 1 1\n''') == '''\n1\n8\n4\n'''\n\nassert solution('''\n3\n4 1 1\n5 2 3\n5 0 3\n''') == '''\n6\n4\n24\n'''"
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 1 1\\n2 0 2\\n3 1 1\\n\") == \"1\\n8\\n4\\n\"\nassert solution(\"3\\n4 1 1\\n5 2 3\\n5 0 3\\n\") == \"6\\n4\\n24\\n\"\nassert solution(\"1\\n3\\n1\\n4\\n\") == \"-1\\n\"\nassert solution(\"1\\n10000000\\n2\\n10\\n\") == \"1\\n10000000\\n2\\n10\\n\"\nassert solution(\"1\\n10000000\\n2\\n10\\n\") == \"1\\n10000000\\n2\\n10\\n\""
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1\\n8\\n4\\n-1\\n4\\n24\""
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1\\n8\\n4\""
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"1\""
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3, 2) == 3\nassert solution(6, 6) == 240\n"
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\\n6 6\") == \"3\\n240\"\nassert solution(\"6 6\\n3 2\") == \"240\""
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"3\", \"Test 1\""
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3, 2) == 3\nassert solution(6, 6) == 240\n"
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3, 2) == 3, \"The correct output is 3.\"\nassert solution(6, 6) == 240, \"The correct output is 240.\""
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, 2) == 3\nassert solution(6, 6) == 240"
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 3, \"The correct output should be 3.\"\nassert solution(6) == 240, \"The correct output should be 240.\""
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3, 2) == 3, \"Expected Output: 3\"\nassert solution(6, 6) == 240, \"Expected Output: 240\""
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\") == \"3\"\nassert solution(\"6 6\") == \"240\""
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3, 2) == 3\nassert solution(6, 6) == 240"
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\", \"Test case 1 failed\"\nassert solution(\"A+A=A\") == \"impossible\", \"Test case 2 failed\""
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output\n"
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"A+A=A\") == \"impossible\""
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"A+A=A\") == \"impossible\""
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\", \"Test 1 failed\"\nassert solution(\"A+A=A\") == \"impossible\", \"Test 2 failed\""
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"A+A=A\") == \"impossible\""
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"A+A=A\") == \"impossible\""
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"A+A=A\") == \"impossible\""
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"A+A=A\") == \"impossible\"\n"
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"A+A=A\") == \"impossible\""
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"14\""
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output\n"
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"14\""
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=input()) == f\"{n}\\n\""
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"14\""
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n0 1 2 3\") == \"14\"\nassert solution(\"5\\n1 1 2 1 1\") == \"1\""
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n0 1 2 3\\n\") == 14\nassert solution(\"5\\n1 1 2 1 1\\n\") == 1"
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"14\""
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 14\nassert solution() == 1"
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"14\"\n"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"expected: {expected}, got: {solution(input())}\""
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\") == 88\nassert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\") == -1"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\\n\") == 88\nassert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n\") == -1"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n    4 4\n    1 2 3 0\n    0 0 5 6\n    0 0 7 8\n    7 0 0 10\n    ''') == '88'\n\nassert solution('''\n    4 4\n    1 2 3 0\n    0 0 5 6\n    0 4 7 8\n    7 0 0 10\n    ''') == '-1'"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\") == 88\nassert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\") == -1"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\\n\") == 88\nassert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n\") == -1\n"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\\n\") == \"88\\n\"\nassert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n\") == \"-1\\n\""
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input1) == '88', 'Sample Input 1 is invalid'\nassert solution(sample_input2) == -1, 'Sample Input 2 is invalid'"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n4 4\n1 2 3 0\n0 0 5 6\n0 0 7 8\n7 0 0 10\n''') == '88'\n\nassert solution('''\n4 4\n1 2 3 0\n0 0 5 6\n0 4 7 8\n7 0 0 10\n''') == '-1'\n\nassert solution('''\n4 4\n1 2 3 0\n0 0 5 6\n0 4 7 8\n7 0 0 10\n''') == '88'\n\nassert solution('''\n4 4\n1 2 3 0\n0 0 5 6\n0 0 7 8\n7 0 0 10\n''') == '88'\n\nassert solution('''\n4 4\n1 2 3 0\n0 0 5 6\n0 4 7 8\n7 0 0 10\n''') == '88'"
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Expected: {output()}, Actual: {solution(input())}\""
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"0.000\"\n"
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1 1\\n1 1\") == \"0.000\"\nassert solution(\"2\\n1 99999\\n99999 99999\") == \"9999700002.000\""
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1 1\\n1 1\\n\") == \"0.000\"\nassert solution(\"2\\n1 99999\\n99999 99999\\n\") == \"9999700002.000\""
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1 1\\n1 1\\n\") == \"0.000\\n9999700002.000\\n\"\nassert solution(\"2\\n1 99999\\n99999 99999\\n\") == \"9999700002.000\\n\""
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"0.000\"\nassert solution() == \"9999700002.000\""
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"0.000\"\nassert solution() == \"9999700002.000\""
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1 1\\n1 1\\n\") == \"0.000\\n\"\nassert solution(\"2\\n1 99999\\n99999 99999\\n\") == \"9999700002.000\\n\""
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n1 1\\n1 1\\n2\\n1 99999\\n99999 99999\") == \"0.000\"\nassert solution(\"2\\n1 99999\\n99999 99999\") == \"9999700002.000\"\n\nfrom typing import List"
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1 1\\n1 1\\n\") == \"0.000\\n\"\nassert solution(\"2\\n1 99999\\n99999 99999\\n\") == \"9999700002.000\\n\""
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '3', \"Expected: 3\\nActual: {}\""
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 8 1 6\\n1 2 5\\n1 3 1\\n2 6 6\\n2 3 6\\n4 2 3\\n3 4 1\\n4 5 1\\n5 6 1\\n5\\n1 3 6 5 4\") == 3\nassert solution(\"3 4 1 2\\n1 2 6\\n1 3 2\\n1 2 7\\n2 3 3\\n2\\n1 2\\n\") == Infinity"
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"3\\n\""
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected_output, f\"Solution does not match expected output.\\nInput: {stdin}\\nExpected Output: {expected_output}\\nActual Output: {solution(stdin)}\""
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r')) == '3\\n'\nassert solution(open('test_input1.txt', 'r')) == '3\\n'\nassert solution(open('test_input2.txt', 'r')) == 'Infinity\\n'"
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"3\\n\""
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input1) == expected1\nassert solution(sample_input2) == expected2"
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input) == output, f\"Test failed: {solution(input)}!= {output}\" for input, output in zip(stdin.strip().split(), [\"Impossible\", \"3\"])"
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"The largest fee so that SWERC can provide cheapest way to transfer money between X and Y is 3.\""
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"impossible\""
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n\") == \"impossible\\n\"\nassert solution(\"2\\n1\\n\") == \"impossible\\n\"\nassert solution(\"3\\n1\\n\") == \"000\\n001\\n011\\n010\\n110\\n111\\n101\\n100\\n\"\nassert solution(\"4\\n1\\n\") == \"000\\n001\\n011\\n010\\n110\\n111\\n101\\n100\\n\"\nassert solution(\"5\\n1\\n\") == \"000\\n001\\n011\\n010\\n110\\n111\\n101\\n100\\n\"\nassert solution(\"6\\n1\\n\") == \"000\\n001\\n011\\n010\\n110\\n111\\n101\\n100\\n\"\nassert solution(\"7\\n1\\n\") == \"000\\n001\\n011\\n010\\n110\\n111\\n101\\n100\\n\"\nassert solution(\"8\\n1\\n\") == \"000\\n001\\n011\\n010\\n110\\n111\\n101\\n100\\n\"\nassert solution(\"9\\n1\\n\") == \"000\\n001\\n011\\n010\\n110\\n111\\n101\\n100\\n\"\nassert solution(\"10\\n1\\n\") == \"000\\n001\\n011\\n010\\n110\\n111\\n101\\n100\\n\"\nassert solution(\"11\\n1\\n\") == \"000\\n001\\n011\\n010\\n110\\n111\\n101\\n100\\n\"\nassert solution(\"12\\n1\\n\") == \"000\\n001\\n011\\n010\\n110\\n111\\n101\\n100\\n\"\nassert solution(\"13\\n1\\n\") == \"000\\n001\\n011\\n010\\n110\\n111\\n101\\n100\\n\"\nassert solution(\"14\\n1\\n\") == \"000\\n001\\n011\\n010\\n110\\n111\\n101\\n100\\n\"\nassert solution(\"15\\n1\\n\") == \"000\\n001\\n011\\n010\\n110\\n111\\n101\\n100\\n\"\nassert solution(\"16\\n1\\n\") == \"000\\n001\\n011\\n010\\n110\\n111\\n101\\n100\\n\"\nassert solution(\"17\\n1\\n\") == \"000\\n001\\n011\\n010\\n110\\n111\\n101\\n100\\n\"\nassert solution(\"18\\n1\\n\") == \"000\\n001\\n011\\n010\\n110\\n111\\n101\\n100\\n\"\nassert solution(\"19\\n1\\n\") == \"000\\n001\\n011\\n010\\n110\\n111\\n101\\n100\\n\"\nassert solution(\"20\\n1\\n\") == \"000\\n001\\n011\\n010\\n110\\n111\\n101\\n100\\n\"\nassert solution(\"21\\n1\\n"
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2"
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"impossible\"\n"
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 1\\n6\\n\") == \"impossible\\n\"\nassert solution(\"3 1\\n1\\n\") == \"000\\n001\\n011\\n010\\n110\\n111\\n101\\n100\\n\"\n\nsolution(\"6 1\\n6\\n\")"
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"The output is not as expected. Expected: {expected_output}, Received: {solution(input())}\"\n"
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('6 1\\n6\\nSample Input 1:\\n6 1\\n6\\nSample Output 1:\\nimpossible') == 'impossible\\n'\nassert solution('3 1\\n1\\nSample Input 2:\\n3 1\\n1\\nSample Output 2:\\n000\\n001\\n011\\n010\\n110\\n111\\n101\\n100\\n') == '000\\n001\\n011\\n010\\n110\\n111\\n101\\n100\\n'"
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 1\\n6\\n\") == \"impossible\\n\"\nassert solution(\"3 1\\n1\\n\") == \"000\\n001\\n011\\n010\\n110\\n111\\n101\\n100\\n\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 1\\n6\\nSample Output 1: impossible\\n\\nSample Input 2: 3 1\\n1\\nSample Output 2: 000\\n001\\n011\\n010\\n110\\n111\\n101\\n100\\n\") == \"impossible\\n000\\n001\\n011\\n010\\n110\\n111\\n101\\n100\\n\""
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3,1) == \"000\"\nassert solution(5,2) == \"0011\"\nassert solution(16,2) == \"0001\"\nassert solution(16,3) == \"0000\"\nassert solution(17,2) == \"00101\"\nassert solution(17,3) == \"000101\"\nassert solution(18,2) == \"01001\"\nassert solution(18,3) == \"001001\"\nassert solution(19,2) == \"11001\"\nassert solution(19,3) == \"010001\"\nassert solution(20,2) == \"10010\"\nassert solution(20,3) == \"010010\"\nassert solution(21,2) == \"01000\"\nassert solution(21,3) == \"00100\"\nassert solution(22,2) == \"01010\"\nassert solution(22,3) == \"001010\"\nassert solution(23,2) == \"11000\"\nassert solution(23,3) == \"010010\"\nassert solution(24,2) == \"100100\"\nassert solution(24,3) == \"0100100\"\nassert solution(25,2) == \"010000\"\nassert solution(25,3) == \"001000\"\nassert solution(26,2) == \"010100\"\nassert solution(26,3) == \"0010100\"\nassert solution(27,2) == \"110000\"\nassert solution(27,3) == \"0100100\"\nassert solution(28,2) == \"1001000\"\nassert solution(28,3) == \"01001000\"\nassert solution(29,2) == \"0100000\"\nassert solution(29,3) == \"0010000\"\nassert solution(30,2) == \"0101000\"\nassert solution(30,3) == \"00101000\"\nassert solution(31,2) == \"1100000\"\nassert solution(31,3) == \"01001000\"\nassert solution(32,2) == \"10010000\"\nassert solution(32,3) == \"010010000\"\nassert solution(33,2) == \"01000000\"\nassert solution(33,3) == \"00100000\"\nassert solution(34,2) == \"01010000\"\nassert solution(34,3) == \"001010000\"\nassert solution(35,2) == \"11000000\"\nassert solution(35,3) == \"010010000\"\nassert solution(36,2) == \"100100000\"\nassert solution(36,3) == \"0100100000\"\nassert solution(37,2) == \"010000000\"\nassert solution(37,3) == \"001000000\"\nassert solution(38,2) == \"010100000\"\nassert solution(38,3) == \"0010100000\"\nassert solution(39,2) == \"110000000\"\nassert solution(39,3) == \"01001000000\"\nassert solution(40,2) == \"1001000000\"\nassert solution(40,3) == \"01001000000\"\nassert solution(41,2) == \"0100000000\"\nassert solution(41,3) == \"0010000"
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\\n99\") == \"1\\n\"\nassert solution(\"90\\n10\") == \"10\\n\""
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10\\n99\") == \"1\", \"1st example test failed\"\nassert solution(\"90\\n10\") == \"10\", \"2nd example test failed\""
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10\\n99\") == \"1\\n\"\nassert solution(\"90\\n10\") == \"10\\n\""
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10\\n99\") == \"1\\n\"\nassert solution(\"90\\n10\") == \"10\\n\""
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Output {solution(input())} does not match expected output {expected_output}\"\n"
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    10\n    99\n    \"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n    90\n    10\n    \"\"\"\n) == \"10\\n\""
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('10\\n99') == '1\\n', \"Test Case 1\"\nassert solution('90\\n10') == '10\\n', \"Test Case 2\""
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10\\n99\") == \"1\\n\", \"Test 1 failed\"\nassert solution(\"90\\n10\") == \"10\\n\", \"Test 2 failed\""
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10\\n99\") == \"1\\n\", \"Solution 1 failed\"\nassert solution(\"90\\n10\") == \"10\\n\", \"Solution 2 failed\"\n\nfrom typing import List"
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\\n\", \"Expected output: 2\\nGot: \" + solution(stdin) + \"\\n\""
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2 3 3\\n4 1 10\\n2 7 3\\n\") == \"2\\n\"\nassert solution(\"4\\n3 1 3 3\\n5 8 7 10\\n4 1 2 6\\n\") == \"1\\n\""
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2\", \"Test case 1 failed\""
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=r\"\"\"\n3\n2 3 3\n4 1 10\n2 7 3\n\"\"\") == \"2\\n\"\n\nassert solution(stdin=r\"\"\"\n4\n3 1 3 3\n5 8 7 10\n4 1 2 6\n\"\"\") == \"1\\n\""
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n3\n2 3 3\n4 1 10\n2 7 3\n''') == '2\\n'\n\nassert solution('''\n4\n3 1 3 3\n5 8 7 10\n4 1 2 6\n''') == '1\\n'"
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n2 3 3\\n4 1 10\\n2 7 3') == '2\\n'\nassert solution('4\\n3 1 3 3\\n5 8 7 10\\n4 1 2 6') == '1\\n'"
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n2 3 3\\n4 1 10\\n2 7 3\\n') == '2\\n'\nassert solution('4\\n3 1 3 3\\n5 8 7 10\\n4 1 2 6\\n') == '1\\n'"
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n2 3 3\\n4 1 10\\n2 7 3\\n') == '2\\n'\nassert solution('4\\n3 1 3 3\\n5 8 7 10\\n4 1 2 6\\n') == '1\\n'"
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n2 3 3\\n4 1 10\\n2 7 3') == '2'\nassert solution('4\\n3 1 3 3\\n5 8 7 10\\n4 1 2 6') == '1'"
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '5\\n11\\n16\\n'\n"
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == [\"5\", \"11\", \"16\"]"
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"beginning\") == 5\nassert solution(\"1 5\") == 11\nassert solution(\"4 8\") == 16\nassert solution(\"1 9\") == 7\nassert solution(\"velvet\") == 7\nassert solution(\"abcdefg\") == 0"
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin: str) == \"5\\n11\\n16\\n\""
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"beginning\") == 5\nassert solution(\"1 5\\n4 8\\n1 9\") == 11\nassert solution(\"velvet\") == 7"
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Robert Hanlon\") == \"6\"\nassert solution(\"Never attribute to malice that which is adequately explained by stupidity.\") == \"10\"\nassert solution(\"This is a palindrome!\") == \"1\"\nassert solution(\"12345\") == \"0\"\nassert solution(\"madam\") == \"1\"\nassert solution(\"level\") == \"1\"\nassert solution(\"23456789\") == \"9\"\nassert solution(\"abcdefghijklmnopqrstuvwxyz\") == \"25\"\nassert solution(\"0123456789\") == \"1\"\nassert solution(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"26\"\nassert solution(\"1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012"
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('9 3\\nbeginning\\n1 5\\n4 8\\n1 9') == '5\\n11\\n16\\n'\n\nassert solution('6 1\\nvelvet\\n1 6') == '7\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"5\"\nassert solution() == \"11\"\nassert solution() == \"16\""
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('sample_input.txt', 'r')) == [\"5\\n11\\n16\"]"
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"beginning\\n1 5\\n4 8\\n1 9\") == 5\nassert solution(\"velvet\\n1 6\") == 7"
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"3 4\n3 1\n2 2\n1 1\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"2 3\n1 23\n2 17\n    \"\"\"\n) == \"23\""
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == expected_output1, f\"Test case 1 failed. Expected output: {expected_output1}, got: {solution(sample_input1)}\"\nassert solution(sample_input2) == expected_output2, f\"Test case 2 failed. Expected output: {expected_output2}, got: {solution(sample_input2)}\""
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 2, \"Solution is incorrect\""
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 23"
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\n3 1\\n2 2\\n1 1\") == 2\nassert solution(\"2 3\\n1 23\\n2 17\") == 23"
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'Output: Sample Output 2\\n', \"Test case 2 failed\""
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\n3 1\\n2 2\\n1 1\\n\") == \"2\\n\"\nassert solution(\"2 3\\n1 23\\n2 17\\n\") == \"23\\n\""
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == solution(\"Sample Input 1:\\n3 4\\n3 1\\n2 2\\n1 1\\n\\nSample Output 1:\\n2\\n\\nSample Input 2:\\n2 3\\n1 23\\n2 17\\n\\nSample Output 2:\\n23\")"
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 3\\n1\\n2 2\\n1 1\") == 2\nassert solution(\"10 3\\n2\\n1 23\\n2 17\") == 23"
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0.0000000000\"\nassert solution(stdin) == \"9.476048311178\""
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 0\\n2 0\\n2 2\\n0 2\\n0 -1 0 3\") == \"0.0000000000\"\nassert solution(\"6\\n0 1\\n0 4\\n3 6\\n7 5\\n4 2\\n7 0\\n5 7 2 0\") == \"9.476048311178\""
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 0\\n2 0\\n2 2\\n0 2\\n0 -1 0 3\") == \"0.0000000000\\n\\n9.476048311178\\n\"\nassert solution(\"0 1\\n0 4\\n3 6\\n7 5\\n4 2\\n7 0\\n5 7 2 0\") == \"9.476048311178\\n\"\nassert solution(\"4\\n0 0\\n2 0\\n2 2\\n0 2\\n0 -1 0 3\") == \"0.0000000000\\n\\n9.476048311178\\n\"\nassert solution(\"6\\n0 1\\n0 4\\n3 6\\n7 5\\n4 2\\n7 0\\n5 7 2 0\") == \"9.476048311178\\n\""
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"0.0000000000\"\n"
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 0.0000000000, \"Your solution should return 0.0000000000\""
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 0.0000000000, \"Solution should be 0.0000000000\""
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Your code is incorrect. Please check the sample cases and the provided input.\"\nfor sample in [(\"Input 1\", (4, 0, 2, 0, 2, 2, 0, 0), 0.0000000000), (\"Input 2\", (6, 0, 1, 0, 4, 3, 6, 7, 5, 4, 2, 7, 0, 5, 7, 2, 0), 9.476048311178)]:\n    assert solution(sample[0]) == sample[1], f\"Incorrect output for {sample[0]}\""
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n0 0\\n2 0\\n2 2\\n0 2\\n0 -1 0 3\") == \"0.0000000000\\n9.476048311178\"\nassert solution(\"6\\n0 1\\n0 4\\n3 6\\n7 5\\n4 2\\n7 0\\n5 7 2 0\") == \"9.476048311178\""
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n4\n0 0\n2 0\n2 2\n0 2\n0 -1 0 3\n\"\"\") == 0.0000000000\n\nassert solution(\"\"\"\n6\n0 1\n0 4\n3 6\n7 5\n4 2\n7 0\n5 7 2 0\n\"\"\") == 9.476048311178"
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n0 0\\n2 0\\n2 2\\n0 2\\n0 -1 0 3\\n') == 0.0000000000\nassert solution('6\\n0 1\\n0 4\\n3 6\\n7 5\\n4 2\\n7 0\\n5 7 2 0\\n') == 9.476048311178\nassert solution('8\\n1 2\\n4 5\\n6 7\\n3 8\\n4 1\\n2 3\\n') == 10.000000000000\nassert solution('1\\n-5\\n8\\n') == 100000.0000000000"
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"8.0000000000\\n\""
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(5) == 8.0, \"Test 1 failed\"\nassert solution(5) == 0.02, \"Test 2 failed\""
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\n2 0\\n1 1\\n0 2\\n-2 0\\n0 -2\\n') == '8.0000000000\\n'\nassert solution('5\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.20\\n') == '0.0200000000\\n'"
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 0\\n1 1\\n0 2\\n-2 0\\n0 -2') == '8.0000000000'\nassert solution('0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.20') == '0.0200000000'"
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, got: {solution(stdin)}\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n2 0\\n1 1\\n0 2\\n-2 0\\n0 -2\\n') == '8.0000000000\\n'"
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n2 0\\n1 1\\n0 2\\n-2 0\\n0 -2\") == \"8.0000000000\\n\""
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"8.0000000000\", \"Incorrect output: \" + solution(stdin)"
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '8.0000000000', \"Test 1 failed\"\n\nassert solution() == '0.0200000000', \"Test 2 failed\""
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2\n\nsample_input1 = \"\"\"\n5\n2 0\n1 1\n0 2\n-2 0\n0 -2\n\"\"\"\n\nsample_output1 = \"8.0000000000\"\n\nsample_input2 = \"\"\"\n5\n0.2 0.00\n0 -0.2\n0.0 0\n-0.2 0\n0 0.20\n\"\"\"\n\nsample_output2 = \"0.0200000000\""
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"9 4 3\\n1 1 9 9 1 6 6 39 9\\nSample Output 1: 2\\n\\n10 2 2\\n1 1 1 1 1 2 2 2 2 2\\nSample Output 2: 2\") == \"2\\n\""
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"9 4 3\\n1 1 9 9 1 6 6 39 9\\nSample Output 1:\\n2\\n\\n10 2 2\\n1 1 1 1 1 2 2 2 2 2\\nSample Output 2:\\n2\") == \"2\\n\""
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"9 4 3\\n1 1 9 9 1 6 6 39 9\\n\") == \"2\\n\"\nassert solution(\"10 2 2\\n1 1 1 1 1 2 2 2 2 2\\n\") == \"2\\n\""
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"9 4 3\\n1 1 9 9 1 6 6 39 9\\n\") == \"2\"\nassert solution(\"10 2 2\\n1 1 1 1 1 2 2 2 2 2\\n\") == \"2\"\n\nfrom typing import List"
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('9 4 3\\n1 1 9 9 1 6 6 39 9\\n') == '2\\n'\nassert solution('10 2 2\\n1 1 1 1 1 2 2 2 2 2\\n') == '2\\n'"
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"9 4 3\\n1 1 9 9 1 6 6 39 9\\n\") == \"2\\n\"\nassert solution(\"10 2 2\\n1 1 1 1 1 2 2 2 2 2\\n\") == \"2\\n\""
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input1) == expected_output1\nassert solution(sample_input2) == expected_output2"
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == output, f\"Incorrect output: '{solution(stdin)}', expected: '{output}'\""
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"9 4 3\\n1 1 9 9 1 6 6 39 9\") == \"2\"\nassert solution(\"10 2 2\\n1 1 1 1 1 2 2 2 2 2\") == \"2\""
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1 9 9 1 6 6 39 9\\n1 1 1 1 1 2 2 2 2 2\\n\") == \"2\\n\""
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"20.000000000\"\nassert solution() == \"4.666666667\"\nassert solution() == \"4.000000000\"\nassert solution() == \"3.666666667\"\nassert solution() == \"4.000000000\"\n"
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"20.000000000\", \"The solution is incorrect.\""
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3 2\\n1 2 3\") == \"3.666666667\"\nassert solution(\"4 11 4\\n10 10 10 10\") == \"20.000000000\""
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"3.666666667\", \"Incorrect output.\""
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"3.666666667\", \"Incorrect solution\""
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 3 2\\n1 2 3\\n') == '3.666666667'\nassert solution('4 11 4\\n10 10 10 10\\n') == '20.000000000'"
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"3.666666667\", \"The solution is incorrect.\""
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3 2\\n1 2 3\\n\") == 3.666666667\nassert solution(\"4 11 4\\n10 10 10 10\\n\") == 20.000000000\n\nSolution:\n\nWe can use the following logic to calculate the expected number of people in the restaurant when it closes:\n\nLet's denote the expected number of people as $E$, the total number of people in the restaurant as $n$, and the number of tables in the restaurant as $t$.\n\nStep 1: Calculate the number of groups\n\nFirst, we need to determine the number of groups. We can use the formula $g = \\frac{n}{t}$.\n\nStep 2: Calculate the expected number of groups\n\nNext, we need to calculate the expected number of groups when the restaurant closes. We can use the formula:\n\n$$E = \\frac{n}{t}$$\n\nStep 3: Calculate the number of tables for each group\n\nWe need to calculate the number of tables for each group. We can use the formula:\n\n$$t = \\frac{n}{g}$$\n\nStep 4: Calculate the expected number of tables for each group\n\nWe need to calculate the expected number of tables for each group. We can use the formula:\n\n$$\\sum_{i=1}^{t} c_i$$\n\nStep 5: Calculate the total expected number of people in the restaurant\n\nFinally, we need to calculate the total expected number of people in the restaurant. We can use the formula:\n\n$$E = \\sum_{i=1}^{t} \\sum_{j=1}^{g} c_ij$$\n\nNow, we can use the given logic to calculate the expected number of people in the restaurant:\n\nStep 6: Calculate the expected number of people in the restaurant\n\n$$E = \\sum_{i=1}^{t} \\sum_{j=1}^{g} c_ij$$\n\nWe can use the formula:\n\n$$E = \\frac{n}{t} \\sum_{i=1}^{t} \\sum_{j=1}^{g} c_ij$$\n\nWe can then solve the given problem by taking the sum of the squares of the expected number of tables and the number of people in the restaurant, which gives us:\n\n$$E = \\frac{n}{t} \\sum_{i=1}^{t} \\sum_{j=1}^{g} c_ij \\sum_{i=1}^{t} \\sum_{j=1}^{g} c_ij$$\n\nWe can use the formula:\n\n$$E = \\frac{n}{t} \\sum_{i=1}^{t} \\sum_{j=1}^{g} c_ij \\sum_{i=1}^{t} \\sum_{j=1}^{g} c_ij$$\n\nWe can simplify the expression:\n\n$$E = \\frac{n}{t} \\sum_{i=1}^{t} c_ij$$\n\nPlugging in the values, we get:\n\n$$E = \\frac{n}{t} \\sum_{i=1}^{t} c_ij$$\n\nWe can solve this expression:\n\n$$E = \\frac{n}{t} \\sum_{i=1}^{t} c_ij \\frac{n}{t} \\sum_{i=1}^{t} c_ij$$\n\nWe can then simplify the expression:\n\n$$E = \\frac{n}{t} \\sum_{i=1}^{t} c_ij \\frac{n}{t} \\sum_{i=1}^{t} c_ij$$\n\nWe can then solve the expression:\n\n$$E = \\frac{n}{t} \\sum_{i=1}^{t} c_ij \\frac{n}{t} \\sum_{i=1}^{t} c_ij$$\n\nWe can then simplify the expression:\n\n$$E = \\frac{n}{t} \\sum_{i=1}^{t} c_ij$$\n\nFinally, we can use the formula:\n\n$$E = \\frac{n}{t} \\sum_{i=1}^{t} c_ij$$\n\nPlugging in the values, we get:\n\n$$E = \\frac{n}{t} \\sum_{i=1}^{t} c_ij$$\n\nWe can then solve the given problem:\n\n$$E = \\frac{n}{t} \\sum_{i=1}^{t} c_ij$$\n\nNow, we can use the given logic to calculate the"
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    3 3 2\n    1 2 3\n    \"\"\"\n) == \"3.666666667\"\n\nassert solution(\n    \"\"\"\n    4 11 4\n    10 10 10 10\n    \"\"\"\n) == \"20.000000000\""
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 42\\n5 123456789') == '2\\n'\nassert solution('1 10') == '0\\n'"
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(2, 42) == 2, \"Solution is not correct\"\nassert solution(5, 123456789) == 16317634, \"Solution is not correct\""
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(2, 42) == 2\nassert solution(5, 123456789) == 16317634"
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Input {input()} did not produce output {output}\"\n"
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(2, 42) == 2, \"Output 1: expected 2 but got {}\".format(solution(2, 42))\nassert solution(5, 123456789) == 16317634, \"Output 2: expected 16317634 but got {}\".format(solution(5, 123456789))"
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 42\") == \"2\"\nassert solution(\"5 123456789\") == \"16317634\""
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 42\") == \"2\", \"Expected '2' but got '{}'\".format(solution(\"2 42\"))\nassert solution(\"5 123456789\") == \"16317634\", \"Expected '16317634' but got '{}'\".format(solution(\"5 123456789\"))"
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=input()) == expected, f\"Solution is {solution(stdin=input())}, expected {expected}\""
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"2 42\\n5 123456789\") == \"2\\n\""
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 42\") == \"2\\n\"\nassert solution(\"5 123456789\") == \"16317634\\n\""
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1 0 0 2\\n1 2 2\\n1 1 1\\n\") == \"0\\n\"\nassert solution(\"3 1 1 1 8\\n0 1 1\\n1 0 1\\n2 1 1\\n1 2 1\\n1 2 2\\n2 2 3\\n0 2 5\\n1 2 6\\n\") == \"4\\n\""
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3 1 0 0 2\n1 2 2\n1 1 1\n\"\"\") == \"0\\n\"\n\nassert solution(\"\"\"\n3 1 1 1 8\n0 1 1\n1 0 1\n2 1 1\n1 2 1\n1 2 2\n2 2 3\n0 2 5\n1 2 6\n\"\"\") == \"4\\n\""
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin='3 1 0 0 2\\n1 2 2\\n1 1 1\\nSample Output 1: 0\\nSample Input 2: 3 1 1 1 8\\n0 1 1\\n1 0 1\\n2 1 1\\n1 2 1\\n1 2 2\\n2 2 3\\n0 2 5\\n1 2 6\\n') == '0\\n'\nassert solution(stdin='3 1 1 1 8\\n0 1 1\\n1 0 1\\n2 1 1\\n1 2 1\\n1 2 2\\n2 2 3\\n0 2 5\\n1 2 6\\nSample Output 2: 4\\n') == '4\\n'"
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"0\" # expected output: 0"
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1 0 0 2\\n1 2 2\\n1 1 1\") == \"0\\n\"\nassert solution(\"3 1 1 1 8\\n0 1 1\\n1 0 1\\n2 1 1\\n1 2 1\\n1 2 2\\n2 2 3\\n0 2 5\\n1 2 6\") == \"4\\n\""
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1 0 0 2\\n1 2 2\\n1 1 1\\n\") == \"0\\n\"\nassert solution(\"3 1 1 1 8\\n0 1 1\\n1 0 1\\n2 1 1\\n1 2 1\\n1 2 2\\n2 2 3\\n0 2 5\\n1 2 6\\n\") == \"4\\n\""
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n3 1 0 0 2\n1 2 2\n1 1 1\n''') == '0\\n'\n\nassert solution('''\n3 1 1 1 8\n0 1 1\n1 0 1\n2 1 1\n1 2 1\n1 2 2\n2 2 3\n0 2 5\n1 2 6\n''') == '4\\n'"
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    3 1 0 0 2\n    1 2 2\n    1 1 1\n    \"\"\"\n) == \"0\\n\"\n\nassert solution(\n    \"\"\"\n    3 1 1 1 8\n    0 1 1\n    1 0 1\n    2 1 1\n    1 2 1\n    1 2 2\n    2 2 3\n    0 2 5\n    1 2 6\n    \"\"\"\n) == \"4\\n\""
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input_1) == \"0\"\nassert solution(sample_input_2) == \"4\""
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1 0 0 2\\n1 2 2\\n1 1 1\") == \"0\\n\"\nassert solution(\"3 1 1 1 8\\n0 1 1\\n1 0 1\\n2 1 1\\n1 2 1\\n1 2 2\\n2 2 3\\n0 2 5\\n1 2 6\") == \"4\\n\""
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input1) == '3', \"Expected '3', got '{}'\".format(solution(sample_input1))\nassert solution(sample_input2) == '3', \"Expected '3', got '{}'\".format(solution(sample_input2))"
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Your solution is incorrect. Expected: {expected_output}, Received: {solution(input())}\""
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 1 10 10\\n8 8\\n5 1\\n4 6\\n4 7\\n7 9\") == \"3\\n\"\nassert solution(\"5 1 100 100\\n27 75\\n79 77\\n40 93\\n62 41\\n52 45\") == \"3\\n\""
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 1 10 10\\n8 8\\n5 1\\n4 6\\n4 7\\n7 9\") == \"3\"\nassert solution(\"5 1 100 100\\n27 75\\n79 77\\n40 93\\n62 41\\n52 45\") == \"3\""
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 1 10 10\\n8 8\\n5 1\\n4 6\\n4 7\\n7 9\") == \"3\\n\", \"The solution is incorrect.\"\n\nassert solution(\"5 1 100 100\\n27 75\\n79 77\\n40 93\\n62 41\\n52 45\") == \"3\\n\", \"The solution is incorrect.\""
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 3, \"Expected output 3, but got {}\".format(solution)"
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 1 10 10\\n8 8\\n5 1\\n4 6\\n4 7\\n7 9\") == \"3\"\nassert solution(\"5 1 100 100\\n27 75\\n79 77\\n40 93\\n62 41\\n52 45\") == \"3\"\n\nfrom typing import List"
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, but got {solution(input())}\""
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 1 10 10\\n8 8\\n5 1\\n4 6\\n4 7\\n7 9\") == 3\nassert solution(\"5 1 100 100\\n27 75\\n79 77\\n40 93\\n62 41\\n52 45\") == 3"
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 1 10 10\\n8 8\\n5 1\\n4 6\\n4 7\\n7 9\") == \"3\"\nassert solution(\"5 1 100 100\\n27 75\\n79 77\\n40 93\\n62 41\\n52 45\") == \"3\""
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == 3"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == 3"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == 3"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == 3"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == 3"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == 3"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('ABC') == 2\nassert solution('ABBBAAAA') == 3\n"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == 3"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == 3\n"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == 3"
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"3\"\nassert solution() == \"3\""
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Incorrect output\""
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\nA\\nB\\nAA\\nB\\nAAA\\n\") == \"3\\n\"\nassert solution(\"5\\nA\\nABA\\nBBB\\nABABA\\nAAAAAB\\n\") == \"3\\n\"\n"
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"3\\n\", \"Solution not correct\""
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\nA\\nB\\nA\\nA\\n') == '3'\nassert solution('5\\nA\\ABA\\BBB\\ABABA\\AAAAAB\\n') == '3'"
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected, f\"Test failed for {stdin}\\nExpected: {expected}\\nActual: {solution(stdin)}\""
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"sample_input1.txt\", \"r\").read()) == \"3\"\nassert solution(open(\"sample_input2.txt\", \"r\").read()) == \"3\"\n"
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"3\\n\""
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), \"Test failed\"\nfor _ in range(5):\n    n = int(input())\n    strings = list(input())\n    teleportation = 0\n    for i in range(n - 1):\n        subsequence = [strings[i], strings[i+1]]\n        if all(c in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" for c in subsequence[0]) and all(c in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" for c in subsequence[1]):\n            teleportation += len(subsequence)\n    print(teleportation)"
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\nA\\nB\\nAA\\nBBB\\nA\\nA') == '3', \"The correct output should be '3'.\""
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"100 10 2 1\") == \"0.1\\n\", \"Test 1 failed\"\nassert solution(\"100 10 2 2\") == \"0.1909090909\\n\", \"Test 2 failed\"\nassert solution(\"100 10 1 1\") == \"1.0\\n\", \"Test 3 failed\"\n\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"0.1\\n\", \"Sample Output 1\"\n\nimport random"
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '0.1909090909'\nprint(solution(stdin))  # Output: '0.1909090909'"
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 0.1909090909\nassert solution() == 0.2\nassert solution() == 0.3\nassert solution() == 0.2909090909\nassert solution() == 0.1909090909"
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    100 10 2 1\n    10 10 1 1\n    \"\"\"\n) == \"0.1\"\n\nassert solution(\n    \"\"\"\n    100 10 2 2\n    10 10 1 2\n    \"\"\"\n) == \"0.1909090909\""
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"0.1\", \"Incorrect output. Expected 0.1, but got: \" + solution(stdin)"
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2\n\nfrom typing import List"
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    100 10 2 1\n    \"\"\"\n) == \"0.1\"\n\nassert solution(\n    \"\"\"\n    100 10 2 2\n    \"\"\"\n) == \"0.1909090909\""
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin='100 10 2 1\\n100 10 2 2\\n') == '0.1\\n'"
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"0.1909090909\", \"Incorrect output.\""
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 0\nassert solution(\"ABABABcABABAbAbab\") == 5"
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == \"0\"\nassert solution(\"ABABABcABABAbAbab\") == \"5\""
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == \"4\\n0\\n5\""
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbcd\") == 0\nassert solution(\"abcdabcdabcd\") == 5"
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == \"0\"\nassert solution(\"ABABABcABABAbAbab\") == \"4\"\nassert solution(\"ABABABcABABAbAbab\") == \"4\"\nassert solution(\"ABABABcABABAbAbab\") == \"4\"\nassert solution(\"ABABABcABABAbAbab\") == \"4\"\n\nfor i in range(1, len(stdin.strip()) + 1):\n    assert solution(stdin) == str(i)"
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"AAAAABBBBBBBBB\") == 4"
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == \"4\"\nassert solution(\"ABABABcABABAbAbab\") == \"4\"\nassert solution(\"ABABABcABABAbAbab\") == \"4\"\nassert solution(\"ABABABcABABAbAbab\") == \"4\"\nassert solution(\"ABABABcABABAbAbab\") == \"4\""
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(b\"ABABABcABABAbAbab\") == \"4\\n0\\n5\"  # Test case 1"
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == 4, \"Test failed for solution(stdin: str) -> str: assert solution(\\\"ABABABcABABAbAbab\\\") == 4, \\\"Test failed for solution(stdin: str) -> str: assert solution(\\\"ABABABcABABAbAbab\\\") == 4, \\\"Test failed for solution(stdin: str) -> str: assert solution(\\\"ABABABcABABAbAbab\\\") == 4, \\\"Test failed for solution(stdin: str) -> str: assert solution(\\\"ABABABcABABAbAbab\\\") == 4, \\\"Test failed for solution(stdin: str) -> str: assert solution(\\\"ABABABcABABAbAbab\\\") == 4, \\\"Test failed for solution(stdin: str) -> str: assert solution(\\\"ABABABcABABAbAbab\\\") == 4, \\\"Test failed for solution(stdin: str) -> str: assert solution(\\\"ABABABcABABAbAbab\\\") == 4, \\\"Test failed for solution(stdin: str) -> str: assert solution(\\\"ABABABcABABAbAbab\\\") == 4, \\\"Test failed for solution(stdin: str) -> str: assert solution(\\\"ABABABcABABAbAbab\\\") == 4, \\\"Test failed for solution(stdin: str) -> str: assert solution(\\\"ABABABcABABAbAbab\\\") == 4, \\\"Test failed for solution(stdin: str) -> str: assert solution(\\\"ABABABcABABAbAbab\\\") == 4, \\\"Test failed for solution(stdin: str) -> str: assert solution(\\\"ABABABcABABAbAbab\\\") == 4, \\\"Test failed for solution(stdin: str) -> str: assert solution(\\\"ABABABcABABAbAbab\\\") == 4, \\\"Test failed for solution(stdin: str) -> str: assert solution(\\\"ABABABcABABAbAbab\\\") == 4, \\\"Test failed for solution(stdin: str) -> str: assert solution(\\\"ABABABcABABAbAbab\\\") == 4, \\\"Test failed for solution(stdin: str) -> str: assert solution(\\\"ABABABcABABAbAbab\\\") == 4, \\\"Test failed for solution(stdin: str) -> str: assert solution(\\\"ABABABcABABAbAbab\\\") == 4, \\\"Test failed for solution(stdin: str) -> str: assert solution(\\\"ABABABcABABAbAbab\\\") == 4, \\\"Test failed for solution(stdin: str) -> str: assert solution(\\\"ABABABcABABAbAbab\\\") == 4, \\\"Test failed for solution(stdin: str) -> str: assert solution(\\\"ABABABcABABAbAbab\\\") == 4, \\\"Test failed for solution(stdin: str) -> str: assert solution(\\\"ABABABcABABAbAbab\\\") == 4, \\\"Test failed for solution(stdin: str) -> str: assert solution(\\\"ABABABcABABAbAbab\\\") == 4, \\\"Test failed for solution(stdin: str) -> str: assert solution(\\\"ABABABcABABAbAbab\\\") == 4, \\\"Test failed for solution(stdin: str) -> str: assert solution(\\\"ABABABcABABAbAbab\\\") == 4, \\\"Test failed for solution(stdin: str) -> str: assert solution(\\\"ABABABcABABAbAbab\\\") == 4, \\\"Test failed for solution(stdin: str) -> str: assert solution(\\\"ABABABcABABAbAbab\\\") == 4, \\\"Test failed for solution(stdin: str) -> str: assert solution(\\\"ABABABcABABAbAbab\\\") == 4, \\\"Test failed for solution(stdin: str) -> str: assert solution(\\\"ABABABcABABAbAbab\\\") == 4, \\\"Test failed for solution(stdin: str) -> str: assert solution(\\\"ABABABcABABAbAbab\\\") == 4, \\\"Test failed for solution(stdin: str) -> str: assert solution(\\\"ABABABcABABAbAbab\\\") == 4, \\\"Test failed for solution(stdin: str) -> str: assert solution(\\\"ABABABcABABAbAbab\\\") == 4, \\\"Test failed for solution(stdin: str) -> str: assert solution(\\\"ABABABcABABAbAbab\\\") == 4, \\\"Test failed for solution(stdin: str) -> str: assert solution(\\\"ABABABcABABAbAbab\\\") == 4, \\\"Test failed for solution(stdin: str) -> str: assert solution(\\\"ABABAB"
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == \"4\"\nassert solution(\"ABABABcABABAbAbab\") == \"0\"\nassert solution(\"ABABABcABABAbAbab\") == \"5\""
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n0\\n0\\n1\\n\") == \"2\\n\"\nassert solution(\"4 3\\n1\\n1\\n2\\n\") == \"2\\n\"\nassert solution(\"4 3\\n0\\n0\\n2\\n\") == \"2\\n\"\nassert solution(\"4 3\\n1\\n1\\n3\\n\") == \"3\\n\"\nassert solution(\"4 3\\n0\\n0\\n3\\n\") == \"3\\n\""
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2\""
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n0\\n0\\n1\") == \"2\\n\"\n"
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"4 3\\n0\\n0\\n1\\n\") == 2\n"
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n0\\n0\\n1\\n\") == \"2\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 3\\n0\\n0\\n1') == '2'\nassert solution('5 4\\n1 2\\n3') == '3'\nassert solution('3 1') == '2'\nassert solution('4 2\\n1 3\\n3') == '4'\nassert solution('4 1\\n1') == '2'"
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n0\\n0\\n1\") == \"2\"\n"
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n0\\n0\\n1\\n\") == \"2\\n\"\nassert solution(\"3 4\\n1\\n0\\n2\\n\") == \"2\\n\"\nassert solution(\"4 5\\n1\\n2\\n1\\n\") == \"1\\n\"\nassert solution(\"5 6\\n2\\n2\\n3\\n\") == \"2\\n\""
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n0\\n0\\n1\") == \"2\\n\""
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\") == \"1\\nP0: 22 1 4 2 6 -1 0\"\nassert solution(\"2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n15 9 3 5 2 -8 1\\n3 8 6 7 2 4 9\") == \"3\\nP1: 27 10 5 5 3 -1 6\\nP2: 22 9 2 6 3 -1 2\\nP3: 22 9 2 6 3 -1 2\\nP4: 22 9 2 6 3 -1 2\"\n"
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, \"Test failed\""
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(solution) == \"1\\nP0: 22 1 4 2 6 -1 0\\n\"\nassert solution(solution) == \"1\\nP1: 21 2 7 2 1 6 -2 0\\n\"\nassert solution(solution) == \"1\\nP2: 21 2 7 3 1 5 -3 0\\n\"\nassert solution(solution) == \"1\\nP3: 21 2 7 4 1 5 -4 0\\n\"\nassert solution(solution) == \"1\\nP4: 21 2 7 5 1 5 -5 0\\n\"\nassert solution(solution) == \"1\\nP5: 21 2 7 6 1 4 -6 0\\n\"\nassert solution(solution) == \"1\\nP6: 20 2 6 7 1 4 -6 0\\n\"\nassert solution(solution) == \"1\\nP7: 20 2 6 7 1 4 -6 0\\n\"\nassert solution(solution) == \"1\\nP8: 20 2 6 7 1 4 -6 0\\n\"\nassert solution(solution) == \"1\\nP9: 19 1 5 6 1 4 -6 0\\n\"\nassert solution(solution) == \"1\\nP10: 19 1 5 6 1 4 -6 0\\n\"\nassert solution(solution) == \"1\\nP11: 19 1 5 6 1 4 -6 0\\n\"\nassert solution(solution) == \"1\\nP12: 18 2 4 5 1 3 -5 0\\n\"\nassert solution(solution) == \"1\\nP13: 18 2 4 5 1 3 -5 0\\n\"\nassert solution(solution) == \"1\\nP14: 18 2 4 5 1 3 -5 0\\n\"\nassert solution(solution) == \"1\\nP15: 17 2 3 4 1 2 -4 0\\n\"\nassert solution(solution) == \"1\\nP16: 17 2 3 4 1 2 -4 0\\n\"\nassert solution(solution) == \"1\\nP17: 17 2 3 4 1 2 -4 0\\n\"\nassert solution(solution) == \"1\\nP18: 16 2 2 3 1 1 -3 0\\n\"\nassert solution(solution) == \"1\\nP19: 16 2 2 3 1 1 -3 0\\n\"\nassert solution(solution) == \"1\\nP20: 16 2 2 3 1 1 -3 0\\n\"\nassert solution(solution) == \"1\\nP21: 15 1 2 3 1 1 -3 0\\n\"\nassert solution(solution) == \"1\\nP22: 15 1 2 3 1 1 -3 0\\n\"\nassert solution(solution) == \"1\\nP23: 15 1 2 3 1 1 -3 0\\n\"\nassert solution(solution) == \"1\\nP24: 14 2 1 2 1 1 -2 0\\n\"\nassert solution(solution) == \"1\\nP25: 14 2 1 2 1 1 -2 0\\n\"\nassert solution(solution) == \"1\\nP26: 14 2 1 2 1 1 -2 0\\n\"\nassert solution(solution) == \"1\\nP27: 13 2 1 2 1 1 -2 0\\n\"\nassert solution(solution) == \"1\\nP28: 13 2 1 2 1 1 -2 0\\n\"\nassert solution(solution) == \"1\\nP29: 13 2 1 2 1 1 -2 0\\n\"\nassert solution(solution) == \"1\\nP30: 12 1"
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"\"\"\n1\nP0: 22 1 4 2 6 -1 0\n\"\"\""
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '1\\nP0: 22 1 4 2 6 -1 0\\n'\n\nsolution(stdin)"
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\") == \"1\\nP0: 22 1 4 2 6 -1 0\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1') == '1\\nP0: 22 1 4 2 6 -1 0'\n\nsolution = '''\nfrom typing import List"
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\") == \"1\\nP0: 22 1 4 2 6 -1 0\""
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1\\nP0: 22 1 4 2 6 -1 0\\n\", \"The given sample input does not satisfy the problem statement\""
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\") == \"1\\nP0: 22 1 4 2 6 -1 0\"\n\nassert solution(\"2 16 16 16\\n10 10 10 10\\n-10 -10 -10 -10\") == \"2\\nP1: 20 0 0 0 0 0 0\\nP2: 20 0 0 0 0 0 0\\nP3: 20 0 0 0 0 0 0\\nP4: 20 0 0 0 0 0 0\"\n\nassert solution(\"2 16 16 16\\n10 10 10 10\\n-10 -10 -10 -10\") == \"2\\nP1: 20 0 0 0 0 0 0\\nP2: 20 0 0 0 0 0 0\\nP3: 20 0 0 0 0 0 0\\nP4: 20 0 0 0 0 0 0\""
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_str) == output_str, f\"Input: {input_str}\\nOutput: {output_str}\\nError: Test Failed\""
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n4 7\n1 2 1\n1 2 3\n1 3 2\n1 4 1\n2 3 4\n2 4 4\n3 4 4\n3\n1 2\n1 3\n3 4\n\"\"\") == \"1\\n2\\n3\\n\""
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\\n\") == \"1\\n2\\n3\\n\""
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"Output\""
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1\\n2\\n3\""
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\\n\") == \"1\\n2\\n3\\n\""
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\\n') == ['1', '2', '3']"
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == [\"1\\n2\\n3\\n4\\n\"]"
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\\n\") == \"1\\n2\\n3\\n\"\n\nassert solution(\"4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\\n\") == \"2\\n3\\n1\\n\"\n\nassert solution(\"4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\\n\") == \"3\\n1\\n2\\n\""
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\\n') == '1\\n2\\n3\\n'"
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\\n') == '2\\n2 4 6 3 1 5\\n'"
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2\\n2\\n1\\n5\\n4\\n3\\n6\""
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2\\n2\"\n"
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"def solution(stdin: str) -> str:\\n\\tpass\""
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2\"\nassert solution(\"100001\\n1 2 3 4 5 6\") == \"1 2 3 4 5 6\"\nassert solution(\"100002\\n1 2 3 4 5 6\") == \"1 2 3 4 5 6 7 8 9 10\"\nassert solution(\"100003\\n1 2 3 4 5 6\") == \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\"\nassert solution(\"100004\\n1 2 3 4 5 6\") == \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26\"\nassert solution(\"100005\\n1 2 3 4 5 6\") == \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\""
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == ['2']"
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == 60, \"Incorrect output.\"\n"
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '60'"
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == \"60\"\nassert solution(\"5 5 1\\n1 100 1 200\\n2 300 1 400\\n3 500 2 800\") == \"-1\"\nassert solution(\"3 3 4\\n1 10 1 20\\n2 50 2 30\\n3 80 3 40\") == \"60\""
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80') == 60\n"
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3 3 2\n1 30 2 50\n2 70 3 10\n3 20 1 80\n\"\"\") == \"60\""
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"60\"\nassert solution(stdin) == \"60\""
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n3 3 2\n1 30 2 50\n2 70 3 10\n3 20 1 80\n''') == '60'\n"
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n3 3 2\n1 30 2 50\n2 70 3 10\n3 20 1 80\n''') == '60'"
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"\"\"\n"
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    3 3 2\n    1 30 2 50\n    2 70 3 10\n    3 20 1 80\n    \"\"\"\n) == \"60\""
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"Case #1: 1\\nCase #2: 2\"\n"
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"\"\"Case #1: 1\nCase #2: 2\"\"\""
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 'Case #1: 1\\nCase #2: 2\\n'"
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"\"\"\nCase #1: 1\nCase #2: 2\n\"\"\""
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2\\n3\\n10000 0 0\\n0 10000 0\\n0 0 10000\\n3\\n5000 0 0\\n0 2000 0\\n0 0 4000') == 'Case #1: 1\\nCase #2: 2\\n'\nprint(solution('2\\n3\\n10000 0 0\\n0 10000 0\\n0 0 10000\\n3\\n5000 0 0\\n0 2000 0\\n0 0 4000'))"
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    2\n    3\n    10000 0 0\n    0 10000 0\n    0 0 10000\n    3\n    5000 0 0\n    0 2000 0\n    0 0 4000\n    \"\"\"\n) == \"\"\"\nCase #1: 1\nCase #2: 2\n\"\"\"\n"
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_str) == expected_output, f\"Test case {i+1} failed. Expected: {expected_output}, Received: {solution(input_str)}\" for i, input_str, expected_output in enumerate(test_cases)"
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n3\\n10000 0 0\\n0 10000 0\\n0 0 10000\\n3\\n5000 0 0\\n0 2000 0\\n0 0 4000\") == \"Case #1: 1\\nCase #2: 2\""
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r').read()) == 'Case #1: 1\\nCase #2: 2\\n'\n"
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_output, \"Expected output: {}, Received output: {}\".format(expected_output, solution(stdin))"
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"+1 2 H 2 O 1\") == \"6 6 6 1\", \"The solution for the equation +1 2 H 2 O 1 should be 6 6 6 1.\"\nassert solution(\"+1 2 C 1 O 2\") == \"4 4 4 1\", \"The solution for the equation +1 2 C 1 O 2 should be 4 4 4 1.\"\nassert solution(\"-1 1 O 2\") == \"4 3 4 1\", \"The solution for the equation -1 1 O 2 should be 4 3 4 1.\"\nassert solution(\"-1 3 C 6 H 12 O 6\") == \"6 6 6 6\", \"The solution for the equation -1 3 C 6 H 12 O 6 should be 6 6 6 6.\"\nassert solution(\"0 0\") == \"0 0 0 0\", \"The solution for the equation 0 0 should be 0 0 0 0.\""
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 0\") == \"6 6 6 1\""
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(solution_input) == solution_output, f\"Expected {solution_output}, but got {solution(solution_input)}\""
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '6 6 6 1'"
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('example.txt', 'r')) == '6 6 6 1\\n'\nassert solution(open('example.txt', 'r').read()) == '6 6 6 1\\n'\nassert solution(open('example.txt', 'r').readlines()) == ['6 6 6 1\\n', '6 6 6 1\\n']\nassert solution(open('example.txt', 'r').readlines()) == ['6 6 6 1\\n', '6 6 6 1\\n']"
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0''') == '6 6 6 1\\n'"
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0') == ['6', '6', '6', '1']\nassert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n-1 1 O 2\\n+1 2 C 1 O 2\\n0 0') == ['6', '6', '6', '1']\nassert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n-1 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n-1 1 O 2\\n0 0') == ['6', '6', '6', '1']\nassert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n-1 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n-1 1 O 2\\n-1 1 O 2\\n0 0') == ['6', '6', '6', '1']\nassert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n-1 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n-1 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n-1 1 O 2\\n-1 1 O 2\\n0 0') == ['6', '6', '6', '1']\nassert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n-1 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n-1 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n-1 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n-1 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n-1 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n-1 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n-1 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n-1 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n-1 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n-1 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n-1 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n-1 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n-1 1 O 2\\n-1 1 O 2\\n-1"
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0\n''') == '6 6 6 1'\n\nprint('All tests passed.')"
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0\"\"\") == \"6 6 6 1\"\n"
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('+1 2 H 2 O 1') == ['6', '6', '6', '1']\nassert solution('+1 2 C 1 O 2') == ['6', '6', '1', '1']\nassert solution('-1 1 O 2') == ['-6', '-6', '-6', '-1']\nassert solution('-1 3 C 6 H 12 O 6') == ['6', '12', '6', '12']\n"
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"20.83\", \"Incorrect output for the given input.\""
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"The input consists of a single test case. The first line contains an integer N (4 <= N <= 100). The next line contains two integers D and L, where 1 <= D <= 1000 and 0 <= L <= 2000. The next N lines each contain two integers, giving the (x,y) coordinates of the vertices of the convex polygon in counterclockwise order. The absolute values of x and y are at most 1000. You may assume that the tank has a positive capacity, and you never pour more water than the tank can hold.\") == \"20.83\", \"Test case 1 failed\"\n\nassert solution(\"The input consists of a single test case. The first line contains an integer N (4 <= N <= 100). The next line contains two integers D and L, where 1 <= D <= 1000 and 0 <= L <= 2000. The next N lines each contain two integers, giving the (x,y) coordinates of the vertices of the convex polygon in counterclockwise order. The absolute values of x and y are at most 1000. You may assume that the tank has a positive capacity, and you never pour more water than the tank can hold.\") == \"20.83\", \"Test case 2 failed\"\n\nassert solution(\"The input consists of a single test case. The first line contains an integer N (4 <= N <= 100). The next line contains two integers D and L, where 1 <= D <= 1000 and 0 <= L <= 2000. The next N lines each contain two integers, giving the (x,y) coordinates of the vertices of the convex polygon in counterclockwise order. The absolute values of x and y are at most 1000. You may assume that the tank has a positive capacity, and you never pour more water than the tank can hold.\") == \"20.83\", \"Test case 3 failed\"\n\nassert solution(\"The input consists of a single test case. The first line contains an integer N (4 <= N <= 100). The next line contains two integers D and L, where 1 <= D <= 1000 and 0 <= L <= 2000. The next N lines each contain two integers, giving the (x,y) coordinates of the vertices of the convex polygon in counterclockwise order. The absolute values of x and y are at most 1000. You may assume that the tank has a positive capacity, and you never pour more water than the tank can hold.\") == \"20.83\", \"Test case 4 failed\"\n\nassert solution(\"The input consists of a single test case. The first line contains an integer N (4 <= N <= 100). The next line contains two integers D and L, where 1 <= D <= 1000 and 0 <= L <= 2000. The next N lines each contain two integers, giving the (x,y) coordinates of the vertices of the convex polygon in counterclockwise order. The absolute values of x and y are at most 1000. You may assume that the tank has a positive capacity, and you never pour more water than the tank can hold.\") == \"20.83\", \"Test case 5 failed\""
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n30 50\\n20 0\\n100 0\\n100 40\\n20 40\") == \"20.83\"\n"
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n30 50\\n20 0\\n100 0\\n100 40\\n20 40') == '20.83'"
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}, Received: {solution(input())}\""
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n30 50\\n20 0\\n100 0\\n100 40\\n20 40\\n\") == \"20.83\\n\"\n"
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"20.83\\n\"\n"
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n30 50\\n20 0\\n100 0\\n100 40\\n20 40\") == \"20.83\", \"Solution not correct.\""
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '20.83\\n', \"Test Case 1 Failed\""
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt').read()) == '20.83', \"Expected output is incorrect. Please check the solution code.\"\n"
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n1 2 5\\n7 6 4\\n9 8 3\") == \"49\""
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 3\\n1 2 5\\n7 6 4\\n9 8 3') == 49"
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n1 2 5\\n7 6 4\\n9 8 3\") == \"49\""
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n1 2 5\\n7 6 4\\n9 8 3\") == \"49\""
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n1 2 5\\n7 6 4\\n9 8 3\") == 49\nassert solution(\"4 4\\n1 2 3\\n4 5 6\") == 6\nassert solution(\"10 10\") == 0"
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n1 2 5\\n7 6 4\\n9 8 3\") == \"49\""
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"49\"\n"
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 49"
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(solution.__doc__) == \"Output: \\n49\\n\"\n"
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n1 2 5\\n7 6 4\\n9 8 3\") == \"49\\n\"\n"
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"The output is not correct. Please fix the function and re-run the tests.\""
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 15\\n##.........####\\n1\\nCROSSWORD\") == \"##CROSSWORD####\""
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Solution does not match the expected output. Input: {input()}, Output: {output()}\""
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 15\\n##.........####\\n1\\nCROSSWORD\") == \"#C##F\"\nassert solution(\"2 3\\n##.....\\n1\\n##.....\\n2\\n##.....\") == \"23\"\nassert solution(\"5 7\\n#..#..\\n1\\n#..#..\\n2\\n#..#..\\n3\\n#..#..\\n4\\n#..#..\\n5\\n#..#..\\n6\\n#..#..\\n7\\n#..#..\\n8\\n#..#..\\n9\\n#..#..\\n10\\n#..#..\\n11\\n#..#..\\n12\\n#..#..\\n13\\n#..#..\\n14\\n#..#..\\n15\\n#..#..\\n16\\n#..#..\\n17\\n#..#..\\n18\\n#..#..\\n19\\n#..#..\\n20\\n#..#..\\n21\\n#..#..\\n22\\n#..#..\\n23\\n#..#..\\n24\\n#..#..\\n25\\n#..#..\\n26\\n#..#..\\n27\\n#..#..\\n28\\n#..#..\\n29\\n#..#..\\n30\\n#..#..\\n31\\n#..#..\\n32\\n#..#..\\n33\\n#..#..\\n34\\n#..#..\\n35\\n#..#..\\n36\\n#..#..\\n37\\n#..#..\\n38\\n#..#..\\n39\\n#..#..\\n40\\n#..#..\\n41\\n#..#..\\n42\\n#..#..\\n43\\n#..#..\\n44\\n#..#..\\n45\\n#..#..\\n46\\n#..#..\\n47\\n#..#..\\n48\\n#..#..\\n49\\n#..#..\\n50\\n#..#..\\n51\\n#..#..\\n52\\n#..#..\\n53\\n#..#..\\n54\\n#..#..\\n55\\n#..#..\\n56\\n#..#..\\n57\\n#..#..\\n58\\n#..#..\\n59\\n#..#..\\n60\\n#..#..\\n61\\n#..#..\\n62\\n#..#..\\n63\\n#..#..\\n64\\n#..#..\\n65\\n#..#..\\n66\\n#..#..\\n67\\n#..#..\\n68\\n#..#..\\n69\\n#..#..\\n70\\n#..#..\\n71\\n#..#..\\n72\\n#..#..\\n73\\n#..#..\\n74\\n#..#..\\n75\\n#..#..\\n76\\n#..#..\\n77\\n#..#..\\n78\\n#..#..\\n79\\n#..#..\\n80\\n#..#..\\n81\\n#..#..\\n82\\n#..#..\\n83\\n#..#..\\n84\\n#..#..\\n85\\n#..#..\\n86\\n#..#..\\n87\\n#..#..\\n88\\n#..#..\\n89\\n#..#..\\n90\\n#..#..\\n91\\n#..#..\\n92\\n#..#..\\n93\\n#..#..\\n94\\n#..#..\\n95\\n#..#..\\n96\\n#..#..\\n97\\n#..#..\\n98\\n#..#..\\n99\\n#..#..\\n100\\n#..#..\\n101\\n#..#..\\n102\\n#..#..\\n103\\n#..#..\\n104\\n#..#..\\n105\\n#..#..\\n106\\n#..#..\\n10"
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 15\\n##.........####\\n1\\nCROSSWORD\\n\") == \"##CROSSWORD####\""
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 15\\n##.........####\\n1\\nCROSSWORD\") == \"##CROSSWORD####\""
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 15\\n##.........####\\n1\\nCROSSWORD\\n\") == \"##CROSSWORD####\""
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('sample_input.txt', 'r')) == \"\"\"\n##CROSSWORD####\n\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"Test failed for {input()}\\nExpected {output()}\\nGot {solution(input())}\""
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_output, \"Your solution is incorrect!\"\n"
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"31\"\nassert solution(input()) == \"30\"\nassert solution(input()) == \"29\"\nassert solution(input()) == \"28\"\nassert solution(input()) == \"27\"\nassert solution(input()) == \"26\"\nassert solution(input()) == \"25\"\nassert solution(input()) == \"24\"\nassert solution(input()) == \"23\"\nassert solution(input()) == \"22\"\nassert solution(input()) == \"21\"\nassert solution(input()) == \"20\""
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"31\""
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"31\", \"Test Case 1 failed\""
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 1\\n2 7 6\\n9 5 1\\n4 3 8\\n') == '31'\nassert solution('2 8 9\\n4 6 7\\n5 3 1\\n1 2 9\\n') == '31'\nassert solution('7 7 2\\n9 8 3\\n6 5 1\\n1 2 3\\n') == '20'\nassert solution('8 2 6\\n1 7 3\\n9 4 5\\n4 5 3\\n') == '31'"
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3, 1, 2, 7, 6, 9, 5, 1, 4, 3, 8) == 31, \"The correct answer is: 31\"\nassert solution(3, 101, 2, 7, 6, 9, 5, 1, 4, 3, 8) == 31, \"The correct answer is: 31\"\nassert solution(3, 101, 2, 7, 6, 9, 5, 1, 4, 3, 8) == 31, \"The correct answer is: 31\"\nassert solution(3, 101, 2, 7, 6, 9, 5, 1, 4, 3, 8) == 31, \"The correct answer is: 31\"\nassert solution(3, 101, 2, 7, 6, 9, 5, 1, 4, 3, 8) == 31, \"The correct answer is: 31\""
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin='3 1\\n2 7 6\\n9 5 1\\n4 3 8') == '31\\n'\nassert solution(stdin='3 2\\n1 8 9\\n7 4 5\\n2 3 6') == '24\\n'"
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Test case failed. Expected output: {output}, Received output: {solution(input())}\""
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 31\n"
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1\\n2 7 6\\n9 5 1\\n4 3 8\\n\") == \"31\""
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"31\""
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1\\nBBW\") == \"2\"\n"
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\\nBBW\") == \"2\""
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\\nBBW\") == \"2\"\nassert solution(\"5 3\\nWWRRRRRRRRRRRRRR\\nWWRRRRRRRRRRRRRR\\nWWRRRRRRRRRRRRRR\\nWWRRRRRRRRRRRRRR\\nWWRRRRRRRRRRRRRR\") == \"5\"\nassert solution(\"2 1\\nW\") == \"0\""
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1\\nBBW\") == 2\n"
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1\\nBBW\") == 2\nassert solution(\"3 2\\nBWW\") == 2\nassert solution(\"3 3\\nBBW\") == 2\nassert solution(\"3 4\\nBWW\") == 3\nassert solution(\"3 5\\nBBW\") == 3\nassert solution(\"3 6\\nBWW\") == 3\nassert solution(\"3 7\\nBBW\") == 3\nassert solution(\"3 8\\nBWW\") == 3\nassert solution(\"3 9\\nBWW\") == 3\nassert solution(\"3 10\\nBWW\") == 3\n"
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1\\nBBW\") == \"2\\n\"\nassert solution(\"5 1\\nBWW\") == \"2\\n\"\nassert solution(\"6 1\\nBWW\") == \"3\\n\"\nassert solution(\"1 1\\nW\") == \"1\\n\"\nassert solution(\"3 2\\nBBW\") == \"1\\n\"\nassert solution(\"5 2\\nBBW\") == \"2\\n\"\nassert solution(\"6 2\\nBBW\") == \"1\\n\""
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1\\nBBW\") == \"2\"\n\nassert solution(\"4 2\\nWWWWWWWWWWWWWWWW\") == \"8\"\n\nassert solution(\"3 2\\nBBWW\") == \"3\"\n\nassert solution(\"4 3\\nWWWWWWWWWWWWWWWW\") == \"16\"\n\nassert solution(\"5 4\\nWWWWWWWWWWWWWWWW\") == \"32\""
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1\\nBBW\") == \"2\"\n"
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1\\nBBW\\n\") == \"2\"\n"
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\n    pass\""
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"0.556\", \"Your solution is incorrect.\"\n"
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 0.556, \"The correct answer should be 0.556.\""
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"0.556\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1\\n3 2 1\\n1 2 3\") == \"0.556\"\n"
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1\\n3 2 1\\n1 2 3\\n\") == \"0.556\"\n\nfrom math import gcd"
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 1\\n3 2 1\\n1 2 3') == '0.556'"
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 0.556"
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '0.556'"
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '0.556', 'Incorrect output'"
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 4 3 2\") == \"3\"\nassert solution(\"1000 1000 1000 1000\") == \"58\""
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Input: {input()}, expected output: {expected_output}\"\n"
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 4 3 2\") == 3\nprint(\"All tests passed\")"
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 4 3 2\") == \"3\""
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"The output is incorrect. Expected: {expected_output}, got: {solution(input())}\"\n"
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 4 3 2') == '3'\n\nfrom typing import List"
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 4 3 2\") == 3, \"The output should be 3.\""
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 4 3 2') == '3'"
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 4 3 2\") == \"3\""
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == '''\n13\n'''"
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\") == \"13\"\nprint(\"All tests pass.\")"
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\") == 13\nprint(\"All tests passed!\")"
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"13\""
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\") == \"13\\n\""
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\\n') == '13'"
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\") == \"13\"\n"
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, \"Incorrect output for test case.\"\n"
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"13\""
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('10.000000 20.123456\\n1\\n13.141593 20.123456\\n') == '3.141593'\nassert solution('10.000000 20.123456\\n1\\n20.123456 20.123456\\n') == '3.141593'\nassert solution('10.000000 20.123456\\n1\\n13.141593 20.123456\\n2\\n13.141593 20.123456\\n') == '3.141593'\nassert solution('10.000000 20.123456\\n1\\n13.141593 20.123456\\n3\\n13.141593 20.123456\\n') == '3.141593'\nassert solution('10.000000 20.123456\\n1\\n13.141593 20.123456\\n4\\n13.141593 20.123456\\n5\\n13.141593 20.123456\\n') == '3.141593'\nassert solution('10.000000 20.123456\\n1\\n13.141593 20.123456\\n6\\n13.141593 20.123456\\n7\\n13.141593 20.123456\\n8\\n13.141593 20.123456\\n9\\n13.141593 20.123456\\n') == '3.141593'\nassert solution('10.000000 20.123456\\n1\\n13.141593 20.123456\\n10\\n13.141593 20.123456\\n11\\n13.141593 20.123456\\n12\\n13.141593 20.123456\\n13\\n13.141593 20.123456\\n14\\n13.141593 20.123456\\n15\\n13.141593 20.123456\\n16\\n13.141593 20.123456\\n17\\n13.141593 20.123456\\n18\\n13.141593 20.123456\\n19\\n13.141593 20.123456\\n20\\n13.141593 20.123456\\n') == '3.141593'"
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == '3.141593', 'Test case 1 failed'"
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\\n\") == \"3.141593\\n\"\nprint(\"All test cases passed.\")\n"
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 3.141593\nassert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\\n\") == 3.141593\nassert solution(\"10.000000 20.123456\\n2\\n13.141593 20.123456\\n\") == 3.141593\nassert solution(\"10.000000 20.123456\\n3\\n13.141593 20.123456\\n\") == 3.141593\nassert solution(\"10.000000 20.123456\\n4\\n13.141593 20.123456\\n\") == 3.141593\nassert solution(\"10.000000 20.123456\\n5\\n13.141593 20.123456\\n\") == 3.141593\nassert solution(\"10.000000 20.123456\\n6\\n13.141593 20.123456\\n\") == 3.141593\nassert solution(\"10.000000 20.123456\\n7\\n13.141593 20.123456\\n\") == 3.141593\nassert solution(\"10.000000 20.123456\\n8\\n13.141593 20.123456\\n\") == 3.141593\nassert solution(\"10.000000 20.123456\\n9\\n13.141593 20.123456\\n\") == 3.141593\nassert solution(\"10.000000 20.123456\\n10\\n13.141593 20.123456\\n\") == 3.141593\nassert solution(\"10.000000 20.123456\\n11\\n13.141593 20.123456\\n\") == 3.141593\nassert solution(\"10.000000 20.123456\\n12\\n13.141593 20.123456\\n\") == 3.141593\nassert solution(\"10.000000 20.123456\\n13\\n13.141593 20.123456\\n\") == 3.141593\nassert solution(\"10.000000 20.123456\\n14\\n13.141593 20.123456\\n\") == 3.141593\nassert solution(\"10.000000 20.123456\\n15\\n13.141593 20.123456\\n\") == 3.141593\nassert solution(\"10.000000 20.123456\\n16\\n13.141593 20.123456\\n\") == 3.141593\nassert solution(\"10.000000 20.123456\\n17\\n13.141593 20.1234"
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\") == 3.141593, \"Weeeee, says the fox after breaking in to the roost and killing all the chickens.\""
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '3.141593', \"The minimum distance the fox has to walk to hide all the chickens is incorrect\""
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\\n\") == 3.141593, \"Sample Output: 3.141593\"\n"
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"3.141593\", \"Incorrect output\""
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''10.000000 20.123456\n1\n13.141593 20.123456''') == 3.141593\nassert solution('''5 2\n1.1 2.2\n3.3 4.4\n-1 0\n0.5 0.5\n''') == 1.141593\nassert solution('''1 1\n1 1\n0 0\n1 1\n1 1\n''') == 1.0"
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\\n\") == \"3.141593\\n\"\nassert solution(\"5 5\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n\") == \"5.000000\\n\""
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2.13333333333333\\n\""
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n4 4\\n2\") == \"2.13333333333333\""
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n4 4\\n2') == '2.13333333333333'\n"
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2.13333333333333\""
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\n2\") == \"2.13333333333333\"\nassert solution(\"1000000000\\n1\") == \"impossible\"\nassert solution(\"3\\n2\") == \"1.50000000000000\""
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n4 4\\n2\") == \"2.13333333333333\"\nassert solution(\"3\\n4 3\\n2\") == \"impossible\""
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 4\\n2\\n') == '2.13333333333333'\nassert solution('3\\n1 2 3 4 5\\n2 3 4 5\\n3 4 5\\n') == 'impossible'\nassert solution('3\\n1 100 1 2 3 4\\n2 100 2 3 4 5\\n3 100 3 4 5 6\\n') == 'impossible'\nassert solution('3\\n1 1 1 2 3 4\\n2 1 2 3 4 5\\n3 1 3 4 5 6\\n') == 'impossible'\nassert solution('4 4\\n2\\n') == '2.13333333333333'\nassert solution('3\\n1 2 3 4 5\\n2 3 4 5\\n3 4 5\\n') == 'impossible'\nassert solution('3\\n1 100 1 2 3 4\\n2 100 2 3 4 5\\n3 100 3 4 5 6\\n') == 'impossible'\nassert solution('3\\n1 1 1 2 3 4\\n2 1 2 3 4 5\\n3 1 3 4 5 6\\n') == 'impossible'"
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n4\\n2') == '2.13333333333333'\nassert solution('3\\n2\\n1') == 'impossible'\nassert solution('1\\n3\\n2') == 'impossible'\nassert solution('2\\n2\\n1') == 'impossible'\nassert solution('3\\n5\\n3\\n1\\n2') == '2.2'"
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == \"2.13333333333333\""
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n4 4\\n2\") == \"2.13333333333333\"\nassert solution(\"3\\n4 1000000\\n2\") == \"impossible\""
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(7) == \"18\\n\"\n"
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(7) == \"18\""
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"18\""
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7\\n\") == \"18\\n\"\n"
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(7) == \"18\""
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == \"18\""
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(7) == \"18\"\nassert solution(10) == \"25\"\nassert solution(20) == \"56\"\nassert solution(50) == \"109\"\nassert solution(100) == \"220\"\nassert solution(500) == \"733\""
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(10) == \"18\"\nassert solution(1) == \"1\"\nassert solution(3) == \"11\"\nassert solution(20) == \"20\"\nassert solution(5) == \"30\"\nassert solution(25) == \"17\""
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7\") == \"18\"\n"
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 18\nprint(\"All tests passed successfully!\")"
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\\n\") == \"3\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"3\\n\"\nassert solution(open(\"input_test.txt\", \"r\")) == \"2\\n\"\nassert solution(open(\"input_sample.txt\", \"r\")) == \"3\\n\""
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == '3'\nassert solution(4) == '5'\nassert solution(5) == '6'\nassert solution(6) == '6'\nassert solution(7) == '7'\nassert solution(8) == '7'\nassert solution(9) == '9'\nassert solution(10) == '10'"
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"3\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\\n') == '3'"
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\\n\") == \"3\""
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\\n') == '3'\nassert solution('10 M manchester football\\n15 F juggling\\n20 M basketball\\n18 F volleyball\\n') == '2'"
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"3\"\n"
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\\n') == '3'\n"
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Test case {i + 1} failed: {solution(input())}!= {expected}\""
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Input:\\n{input()}\\nOutput:\\n{output}\\n\"\n"
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\") == \"2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\"5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\\n\") == \"2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\") == \"2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r').read()) == '2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, \"Expected output:\\n{}\\nActual output:\\n{}\".format(output, solution(input()))"
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\") == \"2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\""
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\") == \"2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\\nb 5\") == \"2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\\nc 5 6\") == \"2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\\nc 5 6\\nb 7\") == \"2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\\nc 5 6\\nb 7\\nc 8 9\") == \"2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\\nc 5 6\\nb 7\\nc 8 9\\nc 10 11\") == \"2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\") == \"2\\n1\\n2\\ndef solution(stdin: str) -> str:\\npass\\n\"\n\nassert solution(\"5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\\na 5\\nb 6\\nc 4 7\\nb 8\") == \"2\\n1\\n2\\ndef solution(stdin: str) -> str:\\npass\\n\"\n\nassert solution(\"5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\\na 5\\nb 6\\nc 4 7\\nb 8\\na 9\\nb 10\\nc 8 11\\nb 12\\nc 10 13\") == \"2\\n1\\n2\\ndef solution(stdin: str) -> str:\\npass\\n\"\n\nassert solution(\"5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\\na 5\\nb 6\\nc 4 7\\nb 8\\na 9\\nb 10\\nc 8 11\\nb 12\\nc 10 13\\na 14\\nb 15\\nc 13 16\\nb 17\") == \"2\\n1\\n2\\ndef solution(stdin: str) -> str:\\npass\\n\""
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    6 1\n    78 61 88 71\n    80 80 90 90\n    70 90 80 100\n    90 70 0 0\n    80 67 0 0\n    90 63 0 0\n    \"\"\"\n) == \"5\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\n    \"\"\"\n    6 2\n    78 61 88 71\n    80 80 90 90\n    70 90 80 100\n    90 70 0 0\n    80 67 0 0\n    90 63 0 0\n    \"\"\"\n) == \"5\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\n    \"\"\"\n    6 3\n    78 61 88 71\n    80 80 90 90\n    70 90 80 100\n    90 70 0 0\n    80 67 0 0\n    90 63 0 0\n    \"\"\"\n) == \"5\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\n    \"\"\"\n    6 4\n    78 61 88 71\n    80 80 90 90\n    70 90 80 100\n    90 70 0 0\n    80 67 0 0\n    90 63 0 0\n    \"\"\"\n) == \"5\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\n    \"\"\"\n    6 5\n    78 61 88 71\n    80 80 90 90\n    70 90 80 100\n    90 70 0 0\n    80 67 0 0\n    90 63 0 0\n    \"\"\"\n) == \"5\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\n    \"\"\"\n    6 6\n    78 61 88 71\n    80 80 90 90\n    70 90 80 100\n    90 70 0 0\n    80 67 0 0\n    90 63 0 0\n    \"\"\"\n) == \"5\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\n    \"\"\"\n    6 7\n    78 61 88 71\n    80 80 90 90\n    70 90 80 100\n    90 70 0 0\n    80 67 0 0\n    90 63 0 0\n    \"\"\"\n) == \"5\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\n    \"\"\"\n    6 8\n    78 61 88 71\n    80 80 90 90\n    70 90 80 100\n    90 70 0 0\n    80 67 0 0\n    90 63 0 0\n    \"\"\"\n) == \"5\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\n    \"\"\"\n    6 9\n    78 61 88 71\n    80 80 90 90\n    70 90 80 100\n    90 70 0 0\n    80 67 0 0\n    90 63 0 0\n    \"\"\"\n) == \"5\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\n    \"\"\"\n    6 10\n    78 61 88 71\n    80 80 90 90\n    70 90 80 100\n    90 70 0 0\n    80 67 0 0\n    90 63 0 0\n    \"\"\"\n) == \"5\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\n    \"\"\""
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 1\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0\") == \"5\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\"\n"
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '5\\n'\nassert solution(input()) == '5\\n'"
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 1\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0\") == \"5\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 1\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0\") == \"5\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 1\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0\") == \"5\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Test failed for input {input()} and output {output}\"\n"
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 1\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0\\n\") == \"5\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 1\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0\") == \"5\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 1\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0\") == 5, \"Your solution is incorrect.\""
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\") == 4"
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n\") == \"4\\n\"\nassert solution(\"4 5\\n1 2\\n1 3\\n2 4\\n2 3\\n\") == \"4\\n\"\nassert solution(\"5 6\\n1 2\\n1 3\\n2 4\\n2 3\\n\") == \"1\\n\"\nassert solution(\"2 2\\n1 2\\n1 3\\n2 3\\n\") == \"1\\n\"\nassert solution(\"1 1\\n1 1\\n1 1\\n1 1\\n\") == \"1\\n\""
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 4\nassert solution() == 1140286885\nassert solution() == 642182695\nassert solution() == 2897477412\nassert solution() == 1523354138"
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4') == '4\\n'\nassert solution('1 1 1 1\\n1 2 3 4') == '2\\n'\nassert solution('1 2 3 4 5') == '6\\n'\nassert solution('1 2 3 4 6') == '12\\n'\nassert solution('1 2 3 4 7') == '106\\n'"
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4') == '4\\n'\nassert solution('4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4') == '2\\n'\nassert solution('5 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n4 5') == '2\\n'"
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"4\\n\", \"Testcase 1 failed\""
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n') == '4\\n'"
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4') == '4\\n'"
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '4\\n', \"Test failed\""
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2\\n1 3\\n1 4\\n2 3\\n2 4\") == \"4\""
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\\n3 4\\n2 4\""
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\\n3 4\\n2 4\""
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n4\n1 2\n2 3\n3 4\n\"\"\") == \"2\\n3 4\\n2 4\""
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('test_data.txt', 'r')) == '2\\n3 4\\n2 4'\nassert solution(open('input.txt', 'r')) == '2\\n3 4\\n2 4'"
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"\"\"2\n3 4\n2 4\"\"\""
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\\n3 4\\n2 4\""
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\\n3 4\\n2 4\"\n"
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\\n3 4\\n2 4\""
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n1 2\\n2 3\\n3 4') == '2\\n3 4\\n2 4'\nassert solution('5\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8') == '2\\n3 4\\n2 4\\n3 5\\n4 6\\n4 7\\n5 8'"
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n1 3\\n2 1\\n3 5\\n7 2\\n\") == 5\nassert solution(\"2 2\\n1 3\\n2 1\\n3 5\\n7 2\\n4 4\\n\") == 0\n\nfrom typing import List"
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"5\"\n"
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\n1 3\\n2 1\\n3 5\\n7 2\") == \"5\\n\"\nassert solution(\"5 3\\n2 4\\n1 2\\n5 5\") == \"0\\n\"\nassert solution(\"5 5\\n5 5\\n5 5\\n5 5\") == \"0\\n\"\nassert solution(\"5 3\\n3 2\\n1 3\\n1 2\\n1 3\\n1 2\") == \"5\\n\""
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\n1 3\\n2 1\\n3 5\\n7 2\") == \"5\"\nassert solution(\"2 2\\n3 1\\n1 3\\n2 5\\n4 2\") == \"3\"\nassert solution(\"1 2\\n2 1\\n2 3\\n3 3\\n3 5\\n4 5\") == \"3\"\nassert solution(\"2 2\\n1 5\\n2 3\\n3 1\\n4 2\") == \"4\"\nassert solution(\"2 2\\n3 1\\n4 5\\n5 2\\n4 3\") == \"0\"\nassert solution(\"2 2\\n1 5\\n2 3\\n3 1\\n4 2\\n5 3\") == \"5\"\nassert solution(\"2 2\\n1 5\\n2 3\\n3 1\\n4 2\") == \"4\""
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 5\nprint(\"Test Passed\")"
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"5\""
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 5, \"Your code is missing an assertion.\"\n"
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('widget_market.txt').read()) == 5"
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 2\\n1 3\\n2 1\\n3 5\\n7 2') == '5\\n'\nassert solution('1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n') == '0\\n'"
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n1 3\\n2 1\\n3 5\\n7 2\") == 5\nprint(\"All tests passed!\")"
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n\") == 2\n"
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n') == '2'"
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2\n"
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0') == 2\nassert solution('3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 4') == 1\nassert solution('3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 5') == 0\nassert solution('3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 6') == -1\nassert solution('3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 5') == 0\nassert solution('3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 4') == 1\nassert solution('3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 5') == 0\nassert solution('3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 6') == -1"
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"Solution is incorrect.\""
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2\nassert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n100 100\") == 50\n"
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n''') == 2\n"
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2\nassert solution(stdin=\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 3\") == 0"
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input) == output\nprint(f\"Solution: {output}\")"
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"GHOST\\n\"\n"
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}\\nGot: {solution(input())}\""
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n3 C\\n2 C\\n1 C\") == \"GHOST\"\nassert solution(\"5 4\\n1 C\\n2 W\\n3 W\") == \"SAFE\""
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 3\\n3 C\\n2 C\\n1 C') == 'SAFE'\nassert solution('4 3\\n3 W\\n2 C\\n1 C') == 'GHOST'\nassert solution('4 3\\n3 W\\n2 W\\n1 C') == 'SAFE'\nassert solution('4 3\\n3 C\\n2 W\\n1 W') == 'SAFE'\nassert solution('4 3\\n3 C\\n2 W\\n1 C') == 'SAFE'\n"
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n3 C\\n2 C\\n1 C\") == \"GHOST\"\nassert solution(\"5 5\\n1 C\\n2 C\\n3 C\\n4 C\") == \"SAFE\""
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n3 C\\n2 C\\n1 C\") == \"GHOST\"\n\nassert solution(\"4 3\\n3 W\\n2 W\\n1 W\") == \"SAFE\"\n\nassert solution(\"4 3\\n3 C\\n2 C\\n1 W\") == \"SAFE\"\n\nassert solution(\"4 3\\n3 C\\n2 C\\n1 C\") == \"SAFE\""
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 3\\n3 C\\n2 C\\n1 C') == 'GHOST'\nassert solution('5 6\\n1 R\\n2 R\\n3 R\\n4 R\\n5 R\\n6 R') == 'SAFE'\n"
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 3\\n3 C\\n2 C\\n1 C\\n') == 'GHOST\\n'\nassert solution('4 3\\n3 C\\n2 C\\n1 W\\n') == 'SAFE\\n'\nassert solution('4 3\\n3 C\\n2 W\\n1 C\\n') == 'SAFE\\n'\nassert solution('4 3\\n3 W\\n2 C\\n1 C\\n') == 'SAFE\\n'\nassert solution('4 3\\n3 W\\n2 C\\n1 W\\n') == 'GHOST\\n'\nassert solution('4 3\\n3 W\\n2 W\\n1 C\\n') == 'GHOST\\n'"
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n3 C\\n2 C\\n1 C\") == \"GHOST\"\nassert solution(\"4 3\\n3 W\\n2 W\\n1 W\") == \"SAFE\""
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(r\"\"\"\n    4 3\n    3 C\n    2 C\n    1 C\n\"\"\") == \"SAFE\"\n\nassert solution(r\"\"\"\n    4 3\n    3 C\n    2 W\n    1 W\n\"\"\") == \"GHOST\"\n\nassert solution(r\"\"\"\n    4 3\n    3 C\n    1 W\n    2 W\n\"\"\") == \"SAFE\"\n\nassert solution(r\"\"\"\n    4 3\n    3 C\n    1 W\n    2 C\n\"\"\") == \"GHOST\""
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '2'"
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n0.00 2.00\") == \"2\\n\"\nassert solution(\"1 1\\n1.00 1.00\") == \"no fika\\n\"\nassert solution(\"1 2\\n0.01 0.01\") == \"2\\n\"\nassert solution(\"1 3\\n0.01 0.01\") == \"no fika\\n\"\nassert solution(\"1 4\\n0.01 0.01\") == \"no fika\\n\"\nassert solution(\"1 5\\n0.01 0.01\") == \"no fika\\n\"\nassert solution(\"1 6\\n0.01 0.01\") == \"no fika\\n\"\nassert solution(\"1 7\\n0.01 0.01\") == \"no fika\\n\"\nassert solution(\"1 8\\n0.01 0.01\") == \"no fika\\n\"\nassert solution(\"1 9\\n0.01 0.01\") == \"no fika\\n\"\nassert solution(\"1 10\\n0.01 0.01\") == \"no fika\\n\"\nassert solution(\"1 11\\n0.01 0.01\") == \"no fika\\n\"\nassert solution(\"1 12\\n0.01 0.01\") == \"no fika\\n\"\nassert solution(\"1 13\\n0.01 0.01\") == \"no fika\\n\"\nassert solution(\"1 14\\n0.01 0.01\") == \"no fika\\n\"\nassert solution(\"1 15\\n0.01 0.01\") == \"no fika\\n\"\nassert solution(\"1 16\\n0.01 0.01\") == \"no fika\\n\"\nassert solution(\"1 17\\n0.01 0.01\") == \"no fika\\n\"\nassert solution(\"1 18\\n0.01 0.01\") == \"no fika\\n\"\nassert solution(\"1 19\\n0.01 0.01\") == \"no fika\\n\"\nassert solution(\"1 20\\n0.01 0.01\") == \"no fika\\n\"\nassert solution(\"1 21\\n0.01 0.01\") == \"no fika\\n\"\nassert solution(\"1 22\\n0.01 0.01\") == \"no fika\\n\"\nassert solution(\"1 23\\n0.01 0.01\") == \"no fika\\n\"\nassert solution(\"1 24\\n0.01 0.01\") == \"no fika\\n\"\nassert solution(\"1 25\\n0.01 0.01\") == \"no fika\\n\"\nassert solution(\"1 26\\n0.01 0.01\") == \"no fika\\n\"\nassert solution(\"1 27\\n0.01 0.01\") == \"no fika\\n\"\nassert solution(\"1 28\\n0.01 0.01\") == \"no fika\\n\"\nassert solution(\"1 29\\n0.01 0.01\") == \"no fika\\n\"\nassert solution(\"1 30\\n0.01 0.01\") == \"no fika\\n\"\nassert solution(\"1 31\\n0.01 0.01\") == \"no fika\\n\"\nassert solution(\"1 32\\n0.01 0.01\") == \"no fika\\n\"\nassert solution(\"1 33\\n0.01 0.01\") == \"no fika\\n\"\nassert solution(\"1 34\\n0.01 0.01\") == \"no fika\\n\"\nassert solution(\"1 35\\n0.01 0.01\") == \"no fika\\n\"\nassert solution(\"1 36\\n0.01 0.01\") == \"no fika\\n\"\nassert solution(\"1"
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == '2\\n'\nassert solution(sample_output) == '2\\n'"
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\", \"Your implementation is wrong\"\nprint(\"Correct\")"
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 3\\n0.00 2.00\\n') == '2'"
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n0.00 2.00\") == \"2\""
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n0.00 2.00\") == \"2\\n\"\nassert solution(\"3 3\\n1.00 1.00\\n1.00 0.00\") == \"no fika\\n\"\nassert solution(\"3 3\\n1.00 0.50\\n0.50 0.50\") == \"2\\n\"\nassert solution(\"3 3\\n0.10 0.10\\n0.10 0.10\") == \"no fika\\n\"\nassert solution(\"3 3\\n0.10 0.05\\n0.10 0.10\") == \"2\\n\"\nassert solution(\"3 3\\n0.10 0.00\\n0.10 0.10\") == \"no fika\\n\"\nassert solution(\"3 3\\n0.00 0.00\\n0.00 0.00\") == \"no fika\\n\""
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n0.00 2.00\") == \"2\""
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"The output is '{solution(input())}' but the expected output is '{output}'.\""
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\""
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''2\n0 0\n10 0\n2\n30 0\n15 0''') == '10\\n'"
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\\n') == '10'\n"
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 0\\n10 0\\n2\\n30 0\\n15 0\\n\") == \"10\\n\"\n"
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\\n') == '10\\n'\nassert solution('2\\n0 0\\n10 0\\n2\\n30 0\\n15 -1\\n') == '10\\n'\nassert solution('2\\n0 0\\n10 0\\n2\\n30 0\\n-15 0\\n') == '10\\n'\nassert solution('2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\\n') == '10\\n'\nassert solution('2\\n0 0\\n10 0\\n2\\n30 0\\n-15 0\\n') == '10\\n'"
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 10\n"
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"10\", \"The solution is incorrect\""
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\\n\"\nassert solution(\"2\\n30 0\\n15 0\\n0 0\") == \"10\\n\"\nassert solution(\"2\\n30 0\\n15 0\\n10 0\") == \"10\\n\"\nassert solution(\"2\\n30 0\\n15 0\\n10 20\") == \"20\\n\"\n"
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\\n\"\nassert solution(\"1\\n0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"2\\n\"\nassert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\\n3\\n20 0\\n12 0\\n2\\n40 0\\n8 0\\n2\\n50 0\\n16 0\\n\") == \"12\\n\""
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"10\", \"Please implement the solution function\"\n"
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 4\\n\") == \"0\\n\"\n\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 4\\n\") == \"0\\n\""
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('8 3\\nW 10 0\\nW 10 3\\nE 17 4') == '0\\n'"
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('8 3\\nW 10 0\\nW 10 3\\nE 17 4\\n') == '0\\n'\n\nassert solution('10 3\\nW 10 0\\nW 10 3\\nE 17 4\\n') == '2\\n'\n\nassert solution('20 3\\nW 10 0\\nW 10 3\\nE 17 4\\n') == '0\\n'\n\nassert solution('100 3\\nW 10 0\\nW 10 3\\nE 17 4\\n') == '0\\n'"
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"0\", \"Expected output 0 but got {}\".format(solution(input()))"
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 4\") == \"0\\n\"\nassert solution(\"10 0\\n10 3\\n17 4\") == \"0\\n\"\nassert solution(\"10 0\\n10 0\\n17 4\") == \"0\\n\"\nassert solution(\"10 0\\n10 3\\n17 4\") == \"2\\n\"\nassert solution(\"10 0\\n10 3\\n17 4\") == \"2\\n\"\nassert solution(\"10 0\\n10 3\\n17 4\") == \"2\\n\""
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Per is repairing roads.\\nThe job is concentrated on roads with one lane in each direction. Thus, when Per closes down the lane in one direction, all traffic has to go through the other lane. This is done by allowing only one direction of travel at any time. Per is often assigned the task of directing the traffic through this lane.\\n\\nNo car drives before being given a \\\"go\\\" signal from Per, and all the cars drive through the maintained segment at the same speed. Because there is only one lane, cars in one direction must leave the segment before cars in the other direction can enter. For safety reasons, cars driving in the same direction have to keep a distance of at least $3$ seconds between each other.\\n\\nFor example, if cars A and B arrive at the west endpoint at second 10, Per can let them go at earliest second 10 and 13 in the order they arrived. If it, in this example, takes 8 seconds to pass and car C arrives at the east endpoint at second 17, then car C has to wait 4 seconds until Per lets it go at second 21.\\n\\nThere is a problem of drivers getting irritated with Per; they think they have to stop for too long. Per has been logging how long they can bear to wait before they get irritated. One day, to be able to evaluate his work, Per noted down when the cars arrived at the two endpoints of the segment. Per's question is the following: what is the least number of drivers that can be irritated? We assume that a driver gets irritated if the time between the moment he arrives at the maintained segment and the moment he is actually given the \\\"go\\\" exceeds his irritation time limit.\\n\\n-----Input-----\\nThe first line of the input contains two integers $t$ and $n$ ($4 \\leq t \\leq 180$ and $1\\leq n\\leq 250$), where $t$ is the time in seconds needed for a car to pass the segment under maintenance, and $n$ is the total number of cars arriving at the segment. The following $n$ lines describe the cars. The $i$-th line contains the description of the $i$-th car in the following format: \\n - one character $d$, being W for cars arriving at the west endpoint of the segment, and E for the ones that arrive at the east endpoint; and \\n - two integers $a$ and $r$ ($0 \\leq a < 86400$ and $0 \\leq r \\leq 3600$), where $a$ denotes the arrival time in seconds after midnight, and $r$ denotes the time in seconds it takes for the driver to get irritated.\\n\\nThe cars arrive in the order specified in the input and they cannot overtake each other. In particular, a car whose driver is already irritated has to stay in the queue until eventually receiving the \\\"go\\\" and passing the maintained segment.\\n\\n-----Output-----\\nOutput one line with the least possible number of irritated drivers.\\n\\n-----Examples-----\\nSample Input:\\n8 3\\nW 10 0\\nW 10 3\\nE 17 4\\nSample Output:0\\n\") == 0, \"The solution should return 0, but got {solution('Per is repairing roads.\\nThe job is concentrated on roads with one lane in each direction. Thus, when Per closes down the lane in one direction, all traffic has to go through the other lane. This is done by allowing only one direction of travel at any time. Per is often assigned the task of directing the traffic through this lane.\\n\\nNo car drives before being given a \\\"go\\\" signal from Per, and all the cars drive through the maintained segment at the same speed. Because there is only one lane, cars in one direction must leave the segment before cars in the other direction can enter. For safety reasons, cars driving in the same direction have to keep a distance of at least $3$ seconds between each other.\\n\\nFor example, if cars A and B arrive at the west endpoint at second 10, Per can let them go at earliest second 10 and 13 in the order they arrived. If it, in this example, takes 8 seconds to pass and car C arrives at the east endpoint at second 17, then car C has to wait 4 seconds until Per lets it go at second 21.\\n\\nThere is a problem of drivers getting irritated with Per; they think"
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('8 3\\nW 10 0\\nW 10 3\\nE 17 4\\n') == '0\\n'\nassert solution('8 4\\nW 10 0\\nW 10 3\\nW 17 4\\n') == '2\\n'"
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('8 3\\nW 10 0\\nW 10 3\\nE 17 4') == '0'\nprint('All tests passed')"
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"0\\n\", \"Incorrect output\"\n"
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('W 10 0\\nW 10 3\\nE 17 4') == '0\\n'\n"
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 10\") == \"3\""
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 10') == '3\\n'"
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 10\") == \"3\""
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 10\") == \"3\\n\"\nassert solution(\"3\\n4\\n5\\n6\\n7\") == \"0\\n\"\nassert solution(\"5\\n20\\n30\\n40\\n50\") == \"0\\n\"\n"
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 10\\n\") == \"3\\n\"\nassert solution(\"5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 10\\n\") == \"3\\n\""
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"3\""
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 10\\n\") == 3\n"
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"3\\n\", \"Expected output: 3\\n\""
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 10\\n\") == 3\nassert solution(\"1\\n5 8\\n5 6\\n3 4\\n5 13\\n6 10\\n\") == 0"
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 10\") == \"3\""
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 4\\n10 3 3') == 'impossible'\nassert solution('4 4\\n4 3 2') == 'BBCBABABBBABAB'\nassert solution('4 4\\n5 3 3') == 'ABCBABCBACBAC'\nassert solution('4 4\\n4 4 4') == 'ABABABABABAB'"
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 4\\n10 3 3') == 'impossible'"
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4\\n10 3 3\") == \"impossible\"\nassert solution(\"1 4 2\\n2 3 4\") == \"ABCB\"\nassert solution(\"5 4\\n10 1 5\") == \"ABCABABC\"\nassert solution(\"7 4\\n6 7 5\") == \"ABACBDAB\"\nassert solution(\"8 4\\n6 8 6\") == \"ABADAB\""
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution() == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution() == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution() == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution() == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution() == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution() == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution() == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution() == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution() == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution() == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution() == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution() == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution() == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution() == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution() == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution() == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution() == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution() == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution() == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution() == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution() == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution() == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution() == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution() == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution() == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution() == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution() == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution() == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution() == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution() == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution() == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution() == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution() == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution() == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution() == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution() == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution() == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution() == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution() == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution() == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution() == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution() == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution() == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution() == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution() == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution() == \"def solution(stdin: str) -> str"
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\n10 3 3\") == \"impossible\"\nprint(\"pass\")\n"
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input) == expected, f\"Test case {test_case_num} failed: expected {expected}, got {solution(input)}\"\nfor test_case_num, input, expected in tests:\n    test_case_num += 1\n    print(f\"Test case {test_case_num}:\")\n    assert solution(input) == expected, f\"Test case {test_case_num} failed: expected {expected}, got {solution(input)}\""
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\n10 3 3\") == \"impossible\"\nassert solution(\"4 4\\n1 3 3\") == \"6C2B1\"\nassert solution(\"4 4\\n2 1 3\") == \"6C2B1\"\nassert solution(\"4 4\\n1 1 1\") == \"6C2B1\""
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 'impossible'  # Add your code here\nassert solution() == ''  # Add your code here\nassert solution() == ''  # Add your code here\nassert solution() == ''  # Add your code here\nassert solution() == ''  # Add your code here"
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\n10 3 3\\n\") == \"impossible\"\nassert solution(\"5 5\\n10 3 3\\n\") == \"impossible\"\nassert solution(\"10 10\\n10 3 3\\n\") == \"impossible\"\nassert solution(\"10 3 3\\n10 10 3\\n\") == \"impossible\""
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n10 3 3\") == \"impossible\""
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"11\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\\n\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\\n\"\nassert solution(\"11\\nA\\nB\\nC\\nD\\nE\\nF\\nG\\nH\\nI\\nJ\\nK\\nL\\nM\\nN\\nO\\nP\\nQ\\nR\\nS\\nT\\nU\\nV\\nW\\nX\\nY\\nZ\\n\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\\n\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\\n\"\nassert solution(\"11\\n\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\\n\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\\n\"\nassert solution(\"11\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\\n\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\\n\"\nassert solution(\"11\\n\\n\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\\n\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\\n\"\nassert solution(\"11\\n\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\"
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(solution_input) == solution_output, f\"Test failed for {solution_input}\\nExpected: {solution_output}\\nActual: {solution(solution_input)}\""
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('test_input.txt').read()) == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\n"
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(Solution().solve(input())) == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'"
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution([11, \"BETWEEN\", \"SUBTLE\", \"SHADING\", \"AND\", \"THE\", \"ABSENCE\", \"OF\", \"LIGHT\", \"LIES\", \"NUANCE\", \"IQLUSION\", \"BTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\"]) == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\""
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n    11\n        BETWEEN\n        SUBTLE\n        SHADING\n        AND\n        THE\n        ABSENCE\n        OF\n        LIGHT\n        LIES\n        NUANCE\n        IQLUSION\n        BTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN''') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\\n'\n\nassert solution('''\n    1\n        CAVES\n        AS\n        A\n        BETWEEN\n        SUBTLE\n        SHADING\n        AND\n        THE\n        ABSENCE\n        OF\n        LIGHT\n        LIES\n        NUANCE\n        IQLUSION\n        BTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN''') == 'CAVES AS A BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\\n'\n\nassert solution('''\n    10\n        EARTH\n        AS\n        A\n        BETWEEN\n        SUBTLE\n        SHADING\n        AND\n        THE\n        ABSENCE\n        OF\n        LIGHT\n        LIES\n        NUANCE\n        IQLUSION\n        BTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN''') == 'EARTH AS A BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\\n'\n\nassert solution('''\n    11\n        EARTH\n        AS\n        A\n        BETWEEN\n        SUBTLE\n        SHADING\n        AND\n        THE\n        ABSENCE\n        OF\n        LIGHT\n        LIES\n        NUANCE\n        IQLUSION\n        BTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN''') == 'EARTH AS A BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\\n'\n\nassert solution('''\n    1\n        CAVES\n        AS\n        A\n        BETWEEN\n        SUBTLE\n        SHADING\n        AND\n        THE\n        ABSENCE\n        OF\n        LIGHT\n        LIES\n        NUANCE\n        IQLUSION\n        BTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN''') == 'CAVES AS A BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\\n'\n\nassert solution('''\n    1\n        CAVES\n        AS\n        A\n        BETWEEN\n        SUBTLE\n        SHADING\n        AND\n        THE\n        ABSENCE\n        OF\n        LIGHT\n        LIES\n        NUANCE\n        IQLUSION\n        BTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN''') == 'CAVES AS A BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\\n'"
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Actual output: {solution(input())}\""
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n\"\"\"\n) == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\""
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n\"\"\"\n) == \"\"\"\nBETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\n"
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\""
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abrahellehhelleh\") == 12"
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('abrahellehhelleh') == 12\n"
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('abrahellehhelleh') == 12, \"The output should be 12.\""
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abrahellehhelleh\") == 12, \"The output should be 12.\"\n\nfrom typing import List"
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('abrahellehhelleh') == 12\nassert solution('rachelhellabracadabra') == 0"
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abrahellehhelleh\") == \"12\"\nassert solution(\"rachelhellabracadabra\") == \"0\""
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('abrahellehhelleh') == 12\n"
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abrahellehhelleh\") == 12, \"Failed\""
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abrahellehhelleh\") == 12, \"Incorrect output\""
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abrahellehhelleh\") == \"12\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"70\""
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"70\""
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"70\\n\"\n"
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n\") == \"70\"\n"
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"70\""
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(str(input())) == expected\n"
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin: str) == \"70\""
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"70\\n\"\n\nsolution(\"65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\")\n"
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"Got '{solution(stdin)}', expected '{expected}'\""
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '70'\n"
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\") == \"10\\n7\\n8\\n7\"\nassert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\") == \"10\\n7\\n8\\n7\"\nassert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\") == \"10\\n7\\n8\\n7\""
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\") == \"10\\n7\\n8\\n7\"\nassert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\") == \"10\\n7\\n8\\n7\"\nassert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\") == \"10\\n7\\n8\\n7\"\nassert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\") == \"10\\n7\\n8\\n7\"\nassert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\") == \"10\\n7\\n8\\n7\"\nassert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\") == \"10\\n7\\n8\\n7\"\nassert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\") == \"10\\n7\\n8\\n7\"\nassert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\") == \"10\\n7\\n8\\n7\"\nassert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\") == \"10\\n7\\n8\\n7\"\nassert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\") == \"10\\n7\\n8\\n7\"\nassert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\") == \"10\\n7\\n8\\n7\"\nassert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\") == \"10\\n7\\n8\\n7\"\nassert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\") == \"10\\n7\\n8\\n7\"\nassert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\") == \"10\\n7\\n8\\n7\"\nassert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\") == \"10\\n7\\n8\\n7\"\nassert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\") == \"10\\n7\\n8\\n7\"\nassert solution"
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n\") == \"10\\n7\\n8\\n7\\n\"\n"
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n10 5\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9\n0 1\n0 4\n1 4\n0 1\n0 4\n''') == '''\n10\n7\n8\n7\n'''"
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"10\\n7\\n8\\n7\\n\"\nassert solution(stdin) == \"10\\n7\\n8\\n7\\n\""
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"10 5\\n\"\n    \"1 2 3 4 5 6 7 8 9 10\\n\"\n    \"1 2 3 4 5 6 7 8 9\\n\"\n    \"0 1\\n\"\n    \"0 4\\n\"\n    \"1 4\\n\"\n    \"0 1\\n\"\n    \"0 4\\n\"\n) == \"10\\n7\\n8\\n7\\n\"\n\nassert solution(\n    \"10 5\\n\"\n    \"1 2 3 4 5 6 7 8 9 10\\n\"\n    \"1 2 3 4 5 6 7 8 9\\n\"\n    \"0 1\\n\"\n    \"0 4\\n\"\n    \"1 4\\n\"\n    \"0 1\\n\"\n    \"0 4\\n\"\n) == \"10\\n7\\n8\\n7\\n\"\n\nassert solution(\n    \"10 5\\n\"\n    \"1 2 3 4 5 6 7 8 9 10\\n\"\n    \"1 2 3 4 5 6 7 8 9\\n\"\n    \"0 1\\n\"\n    \"0 4\\n\"\n    \"1 4\\n\"\n    \"0 1\\n\"\n    \"0 4\\n\"\n) == \"10\\n7\\n8\\n7\\n\"\n\nassert solution(\n    \"10 5\\n\"\n    \"1 2 3 4 5 6 7 8 9 10\\n\"\n    \"1 2 3 4 5 6 7 8 9\\n\"\n    \"0 1\\n\"\n    \"0 4\\n\"\n    \"1 4\\n\"\n    \"0 1\\n\"\n    \"0 4\\n\"\n) == \"10\\n7\\n8\\n7\\n\""
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"10\\n7\\n8\\n7\\n\""
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n\") == \"10\\n7\\n8\\n7\\n\"\nassert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n\") == \"10\\n7\\n8\\n7\\n\""
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''10 5\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9\n0 1\n0 4\n1 4\n0 1\n0 4''') == '10\\n7\\n8\\n7\\n'\n\nassert solution('''10 5\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9\n0 1\n0 4\n1 4\n0 1\n0 4''') == '10\\n7\\n8\\n7\\n'"
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n\") == \"10\\n7\\n8\\n7\\n\""
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"6\\n\"\n"
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"6\\n\"\n"
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\") == \"6\\n\""
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, \"The solution does not match the expected output.\""
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1') == '6'"
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 6, \"Your solution is not correct.\""
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\") == \"6\\n\"\nassert solution(\"2 2 1\\n0 1\") == \"1\\n\"\nassert solution(\"1 1 2\\n0 0\\n1 0\") == \"2\\n\"\nassert solution(\"5 3 4\\n1 1\\n2 1\\n3 2\\n4 3\") == \"2\\n\"\n"
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\") == \"6\""
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n2 4 7\n-2 0\n0 -1\n-2 1\n1 0\n2 1\n2 3\n3 -1\n\"\"\") == \"6\\n\""
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_data) == expected_output, \"Your function is incorrect.\""
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"The solution for the given input is {solution(input())}, which is incorrect.\""
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1 4 40\") == \"3\\n\", \"Please provide the correct input\""
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '3'"
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 3\nassert solution() == 3"
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1 4 40\") == \"3\\n\""
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1 4 40\") == \"3\\n\"  # output: \"3\\n\"\nassert solution(\"2 2 0 100\") == \"4\\n\"  # output: \"4\\n\"\nassert solution(\"3 1.5 4 50\") == \"4\\n\"  # output: \"4\\n\"\nassert solution(\"2 0 4 60\") == \"4\\n\"  # output: \"4\\n\"\nassert solution(\"3 1 0 0\") == \"0\\n\"  # output: \"0\\n\"\nassert solution(\"2 0 4 70\") == \"4\\n\"  # output: \"4\\n\"\nassert solution(\"3 2 4 50\") == \"4\\n\"  # output: \"4\\n\"\nassert solution(\"2 0 4 80\") == \"4\\n\"  # output: \"4\\n\"\nassert solution(\"3 2 4 60\") == \"4\\n\"  # output: \"4\\n\"\nassert solution(\"2 0 4 90\") == \"4\\n\"  # output: \"4\\n\"\nassert solution(\"3 1 4 70\") == \"4\\n\"  # output: \"4\\n\"\nassert solution(\"2 0 4 100\") == \"4\\n\"  # output: \"4\\n\"\nassert solution(\"3 2 4 80\") == \"4\\n\"  # output: \"4\\n\"\nassert solution(\"2 0 4 110\") == \"4\\n\"  # output: \"4\\n\"\nassert solution(\"3 2 4 90\") == \"4\\n\"  # output: \"4\\n\""
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1 4 40\") == \"3\"\n"
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1 4 40\\n1\\n4\\n40\") == \"3\"\nassert solution(\"3 1 4 40\\n4\\n40\") == \"4\"\nassert solution(\"3 1 4 40\\n3\\n40\") == \"4\"\nassert solution(\"3 1 4 40\\n4\\n30\") == \"4\"\nassert solution(\"3 1 4 40\\n10\\n40\") == \"4\"\nassert solution(\"3 1 4 40\\n4\\n30\") == \"5\"\nassert solution(\"3 1 4 40\\n1\\n30\") == \"5\"\nassert solution(\"3 1 4 40\\n4\\n30\") == \"5\"\nassert solution(\"3 1 4 40\\n1\\n30\") == \"5\""
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1 4 40\") == \"3\\n\"  # Example Output"
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1 4 40\") == \"3\\n\"\n"
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\") == \"99\"\nassert solution(\"1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\") == \"0\"\nassert solution(\"1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\") == \"0\""
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == sample_output, f\"sample_output: {sample_output}, sample_input: {sample_input}\"\n\nsample_input = \"\"\"\n3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0\n\"\"\"\n\nsample_output = \"99\\n3\""
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Output: {solution(input())}, Expected Output: {expected_output}\""
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\") == \"99\\n3\""
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\") == \"99\\n3\"\nassert solution(\"5 5\\n1 1 2 3 4\\n2 2 3 4 5\\n3 3 4 5 6\\n4 4 5 6 7\") == \"0\"\nassert solution(\"3 120\\n0 1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10 11\\n2 3 4 5 6 7 8 9 10 11 12\\n3 4 5 6 7 8 9 10 11 12 13\\n4 5 6 7 8 9 10 11 12 13 14\\n5 6 7 8 9 10 11 12 13 14 15\\n6 7 8 9 10 11 12 13 14 15 16\\n7 8 9 10 11 12 13 14 15 16 17\\n8 9 10 11 12 13 14 15 16 17 18\\n9 10 11 12 13 14 15 16 17 18 19\\n10 11 12 13 14 15 16 17 18 19 20\") == \"0\"\nassert solution(\"3 5\\n1 2 3 4 5\\n2 3 4 5 6\\n3 4 5 6 7\\n4 5 6 7 8\") == \"0\"\nassert solution(\"2 10\\n1 2 3 4 5\\n2 3 4 5 6\\n3 4 5 6 7\\n4 5 6 7 8\") == \"0\"\nassert solution(\"3 15\\n1 2 3 4 5 6\\n2 3 4 5 6 7\\n3 4 5 6 7 8\\n4 5 6 7 8 9\\n5 6 7 8 9 10\") == \"0\"\nassert solution(\"3 20\\n1 2 3 4 5 6 7 8 9 10\\n2 3 4 5 6 7 8 9 10 11\\n3 4 5 6 7 8 9 10 11 12\\n4 5 6 7 8 9 10 11 12 13\\n5 6 7 8 9 10 11 12 13 14\\n6 7 8 9 10 11 12 13 14 15\\n7 8 9 10 11 12 13 14 15 16\\n8 9 10 11 12 13 14 15 16 17\\n9 10 11 12 13 14 15 16 17 18\\n10 11 12 13 14 15 16 17 18 19\\n11 12 13 14 15 16 17 18 19 20\") == \"0\"\nassert solution(\"1 3\\n1 2 "
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\") == \"99\\n3\""
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"99\"\nassert solution() == \"3\""
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"\"\"99\"\"\""
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_str) == output_str, \"Testcase failed. Expected output: '{}', got '{}'.\".format(output_str, solution(input_str))"
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(None) == \"Invalid input\""
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Output {output()} is not correct.\"\n"
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\\n3 4\\n4 2\""
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n1 2\\n2 3\\n3 4') == '2\\n3 4\\n4 2'\n"
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\n1 2\\n2 3\\n3 4') == '2\\n3 4\\n4 2'\n\nimport heapq"
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n1 2\\n2 3\\n3 4') == '2\\n3 4\\n4 2'\n"
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\\n3 4\\n4 2\"\n"
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\\n3\\n4\") == \"2\\n3 4\\n4 2\"\n"
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2\\n3 4\\n4 2\""
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"output\"\n"
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '9.0000\\n12\\n12.00000\\n9.0\\n'"
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, but got {solution(input())}\""
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '9.0000'\nassert solution(stdin) == '12'\nassert solution(stdin) == '12.00000'\nassert solution(stdin) == '9.0'"
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected, f\"Expected: '{expected}', got: '{solution(stdin)}'\""
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '9.0000', \"Test Case 1 failed\"\nassert solution() == '12', \"Test Case 2 failed\"\nassert solution() == '12.00000', \"Test Case 3 failed\"\nassert solution() == '9.0', \"Test Case 4 failed\""
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"9.0000\"\nassert solution(4) == \"12\"\nassert solution(5) == \"12.00000\"\nassert solution(6) == \"9.0\""
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(2) == 12\nassert solution(3) == 12\nassert solution(4) == 12\nassert solution(5) == 9"
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 1\\n2 2\\n3 2\\n4 1\") == \"9.0000\\n12\\n12.00000\\n9.0\"\n"
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"9.0000\", \"Test Case 1 Failed\"\nassert solution() == \"12\", \"Test Case 2 Failed\"\nassert solution() == \"12.00000\", \"Test Case 3 Failed\"\nassert solution() == \"9.0\", \"Test Case 4 Failed\"\nassert solution() == \"9.00000\", \"Test Case 5 Failed\""
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == sample_output, f\"Test case {i + 1} failed.\"\n"
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(2) == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\"\n\nassert solution(10) == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\"\n\nassert solution(256) == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\nST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\""
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\"\nassert solution(\"256\\n\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\"\nassert solution(\"256\\n256\\n\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\"\nassert solution(\"256\\n256\\n256\\n\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\""
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == sample_output, \"Incorrect output. Please check the solution.\""
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin='2\\n') == 'ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n'\nassert solution(stdin='10\\n') == 'ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n'\nassert solution(stdin='255\\n') == 'ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n'"
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(5) == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\"\nassert solution(2) == \"ST A\\nST X\\nPH A\\nPH X\\nDI Y\\n\""
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\"\nassert solution(\"5\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\"\nassert solution(\"7\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\"\nassert solution(\"10\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\"\nassert solution(\"15\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\"\nassert solution(\"20\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\"\nassert solution(\"25\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\"\nassert solution(\"30\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\"\nassert solution(\"40\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\nDI\""
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\n') == 'ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n'\nprint(solution('2'))"
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == \"ST A\"\nassert solution(10) == \"ST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\"\nassert solution(100) == \"ST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A"
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(2) == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"def solution(stdin: str) -> str:\\n    pass\\n\\ndef solution2(stdin: str) -> str:\\n    pass\\n\\ndef solution3(stdin: str) -> str:\\n    pass\\n\\ndef solution4(stdin: str) -> str:\\n    pass\\n\\ndef solution5(stdin: str) -> str:\\n    pass\\n\\n\\n\""
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '2\\n'\nassert solution(input()) == '2\\n'"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\\n\") == 2, \"Expected output is 2 but got {}\".format(solution(\"1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\\n\"))\n"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 2, \"The solution is not correct\""
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 2\nassert solution() == 2"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\") == 2"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n1 5 6\n0000 FFFF 0000 0000 0000 0000\nFFFF FFFF 0000 FFFF FFFF 0000\n0000 0000 0000 FFFF 0000 0000\n0000 FFFF FFFF FFFF FFFF 0000\n0000 0000 0000 0000 0000 0000\n''') == '2'\n\nprint('All tests passed.')"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"2\", \"Test failed\""
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000') == '2'\n"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2\\n\"\nassert solution(input()) == \"2\\n\""
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n1 5 6\n0000 FFFF 0000 0000 0000 0000\nFFFF FFFF 0000 FFFF FFFF 0000\n0000 0000 0000 FFFF 0000 0000\n0000 FFFF FFFF FFFF FFFF 0000\n0000 0000 0000 0000 0000 0000\n''') == 2\n"
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 'abaaba'\nassert solution() == 'NONE'\nassert solution() == 'abbbbbbbbbbbbbbbbba'\nassert solution() == 'a'"
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, but got: {solution(input())}\"\n"
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\nwhere are the abaaba palindromes on this line\\none on this line\\how about this aaaaaaabbbbbbbbbbbbbbbbba\\neven a single a or b is a palindrome\\n') == 'abaaba\\nNONE\\nabbbbbbbbbbbbbbbbba\\na\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n5\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\neven a single a or b is a palindrome\n\"\"\"\n) == 'abaaba'\n\nassert solution(\n\"\"\"\n5\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\neven a single a or b is a palindrome\n\"\"\"\n) == 'NONE'\n\nassert solution(\n\"\"\"\n5\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\neven a single a or b is a palindrome\n\"\"\"\n) == 'abbbbbbbbbbbbbbbbba'\n\nassert solution(\n\"\"\"\n5\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\neven a single a or b is a palindrome\n\"\"\"\n) == 'a'\n\nassert solution(\n\"\"\"\n5\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\neven a single a or b is a palindrome\n\"\"\"\n) == 'def solution(stdin: str) -> str:\\npass\\n'"
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\naSa -> aSa\\naSa -> bSb\\na -> a\\na -> b\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na"
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS ->\\nwhere are the abaaba palindromes on this line\\none on this line\\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\\neven a single a or b is a palindrome\\n\") == \"abaaba\"\nassert solution(\"5\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS ->\\nwhere are the abaaba palindromes on this line\\none on this line\\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\\neven a single a or b is a palindrome\\n\") == \"NONE\"\nassert solution(\"5\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS ->\\nwhere are the abaaba palindromes on this line\\none on this line\\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\\neven a single a or b is a palindrome\\n\") == \"abbbbbbbbbbbbbbbbba\"\nassert solution(\"5\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS ->\\nwhere are the abaaba palindromes on this line\\none on this line\\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\\neven a single a or b is a palindrome\\n\") == \"a\""
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'abaaba'\nassert solution(stdin) == 'NONE'\nassert solution(stdin) == 'abbbbbbbbbbbbbbbbba'\nassert solution(stdin) == 'a'\n"
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"tests/test_input.txt\", \"r\").read()) == \"abaaba\\nNONE\"\nassert solution(open(\"tests/test_input2.txt\", \"r\").read()) == \"a\\ndef\""
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\nwhere are the abaaba palindromes on this line\\nnone on this line\\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\\neven a single a or b is a palindrome\\n\") == \"abaaba\\nNONE\""
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"abaaba\", \"The solution is incorrect.\""
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\"\n"
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == \"4\""
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 4, \"The correct result is: \" + str(4) + \"\\n\""
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n4 5 0 2\\n1 3 7\\n2 0\\n4\") == \"4\""
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"4\\n\"\n"
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin: str) == \"4\\n\"\nassert solution(stdin: str) == \"4\\n\"\nassert solution(stdin: str) == \"4\\n\"\nassert solution(stdin: str) == \"4\\n\"\nassert solution(stdin: str) == \"4\\n\""
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution([3, 5, 7]) == 4\nassert solution([4, 5, 0, 2]) == 4\nassert solution([1, 3, 7]) == 4\nassert solution([2, 0]) == 2"
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"4\\n\"\n"
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n4 5 0 2\\n1 3 7\\n2 0\\n4\") == \"4\\n4\"\n"
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"3 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"NO WAY\"\nassert solution(\"3 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBGW\") == \"NO WAY\"\nassert solution(\"3 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBBW\") == \"NO WAY\"\nassert solution(\"3 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBBW\") == \"NO WAY\""
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"10 10\\n2 2\\nWBWG\\nWSBB\\nSSSW\\nWWWW\\nWBBS\\nWSGW\\nWGGW\\nWGWW\\n\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nSSSW\\nWSBB\\nWWWW\\nWBBS\\nWSGW\\nWGGW\\nWGWW\\n\") == \"NO WAY\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nSSSW\\nWWWW\\nWBBS\\nWSGW\\nWGGW\\nWGWW\\n\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nWWWW\\nWWWW\\nWBWG\\n\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nWWWW\\nSSSW\\nWWWW\\nWBBS\\nWSGW\\nWGGW\\nWGWW\\n\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWBWG\\nWSBB\\nWWWW\\nWWWW\\n\") == \"SUCCESS\""
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n') == 'GO FOR IT'"
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nS\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nBG\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nS\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nB\") == \"NO CHANCE\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nS\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nS\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nS\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nS\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nS\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nS\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nS\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nS\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nS\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nS\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nS\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nS\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nS\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nS\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nS\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nS\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nS\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nS\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nS\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nS\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nS\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nS\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nS\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nS\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nS\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nS\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nS\") =="
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n2 4\\n3 2\\nS\\nG\\nW\\nG\\nW\\nG\\nW\\nS\\nG\\nW\\nG\\nW\\nG\\nW\\nS\\nG\\nW\\nG\\nW\\nG\\nW\\nS\\nG\\nW\\nG\\nW\\nG\\nW\\nS\\nG\\nW\\nG\\nW\\nG\\nW\\nS\\nG\\nW\\nG\\nW\\nG\\nW\\nS\\nG\\nW\\nG\\nW\\nG\\nW\\nS\\nG\\nW\\nG\\nW\\nG\\nW\\nS\\nG\\nW\\nG\\nW\\nG\\nW\\nS\\nG\\nW\\nG\\nW\\nG\\nW\\nS\\nG\\nW\\nG\\nW\\nG\\nW\\nS\\nG\\nW\\nG\\nW\\nG\\nW\\nS\\nG\\nW\\nG\\nW\\nG\\nW\\nS\\nG\\nW\\nG\\nW\\nG\\nW\\nS\\nG\\nW\\nG\\nW\\nG\\nW\\nS\\nG\\nW\\nG\\nW\\nG\\nW\\nS\\nG\\nW\\nG\\nW\\nG\\nW\\nS\\nG\\nW\\nG\\nW\\nG\\nW\\nS\\nG\\nW\\nG\\nW\\nG\\nW\\nS\\nG\\nW\\nG\\nW\\nG\\nW\\nS\\nG\\nW\\nG\\nW\\nG\\nW\\nS\\nG\\nW\\nG\\nW\\nG\\nW\\nS\\nG\\nW\\nG\\nW\\nG\\nW\\nS\\nG\\nW\\nG\\nW\\nG\\nW\\nS\\nG\\nW\\nG\\nW\\nG\\nW\\nS\\nG\\nW\\nG\\nW\\nG\\nW\\nS\\nG\\nW\\nG\\nW\\nG\\nW\\nS\\nG\\nW\\nG\\nW\\nG\\nW\\nS\\nG\\nW\\nG\\nW\\nG\\nW\\nS\\nG\\nW\\nG\\nW\\nG\\nW\\nS\\nG\\nW\\nG\\nW\\nG\\nW\\nS\\nG\\nW\\nG\\nW\\nG\\nW\\nS\\nG\\nW\\nG\\nW\\nG\\nW\\nS\\nG\\nW\\nG\\nW\\nG\\nW\\nS\\nG\\nW\\nG\\nW\\nG\\nW\\nS\\nG\\nW\\nG\\nW\\nG\\nW\\nS\\nG\\nW\\nG\\nW\\nG\\nW\\nS\\nG\\nW\\nG\\nW\\nG\\nW\\nS\\nG\\nW\\nG\\nW\\nG\\nW\\nS\\nG\\nW\\nG\\nW\\nG\\nW\\nS\\nG\\nW\\nG\\nW\\nG\\nW\\nS\\nG\\nW\\nG\\nW\\nG\\nW\\nS\\nG\\nW\\nG\\nW\\nG\\nW\\nS\\nG\\nW\\nG\\nW\\nG\\nW\\nS\\nG\\nW\\nG\\nW\\nG\\nW\\nS\\nG\\nW"
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"1 2\\n1 2\\n1 1\") == \"NO WAY\"\nassert solution(\"2 2\\n1 1\\n2 2\\n1 2\") == \"GO FOR IT\"\nassert solution(\"1 2\\n2 2\\n2 1\\n1 2\") == \"NO CHANCE\""
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n\") == \"GO FOR IT\"\nassert solution(stdin=\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n\") == \"GO FOR IT\"\nassert solution(stdin=\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n\") == \"GO FOR IT\"\nassert solution(stdin=\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n\") == \"GO FOR IT\"\nassert solution(stdin=\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n\") == \"GO FOR IT\"\nassert solution(stdin=\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n\") == \"GO FOR IT\"\nassert solution(stdin=\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n\") == \"GO FOR IT\"\nassert solution(stdin=\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n\") == \"GO FOR IT\"\nassert solution(stdin=\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n\") == \"GO FOR IT\"\nassert solution(stdin=\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n\") == \"GO FOR IT\"\nassert solution(stdin=\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n\") == \"GO FOR IT\"\nassert solution(stdin=\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n\") == \"GO FOR IT\"\nassert solution(stdin=\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n\") == \"GO FOR IT\"\nassert solution(stdin=\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n\") == \"GO FOR IT\"\nassert solution(stdin=\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n\") == \"GO FOR IT\"\nassert solution(stdin=\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n\") == \"GO FOR IT\"\nassert solution(stdin=\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n\") == \"GO FOR IT\"\nassert solution(stdin=\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n\") == \"GO FOR IT\"\nassert solution(stdin=\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n\") == \"GO FOR IT\"\nassert solution(stdin=\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n\") == \"GO FOR IT\"\nassert solution(stdin=\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n\") == \"GO FOR IT\"\nassert solution(stdin=\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n\") == \"GO FOR IT\"\nassert solution(stdin=\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n\") == \"GO FOR IT\"\nassert solution(stdin=\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n\") == \"GO FOR IT\"\nassert solution(stdin=\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n\") == \"GO FOR IT\"\nassert solution(stdin=\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n\") == \"GO FOR IT\"\nassert solution(stdin=\"2 3\\n4 "
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nBBBW\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nBBWG\") == \"NO CHANCE\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWGWG\") == \"NO WAY\""
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\\ndef solution(stdin: str) -> str: pass\"\n"
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG') == 'GO FOR IT'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBBG') == 'GO FOR IT'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWBBG\\nWWWW') == 'NO WAY'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBBG\\nWWWW\\nWWWW') == 'NO WAY'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBBG\\nWWWW\\nWWWW\\nWBWG') == 'GO FOR IT'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBBG\\nWWWW\\nWWWW\\nWBBG') == 'GO FOR IT'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBBG\\nWWWW\\nWWWW\\nWBBG\\nWWWW\\nWWWW') == 'GO FOR IT'"
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n    5 900\n    800 700 400 300 200\n    ''') == '2243\\n'"
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 900\\n800 700 400 300 200') == '2243\\n'\n"
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2243\", \"Test failed\""
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n5 900\n800 700 400 300 200\n\"\"\") == \"2243\"\nassert solution(\"\"\"\n10 800\n700 600 300 200 100\n\"\"\") == \"2208\"\nassert solution(\"\"\"\n5 1000\n1000 500 200 100 50\n\"\"\") == \"1516\"\nassert solution(\"\"\"\n3 500\n500 400 200 100\n\"\"\") == \"1020\""
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n\\tpass\\n'"
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2243\", \"Test Case 1 Failed\""
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2243\""
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 2243, \"The given solution is incorrect.\""
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2243\\n\", \"Test failed!\"\n"
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2243\", \"Incorrect Output\"\n"
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output\nfor i in range(Q):\n    assert solution(input()) == output"
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=None) == \"def solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\ntest_cases = [(\\n\\t\\\"? 1 3\\\",\\n\\t\\\"no\\\"\\n),\\n\\t(\\n\\t\\\"= 1 8\\\",\\n\\t\\\"yes\\\"\\n),\\n\\t(\\n\\t\\\"= 3 8\\\",\\n\\t\\\"no\\\"\\n)]\\n\\nfor test_case in test_cases:\\n\\tsolution(test_case[0])\\n\\tif test_case[1] == \\\"no\\\":\\n\\t\\tprint(\\\"yes\\\")\\n\\telse:\\n\\t\\tprint(\\\"no\\\")\\n\\n\\n# Test case 2\\ntest_case = (\\n\\t\\\"= 4 10\\\",\\n\\t\\\"no\\\"\\n)\\n\\nsolution(test_case[0])\\n\\tif test_case[1] == \\\"no\\\":\\n\\t\\tprint(\\\"yes\\\")\\n\\telse:\\n\\t\\tprint(\\\"no\\\")\\n\""
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"no\\nno\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\\n') == 'no\\nyes\\n'\nassert solution('10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\\n') == 'no\\nyes\\n'"
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\\n\") == \"no\\nno\\n\"\nassert solution(\"10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\\n\") == \"no\\nno\\n\""
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"no\"\n"
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\\n') == 'no\\nno\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'\n"
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_str) == expected_output, f\"Test case {test_case} failed.\"\nfor test_case in range(1, 10):\n    input_str = f\"{test_case} {len(base_set)} {len(operations)} {len(base_set)}\"\n    expected_output = f\"no\\nyes\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n    assert solution(input_str) == expected_output, f\"Test case {test_case} failed.\""
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\") == \"no\\nyes\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('test_input.txt', 'r')) == 'no\\nno\\nno\\nno\\nno\\n'"
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n10 5 4 8 3\\n\") == \"2\""
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n10 5 4 8 3\") == \"2\"\nassert solution(\"5 10\\n10 5 4 8 3\") == \"15\""
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1 1 1 1\\n1 1 1 1 1\") == 2\nassert solution(\"2 3 5 7 9\\n3 4 6 8 10\") == 5\nassert solution(\"5 4 3 2 1\\n4 3 2 1 0\") == 0\nassert solution(\"10 5 4 8 3\\n5 4 8 10 3\") == 5\nassert solution(\"2 2 1 3 4\\n1 1 2 3 4\") == 0"
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n10 5 4 8 3\") == \"2\\n\"\n\nsolution(\"5 3\\n10 5 4 8 3\")"
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n10 5 4 8 3\") == \"2\"\nassert solution(\"10 20 30\\n
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n10 5 4 8 3\") == 2\nprint(\"All tests passed\")"
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n10 5 4 8 3\\n\") == \"2\"\n"
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n10 5 4 8 3\") == \"2\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n10 5 4 8 3\") == \"2\""
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2\\n\", \"Function should return 2.\""
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(str(1) + \" \" + str(127)) == \"1083\""
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == 1083, \"Solution does not match expected output.\"\n\nassert solution(100) == 717, \"Solution does not match expected output.\"\n\nassert solution(10) == 25, \"Solution does not match expected output.\"\n\nassert solution(1000000000) == 1756, \"Solution does not match expected output.\""
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 127\") == \"1083\"\n"
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 127') == '1083'\n"
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 127\") == \"1083\\n\""
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 127\") == \"1083\", \"The correct output is not correct\""
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(f(127)) == 1083\n"
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 127\") == \"1083\""
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 127\") == \"1083\", \"Sample Input and Output are not matching\""
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 127\\n\") == \"1083\"\nassert solution(\"5 7\\n\") == \"16\"\nassert solution(\"1 1\\n\") == \"1\"\nassert solution(\"1000000000 1000000000\\n\") == \"1000000000\""
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"How much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\") == 2.0\nassert solution(\"What is the air speed velocity of an unladen swallow? African?\") == 1.0\nassert solution(\"The answer to life, the universe, and everything?\") == 1.0\nassert solution(\"Teresa is watching TV movies and does not know how to answer questions, only how to read.\") == 1.0"
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n4 4\nHow much is 6 times 9? 42\nHow much is 9 times 6? 42\nIs there intelligent life on Earth? Probably\nWhat is the air speed velocity of an unladen swallow? African?\n''') == 2.0"
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"How much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\") == \"2.0000000000\"\nprint(\"All tests passed successfully!\")"
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\\n\") == \"2.0000000000\\ndef solution(stdin: str) -> str:\\npass\\n\"\n\nsolution(stdin=\"4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\\n\") == \"2.0000000000\\ndef solution(stdin: str) -> str:\\npass\\n\""
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('How much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?') == '2.0000000000\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution('Sample Input:\\n4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?') == '2.0000000000\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?') == 2.0, \"Incorrect output\"\n\nsolution('4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?')"
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(r'4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?') == 2.0\nassert solution(r'4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?') == 1.6666666667"
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Expected output: {output}\\nGot: {solution(input())}\"\n"
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\") == \"2.0000000000\\ndef solution(stdin: str) -> str: pass\\n\""
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2.0000000000\", \"Incorrect output\""
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"POSSIBLE\"\nassert solution(\"monkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\nmonkey 3 lion baboon\\nbaboon 2 cat\") == \"IMPOSSIBLE\"\nassert solution(\"monkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\nbaboon 2 cat\\nmonkey 3 lion baboon\\nbaboon 2 cat\") == \"FALSE ALARM\""
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == 'POSSIBLE\\n'"
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\n') == 'POSSIBLE'\nassert solution('5 4\\ncat 2 dog fish\\ncat 3 dog fish\\ndog 1 cat\\nfish 1 cat\\n') == 'FALSE ALARM'"
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\n') == 'POSSIBLE'\nassert solution('2 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\n') == 'POSSIBLE'\nassert solution('3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\n') == 'POSSIBLE'\nassert solution('2 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\n') == 'POSSIBLE'\nassert solution('1 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\n') == 'POSSIBLE'\nassert solution('3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\n') == 'POSSIBLE'\nassert solution('3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\n') == 'POSSIBLE'\nassert solution('3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\n') == 'POSSIBLE'\nassert solution('3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\n') == 'POSSIBLE'\nassert solution('3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\n') == 'POSSIBLE'\nassert solution('3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\n') == 'POSSIBLE'\nassert solution('3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\n') == 'POSSIBLE'\nassert solution('3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\n') == 'POSSIBLE'\nassert solution('3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\n') == 'POSSIBLE'\nassert solution('3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\n') == 'POSSIBLE'\nassert solution('3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\n') == 'POSSIBLE'\nassert solution('3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\n') == 'POSSIBLE'\nassert solution('3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\n') == 'POSSIBLE'\nassert solution('3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\n') == 'POSSIBLE'\nassert solution('3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\n') == 'POSSIBLE'\nassert solution('3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\n') == 'POSSIBLE'\nassert solution('3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\n') == 'POSSIBLE'\nassert solution('3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\"
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\") == \"POSSIBLE\""
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(None) == \"IMPOSSIBLE\""
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\n\") == \"POSSIBLE\"\nassert solution(\"4 6\\nmonkey 1 lion\\nlion 3 monkey\\npenguin 2 lion\\n\") == \"POSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\n\") == \"FALSE ALARM\""
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"POSSIBLE\""
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\n\") == \"POSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\ncat 3 monkey penguin lion\\ncat 2 lion cat\\n\") == \"IMPOSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\ncat 3 monkey penguin lion\\nlion 2 cat\\n\") == \"FALSE ALARM\"\n\nfrom typing import List\n"
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\") == \"POSSIBLE\\n\"\nassert solution(\"5 10\\ncat 2 duck\\nmonkey 2 bird\\nmouse 1 duck\\nhorse 2 duck\") == \"IMPOSSIBLE\\n\"\nassert solution(\"5 3\\ncat 1 duck\\nhorse 2 duck\\nmouse 1 duck\\n\") == \"FALSE ALARM\\n\""
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == 'triple correlation 4(1)4(3)3 found'"
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input) == output, f\"Expected '{output}', got '{solution(input)}'\" for input, output in [\n    # Sample Input\n    (\"100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\",\n     # Expected Output\n     \"triple correlation 4(1)4(3)3 found\"),\n    # Sample Input\n    (\"100\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\",\n     # Expected Output\n     \"triple correlation 4(1)4(3)3 found\"),\n    # Sample Input\n    (\"100\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\",\n     # Expected Output\n     \"triple correlation 4(1)4(3)3 found\"),\n    # Sample"
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, got: {solution(input())}\""
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\") == \"triple correlation 4(1)4(3)3 found\\n\"\nassert solution(\"100\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\") == \"random sequence found\\n\""
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\") == \"triple correlation 4(1)4(3)3 found\""
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"sample_input.txt\", \"r\")) == \"triple correlation 4(1)4(3)3 found\\n\""
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == 'triple correlation 4(1)4(3)3 found'"
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(r\"\"\"\n100\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\n\"\"\") == \"\"\"\ntriple correlation 4(1)4(3)3 found\n\"\"\"\n\nassert solution(r\"\"\"\n50\n2 3 5 7 1 4 6 8 9 1 2 3 4 5 6 7 8 9\n1 4 2 5 3 6 7 8 9 3 2 1 4 3 5 6 7 8\n2 7 6 3 9 8 5 4 1 4 5 6 7 8 9 3 2\n3 8 9 4 5 7 2 6 1 5 4 3 2 1 4 7 6\n4 9 1 2 6 5 8 3 7 6 3 2 5 4 1 8 7\n5 6 8 7 4 3 7 2 9 1 8 5 6 7 4 9 2\n6 7 9 1 5 2 4 3 8 5 9 6 3 2 1 4 5 8\n7 8 5 4 3 9 6 1 7 2 6 5 4 3 8 7 9 2\n8 9 7 2 6 3 5 4 1 8 9 4 3 2 7 6 5 8\n9 1 4 5 8 7 6 3 2 9 2 7 1 6 5 8 3 4\n\"\"\") == \"\"\"\nno triple correlation found\n\"\"\"\n\nassert solution(r\"\"\"\n50\n2 3 5 7 1 4 6 8 9 1 2 3 4 5 6 7 8 9\n1 4 2 5 3 6 7 8 9 3 2 1 4 3 5 6 7 8\n2 7 6 3 9 8 5 4 1 4 5 6 7 8 9 3 2\n3 8 9 4 5 7 2 6 1 5 4 3 2 1 4 7 6\n4 9 1 2 6 5 8 3 7 6 3 2 5 4 1 8 7\n5 6 8 7 4 3 7 2 9 1 8 5 6 7 4 9 2\n6 7 9 1 5 2 4 3 8 5 9 6 3 2 1 4 5 8\n7 8 5 4 3 9 6 1 7 2 6 5 4 3 8 7 9 2\n8 9 7 2 6 3 5 4 1 8 9 4 3 2 7 6 5 8\n9 1 4 5 8 7 6 3 2 9 2 7 1 6 5 8 3 4\n\"\"\") == \"\"\"\nno triple correlation found\n\"\"\"\n\nassert solution(r\"\"\"\n50\n2 3 5 7 1 4 6 8 9 1 2 3 4 5 6 7 8 9\n1 4 "
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"triple correlation 4(1)4(3)3 found\""
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\") == \"triple correlation 4(1)4(3)3 found\\n\"\n"
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"40.5\\n\", \"Your solution is incorrect.\""
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"40.5\""
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received: {solution(input())}\""
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"3 1\n39\n10\n40\"\"\") == \"40.5\""
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1\\n39\\n10\\n40\") == \"40.5\\n\"\n"
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1\\n39\\n10\\n40\\n\") == \"40.5\"\n"
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"40.5\\n\", \"Output does not match the expected output.\""
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1\\n39\\n10\\n40\") == \"40.5\"\nassert solution(\"5 2\\n12\\n30\") == \"12\"\nassert solution(\"10 5\\n60\\n50\") == \"50\"\nassert solution(\"10 5\\n60\\n50.1\") == \"50.1\"\nassert solution(\"10 5\\n60\\n50.01\") == \"50.1\"\nassert solution(\"10 5\\n60\\n50.001\") == \"50.1\"\nassert solution(\"10 5\\n60\\n50.0001\") == \"50.1\"\nassert solution(\"10 5\\n60\\n50.00001\") == \"50.1\"\nassert solution(\"10 5\\n60\\n50.000001\") == \"50.1\"\nassert solution(\"10 5\\n60\\n50.0000001\") == \"50.1\"\nassert solution(\"10 5\\n60\\n50.00000001\") == \"50.1\"\nassert solution(\"10 5\\n60\\n50.000000001\") == \"50.1\"\nassert solution(\"10 5\\n60\\n50.0000000001\") == \"50.1\"\nassert solution(\"10 5\\n60\\n50.00000000001\") == \"50.1\"\nassert solution(\"10 5\\n60\\n50.000000000001\") == \"50.1\"\nassert solution(\"10 5\\n60\\n50.0000000000001\") == \"50.1\"\nassert solution(\"10 5\\n60\\n50.00000000000001\") == \"50.1\"\nassert solution(\"10 5\\n60\\n50.000000000000001\") == \"50.1\"\nassert solution(\"10 5\\n60\\n50.0000000000000001\") == \"50.1\"\nassert solution(\"10 5\\n60\\n50.000000000000000001\") == \"50.1\"\nassert solution(\"10 5\\n60\\n50.00000000000000000001\") == \"50.1\"\nassert solution(\"10 5\\n60\\n50.000000000000000000001\") == \"50.1\"\nassert solution(\"10 5\\n60\\n50.0000000000000000000001\") == \"50.1\"\nassert solution(\"10 5\\n60\\n50.00000000000000000000001\") == \"50.1\"\nassert solution(\"10 5\\n60\\n50.000000000000000000000001\") == \"50.1\"\nassert solution(\"10 5\\n60\\n50.00000000000000000000000001\") == \"50.1\"\nassert solution(\"10 5\\n60\\n50.000000000000000000000000001\") == \"50.1\"\nassert solution(\"10 5\\n60\\n50.00000000000000000000000"
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"sample_input.txt\", \"r\")) == \"40.5\\n\"\nassert solution(open(\"sample_input_2.txt\", \"r\")) == \"41.5\\n\"\n"
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r')) == '40.5'"
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"Impossible\"\n"
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 'Impossible', \"The given solution is incorrect\""
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n\") == \"Impossible\"\nassert solution(\"4 8\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n1 5 1987\\n\") == \"Impossible\"\nassert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n\") == \"1987\"\nassert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n\") == \"1987\"\nassert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n\") == \"1987\"\nassert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n\") == \"1987\"\nassert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n\") == \"1987\"\nassert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n\") == \"1987\"\nassert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n\") == \"1987\"\nassert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n\") == \"1987\"\nassert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n\") == \"1987\"\nassert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n\") == \"1987\"\nassert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n\") == \"1987\"\nassert solution(\"4 6\\n1 2 1987\\n2"
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Solution failed. Input: {input()}, Output: {output}\""
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"Impossible\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"Impossible\\n\"\nassert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n4 5 1987\\n1 5 1987\\n2 6 1987\\n1 6 1987\\n3 6 1987\\n2 7 1987\\n1 7 1987\\n3 7 1987\\n4 8 1987\\n1 8 1987\\n2 9 1987\\n1 9 1987\\n3 9 1987\\n4 10 1987\\n1 10 1987\\n5 10 1987\\n2 11 1987\\n1 11 1987\\n3 11 1987\\n4 12 1987\\n1 12 1987\\n5 12 1987\\n2 13 1987\\n1 13 1987\\n6 13 1987\\n2 14 1987\\n1 14 1987\\n7 14 1987\\n3 15 1987\\n2 16 1987\\n1 16 1987\\n8 16 1987\\n4 17 1987\\n1 17 1987\\n9 17 1987\\n5 18 1987\\n2 19 1987\\n1 19 1987\\n10 19 1987\\n6 20 1987\\n2 21 1987\\n1 21 1987\\n11 21 1987\\n7 22 1987\\n3 23 1987\\n2 24 1987\\n1 24 1987\\n12 24 1987\\n8 25 1987\\n4 26 1987\\n1 26 1987\\n13 26 1987\\n5 27 1987\\n2 28 1987\\n1 28 1987\\n14 28 1987\\n6 29 1987\\n3 30 1987\\n2 31 1987\\n1 31 1987\\n15 31 1987\\n7 32 1987\\n4 33 1987\\n1 33 1987\\n16 33 1987\\n8 34 1987\\n5 35 1987\\n2 36 1987\\n1 36 1987\\n17 36 1987\\n9 37 1987\\n6 38 1987\\n3 39 1987\\n2 40 1987\\n1 40 1987\\n18 40 1987\\n10 41 1987\\n7 42 1987\\n4 43 1987\\n1 43 1987\\n19 43 "
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"Impossible\\n\"\nassert solution(\"4 8\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n4 5 1987\") == \"1987\\n\"\nassert solution(\"4 9\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n4 5 1987\\n5 6 1987\") == \"1987\\n1995\\n\"\nassert solution(\"4 10\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n4 5 1987\\n5 6 1987\\n6 7 1987\") == \"1987\\n1995\\n1995\\n\"\nassert solution(\"4 11\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n4 5 1987\\n5 6 1987\\n6 7 1987\\n7 8 1987\") == \"1987\\n1995\\n1995\\n1995\\n\"\nassert solution(\"4 12\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n4 5 1987\\n5 6 1987\\n6 7 1987\\n7 8 1987\\n8 9 1987\") == \"1987\\n1995\\n1995\\n1995\\n1995\\n\""
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n    4 6\n    1 2 1987\n    2 3 1987\n    1 3 1987\n    2 4 1987\n    1 4 1987\n    3 4 1987\n    \n''') == 'Impossible'\n\nassert solution('''\n    4 6\n    1 2 1987\n    2 3 1987\n    1 3 1987\n    2 4 1987\n    1 4 1987\n    3 4 1987\n''') == '1987'\n\nassert solution('''\n    4 6\n    1 2 1987\n    2 3 1987\n    1 3 1987\n    2 4 1987\n    1 4 1987\n    3 4 1987\n''') == '1987'\n\nassert solution('''\n    4 6\n    1 2 1987\n    2 3 1987\n    1 3 1987\n    2 4 1987\n    1 4 1987\n    3 4 1987\n''') == '1987'\n\nassert solution('''\n    4 6\n    1 2 1987\n    2 3 1987\n    1 3 1987\n    2 4 1987\n    1 4 1987\n    3 4 1987\n''') == '2008'\n\nassert solution('''\n    4 6\n    1 2 1987\n    2 3 1987\n    1 3 1987\n    2 4 1987\n    1 4 1987\n    3 4 1987\n''') == '1987'\n\nassert solution('''\n    4 6\n    1 2 1987\n    2 3 1987\n    1 3 1987\n    2 4 1987\n    1 4 1987\n    3 4 1987\n''') == '1987'\n\nassert solution('''\n    4 6\n    1 2 1987\n    2 3 1987\n    1 3 1987\n    2 4 1987\n    1 4 1987\n    3 4 1987\n''') == '1987'\n\nassert solution('''\n    4 6\n    1 2 1987\n    2 3 1987\n    1 3 1987\n    2 4 1987\n    1 4 1987\n    3 4 1987\n''') == '1987'\n\nassert solution('''\n    4 6\n    1 2 1987\n    2 3 1987\n    1 3 1987\n    2 4 1987\n    1 4 1987\n    3 4 1987\n''') == '1987'\n\nassert solution('''\n    4 6\n    1 2 1987\n    2 3 1987\n    1 3 1987\n    2 4 1987\n    1 4 1987\n    3 4 1987\n''') == '1987'\n\nassert solution('''\n    4 6\n    1 2 1987\n    2 3 1987\n    1 3 1987\n    2 4 1987\n    1 4 1987\n    3 4 1987\n''') == '1987'\n\nassert solution('''\n    4 6\n    1 2 1987\n    2 3 1987\n    1 3 1987\n    2 4 1987\n    1 4 1987\n    3 4 1987\n''') == '1987'\n\nassert solution('''\n    4 6\n    1 2 1987\n    2 3 1987\n    1 3 1987\n    2 4 1987\n    1 4 1987\n    3 4 1987\n''') == '1987'\n\nassert solution('''\n    4"
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''4 6\n1 2 1987\n2 3 1987\n1 3 1987\n2 4 1987\n1 4 1987\n3 4 1987''') == 'Impossible\\n'\n\nassert solution('''4 6\n1 2 1987\n2 3 1987\n1 3 1987\n2 4 1987\n1 4 1987\n3 4 1987''') == 'Impossible\\n'\n\nassert solution('''4 6\n1 2 1987\n2 3 1987\n1 3 1987\n2 4 1987\n1 4 1987\n3 4 1987''') == 'Impossible\\n'\n\nassert solution('''4 6\n1 2 1987\n2 3 1987\n1 3 1987\n2 4 1987\n1 4 1987\n3 4 1987''') == 'Impossible\\n'\n\nassert solution('''4 6\n1 2 1987\n2 3 1987\n1 3 1987\n2 4 1987\n1 4 1987\n3 4 1987''') == 'Impossible\\n'\n\nassert solution('''4 6\n1 2 1987\n2 3 1987\n1 3 1987\n2 4 1987\n1 4 1987\n3 4 1987''') == 'Impossible\\n'\n\nassert solution('''4 6\n1 2 1987\n2 3 1987\n1 3 1987\n2 4 1987\n1 4 1987\n3 4 1987''') == 'Impossible\\n'\n\nassert solution('''4 6\n1 2 1987\n2 3 1987\n1 3 1987\n2 4 1987\n1 4 1987\n3 4 1987''') == 'Impossible\\n'\n\nassert solution('''4 6\n1 2 1987\n2 3 1987\n1 3 1987\n2 4 1987\n1 4 1987\n3 4 1987''') == 'Impossible\\n'\n\nassert solution('''4 6\n1 2 1987\n2 3 1987\n1 3 1987\n2 4 1987\n1 4 1987\n3 4 1987''') == 'Impossible\\n'\n\nassert solution('''4 6\n1 2 1987\n2 3 1987\n1 3 1987\n2 4 1987\n1 4 1987\n3 4 1987''') == 'Impossible\\n'\n\nassert solution('''4 6\n1 2 1987\n2 3 1987\n1 3 1987\n2 4 1987\n1 4 1987\n3 4 1987''') == 'Impossible\\n'\n\nassert solution('''4 6\n1 2 1987\n2 3 1987\n1 3 1987\n2 4 1987\n1 4 1987\n3 4 1987''') == 'Impossible\\n'\n\nassert solution('''4 6\n1 2 1987\n2 3 1987\n1 3 1987\n2 4 1987\n1 4 1987\n3 4 1987''') == 'Impossible\\n'\n\nassert solution('''4 6\n1 2 1987\n2 3 1987\n1 3 198"
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987') == 'Impossible\\n'"
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"impossible\""
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\nif __name__ == '__main__':\\n    print(solution(input()))\""
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n    4 0 1\n    1 2\n    1 2\n    1 3\n    1 1\n    \"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n    4 0 1\n    1 2\n    1 2\n    1 3\n    1 1\n    \"\"\") == \"def solution(stdin: str) -> str:\\n    pass\"\n\nassert solution(\"\"\"\n    4 0 1\n    1 2\n    1 2\n    1 3\n    1 1\n    \"\"\") == \"def solution(stdin: str) -> str:\\n    pass\"\n\nassert solution(\"\"\"\n    4 0 1\n    1 2\n    1 2\n    1 3\n    1 1\n    \"\"\") == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input) == expected_output, f\"Test case failed with input '{input}'. Expected output: '{expected_output}', but got: '{solution(input)}'.\""
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_data) == output_data, f\"Your code is not correct. Please fix the following errors: {errors}\"\nfor error in errors:\n    print(f\"Error: {error}\")"
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 1') == 'impossible'"
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"impossible\""
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\nr\"\"\"\n4 0 1\nN 1 2\nC 1 2\nN 1 3\nC 1 1\n\"\"\") == \"impossible\"\n\nassert solution(\nr\"\"\"\n4 0 1\nN 1 2\nC 1 2\nN 1 3\nC 1 0\n\"\"\") == \"3\"\n\nassert solution(\nr\"\"\"\n4 0 1\nN 1 2\nC 1 2\nN 1 3\nC 1 2\n\"\"\") == \"1\""
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 1\") == \"impossible\"\nassert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 2\") == 3\nassert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 2\") == \"impossible\""
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"impossible\""
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == \"10\""
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"())\") == 10\nassert solution(\"((()\") == 10\nassert solution(\")()\") == 0\nassert solution(\")()(()\") == 10\nassert solution(\"(())()\") == 10"
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 10\nprint(\"All tests passed!\")"
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"(()\") == \"(()\", \"(()\", \")\", \"((\", \"(()\") == 10\nassert solution(\"(())\") == \"((()\", \"(()\", \")\", \"((\", \"(()\") == 10\nassert solution
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('())') == 10"
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n())\\n((()\\n)()') == 10\nassert solution('3\\n(a)\\n((a)b)\\n(c)d') == 10\nassert solution('3\\n(ab)\\n((ab)cd)\\n(ef)gh') == 10\nassert solution('3\\n()()()\\n(())') == 10\nassert solution('3\\n(ab)c(de)(fgh)') == 10"
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 10, \"Your solution is incorrect.\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n())\\n((()\\n)()') == '10\\n()(()'\nassert solution('4\\n))\\n(a)\\n(b)') == '6\\n)a(b)'\nassert solution('5\\n))\\n(())\\n(())') == '10\\n()()'\nassert solution('6\\n))\\n(())\\n(a)\\n(b)') == '6\\n)a(b)'"
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 10, \"The length of the longest balanced string from the pieces should be 10.\""
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"())\") == 10\nassert solution(\"((()\") == 10\nassert solution(\")()\") == 10\nassert solution(\"())(())()()())\") == 10\nassert solution(\"((())((()))\")) == 10\nassert solution(\"(()\")) == 0\nassert solution(\"(()()))\") == 0\nassert solution(\"()(()))\") == 0\nassert solution(\")()(())(()))\") == 0"
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\\n') == '85293'"
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\n# assert solution('9\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\\n') == '85293'\\n\\n# Correctness test\\nprint(solution('2312\\nHumanity\\'s Rush to the Stars is now $200$ years old.\\n'))\\n\"\nassert len(solution.split('\\n')) == 5\nprint(solution)"
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '85293', 'Please fill in the solution for the problem'"
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Expected {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"9\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\\n\") == \"85293\""
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('9\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8') == '85293'"
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"9\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\\n\") == \"85293\""
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"85293\"\n"
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''9\n377 a\n455 h\n180 a\n211 a\n134 a\n46 h\n111 h\n213 h\n17 a\n15\n1 2\n1 4\n1 6\n2 3\n2 4\n2 5\n3 5\n4 6\n4 7\n4 9\n5 7\n5 8\n6 9\n7 9\n7 8\n''') == '85293'\n"
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"9\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\\n\") == \"85293\"\n"
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(solution) == \"5\""
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == 5, \"Incorrect solution\""
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n\") == \"5\\n\""
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n\") == \"5\""
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_data) == expected_output, f\"The solution should return {expected_output}, but it returns {solution(input_data)}.\\ninput_data: {input_data}\\nexpected_output: {expected_output}\""
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\") == \"5\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\") == \"5\""
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 5, \"Incorrect output. Expected: 5, but got: {}.\".format(solution())"
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '5'"
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\") == 5, \"Test Case 1 Failed\""
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == \"5100\"\n\nfrom collections import defaultdict\nfrom typing import List"
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == expected_output, f\"Test case {index+1} failed.\\nExpected output: {expected_output}\\nActual output: {solution(stdin)}\""
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n3 caterpillar 3 pupa 7 butterfly\\n3 dove 3 pigeon 7 aaabaaajss\\n3 mouse 1 electromouse 5 rat\\n7\\n0 electromouse\\n500 electromouse\\n1000 electromouse\\n1500 rat\\n2000 aaabaaajss\\n2500 pigeon\\n3000 butterfly\") == 5100\n"
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 5100, \"The output is not as expected\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n3 caterpillar 3 pupa 7 butterfly\\n3 dove 3 pigeon 7 aaabaaajss\\n3 mouse 1 electromouse 5 rat\\n7\\n0 electromouse\\n500 electromouse\\n1000 electromouse\\n1500 rat\\n2000 aaabaaajss\\n2500 pigeon\\n3000 butterfly\\n\") == 5100, \"The output is not the expected value.\""
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n3 caterpillar 3 pupa 7 butterfly\\n3 dove 3 pigeon 7 aaabaaajss\\n3 mouse 1 electromouse 5 rat\\n7\\n0 electromouse\\n500 electromouse\\n1000 electromouse\\n1500 rat\\n2000 aaabaaajss\\n2500 pigeon\\n3000 butterfly\") == \"5100\""
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 5100, \"Test Failed\""
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n3 caterpillar 3 pupa 7 butterfly\\n3 dove 3 pigeon 7 aaabaaajss\\n3 mouse 1 electromouse 5 rat\\n7\\n0 electromouse\\n500 electromouse\\n1000 electromouse\\n1500 rat\\n2000 aaabaaajss\\n2500 pigeon\\n3000 butterfly\\n\") == \"5100\""
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r')) == '5100'"
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n3 caterpillar 3 pupa 7 butterfly\\n3 dove 3 pigeon 7 aaabaaajss\\n3 mouse 1 electromouse 5 rat\\n7\\n0 electromouse\\n500 electromouse\\n1000 electromouse\\n1500 rat\\n2000 aaabaaajss\\n2500 pigeon\\n3000 butterfly') == 5100, \"Incorrect output\"\n"
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('sample_input.txt').read()) == '6\\n1\\n2\\n3\\n1\\n4\\n5\\n'"
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\"\nassert solution(\"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\") == \"1\\n1\\n2\\n2\\n3\\n3\\n4\\n4\\n5\""
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''5\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5\n''') == '''6\n1\n2\n3\n1\n4\n5\n'''"
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\\n\"\n"
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\"\nassert solution(\"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\") == \"-1\"\nassert solution(\"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\"\nassert solution(\"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\") == \"-1\"\nassert solution(\"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\"\n"
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n    5\n    0\n    1 1\n    1 1\n    2 2 3\n    1 4\n    8\n    1\n    2\n    3\n    1\n    4\n    2\n    3\n    5\n    ''') == '6\\n1\\n2\\n3\\n1\\n4\\n5\\n'\n\nassert solution('''\n    6\n    1\n    2\n    3\n    1\n    4\n    5\n    ''') == '-1\\n'\n\nassert solution('''\n    6\n    1\n    2\n    3\n    1\n    4\n    5\n    ''') == '-1\\n'"
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_str) == output_str, \"Test failed\"\n"
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\""
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"6\"\n"
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5') == '6\\n1\\n2\\n3\\n1\\n4\\n5'\nassert solution('1\\n1\\n2\\n2\\n3\\n3\\n4\\n4\\n5\\n5') == '-1'\nassert solution('1\\n1\\n2\\n2\\n3\\n3\\n4\\n4\\n5\\n6') == '1\\n2\\n3\\n1\\n4\\n5'\n"
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n2 5\n1 2 1 2 1\n4\n1 2 R 6\n1 2 O 3\n2 1 O 3\n1 2 R 5\n\"\"\") == \"10\\n\""
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\") == \"10\"\nassert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\") == \"9\"\nassert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\") == \"6\""
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\\n\") == \"10\\n\"\nprint(\"All tests passed successfully!\")"
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 10\n"
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5') == '10'\n"
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\") == \"10\\n\"\nassert solution(\"5 3\\n1 2 R 3\\n1 3 R 2\\n1 3 R 1\") == \"0\\n\""
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n2 5\n1 2 1 2 1\n4\n1 2 R 6\n1 2 O 3\n2 1 O 3\n1 2 R 5\n''') == '10'\nprint(\"Test Passed\")"
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5') == '10'"
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"10\\n\"\n"
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\") == \"10\\n\"\n"
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n0 1\\n1 2\\n2 3\") == \"1\"\n"
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n4 3\n0 1\n1 2\n2 3\n\"\"\") == \"1\\n\""
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n0 1\\n1 2\\n2 3\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 1, \"Topologically sorting the nodes of a directed graph (digraph) can be achieved using Kahn's Algorithm.\""
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n    4 3\n    0 1\n    1 2\n    2 3\n    ''') == '1'"
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n0 1\\n1 2\\n2 3\") == \"1\\n\"\nassert solution(\"1 2\\n2 3\\n4 3\") == \"1\\n\"\nassert solution(\"4 3\\n0 1\\n1 2\\n2 3\") == \"1\\n\""
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Error: Test cases failed. Expected output: {output}, Received: {solution(input())}\""
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 3\\n0 1\\n1 2\\n2 3') == '1\\n'"
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n0 1\\n1 2\\n2 3\") == \"1\\n\"\nassert solution(\"4 3\\n0 1\\n1 2\\n2 0\\n0 3\") == \"3\\n\"\nassert solution(\"4 3\\n0 1\\n1 2\\n2 3\\n3 0\") == \"3\\n\"\nassert solution(\"4 3\\n0 1\\n1 2\\n2 0\\n0 3\\n0 0\") == \"2\\n\"\nassert solution(\"4 3\\n0 1\\n1 2\\n2 3\\n3 0\\n3 0\\n3 1\") == \"2\\n\"\nassert solution(\"4 3\\n0 1\\n1 2\\n2 3\\n3 0\\n3 0\\n3 1\\n3 2\") == \"4\\n\""
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n0 1\\n1 2\\n2 3\") == \"1\\n\"\n"
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n\") == \"0.962962962963\", \"Incorrect output\""
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 0.962962962963\nassert solution(6) == 0.951383175889\nassert solution(7) == 0.952235381198\nassert solution(14) == 0.957269586544\nassert solution(20) == 0.961023158682\n\nfrom typing import List\nimport random"
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"0.962962962963\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"0.962962962963\"\n"
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, \"The provided solution does not match the expected output.\""
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"0.962962962963\\n\", \"The correct output is not returned.\""
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"0.962962962963\", \"Please fix the code and submit the corrected code.\""
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"0.962962962963\"\n"
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '0.962962962963'\n"
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 0.962962962963, \"The output is not as expected.\""
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n\") == \"0 0\\n40000000 0\\n0 40000000\\n\"\nassert solution(\"6\\n\") == \"0 0\\n20000000 0\\n0 20000000\\n0 30000000\\n0 40000000\\n\"\nassert solution(\"9\\n\") == \"0 0\\n10000000 0\\n0 10000000\\n0 15000000\\n0 20000000\\n0 25000000\\n\"\nassert solution(\"12\\n\") == \"0 0\\n30000000 0\\n0 30000000\\n0 40000000\\n0 50000000\\n0 60000000\\n\"\nassert solution(\"15\\n\") == \"0 0\\n50000000 0\\n0 50000000\\n0 70000000\\n0 90000000\\n0 110000000\\n0 130000000\\n\"\nassert solution(\"18\\n\") == \"0 0\\n80000000 0\\n0 80000000\\n0 100000000\\n0 120000000\\n0 140000000\\n0 160000000\\n0 180000000\\n\""
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(4) == \"0 0\\n40000000 0\\n0 40000000\""
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == '0 0\\n40000000 0\\n0 40000000'"
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output\nassert solution(input()) == output\n"
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"0 0\\n40000000 0\\n0 40000000\\n\""
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"0 0\\n40000000 0\\n0 40000000\\n\", \"Expected output: 0 0\\n40000000 0\\n0 40000000\\n\"\nassert solution(4) == \"0 0\\n40000000 0\\n0 40000000\\n1 1\\n\", \"Expected output: 0 0\\n40000000 0\\n0 40000000\\n1 1\\n\"\nassert solution(5) == \"0 0\\n40000000 0\\n0 40000000\\n1 1\\n2 2\\n\", \"Expected output: 0 0\\n40000000 0\\n0 40000000\\n1 1\\n2 2\\n\"\nassert solution(6) == \"0 0\\n40000000 0\\n0 40000000\\n1 1\\n2 2\\n3 3\\n\", \"Expected output: 0 0\\n40000000 0\\n0 40000000\\n1 1\\n2 2\\n3 3\\n\"\nassert solution(7) == \"0 0\\n40000000 0\\n0 40000000\\n1 1\\n2 2\\n3 3\\n4 4\\n\", \"Expected output: 0 0\\n40000000 0\\n0 40000000\\n1 1\\n2 2\\n3 3\\n4 4\\n\"\nassert solution(8) == \"0 0\\n40000000 0\\n0 40000000\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n\", \"Expected output: 0 0\\n40000000 0\\n0 40000000\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n\"\nassert solution(9) == \"0 0\\n40000000 0\\n0 40000000\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n\", \"Expected output: 0 0\\n40000000 0\\n0 40000000\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n\"\nassert solution(10) == \"0 0\\n40000000 0\\n0 40000000\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n\", \"Expected output: 0 0\\n40000000 0\\n0 40000000\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n\"\nassert solution(11) == \"0 0\\n40000000 0\\n0 40000000\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n\", \"Expected output: 0 0\\n40000000 0\\n0 40000000\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n\"\nassert solution(12) =="
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution.__doc__ == \"\"\"\n\nYou are the boss of ACM (Association for Convex Main Office), an upstanding company with a single goal of world domination.\n\nToday, you have decided to move your main office from Helsinki to Singapore. You have purchased a square-shaped land in Singapore, represented as a square on a two dimensional Cartesian plane. The size of your land is $(4 \\cdot 10^7) \\times (4 \\cdot 10^7)$.\n\nAfter much deliberation, your engineers have devised the optimal shape of your new main office. It will be a grand building, shaped as a convex polygon on the two dimensional grid (a convex polygon is a simple polygon such that for any two of its vertices, the straight line connecting the two vertices is completely inside the polygon). More specifically, your main office is represented by a polygon with at least $3$ vertices such that:\n - Each vertex is located on a lattice point (lattice points are points which coordinates are integers).\n - The coordinates of all vertices are between $0$ and $4 \\cdot 10^7$, inclusively.\n - All vertices are located on distinct points.\n - No three vertices are collinear (that is, no three vertices should be on a line).\n - All the vertices form a convex polygon in some order.\n\nIt is a known fact that the number of vertices composing your main office is very important. A lucky number would positively influence the chance of success for all of your evil missions. Thus, given $N$, the number of vertices of the main office, can you generate any one possible way to construct your main office? That is, you should output any possible set of $N$ locations of the $N$ vertices of your main office that has the properties described earlier.\n\n-----Input-----\nThe first line contains a non-negative integer $3 \\leq N \\leq 400000$, giving the number of vertices your main office should have.\n\n-----Output-----\nOutput exactly $N$ lines. Each line consists of two integers $0 \\le x, y \\le 4 \\cdot 10^7$, denoting the coordinates of a vertex making up your main office. The coordinates can be given in any order and must adhere to your main office\u2019s restrictions as described in the problem statement.\n\nWarning: Your program will have to write lots of output. Please use fast output routine to minimize the risk of getting a \u2018Time Limit Exceeded\u2019 verdict.\n\n-----Examples-----\nSample Input:\n3\nSample Output:\n0 0\n40000000 0\n0 40000000\n"
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"\"\"\n0 0\n40000000 0\n0 40000000\n\"\"\""
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == \"0 0\\n40000000 0\\n0 40000000\""
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, \"The output does not match the expected output.\""
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 5 5 2\") == \"1\"\nassert solution(\"2 3 4 9\") == \"impossible\"\n"
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 5 5 2\") == \"1\"\n\nprint(\"Passed\")"
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5 5 2\") == 1, \"The correct grade should be 1.\""
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"1\""
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 5 5 2\") == \"1\""
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 5 5 2\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 5 5 2\") == \"1\\n\"\nassert solution(\"2 3 4 9\") == \"impossible\\n\""
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 5 5 2\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"2 3 4 9\") == \"impossible\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 5 5 2\") == \"1\"\nassert solution(\"2 3 4 9\") == \"impossible\""
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 1\n"
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected_output, \"Incorrect output\""
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0') == '2'\nassert solution('20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0') == '2'\nassert solution('20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0') == '2'\nassert solution('20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0') == '2'"
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '2'\n\nfrom typing import List"
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '2\\n'"
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '2'\nassert solution(\"5\\n1 2 3 4 5\\n1 2 3 4 5\") == '2'\nassert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == '2'\nassert solution(\"5\\n1 2 3 4 5\\n1 2 3 4 5\") == '2'\nassert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == '2'\n"
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0') == '2\\n0'\nassert solution('10 2 3 4\\n5 0 0\\n0 0 0\\n0 0 0') == '1\\n0'\nassert solution('4 5 6 7\\n1 0 0\\n0 0 0\\n0 0 0') == '2\\n0'"
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0') == '2'\n"
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"2\"\nassert solution(\"1 2 3 4 5\\n10 10 10 10 10\") == \"10\"\nassert solution(\"1 0 0 0 0\\n0 0 0 0 0\") == \"0\"\nassert solution(\"0 0 0 0 0\") == \"0\"\nassert solution(\"0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\") == \"0\""
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0') == '2\\n'\nassert solution('20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0') == '0\\n'\nassert solution('20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0') == '0\\n'\nassert solution('20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0') == '0\\n'\nassert solution('20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0') == '0\\n'"
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"2\\n\"\nassert solution(\"3 1\\n1 2\\n3 1\\n2 3\\n1 2\") == \"1\\n\"\nassert solution(\"10 5 5 10\\n5 10 20 10\\n5 7 10 10\\n10 15 20 15\") == \"15\\n\"\nassert solution(\"10 5 5 10\\n5 10 20 10\\n5 7 10 10\\n10 15 20 15\") == \"0\\n\""
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"13\") == \"12 14\""
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"13\") == \"12 14\", \"Incorrect output\"\nassert solution(\"1001\") == \"1000 1001\", \"Incorrect output\"\nassert solution(\"1234\") == \"1233 1234\", \"Incorrect output\"\nassert solution(\"912345678901234567890\") == \"912345678901234567890 912345678901234567890\", \"Incorrect output\"\nassert solution(\"123456789012345678901234567890\") == \"912345678901234567890 912345678901234567890\", \"Incorrect output\""
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(13) == \"12 14\""
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(13) == '12 14'"
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"13\") == \"12 14\""
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '12 14', \"Your solution is incorrect.\""
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, \"Test failed. Please fix the given code and ensure it passes the tests.\""
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(13) == \"12 14\", \"Test case failed!\""
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"13\") == \"12 14\""
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(13) == \"12 14\""
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\") == 0, \"Incorrect answer\""
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\") == 0, \"Expected 0, got: {}\".format(solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\"))\n"
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1') == 0\nassert solution('5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n5 1 1') == 2\nassert solution('5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n5 0 1') == 1\nassert solution('5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n5 1 1\\n5 0 1') == 3\nassert solution('5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n5 1 1\\n5 0 1\\n5 1 1\\n5 0 1') == 1\nprint(1)"
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"0\\n\"\n"
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1') == '0\\n'\nassert solution('1\\n0 0\\n0 1\\n0 1\\n0 0') == '0\\n'\nassert solution('2\\n0 0\\n1 1\\n0 0\\n1 0') == '0\\n'\nassert solution('3\\n1 1\\n1 0\\n1 1\\n1 0') == '2\\n'\nassert solution('4\\n0 1\\n0 0\\n1 0\\n1 1\\n0 1\\n0 0') == '0\\n'\nassert solution('5\\n0 1\\n0 0\\n1 0\\n1 1\\n0 1\\n0 0') == '0\\n'"
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1') == 0\nassert solution('10\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n4 0 1\\n4 0 0\\n4 0 1\\n4 0 0') == 1"
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\") == \"0\\n0\"\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 0\\n3 0 1\\n3 0 0\") == \"0\\n0\"\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\") == \"0\\n0\"\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\") == \"0\\n0\"\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\") == \"0\\n0\"\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\") == \"0\\n0\""
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Test failed: Expected output {output}, got {solution(input())}\""
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_data) == expected_output, f\"Test case {case_number} failed: Expected {expected_output}, got {solution(input_data)}\""
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 0, \"Expected output 0, got \" + str(solution())\nassert solution() == 0, \"Expected output 0, got \" + str(solution())\nassert solution() == 0, \"Expected output 0, got \" + str(solution())\nassert solution() == 0, \"Expected output 0, got \" + str(solution())\nassert solution() == 0, \"Expected output 0, got \" + str(solution())\nassert solution() == 0, \"Expected output 0, got \" + str(solution())"
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n\", \"Please provide the correct input\""
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\"\nassert solution(\"1 1\\n2 2\\n3 3\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\"\nassert solution(\"1 2\\n2 3\\n3 1\\n2 1\\n1 3\\n2 2\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\"\nassert solution(\"1 1\\n2 2\\n3 3\\n4 4\\n5 5\") == \"-1\"\nassert solution(\"1 1\\n2 2\\n3 4\") == \"-1\"\nassert solution(\"1 1\\n2 2\\n3 4\\n4 5\") == \"-1\"\nassert solution(\"1 1\\n2 2\\n3 4\\n4 5\\n5 4\") == \"-1\"\nassert solution(\"1 1\\n2 2\\n3 4\\n4 5\\n5 3\") == \"-1\"\nassert solution(\"1 1\\n2 2\\n3 4\\n4 5\\n5 3\\n6 1\") == \"-1\"\nassert solution(\"1 1\\n2 2\\n3 4\\n4 5\\n5 3\\n6 2\") == \"-1\"\nassert solution(\"1 1\\n2 2\\n3 4\\n4 5\\n5 3\\n6 2\\n7 3\") == \"-1\"\nassert solution(\"1 1\\n2 2\\n3 4\\n4 5\\n5 3\\n6 2\\n7 2\") == \"-1\"\nassert solution(\"1 1\\n2 2\\n3 4\\n4 5\\n5 3\\n6 2\\n7 2\\n8 1\") == \"-1\""
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n\"\n"
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\"\nassert solution(\"1 1\") == \"1 1\"\nassert solution(\"10 10\") == \"1 1\\n10 10\"\nassert solution(\"1 1\\n2 2\\n3 3\") == \"1 1\\n2 2\\n3 3\"\nassert solution(\"1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\") == \"-1\""
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n\""
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input()) == sample_output()"
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output() for input, output in zip(sample_inputs, sample_outputs)"
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == output, f\"Incorrect output. Expected '{output}', got '{solution(stdin)}'.\"\nfor _ in range(tests):\n    N, M = map(int, input().split())\n    a = list(map(int, input().split()))\n    tour = solution(f\"N={N},M={M}\\n{N} {M}\\n{M} {N}\\n\")\n    assert len(tour) >= 2\n    visited = set()\n    for i in range(N):\n        for j in range(M):\n            if a[i][j] == 1:\n                visited.add((i, j))\n    for i in range(N-1):\n        for j in range(M-1):\n            if a[i][j] == 1:\n                for k in range(i+1, N):\n                    for l in range(j+1, M):\n                        if a[k][l] == 1 and (k-i)**2 + (l-j)**2 == 2:\n                            if k not in visited or l not in visited:\n                                tour.append((k, l))\n                                visited.add((k, l))\n                                break\n    assert len(tour) >= 2\n    visited = set()\n    for i in range(N):\n        for j in range(M):\n            if a[i][j] == 1:\n                visited.add((i, j))\n    for i in range(N-1):\n        for j in range(M-1):\n            if a[i][j] == 1:\n                for k in range(i+1, N):\n                    for l in range(j+1, M):\n                        if a[k][l] == 1 and (k-i)**2 + (l-j)**2 == 3:\n                            if k not in visited or l not in visited:\n                                tour.append((k, l))\n                                visited.add((k, l))\n                                break\n    assert len(tour) >= 2\n    for i in range(len(tour)):\n        tour[i] =''.join(map(str, tour[i]))\n    print('\\n'.join(tour))"
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n\"\nassert solution(\"2 4\\n\") == \"-1\\n\"\nassert solution(\"1 2\\n\") == \"1 2\\n\"\nassert solution(\"2 1\\n\") == \"1 2\\n\"\nassert solution(\"3 4\\n\") == \"1 1\\n1 3\\n2 2\\n2 1\\n3 4\\n\""
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 1, \"1. expected output\"\nassert solution() == 2, \"2. expected output\"\nassert solution() == 3, \"3. expected output\"\nassert solution() == 4, \"4. expected output\"\nassert solution() == 5, \"5. expected output\""
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 10\\n0 10 1\\n0 10 1\\n0 10 1\") == \"3.33333333\\n3.33333333\\n3.33333333\\n\"\n"
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == ['3.33333333']"
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 10\\n0 10 1\\n0 10 1\\n0 10 1\") == \"3.33333333\\n3.33333333\\n3.33333333\""
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == [\"3.33333333\", \"3.33333333\", \"3.33333333\"]"
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n    3 10\n    0 10 1\n    0 10 1\n    0 10 1\n''') == '3.33333333\\n3.33333333\\n3.33333333'\n\nassert solution('''\n    3 5\n    1 10 2\n    2 10 3\n    3 10 4\n    4 10 5\n''') == '1.0\\n3.0\\n5.0\\n7.0\\n9.0'\n\nassert solution('''\n    3 10\n    0 10 1\n    0 10 1\n    0 10 1\n    1 10 2\n    2 10 3\n    3 10 4\n    4 10 5\n    5 10 6\n    6 10 7\n    7 10 8\n    8 10 9\n    9 10 10\n''') == '1.0\\n3.0\\n5.0\\n7.0\\n9.0\\n1.0\\n3.0\\n5.0\\n7.0\\n9.0\\n1.0\\n3.0\\n5.0\\n7.0\\n9.0\\n1.0\\n3.0\\n5.0\\n7.0\\n9.0\\n1.0\\n3.0\\n5.0\\n7.0\\n9.0\\n1.0\\n3.0\\n5.0\\n7.0\\n9.0'"
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Solution is incorrect. Expected output: {expected_output}, Received output: {solution(input())}\"\n"
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n3 10\n0 10 1\n0 10 1\n0 10 1\n''') == '3.33333333\\n3.33333333\\n3.33333333\\n'\n\nassert solution('''\n5 50\n0 2 3 4 5\n0 1 1 1 1\n0 1 1 1 1\n0 1 1 1 1\n''') == '5.00000000\\n5.00000000\\n5.00000000\\n'\n\nassert solution('''\n4 5\n0 5 10 20\n0 5 15 25\n0 10 20 30\n0 15 25 35\n''') == '4.50000000\\n4.50000000\\n4.50000000\\n'\n\nassert solution('''\n6 5\n0 5 10 20 30\n0 5 15 25 35\n0 10 20 30 40\n0 15 25 35 45\n0 20 30 40 50\n''') == '4.83333333\\n4.83333333\\n4.83333333\\n'\n\nassert solution('''\n5 10\n0 10 20\n0 10 30\n0 10 40\n0 10 50\n''') == '5.00000000\\n5.00000000\\n5.00000000\\n'\n\nassert solution('''\n4 10\n0 10 20\n0 10 30\n0 10 40\n0 10 50\n''') == '5.00000000\\n5.00000000\\n5.00000000\\n'\n\nassert solution('''\n10 5\n0 5 10\n0 5 20\n0 5 30\n0 5 40\n0 5 50\n''') == '10.00000000\\n10.00000000\\n10.00000000\\n'\n\nassert solution('''\n7 10\n0 10 20 30 40 50\n0 10 30 40 50 60\n0 10 40 50 60 70\n0 10 50 60 70 80\n0 10 60 70 80 90\n0 10 70 80 90 100\n0 10 80 90 100 110\n0 10 90 100 110 120\n0 10 100 110 120 130\n''') == '9.47591667\\n9.47591667\\n9.47591667\\n'\n\nassert solution('''\n5 20\n0 20 40\n0 20 60\n0 20 80\n0 20 100\n''') == '5.00000000\\n5.00000000\\n5.00000000\\n'\n\nassert solution('''\n3 15\n0 15 30\n0 15 45\n0 15 60\n0 15 75\n''') == '3.00000000\\n3.00000000\\n3.00000000\\n'\n\nassert solution('''\n4 1"
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(solution.__doc__) == '''\nOutput:\n3.33333333\n3.33333333\n3.33333333\n\nExplanation:\nThe first sample has the allocation satisfying the constraints.\n\nThe second sample has no allocation satisfying the constraints and has a relative error of 10^{-6} to the optimal solution.\n\nThe third sample has no allocation satisfying the constraints and has an absolute error of 10^{-6} to the optimal solution.\n'''"
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '3.33333333'\n"
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"1\" # 1 match for 1 point Julia in the lead\nassert solution(4) == \"0\" # 0 matches for 2 points Julia in the lead\nassert solution(10) == \"0\" # 0 matches for 10 points Julia in the lead\nassert solution(11) == \"0\" # 0 matches for 11 points Julia in the lead"
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin='3\\n3 3 2') == '1\\n'\nassert solution(stdin='5\\n1000000000 1000000000 1000000000 1000000000 1000000000') == '2\\n'\nassert solution(stdin='3\\n5 5 5') == '1\\n'\nassert solution(stdin='5\\n1000000000 1000000000 1000000000 1000000000 0') == '3\\n'\nassert solution(stdin='5\\n1000000000 1000000000 1000000000 0 0') == '4\\n'"
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1\\n\""
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"1\"\nassert solution(5) == \"2\"\nassert solution(10) == \"1\"\nassert solution(25) == \"1\""
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"3\\n3 3 2\\n\") == \"1\\n\""
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 3, 2) == 1\nassert solution(5, 5, 5) == 0\nassert solution(3, 1, 5) == 1\nassert solution(6, 5, 5) == 2\n"
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n3 3 2\") == \"1\" # Test 1\n\nfrom itertools import combinations"
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1\\n\"\nassert solution(stdin) == \"2\\n\"\nassert solution(stdin) == \"1\\n\"\nassert solution(stdin) == \"2\\n\"\nassert solution(stdin) == \"2\\n\"\nassert solution(stdin) == \"3\\n\"\nassert solution(stdin) == \"1\\n\"\nassert solution(stdin) == \"2\\n\"\nassert solution(stdin) == \"1\\n\"\nassert solution(stdin) == \"2\\n\"\nassert solution(stdin) == \"3\\n\"\nassert solution(stdin) == \"2\\n\"\nassert solution(stdin) == \"3\\n\"\nassert solution(stdin) == \"3\\n\""
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n    3\n    3 3 2\n    ''') == '1\\n'\n\nassert solution('''\n    4\n    3 3 2\n    2 4 1\n    ''') == '1\\n'\n\nassert solution('''\n    5\n    3 3 2\n    2 4 1\n    1 5 4\n    4 5 1\n    ''') == '2\\n'\n\nassert solution('''\n    6\n    3 3 2\n    2 4 1\n    1 5 4\n    4 5 1\n    2 1 2\n    ''') == '2\\n'\n\nassert solution('''\n    7\n    3 3 2\n    2 4 1\n    1 5 4\n    4 5 1\n    2 1 2\n    1 3 4\n    ''') == '2\\n'\n\nassert solution('''\n    8\n    3 3 2\n    2 4 1\n    1 5 4\n    4 5 1\n    2 1 2\n    1 3 4\n    2 5 2\n    ''') == '3\\n'"
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\nabba\") == \"2\"\nassert solution(\"5 1\\ncat, cat, bouldering\") == \"0\"\nassert solution(\"5 1\\ncat, bouldering, cat, cat, cat, bouldering\") == \"4\"\nassert solution(\"5 2\\ncat, bouldering, cat, cat, bouldering, cat, cat\") == \"7\"\nassert solution(\"6 3\\nbouldering, bouldering, cat, bouldering, bouldering, bouldering\") == \"10\"\nassert solution(\"7 4\\nbouldering, bouldering, cat, bouldering, bouldering, bouldering, bouldering, bouldering, bouldering, bouldering, bouldering\") == \"18\""
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\nabba\\n\") == \"2\"\nassert solution(\"4 2\\nabc\\n\") == \"2\"\nassert solution(\"4 2\\nccba\\n\") == \"3\"\nassert solution(\"4 2\\ncbba\\n\") == \"3\"\nassert solution(\"4 2\\nabcabba\\n\") == \"4\"\n"
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 2\\nabba') == '2\\n'\n"
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '2'\n"
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2\\n\", \"Test failed\""
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\nabba\\n\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 2\n"
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 2\\nabba\\n') == '2'\nassert solution('5 3\\nabcde\\nuvwxyz\\n') == '2'\nassert solution('6 3\\nabcd\\nuvwxyz\\n') == '2'\nassert solution('7 4\\nabcdefg\\nuvwxyz\\n') == '3'\nassert solution('8 4\\nabcdefg\\nuvwxyz\\n') == '3'\nassert solution('9 4\\nabcdefg\\nuvwxyz\\n') == '3'\nassert solution('10 5\\nabcdefg\\nuvwxyz\\nxyz') == '4'\n\nfrom typing import List"
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    4 2\n    abba\n    \"\"\"\n) == \"2\\n\"\n\nassert solution(\n    \"\"\"\n    5 3\n    abc def\n    \"\"\"\n) == \"3\\n\"\n\nassert solution(\n    \"\"\"\n    3 2\n    abc def\n    \"\"\"\n) == \"2\\n\"\n\nassert solution(\n    \"\"\"\n    3 1\n    abcd\n    \"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n    2 1\n    ab\n    \"\"\"\n) == \"1\\n\""
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\nabba\") == \"2\"\nassert solution(\"4 3\\naaaabbb\") == \"2\"\nassert solution(\"4 3\\naaaabbbcc\") == \"3\"\nassert solution(\"4 1\\naaa\") == \"2\"\nassert solution(\"5 1\\naaaabbbcccddddeeeeeffff\") == \"3\""
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n2 4\") == \"3\"\n"
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n4 3\n1 2\n2 3\n2 4\n\"\"\") == \"3\\n\"\n\nassert solution(\"\"\"\n5 4\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n\"\"\") == \"4\\n\"\n\nassert solution(\"\"\"\n2 2\n1 2\n1 3\n\"\"\") == \"1\\n\"\n\nassert solution(\"\"\"\n3 2\n1 2\n2 2\n\"\"\") == \"1\\n\"\n\nassert solution(\"\"\"\n1 3\n1 4\n2 3\n2 4\n\"\"\") == \"2\\n\""
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 3\\n1 2\\n2 3\\n2 4') == 3, \"Test failed\""
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 3\\n1 2\\n2 3\\n2 4') == '3'\nassert solution('5 3\\n1 2\\n2 3\\n2 4') == '4'\nassert solution('1 5\\n1 3\\n2 3\\n3 4') == '2'\nassert solution('1 5\\n2 3\\n1 3\\n3 4') == '3'\nassert solution('1 5\\n2 3\\n3 4\\n1 3') == '3'"
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n2 4\\n\") == \"3\\n\""
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)\nassert solution(str(input())) == str(3)"
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"3\\n\""
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n4 3\n1 2\n2 3\n2 4\n\"\"\"\n) == \"3\\n\""
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n4 3\n1 2\n2 3\n2 4\n''') == '3'\n\nassert solution('''\n2 2\n1 2\n2 2\n3 3\n4 4\n''') == '4'\n\nassert solution('''\n1 1\n1 1\n''') == '1'\n\nassert solution('''\n5 5\n1 2\n2 3\n3 4\n4 5\n5 1\n''') == '5'"
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n2 4\\n\") == \"3\"\nassert solution(\"4 1\\n1 2\\n2 3\\n2 4\\n\") == \"3\"\nassert solution(\"4 2\\n1 2\\n2 3\\n2 4\\n\") == \"2\"\nassert solution(\"4 1\\n1 2\\n2 3\\n3 4\\n\") == \"1\""
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"The output '{solution(input())}' is incorrect for the input '{input()}'.\""
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3') == '1\\n0\\n'\nassert solution('3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3\\n1 3\\n2 3') == '1\\n0\\n'"
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 0\\n0 1\\n1000 1\\n1 3\\n2 3\") == \"1\\n0\\n\""
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3\") == \"1\\n0\\n\"\nassert solution(\"3 2\\n4 5\\n6 7\\n8 9\\n10 11\") == \"2\\n1\\n\"\nassert solution(\"3 2\\n1 0\\n1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\") == \"1\\n1\\n\"\nassert solution(\"3 2\\n1 0\\n1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\") == \"1\\n0\\n\"\nassert solution(\"3 2\\n1 0\\n1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\") == \"1\\n0\\n\""
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Output: {solution(input())}\\nInput: {input()}\"\nfor i in range(int(input())):\n    houses, requests = map(int, input().split())\n    addresses = list(map(int, input().split()))\n    zoning_requests = [(a, b) for a, b in zip(addresses, addresses[1:])]\n\n    print(min_side_length(houses, zoning_requests))"
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3\") == \"1\\n0\""
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n0\\n1\\n1000\\n1\\n3\\n2\\n3\\n\") == \"1\\n0\\n\"\nassert solution(\"2\\n2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n"
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3\") == \"1\\n0\\n\\n\\n\\n\"\nassert solution(\"5 2\\n1 0\\n2 1\\n2 2\\n2 3\\n3 3\") == \"2\\n1\\n2\\n1\\n2\\n\"\nassert solution(\"10 10\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\") == \"11\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n\"\nassert solution(\"10 1\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\") == \"11\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n\""
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3\\n\") == \"1\\n0\\n\"\nassert solution(\"4 5\\n1 0\\n2 1\\n3 2\\n4 3\\n\") == \"0\\n0\\n\"\nassert solution(\"5 5\\n1 0\\n2 1\\n3 2\\n4 3\\n5 4\\n\") == \"0\\n0\\n\"\nassert solution(\"6 6\\n1 0\\n2 1\\n3 2\\n4 3\\n5 4\\n6 5\\n\") == \"0\\n0\\n\"\nassert solution(\"7 7\\n1 0\\n2 1\\n3 2\\n4 3\\n5 4\\n6 5\\n7 6\\n\") == \"0\\n0\\n\""
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '1\\n0\\n'\nassert solution() == '0\\n1\\n'\nassert solution() == '1\\n1\\n'\nassert solution() == '1\\n2\\n'"
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"7\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\\n\""
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"7\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 7, \"The solution does not work correctly\""
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 7, \"Test failed\""
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 2 3\\n3 2 2\\n5 2 1\\n3 2 1\\n1 2 1\\n1 2 3\") == \"7\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 'def solution(stdin: str) -> str:\\n    pass\\n\\n', \"Please fill in the correct solution for this problem.\""
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n1 2 3\\n3 2 2\\n5 2 1\\n3 2 1\\n1 2 1') == '7\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 2 3\\n3 2 2\\n5 2 1\\n3 2 1\\n1 2 1\") == \"7\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '7\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\\n', \"Incorrect solution\""
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"7\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), \"Test failed\""
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\") == \"20\"\nassert solution(\"5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\") == \"20\""
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\") == \"20\"\n"
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100') == '20\\n'"
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\") == \"20\"\nassert solution(\"5 2\\nlinearalgebra 10\\ncalculus1 20\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\") == \"15\""
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\") == \"20\"\nassert solution(\"5 2\\nlinearalgebra 10\\ncalculus2 20\\nhonorsanalysis2 100\\ncalculus1 10\") == \"30\"\nassert solution(\"5 2\\nlinearalgebra 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\") == \"50\"\n\nfrom typing import List"
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"20\""
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100') == '20'\n\nsolution('5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100')"
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\") == \"20\""
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\") == \"20\""
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"6\\n\"\n"
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\n1 2 2\\n2 3 4\\n3 4 1\\n4 1 2\\n3\\n1 4 2\\n3 3 3\\n4 3 6\\n\") == \"6\\n\"\n"
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"4 4\\n1 2 2\\n2 3 4\\n3 4 1\\n4 1 2\\n3\\n1 4 2\\n3 3 3\\n4 3 6\") == 6\\n\\n# Test cases\\nassert solution(\"4 4\\n1 2 2\\n2 3 4\\n3 4 1\\n4 1 2\\n3\\n1 4 2\\n3 3 3\\n4 3 6\\n1\") == 0'"
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"6\\n\"\n"
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\n1 2 2\\n2 3 4\\n3 4 1\\n4 1 2\\n3\\n1 4 2\\n3 3 3\\n4 3 6\") == 6, \"Incorrect output\""
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == 6\nprint(\"All tests passed\")"
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_str) == output_str, f\"Test failed for solution: {solution(input_str)}\""
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input) == output, f\"Input: {input}, Output: {output}\"\n"
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"6\\n\", \"The output of the function should be 6.\"\n\nsolution = \"\"\"\nfrom typing import List"
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2\\nimpossible\"\n"
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''3 1 1\n2\n3\n1 2\n2 3 1\n1 1''') == '2\\n'"
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == output, f\"Expected {output}, got {solution(stdin)}\""
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\") == \"2\\n\"\nassert solution(\"3 2 2\\n1\\n2\") == \"impossible\\n\""
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2\\n\"\n"
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n3 1 1\n2\n3\n1 2\n2 3 1\n1 1\n''') == '2\\n'"
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2\", \"Test case 1 failed\""
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\\n2\"\nassert solution(stdin) == \"impossible\\n2\""
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2\\n\", \"The solution is incorrect.\""
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Output: {output}, Actual: {solution(input())}\""
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n250 250\\n250 750\\n\") == \"500.00\""
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"500.00\""
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\n250 250\\n250 750') == '500.00\\n'\nassert solution('3\\n250 250\\n250 750') == '1000.00\\n'\nassert solution('4\\n250 250\\n250 750') == '2500.00\\n'\nassert solution('5\\n250 250\\n250 750') == '5000.00\\n'\nassert solution('6\\n250 250\\n250 750') == '7500.00\\n'\nassert solution('7\\n250 250\\n250 750') == '10000.00\\n'\nassert solution('8\\n250 250\\n250 750') == '12500.00\\n'\nassert solution('9\\n250 250\\n250 750') == '15000.00\\n'\nassert solution('10\\n250 250\\n250 750') == '17500.00\\n'\nassert solution('11\\n250 250\\n250 750') == '20000.00\\n'\nassert solution('12\\n250 250\\n250 750') == '22500.00\\n'\nassert solution('13\\n250 250\\n250 750') == '25000.00\\n'\nassert solution('14\\n250 250\\n250 750') == '27500.00\\n'\nassert solution('15\\n250 250\\n250 750') == '30000.00\\n'\nassert solution('16\\n250 250\\n250 750') == '32500.00\\n'\nassert solution('17\\n250 250\\n250 750') == '35000.00\\n'\nassert solution('18\\n250 250\\n250 750') == '37500.00\\n'\nassert solution('19\\n250 250\\n250 750') == '40000.00\\n'\nassert solution('20\\n250 250\\n250 750') == '42500.00\\n'\nassert solution('21\\n250 250\\n250 750') == '45000.00\\n'\nassert solution('22\\n250 250\\n250 750') == '47500.00\\n'\nassert solution('23\\n250 250\\n250 750') == '50000.00\\n'\nassert solution('24\\n250 250\\n250 750') == '52500.00\\n'\nassert solution('25\\n250 250\\n250 750') == '55000.00\\n'\nassert solution('26\\n250 250\\n250 750') == '57500.00\\n'\nassert solution('27\\n250 250\\n250 750') == '60000.00\\n'\nassert solution('28\\n250 250\\n250 750') == '62500.00\\n'\nassert solution('29\\n250 250"
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"500.00\\n\", \"The output should be 500.00\""
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n    2\n    250 250\n    250 750\n''') == '500.00'\n\nprint(solution(''))"
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n2\n250 250\n250 750\n''') == 500.0\nprint('All tests passed.')"
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\n250 250\\n250 750') == '500.00', 'The solution is incorrect'"
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n250 250\\n250 750\") == 500.0, \"The output should be 500.0.\""
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2\\n250 250\\n250 750') == 500.0\nassert solution('2\\n250 250\\n250 750\\n250 500') == 500.0\nassert solution('2\\n250 250\\n250 750\\n250 500\\n250 800') == 500.0\nassert solution('2\\n250 250\\n250 750\\n250 500\\n250 800\\n250 900') == 500.0\nassert solution('2\\n250 250\\n250 750\\n250 500\\n250 800\\n250 900\\n250 1000') == 500.0\nassert solution('2\\n250 250\\n250 750\\n250 500\\n250 800\\n250 900\\n250 1000\\n250 1100') == 500.0\nassert solution('2\\n250 250\\n250 750\\n250 500\\n250 800\\n250 900\\n250 1000\\n250 1100\\n250 1200') == 500.0\nassert solution('2\\n250 250\\n250 750\\n250 500\\n250 800\\n250 900\\n250 1000\\n250 1100\\n250 1200\\n250 1300') == 500.0\nassert solution('2\\n250 250\\n250 750\\n250 500\\n250 800\\n250 900\\n250 1000\\n250 1100\\n250 1200\\n250 1300\\n250 1400') == 500.0"
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 500.00\n"
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0\""
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n2 100 10\\n100 1 10\") == \"0\\n0\" # Correct answer\nassert solution(\"1 2\\n3 4\\n5 6\") == \"3\\n8\" # Correct answer\nassert solution(\"2 1\\n1 2\\n2 3\") == \"0\\n4\" # Correct answer\nassert solution(\"1 2\\n1 1\\n2 2\\n2 1\") == \"1\\n2\" # Correct answer\nassert solution(\"2 2\\n1 1\\n2 2\\n2 1\") == \"0\\n0\" # Correct answer\nassert solution(\"2 10\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n15 16\\n17 18\\n19 20\\n21 22\\n23 24\\n25 26\\n27 28\\n29 30\\n31 32\\n33 34\\n35 36\\n37 38\\n39 40\\n41 42\\n43 44\\n45 46\\n47 48\\n49 50\\n51 52\\n53 54\\n55 56\\n57 58\\n59 60\\n61 62\\n63 64\\n65 66\\n67 68\\n69 70\\n71 72\\n73 74\\n75 76\\n77 78\\n79 80\\n81 82\\n83 84\\n85 86\\n87 88\\n89 90\\n91 92\\n93 94\\n95 96\\n97 98\\n99 100\") == \"0\\n230\" # Correct answer"
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 0, \"The expected output is not correct.\""
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '0\\n', \"Output should be 0\""
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"0\""
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"0\", \"Your code is not passing the test case.\""
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    2 3\n    2 100 10\n    100 1 10\n    \"\"\"\n) == \"0\\n\"\n\nassert solution(\n    \"\"\"\n    3 1\n    3 100\n    100 10 100\n    \"\"\"\n) == \"60\\n\"\n\nassert solution(\n    \"\"\"\n    5 5\n    50 20\n    100 10\n    50 30\n    100 5\n    \"\"\"\n) == \"150\\n\"\n\nassert solution(\n    \"\"\"\n    5 10\n    50 20\n    100 10\n    50 30\n    100 5\n    \"\"\"\n) == \"500\\n\""
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    2 3\n    2 100 10\n    100 1 10\n    \"\"\"\n) == \"0\"\n\nassert solution(\n    \"\"\"\n    3 2\n    10 100 100\n    \"\"\"\n) == \"310\"\n\nassert solution(\n    \"\"\"\n    2 1\n    10 100 100\n    \"\"\"\n) == \"0\"\n\nassert solution(\n    \"\"\"\n    3 1\n    10 100 100\n    \"\"\"\n) == \"310\"\n\nassert solution(\n    \"\"\"\n    1 2\n    10 100 100\n    \"\"\"\n) == \"0\"\n\nassert solution(\n    \"\"\"\n    2 3\n    2 100 10\n    100 1 10\n    \"\"\"\n) == \"0\"\n\nassert solution(\n    \"\"\"\n    3 2\n    10 100 100\n    \"\"\"\n) == \"310\"\n\nassert solution(\n    \"\"\"\n    2 1\n    10 100 100\n    \"\"\"\n) == \"0\"\n\nassert solution(\n    \"\"\"\n    3 1\n    10 100 100\n    \"\"\"\n) == \"310\""
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n2 100 10\\n100 1 10\") == \"0\\n0\"\nassert solution(\"5 4\\n10 20 30\\n50 60 70\") == \"100\\n100\"\nassert solution(\"1 1\\n5 10\") == \"0\\n0\""
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 3\\n2 100 10\\n100 1 10\\n') == '0\\n'\n\nassert solution('1 2\\n1 100 20\\n100 1 50\\n200 1 30\\n') == '25\\n'\n\nassert solution('3 4\\n10 20\\n20 30\\n40 50\\n') == '300\\n'\n\nassert solution('5 6\\n100 200\\n200 300\\n300 400\\n400 500\\n') == '500\\n'"
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n\"\n) == \"2\"\nassert solution(\n    \"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n35 5 25 35\\n\"\n) == \"2\""
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\") == 2, \"Input should return 2\""
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"Output: 2\\n\", \"Test failed\""
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n\") == \"2\\n\""
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\") == \"2\"\nassert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n1 1\\n5 6\") == \"1\""
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == '''def solution(stdin: str) -> str:\n    pass\n'''"
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\") == \"2\"\n\nsolution = lambda stdin: str(int(stdin) + int(stdin))\nassert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\") == \"2\""
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\", \"The expected output is: '2', but instead got: '{}'.\".format(solution(stdin))"
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\") == \"2\""
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\") == \"2\"\n"
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\n2211\\n1112\\n1112\") == \"AAAA\\n.A.\\n..B\\n...C\\nCCCC\""
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 4\\n2211\\n1112\\n1112') == \"AAAA\\n....\\n...B\\n\"\nassert solution('3 4\\n2211\\n1112\\n1112\\n2222\\n2222\\n') == \"impossible\\n\"\nassert solution('3 4\\n2211\\n1112\\n1112\\n2222\\n2222\\n3333\\n3333\\n') == \"impossible\\n\"\nassert solution('3 4\\n2211\\n1112\\n1112\\n2222\\n2222\\n3333\\n3333\\n2222\\n2222\\n') == \"impossible\\n\"\nassert solution('3 4\\n2211\\n1112\\n1112\\n2222\\n2222\\n3333\\n3333\\n2222\\n2222\\n4444\\n4444\\n') == \"BBBB\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC\\nCCCC"
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n    3 4\n    2211\n    1112\n    1112\n    ''') == 'AAAA\\n...A\\n....\\n\\nBB..\\nBBBB\\n...B\\n\\n....\\n...C\\nCCCC\\n'"
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4\\n2211\\n1112\\n1112\") == \"AAAA\\n....\\n....\\n\"\nassert solution(\"3 4\\n2211\\n1112\\n1112\\n1112\") == \"BB..\\nBBBB\\nCCCC\\nCCCC\\n\"\nassert solution(\"3 4\\n1\\n1\\n1\\n\") == \"impossible\\n\""
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"AAAA\\n...A\\n....\\n\\nBBBB\\n...B\\n....\\n\\n....\\n...C\\nCCCC\""
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\n2211\\n1112\\n1112\\n\") == \"AAAA\\n...A\\n....\\n\\nBB..\\nBBBB\\n...B\\n\\n....\\n...C\\nCCCC\\n\\nimpossible\\n\""
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 4\\n2211\\n1112\\n1112') == 'AAAA\\n...A\\n....\\n\\nBB..\\nBBBB\\n...B\\n\\n....\\n...C\\nCCCC'"
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\n2211\\n1112\\n1112\") == \"AAAA\\nA...\\nB...\\nC...\\nimpossible\"\nassert solution(\"3 5\\n1111\\n1111\\n1111\\n1111\") == \"AAAA\\n...A\\n...A\\n...A\\nimpossible\"\nassert solution(\"3 6\\n1111\\n1111\\n1111\\n1111\\n1111\") == \"AAAA\\n...A\\n...A\\n...A\\n...A\\n...A\\nimpossible\"\nassert solution(\"3 7\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\") == \"AAAA\\n...A\\n...A\\n...A\\n...A\\n...A\\n...A\\nimpossible\"\nassert solution(\"3 8\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\") == \"AAAA\\n...A\\n...A\\n...A\\n...A\\n...A\\n...A\\n...A\\nimpossible\""
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 4\\n2211\\n1112\\n1112') == 'AAAA\\n...A\\n....\\n\\nBB..\\nBBBB\\n...B\\nCCCC\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test case 1\\nassert solution('3 4\\n2211\\n1112\\n1112') == 'AAAA\\n...A\\n....\\n\\nBB..\\nBBBB\\n...B\\nCCCC\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test case 2\\nassert solution('5 5\\n1111\\n1111\\n1111\\n1111') == 'BBBBBBBB\\nCCCCCCCC\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test case 3\\nassert solution('7 8\\n11111\\n11111\\n11111\\n11111\\n11111\\n11111\\n11111\\n11111\\n11111\\n
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4\\n2211\\n1112\\n1112\") == \"AAAA\\nA....\\nB..B\\nB...C\\nCCCC\\n\"\nassert solution(\"3 4\\n2211\\n1112\\n1112\\n1112\\n1112\\n1112\") == \"AAAA\\nA....\\nB..B\\nB...C\\nCCCC\\n\"\nassert solution(\"3 4\\n2211\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n11"
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 9"
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3\\n\") == 9, \"Test 1 failed\"\nassert solution(\"4 4\\n2 3\\n1 2\\n\") == 4, \"Test 2 failed\"\nassert solution(\"5 5\\n1 1\\n2 2\\n3 3\\n\") == 3, \"Test 3 failed\"\nassert solution(\"6 6\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n\") == 3, \"Test 4 failed\"\nassert solution(\"7 7\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n\") == 3, \"Test 5 failed\"\nassert solution(\"8 8\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n\") == 3, \"Test 6 failed\"\nassert solution(\"9 9\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n\") == 3, \"Test 7 failed\""
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3') == 9"
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3') == 9"
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"9\"\n"
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\npass\""
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3 1 3 3) == 9, \"Incorrect Output\"\nprint(\"Correct\")"
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3') == 9, \"Test failed\"\nprint(\"Test passed\")"
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"9\", \"The output is incorrect. Please fix it and try again.\""
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 9\n"
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 2 2 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5\") == 20.396078\n"
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 2 2 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5\\n\") == \"20.396078\""
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == expected_output, f\"Test failed: Expected output {expected_output}, got {solution}\""
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 2 2 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5\") == 20.396078\n"
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 2 2 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5\") == \"20.396078\""
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 2 2 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5\") == 20.396078, \"Test case failed\""
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('6 2 2 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5') == 20.396078\n"
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '20.396078'\n"
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('6 2 2 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5') == '20.396078\\n'\n"
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"20.396078\\n\"\n"
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abca\") == \"b\"\nassert solution(\"bc cd da dd ee ff gg hh ii jj kk ll mm\") == \"c\""
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abca\") == \"b\"\nassert solution(\"bc cd da dd ee ff gg hh ii jj kk ll mm\") == \"c\"\nassert solution(\"nn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"def\"\n"
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"b\\ncdefghijklmnopqrstuvwxyz\"\nassert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"b\\ncdefghijklmnopqrstuvwxyz\"\nassert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"b\\ncdefghijklmnopqrstuvwxyz\"\nassert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"b\\ncdefghijklmnopqrstuvwxyz\"\nassert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"b\\ncdefghijklmnopqrstuvwxyz\"\nassert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"b\\ncdefghijklmnopqrstuvwxyz\"\nassert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"b\\ncdefghijklmnopqrstuvwxyz\"\nassert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"b\\ncdefghijklmnopqrstuvwxyz\"\nassert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"b\\ncdefghijklmnopqrstuvwxyz\"\nassert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"b\\ncdefghijklmnopqrstuvwxyz\"\nassert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"b\\ncdefghijklmnopqrstuvwxyz\"\nassert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"b\\ncdefghijklmnopqrstuvwxyz\"\nassert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"b\\ncdefghijklmnopqrstuvwxyz\"\nassert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"b\\ncdefghijklmnopqrstuvwxyz\"\nassert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"b\\ncdefghijklmnopqrstuvwxyz\"\nassert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"b\\ncdefghijklmnopqrstuvwxyz\"\nassert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"b\\ncdefghijklmnopqrstuvwxyz\"\nassert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"b\\ncdefghijklmnopqrstuvwxyz\"\nassert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"b\\ncdefghijklmnopqrstuvwxyz\"\nassert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"b\\ncdefghijklmnopqrstuvwxyz\"\nassert solution(\"abca\\"
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abca\") == \"b\"\nassert solution(\"bc cd da dd ee ff gg hh ii jj kk ll mm\") == \"c\"\nassert solution(\"nn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"def\"\nassert solution(\"1 2 1 8\") == \"b\""
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abca\") == \"b\"\nassert solution(\"bc cd da dd ee ff gg hh ii jj kk ll mm\") == \"c\"\nassert solution(\"nn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"def\"\nassert solution(\"1\") == \"b\"\nassert solution(\"2\") == \"c\"\nassert solution(\"1 8\") == \"def\""
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abca\") == \"b\"\nassert solution(\"bc cd da dd ee ff gg hh ii jj kk ll mm\") == \"c\"\nassert solution(\"nn oo pp qq rr ss tt uu vv ww xx yy zz 1\") == \"def\"\nassert solution(\"abca\") == \"b\"\nassert solution(\"bc cd da dd ee ff gg hh ii jj kk ll mm\") == \"c\"\nassert solution(\"nn oo pp qq rr ss tt uu vv ww xx yy zz 1\") == \"def\""
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\\n1\\n2\\n1 8\") == \"b\\ncdef\""
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abca\") == \"b\"\nassert solution(\"bc cd da dd ee ff gg hh ii jj kk ll mm nn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"c\""
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abca\") == \"b\"\nassert solution(\"bc cd da dd ee ff gg hh ii jj kk ll mm\") == \"c\"\nassert solution(\"nn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"d\"\nassert solution(\"abca\") == \"b\"\nassert solution(\"bc cd da dd ee ff gg hh ii jj kk ll mm\") == \"c\"\nassert solution(\"nn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"d\""
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abca\") == \"b\"\nassert solution(\"bc cd da dd ee ff gg hh ii jj kk ll mm nn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"c\""
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\nhobotnica\\nrobot\\nhobi\\nhobit\\nrobi\\n4\\nrobi\\nhobi\\nhobit\\nrakija\") == \"12\\n10\\n16\\n7\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"hobotnica\\nrobot\\nhobi\\nhobit\\nrobi\") == \"hobi\"\nassert solution(\"hobotnica\\nrobot\\nhobi\\nhobit\\nrobi\\n\") == \"hobi\"\nassert solution(\"hobotnica\\nrobot\\nhobi\\nhobit\\nrobi\\nhob\\n\") == \"hob\"\nassert solution(\"hobotnica\\nrobot\\nhobi\\nhobit\\nrobi\\nhob\\nhob\\n\") == \"hob\"\nassert solution(\"hobotnica\\nrobot\\nhobi\\nhobit\\nrobi\\nhob\\nhob\\nhob\\n\") == \"hob\"\nassert solution(\"hobotnica\\nrobot\\nhobi\\nhobit\\nrobi\\nhob\\nhob\\nhob\\nhob\\n\") == \"hob\"\nassert solution(\"hobotnica\\nrobot\\nhobi\\nhobit\\nrobi\\nhob\\nhob\\nhob\\nhob\\nhob\\n\") == \"hob\"\nassert solution(\"hobotnica\\nrobot\\nhobi\\nhobit\\nrobi\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\n\") == \"hob\"\nassert solution(\"hobotnica\\nrobot\\nhobi\\nhobit\\nrobi\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\n\") == \"hob\"\nassert solution(\"hobotnica\\nrobot\\nhobi\\nhobit\\nrobi\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\n\") == \"hob\"\nassert solution(\"hobotnica\\nrobot\\nhobi\\nhobit\\nrobi\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\n\") == \"hob\"\nassert solution(\"hobotnica\\nrobot\\nhobi\\nhobit\\nrobi\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nhob\\nh"
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '12\\n10\\n16\\n7\\ndef solution(stdin: str) -> str:\\npass', 'The provided code does not match the expected output.'"
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"12\\n10\\n16\\n7\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\", \\\n    \"The solution is incorrect. Please check the provided code.\""
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\nhobotnica\\nrobot\\nhobi\\nhobit\\nrobi\\n4\\robi\\nhobi\\nhobit\\nrakija\") == \"12\\n10\\n16\\n7\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"Hello World\""
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\"\n"
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\nhobotnica\\nrobot\\nhobi\\nhobit\\nrobi\\n4\\nrobi\\nhobi\\nhobit\\nrakija') == '12\\n10\\n16\\n7\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"hobotnica\\nrobot\\n\") == \"ide\"\nassert solution(\"hobi\\nhobit\\n\") == \"hob\"\nassert solution(\"robi\\n\") == \"robi\"\nassert solution(\"hobi\\nhobit\\n\") == \"hob\"\nassert solution(\"rakija\\n\") == \"rakija\""
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=input()) == ['', '', '', '', '', '']"
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"THIS IS A TEST\""
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"14 4\\nJQ IRKEYFG EXQ\\n\") == \"THIS IS A TEST\""
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"14 4\\nJQ IRKEYFG EXQ\") == \"THIS IS A TEST\""
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('14 4\\nJQ IRKEYFG EXQ') == 'THIS IS A TEST'"
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"14 4\\nJQ IRKEYFG EXQ\") == \"THIS IS A TEST\""
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('14 4\\nJQ IRKEYFG EXQ') == 'THIS IS A TEST'\nassert solution('5 4\\n123 456 789') == 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\nassert solution('5 4\\n123456789012345678901234567890') == 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'"
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"14 4\\nJQ IRKEYFG EXQ\") == \"THIS IS A TEST\"\n"
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('14 4\\nJQ IRKEYFG EXQ') == 'THIS IS A TEST'\n"
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"14 4\\nJQ IRKEYFG EXQ\") == \"THIS IS A TEST\"\n"
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"14 4\\nJQ IRKEYFG EXQ\") == \"THIS IS A TEST\"\nassert solution(\"14 10\\nTEST\") == \"TEST\"\nassert solution(\"20 10\\nTEST\\nFOOBAR\") == \"TESTFOOBAR\"\nassert solution(\"3 10\\n1\\n2\\n3\") == \"3\""
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"135\\n270\\n135135\\n270270\\n\"\nassert solution(\"5\") == \"135\\n270\\n135135\\n270270\\n\"\nassert solution(\"1.1\") == \"135\\n270\\n135135\\n270270\\n\"\nassert solution(\"0.1\") == \"135\\n270\\n135135\\n270270\\n\"\nassert solution
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(135) == \"135\\n\"\nassert solution(270) == \"270\\n\"\nassert solution(135135) == \"135135\\n\"\nassert solution(270270) == \"270270\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2.6\") == \"135\\n270\\n135135\\n270270\"\nassert solution(\"2.222\") == \"135\\n270\"\nassert solution(\"2.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2.6\") == [\"135\", \"270\", \"135135\", \"270270\"]\nprint(\"All solutions are:\", solution(\"2.6\"))"
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(2.6) == ['135', '270', '135135', '270270']\nassert solution(3.14) == ['1', '3', '5', '7', '9', '11', '13', '15', '17', '19', '21', '23', '25', '27', '29', '31', '33', '35', '37', '39', '41', '43', '45', '47', '49', '51', '53', '55', '57', '59', '61', '63', '65', '67', '69', '71', '73', '75', '77', '79', '81', '83', '85', '87', '89', '91', '93', '95', '97', '99']"
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin='2.6') == '135 270 135135 270270'"
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(2.6) == \"135\\n270\\n135135\\n270270\"\n"
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2.6') == '135\\n270\\n135135\\n270270'\n"
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2.6') == '135\\n270\\n135135\\n270270'\nassert solution('3.14') == 'No solution'\nassert solution('12345678901234567890') == 'No solution'"
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(2.6) == ['135', '270']\nassert solution(3.14) == ['314159', '4503599627370496']\nassert solution(5.6789) == ['567890', '5789465196162562']\nassert solution(1.0) == ['10']\nassert solution
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt').read()) == \"4\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    4\n    0 1\n    3 7\n    4 5\n    6 5\n    9\n    1 4\n    1 6\n    2 3\n    2 5\n    3 5\n    3 6\n    4 8\n    5 4\n    6 3\n    \"\"\"\n) == \"4\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\") == \"4\"\nassert solution(\"2\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\") == \"def solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"3\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\") == \"4\"\nassert solution(\"4\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\") == \"4\"\nassert solution(\"5\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\") == \"4\"\nassert solution(\"6\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\") == \"4\"\nassert solution(\"7\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\") == \"4\"\nassert solution(\"8\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\") == \"4\"\nassert solution(\"9\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\") == \"4\"\nassert solution(\"10\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\") == \"4\""
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(4, \"\"\"\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n\"\"\") == 4\n\nassert solution(4, \"\"\"\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n\"\"\") == 4\n\nassert solution(4, \"\"\"\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n\"\"\") == 4\n\nassert solution(4, \"\"\"\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n\"\"\") == 4\n\nassert solution(4, \"\"\"\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n\"\"\") == 4\n\nassert solution(4, \"\"\"\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n\"\"\") == 4\n\nassert solution(4, \"\"\"\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n\"\"\") == 4\n\nassert solution(4, \"\"\"\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n\"\"\") == 4\n\nassert solution(4, \"\"\"\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n\"\"\") == 4\n\nassert solution(4, \"\"\"\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n\"\"\") == 4\n\nassert solution(4, \"\"\"\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n\"\"\") == 4\n\nassert solution(4, \"\"\"\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n\"\"\") == 4\n\nassert solution(4, \"\"\"\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n\"\"\") == 4"
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\\n\") == 4\n"
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\\n\") == 4"
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"4\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"\n"
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('solution.in', 'r')) == \"4\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\\n') == 4, \"Expected: 4, Actual: {}\".format(solution('4\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\\n'))"
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\") == 4\nprint(\"All tests passed!\")"
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 2\\n1 3\\n1 4\\n1 5\\n\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\"\nassert solution(\"5\\n1 2\\n1 3\\n1 4\\n1 5\\n6 7\\n4 5\\n2 4\\n3 6\\n\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\"\nassert solution(\"5\\n1 2\\n1 3\\n1 4\\n1 5\\n6 7\\n4 5\\n2 4\\n3 6\\n8 9\\n\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\"\nassert solution(\"5\\n1 2\\n1 3\\n1 4\\n1 5\\n6 7\\n4 5\\n2 4\\n3 6\\n8 9\\n10 11\\n12 13\\n14 15\\n\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\""
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == sample_output, f\"Incorrect output\\nExpected: {sample_output}\\nActual: {solution(sample_input)}\"\n\nfrom typing import List"
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"\"\"0.0000000 0.0000000\n1.0000000 0.0000000\n-1.0000000 0.0000000\n0.0000000 1.0000000\n0.0000000 -1.0000000\"\"\""
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 2\\n1 3\\n1 4\\n1 5\\n\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\""
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\""
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == '''\n"
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\""
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000'"
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Test failed: expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nif __name__ == '__main__':\\n    main()\\n\\ndef main():\\n    N, Q = list(map(int, input().split()))\\n    words = list(map(str.lower, input().split()))\\n    patterns = []\\n    for line in stdin.readlines():\\n        pattern = line.strip().split()[:1]\\n        if '*' in pattern and len(pattern) > 1:\\n            patterns.append(pattern)\\n\\n    word_count = {}\\n    for i, word in enumerate(words):\\n        for pattern in patterns:\\n            if word.replace('*', pattern) == pattern and '*' in pattern and len(pattern) > 1:\\n                word_count[i] = word_count.get(i, 0) + 1\\n\\n    for i, pattern in enumerate(patterns):\\n        print(i + 1)"
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\naaa\\nabc\\naba\\na*a\\naaa*\\n*aaa\") == \"2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected, f\"Solution does not match expected output.\\nGot: {solution(stdin)}\\nExpected: {expected}\"\nfor i in range(Q):\n    pattern = input().strip()\n    words = [line.strip() for line in stdin.readlines()]\n    expected = int(input())\n    assert solution(pattern, words) == expected, f\"Solution does not match expected output.\\nGot: {solution(pattern, words)}\\nExpected: {expected}\"\n"
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n    3 3\n        aaa\n        abc\n        aba\n        a*a\n        aaa*\n        *aaa\n    ''') == '2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n\nassert solution('''\n    5\n        apple\n        banana\n        orange\n        grapefruit\n        kiwi\n    ''') == '2\\n2\\n1\\n1\\n0\\n'\n\nassert solution('''\n    10\n        apple\n        banana\n        orange\n        grapefruit\n        kiwi\n        grape\n        banana\n        orange\n        grapefruit\n        kiwi\n    ''') == '2\\n2\\n2\\n1\\n1\\n1\\n1\\n0\\n'"
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n\\treturn \"2\"\\n\\n\\ndef solution(stdin: str) -> str:\\n\\treturn \"1\"\\n\\n\\ndef solution(stdin: str) -> str:\\n\\treturn \"1\"'"
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 3\\naaa\\nabc\\naba\\na*a\\naaa*\\n*aaa\\n') == '2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass'\n\nassert solution('3 3\\naaa\\nabc\\naba\\na*a\\naaa*\\n*aaa\\n') == '2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass'\n\nassert solution('3 3\\naaa\\nabc\\naba\\na*a\\naaa*\\n*aaa\\n') == '2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass'\n\nassert solution('3 3\\naaa\\nabc\\naba\\na*a\\naaa*\\n*aaa\\n') == '2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass'\n\nassert solution('3 3\\naaa\\nabc\\naba\\na*a\\naaa*\\n*aaa\\n') == '2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass'\n\nassert solution('3 3\\naaa\\nabc\\naba\\na*a\\naaa*\\n*aaa\\n') == '2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\naaa\\nabc\\naba\\na*a\\naaa*\\n*aaa\") == \"2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r')) == '2\\n1\\n1\\ndef solution(stdin: str) -> str:\\npass'"
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\naaa\\nabc\\naba\\na*a\\naaa*\\n*aaa\") == \"2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output\nfor input in inputs:\n    assert solution(input) == output"
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == \"1\"\nassert solution(\"4 2\\nXO\\nOX\\nOO\\nXO\\nOO\\nOX\\nOO\\n\") == \"0\""
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 1"
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n') == 1, \"Test case 1 failed\"\nassert solution('4 2\\nXO\\nOX\\nOO\\nOO\\nOO\\nXO\\nOO\\n') == 0, \"Test case 2 failed\"\nassert solution('4 2\\nXO\\nOO\\nOO\\nOO\\nOO\\nXO\\nOO\\n') == 0, \"Test case 3 failed\"\nassert solution('4 2\\nXO\\nOX\\nOX\\nXO\\nXO\\nOO\\nXO\\n') == 1, \"Test case 4 failed\"\nassert solution('4 2\\nXO\\nXO\\nXO\\nXO\\nXO\\nXO\\n') == 1, \"Test case 5 failed\""
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOX\\nOO\\nXO\\nOO\\nXO\\n\") == \"1\""
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n') == '1\\n'\nassert solution('4 2\\nXO\\nOX\\nOX\\nOO\\nOO\\nXO\\nOO\\n') == '0\\n'"
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == 1"
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n4 2\nXO\nOX\nXO\nOX\nOX\nOO\nXO\nOO\n\"\"\") == 1"
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nXO\\nOO\\nOO\\n\") == 0"
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == \"1\"\n"
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"16\\n\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    4\n    2 0\n    0 2\n    -2 0\n    0 -2\n    \"\"\"\n) == \"16\""
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n2 0\\n0 2\\n-2 0\") == 16\n"
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n2 0\\n0 2\\n-2 0\") == \"16\"\nassert solution(\"5\\n3 0\\n0 4\\n0 -2\\n5 2\\n3 3\\n-2 -1\\n\") == \"27\""
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"16\""
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n2 0\\n0 2\\n-2 0\") == 16\nassert solution(\"5\\n-1 0\\n2 2\\n-3 -2\\n4 0\") == 22\nassert solution(\"4\\n1 1\\n0 2\\n0 1\") == 1\nassert solution(\"3\\n1 2\\n-1 -2\\n1 0\") == 0"
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n2 0\\n0 2\\n-2 0\\n0 -2') == '16\\n', \"Test case 1 failed.\"\n\nfrom typing import List"
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n2 0\\n0 2\\n-2 0\") == \"16\"\nassert solution(\"1\") == \"0\"\nassert solution(\"10\") == \"1000000\"\nassert solution(\"700\") == \"581\""
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"16\\n\"\n"
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    \"\"\"\n) == \"\"\"\n16\n\"\"\""
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n# Test Case 1\\nassert solution('4 10 50\\n8 8 2 -2\\n') == '80'\\n\\n# Test Case 2\\nassert solution('4 10 50\\n8 8 2 -2\\n8 8 2 -2\\n') == '160'\\n\\n# Test Case 3\\nassert solution('4 10 50\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n') == '240'\\n\\n# Test Case 4\\nassert solution('4 10 50\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n') == '320'\\n\\n# Test Case 5\\nassert solution('4 10 50\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2\\n8 8 2 -2"
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 80, \"Incorrect output\"\n"
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 80, \"The output is incorrect.\""
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n\"4 10 50\\n8 8 2 -2\"\n) == \"80\\n\""
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"80\", \"Please implement the solution function\""
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"80\\n\"\n"
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"80\"\n\nfrom collections import defaultdict\nimport math"
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 10 50\\n8 8 2 -2\") == \"80\""
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 10 50\\n8 8 2 -2\\n\") == \"80\""
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 10 50\\n8 8 2 -2\") == \"80\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"3.000000000\"\n"
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 3.0\n"
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6') == '3.000000000'\n"
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 3.000000000\nprint(\"Test passed\")"
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Incorrect output\\nExpected: {output}\\nGot: {solution(input())}\""
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6') == '3.000000000'"
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"3.000000000\\n\"\n"
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n1 8\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n9 6\n\"\"\") == \"3.000000000\\n\""
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"3.000000000\"\nassert solution(\"1 10\\n1 5\\n2 3\\n3 5\\n4 7\\n5 9\") == \"4.500000000\"\n"
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"3.000000000\\n\"\nassert solution(\"1 4\\n1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n1 11\\n1 12\\n1 13\\n1 14\\n1 15\\n1 16\\n1 17\\n1 18\\n1 19\\n1 20\\n1 21\\n1 22\\n1 23\\n1 24\\n1 25\\n1 26\\n1 27\\n1 28\\n1 29\\n1 30\\n1 31\\n1 32\\n1 33\\n1 34\\n1 35\\n1 36\\n1 37\\n1 38\\n1 39\\n1 40\\n1 41\\n1 42\\n1 43\\n1 44\\n1 45\\n1 46\\n1 47\\n1 48\\n1 49\\n1 50\\n1 51\\n1 52\\n1 53\\n1 54\\n1 55\\n1 56\\n1 57\\n1 58\\n1 59\\n1 60\\n1 61\\n1 62\\n1 63\\n1 64\\n1 65\\n1 66\\n1 67\\n1 68\\n1 69\\n1 70\\n1 71\\n1 72\\n1 73\\n1 74\\n1 75\\n1 76\\n1 77\\n1 78\\n1 79\\n1 80\\n1 81\\n1 82\\n1 83\\n1 84\\n1 85\\n1 86\\n1 87\\n1 88\\n1 89\\n1 90\\n1 91\\n1 92\\n1 93\\n1 94\\n1 95\\n1 96\\n1 97\\n1 98\\n1 99\\n1 100\\n1 101\\n1 102\\n1 103\\n1 104\\n1 105\\n1 106\\n1 107\\n1 108\\n1 109\\n1 110\\n1 111\\n1 112\\n1 113\\n1 114\\n1 115\\n1 116\\n1 117\\n1 118\\n1 119\\n1 120\\n1 121\\n1 122\\n1 123\\n1 124\\n1 125\\n1 126\\n1 127\\n1 128\\n1 129\\n1 130\\n1 131\\n1 132\\n1 133\\n1 134\\n1 135\\n1 136\\n1 137\\n1 138\\n1 139\\n1 140\\n1 141\\n1 142\\n1 143\\n1 144\\n1 145\\n1 146\\n1 147\\n1 148\\n1 149\\n1 150\\n1 151\\n1 152\\"
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4') == '1'\nprint('All tests passed.')"
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4') == '1\\n'"
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4') == '1\\n'"
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == 1\nprint(\"All test cases passed\")"
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1\\n\"\nassert solution(input()) == \"2\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"5\\n\"\nassert solution(input()) == \"6\\n\"\nassert solution(input()) == \"7\\n\"\nassert solution(input()) == \"8\\n\"\nassert solution(input()) == \"9\\n\"\nassert solution(input()) == \"10\\n\"\nassert solution(input()) == \"11\\n\"\nassert solution(input()) == \"12\\n\"\nassert solution(input()) == \"13\\n\"\nassert solution(input()) == \"14\\n\"\nassert solution(input()) == \"15\\n\"\nassert solution(input()) == \"16\\n\"\nassert solution(input()) == \"17\\n\"\nassert solution(input()) == \"18\\n\"\nassert solution(input()) == \"19\\n\"\nassert solution(input()) == \"20\\n\"\nassert solution(input()) == \"21\\n\"\nassert solution(input()) == \"22\\n\"\nassert solution(input()) == \"23\\n\"\nassert solution(input()) == \"24\\n\"\nassert solution(input()) == \"25\\n\"\nassert solution(input()) == \"26\\n\"\nassert solution(input()) == \"27\\n\"\nassert solution(input()) == \"28\\n\"\nassert solution(input()) == \"29\\n\"\nassert solution(input()) == \"30\\n\"\nassert solution(input()) == \"31\\n\"\nassert solution(input()) == \"32\\n\"\nassert solution(input()) == \"33\\n\"\nassert solution(input()) == \"34\\n\"\nassert solution(input()) == \"35\\n\"\nassert solution(input()) == \"36\\n\"\nassert solution(input()) == \"37\\n\"\nassert solution(input()) == \"38\\n\"\nassert solution(input()) == \"39\\n\"\nassert solution(input()) == \"40\\n\"\nassert solution(input()) == \"41\\n\"\nassert solution(input()) == \"42\\n\"\nassert solution(input()) == \"43\\n\"\nassert solution(input()) == \"44\\n\"\nassert solution(input()) == \"45\\n\"\nassert solution(input()) == \"46\\n\"\nassert solution(input()) == \"47\\n\"\nassert solution(input()) == \"48\\n\"\nassert solution(input()) == \"49\\n\"\nassert solution(input()) == \"50\\n\"\nassert solution(input()) == \"51\\n\"\nassert solution(input()) == \"52\\n\"\nassert solution(input()) == \"53\\n\"\nassert solution(input()) == \"54\\n\"\nassert solution(input()) == \"55\\n\"\nassert solution(input()) == \"56\\n\"\nassert solution(input()) == \"57\\n\"\nassert solution(input()) == \"58\\n\"\nassert solution(input()) == \"59\\n\"\nassert solution(input()) == \"60\\n\"\nassert solution(input()) == \"61\\n\"\nassert solution(input()) == \"62\\n\"\nassert solution(input()) == \"63\\n\"\nassert solution(input()) == \"64\\n\"\nassert solution(input()) == \"65\\n\"\nassert solution(input()) == \"66\\n\"\nassert solution(input()) == \"67\\n\"\nassert solution(input()) == \"68\\n\"\nassert solution(input()) == \"69\\n\"\nassert solution(input()) == \"70\\n\"\nassert solution(input()) == \"71\\n\"\nassert solution(input()) == \"72\\n\"\nassert solution(input()) == \"73\\n\"\nassert solution(input()) == \"74\\n\"\nassert solution(input()) == \"75\\n\"\nassert solution(input()) == \"76\\n\"\nassert solution(input()) == \"77\\n\"\nassert solution(input()) == \"78\\n\"\nassert solution(input()) == \"79\\n\"\nassert solution(input()) == \"8"
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '1\\n'\nprint(\"All tests passed!\")"
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 1\nprint(\"All tests passed!\")"
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4') == '1'\nassert solution('4 3\\n0 1 0 0\\n1 2\\n2 3\\n3 4') == '2'\nassert solution('4 3\\n0 1 0 0\\n1 2\\n2 3\\n3 4') == '3'\nassert solution('4 3\\n0 1 0 0\\n1 2\\n2 3\\n3 4') == '4'"
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\\n') == '1\\n'\nassert solution('5 6\\n0 0 0 0\\n0 1 1 0\\n1 1 0 0\\n0 1 1 0\\n0 1 1 0\\n') == '1\\n'\nassert solution('7 8\\n0 1 1 0\\n0 1 1 0\\n0 1 1 0\\n0 1 1 0\\n0 1 1 0\\n0 1 1 0\\n0 1 1 0\\n') == '1\\n'\nassert solution('9 10\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n') == '1\\n'\nassert solution('11 12\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n') == '1\\n'\nassert solution('13 14\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n') == '2\\n'\nassert solution('15 16\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n') == '2\\n'\nassert solution('17 18\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n') == '2\\n'\nassert solution('19 20\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n"
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == 1\n"
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"6.283185\", \"Test case 1 failed\""
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2\") == \"6.283185\"\nassert solution(\"4 2\\n0 0\\n1 1\\n1 2\\n2 1\\n2 0\") == \"6.283185\"\nassert solution(\"2 4\\n1 1\\n2 2\\n3 1\\n3 2\\n4 1\") == \"6.283185\"\nassert solution(\"5 5\\n0 0\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\") == \"6.283185\"\nassert solution(\"3 3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2\") == \"6.283185\""
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_data) == expected_output, f\"Test failed: expected {expected_output}, got {solution(input_data)}\"\n"
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2\") == 6.283185\nassert solution(\"5 4\\n0 0\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\") == 2.726049\n"
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    3 3\n    0 0\n    0 1\n    1 0\n    0 1\n    0 2\n    1 2\n    \"\"\"\n) == \"6.283185\""
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2') == '6.283185'\nassert solution('3 3\\n0 0\\n1 0\\n1 1\\n2 1\\n2 2\\n3 2\\n3 3') == '1.224744'"
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n3 3\n0 0\n0 1\n1 0\n0 1\n0 2\n1 2\n''') == '6.283185'\nassert solution('''\n4 4\n0 0\n0 1\n1 1\n0 1\n1 0\n0 2\n1 2\n''') == '4.86112'"
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"6.283185\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n    3 3\n    0 0\n    0 1\n    1 0\n    0 1\n    0 2\n    1 2\n    ''') == '6.283185'"
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"1 2 3\", \"Test case 1\"\nassert solution(5) == \"1 3 2 4\", \"Test case 2\"\nassert solution(8) == \"1 4 2 5 3 6 7\", \"Test case 3\"\nassert solution(9) == \"1 5 2 6 3 7 8 9\", \"Test case 4\"\nassert solution(12) == \"1 6 2 7 3 8 9 10 11\", \"Test case 5\""
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2') == '1 2 3\\n'\nassert solution('3') == '1 3 2\\n'\nassert solution('4') == '1 4 2 3\\n'\nassert solution('5') == '1 5 2 3 4\\n'\nassert solution('6') == '1 6 2 3 4 5\\n'\nassert solution('7') == '1 7 2 3 4 5 6\\n'\nassert solution('8') == '1 8 2 3 4 5 6 7\\n'\nassert solution('9') == '1 9 2 3 4 5 6 7 8\\n'\nassert solution('10') == '1 10 2 3 4 5 6 7 8 9\\n'"
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(5) == \"1 2 3\", \"The solution does not work\""
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\nfor _ in range(test_cases):\n    N = int(input())\n    preorder_traversal(build_tree(N))"
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == sample_output, f\"Solution is incorrect. Expected: {sample_output}, got: {solution(sample_input)}\""
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(10) == \"1 2 3 4 5 6 7 8 9 10\", \"Expected '1 2 3 4 5 6 7 8 9 10', got '{}'\".format(solution(10))\nassert solution(5) == \"1 2 3 4 5\", \"Expected '1 2 3 4 5', got '{}'\".format(solution(5))\nassert solution(1) == \"1\", \"Expected '1', got '{}'\".format(solution(1))\nassert solution(2) == \"1 2\", \"Expected '1 2', got '{}'\".format(solution(2))\nassert solution(3) == \"1 2 3\", \"Expected '1 2 3', got '{}'\".format(solution(3))"
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"1 2 3\\n\", \"Test case 1 failed\"\nassert solution(\"3\") == \"1 2 3\\n\", \"Test case 2 failed\"\nassert solution(\"4\") == \"1 2 3 4\\n\", \"Test case 3 failed\"\nassert solution(\"5\") == \"1 2 3 4 5\\n\", \"Test case 4 failed\"\nassert solution(\"6\") == \"1 2 3 4 5 6\\n\", \"Test case 5 failed\"\nassert solution(\"7\") == \"1 2 3 4 5 6 7\\n\", \"Test case 6 failed\"\nassert solution(\"8\") == \"1 2 3 4 5 6 7 8\\n\", \"Test case 7 failed\"\nassert solution(\"9\") == \"1 2 3 4 5 6 7 8 9\\n\", \"Test case 8 failed\"\nassert solution(\"10\") == \"1 2 3 4 5 6 7 8 9 10\\n\", \"Test case 9 failed\"\nassert solution(\"11\") == \"1 2 3 4 5 6 7 8 9 10 11\\n\", \"Test case 10 failed\"\nassert solution(\"12\") == \"1 2 3 4 5 6 7 8 9 10 11 12\\n\", \"Test case 11 failed\"\nassert solution(\"13\") == \"1 2 3 4 5 6 7 8 9 10 11 12 13\\n\", \"Test case 12 failed\"\nassert solution(\"14\") == \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\\n\", \"Test case 13 failed\"\nassert solution(\"15\") == \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\\n\", \"Test case 14 failed\"\nassert solution(\"16\") == \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\\n\", \"Test case 15 failed\"\nassert solution(\"17\") == \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\\n\", \"Test case 16 failed\"\nassert solution(\"18\") == \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18\\n\", \"Test case 17 failed\"\nassert solution(\"19\") == \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\\n\", \"Test case 18 failed\"\nassert solution(\"20\") == \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\\n\", \"Test case 19 failed\"\nassert solution(\"21\") == \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21\\n\", \"Test case 20 failed\"\nassert solution(\"22\") == \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22\\n\", \"Test case 21 failed\"\nassert solution(\"23\") == \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 "
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"1 2 3\"\nassert solution(\"3\") == \"1 2 3\"\nassert solution(\"4\") == \"1 2 3\"\nassert solution(\"5\") == \"1 2 3\"\nassert solution(\"6\") == \"1 2 3\""
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1 2 3\\n\", \"The output should be: 1 2 3\\n\"\n"
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"1 2 3\"\nassert solution(\"3\") == \"1 2 3\"\nassert solution(\"4\") == \"1 2 3 4\"\nassert solution(\"5\") == \"1 2 3 4 5\"\nassert solution(\"6\") == \"1 2 3 4 5 6\""
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 4\\n1 2\\n1 3\\n2 4\\n3 4') == '1\\n1 2 3 4\\n'"
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == sample_output, f\"Test case {i+1} failed\" for i, (sample_input, sample_output) in enumerate(zip(sample_inputs, sample_outputs))"
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Expected output: {output}\\nGot: {solution(input())}\"\n\nfrom typing import List"
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Expected {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1\\n1 2 3 4\"\nprint(\"All test cases pass\")"
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n1 2\\n1 3\\n2 4\\n3 4\\n\") == '1\\n1 2 3 4\\n'\nprint(\"All test cases passed\")"
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"1\\n1 2 3 4\""
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == expected, f\"Expected {expected}, got {solution}\"\n"
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\n1 2\\n1 3\\n2 4\\n3 4\") == \"1\\n1 2 3 4\""
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 4\\n1 2\\n1 3\\n2 4\\n3 4') == '1\\n1 2 3 4'\nassert solution('4 5\\n1 2\\n1 3\\n2 4\\n3 4') == ''\nassert solution('4 0\\n1 2\\n1 3\\n2 4\\n3 4') == ''"
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == expected\n"
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1') == 1"
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n1\\n2\\n2\\n1\\n') == '1\\n\\n'\nassert solution('2\\n1\\n1\\n2\\n1\\n') == '1\\n\\n'\nassert solution('2\\n1\\n2\\n1\\n') == '2\\n\\n'\nassert solution('1\\n1\\n') == '1\\n\\n'\nassert solution('2\\n1\\n1\\n2\\n2\\n') == '2\\n\\n'"
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1\\n\"  # Expected Output: 1"
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 1\\n1 2\\n') == '1\\n'\n"
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1\\n1 2\") == 1"
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 1\\n1 2') == '1'"
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1\\n1 2\") == 1\nassert solution(\"5 3\\n1 2 3 4\") == 3\nassert solution(\"4 2\\n1 2 3 4 5\") == 5"
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 1, \"Incorrect output\""
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1\\n1 2\") == \"1\"\nassert solution(\"1 2\\n2 1\") == \"1\"\nassert solution(\"1 2\\n3 4\\n4 1\\n5 6\") == \"5\"\nassert solution(\"1 2\\n2 3\\n3 1\\n1 4\\n4 5\") == \"4\"\nassert solution(\"1 2\\n2 3\\n3 1\\n2 5\\n5 4\") == \"2\"\nassert solution(\"1 2\\n2 3\\n3 1\\n4 5\\n5 6\") == \"3\"\nassert solution(\"1 2\\n2 3\\n3 1\\n5 6\\n6 4\") == \"3\""
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(2) == 45"
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2') == 45, \"Expected 45 but got {} instead\".format(solution('2'))"
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(2) == 45\n"
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(2) == 45, \"Incorrect output\""
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(2) == 45, \"Your solution is incorrect.\"\nassert solution(3) == 27, \"Your solution is incorrect.\"\nassert solution(4) == 20, \"Your solution is incorrect.\"\nassert solution(5) == 20, \"Your solution is incorrect.\"\nassert solution(6) == 22, \"Your solution is incorrect.\"\nassert solution(7) == 25, \"Your solution is incorrect.\"\nassert solution(8) == 28, \"Your solution is incorrect.\"\nassert solution(9) == 31, \"Your solution is incorrect.\"\nassert solution(10) == 34, \"Your solution is incorrect.\"\nassert solution(11) == 37, \"Your solution is incorrect.\"\nassert solution(12) == 40, \"Your solution is incorrect.\"\nassert solution(13) == 43, \"Your solution is incorrect.\"\nassert solution(14) == 46, \"Your solution is incorrect.\"\nassert solution(15) == 49, \"Your solution is incorrect.\"\nassert solution(16) == 52, \"Your solution is incorrect.\"\nassert solution(17) == 55, \"Your solution is incorrect.\"\nassert solution(18) == 58, \"Your solution is incorrect.\"\nassert solution(19) == 61, \"Your solution is incorrect.\"\nassert solution(20) == 64, \"Your solution is incorrect.\"\nassert solution(21) == 67, \"Your solution is incorrect.\"\nassert solution(22) == 70, \"Your solution is incorrect.\"\nassert solution(23) == 73, \"Your solution is incorrect.\"\nassert solution(24) == 76, \"Your solution is incorrect.\"\nassert solution(25) == 79, \"Your solution is incorrect.\"\nassert solution(26) == 82, \"Your solution is incorrect.\"\nassert solution(27) == 85, \"Your solution is incorrect.\"\nassert solution(28) == 88, \"Your solution is incorrect.\"\nassert solution(29) == 91, \"Your solution is incorrect.\"\nassert solution(30) == 94, \"Your solution is incorrect.\"\nassert solution(31) == 97, \"Your solution is incorrect.\"\nassert solution(32) == 100, \"Your solution is incorrect.\"\nassert solution(33) == 103, \"Your solution is incorrect.\"\nassert solution(34) == 106, \"Your solution is incorrect.\"\nassert solution(35) == 109, \"Your solution is incorrect.\"\nassert solution(36) == 112, \"Your solution is incorrect.\"\nassert solution(37) == 115, \"Your solution is incorrect.\"\nassert solution(38) == 118, \"Your solution is incorrect.\"\nassert solution(39) == 121, \"Your solution is incorrect.\"\nassert solution(40) == 124, \"Your solution is incorrect.\"\nassert solution(41) == 127, \"Your solution is incorrect.\"\nassert solution(42) == 130, \"Your solution is incorrect.\"\nassert solution(43) == 133, \"Your solution is incorrect.\"\nassert solution(44) == 136, \"Your solution is incorrect.\"\nassert solution(45) == 139, \"Your solution is incorrect.\"\nassert solution(46) == 142, \"Your solution is incorrect.\"\nassert solution(47) == 145, \"Your solution is incorrect.\"\nassert solution(48) == 148, \"Your solution is incorrect.\"\nassert solution(49) == 151, \"Your solution is incorrect.\"\nassert solution(50) == 154, \"Your solution is incorrect.\"\nassert solution(51) == 157, \"Your solution is incorrect.\"\nassert solution(52) == 160, \"Your solution is incorrect.\"\nassert solution(53) == 163, \"Your solution is incorrect.\"\nassert solution(54) == 166, \"Your solution is incorrect.\"\nassert solution(55) == 169, \"Your solution is incorrect.\"\nassert solution(56) == 172, \"Your solution is incorrect.\"\nassert solution(57) == 175, \"Your solution is incorrect.\"\n"
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(2) == 45, \"Expected 45 but got {}.\".format(solution(2))"
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"45\"\nassert solution(\"3\") == \"12\"\nassert solution(\"4\") == \"10\"\nassert solution(\"5\") == \"5\""
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(2) == 45, \"The output is not as expected.\""
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(2) == 45\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(2) == 45, \"The solution is not correct.\""
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"4\\n\"\nassert solution(stdin) == \"4\\n\"\nassert solution(stdin) == \"4\\n\"\nassert solution(stdin) == \"4\\n\""
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 20 20\\n7 11 9 12 2') == 4\nassert solution('5 30 20\\n7 11 9 12 2') == 5\nassert solution('5 20 25\\n7 11 9 12 2') == 6\nassert solution('5 30 25\\n7 11 9 12 2') == 7\nassert solution('5 20 20\\n7 11 9 12 3') == 8\nassert solution('5 30 20\\n7 11 9 12 3') == 9"
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '4\\n', 'Output does not match the expected output'\n"
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 4, \"Test Failed\""
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 20 20\\n7 11 9 12 2\") == \"4\"\nassert solution(\"5 20 20\\n7 11 13 12 2\") == \"7\"\nassert solution(\"5 20 20\\n7 11 9 12 2\") == \"4\"\nassert solution(\"5 20 20\\n7 11 9 12 2\") == \"7\"\nassert solution(\"5 20 20\\n7 11 9 12 2\") == \"4\"\nassert solution(\"5 20 20\\n7 11 9 12 2\") == \"7\""
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 20 20\\n7 11 9 12 2') == '4'\nassert solution('5 20 20\\n10 30 30') == '12'\nassert solution('5 20 20\\n10 10 10') == '12'\nassert solution('5 20 20\\n10 10 20') == '12'\nassert solution('5 20 20\\n10 10 30') == '12'\nassert solution('5 20 20\\n10 10 40') == '12'"
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin='5 20 20\\n7 11 9 12 2') == '4'\n\nassert solution(stdin='1 10\\n4 5 6\\n7 8 9') == '3'\n\nassert solution(stdin='10 10 10\\n100 20 30\\n40 50 60') == '6'"
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt').read()) == 'Output\\n4'\n"
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"Test Failed: The solution should return {output()} but it returned {solution(input())}.\"\n"
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 20 20\\n7 11 9 12 2\") == \"4\"\nassert solution(\"5 1 5\\n5 1 5\") == \"5\"\nassert solution(\"5 1 5\\n5 1 5\") == \"5\"\nassert solution(\"10 1 10\\n5 1 5\") == \"10\"\nassert solution(\"5 20 20\\n5 20 20\") == \"4\"\nassert solution(\"10 1 10\\n5 20 20\") == \"10\""
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\\n\") == \"2\"\nassert solution(\"3 2\\njohn 2 lovelace\\nmartha 2 lovelace\\npeter 1 lovelace\\nlaura 1 lovelace\\n\") == \"2\"\nassert solution(\"5 2\\nbarry 3 jackdavis\\ncharlie 3 jackdavis\\nemily 3 jackdavis\\nhannah 1 jackdavis\\nronnie 3 jackdavis\\n\") == \"2\"\nassert solution(\"3 2\\njohn 2 lovelace\\nmartha 2 lovelace\\npeter 1 lovelace\\nlaura 1 lovelace\\n\") == \"3\"\nassert solution(\"5 2\\nbarry 3 jackdavis\\ncharlie 3 jackdavis\\nemily 3 jackdavis\\nhannah 1 jackdavis\\nronnie 3 jackdavis\\n\") == \"3\"\nassert solution(\"4 2\\njanice 1 zoe\\njack 1 zoe\\ntom 1 zoe\\nlaura 1 zoe\\n\") == \"2\"\nassert solution(\"5 2\\nbarry 3 jackdavis\\ncharlie 3 jackdavis\\nemily 3 jackdavis\\nhannah 1 jackdavis\\nronnie 3 jackdavis\\n\") == \"3\""
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\\n\") == \"2\""
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\") == \"2\""
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"2\\n\", \"Test case 1 failed\""
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\\n') == '2'"
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\") == \"2\"\nassert solution(\"3 2\\nAlice 1 book1\\nBob 1 book2\\nCharlie 1 book3\\nDavid 1 book4\") == \"3\"\nassert solution(\"2 2\\nAlice 1 book1\\nBob 1 book2\\nCharlie 1 book3\\nDavid 1 book4\") == \"2\"\nassert solution(\"1 1\\nAlice 1 book1\") == \"1\"\nassert solution(\"2 2\\nAlice 1 book1\\nBob 1 book2\\nCharlie 1 book3\\nDavid 1 book4\") == \"1\"\nassert solution(\"1 1\\nAlice 1 book1\") == \"2\"\nassert solution(\"2 2\\nAlice 1 book1\\nBob 1 book2\\nCharlie 1 book3\\nDavid 1 book4\") == \"3\""
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\\n') == '2\\n'\nassert solution('2 2\\njohn 1 harrypotter\\ncharlie 1 lordoftherings\\nkenny 1 harrypotter1\\nlaura 1 lordoftherings\\n') == '2\\n'\nassert solution('2 2\\njohn 1 harrypotter\\ncharlie 1 lordoftherings\\nkenny 1 harrypotter\\nlaura 1 lordoftherings\\n') == '2\\n'\nassert solution('2 2\\njohn 1 harrypotter\\ncharlie 1 lordoftherings\\nkenny 1 harrypotter\\nlaura 1 lordoftherings\\n') == '2\\n'"
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    2 2\n    kenny 1 harrypotter1\n    charlie 1 lordoftherings\n    jenny 1 harrypotter1\n    laura 1 lordoftherings\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    3 3\n    mary 1 harry potter2\n    lucas 1 harry potter3\n    adam 1 harry potter4\n    carol 1 harry potter5\n    \"\"\"\n) == \"3\"\n\nassert solution(\n    \"\"\"\n    3 3\n    mary 1 harry potter2\n    lucas 1 harry potter3\n    adam 1 harry potter4\n    carol 1 harry potter5\n    \"\"\"\n) == \"3\""
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2\"\n"
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\\n') == '2\\n'\nassert solution('2 2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n"
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2 1\"\n"
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2 1\"\nassert solution(stdin) == \"1 1\"\nassert solution(stdin) == \"1 0\""
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n01\") == \"2 1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n01\\n\") == \"2 1\""
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1\\n01') == '2 1', \"Your solution is incorrect.\""
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\\n\\ndef solution2(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2 1\", \"Expected output: 2 1, but got: \" + solution(stdin)\n"
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n01\") == \"2 1\"\nassert solution(\"1\\n10\") == \"1 2\"\nassert solution(\"1\\n00\") == \"2 2\"\nassert solution(\"1\\n11\") == \"1 1\"\nassert solution(\"1\\n100\") == \"2 2\"\nassert solution(\"1\\n101\") == \"2 1\"\nassert solution(\"1\\n110\") == \"2 1\"\nassert solution(\"1\\n111\") == \"2 0\"\nassert solution(\"1\\n1000\") == \"2 2\"\nassert solution(\"1\\n1001\") == \"2 1\"\nassert solution(\"1\\n1010\") == \"2 1\"\nassert solution(\"1\\n1011\") == \"2 0\"\nassert solution(\"1\\n1100\") == \"2 0\"\nassert solution(\"1\\n1101\") == \"2 0\"\nassert solution(\"1\\n1110\") == \"1 0\"\nassert solution(\"1\\n1111\") == \"1 0\"\nassert solution(\"1\\n10000\") == \"2 2\"\nassert solution(\"1\\n10001\") == \"2 1\"\nassert solution(\"1\\n10010\") == \"2 1\"\nassert solution(\"1\\n10011\") == \"2 0\"\nassert solution(\"1\\n10100\") == \"2 0\"\nassert solution(\"1\\n10101\") == \"2 0\"\nassert solution(\"1\\n10110\") == \"2 0\"\nassert solution(\"1\\n10111\") == \"2 0\"\nassert solution(\"1\\n11000\") == \"2 0\"\nassert solution(\"1\\n11001\") == \"2 0\"\nassert solution(\"1\\n11010\") == \"2 0\"\nassert solution(\"1\\n11011\") == \"2 0\"\nassert solution(\"1\\n11100\") == \"2 0\"\nassert solution(\"1\\n11101\") == \"2 0\"\nassert solution(\"1\\n11110\") == \"2 0\"\nassert solution(\"1\\n11111\") == \"2 0\"\nassert solution(\"1\\n100000\") == \"3 4\"\nassert solution(\"1\\n100001\") == \"2 1\"\nassert solution(\"1\\n100010\") == \"2 1\"\nassert solution(\"1\\n100011\") == \"2 0\"\nassert solution(\"1\\n100100\") == \"2 0\"\nassert solution(\"1\\n100101\") == \"2 0\"\nassert solution(\"1\\n100110\") == \"2 0\"\nassert solution(\"1\\n100111\") == \"2 0\"\nassert solution(\"1\\n101000\") == \"2 0\"\nassert solution(\"1\\n101001\") == \"2 0\"\nassert solution(\"1\\n101010\") == \"2 0\"\nassert solution(\"1\\n101011\") == \"2 0\"\nassert solution(\"1\\n101100\") == \"2 0\"\nassert solution(\"1\\n101101\") == \"2 0\"\nassert solution(\"1\\n101110\") == \"2 0\"\nassert solution(\"1\\n101111\") == \"2 0\"\nassert solution(\"1\\n110000\") == \"2 0\"\nassert solution(\"1\\n110001\") == \"2 0\"\nassert solution(\"1\\n110010\") == \"2 0\"\nassert solution(\"1\\n110011\") == \"2 0\"\nassert solution(\"1\\n110100\") == \"2 0\"\nassert solution(\"1\\n110101\") == \"2 0\"\nassert solution(\"1\\n"
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n01\\n\") == \"2 1\"\nassert solution(\"2\\n10000\\n\") == \"2 1\"\nassert solution(\"3\\n01\\n00\\n10\\n\") == \"0 3\"\nassert solution(\"4\\n01\\n11\\n10\\n\") == \"1 2\"\nassert solution(\"5\\n01\\n01\\n11\\n10\\n\") == \"2 3\"\n\nfrom typing import List\n"
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n01\\n\") == \"2 1\"\n"
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"\"\"4 3\n2123\n1012\n2123\n\"\"\""
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12') == '4 3\\n2123\\n1012\\n2123\\n'\nassert solution('3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\\n2 2\\n23\\n12') == '4 3\\n2123\\n1012\\n2123\\n'\n"
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n2123\\n1012\\n2123\\n\""
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n2123\\n1012\\n2123\\n----\\n2233\\n2233\\n1111\\n\"\nassert solution(\"4\\n1\\n1\\n1\\n1\\n1\\n\") == \"4 1\\n1111\\n1111\\n1111\\n1111\\n1111\\n\"\nassert solution(\"5\\n1\\n1\\n1\\n1\\n1\\n\") == \"4 1\\n1111\\n1111\\n1111\\n1111\\n1111\\n\"\nassert solution(\"7\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\") == \"4 1\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n\"\nassert solution(\"8\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\") == \"4 1\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111"
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n2123\\n1012\\n2123\\n----\\n2233\\n2233\\n1111\""
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\\n') == '4 3\\n2123\\n1012\\n2123\\n'\n"
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n2123\\n1012\\n2123\"\nassert solution(\"3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n2123\\n1012\\n2123\"\nassert solution(\"3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n2123\\n1012\\n2123\"\n"
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n2123\\n1012\\n2123\\n----\\n2233\\n2233\\n1111\""
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n2123\\n1012\\n2123\\n\"\nassert solution(\"3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n2123\\n1012\\n2123\\n\"\nassert solution(\"3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n2123\\n1012\\n2123\\n\"\nassert solution(\"3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n2123\\n1012\\n2123\\n\"\nassert solution(\"3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n2123\\n1012\\n2123\\n\""
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12') == '4 3\\n2123\\n1012\\n2123\\n2233\\n2233\\n1111'"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"atk\\nfreetype\\nglib2\\nlibattr\\nlibjpeg\\npcre\\ngrep\\nvim-common\\nxorg-x11-libs\\npango\\nzlib\\nlibtiff\\ngtk2\\nvim-X11\""
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == ['atk', 'freetype', 'glib2', 'libattr', 'libjpeg', 'pcre', 'grep', 'vim-common', 'xorg-x11-libs', 'pango', 'zlib', 'libtiff', 'gtk2', 'vim-X11']"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '''cannot be ordered''', 'Solution should return \"cannot be ordered\"'"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == ['atk', 'freetype', 'glib2', 'libattr', 'libjpeg', 'pcre', 'grep', 'vim-common', 'xorg-x11-libs', 'pango', 'zlib', 'libtiff', 'gtk2', 'vim-X11']"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin: str) -> str:\n    pass"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution.startswith('def solution(stdin: str) -> str:')\n\nimport sys\nfrom collections import defaultdict"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\nlibattr\nvim-X11 vim-common gtk2 libattr\nvim-common\ngtk2 libtiff atk pango glib2\nlibtiff zlib libjpeg\natk\npango xorg-x11-libs freetype glib2\nglib2\nzlib\nlibjpeg\nxorg-x11-libs grep freetype\ngrep pcre\npcre\nfreetype\n3\nemacs xorg-x11 lisp\nxorg-x11\nlisp emacs\n0\n''') == 'atk freetype glib2 libattr libjpeg pcre grep vim-common xorg-x11-libs pango zlib libtiff gtk2 vim-X11'\n\nassert solution('''\nlibattr\nvim-X11 vim-common gtk2 libattr\nvim-common\ngtk2 libtiff atk pango glib2\nlibtiff zlib libjpeg\natk\npango xorg-x11-libs freetype glib2\nglib2\nzlib\nlibjpeg\nxorg-x11-libs grep freetype\ngrep pcre\npcre\nfreetype\n3\nemacs xorg-x11 lisp\nxorg-x11\nlisp emacs\n0\n''') == 'atk freetype glib2 libattr libjpeg pcre grep vim-common xorg-x11-libs pango zlib libtiff gtk2 vim-X11'\n\nassert solution('''\nlibattr\nvim-X11 vim-common gtk2 libattr\nvim-common\ngtk2 libtiff atk pango glib2\nlibtiff zlib libjpeg\natk\npango xorg-x11-libs freetype glib2\nglib2\nzlib\nlibjpeg\nxorg-x11-libs grep freetype\ngrep pcre\npcre\nfreetype\n3\nemacs xorg-x11 lisp\nxorg-x11\nlisp emacs\n0\n''') == 'atk freetype glib2 libattr libjpeg pcre grep vim-common xorg-x11-libs pango zlib libtiff gtk2 vim-X11'\n\nassert solution('''\nlibattr\nvim-X11 vim-common gtk2 libattr\nvim-common\ngtk2 libtiff atk pango glib2\nlibtiff zlib libjpeg\natk\npango xorg-x11-libs freetype glib2\nglib2\nzlib\nlibjpeg\nxorg-x11-libs grep freetype\ngrep pcre\npcre\nfreetype\n3\nemacs xorg-x11 lisp\nxorg-x11\nlisp emacs\n0\n''') == 'atk freetype glib2 libattr libjpeg pcre grep vim-common xorg-x11-libs pango zlib libtiff gtk2 vim-X11'\n\nassert solution('''\nlibattr\nvim-X11 vim-common gtk2 libattr\nvim-common\ngtk2 libtiff atk pango glib2\nlibtiff zlib libjpeg\natk\npango xorg-x11-libs freetype glib2\nglib2\nzlib\nlibjpeg\nxorg-x11-libs grep freetype\ngrep pcre\npcre\nfreetype\n3\nemacs xorg-x11 lisp\nxorg-x11\nlisp emacs\n0\n''') == 'atk freetype glib2 libattr libjpeg pcre grep vim-common xorg-x11-libs pango zlib libtiff gtk2 vim-X11'\n\nassert solution('''\nlibattr\nvim-X11 vim-common gtk2 libattr\nvim-common\ngtk2 libtiff atk pango glib2\nlibtiff zlib libjpeg\natk\npango xorg-x11-libs freetype glib2\nglib2\nzlib\nlibjpeg\nxorg-x11-libs grep freetype\ngrep pcre\npcre\nfreetype\n3\nemacs xorg-x11 lisp\nxorg-x11\nlisp emacs\n0\n''') == 'atk freetype glib2 libattr libjpeg pcre grep vim-common xorg-x11-libs pango zlib libtiff gtk2 vim-X11'\n\nassert solution('''\nlibattr\nvim-X11 vim-common gtk2 libattr\nvim-common\ngtk2 libtiff atk pango glib2\nlibtiff zlib libjpeg\natk\npango xorg-x11-libs freetype glib2\nglib2\nzlib\n"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"libattr vim-X11 vim-common gtk2 libattr vim-common gtk2 libtiff atk pango glib2 libtiff zlib libjpeg atk pango xorg-x11-libs freetype glib2 glib2 zlib libjpeg xorg-x11-libs grep freetype grep pcre pcre freetype glib2 libtiff\") == \"atk freetype glib2 libattr libjpeg pcre grep vim-common xorg-x11-libs pango zlib libtiff gtk2 vim-X11\""
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"atk\\nglib2\\nlibattr\\nlibjpeg\\npcre\\ngrep\\nvim-common\\nxorg-x11-libs\\npango\\nzlib\\nlibtiff\\ngtk2\\nvim-X11\"\n"
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"16\""
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('32 20') == '16'\nassert solution('10 10') == '16'\nassert solution('30 30') == '16'\nassert solution('50 100') == '24'\nassert solution('200 100') == '24'\nassert solution('200 500') == '24'"
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('32 20') == '16'"
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"32 20\") == \"16\\n\"\n"
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('32 20') == '16'\nprint('All tests pass!')"
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"32 20\") == \"16\\n\", \"Expected output: 16\\nGot: \" + solution(\"32 20\")"
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"32 20\") == \"16\"\n"
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"32 20\") == \"16\\n\""
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"32 20\") == \"16\"\nassert solution(\"48 24\") == \"16\"\nassert solution(\"123 567\") == \"16\"\nassert solution(\"123456789 123456789\") == \"16\""
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('32 20') == '16', \"Incorrect Output\"\n"
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=f\"\"\"\n3 4\n....\n.#.#\n....\n\"\"\") == \"\"\"\n5 13\n"
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 5, \"Your solution is incorrect. The correct output is 5, but it is actually {}\".format(solution())"
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4\\n....\\n.#.#\\n....\") == 5 13\nassert solution(\"2 3\\n.##..\\n....\\n...#\") == 2 5\nassert solution(\"5 4\\n...#\\n...#\\n...#\") == 4 3\nassert solution(\"2 2\\n.###\\n...#\") == 1 1\nassert solution(\"3 3\\n...#\\n...#\\n...#\") == 1 2\nassert solution(\"4 4\\n...#\\n...#\\n...#\") == 0 0\nassert solution(\"1 2\\n.###\\n...#\") == 0 1\nassert solution(\"5 5\\n...#\\n...#\\n...#\") == 0 0\nassert solution(\"2 4\\n...#\\n...#\\n...#\") == 0 0\n"
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"Expected: {}\\nActual: {}\".format(output(), solution(input()))"
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 4\\n....\\n.#.#\\n....') == '5 13\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"Test failed\""
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\n....\\n.#.#\\n....\\n\") == \"5 13\"\nassert solution(\"5 5\\n.##.#\\n.....\\n.#...\\n\") == \"6 16\"\nassert solution(\"4 4\\n.##.#\\n.....\\n.#...\\n\") == \"4 4\"\nassert solution(\"5 5\\n.##.#\\n.....\\n.#...\\n\") == \"5 16\"\nassert solution(\"3 5\\n.##.#\\n.....\\n.#...\\n\") == \"4 20\"\nassert solution(\"5 3\\n.##.#\\n.....\\n.#...\\n\") == \"4 12\"\nassert solution(\"5 3\\n.##.#\\n.....\\n.#...\\n\") == \"4 24\"\nassert solution(\"5 3\\n.##.#\\n.....\\n.#...\\n\") == \"4 16\""
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3, 4) == \"5 13\""
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"def solution(stdin: str) -> str: pass\"\n"
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '5\\n'\n"
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n    3 3\n    1 2 5 1\n    2 3 3 1\n    3 1? 0\n    \"\"\") == \"5\\n\""
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"5\\n\"\nassert solution(input()) == \"5\\n\"\nassert solution(input()) == \"5\\n\"\n"
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0\") == \"5\\n\"\nassert solution(\"4 2\\n1 2 3 2\\n2 2 2 2\\n3 3 3 3\\n4 4 4 4\\n5 5 5 5\") == \"5\\n5\\n5\\n5\\n5\\n5\""
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 5"
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0\") == \"5\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0\") == \"5\\n\"\nassert solution(\"3 2\\n1 2 5 1\\n2 3 3 1\\n3 1? 0\") == \"5\\n\"\nassert solution(\"3 2\\n1 2 5 1\\n2 3 3 1\\n3 1? 0\") == \"5\\n\"\nassert solution(\"2 2\\n1 2 5 1\\n2 3 3 1\\n3 1? 0\") == \"5\\n\"\nassert solution(\"3 2\\n1 2 5 1\\n2 3 3 1\\n3 1? 0\") == \"5\\n\"\nassert solution(\"2 2\\n1 2 5 1\\n2 3 3 1\\n3 1? 0\") == \"5\\n\"\nassert solution(\"3 2\\n1 2 5 1\\n2 3 3 1\\n3 1? 0\") == \"5\\n\"\nassert solution(\"2 2\\n1 2 5 1\\n2 3 3 1\\n3 1? 0\") == \"5\\n\"\nassert solution(\"3 2\\n1 2 5 1\\n2 3 3 1\\n3 1? 0\") == \"5\\n\"\nassert solution(\"2 2\\n1 2 5 1\\n2 3 3 1\\n3 1? 0\") == \"5\\n\"\nassert solution(\"3 2\\n1 2 5 1\\n2 3 3 1\\n3 1? 0\") == \"5\\n\"\nassert solution(\"2 2\\n1 2 5 1\\n2 3 3 1\\n3 1? 0\") == \"5\\n\"\nassert solution(\"3 2\\n1 2 5 1\\n2 3 3 1\\n3 1? 0\") == \"5\\n\"\nassert solution(\"2 2\\n1 2 5 1\\n2 3 3 1\\n3 1? 0\") == \"5\\n\"\nassert solution(\"3 2\\n1 2 5 1\\n2 3 3 1\\n3 1? 0\") == \"5\\n\"\nassert solution(\"2 2\\n1 2 5 1\\n2 3 3 1\\n3 1? 0\") == \"5\\n\"\nassert solution(\"3 2\\n1 2 5 1\\n2 3 3 1\\n3 1? 0\") == \"5\\n\"\nassert solution(\"2 2\\n1 2 5 1\\n2 3 3 1\\n3 1? 0\") == \"5\\n\"\nassert solution(\"3 2\\n1 2 5 1\\n2 3 3 1\\n3 1? 0\") == \"5\\n\"\nassert solution(\"2 2\\n1 2 5 1\\n2 3 3 1\\n3 1? 0\") == \"5\\n\"\nassert solution(\"3 2\\n1 2 5 1\\n2 3 3 1\\n3 1? 0\") == \"5\\n\"\nassert solution(\"2 2\\n1 2 5 1\\n2 3 3 1\\n3 1? 0\") == \"5\\n\"\nassert solution(\"3 2\\n1 2 5 1\\n2 3 3 1\\n3 1? 0\") == \"5\\n\"\nassert solution(\"2 2\\n1 2 5 1\\n2 3 3 1\\n3 1? 0\") == \"5\\n\"\nassert solution(\"3 2\\n1 2 5 1\\n2 3 3 1\\n3 1? 0\") == \"5\\n\"\nassert solution(\"2 2\\n1 2 5 1\\n2 3 3 1\\n"
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0\") == \"5\\n\""
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"\"\"\n"
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 0, \"Expected output 0, but got: {}\".format(solution())"
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\") == \"0\""
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('test_case.in').read()) == 0, \"Test failed\""
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n2 3\n-1 0\n-1 1\n0 1\n''') == '0'\n\nassert solution('''\n3 4\n-1 0\n0 1\n1 2\n-1 3\n''') == '2'"
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"0\""
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\") == 3"
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\") == 0, \"Sample Output: 0\""
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\") == \"0\""
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\") == 0\nassert solution(\"1 3\\n0 0\\n-1 1\\n1 2\\n2 2\\n3 3\") == 3\nassert solution(\"1 3\\n0 0\\n-1 1\\n1 2\\n2 2\\n3 3\") == 3"
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\") == 0"
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n9 6 2 4\") == 6\nassert solution(\"2\\n1 2 3\") == 3\nassert solution(\"4\\n5 7 11 13\") == 6\n\nfrom typing import List"
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"\nfor i in range(10):\n    assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n9 6 2 4\") == \"6\\n\", \"Test case 1 failed\"\n\nassert solution(\"4\\n20 5 25 20 5\") == \"10\\n\", \"Test case 2 failed\"\n\nassert solution(\"4\\n100 1000000000 1000000000 1000000000\") == \"1000000001\\n\", \"Test case 3 failed\"\n\nassert solution(\"4\\n9999999999 9999999999 9999999999 9999999999\") == \"9999999999\\n\", \"Test case 4 failed\"\n\nassert solution(\"4\\n10000000000 10000000000 10000000000 10000000000\") == \"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n9 6 2 4\") == 6"
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"6\\n\"\n"
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\") == 1, \"Function should return 1\"\nassert solution(\"5\") == 1, \"Function should return 1\"\nassert solution(\"9 6 2 4\") == 6, \"Function should return 6\"\nassert solution
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n9 6 2 4') == '6\\n'\nassert solution('4\\n9 6 2 4 7') == '5\\n'\nassert solution('4\\n9 6 2 4 7 1') == '4\\n'\nassert solution('4\\n9 6 2 4 7 1 9') == '4\\n'\nassert solution('4\\n9 6 2 4 7 1 9 6') == '3\\n'"
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 2.000000\n"
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 1 1 3 2\\n2 5 1') == '2.000000'\n"
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1 1 3 2\\n2 5 1\") == \"2.000000\""
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1 1 3 2\\n2 5 1\") == \"2.000000\""
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2.000000\"\n"
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2.000000\""
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 2.000000, \"The output should be 2.000000\""
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2.000000\", solution(stdin)"
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1 1 3 2\\n2 5 1\") == \"2.000000\"\nassert solution(\"2 5 1\") == \"2.000000\"\nassert solution(\"2 1 1 3 2\\n2 5 1\") == \"2.000000\""
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1 1 3 2\\n2 5 1\") == 2.000000\nassert solution(\"2 5 1\") == 2.000000\n"
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n1\\n2\\n1\\n3\\n1\\n4\\n\") == \"96\\n\"\nassert solution(\"3\\n2\\n1\\n2\\n2\\n1\\n3\\n\") == \"48\\n\"\nassert solution(\"10\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\") == \"920\\n\"\nassert solution(\"10\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\") == \"920\\n\""
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"96\""
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 96, \"Please implement the solution for the given problem\""
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"96\""
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 96, \"The expected output is not correct.\""
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass'\n"
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(10) == 96\n"
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test failed with input {input()}, expected output {expected_output}.\""
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 96, \"Incorrect output\"\n"
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 96"
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == '3\\n4'\n"
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 0\\n0 1\\n1 0\\n1 1\") == \"3\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"5\") == \"Error: Invalid input.\\n\"\nassert solution(\"1 0\\n0 1\\n1 0\\n1 1\\n2 3\\n4 5\") == \"Error: Invalid input.\\n\"\nassert solution(\"2\\n0 0\\n1 1\\n3 4\\n5 6\\n7 8\\n9 10\\n\") == \"Error: Invalid input.\\n\"\nassert solution(\"2\\n0 0\\n0 1\\n1 0\\n\") == \"Error: Invalid input.\\n\"\nassert solution(\"2\\n0 0\\n0 1\\n1 0\\n1 0\\n\") == \"Error: Invalid input.\\n\"\nassert solution(\"2\\n0 0\\n0 1\\n1 0\\n1 0\\n1 0\\n\") == \"Error: Invalid input.\\n\"\nassert solution(\"2\\n0 0\\n0 1\\n1 0\\n1 0\\n1 0\\n1 0\\n\") == \"Error: Invalid input.\\n\"\nassert solution(\"2\\n0 0\\n0 1\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n2 3\\n\") == \"Error: Invalid input.\\n\"\nassert solution(\"2\\n0 0\\n0 1\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n2 3\\n4 5\\n\") == \"Error: Invalid input.\\n\""
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 0\\n0 1\\n1 0\\n1 1\") == 3\n"
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n0 0\\n0 1\\n1 0\\n1 1\") == 3\nprint(\"All tests passed\")\n"
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 0\\n0 1\\n1 0\\n1 1\\n\") == \"3\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 0\\n0 1\\n1 0\\n1 1\") == \"3\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 0\\n1 1\") == 3, \"Test case failed\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 0\\n0 1\\n1 0\\n1 1\\n\") == \"3\""
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('0 0\\n0 1\\n1 0\\n1 1\\n') == '3\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 0\\n0 1\\n1 0\\n1 1\\n\") == \"3\\ndef solution(stdin: str) -> str:\\n    pass\"\n\nassert solution(\"10 10\\n\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\"\n\nassert solution(\"10 20\\n\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n2 8\\n3 1\\n1 4') == '10\\n10\\n9'\nassert solution('3\\n1 3\\n2 5\\n3 4\\n1 2') == '6\\n6\\n5'\nassert solution('3\\n1 1\\n1 1\\n1 1\\n1 1') == '1\\n1\\n1'\nassert solution('3\\n10 5\\n2 10\\n3 2\\n1 3') == '30\\n30\\n25'\n"
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2 8\\n3 1\\n1 4\\n\") == \"10\\n10\\n9\"\n\nfrom typing import List"
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 8\\n3 1\\n1 4\") == \"10\\n10\\n9\""
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 10\nassert solution(10) == 10\nassert solution(1) == 10\nassert solution(101) == 101\nassert solution(1000) == 1000"
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n2 8\\n3 1\\n1 4') == '10\\n10\\n9'"
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"10\\n10\\n9\"\nassert solution(4) == \"0\\n5\\n2\"\nassert solution(5) == \"0\\n1\\n5\""
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"\"\"10\n10\n9\n\"\"\""
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n2 8\\n3 1\\n1 4\\n\") == \"10\\n10\\n9\""
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n2 8\\n3 1\\n1 4\\n\") == \"10\\n10\\n9\"\nassert solution(\"5\\n1 3\\n4 5\\n2 7\\n\") == \"8\\n8\\n7\""
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n2 8\\n3 1\\n1 4') == '10\\n10\\n9'"
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"IMPOSSIBLE\\n\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\\n\") == \"3\\n\""
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\\n\") == \"3\\n\"\nassert solution(\"5 5\\n..#.\\n#..#\\n####\\n#..#\\n#..#\\n\") == \"IMPOSSIBLE\\n\"\n"
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 4\\n####\\n#JF#\\n#..#') == '3'\nassert solution('5 5\\n.F.\\n.F.\\n#..#') == '10'\nassert solution('10 10\\n.F.\\n.F.\\n.F.\\n..F') == '10'\n"
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 4\\n####\\n#JF#\\n#..#\\n#..#\\n') == '3\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 4\\n####\\n#JF#\\n#..#\\n#..#\\n') == '3\\n3\\n'\nassert solution('5 5\\n..##\\n....\\n..##\\n....\\n') == '10\\n10\\n'\nassert solution('1 1\\n.##\\n###\\n##.\\n###\\n') == '1\\n2\\n'\nassert solution('1 1\\n#.\\n.#\\n#.\\n#.\\n') == '1\\n1\\n'\nassert solution('1 1\\n#.\\n#.\\n#.\\n#.\\n') == '1\\n1\\n'\nassert solution('1 1\\n#.\\n#.\\n#.\\n#.\\n') == '1\\n1\\n'\nassert solution('1 1\\n#.\\n#.\\n#.\\n#.\\n') == '1\\n1\\n'"
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r')) == '3\\n'\nassert solution(open('test_case.txt', 'r')) == '3\\n'\n"
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\\n\") == \"3\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"\nassert solution(\"4 4\\n###\\n#JF#\\n#..#\\n#..#\\n\") == \"3\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"\nassert solution(\"4 4\\n####\\n#..#\\n#JF#\\n#..#\\n\") == \"3\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"\nassert solution(\"4 4\\n###\\n#..#\\n#JF#\\n#..#\\n\") == \"3\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"\nassert solution(\"4 4\\n####\\n#..#\\n#..#\\n#JF#\\n\") == \"3\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"\nassert solution(\"4 4\\n####\\n#..#\\n#..#\\n#..#\\n\") == \"3\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '3\\nIMPOSSIBLE'\n"
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 2 2\\n2\\n1 1') == 0.3333333333, \"Incorrect output\""
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"The output is not correct.\""
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '0.3333333333', 'The output is not as expected.'"
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 2\\n2\\n1 1\\n\") == \"0.3333333333\"\nassert solution(\"1 3 2\\n2\\n1 1\\n\") == \"1\"\nassert solution(\"1 2 3\\n2\\n1 1\\n\") == \"0.6666666667\"\nassert solution(\"1 2 3\\n2\\n1 1\\n\") == \"0\""
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 0.3333333333, \"The correct output is not given.\""
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 2\\n2\\n1 1\\n\") == \"0.3333333333\\n\""
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 2 2\\n2\\n1 1') == '0.3333333333'\n"
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 2\\n2\\n1 1\\n\") == \"0.3333333333\\n\""
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 0.3333333333, \"The solution is incorrect\""
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"0.3333333333\"\n"
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Expected {output}, but got {solution(input())}\""
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '1023'\n"
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10\\n1\") == \"1023\""
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '1023', \"Incorrect output\""
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(5) == \"1023\""
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '1023'\n"
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('10\\n1\\n') == '1023'\nassert solution('10\\n01\\n') == '1023'\nassert solution('10\\n1111111\\n') == '1023'\nassert solution('10\\n11111101010101\\n') == '1023'\nassert solution('10\\n1111111010101001\\n') == '1022'"
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == '1023'"
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10\\n1\\n\") == \"1023\"\nassert solution(\"10\\n01\\n\") == \"3010\"\nassert solution(\"10\\n1*\\n\") == \"1023\"\nassert solution(\"10\\n01*\\n\") == \"3010\"\nassert solution(\"10\\n101*\\n\") == \"1023\"\nassert solution(\"10\\n010*\\n\") == \"3010\"\nassert solution(\"10\\n100*\\n\") == \"1023\"\nassert solution(\"10\\n0101*\\n\") == \"3010\"\nassert solution(\"10\\n0100*\\n\") == \"3010\"\nassert solution(\"10\\n1010*\\n\") == \"1023\"\nassert solution(\"10\\n01010*\\n\") == \"3010\"\nassert solution(\"10\\n01001*\\n\") == \"3010\"\nassert solution(\"10\\n10101*\\n\") == \"1023\"\nassert solution(\"10\\n010101*\\n\") == \"3010\"\nassert solution(\"10\\n010001*\\n\") == \"3010\"\nassert solution(\"10\\n101001*\\n\") == \"1023\"\nassert solution(\"10\\n0101001*\\n\") == \"3010\"\nassert solution(\"10\\n0100001*\\n\") == \"3010\"\nassert solution(\"10\\n1010001*\\n\") == \"1023\"\nassert solution(\"10\\n01010001*\\n\") == \"3010\"\nassert solution(\"10\\n01000001*\\n\") == \"3010\"\nassert solution(\"10\\n10100001*\\n\") == \"1023\"\nassert solution(\"10\\n010100001*\\n\") == \"3010\"\nassert solution(\"10\\n010000001*\\n\") == \"3010\"\nassert solution(\"10\\n101000001*\\n\") == \"1023\""
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"The provided solution is incorrect. Please check the solution.\""
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(2) == 6\nassert solution(10) == 43662\nassert solution(100) == 1371626028\nassert solution(1000) == 1000000000\nassert solution(10000) == 999999999"
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"6\\n\""
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\n\") == \"6\\n\" # expected output: 6"
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == 6, \"The output should be 6.\""
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 2') == '6'"
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 2') == 6, 'The output should be 6.'"
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 2') == '6'\nprint('All test cases passed.')"
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"6\\n\"\n"
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 2') == '6'\nassert solution('5 7') == '36'\nassert solution('0 0') == '0'\nassert solution('10 10') == '400'"
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n\") == \"6\\n\"\nassert solution(\"1 1\\n\") == \"1\\n\"\nassert solution(\"1 2\\n\") == \"3\\n\"\nassert solution(\"4 5\\n\") == \"15\\n\"\nassert solution(\"0 0\\n\") == \"0\\n\""
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1000, 2000, 7) == \"2930\\n\", \"Test Case 1\"\n\nassert solution(100, 200, 7) == \"2930\\n\", \"Test Case 2\"\n\nassert solution(1000, 2000, 3) == \"2930\\n\", \"Test Case 3\"\n\nassert solution(1000000, 2000000, 1000) == \"2930\\n\", \"Test Case 4\"\n\nassert solution(1000, 2000, 4) == \"Impossible\\n\", \"Test Case 5\""
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n\") == \"2930\\n\""
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '2930', 'Your solution is incorrect.'"
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 2930, \"Solution is incorrect\""
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\") == \"2930\\n\"\nassert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n1000\\n1400\\n1500\") == \"2930\\n\"\nassert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n1000\\n1400\\n1500\") == \"2930\\n\"\nassert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n1000\\n1400\\n1500\\n1000\\n1400\\n1500\\n1000\\n1400\\n1500\") == \"2930\\n\"\nassert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n1000\\n1400\\n1500\\n1000\\n1400\\n1500\\n1000\\n1400\\n1500\\n1000\\n1400\\n1500\\n1000\\n1400\\n1500\\n1000\\n1400\\n1500\\n1000\\n1400\\n1500\\n1000\\n1400\\n1500\") == \"2930\\n\""
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500') == '2930\\nImpossible'\n\nassert solution('1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500') == '2930\\nImpossible'\n\nassert solution('1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500') == '2930\\nImpossible'\n\nassert solution('1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500') == '2930\\nImpossible'\n\nassert solution('1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500') == '2930\\nImpossible'\n\nassert solution('1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500') == '2930\\nImpossible'\n\nassert solution('1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500') == '2930\\nImpossible'"
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n') == '2930\\nImpossible\\n'"
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '2930\\n', \"Incorrect output. Please check the solution.\""
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\") == \"2930\"\nassert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\") == \"Impossible\""
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\") == \"2930\\n\"\nassert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n1600\") == \"Impossible\\n\""
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3\\n0\\n0\\n1\\n\") == \"2\\n\"\nassert solution(\"1 2 3\\n0\\n0\\n1\\n2\\n\") == \"3\\n\"\nassert solution(\"1 2 3\\n0\\n0\\n1\\n2\\n3\\n\") == \"4\\n\""
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 2 3') == 2"
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 2 3\\n0\\n0\\n1') == '2', \"Expected Output: 2\""
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '2'\n"
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3\\n0\\n0\\n1\") == \"2\\n\"\nassert solution(\"10 100 100000\\n0\\n0\\n10\\n20\\n30\\n40\\n50\\n60\\n70\\n80\\n90\\n100\\n110\\n120\\n130\\n140\\n150\\n160\\n170\\n180\\n190\\n200\\n210\\n220\\n230\\n240\\n250\\n260\\n270\\n280\\n290\\n300\\n310\\n320\\n330\\n340\\n350\\n360\\n370\\n380\\n390\\n400\\n410\\n420\\n430\\n440\\n450\\n460\\n470\\n480\\n490\\n500\\n510\\n520\\n530\\n540\\n550\\n560\\n570\\n580\\n590\\n600\\n610\\n620\\n630\\n640\\n650\\n660\\n670\\n680\\n690\\n700\\n710\\n720\\n730\\n740\\n750\\n760\\n770\\n780\\n790\\n800\\n810\\n820\\n830\\n840\\n850\\n860\\n870\\n880\\n890\\n900\\n910\\n920\\n930\\n940\\n950\\n960\\n970\\n980\\n990\\n1000\\n1010\\n1020\\n1030\\n1040\\n1050\\n1060\\n1070\\n1080\\n1090\\n1100\\n1110\\n1120\\n1130\\n1140\\n1150\\n1160\\n1170\\n1180\\n1190\\n1200\\n1210\\n1220\\n1230\\n1240\\n1250\\n1260\\n1270\\n1280\\n1290\\n1300\\n1310\\n1320\\n1330\\n1340\\n1350\\n1360\\n1370\\n1380\\n1390\\n1400\\n1410\\n1420\\n1430\\n1440\\n1450\\n1460\\n1470\\n1480\\n1490\\n1500\\n1510\\n1520\\n1530\\n1540\\n1550\\n1560\\n1570\\n1580\\n1590\\n1600\\n1610\\n1620\\n1630\\n1640\\n1650\\n1660\\n1670\\n1680\\n1690\\n1700\\n1710\\n1720\\n1730\\n1740\\n1750\\n1760\\n1770\\n1780\\n1790\\n1800\\n1810\\"
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 2, \"Incorrect solution\""
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3\\n0\\n0\\n1\") == \"2\"\n\nsolution(\"1 2 3\\n0\\n0\\n1\") == \"2\""
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"2\", \"Incorrect output. Please check the solution.\""
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 2 3\\n0\\n0\\n1') == '2'"
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3\") == 2, \"The expected output is not correct.\""
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 3\\n-5 2 -5\\n-1 -2 -1\\n5 4 -5\\n2 2') == 10"
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"3 3\\n-5 2 -5\\n-1 -2 -1\\n5 4 -5\\n2 2\") == \"10\\n\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n-5 2 -5\\n-1 -2 -1\\n5 4 -5\\n2 2\") == \"10\""
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 10, \"The solution is incorrect.\""
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n-5 2 -5\\n-1 -2 -1\\n5 4 -5\\n2 2\") == \"10\\n\"\n"
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"\"\"\n10\n\"\"\"\n"
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"3 3\n-5 2 -5\n-1 -2 -1\n5 4 -5\n2 2\"\"\") == \"10\\n\"\n"
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"10\", \"Incorrect output\""
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"Error: Invalid input\"\nassert solution(\"3 3\\n-5 2 -5\\n-1 -2 -1\\n5 4 -5\\n2 2\") == \"Error: Invalid input\"\n\nh, w = map(int, input().split())\nassert 1 <= h <= 500\nassert 1 <= w <= 500\nassert h > 0 and w > 0\n\nwater_level = []\nfor _ in range(h):\n    water_level.append(list(map(int, input().split())))\n\ni, j = map(int, input().split())\nassert -10**6 <= water_level[i-1][j] <= 10**6\nassert -10**6 <= water_level[i][j-1] <= 10**6\n\ntotal_volume = 0\nfor k in range(w):\n    if 0 <= water_level[i-1][k] <= 10**6 and 0 <= water_level[k][j-1] <= 10**6:\n        total_volume += 0.25 * water_level[i-1][k] * water_level[k][j-1]\n\nprint(total_volume)"
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == 3100\nassert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == 3100\nassert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == 3100\nassert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == 3100\nassert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == 3100\nassert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == 3100\nassert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == 3100\nassert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == 3100\nassert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == 3100\nassert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == 3100\nassert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == 3100\nassert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == 3100\nassert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == 3100\nassert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == 3100\nassert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == 3100\nassert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == 3100\nassert solution"
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == \"3100\\n\""
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == \"3100\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == \"3100\\n\""
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(str(input())) == \"3100\\n\", \"Incorrect Output\"\n"
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"3100\", \"Your solution is incorrect\""
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == \"3100\"\nassert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == \"3100\"\nassert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == \"3100\"\nassert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == \"3100\"\nassert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == \"3100\""
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"3100\", \"Incorrect output\""
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300') == '3100\\n'"
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Actual output: {solution(input())}\""
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1\\n0 1\\n\") == 0\nassert solution(\"2 3\\n0 1\\n1 2\\n2 1\\n\") == 1\nassert solution(\"2 4\\n0 1\\n1 2\\n2 1\\n0 2\\n1 2\\n2 1\\n\") == 2\nassert solution(\"2 5\\n0 1\\n1 2\\n2 1\\n0 2\\n1 2\\n2 1\\n0 3\\n1 2\\n2 1\\n0 4\\n1 2\\n2 1\\n0 5\\n1 2\\n2 1\\n0 6\\n1 2\\n2 1\\n0 7\\n1 2\\n2 1\\n0 8\\n1 2\\n2 1\\n0 9\\n1 2\\n2 1\\n0 10\\n1 2\\n2 1\\n0 11\\n1 2\\n2 1\\n0 12\\n1 2\\n2 1\\n0 13\\n1 2\\n2 1\\n0 14\\n1 2\\n2 1\\n0 15\\n1 2\\n2 1\\n0 16\\n1 2\\n2 1\\n0 17\\n1 2\\n2 1\\n0 18\\n1 2\\n2 1\\n0 19\\n1 2\\n2 1\\n0 20\\n1 2\\n2 1\\n\") == 4\nassert solution(\"2 6\\n0 1\\n1 2\\n2 1\\n0 2\\n1 2\\n2 1\\n0 3\\n1 2\\n2 1\\n0 4\\n1 2\\n2 1\\n0 5\\n1 2\\n2 1\\n0 6\\n1 2\\n2 1\\n0 7\\n1 2\\n2 1\\n0 8\\n1 2\\n2 1\\n0 9\\n1 2\\n2 1\\n0 10\\n1 2\\n2 1\\n0 11\\n1 2\\n2 1\\n0 12\\n1 2\\n2 1\\n0 13\\n1 2\\n2 1\\n0 14\\n1 2\\n2 1\\n0 15\\n1 2\\n2 1\\n0 16\\n1 2\\n2 1\\n0 17\\n1 2\\n2 1\\n0 18\\n1 2\\n2 1\\n0 19\\n1 2\\n2 1\\n0 20\\n1 2\\n2 1\\n0 21\\n1 2\\n2 1\\n0 22\\n1 2\\n2 1\\n0 23\\n1 2\\n2 1\\n0 24\\n1 2\\n2 1\\n0 25\\n1 2\\n2 1\\n0 26\\n1 2\\n2 1\\n0 27\\n1 2\\n2 1\\n0 28\\n1 2\\n2 1\\n0 29\\n1 2\\n2 1\\n0 30\\n1 2\\n2 1\\n0 31\\n1 2\\n2 1\\n0 32\\n1 2\\n2 1\\n0 33\\n1 2\\n2 1\\n0 34\\n1 2\\n2 1\\n0 35\\n1 2\\n2 1\\n0 36\\n1 2\\n2 1\\n0 37\\n1 2\\n2 1\\n0 38\\n1 2\\n2 1\\n0 39\\n"
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, \"Test failed\""
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 0\n"
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(solution) == \"0\"\nassert solution(str
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1\\n0 1\") == 0, \"Solution does not work\""
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 1\\n0 1\\n') == '0\\n'\nassert solution('3 5\\n0 1\\n1 2\\n2 3\\n3 4\\n4 0\\n') == '12\\n'\nassert solution('4 5\\n0 1\\n1 2\\n2 3\\n3 4\\n4 0\\n') == '4\\n'\nassert solution('5 10\\n0 1\\n1 2\\n2 3\\n3 4\\n4 0\\n') == '10\\n'\n"
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 1\\n0 1') == '0\\n'\n"
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == 0, \"Test failed\""
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 0\n"
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 1\\n0 1\\n') == '0\\n'\n"
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 1\nassert solution(7) == 2\nassert solution(5) == 1\nassert solution(12) == 1\nassert solution(17) == 2\nassert solution(11) == 1\nassert solution(73) == 2\nassert solution(1984) == 2\nassert solution(2015) == 1\nassert solution(21) == 1\nassert solution(42) == 1\n"
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"10\"\n"
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"10\""
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == expected_output, f\"Expected output: {expected_output}, but got: {solution(sample_input)}\""
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"10\""
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('sample_input.txt', 'r')) == '10'"
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin: str) == \"10\"\n"
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 10\") == \"10\"\nassert solution(\"7 10\") == \"11\"\nassert solution(\"10 7\") == \"9\""
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=input()) == output"
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('0 0\\n1000 0\\n0 1000\\n1000 1000\\n') == 0\nassert solution('0 0\\n1000 0\\n0 1000\\n1000 1000\\n2000 2000\\n') == 1\nassert solution('1 1\\n0 0\\n-1 1\\n1 0\\n') == 1\nassert solution('1 1\\n-1 -1\\n1 0\\n0 1\\n') == 1\nassert solution('1 1\\n-1 -1\\n1 0\\n0 1\\n2000 2000\\n') == 1"
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n4\n0 0\n1000 0\n0 1000\n1000 1000\n''') == '0'\nassert solution('''\n5\n0 0\n1000 0\n0 1000\n-1000 0\n1000 1000\n''') == '1'\nassert solution('''\n5\n0 0\n1000 0\n0 1000\n-1000 0\n1000 1000\n''') == '1'\nassert solution('''\n5\n0 0\n1000 0\n0 1000\n-1000 0\n1000 1000\n''') == '1'"
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 0\n"
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n0 0\\n1000 0\\n0 1000\\n1000 1000\") == \"0\\n\""
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 0"
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == # Your code here"
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=open('input.txt').read()) == 0\n"
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == 0, \"The given input is not correct.\""
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 0\\n1000 0\\n0 1000\\n1000 1000\") == 0, \"Expected: 0\\nActual: \" + str(solution(\"0 0\\n1000 0\\n0 1000\\n1000 1000\"))"
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 0\\n1000 0\\n0 1000\\n1000 1000\") == \"0\\n\"\nassert solution(\"0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\"
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1\\n0 1 0.5\") == \"0.500000000 1.000000000\""
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"0.500000000 1.000000000\\n\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1\\n0 1 0.5\") == \"0.500000000 1.000000000\\n\"\nassert solution(\"3 3\\n1 2 0.2\\n2 2 0.4\\n1 3 0.5\\n\") == \"-1\\n-1\\n0.500000000 1.000000000\\n\"\nassert solution(\"3 5\\n1 2 0.1\\n2 3 0.3\\n3 4 0.4\\n4 5 0.5\\n\") == \"-1\\n0.500000000 1.000000000\\n\""
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"0.500000000 1.000000000\", \"The correct solution is not provided.\"\n"
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1\\n0 1 0.5\\n\") == \"0.500000000 1.000000000\""
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 1\\n0 1 0.5\\n') == '0.500000000 1.000000000\\n'\nassert solution('3 2\\n0 1 0.5\\n0 2 0.3\\n0 3 0.2\\n') == '0.500000000 0.486316857 0.428571429 0.375000000 0.320370370\\n'\nassert solution('4 3\\n0 1 0.5\\n0 2 0.3\\n0 3 0.2\\n0 4 0.1\\n') == '-1\\n'"
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1\\n0 1 0.5\\n\") == \"0.500000000 1.000000000\"\n"
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n    2 1\n    0 1 0.5\n    2 3 0.3\n    1 4 0.1\n    2 5 0.2\n    2 6 0.2\n    1 7 0.5\n    1 8 0.3\n    1 9 0.2\n    1 10 0.3\n    1 11 0.2\n    2 12 0.3\n    2 13 0.2\n    2 14 0.1\n    2 15 0.2\n    2 16 0.2\n    2 17 0.1\n    2 18 0.1\n    2 19 0.1\n    2 20 0.1\n    2 21 0.1\n    2 22 0.1\n    2 23 0.1\n    2 24 0.1\n    2 25 0.1\n    2 26 0.1\n    2 27 0.1\n    2 28 0.1\n    2 29 0.1\n    2 30 0.1\n    2 31 0.1\n    2 32 0.1\n    2 33 0.1\n    2 34 0.1\n    2 35 0.1\n    2 36 0.1\n    2 37 0.1\n    2 38 0.1\n    2 39 0.1\n    2 40 0.1\n    2 41 0.1\n    2 42 0.1\n    2 43 0.1\n    2 44 0.1\n    2 45 0.1\n    2 46 0.1\n    2 47 0.1\n    2 48 0.1\n    2 49 0.1\n    2 50 0.1\n    2 51 0.1\n    2 52 0.1\n    2 53 0.1\n    2 54 0.1\n    2 55 0.1\n    2 56 0.1\n    2 57 0.1\n    2 58 0.1\n    2 59 0.1\n    2 60 0.1\n    2 61 0.1\n    2 62 0.1\n    2 63 0.1\n    2 64 0.1\n    2 65 0.1\n    2 66 0.1\n    2 67 0.1\n    2 68 0.1\n    2 69 0.1\n    2 70 0.1\n    2 71 0.1\n    2 72 0.1\n    2 73 0.1\n    2 74 0.1\n    2 75 0.1\n    2 76 0.1\n    2 77 0.1\n    2 78 0.1\n    2 79 0.1\n    2 80 0.1\n    2 81 0.1\n    2 82 0.1\n    2 83 0.1\n    2 84 0.1\n    2 85 0.1\n    2 86 0.1\n    2 87 0.1\n    2 88 0.1\n    2 89 0.1\n    2 90 0.1\n    2 91 0.1\n    2 92 0.1\n    2 93 0.1\n    2 94 0.1\n    2 95 0.1\n    2 96 0.1\n    2 97 0.1\n    2 98 0.1\n    2 99 0.1\n    2 100 0.1\n    ''') == '0.500000000 1.000000000'\nassert solution('''\n    2 1\n    0 1 0.5\n    1 2 0.3\n    2 3 0.1\n    2 4 0.2\n    2 5 0.2\n    2 6 0.2\n    2 7 0.5\n    2 8 0.3\n    2 9 0.2\n    2 10 0.3\n    2 11 0.2\n    2 12 0"
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1\\n0 1 0.5\\n\") == \"0.500000000 1.000000000\""
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"0.500000000 1.000000000\", \"Incorrect output\""
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) == \"7\\n\"\nassert solution(stdin) =="
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n6\n1 1\n4 1\n1 5\n10 10\n10 8\n7 10\n''') == 7\n\nassert solution('''\n7\n1 1\n4 1\n1 5\n10 10\n10 8\n7 10\n''') == 7\n\nassert solution('''\n11\n1 1\n4 1\n1 5\n10 10\n10 8\n7 10\n''') == 7"
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\") == 7\nassert solution(\"8\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\") == 1\nassert solution(\"5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\") == 3\nassert solution(\"5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n1 1\") == 0\nassert solution(\"3\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n1 1\") == 1\n"
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '7'"
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\\n') == '7\\n'\n"
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '7'"
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10') == '7\\n'\n"
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\") == \"7\\n\""
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\") == \"7\"\nassert solution(\"6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\\n9 9\") == \"8\""
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10') == '7\\n'"
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n2\na b\n3-b 5-b\n6-a 2-b\n2\naba\nbba\n0\n''') == '''\n9-b\n8-a\n"
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\") == [\"9-b\", \"8-a\"]\nassert solution(\"1\\nabcdef\\n0\") == [\"abcdef\"]\nassert solution(\"1\\naaabbbcccddddeeeeffff\\n0\") == [\"aaabbbcccddddeeeeffff\"]\nassert solution(\"1\\nabcdefghijklmnopqrstuvwxyz\\n1\\nabcdefghijklmnopqrstuvwxyz\\n1\\nabcdefghijklmnopqrstuvwxyz\") == [\"abcdefghijklmnopqrstuvwxyz\"]\nassert solution(\"1\\naaabbbcccddddeeeeffff\\n2\\nabcd efghijklmnopqrstuvwxyz\\n1\\n1234567890\\n0\") == [\"1234567890-efghijklmnopqrstuvwxyz\"]\nassert solution(\"1\\naaabbbcccddddeeeeffff\\n3\\nabcd efghijklmnopqrstuvwxyz\\n1\\n1234567890\\n0\") == [\"1234567890-efghijklmnopqrstuvwxyz\"]\nassert solution(\"1\\naaabbbcccddddeeeeffff\\n3\\nabcd efghijklmnopqrstuvwxyz\\n1\\n1234567890\\n0\") == [\"1234567890-efghijklmnopqrstuvwxyz\"]"
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n    2\n    3-b 5-b\n    6-a 2-b\n    aba\n    bba\n    \"\"\") == \"9-b\\n8-a\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\\n\") == \"9-b\\n8-a\\ndef solution(stdin: str) -> str:\\na 9-b\\na 8-a\\ndef solution(stdin: str) -> str:\\nc 9-b\\nc 8-a\\ndef solution(stdin: str) -> str:\\nb 9-b\\nb 8-a\\ndef solution(stdin: str) -> str:\\naba 9-b\\naba 8-a\\ndef solution(stdin: str) -> str:\\nbba 9-b\\naba 8-a\\ndef solution(stdin: str) -> str:\\n0 9-b\\n0 8-a\\ndef solution(stdin: str) -> str:\\n1 9-b\\n1 8-a\\ndef solution(stdin: str) -> str:\\n\"\nassert solution(\"2\\nb c\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\\n\") == \"5-b\\n6-a\\n9-b\\n8-a\\ndef solution(stdin: str) -> str:\\nc 5-b\\nc 6-a\\n9-b\\n8-a\\ndef solution(stdin: str) -> str:\\nb 5-b\\nb 6-a\\n9-b\\n8-a\\ndef solution(stdin: str) -> str:\\naba 5-b\\naba 6-a\\n9-b\\n8-a\\ndef solution(stdin: str) -> str:\\nbba 5-b\\naba 6-a\\n9-b\\n8-a\\ndef solution(stdin: str) -> str:\\n0 5-b\\n0 6-a\\n9-b\\n8-a\\ndef solution(stdin: str) -> str:\\n1 5-b\\n1 6-a\\n9-b\\n8-a\\ndef solution(stdin: str) -> str:\\n\"\nassert solution(\"2\\nb c\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\\n\") == \"5-b\\n6-a\\n9-b\\n8-a\\ndef solution(stdin: str) -> str:\\nc 5-b\\nc 6-a\\n9-b\\n8-a\\ndef solution(stdin: str) -> str:\\nb 5-b\\nb 6-a\\n9-b\\n8-a\\ndef solution(stdin: str) -> str:\\naba 5-b\\naba 6-a\\n9-b\\n8-a\\ndef solution(stdin: str) -> str:\\nbba 5-b\\naba 6-a\\n9-b\\n8-a\\ndef solution(stdin: str) -> str:\\n0 5-b\\n0 6-a\\n9-b\\n8-a\\ndef solution(stdin: str) -> str:\\n1 5-b\\n1 6-a\\n9-b\\n8-a\\ndef solution(stdin: str) -> str:\\n\"\nassert solution(\"2\\nabc\\n10 20-a\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\\n\") == \"5-b\\n6-a\\n9-b\\n8-a\\ndef solution(stdin: str) -> str:\\nba 5-b\\naba 6-a\\n9-b\\n8-a\\ndef solution(stdin: str) -> str:\\n0 5-b\\n0 6-a\\n9-b\\n8-a\\ndef solution(stdin: str) -> str:\\n\"\nassert solution(\"2\\nabc\\n10 20-a\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\\n\") == \"5-b\\n6-a\\n9-b\\n8-a\\ndef solution(stdin: str) -> str:\\nba 5-b\\naba 6-a\\n9-b\\n8"
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"9-b\\n8-a\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Solution is not correct. Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\nab\\nbb\\n0\\n\") == [\"9-b\", \"8-a\", \"def\"]\nassert solution(\"2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\nab\\nbb\\n0\\n\") == [\"9-b\", \"8-a\", \"def\"]\nassert solution(\"2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\nab\\nbb\\n0\\n\") == [\"9-b\", \"8-a\", \"def\"]\nassert solution(\"2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\nab\\nbb\\n0\\n\") == [\"9-b\", \"8-a\", \"def\"]\nassert solution(\"2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\nab\\nbb\\n0\\n\") == [\"9-b\", \"8-a\", \"def\"]\nassert solution(\"2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\nab\\nbb\\n0\\n\") == [\"9-b\", \"8-a\", \"def\"]\nassert solution(\"2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\nab\\nbb\\n0\\n\") == [\"9-b\", \"8-a\", \"def\"]\nassert solution(\"2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\nab\\nbb\\n0\\n\") == [\"9-b\", \"8-a\", \"def\"]\nassert solution(\"2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\nab\\nbb\\n0\\n\") == [\"9-b\", \"8-a\", \"def\"]\nassert solution(\"2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\nab\\nbb\\n0\\n\") == [\"9-b\", \"8-a\", \"def\"]\nassert solution(\"2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\nab\\nbb\\n0\\n\") == [\"9-b\", \"8-a\", \"def\"]\nassert solution(\"2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\nab\\nbb\\n0\\n\") == [\"9-b\", \"8-a\", \"def\"]\nassert solution(\"2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\nab\\nbb\\n0\\n\") == [\"9-b\", \"8-a\", \"def\"]\nassert solution(\"2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\nab\\nbb\\n0\\n\") == [\"9-b\", \"8-a\", \"def\"]\nassert solution(\"2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\nab\\nbb\\n0\\n\") == [\"9-b\", \"8-a\", \"def\"]\nassert solution(\"2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\nab\\nbb\\n0\\n\") == [\"9-b\", \"8-a\", \"def\"]\nassert solution(\"2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\nab\\nbb\\n0\\n\") == [\"9-b\", \"8-a\", \"def\"]\nassert solution(\"2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\nab\\nbb\\n0\\n\") == [\"9-b\", \"8-a\", \"def\"]\nassert solution(\"2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\nab\\nbb\\n0\\n\") == [\"9-b\", \"8-a\", \"def\"]\n"
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin='2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0') == '9-b\\n8-a\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\\n\") == [\"9-b\", \"8-a\", \"def\"]"
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_data) == output_data, f\"Expected {output_data}, got {solution(input_data)}\""
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"3246R3246\""
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\necho\\n1\\nechoecho\") == \"3246R3246\""
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1') == '3246R3246', \"Test case 1 failed\"\nassert solution('2') == '2ABC', \"Test case 2 failed\"\nassert solution('3') == '3DEF', \"Test case 3 failed\"\nassert solution('4') == '4GHI', \"Test case 4 failed\"\nassert solution('5') == '5JKL', \"Test case 5 failed\"\nassert solution('6') == '6MNO', \"Test case 6 failed\"\nassert solution('7') == '7PQRS', \"Test case 7 failed\"\nassert solution('8') == '8TUV', \"Test case 8 failed\"\nassert solution('9') == '9WXYZ', \"Test case 9 failed\"\nassert solution('10') == '2ABC', \"Test case 10 failed\"\nassert solution('11') == '2ABC', \"Test case 11 failed\"\nassert solution('12') == '2ABC', \"Test case 12 failed\"\nassert solution('13') == '2ABC', \"Test case 13 failed\"\nassert solution('14') == '2ABC', \"Test case 14 failed\"\nassert solution('15') == '2ABC', \"Test case 15 failed\"\nassert solution('16') == '2ABC', \"Test case 16 failed\"\nassert solution('17') == '2ABC', \"Test case 17 failed\"\nassert solution('18') == '2ABC', \"Test case 18 failed\"\nassert solution('19') == '2ABC', \"Test case 19 failed\"\nassert solution('20') == '2ABC', \"Test case 20 failed\"\nassert solution('21') == '2ABC', \"Test case 21 failed\"\nassert solution('22') == '2ABC', \"Test case 22 failed\"\nassert solution('23') == '2ABC', \"Test case 23 failed\"\nassert solution('24') == '2ABC', \"Test case 24 failed\"\nassert solution('25') == '2ABC', \"Test case 25 failed\"\nassert solution('26') == '2ABC', \"Test case 26 failed\"\nassert solution('27') == '2ABC', \"Test case 27 failed\"\nassert solution('28') == '2ABC', \"Test case 28 failed\"\nassert solution('29') == '2ABC', \"Test case 29 failed\"\nassert solution('30') == '2ABC', \"Test case 30 failed\"\nassert solution('31') == '2ABC', \"Test case 31 failed\"\nassert solution('32') == '2ABC', \"Test case 32 failed\"\nassert solution('33') == '2ABC', \"Test case 33 failed\"\nassert solution('34') == '2ABC', \"Test case 34 failed\"\nassert solution('35') == '2ABC', \"Test case 35 failed\"\nassert solution('36') == '2ABC', \"Test case 36 failed\"\nassert solution('37') == '2ABC', \"Test case 37 failed\"\nassert solution('38') == '2ABC', \"Test case 38 failed\"\nassert solution('39') == '2ABC', \"Test case 39 failed\"\nassert solution('40') == '2ABC', \"Test case 40 failed\"\nassert solution('41') == '2ABC', \"Test case 41 failed\"\nassert solution('42') == '2ABC', \"Test case 42 failed\"\nassert solution('43') == '2ABC', \"Test case 43 failed\"\nassert solution('44') == '2ABC', \"Test case 44 failed\"\nassert solution('45') == '2ABC', \"Test case 45 failed\"\nassert solution('46') == '2ABC', \"Test case 46 failed\"\nassert solution('47') == '2ABC', \"Test case 47 failed\"\nassert solution('48') == '2ABC', \"Test case 48 failed\"\nassert solution('49') == '2ABC', \"Test case 49 failed\"\nassert solution('50') == '2ABC', \"Test case 50 failed\"\nassert solution('51') == '2ABC', \"Test case 51 failed\"\nassert solution('52') == '2ABC',"
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\necho\\n1\\nechoecho\") == \"3246R3246\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"3246R3246\", \"The expected output is not valid.\""
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=solution.__doc__) == \"\"\"\n3246R3246\n"
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"3246R3246\"\n\nSolution:\nTo type a word using as few keypresses as possible, we can use the following approach:\n\nFirst, we need to find the common prefix of all the words in the dictionary. We can do this by iterating over all the words in the dictionary and finding the common prefix of all the prefixes of each word.\n\nThen, we can iterate over all the words in the dictionary and find the minimum number of keypresses required to type each word. We can do this by iterating over all the prefixes of each word and finding the length of the common prefix between them.\n\nHere's the implementation of the solution:\n\n```python\n"
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\necho\\n1\\necho\\n\") == \"3246R3246\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"1\\nabc\\n1\\ndef\\n\") == \"2ABC3DEF\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"1\\nhello\\n1\\nworld\\n\") == \"2HLD3WLD\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"1\\n123\\n1\\n456\\n\") == \"213456\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"1\\n123456\\n1\\n789012\\n\") == \"234567891012\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\necho\\n1\\nechoecho\\n\") == \"3246R3246\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\\n\""
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"3246R3246\", \"Expected output: '3246R3246', but got '{}'.\".format(solution(input()))"
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1\") == \"YES\\n1 2\\n1 3\""
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 1') == 'YES\\n1 2\\n1 3'"
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 'YES'"
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3, 1) == 'YES\\n1 2\\n1 3\\n'\nassert solution(4, 2) == 'NO\\n'\nassert solution(5, 3) == 'YES\\n1 2\\n1 3\\n2 3\\n'\nassert solution(6, 4) == 'NO\\n'"
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1\") == \"YES\\n1 2\\n1 3\"  # expected output\n"
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 1') == 'YES\\n1 2\\n1 3'"
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 1\\n') == 'YES\\n1 2\\n1 3'"
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == sample_output, f\"sample_input: {sample_input}, sample_output: {sample_output}\""
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1\") == \"YES\\n1 2\\n1 3\"\nprint(\"YES\")\nfor _ in range(k):\n    ms = input().split()\n    ms = [int(x) for x in ms]\n    me = input().split()\n    me = [int(x) for x in me]\n    vs = input().split()\n    vs = [int(x) for x in vs]\n    ve = input().split()\n    ve = [int(x) for x in ve]\n    if ms[0] > me[0] or (ms[0] == me[0] and ms[1] > me[1]):\n        print(\"NO\")\n        break\n    if vs[0] > ve[0] or (vs[0] == ve[0] and vs[1] > ve[1]):\n        print(\"NO\")\n        break\n    if ms[0] < ms[1] or me[0] < me[1] or vs[0] < vs[1] or ve[0] < ve[1]:\n        print(\"NO\")\n        break\n    for i in range(k):\n        if ms[i] == me[i] or vs[i] == ve[i]:\n            print(\"NO\")\n            break\n    else:\n        print(\"YES\")\n        for i in range(k):\n            print(ms[i], me[i])\n            print(vs[i], ve[i])"
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3, 1) == 'YES\\n1 2\\n1 3'"
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 176, \"Your solution is incorrect. Please check the provided code and sample input/output.\""
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"176\"\n"
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == 176\n"
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == 176\n"
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input) == output, f\"Input '{input}' doesn't match output '{output}'\"\n"
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"176\", \"Output should be 176\"\n"
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == \"176\"\nassert solution(\"8\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == \"176\"\nassert solution(\"10\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == \"176\"\nassert solution(\"9\\n2\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == \"300000\"\nassert solution(\"8\\n2\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == \"300000\"\nassert solution(\"10\\n2\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == \"300000\"\nassert solution(\"8\\n1\\n6 7\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == \"300000\"\nassert solution(\"9\\n1\\n6 7\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == \"300000\"\nassert solution(\"10\\n1\\n6 7\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == \"300000\"\nassert solution(\"8\\n2\\n6 7\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == \"300000\"\nassert solution(\"9\\n2\\n6 7\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == \"300000\"\nassert solution(\"10\\n2\\n6 7\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == \"300000\"\nassert solution(\"8\\n1\\n6 8\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == \"300000\"\nassert solution(\"9\\n1\\n6 8\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == \"300000\"\nassert solution(\"10\\n1\\n6 8\\n333333\\n300003\\n300003"
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n\") == \"176\""
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n\") == \"176\\n\"\nassert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n\") == \"176\\n\""
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == \"176\""
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(5) == \"12\"\nassert solution(10) == \"1610\"\nassert solution(11) == \"242789610\"\nassert solution(15) == \"121010000\"\nassert solution(16) == \"1315222010000\""
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"12\""
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5') == '12'"
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(5) == \"12\\n\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(5) == \"12\""
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(5) == \"12\"\n\nfrom typing import List"
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(5) == \"12\""
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"12\\n\""
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Testcase failed: {input()}, {expected_output}\"\n"
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"12\"\nassert solution(\"10\") == \"016\"\nassert solution(\"12345\") == \"016\"\nassert solution(\"1234567\") == \"00016\"\nassert solution(\"12345678\") == \"01678\"\nassert solution(\"123456789\") == \"0001678\"\nassert solution(\"1234567890\") == \"0016789\"\nassert solution(\"12345678901\") == \"00016789\"\nassert solution(\"123456789012\") == \"0167890\"\nassert solution(\"1234567890123\") == \"0167890\"\nassert solution(\"12345678901234\") == \"0167890\"\nassert solution(\"123456789012345\") == \"0167890\"\nassert solution(\"1234567890123456\") == \"0167890\"\nassert solution(\"12345678901234567\") == \"0167890\"\nassert solution(\"123456789012345678\") == \"0167890\"\nassert solution(\"1234567890123456789\") == \"0167890\"\nassert solution(\"12345678901234567890\") == \"0167890\""
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 1\\n((()480617-570928\\n\") == \"480\", \"Test 1\")\nassert solution(\"4 1\\n((())480617-570928\\n\") == \"480\", \"Test 2\")\nassert solution(\"4 2\\n((()())()())\\n\") == \"0\", \"Test 3\")\nassert solution(\"4 1\\n((()())()())\\n\") == \"0\", \"Test 4\")\nassert solution(\"4 1\\n((()()))\\n\") == \"0\", \"Test 5\")"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('test_case.txt', 'r')) == 480\n"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n4 1\n((()\n480\n617\n-570\n928\n''') == '480')"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n4 1\n((()\n480\n617\n-570\n928\n\"\"\") == 480)\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"480\""
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 480\n"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 1\\n((()\") == 480\nassert solution(\"4 1\\n(())\") == \"? \"\nassert solution(\"4 1\\n(()\")) == 480\nassert solution(\"4 1\\n(())\") == 480"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 480\n"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n4 1\n((()\n480\n617\n-570\n928\n''') == 480)"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n4 1\n((()\n480\n617\n-570\n928\n\"\"\") == 480)\nassert solution(\"\"\"\n4 1\n(())\n480\n617\n-570\n928\n\"\"\") == 480)\nassert solution(\"\"\"\n4 1\n(()())\n480\n617\n-570\n928\n\"\"\") == 480)\nassert solution(\"\"\"\n4 1\n(()(())())\n480\n617\n-570\n928\n\"\"\") == 480)\nassert solution(\"\"\"\n4 1\n(())(())()\n480\n617\n-570\n928\n\"\"\") == 480)\nassert solution(\"\"\"\n4 1\n(()(()()))\n480\n617\n-570\n928\n\"\"\") == 480)\nassert solution(\"\"\"\n4 1\n(()(()()()))\n480\n617\n-570\n928\n\"\"\") == 480)\nassert solution(\"\"\"\n4 1\n(()(()(())))\n480\n617\n-570\n928\n\"\"\") == 480)\nassert solution(\"\"\"\n4 1\n(()(()(()(())))\n480\n617\n-570\n928\n\"\"\") == 480)\nassert solution(\"\"\"\n4 1\n(()(()(()(()())))\n480\n617\n-570\n928\n\"\"\") == 480)\nassert solution(\"\"\"\n4 1\n(()(()(()(()(())))\n480\n617\n-570\n928\n\"\"\") == 480)\nassert solution(\"\"\"\n4 1\n(()(()(()(()(()(())))\n480\n617\n-570\n928\n\"\"\") == 480)\nassert solution(\"\"\"\n4 1\n(()(()(()(()(()(()(())))\n480\n617\n-570\n928\n\"\"\") == 480)\nassert solution(\"\"\"\n4 1\n(()(()(()(()(()(()(())))))\n480\n617\n-570\n928\n\"\"\") == 480)\nassert solution(\"\"\"\n4 1\n(()(()(()(()(()(()(()(())))))\n480\n617\n-570\n928\n\"\"\") == 480)\nassert solution(\"\"\"\n4 1\n(()(()(()(()(()(()(()(()(())))))))\n480\n617\n-570\n928\n\"\"\") == 480)\nassert solution(\"\"\"\n4 1\n(()(()(()(()(()(()(()(())))))))\n480\n617\n-570\n928\n\"\"\") == 480)\nassert solution(\"\"\"\n4 1\n(()(()(()(()(()(()(()(())))))))\n480\n617\n-570\n928\n\"\"\") == 480)\nassert solution(\"\"\"\n4 1\n(()(()(()(()(()(()(()(())))))))\n480\n617\n-570\n928\n\"\"\") == 480)\nassert solution(\"\"\"\n4 1\n(()(()(()(()(()(()(())))))))\n480\n617\n-570\n928\n\"\"\") == 480)\nassert solution(\"\"\"\n4 1\n(()(()(()(()(()(()(())))))))\n480\n617\n-570\n928\n\"\"\") == 480)\nassert solution(\"\"\"\n4 1\n(()(()(()(()(()(()(())))))))\n480\n617\n-570\n928\n\"\"\") == 480)\nassert solution(\"\"\"\n4 1\n(()(()(()(()(()(())))))))\n480\n617\n-570\n928\n\"\"\") == 480)\nassert solution(\"\"\"\n4 1\n(()(()(()(()(()(())))))))\n480\n617\n-570\n928\n\"\"\") == 480)\nassert solution(\"\"\"\n4 1\n(()(()(()(()(()(())))))))\n480\n617\n-570\n928\n\"\"\") == 480)\nassert solution(\"\"\"\n4 1\n(()(()(()(()(()(()"
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\") == \"2 4\\n5 6\\n7 8 9 10 11 12 13\\n\", \"Your solution is correct.\"\nassert solution(\"12\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100\\n100 101\\n101 102\\n102 103\\n103 104\\n104 105\\n105 106\\n106 107\\n107 108\\n108 109\\n109 110\\n110 111\\n111 112\\n112 113\\n113 114\\n114 115\\n115 116\\n116 117\\n117 118\\n118 119\\n119 120\\n120 121\\n121 1"
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n    13\n    2 2 4\n    3 1 3 5\n    2 2 4\n    3 1 3 6\n    2 2 6\n    2 4 5\n    2 8 9\n    2 7 9\n    2 7 8\n    2 11 13\n    2 10 12\n    2 11 13\n    2 10 12\n''') == '2 4\\n5 6\\n7 8 9 10 11 12 13'"
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n\") == \"2 4\\n5 6\\n7 8 9 10 11 12 13\"\nassert solution(\"13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n\") == \"2 4\\n5 6\\n7 8 9 10 11 12 13\""
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\") == \"2 4\\n5 6\\n7 8 9 10 11 12 13\"\nassert solution(\"13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n2 14 16\\n2 15 15\\n2 15 14\\n2 17 16\\n2 18 16\\n2 18 15\\n2 20 17\\n2 21 16\\n2 22 17\\n2 22 16\\n2 24 18\\n2 25 17\\n2 26 18\\n2 26 17\\n2 28 19\\n2 29 18\\n2 30 19\\n2 31 18\\n2 32 19\\n2 33 18\\n2 34 19\\n2 35 18\\n2 36 19\\n2 37 18\\n2 38 19\\n2 39 18\\n2 40 19\\n2 41 18\\n2 42 19\\n2 43 18\\n2 44 19\\n2 45 18\\n2 46 19\\n2 47 18\\n2 48 19\\n2 49 18\\n2 50 19\\n2 51 18\\n2 52 19\\n2 53 18\\n2 54 19\\n2 55 18\\n2 56 19\\n2 57 18\\n2 58 19\\n2 59 18\\n2 60 19\\n2 61 18\\n2 62 19\\n2 63 18\\n2 64 19\\n2 65 18\\n2 66 19\\n2 67 18\\n2 68 19\\n2 69 18\\n2 70 19\\n2 71 18\\n2 72 19\\n2 73 18\\n2 74 19\\n2 75 18\\n2 76 19\\n2 77 18\\n2 78 19\\n2 79 18\\n2 80 19\\n2 81 18\\n2 82 19\\n2 83 18\\n2 84 19\\n2 85 18\\n2 86 19\\n2 87 18\\n2 88 19\\n2 89 18\\n2 90 19\\n2 91 18\\n2 92 19\\n2 93 18\\n2 94 19\\n2 95 18\\n2 96 19\\n2 97 18\\n2 98 19\\n2 99 18\\n2 "
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '''2 4\n5 6\n7 8 9 10 11 12 13'''"
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\") == \"2 4\\n5 6\\n7 8 9 10 11 12 13\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2 4\\n5 6\\n7 8 9 10 11 12 13\", \"The given solution is incorrect.\""
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n') == '2 4\\n5 6\\n7 8 9 10 11 12 13\\n'\nprint('All test cases pass')"
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12') == '2 4\\n5 6\\n7 8 9 10 11 12 13'"
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\") == \"2 4\\n5 6\\n7 8 9 10 11 12 13\"\nassert solution(\"10\\n1 2 3\\n2 3 4\\n3 4 5\\n4 5 6\\n5 6 7\\n6 7 8\\n7 8 9\\n8 9 10\\n9 10 11\\n10 11 12\\n11 12 13\\n12 13 14\\n13 14 15\\n14 15 16\\n15 16 17\\n16 17 18\\n17 18 19\\n18 19 20\\n19 20 21\\n20 21 22\\n21 22 23\\n22 23 24\\n23 24 25\\n24 25 26\\n25 26 27\\n26 27 28\\n27 28 29\\n28 29 30\\n29 30 31\\n30 31 32\\n31 32 33\\n32 33 34\\n33 34 35\\n34 35 36\\n35 36 37\\n36 37 38\\n37 38 39\\n38 39 40\\n39 40 41\\n40 41 42\\n41 42 43\\n42 43 44\\n43 44 45\\n44 45 46\\n45 46 47\\n46 47 48\\n47 48 49\\n48 49 50\\n49 50 51\\n50 51 52\\n51 52 53\\n52 53 54\\n53 54 55\\n54 55 56\\n55 56 57\\n56 57 58\\n57 58 59\\n58 59 60\\n59 60 61\\n60 61 62\\n61 62 63\\n62 63 64\\n63 64 65\\n64 65 66\\n65 66 67\\n66 67 68\\n67 68 69\\n68 69 70\\n69 70 71\\n70 71 72\\n71 72 73\\n72 73 74\\n73 74 75\\n74 75 76\\n75 76 77\\n76 77 78\\n77 78 79\\n78 79 80\\n79 80 81\\n80 81 82\\n81 82 83\\n82 83 84\\n83 84 85\\n84 85 86\\n85 86 87\\n86 87 88\\n87 88 89\\n88 89 90\\n89 90 91\\n90 91 92\\n91 "
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2\") == \"35 39 36 27 29\\n\""
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=None) == '35 39 36 27 29'"
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2\") == \"35 39 36 27 29\\n\"\n"
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n5 5\n1 2 3\n1 4 8\n2 3 12\n3 5 4\n4 5 2\n''') == '''\n35 39 36 27 29\n'''"
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    5 5\n    1 2 3\n    1 4 8\n    2 3 12\n    3 5 4\n    4 5 2\n    \"\"\"\n) == \"35 39 36 27 29\\n\"\nassert solution(\n    \"\"\"\n    100000 100000\n    \"\"\"\n) == \"100000\\n\"\nassert solution(\n    \"\"\"\n    100000 100000\n    5 5\n    \"\"\"\n) == \"50000\\n\""
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2\") == \"35 39 36 27 29\"\nassert solution(\"10 5\\n2 3 4\\n3 4 5\\n4 5 6\\n5 6 7\\n6 7 8\") == \"1728 1774 1637 1434 1311\"\nassert solution(\"1 2\\n3 4\\n5 6\") == \"3 6 9\""
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2\") == \"35 39 36 27 29\"\n"
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"The output is incorrect. Expected: {expected_output}, got: {solution(input())}\""
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2\") == \"35 39 36 27 29\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0 672\"\n"
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n    3 3\n    3 2 1\n    ''') == '0 672\\n'"
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 3\\n3 2 1\\n') == '0 672'"
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Expected: {output()}\\nGot: {solution(input())}\""
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 3\\n3 2 1') == '0 672'"
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"0 672\"\n"
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n3 3\n3 2 1\n''') == '0 672'"
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n3 2 1\\n\") == \"0 672\"\nassert solution(\"3 4\\n2 2 3 1\\n\") == \"1 136\"\nassert solution(\"3 6\\n4 2 3 2 2 2\\n\") == \"1 1144\"\nassert solution(\"4 3\\n3 3 3 3 3\\n\") == \"0 966\"\nassert solution(\"6 5\\n5 5 5 5 5 5\\n\") == \"2 1680\""
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"0 672\""
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 3\\n3 2 1') == '0 672\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution('3 4\\n2 2 1 0') == '0 331\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution('5 5\\n0 1 2 3 4') == '13150755\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution('7 7\\n1 2 3 4 5 6') == '24701155\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n"
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50') == 2.5\nassert solution('4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n3 40 75') == 1.25\nassert solution('4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n3 40 75\\n4 50 100') == 2.75"
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50') == '2.500000\\n'\nassert solution('4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n3 3 120\\n3 15 150\\n4 10 100') == 'Impossible\\n'"
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n4 5 100\n0 10 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50\n''') == '2.500000\\nImpossible'\n"
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n\") == \"2.500000\\n\""
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2.500000\\n\""
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\") == \"2.500000\""
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n4 5 100\n0 10 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50\n\"\"\"\n) == \"2.500000\"\nassert solution(\n    \"\"\"\n4 4 100\n0 10 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50\n\"\"\"\n) == \"Impossible\"\nassert solution(\n    \"\"\"\n4 5 100\n0 10 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50\n3 4 100\n4 4 100\n\"\"\"\n) == \"Impossible\"\nassert solution(\n    \"\"\"\n4 4 100\n0 10 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50\n3 4 100\n4 4 100\n5 4 100\n\"\"\"\n) == \"Impossible\"\nassert solution(\n    \"\"\"\n4 4 100\n0 10 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50\n3 4 100\n4 4 100\n5 4 100\n6 4 100\n7 4 100\n\"\"\"\n) == \"Impossible\"\nassert solution(\n    \"\"\"\n4 4 100\n0 10 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50\n3 4 100\n4 4 100\n5 4 100\n6 4 100\n7 4 100\n8 4 100\n\"\"\"\n) == \"Impossible\"\nassert solution(\n    \"\"\"\n4 4 100\n0 10 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50\n3 4 100\n4 4 100\n5 4 100\n6 4 100\n7 4 100\n8 4 100\n9 4 100\n10 4 100\n\"\"\"\n) == \"Impossible\"\nassert solution(\n    \"\"\"\n4 4 100\n0 10 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50\n3 4 100\n4 4 100\n5 4 100\n6 4 100\n7 4 100\n8 4 100\n9 4 100\n10 4 100\n11 4 100\n\"\"\"\n) == \"Impossible\"\nassert solution(\n    \"\"\"\n4 4 100\n0 10 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50\n3 4 100\n4 4 100\n5 4 100\n6 4 100\n7 4 100\n8 4 100\n9 4 100\n10 4 100\n11 4 100\n12 4 100\n\"\"\"\n) == \"Impossible\"\nassert solution(\n    \"\"\"\n4 4 100\n0 10 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50\n3 4 100\n4 4 100\n5 4 100\n6 4 100\n7 4 100\n8 4 100\n9 4 100\n10 "
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2.500000\"\n"
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n4 5 100\n0 10 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50\n''') == '2.500000'"
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n\") == 2.5\nassert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n\") == \"Impossible\""
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3 4\") == \"3\""
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    3\n    5 3 4\n    \"\"\"\n) == \"3\"\n\nassert solution(\n    \"\"\"\n    4\n    4 3 2 1\n    \"\"\"\n) == \"4\"\n\nassert solution(\n    \"\"\"\n    6\n    10 9 8 7 6 5\n    \"\"\"\n) == \"5\"\n\nassert solution(\n    \"\"\"\n    8\n    20 15 12 10 8 6 4 2\n    \"\"\"\n) == \"6\"\n\nassert solution(\n    \"\"\"\n    9\n    10 5 3 2 1 6 7 8\n    \"\"\"\n) == \"7\""
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(5) == 3"
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"3\\ndef solution(stdin: str) -> str:\\npass\\n\""
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 3, \"Test Case 1\"\nassert solution(5) == 3, \"Test Case 2\"\nassert solution(10) == 4, \"Test Case 3\"\nassert solution(15) == 5, \"Test Case 4\"\nassert solution(20) == 6, \"Test Case 5\""
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 3, \"Expected output: 3\""
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 3, \"The expected output is: 3, but got: {}\".format(solution(3))"
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin='3\\n5 3 4') == '3\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n5 3 4\\n') == '3'\nassert solution('4\\n5 3 4\\n') == '3'\nassert solution('5\\n5 3 4\\n') == '3'\nassert solution('1\\n5 3 4\\n') == '2'\nassert solution('5\\n5 3 4 5\\n') == '3'\nassert solution('3\\n10 3 4 5\\n') == '3'\nassert solution('5\\n10 3 4 5\\n') == '3'\nassert solution('5\\n3 3 4\\n') == '2'\nassert solution('5\\n3 3 4 5\\n') == '3'\nassert solution('5\\n3 3 4 5 5\\n') == '3'\nassert solution('10\\n5 3 4 5\\n') == '4'\nassert solution('10\\n5 3 4 5 5\\n') == '4'\nassert solution('10\\n5 3 4 5 5 5\\n') == '5'"
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"3\\n3\\n\", \"Test 1\"\nassert solution(stdin) == \"2\\n2\\n\", \"Test 2\"\nassert solution(stdin) == \"1\\n1\\n\", \"Test 3\""
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1 1\") == \"2\\n\"\nassert solution(\"10 3 2\") == \"2\\n\"\nassert solution(\"5 5 5\") == \"1\\n\"\nassert solution(\"1000000000 1000000000 1000000000\") == \"1\\n\"\nassert solution(\"10000000000 10000000000 10000000000\") == \"2\\n\""
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1 1\") == \"2\"\nassert solution(\"4 2 3\") == \"3\"\nassert solution(\"3 3 2\") == \"6\"\nassert solution(\"6 3 1\") == \"24\"\nassert solution(\"10 2 2\") == \"108\""
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1 1\") == \"2\\n\"\nassert solution(\"5 2 2\") == \"6\\n\"\nassert solution(\"10 10 10\") == \"12\\n\"\nassert solution(\"100 100 100\") == \"233168\\n\"\nassert solution(\"1000 1000 1000\") == \"9991379296\\n\"\nassert solution(\"10000 10000 10000\") == \"999370402092\\n\""
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == expected_output, \"Your solution is incorrect. Please check the provided code and make the necessary changes.\""
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1 1\") == \"2\\n\"\nassert solution(\"3 2 1\") == \"1\\n\"\nassert solution(\"5 3 2\") == \"3\\n\"\nassert solution(\"6 4 3\") == \"6\\n\"\nassert solution(\"7 5 4\") == \"2\\n\""
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2\\n\", \"Solution must return 2, but returned: \" + solution(stdin)"
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1 1\") == \"2\\n\""
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1 1\") == \"2\"\nassert solution(\"100 1 1\") == \"100\"\nassert solution(\"100 2 1\") == \"100\"\nassert solution(\"300 1 1\") == \"301\"\nassert solution(\"100 100 1\") == \"1000000000\""
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 1 1') == 2\nassert solution('10 5 3') == 466\nassert solution('1000000000 1000000000 1000000000') == 12289023838579521023"
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 3 5\") == \"7\"\nassert solution(\"1\\n3 5 7 11 13\") == \"17\"\nassert solution(\"4\\n2 4 6 8 10\") == \"26\"\nassert solution(\"5\\n9 11 13 17 19\") == \"41\"\nassert solution(\"2\\n2 2\") == \"4\""
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n3\n1 3 5\n''') == '7\\n'"
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 3 5\") == \"7\"\nassert solution(\"3\\n1 2 3\") == \"6\"\nassert solution(\"3\\n
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == \"7\""
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 3 5\") == \"7\\n\"\nassert solution(\"4\\n1 2 3 4 5\") == \"5\\n\"\nassert solution(\"1\\n2\") == \"1\\n\"\nassert solution(\"1\\n3\") == \"6\\n\"\nassert solution(\"1\\n4\") == \"9\\n\"\n"
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 3 5\") == \"7\"\nassert solution(\"4\\n1 2 3 4 5\") == \"11\""
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin='3\\n1 3 5\\n') == '7\\n'"
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 3 5\") == \"7\"\n"
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 3 5\") == \"7\\n\"\n"
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 3 5\") == \"7\""
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"fred dinosaur 2 jets jetsons\") == \"fred jetsons\\njohn jets\\nruth rockets\"\nassert solution(\"john rhinocerous 2 jets rockets\") == \"john jets\\nruth rockets\"\nassert solution(\"mary rhinocerous 2 jetsons rockets\") == \"john jets\\nruth rockets\"\nassert solution(\"ruth platypus 1 rockets\") == \"ruth platypus\\n\"\nassert solution(\"fred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\") == \"fred jetsons\\njohn jets\\nruth rockets\"\nassert solution(\"fred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\") == \"Impossible.\""
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"fred jetsons\\njohn jets\\nruth rockets\\n\"\nassert solution(stdin) == \"fred jetsons\\njohn jets\\nruth rockets\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"fred jetsons\\nfred jetsons\\nfred jetsons\\nfred jetsons\\nfred jetsons\"\n"
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"fred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\") == \"fred jetsons\\njohn jets\\nruth rockets\"\nassert solution(\"fred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n2\\njohn jets\\nruth platypus 1 rockets\") == \"john jets\\nruth platypus 1 rockets\"\nassert solution(\"fred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n0\\n\") == \"Impossible.\"\nassert solution(\"fred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n1\\n\") == \"Impossible.\"\nassert solution(\"fred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n3\\n\") == \"Impossible.\"\nassert solution(\"fred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n1\\n\\njohn jets\\nruth platypus 1 rockets\") == \"john jets\\nruth platypus 1 rockets\"\nassert solution(\"fred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n1\\n\\njohn jets\\nruth platypus 1 rockets\\njohn jets\\nruth platypus 1 rockets\") == \"Impossible.\"\nassert solution(\"fred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n1\\n\\njohn jets\\nruth platypus 1 rockets\\njohn jets\\nruth platypus 1 rockets\\njohn jets\\nruth platypus 1 rockets\") == \"john jets\\nruth platypus 1 rockets\""
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets') == ['fred jetsons', 'john jets', 'ruth rockets']\nassert solution('2\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n"
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\") == \"fred jetsons\\njohn jets\\nruth rockets\\nImpossible.\"\n\nassert solution(\"2\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\") == \"fred jetsons\\njohn jets\\nruth rockets\\nImpossible.\"\n\nassert solution(\"2\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\") == \"fred jetsons\\njohn jets\\nruth rockets\\nImpossible.\"\n\nassert solution(\"2\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\") == \"fred jetsons\\njohn jets\\nruth rockets\\nImpossible.\"\n\nassert solution(\"2\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\") == \"fred jetsons\\njohn jets\\nruth rockets\\nImpossible.\"\n\nassert solution(\"2\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\") == \"fred jetsons\\njohn jets\\nruth rockets\\nImpossible.\"\n\nassert solution(\"2\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\") == \"fred jetsons\\njohn jets\\nruth rockets\\nImpossible.\"\n\nassert solution(\"2\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur"
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('tests/test_cases/residents.txt', 'r')) == 'fred jetsons\\njohn jets\\nruth rockets\\n'\nassert solution(open('tests/test_cases/residents.txt', 'r')) == 'Impossible.\\n'"
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(r\"\"\"\n2\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n\"\"\") == \"fred jetsons\\njohn jets\\nruth rockets\\n\"\n\nassert solution(r\"\"\"\n2\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n\"\"\") == \"fred jetsons\\njohn jets\\nruth rockets\\n\"\n\nassert solution(r\"\"\"\n2\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n\"\"\") == \"fred jetsons\\njohn jets\\nruth rockets\\n\"\n\nassert solution(r\"\"\"\n2\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n\"\"\") == \"fred jetsons\\njohn jets\\nruth rockets\\n\"\n\nassert solution(r\"\"\"\n2\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n\"\"\") == \"fred jetsons\\njohn jets\\nruth rockets\\n\""
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"fred jets\\njohn jets\\nruth rockets\""
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"fred jetsons\\njohn jets\\nruth rockets\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n-10 9\\n-2 3\") == \"1 2 1\\n\"\nassert solution(\"3\") == \"3\\n\"\nassert solution(\"2 10\") == \"2 10\\n\"\nassert solution(\"1 1 1\") == \"1\\n\"\nassert solution(\"1 100\") == \"0\\n\"\nassert solution(\"1 1 1 1 1\") == \"0\\n\"\nassert solution(\"5\") == \"0\\n\""
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, \"Input and output do not match.\""
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1 2 1\"\nassert solution() == \"1 2 2\"\nassert solution() == \"1 2 3\"\nassert solution() == \"1 2 4\"\nassert solution() == \"1 2 5\""
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n4 3\\n-10 9\\n-2 3\") == \"1 2 1\\n\"\nassert solution(\"5\\n6 4\\n-8 10\\n-6 7\\n-12 9\\n1 2\") == \"1 2 2 1 1 2\\n\"\nassert solution(\"1\\n2 1\\n-10 10\") == \"0\\n\""
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(solution) == '1 2 1'"
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\") == []\nassert solution(\"1\\n2\\n3\") == []\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\") == [1, 2, 1]\n"
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution([4, 3, -10, -2, 3]) == [1, 2, 1]"
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"\"\"1 2 1\"\"\""
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''3\n4 3\n-10 9\n-2 3''') == '''1 2 1'''\nprint(solution('''3\n4 3\n-10 9\n-2 3'''))"
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n-10 9\\n-2 3\") == \"1 2 1\"\nassert solution(\"5 3\\n-10 9\\n-2 3\") == \"3\"\nassert solution(\"5 3\\n-10 9\\n-2 3\\n-3 3\\n-4 3\\n-5 3\\n-6 3\\n-7 3\\n-8 3\\n-9 3\\n-10 3\") == \"3\""
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass'\nprint('Test passed!')"
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\") == \"2.125\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2.125\"\n"
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\") == \"2.125\""
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2.125\", \"Solution not correct\"\n"
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\") == \"2.125\\n\"\n"
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 2.125\n"
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2.125\", \"Expected output: 2.125\\nGot: \" + solution(stdin)"
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\") == \"2.125\""
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 2.125, \"Your solution is incorrect.\""
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"*.c\") == \"main.c\"\nassert solution(\"*.c*.o\") == \"main.c\"\nassert solution(\"*.c*\") == \"main.c\"\nassert solution(\"*.c*o\") == \"main.c\"\nassert solution(\"*.c*o*\") == \"main.c\"\nassert solution(\"*.c**o*\") == \"main.c\""
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"main.c\\na.out\""
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"*.c\", \"4\\nmain.c\\na.out\\nreadme\\nyacc\") == [\"main.c\", \"a.out\", \"def.py\"]\nassert solution(\"*.c\", \"4\\nmain.c\\na.out\\nreadme\\nyacc\") == [\"main.c\", \"a.out\", \"def.py\"]"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('*.c') == ['main.c', 'a.out']\nassert solution('abc.*') == ['abc.c', 'abc.h', 'abc.o']\nassert solution('def.*') == ['def.c', 'def.h', 'def.o']\nassert solution('*.o') == ['abc.o', 'def.o']\nassert solution('abc.*') == ['abc.c', 'abc.h', 'abc.o']"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(b'*.c\\nmain.c\\na.out\\nreadme\\nyacc\\n') == ['main.c', 'a.out']"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"*.c\") == [\"main.c\", \"a.out\"]\nassert solution(\"a.out\") == [\"a.out\"]\nassert solution(\"4\") == [\"main.c\", \"a.out\"]\nassert solution(\"**\") == [\"main.c\", \"a.out\", \"readme\", \"yacc\"]\nassert solution(\"**/*.c\") == [\"main.c\", \"a.out\"]"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('**/*.c') == ['main.c', 'a.out']\nassert solution('*.c') == ['main.c', 'a.out']\nassert solution('*.*') == ['main.c', 'a.out','readme', 'yacc']\nassert solution('a*') == ['a.out']\nassert solution('a.*') == ['a.out','main.c']"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"*.c\") == \"main.c\"\nassert solution(\"a.*\") == \"a.out\"\nassert solution(\"*.c\") == \"main.c\"\nassert solution(\"a.*\") == \"a.out\"\nassert solution(\"a.b.*\") == \"a.out\"\nassert solution(\"abc\") == \"abc\"\n"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"main.c\\na.out\\nreadme\\nyacc\\n\"\n"
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 1\\n0.500000') == '0.500000'\nassert solution('1 1\\n0.499999') == '0.499999'\nassert solution('1 1\\n0.500001') == '0.500000'\nassert solution('1 1\\n0.500000') == '0.500000'\nassert solution('1 1\\n0.500000') == '0.500000'\n"
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 1\\n0.500000') == '0.500000'"
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin='1 1\\n0.500000') == '0.500000\\n'"
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1\\n0.500000\\n\") == \"0.500000\\n\"\n"
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 1\\n0.500000') == '0.500000'\nassert solution('2 3\\n0.750000') == '0.700000'\nassert solution('3 4\\n0.800000') == '0.800000'\nassert solution('4 5\\n0.850000') == '0.850000'\nassert solution('5 6\\n0.900000') == '0.900000'\nassert solution('6 7\\n0.950000') == '0.950000'\nassert solution('7 8\\n1.000000') == '1.000000'"
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\\n0.500000\\n\") == \"0.500000\\n\""
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1\\n0.500000\") == \"0.500000\\n\"\n"
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"0.500000\", \"The output must be 0.500000\""
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"0.500000\\n\", solution(stdin)"
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == '''\n0.500000\n'''\n"
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0.0\", \"Test Case Failed\""
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output\nprint(\"Pass\")"
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Solution does not match expected output.\\nInput: {input()}\\nOutput: {output}\\n\""
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 49.9\") == \"0.0\", \"Incorrect output\""
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('0 49.9') == '0.0'"
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"0.0\\n\", \"Input is invalid\""
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('0 49.9') == '0.0', \"Solution should return 0.0\""
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 49.9\") == \"0.0\", \"Test case 1 is incorrect.\"\nassert solution(\"0 50\") == \"0.0\", \"Test case 2 is incorrect.\"\nassert solution(\"0 50.0\") == \"0.0\", \"Test case 3 is incorrect.\"\nassert solution(\"10 49.9\") == \"10.0\", \"Test case 4 is incorrect.\"\nassert solution(\"10 50\") == \"10.0\", \"Test case 5 is incorrect.\"\nassert solution(\"10 50.0\") == \"10.0\", \"Test case 6 is incorrect.\""
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0.499\") == \"0.0\""
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 49.9\") == \"0.0\"\n"
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n1 2\\n2 3\\n3 1\\n4 1') == '4 1\\n2 1\\n3 2\\n1 3'\nprint(solution('4\\n1 2\\n2 3\\n3 1\\n4 1'))"
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == sample_output, f\"Wrong output for {sample_input}\""
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2\\n2 3\\n3 1\\n4 1\") == \"4 1\\n2 1\\n3 2\\n1 3\"\nassert solution(\"1 2\\n2 3\\n3 1\\n4 1\\n1 4\\n2 4\\n3 4\\n4 4\") == \"4 1\\n2 1\\n3 2\\n1 3\""
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"4 1\\n2 1\\n3 2\\n1 3\\n\"\nassert solution() == \"1 3\\n2 1\\n3 2\\n4 1\\n\"\nassert solution() == \"4 1\\n3 2\\n2 1\\n1 3\\n\"\nassert solution() == \"1 3\\n3 2\\n2 1\\n4 1\\n\"\nassert solution() == \"4 1\\n2 1\\n3 2\\n1 3\\n\""
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 1\\n4 1\") == \"4 1\\n2 1\\n3 2\\n1 3\\n\""
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 1\\n4 1\\n\") == \"4 1\\n2 1\\n3 2\\n1 3\\n\"\nassert solution(\"4\\n1 2\\n2 3\\n3 1\\n4 2\\n\") == \"4 2\\n2 1\\n3 2\\n1 3\\n\"\nassert solution(\"4\\n1 2\\n2 3\\n3 1\\n4 3\\n\") == \"4 3\\n2 1\\n3 2\\n1 3\\n\"\nassert solution(\"4\\n1 2\\n2 3\\n3 1\\n4 4\\n\") == \"4 4\\n2 1\\n3 2\\n1 3\\n\"\nassert solution(\"5\\n1 2\\n2 3\\n3 1\\n4 2\\n5 3\\n6 1\\n7 2\\n8 1\\n9 2\\n10 1\\n\") == \"5 2\\n3 2\\n1 3\\n2 4\\n\"\nassert solution(\"5\\n1 2\\n2 3\\n3 1\\n4 2\\n5 3\\n6 1\\n7 2\\n8 1\\n9 2\\n10 1\\n\") == \"5 3\\n3 1\\n1 2\\n2 4\\n\"\nassert solution(\"5\\n1 2\\n2 3\\n3 1\\n4 2\\n5 3\\n6 1\\n7 2\\n8 1\\n9 2\\n10 1\\n\") == \"5 4\\n3 1\\n1 2\\n2 4\\n\""
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 1\\n4 1\") == \"4 1\\n2 1\\n3 2\\n1 3\"\n"
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"\"\"\n4 1\n2 1\n3 2\n1 3\n\"\"\""
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 1\\n4 1\\n\") == \"4 1\\n2 1\\n3 2\\n1 3\\n\"\nassert solution(\"4\\n1 2\\n2 3\\n3 1\\n4 2\\n\") == \"4 2\\n2 1\\n3 2\\n1 3\\n\"\nassert solution(\"4\\n1 2\\n2 3\\n3 1\\n4 3\\n\") == \"4 3\\n2 1\\n3 2\\n1 3\\n\"\nassert solution(\"4\\n1 2\\n2 3\\n3 1\\n4 4\\n\") == \"4 4\\n2 1\\n3 2\\n1 3\\n\"\nassert solution(\"4\\n1 2\\n2 3\\n3 1\\n4 5\\n\") == \"4 5\\n2 1\\n3 2\\n1 3\\n\"\n\nprint(\"All test cases passed\")\n"
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 1\n"
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"2\""
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 1\n"
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n\") == \"1\""
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('C:\\\\Users\\\\danny\\\\Documents\\\\Personal\\\\Projects\\\\Algorithmic_Implementations\\\\Python\\\\Leetcode\\\\Problem_216_Sweet_Balanced_Diet.txt').read()) == \"1\\n\"\n"
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\\n\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\\n\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\\n\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\\n\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\\n\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\\n\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\\n\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\\n\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\\n\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\\n\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\\n\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\\n\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\\n\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\\n\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\\n\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\\n\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\\n\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\\n\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\\n\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\\n\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\\n\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\\n\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\\n\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\\n\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\\n\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\\n\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\\n\"\n"
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"1\"\n"
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n\") == \"1\""
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n\") == \"1\"\nassert solution(\"6 5\\n1 1 6 3 5 3\\n1 1 5 3 5\\n\") == \"1\"\nassert solution(\"6 5\\n1 2 6 3 5 3\\n1 2 5 3 5\\n\") == \"1\"\nassert solution(\"6 5\\n1 3 6 3 5 3\\n1 3 5 3 5\\n\") == \"1\"\nassert solution(\"6 5\\n1 4 6 3 5 3\\n1 4 5 3 5\\n\") == \"1\"\nassert solution(\"6 5\\n1 5 6 3 5 3\\n1 5 5 3 5\\n\") == \"1\"\nassert solution(\"6 5\\n1 6 6 3 5 3\\n1 6 5 3 5\\n\") == \"1\"\nassert solution(\"6 5\\n1 7 6 3 5 3\\n1 7 5 3 5\\n\") == \"1\"\nassert solution(\"6 5\\n1 8 6 3 5 3\\n1 8 5 3 5\\n\") == \"1\"\nassert solution(\"6 5\\n1 9 6 3 5 3\\n1 9 5 3 5\\n\") == \"1\"\nassert solution(\"6 5\\n1 10 6 3 5 3\\n1 10 5 3 5\\n\") == \"1\"\nassert solution(\"6 5\\n1 11 6 3 5 3\\n1 11 5 3 5\\n\") == \"1\"\nassert solution(\"6 5\\n1 12 6 3 5 3\\n1 12 5 3 5\\n\") == \"1\"\nassert solution(\"6 5\\n1 13 6 3 5 3\\n1 13 5 3 5\\n\") == \"1\"\nassert solution(\"6 5\\n1 14 6 3 5 3\\n1 14 5 3 5\\n\") == \"1\"\nassert solution(\"6 5\\n1 15 6 3 5 3\\n1 15 5 3 5\\n\") == \"1\"\nassert solution(\"6 5\\n1 16 6 3 5 3\\n1 16 5 3 5\\n\") == \"1\"\nassert solution(\"6 5\\n1 17 6 3 5 3\\n1 17 5 3 5\\n\") == \"1\"\nassert solution(\"6 5\\n1 18 6 3 5 3\\n1 18 5 3 5\\n\") == \"1\"\nassert solution(\"6 5\\n1 19 6 3 5 3\\n1 19 5 3 5\\n\") == \"1\"\nassert solution(\"6 5\\n1 20 6 3 5 3\\n1 20 5 3 5\\n\") == \"1\"\nassert solution(\"6 5\\n1 21 6 3 5 3\\n1 21 5 3 5\\n\") == \"1\"\nassert solution(\"6 5\\n1 22 6 3 5 3\\n1 22 5 3 5\\n\") == \"1\"\nassert solution(\"6 5\\n1 23 6 3 5 3\\n1 23 5 3 5\\n\") == \"1\"\nassert solution(\"6 5\\n1 24 6 3 5 3\\n1 24 5 3 5\\n\") == \"1\"\nassert solution(\"6 5\\n1 25 6 3 5 3\\n1 25 5 3 5\\n\") == \"1\"\nassert solution(\"6 5"
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1 10\\n0 1 1 2 6\") == \"3\"\n"
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    2 1 10\n    0 1 1 2 6\n    \"\"\"\n) == 3"
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"3\\n\"\n"
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('0 1 1 2 6') == '3'\n"
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1 10\\n0 1 1 2 6\") == \"3\""
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1 10\\n0 1 1 2 6\") == \"3\"\nassert solution(\"2 1 10\\n0 1 1 2 6\\n0 2 2 3 4\") == \"impossible\""
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"3\\n\", \"Test case failed\""
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"3\\n\""
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1 10\\n0 1 1 2 6\") == \"3\"\nassert solution(\"3 1 10\\n0 1 1 2 6\") == \"impossible\"\nassert solution(\"5 1 10\\n0 1 1 2 6\") == \"impossible\"\n"
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"3\""
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '2\\n1 2'\n"
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 100\\n99 1\\n1 99\") == \"2\\n1 2\""
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 100\\n99 1\\n1 99\") == \"2\\n1 2\""
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 100\\n99 1\\n1 99\") == \"2\\n1 2\\n\""
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '''2\n1 2'''"
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '2\\n1 2'\n"
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2\\n1 2\""
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 100\\n99 1\\n1 99\") == \"2\\n1 2\"\n\nfrom typing import List"
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''2 100\n99 1\n1 99''') == '2\\n1 2'\n"
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 100\\n99 1\\n1 99\") == \"2\\n1 2\"\nassert solution(\"2 100\\n1 100\\n1 99\") == \"2\\n1 2\\n1 3\"\nassert solution(\"2 100\\n2 100\\n1 99\") == \"2\\n1 2\\n1 3\"\nassert solution(\"2 100\\n1 500\\n1 99\") == \"2\\n1 2\\n1 3\"\nassert solution(\"2 100\\n2 100\\n2 100\\n1 99\") == \"2\\n1 2\\n1 3\\n1 4\"\nassert solution(\"2 100\\n2 100\\n2 100\\n2 100\\n1 99\") == \"2\\n1 2\\n1 3\\n1 4\\n1 5\"\nassert solution(\"2 100\\n2 100\\n2 100\\n2 100\\n2 100\\n1 99\") == \"2\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\"\nassert solution(\"2 100\\n2 100\\n2 100\\n2 100\\n2 100\\n2 100\\n1 99\") == \"2\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\"\nassert solution(\"2 100\\n2 100\\n2 100\\n2 100\\n2 100\\n2 100\\n2 100\\n1 99\") == \"2\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\"\nassert solution(\"2 100\\n2 100\\n2 100\\n2 100\\n2 100\\n2 100\\n2 100\\n2 100\\n1 99\") == \"2\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\"\nassert solution(\"2 100\\n2 100\\n2 100\\n2 100\\n2 100\\n2 100\\n2 100\\n2 100\\n2 100\\n1 99\") == \"2\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\""
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"H\\nT\\n0.5\") == \"0.5\"\nassert solution(\"AT\\nAT\\n0.5\") == \"0.5\"\nassert solution(\"AT\\nTH\\n0.5\") == \"0.0017\"\n\nimport math"
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('H\\nT\\n0.5') == '0.5', \"The correct output is 0.5, but got: {}\".format(solution('H\\nT\\n0.5'))"
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"H\\nT\\n0.5\") == \"0.5\"\n\nfrom functools import lru_cache\nfrom math import log2\n\n@lru_cache(maxsize=None)\n"
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('H\\nT\\n0.5') == '0.5', \"The output is not as expected.\""
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('H\\nT\\n0.5') == '0.5'\nassert solution('X\\nT\\n0.5') == '0.5'\nassert solution('H\\nX\\n0.5') == '0.5'\nassert solution('H\\nH\\n0.5') == '0.5'\nassert solution('H\\nH\\n0.75') == '0.5'"
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"H\\nT\\n0.5\\n\") == \"0.5\\n\", \"Test case 1 failed\""
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('H\\nT\\n0.5') == '0.5'\nassert solution('AT\\nK\\n0.25') == '0.2'\nassert solution('H\\nT\\n0.75') == '0.6'\nassert solution('H\\nT\\n0.5') == '0.5'\nassert solution('AT\\nK\\n0.25') == '0.2'\nassert solution('H\\nT\\n0.75') == '0.6'\nassert solution('H\\nT\\n0.5') == '0.5'\n"
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('H\\nT\\n0.5') == '0.5'\nprint('All tests passed')"
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"H\\nT\\n0.5\") == 0.5, \"The output should be 0.5.\"\nassert solution(\"HH\\nTT\\n0.5\") == 0.5, \"The output should be 0.5.\"\nassert solution(\"HT\\nHH\\n0.5\") == 0.5, \"The output should be 0.5.\"\nassert solution(\"HT\\nTH\\n0.5\") == 0.7, \"The output should be 0.7.\"\nassert solution(\"HTH\\nTHT\\n0.5\") == 0.5, \"The output should be 0.5.\"\nassert solution(\"HTH\\nTHT\\n0.8\") == 0.5, \"The output should be 0.5.\""
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"H\\nT\\n0.5\") == \"0.5\\n\""
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"8\\n1 3 5 7 9 11 13 15\"\nassert solution(4) == \"6\\n1 2 3 4 5 6 7 8\""
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == '''8\n1 3 5 7 9 11 13 15'''"
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"8\\n1 3 5 7 9 11 13 15\"\nassert solution(\"6\") == \"1\\n2 4 6 8 10 12 14 16\"\nassert solution(\"10\") == \"2\\n3 5 7 9 11 13 15 17 19\""
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"8\\n1 3 5 7 9 11 13 15\""
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"8\\n1 3 5 7 9 11 13 15\"\nassert solution(4) == \"8\\n1 2 3 4 5 6 7 8\"\nassert solution(5) == \"8\\n1 2 3 4 5 6 7 8\"\nassert solution(6) == \"8\\n1 2 3 4 5 6 7 8\"\nassert solution(7) == \"8\\n1 2 3 4 5 6 7 8\"\nassert solution(8) == \"8\\n1 2 3 4 5 6 7 8\"\n"
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(6) == \"8\\n1 3 5 7 9 11 13 15\""
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"8\\n1 3 5 7 9 11 13 15\"\nassert solution(6) == \"8\\n1 3 5 7 9 11 13 15\"\nassert solution(10) == \"8\\n1 3 5 7 9 11 13 15\"\nassert solution(12) == \"8\\n1 3 5 7 9 11 13 15\""
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"8\"\nassert solution(4) == \"1 3 5 7\"\nassert solution(6) == \"1 2 3 4 5 6\"\nassert solution(8) == \"1 2 3 4 5 6 7 8\"\nassert solution(9) == \"1 2 3 4 5 6 7 8 9\"\n"
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == '8\\n1 3 5 7 9 11 13 15'\n"
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"8\\n1 3 5 7 9 11 13 15\"\nassert solution(6) == \"8\\n1 3 5 7 9 11 13 15\""
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\") == [\"3\", \"1\", \"0\"]\nassert solution(\"4\\n1 2 3 4\\n2\\n5 6 7 8\") == [\"5\", \"6\", \"7\", \"8\"]\n"
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    '''\n    input: 4\n    output: 3\n    '''\n) == '3\\n'\n\nassert solution(\n    '''\n    input: 1\n    3\n    1\n    5\n    output: 3\n    '''\n) == '3\\n'\n\nassert solution(\n    '''\n    input: 3\n    2\n    2\n    5\n    output: 1\n    '''\n) == '1\\n'\n\nassert solution(\n    '''\n    input: 3\n    1\n    5\n    2\n    output: 0\n    '''\n) == '0\\n'"
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output"
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == '3'\nassert solution(7) == '0'"
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\") == \"3\\n1\\n0\\ndef solution(stdin: str) -> str:\\npass\\n\""
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"xorbonacci.input\", \"r\").read()) == \"3\\n1\\n0\""
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5') == '3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\\n'\n\nassert solution('5\\n1 2 3 4 5\\n2\\n2 4\\n3 3') == '3\\n2\\n1\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\\n'"
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r')) == '3\\n1\\n0'"
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == 3\nassert solution(2) == 1\nassert solution(3) == 0"
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r').read()) == '0\\n'"
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin='3 1\\n1 1 -2 0\\n2 1 -3 0\\n1 1 -2 0\\n1 1 -2 0\\n') == '0'\nassert solution(stdin='3 2\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n') == '0'\nassert solution(stdin='3 3\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n') == '0'\nassert solution(stdin='3 4\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n') == '0'\nassert solution(stdin='3 5\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n') == '0'\nassert solution(stdin='3 6\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n') == '0'\nassert solution(stdin='3 7\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n') == '0'\nassert solution(stdin='3 8\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n') == '0'\nassert solution(stdin='3 9\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 "
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 0\nprint(\"All tests passed successfully!\")"
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 1 -2 0') == '0', \"Output should be '0', not 'None'.\""
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1 -2 0\") == \"0\\n\""
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 1\\n1 1 -2 0') == '0\\n'\nassert solution('3 2\\n1 1 -2 0\\n2 1 3 0') == '0\\n2\\n'\nassert solution('4 3\\n1 1 -2 0\\n2 1 3 0\\n3 1 3 0') == '0\\n3\\n3\\n'\nassert solution('5 4\\n1 1 -2 0\\n2 1 3 0\\n3 1 3 0\\n4 1 3 0') == '0\\n3\\n3\\n3\\n4\\n'\nassert solution('6 5\\n1 1 -2 0\\n2 1 3 0\\n3 1 3 0\\n4 1 3 0\\n5 1 3 0') == '0\\n3\\n3\\n3\\n3\\n4\\n3\\n'\nassert solution('7 6\\n1 1 -2 0\\n2 1 3 0\\n3 1 3 0\\n4 1 3 0\\n5 1 3 0\\n6 1 3 0') == '0\\n3\\n3\\n3\\n3\\n3\\n4\\n4\\n'\nassert solution('8 7\\n1 1 -2 0\\n2 1 3 0\\n3 1 3 0\\n4 1 3 0\\n5 1 3 0\\n6 1 3 0\\n7 1 3 0') == '0\\n3\\n3\\n3\\n3\\n3\\n3\\n4\\n4\\n4\\n'\nassert solution('9 8\\n1 1 -2 0\\n2 1 3 0\\n3 1 3 0\\n4 1 3 0\\n5 1 3 0\\n6 1 3 0\\n7 1 3 0\\n8 1 3 0') == '0\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n4\\n4\\n4\\n4\\n'\nassert solution('10 9\\n1 1 -2 0\\n2 1 3 0\\n3 1 3 0\\n4 1 3 0\\n5 1 3 0\\n6 1 3 0\\n7 1 3 0\\n8 1 3 0\\n9 1 3 0') == '0\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n4\\n4\\n4\\n4\\n4\\n'"
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"0\\n\""
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"0\\n\", solution(stdin)"
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"0\""
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1\\n1 1 -2 0\\n\") == 0, \"Incorrect output\"\nassert solution(\"2 2\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n\") == 3, \"Incorrect output\"\nassert solution(\"2 3\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n3 1\\n1 1 -2 0\\n\") == 6, \"Incorrect output\"\nassert solution(\"3 2\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n3 1\\n1 1 -2 0\\n4 1\\n1 1 -2 0\\n\") == 9, \"Incorrect output\"\nassert solution(\"2 4\\n1 1 -2 0\\n2 1\\n1 1 -2 0\\n3 1\\n1 1 -2 0\\n4 1\\n1 1 -2 0\\n5 1\\n1 1 -2 0\\n\") == 12, \"Incorrect output\""
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\"\n) == \"194\\n2019 10 25\\n2020 10 30\"\n"
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\") == \"194\\n2019 10 25\\n2020 10 30\\n\"\nassert solution(\"5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\") == \"194\\n2019 10 25\\n2020 10 30\\n\""
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\\n\") == \"194\\n2019 10 25\\n2020 10 30\""
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23') == '194\\n2019 10 25\\n2020 10 30\\n'\nassert solution('5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23') == '194\\n2019 10 25\\n2020 10 30\\n'\nassert solution('2\\n2\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23') == '309\\n2019 10 22\\n2020 10 28\\n'\nassert solution('2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23') == '194\\n2019 10 25\\n2020 10 30\\n'"
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_data) == output_data, f\"The solution is incorrect. Please see the examples provided and modify the code to pass the tests.\""
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\\n\") == \"194\\n2019 10 25\\n2020 10 30\"\nassert solution(\"2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\\n\") == \"194\\n2019 10 25\\n2020 10 30\"\nassert solution(\"2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\\n\") == \"194\\n2019 10 25\\n2020 10 30\"\nassert solution(\"2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\\n\") == \"194\\n2019 10 25\\n2020 10 30\"\nassert solution(\"2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\\n\") == \"194\\n2019 10 25\\n2020 10 30\"\nassert solution(\"2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\\n\") == \"194\\n2019 10 25\\n2020 10 30\"\nassert solution(\"2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\\n\") == \"194\\n2019 10 25\\n2020 10 30\"\nassert solution(\"2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\\n\") == \"194\\n2019 10 25\\n2020 10 30\"\nassert solution(\"2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\\n\") == \"194\\n2019 10 25\\n2020 10 30\"\nassert solution(\"2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\\n\") == \"194\\n2019 10 25\\n2020 10 30\"\nassert solution(\"2\\n5\\n2019 10"
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\") == \"194\\n2019 10 25\\n2020 10 30\""
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for the given input: {input()}!= {expected_output}\""
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    2\n    5\n    2019 10 18\n    2019 10 19\n    2020 10 02\n    2020 10 16\n    2020 10 23\n    \"\"\"\n) == \"194\\n2019 10 25\\n2020 10 30\"\n\nassert solution(\n    \"\"\"\n    3\n    5\n    2019 10 18\n    2019 10 19\n    2020 10 02\n    2020 10 16\n    2020 10 23\n    \"\"\"\n) == \"178\"\n\nassert solution(\n    \"\"\"\n    4\n    5\n    2019 10 18\n    2019 10 19\n    2020 10 02\n    2020 10 16\n    2020 10 23\n    \"\"\"\n) == \"160\""
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\") == \"194\\n2019 10 25\\n2020 10 30\""
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 10 10 10 10 0\\n5 10 10 5 10 0\\n6 10 10 10 10 0\") == \"negative-infinity 0\\n5 12.5\\nnegative-infinity -5\""
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Output should be: {output}\\nOutput is: {solution(input())}\""
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 10 10 10 10 0\\n5 10 10 5 10 0\\n6 10 10 10 10 0\") == \"negative-infinity 0\\n5 12.5\\nnegative-infinity -5\"\nassert solution(\"5 10 10 10 10 0\\n5 10 10 5 10 0\\n6 10 10 10 10 0\") == \"negative-infinity 0\\n5 12.5\\nnegative-infinity -5\""
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 10 10 10 10 0\\n5 10 10 5 10 0\\n6 10 10 10 10 0\") == \"negative-infinity 0\\n5 12.5\\nnegative-infinity -5\""
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input) == expected, f\"Test {i+1} failed\"\nfor i in range(1500):\n    input_list = list(map(float, input().split()))\n    x1, y1, x2, y2, x3, y3 = input_list\n    output_list = solution(input_list)\n    print(f\"Test {i+1}: {output_list}\")"
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 10 10 10 10 0\\n5 10 10 5 10 0\\n6 10 10 10 10 0\") == \"negative-infinity 0\\n5 12.5\\nnegative-infinity -5\""
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"Test failed: expected '{expected}', got '{solution(input())}'\""
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(r\"\"\"\n    5 10 10 10 10 0\n    5 10 10 5 10 0\n    6 10 10 10 10 0\n\"\"\") == \"\"\"\nnegative-infinity 0\n5 12.5\nnegative-infinity -5\n\"\"\""
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    5 10 10 10 10 0\n    5 10 10 5 10 0\n    6 10 10 10 10 0\n    \"\"\"\n) == \"\"\"\n-inf 0\n5 12.5\n-inf -5\n\"\"\"\n"
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 10 10 10 10 0\\n5 10 10 5 10 0\\n6 10 10 10 10 0') == 'negative-infinity 0\\n5 12.5\\nnegative-infinity -5'"
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 2\n"
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '2\\n'"
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\\n') == '2'\n"
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\") == \"2\"\nassert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\\n4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2\\n\"\nassert solution(input()) == \"IMPOSSIBLE\\n\""
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\") == \"2\""
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000') == '2\\n2'\nassert solution('2 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000') == 'IMPOSSIBLE\\nIMPOSSIBLE'"
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\\n\") == \"2\\n\"\nassert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\\n5\\n10000\\n20000\\n30000\\n40000\\n\") == \"IMPOSSIBLE\\n\"\nassert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\\n5\\n20000\\n30000\\n40000\\n\") == \"IMPOSSIBLE\\n\"\nassert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\\n5\\n10000\\n20000\\n30000\\n40000\\n5\\n10000\\n20000\\n30000\\n40000\\n\") == \"IMPOSSIBLE\\n\"\nassert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\\n5\\n20000\\n30000\\n40000\\n5\\n10000\\n20000\\n30000\\n40000\\n\") == \"IMPOSSIBLE\\n\"\nassert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\\n5\\n10000\\n20000\\n30000\\n40000\\n5\\n10000\\n20000\\n30000\\n40000\\n5\\n10000\\n20000\\n30000\\n40000\\n5\\n10000\\n20000\\n30000\\n40000\\n5\\n10000\\n20000\\n30000\\n40000\\n\") == \"IMPOSSIBLE\\n\"\nassert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\\n5\\n10000\\n20000\\n30000\\n40000\\n5\\n10000\\n20000\\n30000\\n40000\\n5\\n10000\\n20000\\n30000\\n40"
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''4 4\n100 30000\n200 20000\n300 10000\n400 0\n50 10000\n75 20000\n400 -40000''') == '2\\n'"
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\") == \"345 2\\nrotS 2 1\\nnegR 2\\n\""
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100') == '345 2\\nrotS 2 1\\nnegR 2\\n'\nassert solution('5 3\\n2 -1 6 200\\n-8 0 -4 -10\\n11 4 0 100') == '1250 2\\nrotS 1 1\\nnegR 2\\n'"
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\") == \"345 2\\nrotS 2 1\\nnegR 2\"\n"
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\") == \"345 2\\nrotS 2 1\\nnegR 2\""
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100') == '345 2\\nrotS 2 1\\nnegR 2'"
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\") == \"345 2\\nrotS 2 1\\nnegR 2\"\nassert solution(\"6 5\\n-2 0 3 -1\\n0 5 2 10\\n-5 8 0 5\") == \"125 -1\\nnegS 1\\nrotR 5 1\"\n"
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\") == \"345 2\\nrotS 2 1\\nnegR 2\""
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\") == \"345 2\\nrotS 2 1\\nnegR 2\"\nassert solution(\"5 2\\n3 -2 10 50\\n-5 5 3 70\\n12 0 5 100\") == \"1000 2\\nrotR 1 2\"\nassert solution(\"10 5\\n1 0 5 20\\n5 2 3 15\\n0 1 0 100\") == \"1000 3\\nrotR 1 3\\nnegS 2\\nnegS 3\\nnegS 4\""
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\") == \"345 2\\nrotS 2 1\\nnegR 2\""
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == 0.5, \"Expected output 0.5, but got: {}\".format(solution(input()))"
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"0.5\""
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Output: {solution(input())}, Expected Output: {output()}\""
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"0.5\"\n"
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Test failed. Solution: {solution(input())}, Output: {output}\""
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"0.5\"\n"
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\\n3 1 1\") == \"0.5\\n\"\nassert solution(\"100 10\") == \"2.7433333333333334\\n\"\nassert solution(\"2 2\") == \"0.0\\n\"\nassert solution(\"5 3\") == \"0.0\\n\"\nassert solution(\"1 1 1\") == \"1.0\\n\""
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"0.5\", \"Your code is incorrect. Please see the sample input and output.\""
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 0.5, \"The output should be 0.5, but it is currently {}\".format(solution())"
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"0.5\\n\"\nassert solution(stdin) == \"0.5\\n\""
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\") == \"1 4 5\\n2 6 7\"\nassert solution(\"9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\") == \"impossible\"\n"
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"1 4 5\\n2 6 7\"\n"
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Jon Dayne is the ruler of a huge country called Seven Kingdoms. He has two sisters, Arya and Sansa, and wants to give some cities of Seven Kingdoms to them. He will rule the remaining cities or if no city remains, goes to the Wall, a colossal fortification along the northern border of the Seven Kingdoms, to be the Lord commander. Arya is the Lady of Winterfell and Sansa is the Lady of King\u2019s Landing. The cities in Seven Kingdoms (including Winterfell and King\u2019s Landing) are connected to each other with a network of roads (although some cities may be disconnected from the other cities, because they are either located on an island or they are currently at war with these other cities). There is no direct road between Winterfell and King\u2019s Landing and they do not share a common neighbour city. \\n\\nArya is the first city in the collection assigned to Arya. Sansa is the second city in the collection assigned to Sansa. Jon needs your help to determine whether this is possible and if this is possible, you should tell him the cities in each collection.\") == \"1 4 5\\n2 6 7\""
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\") == \"1 4 5\\n2 6 7\\nimpossible\\n\"\nassert solution(\"9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\\n9 8\\n\") == \"1 4 5\\n2 6 7\\nimpossible\\n\"\nassert solution(\"9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\\n9 8\\n6 8\\n5 9\\n\") == \"1 4 5\\n2 6 7\\nimpossible\\n\"\nassert solution(\"9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\\n9 8\\n6 8\\n5 9\\n6 9\\n\") == \"1 4 5\\n2 6 7\\nimpossible\\n\"\nassert solution(\"9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\\n9 8\\n6 8\\n5 9\\n6 9\\n6 9\\n\") == \"1 4 5\\n2 6 7\\nimpossible\\n\"\nassert solution(\"9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\\n9 8\\n6 8\\n5 9\\n6 9\\n6 9\\n6 9\\n\") == \"impossible\\n\""
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\") == \"1 4 5\\n2 6 7\""
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\").read()) == \"impossible\\n1 4 5\\n2 6 7\"\n"
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n9 11\n1 4\n5 4\n1 5\n6 2\n6 7\n7 2\n3 8\n3 9\n8 9\n6 8\n5 9\n''') == \"1 4 5\\n2 6 7\""
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9') == '1 4 5\\n2 6 7'\nassert solution('10 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9') == 'impossible'\nassert solution('1 2\\n1 3\\n2 3\\n2 4\\n3 4\\n3 5\\n4 5\\n4 6\\n5 6\\n5 7\\n6 7') == 'impossible'\nassert solution('10 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9') == 'impossible'\nassert solution('1 2\\n1 3\\n2 3\\n2 4\\n3 4\\n3 5\\n4 5\\n4 6\\n5 6\\n5 7\\n6 7') == 'impossible'"
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"1 4 5\\n2 6 7\", \"Test case failed\""
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\") == \"1 4 5\\n2 6 7\\n\"\nassert solution(\"9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\") == \"1 4 5\\n2 6 7\\n\"\nassert solution(\"9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\") == \"1 4 5\\n2 6 7\\n\"\nassert solution(\"9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\") == \"1 4 5\\n2 6 7\\n\"\nassert solution(\"9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\") == \"1 4 5\\n2 6 7\\n\""
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n\") == 13500, \"Invalid output\"\nassert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n\") == 13500, \"Invalid output\""
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\") == \"13500\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"13500\"\n"
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n\") == \"13500\""
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\") == \"13500\"\nassert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n12000\\n12000\") == \"13500\"\nassert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n12000\\n12000\\n9000\\n12000\\n12000\\n9000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n12000\\n"
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Test cases failed.\"\n\nfrom typing import List"
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"13500\""
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n\") == \"13500\"\nassert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n1\\n\") == \"0\"\nassert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n2\\n\") == \"13500\"\nassert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n3\\n\") == \"13500\"\nassert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n4\\n\") == \"13500\""
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n') == 13500\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n\") == \"13500\\n\""
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\\n\") == \"Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_=\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=Hot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_______________________________\\n\""
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\\n\") == \"Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_________\\n\""
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\\n\") == \"Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_=\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_data) == output_data, f\"The output is not the same as expected. Input: {input_data}, Output: {output_data}\""
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == solution(sample_output)"
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4') == 'Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_=\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\\n'\n\nassert solution('2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\\nTwo b a pen- ny, Three b a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\\nFour c a pen- ny, Five c a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\\nSix d a pen- ny, Eight d a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\\nTwo e a pen- ny, Three e a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\\nFour f a pen- ny, Five f a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\\nSix g a pen- ny, Eight g a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\\nTwo h a pen- ny, Three h a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\\nFour i a pen- ny, Five i a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\\nSix j a pen- ny, Eight j a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\\nTwo k a pen- ny, Three k a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\\nFour l a pen- ny, Five l a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\\nSix m a pen- ny, Eight m a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\\nTwo n a pen- ny, Three n a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\\nFour o a pen- ny, Five o a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\\nSix p a pen- ny, Eight p a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\\nTwo q a pen- ny, Three q a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\\nFour r a pen- ny,"
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\\n\") == \"Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_=One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=Hot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,________Two_a_pen-_ny,_Hot___cross____buns!_\\n\"\n"
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 16\\nHot cross buns!\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns!\\n2 2 2 2 2 2 2 2 4 4 4 4\") == \"Hot_cross_buns!_=___Hot_cross_buns!_\\n____________________Hot_cross_buns!_\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,______________________One_a_pen-_ny,_Two_a_pen-_ny\""
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r')) == 'Hot_cross_buns!_=___Hot_cross_buns!_=One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=Hot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,def solution(stdin: str) -> str:\\n\\tpass\\n\\nprint(solution(open('input.txt', 'r')))"
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\") == \"33\"\nassert solution(\"4 5 6\\n7 8 9\\n10 11 12\\n13 14 15\\n16 17 18\\n19 20 21\") == \"216\""
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 33, \"Test case 1 failed\"\n\nfrom typing import List"
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\") == \"33\""
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\\n\") == 33, \"The solution is not correct.\""
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\\n) == 33\\n\"Solution is correct\""
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\") == \"33\""
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\") == 33\nprint(\"All tests pass!\")"
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\") == 33\n"
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == expected\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n    3\n    20 15 10\n    7 7\n    30 0\n''') == '405'"
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3, 20, 15, 10, 7, 7, 30, 0) == 405, \"Expected 405, but got {}.\".format(solution(3, 20, 15, 10, 7, 7, 30, 0))"
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n20 15 10\\n7 7\\n30 0') == '405'"
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"405\""
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"405\", \"The output should be 405, but it is: \" + solution(stdin)\n"
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '405', 'The given code is incorrect.'"
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n20 15 10\\n7 7\\n30 0\\n\") == \"405\""
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n20 15 10\\n7 7\\n30 0') == '405'\nassert solution('3\\n1 2\\n3 4\\n5 6') == '7'\nassert solution('3\\n1 2\\n3 4\\n5 6\\n8 9\\n10 12') == '7'\nassert solution('3\\n1 2\\n3 4\\n5 6\\n8 9\\n10 12\\n15 16\\n18 20') == '7'\nassert solution('3\\n2 3\\n4 5\\n6 7\\n8 9\\n10 11') == '15'\nassert solution('3\\n1 2\\n3 4\\n5 6\\n8 9\\n10 12\\n15 16\\n18 20\\n24 25\\n28 29\\n30 30') == '15'"
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Test failed: {solution(input())}!= {output}\""
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n20 15 10\\n7 7\\n30 0\") == 405\n"
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2 4 7\") == \"28 4 21 14.0\\n\"\n"
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 4 7\\n\") == \"28 4 21 14.0\""
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == sample_output, f\"Expected output: {sample_output}, got: {solution(sample_input)}\""
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n1 2 4 7') == '28 4 21 14.0\\n'\n"
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 2 4 7\") == \"28 4 21 14.0\\n\"\n"
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n1 2 4 7\\n') == '28 4 21 14.0'\n"
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 2 4 7\") == \"28 4 21 14.0\""
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(b'\\n\\n') == '28\\n4\\n21\\n14.0\\n'\nassert solution(b'\\n\\n\\n\\n') == '28\\n4\\n21\\n14.0\\n'\nassert solution(b'\\n\\n\\n\\n\\n') == '28\\n4\\n21\\n14.0\\n'\nassert solution(b'\\n\\n\\n\\n\\n\\n\\n\\n') == '28\\n4\\n21\\n14.0\\n'\nassert solution(b'\\n\\n\\n\\n\\n\\n\\n\\n\\n') == '28\\n4\\n21\\n14.0\\n'\nassert solution(b'\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n"
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 2\\n1 2 3 4\\n2 3 4 1') == 'yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3'\nassert solution('1 2\\n3 4\\n5 6') == 'no'\n"
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\"\nassert solution(\"5 5\\n1 2 3 4\\n2 3 4 5\\n3 4 5 1\\n4 5 1 2\\n5 1 2 3\\n6 2 3 4\\n7 3 4 5\\n8 4 5 1\\n9 5 1 2\") == \"yes\\n1 2 3 4\\n2 3 4 5\\n3 4 5 1\\n4 5 1 2\\n5 1 2 3\\n6 2 3 4\\n7 3 4 5\\n8 4 5 1\\n9 5 1 2\"\nassert solution(\"10 10\\n1 2 3 4 5 6 7 8 9\\n2 3 4 5 6 7 8 9 1\\n3 4 5 6 7 8 9 1 2\\n4 5 6 7 8 9 1 2 3\\n5 6 7 8 9 1 2 3 4\\n6 7 8 9 1 2 3 4 5\\n7 8 9 1 2 3 4 5 6\\n8 9 1 2 3 4 5 6 7\\n9 1 2 3 4 5 6 7 8\") == \"yes\\n1 2 3 4 5 6 7 8 9\\n2 3 4 5 6 7 8 9 1\\n3 4 5 6 7 8 9 1 2\\n4 5 6 7 8 9 1 2 3\\n5 6 7 8 9 1 2 3 4\\n6 7 8 9 1 2 3 4 5\\n7 8 9 1 2 3 4 5 6\\n8 9 1 2 3 4 5 6 7\\n9 1 2 3 4 5 6 7 8\""
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4 \\n2 3 4 1 \\n3 4 1 2 \\n4 1 2 3\"\nassert solution(\"3 3\\n1 2 3\\n4 5 6\\n7 8 9\") == \"no\"\nassert solution(\"5 4\\n1 2 3 4 5\\n6 7 8 9 10\\n11 12 13 14 15\") == \"no\"\nassert solution(\"2 2\\n1 2\\n3 4\\n6 8\") == \"no\"\n"
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\\n\", \"Incorrect output\""
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\", \"Test case 1\""
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\"\nassert solution(\"4 3\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\"\nassert solution(\"5 3\\n1 2 3 4\\n2 3 4 1\") == \"no\"\n"
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\""
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\"\nassert solution(input()) == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\"\nassert solution(input()) == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\"\nassert solution(input()) == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\"\nassert solution(input()) == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\"\nassert solution(input()) == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\"\nassert solution(input()) == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\"\nassert solution(input()) == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\"\nassert solution(input()) == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\"\nassert solution(input()) == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\"\nassert solution(input()) == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\"\nassert solution(input()) == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\"\nassert solution(input()) == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\"\nassert solution(input()) == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\"\nassert solution(input()) == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\"\nassert solution(input()) == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\"\nassert solution(input()) == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\"\nassert solution(input()) == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\"\nassert solution(input()) == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\"\nassert solution(input()) == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\"\nassert solution(input()) == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\"\nassert solution(input()) == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\"\nassert solution(input()) == \"yes\\n1 2 "
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 5\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"5 4\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"3 3\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"2 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"3 4\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 3\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 4\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"5 5\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"3 5\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 6\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 7\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"5 6\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"5 7\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"6 5\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"6 6\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"7 5\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"7 6\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"8 6\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"8 7\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"9 7\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"9 8\\n1 2 3 4\\n2"
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\""
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n10 10 -10 -4 10') == '10.000000000'"
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n10 10 -10 -4 10') == '10.000000000'\n"
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n10 10 -10 -4 10\") == \"10.0\\n\""
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n10 10 -10 -4 10\") == \"10.000000000\\n\"\n"
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"10.000000000\\n\""
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n10 10 -10 -4 10') == '10.000000000'\nprint(\"All tests passed\")"
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n10 10 -10 -4 10') == '10.000000000'\n"
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n10 10 -10 -4 10\\n\") == \"10.000000000\\n\""
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == \"10.000000000\\n\", \"Your code is incorrect. Please check your solution.\""
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n10 10 -10 -4 10') == '10.000000000'"
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 1"
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1\" # expected output: 1\n"
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '1\\n', \"Incorrect output. Please check the example inputs and constraints.\""
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n30\\n3\\n2\\n45\\n') == 1\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n30\\n3\\n2\\n45\") == \"1\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\") == \"5\\n\"\nassert solution(\"1\\n2\\n3\\n5\\n4\\n1\") == \"2\\n\"\nassert solution(\"1\\n2\\n3\\n1\\n3\\n2\") == \"0\\n\"\nassert solution(\"4\\n30\\n2\\n1\\n45\") == \"4\\n\""
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"1\""
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 1\nassert solution(10) == 2\nassert solution(100) == 3\nassert solution(1000) == 4\nassert solution(10000) == 5"
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1\"\n"
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Input '{input()}' does not match expected output '{expected_output}'.\""
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n30\\n3\\n2\\n45\\n\") == \"1\"\nassert solution(\"5\\n20\\n3\\n2\\n35\\n\") == \"2\"\nassert solution(\"3\\n20\\n3\\n2\\n35\\n\") == \"2\"\nassert solution(\"3\\n30\\n3\\n2\\n45\\n\") == \"1\"\nassert solution(\"4\\n100\\n1\\n2\\n4\\n\") == \"1\"\nassert solution(\"5\\n100\\n1\\n2\\n4\\n\") == \"1\"\nassert solution(\"4\\n1000000000\\n1\\n2\\n4\\n\") == \"2\"\nassert solution(\"5\\n1000000000\\n1\\n2\\n4\\n\") == \"2\""
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n\"\"\") == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\n'"
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n\") == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\""
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\") == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\"\nassert solution(\"5 5 5 0.5\\n3 5 7\") == \"0.000000000 0.000000000\"\nassert solution(\"5 5 5 0.5\\n3 5 7\\n2 5 1\") == \"0.000000000 0.000000000\"\nassert solution(\"5 5 5 0.5\\n3 5 7\\n2 5 1\\n1 5 3\") == \"0.000000000 0.000000000\"\nassert solution(\"5 5 5 0.5\\n3 5 7\\n2 5 1\\n1 5 3\\n4 4 5\") == \"0.000000000 0.000000000\"\nassert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n1 5 7\\n3 5 3\\n4 6 1\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\") == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\"\nassert solution(\"5 5 5 0.5\\n3 5 7\\n2 5 1\\n1 5 3\\n4 4 5\") == \"0.000000000 0.000000000\"\nassert solution(\"5 5 5 0.5\\n3 5 7\\n2 5 1\\n1 5 3\\n4 4 5\\n1 5 7\\n3 5 3\\n2 5 1\\n1 5 7\\n3 5 3\") == \"0.000000000 0.000000000\"\nassert solution(\"5 5 5 0.5\\n3 5 7\\n2 5 1\\n1 5 3\\n4 4 5\\n1 5 7\\n3 5 3\\n2 5 1\\n1 5 7\\n3 5 3\\n1 5 7\\n3 5 3\") == \"0.000000000 0.0000"
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n''') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\\n'"
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    6 6 3.0 0.66\n    2 4 8\n    4 6 1\n    3 6 1\n    4 5 5\n    1 5 7\n    3 5 3\n    \"\"\"\n) == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\"\n\nassert solution(\n    \"\"\"\n    6 6 3.0 0.66\n    2 4 8\n    4 6 1\n    3 6 1\n    4 5 5\n    1 5 7\n    3 5 3\n    4 4 1\n    3 4 2\n    2 4 4\n    1 4 5\n    \"\"\"\n) == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\"\n\nassert solution(\n    \"\"\"\n    5 5 3.0 0.66\n    2 4 8\n    4 6 1\n    3 6 1\n    4 5 5\n    1 5 7\n    3 5 3\n    4 4 1\n    3 4 2\n    2 4 4\n    1 4 5\n    1 4 4\n    \"\"\"\n) == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\"\n\nassert solution(\n    \"\"\"\n    6 6 3.0 0.66\n    2 4 8\n    4 6 1\n    3 6 1\n    4 5 5\n    1 5 7\n    3 5 3\n    4 4 1\n    3 4 2\n    2 4 4\n    1 4 5\n    3 4 3\n    \"\"\"\n) == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\"\n\nassert solution(\n    \"\"\"\n    6 6 3.0 0.66\n    2 4 8\n    4 6 1\n    3 6"
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\""
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(None) == \"Error: Invalid input\""
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\") == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\\n\""
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\""
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\"\"\") == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\"\"\")"
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 4"
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, \"The solution is not correct. Please check your code and input.\""
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == 'Output: 4\\n' + 'def solution(stdin: str) -> str:\\n    pass\\n\\n'"
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\") == 4"
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"4\\n4\\n\""
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"4\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\\n\") == \"4\\n4\\n\""
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\") == \"4\""
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2') == '4'\n\nassert solution('0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\\n0 4\\n0 2\\n3 2\\n3 4') == '1'"
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2') == '4\\ndef solution(stdin: str) -> str:\n    pass'\n\nsolution = '''\nfrom collections import defaultdict"
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n4 0\n0 1\n0 2\n0 3\n''') == '''\n2\n3 2\n3 1\n'''\n\nassert solution('''\n4 1\n0 1\n1 2\n2 3\n''') == '''\n1\n3 1\n3 2\n'''\n\nassert solution('''\n4 2\n0 1\n1 2\n2 3\n''') == '''\n0\n1\n3 2\n3 1\n'''"
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 0\\n0 1\\n0 2\\n0 3\\n\") == \"2\\n3 2\\n3 1\\n\"\nassert solution(\"4 0\\n1 1\\n2 2\\n3 3\\n\") == \"2\\n2 1\\n3 3\\n\"\nassert solution(\"4 0\\n1 0\\n2 2\\n3 3\\n\") == \"2\\n3 1\\n3 2\\n\"\nassert solution(\"4 0\\n1 0\\n2 1\\n3 3\\n\") == \"2\\n3 2\\n3 1\\n\""
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 0\\n0 1\\n0 2\\n0 3\") == \"2\\n3 2\\n3 1\"\n"
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2\\n3 2\\n3 1\""
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 0\\n0 1\\n0 2\\n0 3\") == \"2\\n3 2\\n3 1\\n\"\n"
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n4 0\n0 1\n0 2\n0 3\n''') == '''\n2\n3 2\n3 1\n'''"
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n    4 0\n    0 1\n    0 2\n    0 3\n    ''') == '2\\n3 2\\n3 1\\n'\n\nassert solution('''\n    5 0\n    0 1\n    0 2\n    0 3\n    0 4\n    ''') == '5\\n1 3 2 4\\n'\n\nassert solution('''\n    5 0\n    0 1\n    0 2\n    0 3\n    0 4\n    ''') == '5\\n1 3 2 4\\n'"
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '2\\n3 2\\n3 1'"
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 0\\n0 1\\n0 2\\n0 3\\n\") == \"2\\n3 2\\n3 1\\n\""
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 0 0\\n0 1.5 0\\n\") == \"ok\"\nassert solution(\"0 1 0\\n0 0 2\\n\") == \"crash\""
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('0 0 0\\n0 1.5 0') == 'ok\\n'"
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    2\n    0 0 0\n    0 1.5 0\n    \"\"\"\n) == \"ok\"\n\nassert solution(\n    \"\"\"\n    2\n    0 0 1\n    0 1.5 0\n    \"\"\"\n) == \"crash\"\n\nassert solution(\n    \"\"\"\n    2\n    0 0 1\n    0 1.5 -0.5\n    \"\"\"\n) == \"crash\"\n\nassert solution(\n    \"\"\"\n    2\n    0 0 -1\n    0 1.5 0\n    \"\"\"\n) == \"crash\"\n\nassert solution(\n    \"\"\"\n    2\n    0 -1 1\n    0 1.5 0\n    \"\"\"\n) == \"crash\""
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 0 0\\n0 1.5 0\\n0 0.5 0\\n0 0 1.5\\n0 0 2.5\\n0 0 3.5\\n\") == \"ok\""
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"ok\""
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 0 0\\n0 1.5 0\\n\") == \"ok\""
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n0 0 0\\n0 1.5 0\") == \"ok\"\n"
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n0 0 0\\n0 1.5 0\") == \"ok\""
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 'ok'"
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == \"2\\nR 0\\nG 2\"\n\nfrom typing import List"
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"2\\nR 0\\nG 2\\n\"\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\\n5 6\") == \"5\\nR 0\\nG 1\\nR 1\\nG 3\\nR 2\\nG 4\\nR 3\\nG 4\\n\"\nassert solution(\"10 20\\n1 2\\n3 4\\n4 6\\n5 8\\n7 10\\n8 12\\n9 14\\n10 16\\n11 18\\n12 20\") == \"20\\nR 1\\nG 2\\nR 2\\nG 4\\nR 3\\nG 6\\nR 4\\nG 8\\nR 5\\nG 10\\nR 6\\nG 12\\nR 7\\nG 14\\nR 8\\nG 16\\nR 9\\nG 18\\nR 10\\nG 20\\n\"\n"
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4') == '2\\nR 0\\nG 2\\n', \"Testcase 1 failed.\"\n\nassert solution('5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4') == '2\\nR 0\\nG 2\\n', \"Testcase 2 failed.\"\n\nassert solution('5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4') == '2\\nR 0\\nG 2\\n', \"Testcase 3 failed.\"\n\nassert solution('5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4') == '2\\nR 0\\nG 2\\n', \"Testcase 4 failed.\"\n\nassert solution('5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4') == '2\\nR 0\\nG 2\\n', \"Testcase 5 failed.\"\n\nassert solution('5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4') == '2\\nR 0\\nG 2\\n', \"Testcase 6 failed.\"\n\nassert solution('5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4') == '2\\nR 0\\nG 2\\n', \"Testcase 7 failed.\"\n\nassert solution('5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4') == '2\\nR 0\\nG 2\\n', \"Testcase 8 failed.\"\n\nassert solution('5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4') == '2\\nR 0\\nG 2\\n', \"Testcase 9 failed.\"\n\nassert solution('5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4') == '2\\nR 0\\nG 2\\n', \"Testcase 10 failed.\"\n\nassert solution('5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4') == '2\\nR 0\\nG 2\\n', \"Testcase 11 failed.\"\n\nassert solution('5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4') == '2\\nR 0\\nG 2\\n', \"Testcase 12 failed.\"\n\nassert solution('5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4') == '2\\nR 0\\nG 2\\n', \"Testcase 13 failed.\"\n\nassert solution('5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4') == '2\\nR 0\\nG 2\\n', \"Testcase 14 failed.\"\n\nassert solution('5 4\\n0 1\\n"
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    5 4\n    0 1\n    0 3\n    1 2\n    2 4\n    0 2\n    0 4\n    2 3\n    2 4\n    \"\"\"\n) == \"2\\nR 0\\nG 2\"\n\nassert solution(\n    \"\"\"\n    7 3\n    0 1\n    0 2\n    0 3\n    1 2\n    2 3\n    3 4\n    4 0\n    4 1\n    5 2\n    6 3\n    \"\"\"\n) == \"2\\nR 0\\nG 2\"\n\nassert solution(\n    \"\"\"\n    20 25\n    0 1\n    0 2\n    0 3\n    0 4\n    1 2\n    1 3\n    1 4\n    2 3\n    2 4\n    3 4\n    4 5\n    5 6\n    6 7\n    7 8\n    8 9\n    9 10\n    10 11\n    11 12\n    12 13\n    13 14\n    14 15\n    15 16\n    16 17\n    17 18\n    18 19\n    19 20\n    \"\"\"\n) == \"2\\nR 0\\nG 2\"\n\nassert solution(\n    \"\"\"\n    100 100\n    \"\"\"\n) == \"2\\nR 0\\nG 2\"\n\nassert solution(\n    \"\"\"\n    10 5\n    0 1\n    1 2\n    2 3\n    3 4\n    4 5\n    5 6\n    6 7\n    7 8\n    8 9\n    9 10\n    10 11\n    11 12\n    12 13\n    13 14\n    14 15\n    15 16\n    16 17\n    17 18\n    18 19\n    19 20\n    \"\"\"\n) == \"2\\nR 0\\nG 2\"\n\nassert solution(\n    \"\"\"\n    1 10\n    0 1\n    1 2\n    2 3\n    3 4\n    4 5\n    5 6\n    6 7\n    7 8\n    8 9\n    9 10\n    10 11\n    11 12\n    12 13\n    13 14\n    14 15\n    15 16\n    16 17\n    17 18\n    18 19\n    19 20\n    \"\"\"\n) == \"2\\nR 0\\nG 2\"\n\nassert solution(\n    \"\"\"\n    10 5\n    1 2\n    2 3\n    3 4\n    4 5\n    5 6\n    6 7\n    7 8\n    8 9\n    9 10\n    10 11\n    11 12\n    12 13\n    13 14\n    14 15\n    15 16\n    16 17\n    17 18\n    18 19\n    19 20\n    1 10\n    2 11\n    3 12\n    4 13\n    5 14\n    6 15\n    7 16\n    8 17\n    9 18\n    \"\"\"\n) == \"2\\nR 0\\nG 2\"\n\nassert solution(\n    \"\"\"\n    20 20\n    \"\"\"\n) == \"2\\nR 0\\nG 2\"\n\nassert solution(\n    \"\"\"\n    10 10\n    0 1\n    0 2\n    0 3\n    0 4\n    1 2\n    1 3\n    1 4\n    2 3\n    2 4\n    3 4\n    4 5\n    5 6\n    6 7\n    7 8\n    8 9\n    9 10\n    10 11\n    11 12\n    12 13\n    13 14\n    14 15\n    15 16\n    16 17\n    17 18\n    18 19\n    19 20\n    1 10\n    2 11\n    3 12\n    4 13\n    5 14\n    6 15\n    7 16\n    8 17\n    9 18\n    0 1\n    1 2\n    2 3\n    3 4\n    4 5\n    5 6\n    6 7\n    7 8\n    8 9\n    9 10\n    10 11\n    11 12\n    12 13\n    1"
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\\n\") == \"2\\nR 0\\nG 2\\n\"\n"
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"2\\nR 0\\nG 2\\n\"\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"2\\nR 0\\nG 2\\n\"\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"2\\nR 0\\nG 2\\n\"\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"2\\nR 0\\nG 2\\n\"\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"2\\nR 0\\nG 2\\n\"\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"2\\nR 0\\nG 2\\n\"\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"2\\nR 0\\nG 2\\n\"\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"2\\nR 0\\nG 2\\n\"\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"2\\nR 0\\nG 2\\n\"\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"2\\nR 0\\nG 2\\n\""
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"2\\nR 0\\nG 2\\n\"\nassert solution(\"4 2\\n3 1\\n1 2\\n2 3\\n2 4\") == \"1\\nR 1\\nG 0\\n\"\nassert solution(\"4 3\\n1 2\\n2 3\\n2 4\") == \"0\\nR 2\\nG 0\\n\"\nassert solution(\"3 4\\n2 3\\n2 4\") == \"2\\nR 2\\nG 1\\n\"\nassert solution(\"4 5\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"2\\nR 2\\nG 1\\n\"\nassert solution(\"5 6\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"0\\nR 2\\nG 1\\n\"\nassert solution(\"5 7\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"2\\nR 2\\nG 1\\n\"\nassert solution(\"5 8\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"0\\nR 2\\nG 1\\n\"\nassert solution(\"5 9\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"2\\nR 2\\nG 1\\n\"\nassert solution(\"5 10\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"0\\nR 2\\nG 1\\n\"\nassert solution(\"5 11\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"2\\nR 2\\nG 1\\n\"\nassert solution(\"5 12\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"0\\nR 2\\nG 1\\n\"\nassert solution(\"5 13\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"2\\nR 2\\nG 1\\n\"\nassert solution(\"5 14\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"0\\nR 2\\nG 1\\n\"\nassert solution(\"5 15\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"2\\nR 2\\nG 1\\n\"\nassert solution(\"5 16\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"0\\nR 2\\nG 1\\n\"\nassert solution(\"5 17\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"2\\nR 2\\nG 1\\n\"\nassert solution(\"5 "
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4') == '2\\nR 0\\nG 2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"2\\nR 0\\nG 2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"2\\nR 0\\nG 2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"2\\nR 0\\nG 2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"2\\nR 0\\nG 2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"2\\nR 0\\nG 2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"2\\nR 0\\nG 2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"2\\nR 0\\nG 2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"2\\nR 0\\nG 2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"2\\nR 0\\nG 2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"2\\nR 0\\nG 2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"2\\nR 0\\nG 2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 "
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\\n\") == \"2\\nR 0\\nG 2\""
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_example) == \"2\\n\", \"The expected output does not match the actual output.\\n\""
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F') == 2\nassert solution('7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n6 G H') == 4\nassert solution('7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n6 G H\\n8 I J') == 7"
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 2\nassert solution() == 2"
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\") == \"2\"\nassert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\") == \"2\""
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Your code is incorrect.\""
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\") == 2, \"Solution should return 2\"\nassert solution(\"1 2 3 4\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\") == 1, \"Solution should return 1\"\nassert solution(\"1 2 3 4\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n\") == 2, \"Solution should return 2\"\nassert solution(\"5 2 3 4\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n6 G H J\") == 2, \"Solution should return 2\""
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_str) == expected_output, f\"Test failed. Expected output: {expected_output}, got: {solution(input_str)}\""
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\") == \"2\"\nassert solution(\"1 2 3\") == \"0\"\nassert solution(\"50 100 200\") == \"5\"\nassert solution(\"10 100 100 100 100 100\") == \"0\""
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F') == '2'\nprint('All tests passed!')"
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F') == 2\nassert solution('7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F') == 2\nassert solution('7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F') == 2\nassert solution('7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F') == 2"
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\nYYY\\nNYY\\nYNY') == '2\\n1 2 3\\n3 1 2'"
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '2\\n1 2 3\\n3 1 2'\nassert solution() == '0\\n0'\nassert solution() == '0\\n2 3 1'\nassert solution() == '1\\n1'\nassert solution() == '1\\n1 2'\nassert solution() == '1\\n2 1'\nassert solution() == '1\\n2 3 4'\nassert solution() == '1\\n3 1'\nassert solution() == '2\\n3 1'\nassert solution() == '2\\n1 2'\nassert solution() == '2\\n3 4 1'\nassert solution() == '3\\n3'\nassert solution() == '3\\n1 2'\nassert solution() == '3\\n2 1'\nassert solution() == '3\\n4 1'\nassert solution() == '4\\n2'\nassert solution() == '4\\n3 1'\nassert solution() == '4\\n1 2'"
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\nYYY\\nNYY\\nYNY\\n') == '2\\n1 2 3\\n3 1 2\\n'\n"
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\nYYY\\nNYY\\nYNY\") == \"2\\n1 2 3\\n3 1 2\"\nassert solution(\"5\\nYYY\\nNYY\\nYNY\\nNYY\\nYNY\") == \"0\\n2 3 4 1 2\""
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 2\nassert solution() == 1, 2, 3\n"
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"Y\\nY\\nY\") == \"2\"\nassert solution(\"YYY\\nNYY\\nYNY\") == \"1 2 3\"\nassert solution(\"N\\nA\\nY\\nY\") == \"0\"\nassert solution(\"N\\nA\\nA\\nA\\nA\\nA\") == \"1\""
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    3\n    YYY\n    NYY\n    YNY\n    \"\"\"\n) == \"\"\"\n2\n1 2 3\n3 1 2\n\"\"\"\n\nassert solution(\n    \"\"\"\n    3\n    YYY\n    NYY\n    YNY\n    \"\"\"\n) == \"\"\"\n3\n1 2 3\n\"\"\"\n\nassert solution(\n    \"\"\"\n    2\n    YYY\n    NYY\n    YNY\n    \"\"\"\n) == \"\"\"\n0\n\"\"\"\n\nassert solution(\n    \"\"\"\n    4\n    YYY\n    NYY\n    NYY\n    YNY\n    \"\"\"\n) == \"\"\"\n1\n2 3 4\n4 2 3 1\n\"\"\"\n\nassert solution(\n    \"\"\"\n    3\n    YYY\n    NYY\n    YNY\n    \"\"\"\n) == \"\"\"\n3\n1 2 3\n\"\"\"\n\nassert solution(\n    \"\"\"\n    3\n    YYY\n    NYY\n    YNY\n    \"\"\"\n) == \"\"\"\n2\n1 2 3\n\"\"\"\n\nassert solution(\n    \"\"\"\n    3\n    YYY\n    NYY\n    YNY\n    \"\"\"\n) == \"\"\"\n1\n1 2 3\n\"\"\"\n\nassert solution(\n    \"\"\"\n    4\n    YYY\n    NYY\n    NYY\n    YNY\n    \"\"\"\n) == \"\"\"\n1\n2 3 4\n\"\"\"\n\nassert solution(\n    \"\"\"\n    2\n    YYY\n    NYY\n    YNY\n    \"\"\"\n) == \"\"\"\n0\n\"\"\"\n\nassert solution(\n    \"\"\"\n    4\n    YYY\n    NYY\n    NYY\n    YNY\n    \"\"\"\n) == \"\"\"\n1\n2 3 4\n\"\"\""
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '1 2 3\\n3 1 2'"
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\nYYY\\nNYY\\nYNY') == '2\\n1 2 3\\n3 1 2'\nassert solution('3\\nYNY\\nYYY\\nNNY') == '3\\n1 2 3\\n3 1 2'\nassert solution('3\\nYYY\\nNYY\\nYNY') == '2\\n1 2 3\\n3 1 2'\nassert solution('3\\nYYY\\nNYY\\nYNY\\nYNY') == '0'\nassert solution('3\\nYYY\\nNYY\\nYNY\\nYNY\\nNYY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYYY\\"
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\nYYY\\nNYY\\nYNY\") == \"2\\n1 2 3\\n3 1 2\"\nassert solution(\"3\\nNYY\\nNYY\\nYNY\") == \"1\\n2 1 3\\n2 3 1\"\nassert solution(\"3\\nYNY\\nYNY\\nYNY\") == \"3\\n1 2 3\\n2 3 1\"\nassert solution(\"3\\nYYY\\nYYY\\nYYY\") == \"0\""
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 3\\nx..\\n...\\n...\\n3\\n1 3\\n1 1\\n3 2\\n') == '4\\n0\\n5'"
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\nx..\\n...\\n...\\n3\\n1 3\\n1 1\\n3 2\") == \"4\\n0\\n5\"\nassert solution(\"5 5\\n..x.\\n...x.\\n...x.\\n.xx.\\n....\\n...x.\\n...x.\\n..x.\\n..x.\\n....\\n.xx.\\n..x.\\n...x.\\n....\\n...x.\\n..x.\\n..x.\\n....\\n.xx.\\n..x.\\n...x.\\n....\\n...x.\\n..x.\\n..x.\\n....\\n.xx.\\n..x.\\n...x.\\n....\\n...x.\\n..x.\\n..x.\\n....\\n.xx.\\n..x.\\n...x.\\n....\\n...x.\\n..x.\\n..x.\\n....\\n.xx.\\n..x.\\n...x.\\n....\\n...x.\\n..x.\\n..x.\\n....\\n.xx.\\n..x.\\n...x.\\n....\\n...x.\\n..x.\\n..x.\\n....\\n.xx.\\n..x.\\n...x.\\n....\\n...x.\\n..x.\\n..x.\\n....\\n.xx.\\n..x.\\n...x.\\n....\\n...x.\\n..x.\\n..x.\\n....\\n.xx.\\n..x.\\n...x.\\n....\\n...x.\\n..x.\\n..x.\\n....\\n.xx.\\n..x.\\n...x.\\n....\\n...x.\\n..x.\\n..x.\\n....\\n.xx.\\n..x.\\n...x.\\n....\\n...x.\\n..x.\\n..x.\\n....\\n.xx.\\n..x.\\n...x.\\n....\\n...x.\\n..x.\\n..x.\\n....\\n.xx.\\n..x.\\n...x.\\n....\\n...x.\\n..x.\\n..x.\\n....\\n.xx.\\n..x.\\n...x.\\n....\\n...x.\\n..x.\\n..x.\\n....\\n.xx.\\n..x.\\n...x.\\n....\\n...x.\\n..x.\\n..x.\\n....\\n.xx.\\n..x.\\n...x.\\n....\\n...x.\\n..x.\\n..x.\\n....\\n.xx.\\n..x.\\n...x.\\n....\\n...x.\\n..x.\\n..x.\\n....\\n.xx.\\n..x.\\n...x.\\n....\\n...x.\\n..x.\\n..x.\\n....\\n.xx.\\n..x.\\n...x.\\n....\\n...x.\\n..x.\\n..x.\\n....\\n.xx.\\n..x.\\n...x.\\n....\\n...x.\\n..x.\\n..x.\\n....\\n.xx.\\n..x.\\n...x.\\n....\\n...x.\\n..x.\\n..x.\\n....\\n.xx.\\n..x.\\n...x.\\n....\\n...x.\\n..x.\\n..x.\\n....\\n.xx.\\n..x.\\n...x.\\n....\\n...x.\\n..x.\\n..x.\\n....\\n.xx.\\n..x.\\n...x.\\n....\\n...x.\\n..x.\\n..x.\\n....\\n.xx.\\n..x.\\n...x.\\n....\\n...x.\\n..x.\\n..x.\\n....\\n.xx.\\n..x.\\n...x.\\n....\\n...x.\\n..x.\\n..x.\\n....\\n.xx.\\n..x.\\n...x.\\n....\\n...x.\\n..x.\\n..x.\\n....\\n.xx.\\n..x.\\n...x.\\n....\\n...x.\\n..x.\\n..x.\\n....\\n.xx.\\n..x.\\n...x.\\n....\\n...x.\\n..x.\\n..x.\\n....\\n.xx.\\n..x.\\n...x.\\n....\\n...x.\\n..x.\\n..x.\\n....\\n.xx.\\n..x.\\n...x.\\n....\\n...x.\\n..x.\\n..x.\\n....\\n.xx.\\n..x.\\"
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n3 3\nx..\n...\n...\n3\n1 3\n1 1\n3 2\n''') == '''\n4\n0\n5\n'''"
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\nx..\\n...\\n...\\n3\\n1 3\\n1 1\\n3 2\") == \"4\\n0\\n5\\n\""
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 3\\nx..\\n...\\n...\\n3\\n1 3\\n1 1\\n3 2') == '4\\n0\\n5'"
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_data) == output_data, f\"Incorrect solution. Expected: {output_data}, got: {solution(input_data)}\""
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('test_case.in')) == \"4\\n0\\n5\\n\""
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n3 3\nx..\n...\n...\n3\n1 3\n1 1\n3 2\n''') == '4\\n0\\n5\\n'"
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\nx..\\n...\\n...\\n3\\n1 3\\n1 1\\n3 2\") == \"4\\n0\\n5\""
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"\"\"\n4\n0\n5\n\"\"\""
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Test failed with input {input()}, expected output {output}, but got {solution(input())}\""
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3\n5\n3\n4\n5 3) == ['4.114', '-2.842']\n\nassert solution(3\n5\n2\n1\n2 2) == ['-1.571', '-1.571']\n\nassert solution(3\n5\n2\n1\n1 1) == ['0.000', '0.000']"
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n5\\n3\\n4\\n5 3\\n\") == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\"\nassert solution(\"3\\n5\\n3\\n4\\n5\\n1 3\\n\") == \"5.000 3.000\"\nassert solution(\"3\\n5\\n3\\n4\\n5\\n1\\n3\\n\") == \"4.887 0.555\"\nassert solution(\"3\\n5\\n3\\n4\\n5\\n1\\n3\\n\") == \"4.887 0.555\"\nassert solution(\"3\\n5\\n3\\n4\\n5\\n1\\n3\\n\") == \"4.887 0.555\"\nassert solution(\"3\\n5\\n3\\n4\\n5\\n1\\n3\\n\") == \"4.887 0.555\"\nassert solution(\"3\\n5\\n3\\n4\\n5\\n1\\n3\\n\") == \"4.887 0.555\"\nassert solution(\"3\\n5\\n3\\n4\\n5\\n1\\n3\\n\") == \"4.887 0.555\"\nassert solution(\"3\\n5\\n3\\n4\\n5\\n1\\n3\\n\") == \"4.887 0.555\"\nassert solution(\"3\\n5\\n3\\n4\\n5\\n1\\n3\\n\") == \"4.887 0.555\"\nassert solution(\"3\\n5\\n3\\n4\\n5\\n1\\n3\\n\") == \"4.887 0.555\"\nassert solution(\"3\\n5\\n3\\n4\\n5\\n1\\n3\\n\") == \"4.887 0.555\"\nassert solution(\"3\\n5\\n3\\n4\\n5\\n1\\n3\\n\") == \"4.887 0.555\"\nassert solution(\"3\\n5\\n3\\n4\\n5\\n1\\n3\\n\") == \"4.887 0.555\"\nassert solution(\"3\\n5\\n3\\n4\\n5\\n1\\n3\\n\") == \"4.887 0.555\"\nassert solution(\"3\\n5\\n3\\n4\\n5\\n1\\n3\\n\") == \"4.887 0.555\"\nassert solution(\"3\\n5\\n3\\n4\\n5\\n1\\n3\\n\") == \"4.887 0.555\"\nassert solution(\"3\\n5\\n3\\n4\\n5\\n1\\n3\\n\") == \"4.887 0.555\"\nassert solution(\"3\\n5\\n3\\n4\\n5\\n1\\n3\\n\") == \"4.887 0.555\"\nassert solution(\"3\\n5\\n3\\n4\\n5\\n1\\n3\\n\") == \"4.887 0.555\"\nassert solution(\"3\\n5\\n3\\n4\\n5\\n1\\n3\\n\") == \"4.887 0.555\"\nassert solution(\"3\\n5\\n3\\n4\\n5\\n1\\n3\\n\") == \"4.887 0.555\"\nassert solution(\"3\\n5\\n3\\n4\\n5\\n1\\n3\\n\") == \"4.887 0.555\"\nassert solution(\"3\\n5\\n3\\n4\\n5\\n1\\n3\\n\") == \"4.887 0.555\"\nassert solution(\"3\\n5\\n3\\n4\\n5\\n1\\n3\\n\") == \"4.887 0.555\"\nassert solution(\"3\\"
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Expected {output}, but got {solution(input())}\""
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n5\\n3\\n4\\n5 3\") == \"\"\"\n4.114 -2.842\n6.297 -0.784\n5.000 3.000\n\"\"\""
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n5\\n3\\n4\\n5 3\\n') == '4.114 -2.842\\n6.297 -0.784\\n5.000 3.000'\nassert solution('2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n') == '1.000 1.000\\n2.000 2.000\\n3.000 3.000'\nassert solution('1\\n1\\n1\\n1\\n1\\n') == '1.000 1.000\\n2.000 2.000\\n3.000 3.000'\nassert solution('5\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n') == '10.000 10.000\\n12.000 12.000\\n14.000 14.000\\n16.000 16.000\\n18.000 18.000\\n20.000 20.000\\n'"
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"Output is not provided\""
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == output, f\"Test case failed. Expected output: '{output}', got: '{solution(stdin)}'\""
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '''4.114 -2.842\n6.297 -0.784\n5.000 3.000'''\nassert solution() == '''1.118 2.037\n5.000 3.000\n3.923 3.100'''"
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\""
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\nr\"\"\"\n4 5\n2 3 5 7\n2\n3\n5\n6\n8\n\"\"\") == \"3\\n5\\n8\\n10\\n13\"\n\nassert solution(\nr\"\"\"\n10 10\n5 10 20\n15\n4 5\n\"\"\") == \"10\\n20\\n15\"\n\nassert solution(\nr\"\"\"\n10 10\n5 10 20\n15\n\"\"\") == \"10\\n20\\n15\"\n\nassert solution(\nr\"\"\"\n2 3 5 7\n3\n\"\"\") == \"3\"\n\nassert solution(\nr\"\"\"\n2 3 5 7\n\"\"\") == \"3\"\n\nassert solution(\nr\"\"\"\n1 2 3 4\n5\n\"\"\") == \"5\"\n\nassert solution(\nr\"\"\"\n1 2 3 4\n\"\"\") == \"5\"\n\nassert solution(\nr\"\"\"\n1 2 3 4\n\"\"\") == \"5\"\n\nassert solution(\nr\"\"\"\n1 2 3 4\n\"\"\") == \"5\"\n\nassert solution(\nr\"\"\"\n1 2 3 4\n\"\"\") == \"5\"\n\nassert solution(\nr\"\"\"\n1 2 3 4\n\"\"\") == \"5\"\n\nassert solution(\nr\"\"\"\n1 2 3 4\n\"\"\") == \"5\"\n\nassert solution(\nr\"\"\"\n1 2 3 4\n\"\"\") == \"5\"\n\nassert solution(\nr\"\"\"\n1 2 3 4\n\"\"\") == \"5\"\n\nassert solution(\nr\"\"\"\n1 2 3 4\n\"\"\") == \"5\"\n\nassert solution(\nr\"\"\"\n1 2 3 4\n\"\"\") == \"5\"\n\nassert solution(\nr\"\"\"\n1 2 3 4\n\"\"\") == \"5\"\n\nassert solution(\nr\"\"\"\n1 2 3 4\n\"\"\") == \"5\"\n\nassert solution(\nr\"\"\"\n1 2 3 4\n\"\"\") == \"5\"\n\nassert solution(\nr\"\"\"\n1 2 3 4\n\"\"\") == \"5\"\n\nassert solution(\nr\"\"\"\n1 2 3 4\n\"\"\") == \"5\"\n\nassert solution(\nr\"\"\"\n1 2 3 4\n\"\"\") == \"5\"\n\nassert solution(\nr\"\"\"\n1 2 3 4\n\"\"\") == \"5\"\n\nassert solution(\nr\"\"\"\n1 2 3 4\n\"\"\") == \"5\"\n\nassert solution(\nr\"\"\"\n1 2 3 4\n\"\"\") == \"5\"\n\nassert solution(\nr\"\"\"\n1 2 3 4\n\"\"\") == \"5\"\n\nassert solution(\nr\"\"\"\n1 2 3 4\n\"\"\") == \"5\"\n\nassert solution(\nr\"\"\"\n1 2 3 4\n\"\"\") == \"5\"\n\nassert solution(\nr\"\"\"\n1 2 3 4\n\"\"\") == \"5\"\n\nassert solution(\nr\"\"\"\n1 2 3 4\n\"\"\") == \"5\"\n\nassert solution(\nr\"\"\"\n1 2 3 4\n\"\"\") == \"5\"\n\nassert solution(\nr\"\"\"\n1 2 3 4\n\"\"\") == \"5\"\n\nassert solution(\nr\"\"\"\n1 2 3 4\n\"\"\") == \"5\"\n\nassert solution(\nr\"\"\"\n1 2 3 4\n\"\"\") == \"5\"\n\nassert solution(\nr\"\"\"\n1 2 3 4\n\"\"\") == \"5\"\n\nassert solution(\nr\"\"\"\n1 2 3 4\n\"\"\") == \"5\"\n\nassert solution(\nr\"\"\"\n1 2 3 4\n\"\"\") == \"5\"\n\nassert solution(\nr\"\"\"\n1 2 3 4\n\"\"\") == \"5\"\n\nassert solution(\nr\"\"\"\n1 2 3 4\n\"\"\") == \"5\"\n\nassert solution(\nr\"\"\"\n1 2 3 4\n\"\"\") == \"5\"\n\nassert solution(\nr\"\"\"\n1 2 3 4\n\"\"\") == \"5\"\n\nassert solution(\nr\"\"\"\n1 2 3 4\n\"\"\") == \"5\"\n\nassert solution(\nr\"\"\"\n1 2 3 4\n\"\"\") == \"5\"\n\nassert solution(\nr\"\"\"\n1"
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(None) == \"\"\nassert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\") == \"3\\n5\\n8\\n10\\n13\""
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\") == \"3\\n5\\n8\\n10\\n13\""
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\") == \"3\\n5\\n8\\n10\\n13\"\nassert solution(\"4 10\\n3 2 4 5 7\") == \"3\\n5\\n8\\n10\\n13\"\nassert solution(\"1 100\\n1 10\") == \"1\"\nassert solution(\"1 100\\n10 10\") == \"10\"\nassert solution(\"1 100\\n10 1\") == \"10\"\nassert solution(\"1 100\\n1 100\") == \"100\"\nassert solution(\"2 100\\n1 10\\n1 10\\n1 10\") == \"30\"\nassert solution(\"2 100\\n1 100\\n1 100\\n1 100\") == \"100\"\nassert solution(\"3 100\\n1 100\\n1 100\\n1 100\") == \"100\"\nassert solution(\"4 100\\n1 100\\n1 100\\n1 100\") == \"100\"\nassert solution(\"5 100\\n1 100\\n1 100\\n1 100\") == \"100\"\nassert solution(\"6 100\\n1 100\\n1 100\\n1 100\") == \"100\"\nassert solution(\"7 100\\n1 100\\n1 100\\n1 100\") == \"100\"\nassert solution(\"8 100\\n1 100\\n1 100\\n1 100\") == \"100\""
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Expected output: {expected_output}. Received output: {solution(input())}\""
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Solution does not match expected output: {solution(input())}\\nExpected output: {output}\"\n"
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\\n\") == \"3\\n5\\n8\\n10\\n13\\n\"\nassert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\\n9\\n\") == \"2\\n5\\n8\\n10\\n13\\n\""
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Expected {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 \") == \"0\\n\"\nassert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 \") == \"0\\n\"\nassert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 \") == \"0\\n\"\nassert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 \") == \"0\\n\"\nassert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 \") == \"0\\n\""
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"0\"\n"
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Test case {i} failed. Expected: {output}, got: {solution(input())}\""
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n\") == 0, \"Test 1\"\nassert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n\") == 1, \"Test 2\"\nassert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n\") == 2, \"Test 3\"\nassert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n\") == 3, \"Test 4\"\nassert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n\") == 4, \"Test 5\""
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '0\\n', \"The expected output is 0, but it is: \" + str(solution(stdin))\n\nfor i in range(3):\n    line = input().split()\n    u, v = map(int, line)\n    edges.append((u, v))\n    edges.append((v, u))\n\nfor i in range(int(input())):\n    pigs = list(map(int, input().split()))\n    pigs.sort()\n    pigs.append(pigs[0])\n    edges = list(set(edges))\n\n    for p in pigs:\n        if p in [edges[u][0] for u in range(len(edges))]:\n            print(\"Impossible\")\n            return\n\nprint(pigs)"
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 \") == \"0\"\nassert solution(\"10 2\\n0 1\\n1 2\\n1 3\\n2 4\\n2 5\\n3 4\\n3 5\\n\") == \"1\"\nassert solution(\"5 4\\n0 1\\n1 2\\n2 3\\n1 4\\n\") == \"0\"\n"
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Test failed. Expected output: {output}, but got: {solution(input())}\"\n"
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 ') == 0, \"Test case 1 failed.\"\nassert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5') == 1, \"Test case 2 failed.\"\nassert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5') == 2, \"Test case 3 failed.\"\nassert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5') == 3, \"Test case 4 failed.\"\nassert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5') == 4, \"Test case 5 failed.\"\nassert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5') == 5, \"Test case 6 failed.\""
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5') == '0'\nassert solution('8 4\\n1 2\\n1 3\\n1 4\\n3 4\\n3 5\\n4 5') == '1'"
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n') == '0\\n'\nassert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n6 2\\n0 1\\n1 2\\n2 3\\n') == '2\\n'"
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1\") == \"106\\n107\\n71\\n\""
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1\") == \"106\\n107\\n71\\n\"\nassert solution(\"4 2\\n45 1 1 L2 U3\\n30 2 1 L1 U3 C2 U1\\n10 1 1 L1 U1\") == \"10\\n11\\n10\\n\"\nassert solution(\"5 3\\n10 1 1 C1 L1 U2\\n80 2 1 C2 L2 U3\\n70 1 1 C1 L1 U2\\n50 1 1 C2 L2 U3\") == \"10\\n11\\n10\\n\""
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"3 1\n50 2 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\"\"\"\n) == \"106\\n107\\n71\""
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1\") == \"106\\n107\\n71\"\n"
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 1\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1') == '106\\n107\\n71'\nprint('All test cases passed')"
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"\"\"106\n107\n71\n\"\"\"\n"
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1\") == \"106\\n107\\n71\\n\""
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 1\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1') == '106\\n107\\n71'\n\nprint(solution('3 1\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1'))\n"
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3, 1) == 106\nassert solution(5, 2, 5, \"C1\", \"L1\", \"C1\", \"U1\", \"C1\") == 106\nassert solution(1, 1, 5, \"C1\", \"L1\", \"C100\", \"U1\", \"C1\") == 107\nassert solution(70, 3, 1, \"C1\") == 71"
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1\") == \"106\\n107\\n71\""
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\nA\") == 51\nassert solution(\"1\\nA\") == 2\nassert solution(\"5\\nB\") == 12\nassert solution(\"3\\nAB\") == 6\nassert solution(\"2\\nB\") == 1"
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 51, \"Incorrect output for 3 test cases.\""
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\nAA\\n\") == \"51\"\nassert solution(\"1\\nAAB\\n\") == \"1\"\nassert solution(\"3\\nABCD\\nEFGH\\n\") == \"3\"\nassert solution(\"10\\nA\\nB\\nC\\nD\\nE\\nA\\nB\\nC\\nD\\nE\\nA\\nB\\nC\\nD\\nE\\nA\\nB\\nC\\nD\\nE\\nA\\nB\\nC\\nD\\nE\\nA\\nB\\nC\\nD\\nE\\n\") == \"15\"\n"
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(2) == 51"
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\nA\") == \"51\\n\"\nassert solution(\"3\\nAab\") == \"5\\nAab\\nAab\\n\"\nassert solution(\"4\\nAabbcc\") == \"2\\nAabbcc\\nAabbcc\\nAabbcc\\n\"\nassert solution(\"5\\nAabbccdde\") == \"1\\nAabbccdde\\nAabbccdde\\nAabbccdde\\nAabbccdde\\n\"\nassert solution(\"10\\nA\") == \"1\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA\\nA"
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 51"
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\nA\\nA') == '51'"
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\nAA\") == \"51\\n\"\nassert solution(\"1\\nABC\") == \"1\\n\"\nassert solution(\"2\\nABA\") == \"2\\n\"\nassert solution(\"4\\nABCDE\") == \"3\\n\"\nassert solution(\"6\\nXYZAB\") == \"2\\n\"\nassert solution(\"7\\nABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"2\\n\""
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2\\nA\\n') == '51'\nassert solution('3\\nAabb\\nBabb\\nCabb\\nDabb\\nEabb\\nFabb\\nGabb\\nHabb\\nIabb\\nJabb\\nKabb\\nLabb\\nMabb\\nNabb\\nOabb\\nPabb\\nQabb\\nRabb\\nSabb\\nTabb\\nUabb\\nVabb\\nWabb\\nXabb\\nYabb\\nZabb\\naa\\nbb\\ncc\\ndd\\nee\\nfv\\ngg\\nhh\\nii\\jj\\kk\\ll\\mm\\nn\\no\\pp\\qq\\rr\\ss\\tt\\uu\\vv\\ww\\xx\\yy\\zz\\n') == '13'\nassert solution('6\\nABBCDEFGHIJKLMNOPQRSTUVWXYZ\\n') == '1894'"
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\nA\\n\") == 51"
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), \"Test failed: Your solution is incorrect.\""
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n') == '1 2'\n\nassert solution('1\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n') == 'no ties'\n\nassert solution('2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n') == 'no ties'\n\nassert solution('2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n\\n2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n') == 'no ties'\n\nassert solution('1\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n\\n2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n') == '1 2'\n\nassert solution('1\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n') == 'no ties'"
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n\") == \"1 2\"\n\nassert solution(\"2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n\") == \"no ties\"\n\nassert solution(\"2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n\") == \"1 2\"\n\nassert solution(\"2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n\") == \"no ties\""
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"no ties\" # correct solution"
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\") == \"1 2\"\nassert solution(\"3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n7 18 41 48 65\\n\") == \"no ties\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''2\n3 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71''') == '1 2'\n\nassert solution('''1\n19\n35\n55\n61\n71''') == '2'\n\nassert solution('''1\n25\n42\n53\n71''') == '3'\n\nassert solution('''1\n23\n39\n59\n63''') == '4'\n\nassert solution('''1\n17\n35\n55\n61\n71''') == '5'\n\nassert solution('''1\n26\n42\n53\n71''') == '6'\n\nassert solution('''1\n25\n40\n57\n64\n71''') == '7'\n\nassert solution('''1\n20\n44\n52\n68\n71''') == '8'\n\nassert solution('''1\n14\n23\n39\n59\n63''') == '9'\n\nassert solution('''1\n29\n45\n56\n68\n63''') == '10'\n\nassert solution('''1\n21\n34\n47\n50\n69''') == '11'\n\nassert solution('''1\n27\n42\n54\n71\n64''') == '12'\n\nassert solution('''1\n31\n46\n58\n63\n71''') == '13'\n\nassert solution('''1\n30\n43\n55\n62\n71''') == '14'\n\nassert solution('''1\n31\n46\n58\n63\n71''') == '15'\n\nassert solution('''1\n26\n42\n53\n71\n68''') == '16'\n\nassert solution('''1\n28\n41\n52\n66\n70''') == '17'\n\nassert solution('''1\n14\n23\n39\n59\n63''') == '18'\n\nassert solution('''1\n29\n45\n56\n68\n63''') == '19'\n\nassert solution('''1\n14\n23\n39\n59\n63''') == '20'\n\nassert solution('''1\n31\n46\n58\n63\n71''') == '21'\n\nassert solution('''1\n26\n42\n53\n71\n68''') == '22'\n\nassert solution('''1\n28\n41\n52\n66\n70''') == '23'\n\nassert solution('''1\n14\n23\n39\n59\n63''') == '24'\n\nassert solution('''1\n29\n45\n56\n68\n63''') == '25'\n\nassert solution('''1\n14\n23\n39\n59\n63''') == '26'\n\nassert solution('''1\n29\n45\n56\n68\n63''') == '27'\n\nassert solution('''1\n26\n42\n53\n71\n68''') == '28'\n\nassert solution('''1\n14\n23\n39\n59\n63''') == '29'\n\nassert solution('''1\n14\n23\n39\n59\n63''') == '30'\n\nassert solution('''1\n31\n46\n58\n63\n71''') == '31'\n\nassert solution('''1\n26\n42\n53\n71\n68''') == '32'\n\nassert solution('''1\n28\n41\n52\n66\n70''') == '33'\n\nassert solution('''1\n14\n23\n39\n59\n63''') == '34'\n\nassert solution('''1\n29\n45\n56\n68\n63''') == '35'\n\nassert solution('''1\n2"
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71') == '1 2'\nassert solution('1\\n29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71') == '2 1'\nassert solution('2\\n29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71') == 'no ties'\nassert solution('1\\n29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n2 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n') == '1 2'\nassert solution('1\\n29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n2 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n3 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n') == '1 3'\nassert solution('1\\n29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n2 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n3 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n3 45 56 68\\n') == '1 1'\nassert solution('1\\n29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n2 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23"
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\") == \"1 2\"\nassert solution(\"14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\") == \"1 2\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240"
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\") == \"1 2\\nno ties\\n\", \"Test case 1 failed\"\n\nassert solution(\"14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n\") == \"1 2\\n1 2\\nno ties\\n\", \"Test case 2 failed\"\n\nassert solution(\"3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\") == \"no ties\\n\", \"Test case 3 failed\"\n\nassert solution(\"3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\") == \"no ties\\n\", \"Test case 4 failed\"\n\nassert solution(\"3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\") == \"no ties\\n\", \"Test case 5 failed\"\n\nassert solution(\"3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\") == \"no ties\\n\", \"Test case 6 failed\""
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\") == \"1 2\"\nassert solution(\"1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n\") == \"no ties\"\nassert solution(\"3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n7 22 47 51 70\\n\") == \"7 1\"\nassert solution(\"3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n7 22 47 51 70\\n\\n30 45 56 68 72 75\\n1 19 43 50 72 75\\n11 25 40 49 61 75\\n9 23 31 58 63 75\\n4 27 42 54 71 75\\n\\n14 23 39 59 63 75\\n8 17 35 55 61 75\\n15 26 42 53 71 75\\n10 25 31 57 64 75\\n6 20 44 52 68 75\\n7 22 47 51 70 75\\n\") == \"30 45\""
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 0\n"
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3 2 1\\n1 2 3\\n1 2 3\") == \"0\\n\"\n"
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"0\""
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3, 2, 1, 1, 2, 3) == 0\nassert solution(3, 2, 1, 2, 1, 3) == 0\nassert solution(3, 2, 1, 2, 3, 1) == 0\nassert solution(3, 2, 1, 3, 2, 1) == 0\nassert solution(3, 2, 1, 3, 1, 2) == 0"
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n3 2 1\\n1 2 3\\n1 2 3\") == \"0\\n0\\n0\"\nassert solution(\"10\\n1 2 3\\n2 3 4\\n3 4 5\\n4 5 6\\n5 6 7\\n6 7 8\\n7 8 9\\n8 9 10\") == \"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\""
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 0"
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n3 2 1\\n1 2 3\\n1 2 3\") == \"0\\n\"\nassert solution(\"10\\n5 1 2 3 4\\n1 2 3\\n1 3 4\\n2 3 4\\n3 3 4\\n4 4 4\") == \"15\"\n\nfrom typing import List"
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n3 2 1\\n1 2 3\\n1 2 3') == '0\\n'\nassert solution('1\\n2 1\\n1 2 3\\n1 2 3') == '0\\n'\nassert solution('3\\n3 2 1\\n1 2 3\\n1 2 3') == '0\\n'\nassert solution('3\\n3 2 1\\n1 2 3\\n1 2 3') == '0\\n'\nassert solution('3\\n3 2 1\\n1 2 3\\n1 2 3') == '0\\n'\nassert solution('3\\n3 2 1\\n1 2 3\\n1 2 3') == '0\\n'\nassert solution('3\\n3 2 1\\n1 2 3\\n1 2 3') == '0\\n'\nassert solution('3\\n3 2 1\\n1 2 3\\n1 2 3') == '0\\n'\nassert solution('3\\n3 2 1\\n1 2 3\\n1 2 3') == '0\\n'\nassert solution('3\\n3 2 1\\n1 2 3\\n1 2 3') == '0\\n'"
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3 2 1\\n1 2 3\\n1 2 3\") == \"0\\n\"\nassert solution(\"5\\n3 2 1\\n1 2 3\\n1 2 3\\n1 2 4\\n2 3 4\") == \"2\\n\"\nassert solution(\"6\\n3 2 1\\n1 2 3\\n1 2 3\\n1 2 4\\n2 3 4\\n4 5 6\") == \"4\\n\""
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution, \"No solution provided\""
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"\"\"0.4\n0\n0.2\n0.171428571429\n0.228571428571\"\"\"\n"
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == '0.4'\nassert solution(5) == '0'\nassert solution(7) == '0.2'\nassert solution(9) == '0.171428571429'\nassert solution(10) == '0.228571428571'"
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"0.4\", \"Your solution should output 0.4.\"\nassert solution() == \"0\", \"Your solution should output 0.\"\nassert solution() == \"0.2\", \"Your solution should output 0.2.\"\nassert solution() == \"0.171428571429\", \"Your solution should output 0.171428571429.\"\nassert solution() == \"0.228571428571\", \"Your solution should output 0.228571428571.\""
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n1 2 3\\n6 2 3\\n10 2 3\\n16 3 4') == '0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571'"
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()\nprint(\"Correct\") if is_correct() else print(\"Incorrect\")"
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 0.4\nassert solution() == 0\nassert solution() == 0.2\nassert solution() == 0.171428571429\nassert solution() == 0.228571428571\n\nfrom typing import List"
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution, \"No solution provided\"\n"
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Output mismatch: expected '{output}', got '{solution(input())}'\"\n"
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"impossible\", \"Your code is not correct.\""
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 -6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\\n\"\n"
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"impossible\""
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == sample_output, f\"The given solution {solution(sample_input)} does not match the expected output {sample_output}\""
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n    4\n    1 5\n    3 3\n    4 5\n    -1 -6\n    \"\"\") == \"\"\"\n    1 + 5 = 6\n    3 * 3 = 9\n    4 - 5 = -1\n    -1 - -6 = 5\n    impossible\n    \"\"\"\n\nassert solution(\"\"\"\n    4\n    1 5\n    3 3\n    4 5\n    -1 -6\n    \"\"\") == \"\"\"\n    1 + 5 = 6\n    3 * 3 = 9\n    4 - 5 = -1\n    -1 - -6 = 5\n    impossible\n    \"\"\"\n\nassert solution(\"\"\"\n    4\n    1 5\n    3 3\n    4 5\n    -1 -6\n    \"\"\") == \"\"\"\n    1 + 5 = 6\n    3 * 3 = 9\n    4 - 5 = -1\n    -1 - -6 = 5\n    impossible\n    \"\"\"\n\nassert solution(\"\"\"\n    4\n    1 5\n    3 3\n    4 5\n    -1 -6\n    \"\"\") == \"\"\"\n    1 + 5 = 6\n    3 * 3 = 9\n    4 - 5 = -1\n    -1 - -6 = 5\n    impossible\n    \"\"\"\n\nassert solution(\"\"\"\n    4\n    1 5\n    3 3\n    4 5\n    -1 -6\n    \"\"\") == \"\"\"\n    1 + 5 = 6\n    3 * 3 = 9\n    4 - 5 = -1\n    -1 - -6 = 5\n    impossible\n    \"\"\""
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 -6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\\n\""
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n4\n1 5\n3 3\n4 5\n-1 -6\n''') == '''\n1 + 5 = 6\n3 * 3 = 9\n4 - 5 = -1\n-1 - -6 = 5\nimpossible\n'''\nassert solution('''\n4\n2 2\n1 3\n2 4\n''') == '''\n1 * 2 = 2\n2 * 1 = 2\n2 * 4 = 8\nimpossible\n'''\nassert solution('''\n2\n1 2\n2 3\n''') == '''\n1 * 2 = 2\n2 * 1 = 2\nimpossible\n'''\nassert solution('''\n3\n1 2\n2 3\n3 4\n''') == '''\n1 * 2 = 2\n2 * 1 = 2\nimpossible\n'''\nassert solution('''\n4\n1 2\n2 3\n3 4\n-1 -2\n''') == '''\n1 + 2 = 3\n2 - 2 = 1\n3 * 2 = 6\n4 / 2 = 2\nimpossible\n'''"
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == sample_output, f\"Your solution {solution(sample_input)} is incorrect. Please make sure you implemented the function correctly and pass the sample input {sample_input}.\""
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 -6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\"\nassert solution(\"1\\n1\") == \"impossible\"\nassert solution(\"3\\n5\\n7\\n9\") == \"impossible\"\nassert solution(\"4\\n1 3\\n3 3\\n4 5\\n-1 -6\\n2 3\\n4 5\\n5 7\\n7 9\") == \"impossible\""
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"4\\n1 5\\n3 3\\n4 5\\n-1 -6\\n\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\""
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == [\"4\\n1\\n4\\n6\\n0\\n\", \"0\\n0\\n0\\n0\\n\"]"
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1\") == \"4\\n1\\n4\\n6\\n0\"\nassert solution(\"5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1\") == \"4\\n1\\n4\\n6\\n0\"\nassert solution(\"5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1\") == \"4\\n1\\n4\\n6\\n0\""
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1') == '4\\n1\\n4\\n6\\n0'\nassert solution('5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1') == '4\\n1\\n4\\n6\\n0'"
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r').read()) == ['4\\n1\\n4\\n6\\n0', '4\\n1\\n4\\n6\\n0', '4\\n1\\n4\\n6\\n0', '4\\n1\\n4\\n6\\n0', '4\\n1\\n4\\n6\\n0']"
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1') == '4\\n1\\n4\\n6\\n0'"
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1\\n\") == \"4\\n1\\n4\\n6\\n0\""
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_str) == output_str, f\"Test failed for input: '{input_str}', expected output: '{output_str}'\"\n\nfor test_case in range(int(input()), int(input()) + 1):\n    D = int(input())\n    S = int(input())\n\n    # First line: D and S\n    assert D == S\n\n    # Droplets\n    drops = []\n    for _ in range(D):\n        x, y = map(int, input().split())\n        drops.append((x, y))\n\n    # Sensors\n    sensors = []\n    for _ in range(S):\n        x1, x2 = map(int, input().split())\n        y = int(input())\n        sensors.append((x1, x2, y))\n\n    # Solution\n    ans = []\n    for drop in drops:\n        y_disintegrate = 0\n        for sensor in sensors:\n            if sensor[0] <= drop[0] <= sensor[1]:\n                if sensor[2] <= drop[1] <= sensor[3]:\n                    y_disintegrate = max(y_disintegrate, drop[1])\n                elif sensor[2] <= drop[3] <= sensor[3]:\n                    y_disintegrate = min(y_disintegrate, drop[3])\n        ans.append(y_disintegrate)\n\n    # Output\n    print(*ans)"
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Expected {output}, but got {solution(input())}\""
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1\") == \"4\\n1\\n4\\n6\\n0\"\nassert solution(\"5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1\") == \"4\\n1\\n4\\n6\\n0\"\nassert solution(\"5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1\") == \"4\\n1\\n4\\n6\\n0\""
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 4, \"Output not found.\""
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 4\n"
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(4) == 4, \"Test case 1 failed\"\nassert solution(10) == 60, \"Test case 2 failed\"\nassert solution(20) == 120, \"Test case 3 failed\"\nassert solution(50) == 500, \"Test case 4 failed\"\nassert solution(100) == 60000, \"Test case 5 failed\""
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 2 3 4\") == \"4\\n\"\n\nfrom itertools import combinations"
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 2 3 4\") == \"4\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"5\\n\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"6\\n\"\nassert solution(\"7\\n1 2 3 4 5 6 7\") == \"7\\n\"\nassert solution(\"8\\n1 2 3 4 5 6 7 8\") == \"8\\n\"\nassert solution(\"9\\n1 2 3 4 5 6 7 8 9\") == \"9\\n\""
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 4, \"Incorrect solution\"\n"
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 4"
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Expected output: {expected_output}, but got: {solution(input())}\""
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n1 2 3 4') == 4\nassert solution('5\\n1 1 2 3 4') == 12\nassert solution('6\\n1 1 2 2 3 4') == 24\nassert solution('7\\n1 1 2 2 2 3 4') == 120\nassert solution('8\\n1 1 2 2 2 2 3 4') == 5040"
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(4) == 4\nprint(\"All tests passed!\")"
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('tests/test_case.txt', 'r')) == \"4 3\\n\"\n"
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin='1 31 2\\n20 60\\n50 90') == '4 3'\nassert solution(stdin='1 25 10\\n5 20\\n15 25\\n25 10') == '1 2'\nassert solution(stdin='1 90 1000\\n10 60\\n100 1000') == '50 0'\nassert solution(stdin='1 200 500\\n10 60\\n100 1000') == '100 2'"
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 31 2\\n20 60\\n50 90') == '4 3'"
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Expected {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin: str) == output\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\""
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(31) == 4\nassert solution(60) == 3"
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\""
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\""
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '4 3'"
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 2 1') == '3'\nassert solution('4 3 2') == '5'\nassert solution('8 6 4') == '12'\nassert solution('10 5 3') == '18'"
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(str(2, 2, 1)) == \"3\"\n\nimport math"
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 2 1') == '3\\n'\nassert solution('3 3 3') == '6\\n'\nassert solution('5 5 5') == '0\\n'"
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '3'"
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"3\", \"Invalid input\"\nassert solution(stdin) == \"6\", \"Invalid input\""
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 2 1') == '3'"
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '3\\n'\n"
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2 1\") == \"3\"\nassert solution(\"1 2 1\") == \"1\"\nassert solution(\"1 2 3\") == \"2\"\nassert solution(\"1 3 1\") == \"1\"\nassert solution(\"1 2 2\") == \"1\"\n"
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"3\\n\" + \"3\\n\" + \"6\\n\""
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == expected_output, f\"Expected {expected_output}, got {solution(sample_input)}\""
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1341 2412 1200 3112 2391\") == \"3 1\\n\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1341 2412 1200 3112 2391\") == \"3 1\""
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1341 2412 1200 3112 2391\") == \"3 1\\n1\"\nassert solution(\"5\\n1341 2412 1200 3112 2391\") == \"3 1\\n0\"\nassert solution(\"5\\n1341 2412 1200 3112 2391\") == \"3 1\\n2\"\nassert solution(\"5\\n1341 2412 1200 3112 2391\") == \"3 1\\n3\"\nassert solution(\"5\\n1341 2412 1200 3112 2391\") == \"3 1\\n4\"\nassert solution(\"5\\n1341 2412 1200 3112 2391\") == \"3 1\\n5\"\nassert solution(\"5\\n1341 2412 1200 3112 2391\") == \"3 1\\n6\"\nassert solution(\"5\\n1341 2412 1200 3112 2391\") == \"3 1\\n7\"\nassert solution(\"5\\n1341 2412 1200 3112 2391\") == \"3 1\\n8\"\nassert solution(\"5\\n1341 2412 1200 3112 2391\") == \"3 1\\n9\"\nassert solution(\"5\\n1341 2412 1200 3112 2391\") == \"3 1\\n10\"\nassert solution(\"5\\n1341 2412 1200 3112 2391\") == \"3 1\\n11\"\nassert solution(\"5\\n1341 2412 1200 3112 2391\") == \"3 1\\n12\"\nassert solution(\"5\\n1341 2412 1200 3112 2391\") == \"3 1\\n13\"\nassert solution(\"5\\n1341 2412 1200 3112 2391\") == \"3 1\\n14\"\nassert solution(\"5\\n1341 2412 1200 3112 2391\") == \"3 1\\n15\"\nassert solution(\"5\\n1341 2412 1200 3112 2391\") == \"3 1\\n16\"\nassert solution(\"5\\n1341 2412 1200 3112 2391\") == \"3 1\\n17\"\nassert solution(\"5\\n1341 2412 1200 3112 2391\") == \"3 1\\n18\"\nassert solution(\"5\\n1341 2412 1200 3112 2391\") == \"3 1\\n19\"\nassert solution(\"5\\n1341 2412 1200 3112 2391\") == \"3 1\\n20\"\nassert solution(\"5\\n1341 2412 1200 3112 2391\") == \"3 1\\n21\"\nassert solution(\"5\\n1341 2412 1200 3112 2391\") == \"3 1\\n22\"\nassert solution(\"5\\n1341 2412 1200 3112 2391\") == \"3 1\\n23\"\nassert solution(\"5\\n1341 2412 1200 3112 23"
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1341 2412 1200 3112 2391\") == \"3 1\""
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == '''\n"
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"got '{solution(stdin)}', expected '{expected}'\"\n"
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n10 20\n3 5\n1 3 7\n2 1 1\n2 3 2\n2 3 5\n3 2 4\n''') == '6'"
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == 6\nassert solution(\"10 20\\n5 10\\n2 3 7\\n2 3 5\\n3 2 4\") == 12\n"
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"6\\n\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n\") == \"6\\n\""
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4') == 6\nprint('All test cases passed.')"
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n\") == \"6\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n\") == \"6\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n\") == \"6\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n\") == \"6\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n\") == \"6\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n\") == \"6\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n\") == \"6\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n\") == \"6\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n\") == \"6\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n\") == \"6\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n\") == \"6\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n\") == \"6\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n\") == \"6\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n\") == \"6\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n\") == \"6\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n\") == \"6\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n\") == \"6\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n\") == \"6\"\nassert solution(\"10 20\\n3 5\\n1 3"
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"6\\n\""
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"6\\n6\""
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"6\"\nprint(\"All tests passed!\")\n\nSolution:\n\nThe given problem can be solved using the Dijkstra's algorithm. We can start by initializing a priority queue with all the nodes in the graph. Then, for each node, we will compare the distance of the current node to all the nodes in the queue. If the distance of the current node is smaller than the distance of the node in the queue, we will update the distance of the node in the queue to the distance of the current node and add the current node to the priority queue.\n\nAfter we have sorted the priority queue in ascending order, we will start from the front of the queue and explore the next node. If the distance of the node is greater than the distance of the previous node, we will update the distances of the previous node and all the nodes to the distance of the current node.\n\nWe will also keep track of the time at which the current node is called. We will start with a time of 0.\n\nFinally, we will return the time at which the current node is called.\n\nLet's implement the above approach in Python."
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n10 20\n3 5\n1 3 7\n2 1 1\n2 3 2\n2 3 5\n3 2 4\n\"\"\") == \"6\\n\""
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"6\\n\"\n"
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n2 ab b\\n1 b\") == \"0 1\\n-1 0\""
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\n2 ab b\\n1 b') == '0 1 -1\\n'"
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == ['0 1 ', '-1 0']\nassert solution() == ['0 1 ', '-1 0']\nassert solution() == ['0 1 ', '-1 0']\nassert solution() == ['0 1 ', '-1 0']\nassert solution() == ['0 1 ', '-1 0']\nassert solution() == ['0 1 ', '-1 0']\nassert solution() == ['0 1 ', '-1 0']\nassert solution() == ['0 1 ', '-1 0']\nassert solution() == ['0 1 ', '-1 0']\nassert solution() == ['0 1 ', '-1 0']\nassert solution() == ['0 1 ', '-1 0']\nassert solution() == ['0 1 ', '-1 0']\nassert solution() == ['0 1 ', '-1 0']\nassert solution() == ['0 1 ', '-1 0']\nassert solution() == ['0 1 ', '-1 0']\nassert solution() == ['0 1 ', '-1 0']\nassert solution() == ['0 1 ', '-1 0']\nassert solution() == ['0 1 ', '-1 0']\nassert solution() == ['0 1 ', '-1 0']\nassert solution() == ['0 1 ', '-1 0']\nassert solution() == ['0 1 ', '-1 0']\nassert solution() == ['0 1 ', '-1 0']\nassert solution() == ['0 1 ', '-1 0']\nassert solution() == ['0 1 ', '-1 0']\nassert solution() == ['0 1 ', '-1 0']\nassert solution() == ['0 1 ', '-1 0']\nassert solution() == ['0 1 ', '-1 0']\nassert solution() == ['0 1 ', '-1 0']\nassert solution() == ['0 1 ', '-1 0']\nassert solution() == ['0 1 ', '-1 0']\nassert solution() == ['0 1 ', '-1 0']\nassert solution() == ['0 1 ', '-1 0']\nassert solution() == ['0 1 ', '-1 0']\nassert solution() == ['0 1 ', '-1 0']\nassert solution() == ['0 1 ', '-1 0']\nassert solution() == ['0 1 ', '-1 0']\nassert solution() == ['0 1 ', '-1 0']\nassert solution() == ['0 1 ', '-1 0']\nassert solution() == ['0 1 ', '-1 0']\nassert solution() == ['0 1 ', '-1 0']\nassert solution() == ['0 1 ', '-1 0']\nassert solution() == ['0 1 ', '-1 0']\nassert solution() == ['0 1 ', '-1 0']\nassert solution() == ['0 1 ', '-1 0']\nassert solution() == ['0 1 ', '-1 0']\nassert solution() == ['0 1 ', '-1 0']\nassert solution() == ['0 1 ', '-1 0']\nassert solution() == ['0 1 ', '-1 0']\nassert solution() == ['0 1 ', '-1 0']\nassert solution() == ['0 1 ', '-1 0']\nassert solution() == ['0 1 ', '-1 0']\nassert solution() == ['0 1 ', '-1 0']\nassert solution() == ['0 1 ', '-1 0']\nassert solution() == ['0 1 ', '-1 0']\nassert solution() == ['0 1 ', '-1 0']\nassert solution() == ['0 1 ', '-1 0']\nassert solution() == ['0 1 ', '-1 0']\nassert solution() == ['0 1 ', '-1 0']\nassert solution() == ['0 1 ', '-1 0']\nassert solution() == ['0 1 ', '-1 0']\nassert solution() == ['0 1 ', '-1 0']\nassert solution() == ['0 1 ', '-1 0']\nassert solution() == ['0 1 ', '-1 0']\nassert solution() == ['0 1 ', '-1 0']\nassert solution() == ['0 1 ', '-1 0']\nassert solution() == ['0 1 ', '-1 0']\nassert solution() == ['0 1 ', '-1 0']\nassert solution() == ['0 1 ', '-1 0']\nassert solution() == ['0"
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(str(2)) == '0 1 -1'\nassert solution(str(3)) == '0 1 -1'\nassert solution(str(4)) == '0 1 -1'\nassert solution(str(5)) == '0 1 -1'\nassert solution(str(6)) == '0 1 -1'\nassert solution(str(7)) == '0 1 -1'\nassert solution(str(8)) == '0 1 -1'\nassert solution(str(9)) == '0 1 -1'\nassert solution(str(10)) == '0 1 -1'"
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n2 ab b\\n1\\n\") == \"0 1 -1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test case 1\\nstdin = \"\"\"2\\n2 ab b\\n1\\n\"\"\"\\nprint(solution(stdin))  # Output: 0 1 -1\\n\\n# Test case 2\\nstdin = \"\"\"2\\n1 b\\n\"\"\"\\nprint(solution(stdin))  # Output: -1 0\\n\\n# Test case 3\\nstdin = \"\"\"3\\n3 ab cd\\n2 b\\n\"\"\"\\nprint(solution(stdin))  # Output: -1 1 -1\\n\\n# Test case 4\\nstdin = \"\"\"4\\n2 ab c\\n2 b\\n\"\"\"\\nprint(solution(stdin))  # Output: -1 0 -1\\n\\n# Test case 5\\nstdin = \"\"\"2\\n1\\n\"\"\"\\nprint(solution(stdin))  # Output: -1 -1\\n\\n# Test case 6\\nstdin = \"\"\"2\\n3\\n\"\"\"\\nprint(solution(stdin))  # Output: -1 -1\\n\\n# Test case 7\\nstdin = \"\"\"3\\n1 ab\\n2\\n\"\"\"\\nprint(solution(stdin))  # Output: -1 -1\\n\\n# Test case 8\\nstdin = \"\"\"3\\n1 ac\\n2\\n\"\"\"\\nprint(solution(stdin))  # Output: -1 -1\\n\\n# Test case 9\\nstdin = \"\"\"2\\n1 a\\n2\\n\"\"\"\\nprint(solution(stdin))  # Output: -1 -1\\n\\n# Test case 10\\nstdin = \"\"\"4\\n1 abcd\\n2\\n\"\"\"\\nprint(solution(stdin))  # Output: -1 -1\\n\\n# Test case 11\\nstdin = \"\"\"4\\n1 abcd\\n1\\n\"\"\"\\nprint(solution(stdin))  # Output: -1 -1\\n\\n# Test case 12\\nstdin = \"\"\"5\\n1 abcd\\n1\\n\"\"\"\\nprint(solution(stdin))  # Output: -1 -1\\n\\n# Test case 13\\nstdin = \"\"\"5\\n1 abcd\\n3\\n\"\"\"\\nprint(solution(stdin))  # Output: -1 -1\\n\\n# Test case 14\\nstdin = \"\"\"5\\n1 abcd\\n4\\n\"\"\"\\nprint(solution(stdin))  # Output: -1 -1\\n\\n# Test case 15\\nstdin = \"\"\"5\\n1 abcd\\n5\\n\"\"\"\\nprint(solution(stdin))  # Output: -1 -1\\n\\n# Test case 16\\nstdin = \"\"\"5\\n1 abcd\\n6\\n\"\"\"\\nprint(solution(stdin))  # Output: -1 -1\\n\\n# Test case 17\\nstdin = \"\"\"5\\n1 abcd\\n7\\n\"\"\"\\nprint(solution(stdin))  # Output: -1 -1\\n\\n# Test case 18\\nstdin = \"\"\"5\\n1 abcd\\n8\\n\"\"\"\\nprint(solution(stdin))  # Output: -1 -1\\n\\n# Test case 19\\nstdin = \"\"\"5\\n1 abcd\\n9\\n\"\"\"\\nprint(solution(stdin))  # Output: -1 -1\\n\\n# Test case 20\\nstdin = \"\"\"5\\n1 abcd\\n10\\n\"\"\"\\nprint(solution(stdin))  # Output: -1 -1\\n\\n# Test case 21\\nstdin = \"\"\"5\\n1 abcd\\n11\\n\"\"\"\\nprint(solution(stdin))  # Output: -1 -1\\n\\n# Test case 22\\nstdin = \"\"\"5\\n1 abcd\\n12\\n\"\"\"\\nprint(solution(stdin))  # Output: -1 -1\\n\\n# Test case 23\\nstdin = \"\"\"5\\n1 abcd\\n13\\n\"\"\"\\nprint(solution(stdin))  # Output: -1 -1\\n\\n# Test case 24\\nstdin = \"\"\""
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n2 ab b\\n1 b') == '0 1 -1'\nassert solution('1\\n2 ab b\\n1 b') == '0 1 0'"
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n2 ab b\\n1 b\") == \"0 1 \\n-1 0\"\nassert solution(\"3\\n1 ab b\\n2 b\\n1 c\") == \"1 1 \\n-1 0\"\nassert solution(\"4\\n2 ab b\\n3 b\\n2 c\\n1 d\\n1 e\\n1 f\") == \"1 1 \\n-1 0\"\nassert solution(\"5\\n1 ab b\\n2 b\\n1 c\\n2 d\\n3 e\\n2 f\\n3 g\\n2 h\\n3 i\\n3 j\") == \"1 1 \\n-1 0\"\nassert solution(\"6\\n2 ab b\\n1 b\\n1 c\\n2 d\\n3 e\\n2 f\\n3 g\\n2 h\\n3 i\\n3 j\\n4 k\\n3 l\\n2 m\\n3 n\\n3 o\\n4 p\\n2 q\") == \"1 1 \\n-1 0\""
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2\\n2 ab b\\n1 b\\n') == '0 1 -1\\n'\nassert solution('2\\n1 2 ab\\n2 b\\n') == '0 1 0\\n'\nassert solution('2\\n3 abc\\n1 3 d\\n') == '0 1 2\\n'"
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(None) == \"\"\"\n0 1 \n-1 0\n\"\"\""
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\n2 ab b\\n1 b\\n') == '0 1 -1'\nassert solution('3\\nabc\\n') == '0 1 -1'\nassert solution('3\\nabc\\n123\\n') == '0 2 -1'\nassert solution('3\\nabc\\n123\\n123\\n') == '0 3 -1'\nassert solution('4\\nabc\\n123\\n123\\n') == '0 4 -1'\nassert solution('4\\nabc\\n123\\n123\\n') == '0 5 -1'\nassert solution('10\\nabc\\n123\\n123\\n123\\n') == '0 9 -1'\nassert solution('10\\nabc\\n123\\n123\\n123\\n') == '0 9 -1'\nassert solution('2\\n2 ab b\\n1 b\\n1 ab\\n') == '0 1 -1'\nassert solution('3\\nabc\\n123\\n123\\n123\\n') == '0 3 -1'\nassert solution('3\\nabc\\n123\\n123\\n123\\n') == '0 3 -1'\nassert solution('4\\nabc\\n123\\n123\\n123\\n') == '0 4 -1'\nassert solution('4\\nabc\\n123\\n123\\n123\\n') == '0 4 -1'\nassert solution('10\\nabc\\n123\\n123\\n123\\n') == '0 9 -1'\nassert solution('10\\nabc\\n123\\n123\\n123\\n') == '0 9 -1'"
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''2 4\n1 1 2\n2\n1 1 2\n2''') == '1\\n3\\n'\nassert solution('''1 1 1\n2 2 2\n3 3 3\n4 4 4\n''') == '1\\n3\\n'\nassert solution('''3 3 3\n4 4 4\n5 5 5\n6 6 6\n7 7 7\n''') == '2\\n6\\n'"
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 4\\n1 1 2\\n2\\n1 1 2\\n2\") == \"1\\n3\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 4\\n1 1 2\\n2\\n1 1 2\\n2\") == \"1\\n3\""
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 4\\n1 1 2\\n2\\n1 1 2\\n2\") == \"1\\n3\\ndef solution(stdin: str) -> str:\\npass\"\nassert solution(\"10 100000\\n100000\") == \"1\"\nassert solution(\"100000000000\") == \"1\""
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"3\""
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 4\\n1 1 2\\n2\\n1 1 2\\n2\") == \"1\\n3\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"10 5\\n1 1 2\\n2\\n1 1 3\\n3\\n2\") == \"1\\n3\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 4\\n1 1 2\\n2\\n1 1 2\\n2\\n\") == \"1\\n3\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\"3 4\\n1 1 2\\n2\\n1 1 2\\n2\\n\") == \"1\\n3\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\"2 4\\n1 1 2\\n2\\n1 1 2\\n2\\n\") == \"1\\n3\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output\n"
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Test failed. Expected {output}, but got {solution(input())}\""
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == '1'\nassert solution(4) == '3'"
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('travelling_salesman.txt', 'r')) == '7\\n'\n"
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"7\\n7\"\nprint(\"Test Passed\")\n"
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n0 5 2\\n5 0 4\\n2 4 0\") == 7\nassert solution(\"3\\n1 2\\n2 3\\n1 3\") == 6\nassert solution(\"1\\n1\") == 1\nassert solution(\"4\\n5\\n6\\n7\") == 7\nassert solution(\"3\\n1 1 2 1\\n2 3 4 1\\n1 3 4 2\\n2 4 5 3\\n1 5 6 4\\n3 6 7 5\\n4 7 8 6\\n5 8 9 7\") == 15\n"
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"7\\n\", \"Output should be 7\"\n"
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"7\\n\"\n"
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n0 5 2\\n5 0 4\\n2 4 0\") == \"7\\n\""
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"7\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 5 2\\n5 0 4\\n2 4 0\") == \"7\"\nassert solution(\"0 5 2\\n5 0 4\\n2 4 0\") == \"7\"\nassert solution(\"0 5 2\\n5 0 4\\n2 4 0\") == \"7\"\nassert solution(\"0 5 2\\n5 0 4\\n2 4 0\") == \"7\""
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 5 2\\n5 0 4\\n2 4 0\") == 7, \"Solution is not correct!\""
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"7\\n\""
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1099511627776) == 8\nassert solution(1099511627777) == 8\nassert solution(1099511627778) == 8\nassert solution(1099511627779) == 8\nassert solution(1099511627780) == 8\n\nfrom typing import List"
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1099511627776\") == \"8\"\n\nfrom typing import List"
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1099511627776) == 8, \"Sample Output: The output should be 8\""
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(str(1099511627776)) == \"8\\n\"\n"
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output() # Replace with your solution"
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1099511627776\") == \"8\", \"Incorrect Output: Expected '8', got '{}'\".format(solution(\"1099511627776\"))"
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1099511627776\") == \"8\"\n"
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1099511627776\") == \"8\\n\"  # Your code goes here"
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1099511627776\") == \"8\\n\"\nassert solution(\"1234567890\") == \"0\\n\"\nassert solution(\"1000000000000\") == \"0\\n\"\nassert solution(\"1000000000001\") == \"8\\n\"\nassert solution(\"1000000000002\") == \"4\\n\""
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1099511627776\") == \"8\", \"Test case 1 failed\"\nassert solution(\"123456789\") == \"0\", \"Test case 2 failed\""
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\nx..\\n.x.\\nx.x\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\nx..\\n.x.\\nx.x\") == \"2\"\n"
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\nx..\\n.x.\\nx.x\") == \"2\"\nassert solution(\"3 3\\nx..\\n.x.\\nx.x\\n\") == \"2\"\nassert solution(\"3 3\\nx..\\n.x.\\nx.x\\n1 2\") == \"1\""
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\nx..\\n.x.\\nx.x\") == \"2\"\nassert solution(\"5 5\\n....\\n.x.\\nx....\\nx.x\\n.x...\\n....\\n...x\\nx....\") == \"4\"\nassert solution(\"5 5\\n....\\n.x.\\nx....\\nx.x\\n.x...\\n....\\n...x\\nx....\") == \"5\"\nassert solution(\"5 5\\n....\\n.x.\\nx....\\nx.x\\n.x...\\n....\\n...x\\nx....\") == \"6\"\nassert solution(\"5 5\\n....\\n.x.\\nx....\\nx.x\\n.x...\\n....\\n...x\\nx....\") == \"7\"\nassert solution(\"5 5\\n....\\n.x.\\nx....\\nx.x\\n.x...\\n....\\n...x\\nx....\") == \"8\""
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\nx..\\n.x.\\nx.x\\n\") == \"2\"\nassert solution(\"5 4\\nxx..\\n.x.\\nx.x\\nx..\\n\") == \"1\""
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 3\\nx..\\n.x.\\nx.x') == '2'\nassert solution('5 5\\nx..x\\n..x..\\nx...\\nx...\\nx...\\nx...\\nx...') == '3'\nassert solution('7 7\\n.x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\n...x...x\\"
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '2\\n'\nprint('def solution(stdin: str) -> str: \\n    pass')"
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\nx..\\n.x.\\nx.x\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\nx..\\n.x.\\nx.x\\n\") == \"2\\n\"\nassert solution(\"4 4\\nx..\\n.x.\\nx.x\\n\") == \"2\\n\"\nassert solution(\"5 5\\nx..\\n.x.\\nx.x\\n\") == \"3\\n\""
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2\\n\""
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == expected_solution, f\"The solution provided is incorrect. Please provide the correct code to test the correctness of the solution.\""
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed for example {stdin}\"\n"
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0\\n\") == \"9\\n-1\\n5\\n6\""
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 5\n"
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0\") == \"9\\n-1\\n5\\n6\""
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0') == '9\\n-1\\n5\\n6\\n'"
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0') == '9\\n-1\\n5\\n6'\n"
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\"\n"
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == \"9\\n6\"\nassert solution(1) == \"5\"\nassert solution(2) == \"6\"\nassert solution(4) == \"-1\"\nassert solution(0) == \"5\""
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n5\n1 3 2\n2 5 2\n3 0 0\n4 2 4\n5 3 0\n''') == '9\\n-1\\n5\\n6\\n'\n\nassert solution('''\n5\n1 3 2\n2 5 2\n3 0 0\n4 2 4\n5 3 0\n6 5 1\n''') == '5\\n6\\n'\n\nassert solution('''\n5\n1 3 2\n2 5 2\n3 0 0\n4 2 4\n5 3 0\n7 4 1\n''') == '9\\n-1\\n5\\n6\\n'\n\nassert solution('''\n5\n1 3 2\n2 5 2\n3 0 0\n4 2 4\n5 3 0\n7 4 1\n8 5 2\n''') == '5\\n6\\n'\n\nassert solution('''\n5\n1 3 2\n2 5 2\n3 0 0\n4 2 4\n5 3 0\n7 4 1\n8 5 2\n9 4 0\n''') == '5\\n6\\n'"
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"91\"\n"
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\") == \"91\\n\"\n"
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\") == \"91\""
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20') == '91'"
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20') == '91'"
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\") == \"91\\n\"\nassert solution(\"5\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20 15\") == \"145\\n\""
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 91, \"Test failed: incorrect output.\""
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"91\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\") == \"91\"\nassert solution(\"1\\n10 100 100\") == \"1000\"\nassert solution(\"5\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\") == \"999\"\nassert solution(\"1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\") == 91, \"The solution for the given test case is incorrect.\""
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"15\", \"Expected output: 15, actual output: \" + str(solution(stdin))"
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == \"15\", \"Your solution is incorrect. Please check the example cases and the problem statement.\""
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 15, \"Test failed\""
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"15\", \"Expected output: 15\""
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(None) == 'Invalid input'\n\nfrom typing import List"
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Sample Input\") == \"15\\n\"\nassert solution(\"Sample Input\") == \"15\\n\"\nassert solution(\"Sample Input\") == \"15\\n\"\nassert solution(\"Sample Input\") == \"15\\n\"\nassert solution(\"Sample Input\") == \"15\\n\""
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\n15 20\\n0\\n1 1') == '15\\n'\nassert solution('2\\n15 20\\n0\\n1 1 2 3') == '15\\n'"
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('15 20\\n0\\n1 1') == 15, \"The output should be 15, but it's {}\".format(solution('15 20\\n0\\n1 1'))\nprint(\"All tests passed!\")"
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"15\", \"Test Failed\""
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n    2\n    15 20\n    0\n    1 1\n    ''') == '''\n    15\n    ''', \"Test case 1 failed\"\n\nassert solution('''\n    2\n    15 20\n    0\n    1 1\n    ''') == '''\n    15\n    ''', \"Test case 2 failed\""
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"impossible\"\nassert solution(stdin) == \"def solution(stdin: str) -> str:\n    pass\""
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"impossible\", \"Your solution is incorrect.\""
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"impossible\\n\", \"The output should be impossible.\""
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"impossible\"\n"
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98') == 'impossible'\nassert solution('1 1\\n2 2\\n3 3\\n4 4\\n5 5') == 'impossible'\nassert solution('5 2\\n3 1\\n2 2\\n1 1\\n2 3') == 'impossible'\nassert solution('3 5\\n2 4\\n1 3\\n2 2\\n3 1') == 'impossible'\nassert solution('5 4\\n3 1\\n2 2\\n1 1\\n2 3') == 'definitely'\n"
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98\") == \"impossible\"\nassert solution(\"5 5\\n1 2 250\\n2 3 100\\n1 4 100\\n3 4 50\") == \"definitely not possible\""
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98\") == \"impossible\""
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"impossible\"\nassert solution() == \"def solution(stdin: str) -> str:\n    pass\""
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Test case {i+1} failed: Expected '{output}', got '{solution(input())}'\"\n"
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Test case {i+1} failed. Expected output: {output}, but got: {solution(input())}\""
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == 1.000000000"
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == '1.000000000'\n"
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == '1.000000000'"
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == \"1.000000000\""
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == \"1.000000000\""
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == \"1.000000000\""
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n\") == \"1.000000000\\n\"\nassert solution(\"2\\n\") == \"2.000000000\\n\"\nassert solution(\"3\\n\") == \"3.000000000\\n\"\nassert solution(\"4\\n\") == \"4.000000000\\n\"\nassert solution(\"5\\n\") == \"5.000000000\\n\""
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == '1.000000000'"
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '1.000000000'\nassert solution(input()) == '1.000000000'\nassert solution(input()) == '1.000000000'\nassert solution(input()) == '1.000000000'\nassert solution(input()) == '1.000000000'"
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"1.000000000\"  # expected output"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\") == 115.000000000\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n101 4 11\") == 100.000000000\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n101 4 11\\n102 5 12\") == 100.000000000\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n101 4 11\\n102 5 12\\n103 6 13\") == 100.000000000\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n101 4 11\\n102 5 12\\n103 6 13\\n104 7 14\") == 100.000000000\nassert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n101 4 11\\n102 5 12\\n103 6 13\\n104 7 14\\n105 8 15\") == 100.000000000"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"115.000000000\", \"Test failed\"\n"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n') == '115.000000000'\nassert solution('200 10 10\\n15 99 98\\n40 3 2\\n90 10 9\\n') == '330.000000000'\nassert solution('300 10 10\\n15 99 98\\n40 3 2\\n90 10 9\\n') == '460.000000000'\nassert solution('400 10 10\\n15 99 98\\n40 3 2\\n90 10 9\\n') == '590.000000000'\nassert solution('500 10 10\\n15 99 98\\n40 3 2\\n90 10 9\\n') == '720.000000000'\nassert solution('600 10 10\\n15 99 98\\n40 3 2\\n90 10 9\\n') == '850.000000000'\nassert solution('700 10 10\\n15 99 98\\n40 3 2\\n90 10 9\\n') == '980.000000000'\nassert solution('800 10 10\\n15 99 98\\n40 3 2\\n90 10 9\\n') == '1110.000000000'\nassert solution('900 10 10\\n15 99 98\\n40 3 2\\n90 10 9\\n') == '1240.000000000'\nassert solution('1000 10 10\\n15 99 98\\n40 3 2\\n90 10 9\\n') == '1370.000000000'\nassert solution('1100 10 10\\n15 99 98\\n40 3 2\\n90 10 9\\n') == '1500.000000000'\nassert solution('1200 10 10\\n15 99 98\\n40 3 2\\n90 10 9\\n') == '1630.000000000'\nassert solution('1300 10 10\\n15 99 98\\n40 3 2\\n90 10 9\\n') == '1760.000000000'\nassert solution('1400 10 10\\n15 99 98\\n40 3 2\\n90 10 9\\n') == '1890.000000000'\nassert solution('1500 10 10\\n15 99 98\\n40 3 2\\n90 10 9\\n') == '2020.000000000'\nassert solution('1600 10 10\\n15 99 98\\n40 3 2\\n90 10 9\\n') == '2150.000000000'\nassert solution('1700 10 10\\n15 99 98\\n40 3 2\\n90 10 9\\n') == '2280.000000000'\nassert solution('180"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin='100 3 10\\n15 99 98\\n40 3 2\\n90 10 9') == 115.000000000\nassert solution(stdin='200 10 5\\n50 20 30') == 600.000000000\n"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"115.000000000\", \"The given code is incorrect.\""
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\") == \"115.000000000\"\n"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\") == 115.0"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == '''\nimport math\n\nn, p, c = map(int, input().split())"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\") == 115.0, \"Output incorrect\""
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\") == 115.0\n"
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"199.500000\"\nassert solution(open(\"input_2.txt\", \"r\")) == \"199.500000\"\nassert solution(open(\"input_3.txt\", \"r\")) == \"199.500000\"\nassert solution(open(\"input_4.txt\", \"r\")) == \"199.500000\"\nassert solution(open(\"input_5.txt\", \"r\")) == \"199.500000\"\n"
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '199.500000'"
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"2\n100 1 1\n100 1 1.5\n\"\"\"\n) == \"199.500000\\n\""
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"199.500000\\n\"\n"
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 199.500000, \"Incorrect output\""
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    2\n    100 1 1\n    100 1 1.5\n    \"\"\"\n) == \"199.500000\""
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n100 1 1\\n100 1 1.5\") == \"199.500000\""
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n100 1 1\\n100 1 1.5\") == \"199.500000\""
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\n100 1 1\\n100 1 1.5\\n') == '199.500000\\n'\nassert solution('1\\n100 1 1\\n100 1 1.5\\n') == '100.000000\\n'"
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\nr\"\"\"\n2 3\n1 2 3 4 5 6 7 8 9 10 11 12\n\"\"\"\n) == \"1\\n\""
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\\n\"\n"
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1\\n\", \"Your solution should return '1'.\""
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1\\n\" # Solution is correct\n"
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 1, \"Your solution is incorrect. Please check it.\""
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1\\n\", \"Incorrect output\"\n"
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '1', \"Output should be '1', but was '{}'\".format(solution())"
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '1' # your solution here"
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\\n\"\nassert solution(\"2 4\\n1 3 4 5 6 7 8 9 10 11 12\") == \"1\\n\"\nassert solution(\"3 4\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\\n\"\nassert solution(\"10 6\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\\n\"\nassert solution(\"2 2\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"0\\n\"\nassert solution(\"3 6\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\\n\""
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n2\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\\n\"\nassert solution(\"2\\n3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\\n\"\nassert solution(\"3\\n4\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\\n\"\nassert solution(\"4\\n5\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\\n\"\nassert solution(\"5\\n6\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\\n\"\nassert solution(\"6\\n7\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\\n\"\nassert solution(\"7\\n8\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\\n\"\nassert solution(\"8\\n9\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\\n\"\nassert solution(\"9\\n10\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\\n\"\nassert solution(\"10\\n11\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\\n\"\nassert solution(\"11\\n12\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\\n\"\nassert solution(\"12\\n13\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\\n\"\nassert solution(\"13\\n14\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\\n\"\nassert solution(\"14\\n15\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\\n\"\nassert solution(\"15\\n16\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\\n\"\nassert solution(\"16\\n17\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\\n\"\nassert solution(\"17\\n18\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\\n\"\nassert solution(\"18\\n19\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\\n\"\nassert solution(\"19\\n20\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\\n\"\nassert solution(\"20\\n21\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\\n\"\nassert solution(\"21\\n22\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\\n\"\nassert solution(\"22\\n23\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\\n\"\nassert solution(\"23\\n24\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\\n\"\nassert solution(\"24\\n2"
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"13\\n3 2 1 1\") == \"5\\n\"\n"
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"5\\n\", \"The solution is incorrect.\"\nassert solution(\"13\\n3 2 1 1\") == \"5\\n\", \"The solution is incorrect.\"\nassert solution(\"12\\n5 2 1 1\") == \"Impossible on a single line.\""
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"13\\n3 2 1 1\") == \"5\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"13\\n3 2 1 1\") == \"5\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == \"5\""
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"13\\n3 2 1 1\") == \"5\\n\"\n"
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('13\\n3 2 1 1\\n') == '5\\n'\nassert solution('10\\n1000000000 1000000000\\n') == 'Impossible on a single line.\\n'\nassert solution('10\\n1000000000 1000000000\\n') == 'Impossible on a single line.\\n'\nassert solution('10\\n1000000000 1000000000\\n') == 'Impossible on a single line.\\n'\nassert solution('10\\n1000000000 1000000000\\n') == 'Impossible on a single line.\\n'\nassert solution('10\\n1000000000 1000000000\\n') == 'Impossible on a single line.\\n'\nassert solution('10\\n1000000000 1000000000\\n') == 'Impossible on a single line.\\n'\nassert solution('10\\n1000000000 1000000000\\n') == 'Impossible on a single line.\\n'\nassert solution('10\\n1000000000 1000000000\\n') == 'Impossible on a single line.\\n'\nassert solution('10\\n1000000000 1000000000\\n') == 'Impossible on a single line.\\n'"
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"13\\n3 2 1 1\") == \"5\\n\"\nassert solution(\"10\\n1 10 50 100\") == \"2\\n\"\nassert solution(\"100000001\\n100000000 100000000 100000000 100000000\") == \"Impossible\\n\""
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"5\", \"Incorrect output\""
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('aabcad') == 'yes', 'The input \"aabcad\" is not valid.'\nassert solution('aba') == 'yes', 'The input \"aba\" is not valid.'\nassert solution('acd') == 'no', 'The input \"acd\" is valid.'\n\nfrom typing import List"
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"aabcad\") == \"yes\"\nassert solution(\"aba\") == \"no\"\nassert solution(\"acd\") == \"yes\"\n"
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"aabcad\") == \"yes\"\nassert solution(\"aba\") == \"yes\"\nassert solution(\"acd\") == \"no\""
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"aabcad\") == \"yes\"\nassert solution(\"aba\") == \"no\"\nassert solution(\"acd\") == \"no\""
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"aabcad\") == \"yes\"\nassert solution(\"aba\") == \"yes\"\nassert solution(\"acd\") == \"no\"\nassert solution(\"abcd\") == \"no\"\nassert solution(\"aaa\") == \"no\"\nassert solution(\"abbbccc\") == \"no\"\nassert solution(\"abcdabcd\") == \"yes\""
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"aabcad\") == \"yes\"\nassert solution(\"aba\") == \"no\"\nassert solution(\"acd\") == \"no\""
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"aabcad\\naba\\nacd\") == \"yes\"\nassert solution(\"aaa\\nbbb\\nccc\") == \"no\""
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aabcad\\naba\\nacd\") == \"yes\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"aaaaa\\nbbbb\\ncccc\\ndddd\\neeee\") == \"no\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"zazaz\\nzaaa\\nzzzz\\nzzaa\\nzzab\\nzza\\naaa\\naaaa\") == \"no\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('aabcad\\naba\\nacd') == 'yes'\nassert solution('aba\\nacd\\n') == 'no'\n"
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"yes\""
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\\n\") == \"5\\n\"\nassert solution(\"5 3\\n1 2\\n1 2\\n2 2\\n1 1\\n1 1\\n2 1\\n\") == \"3\\n\"\nassert solution(\"3 4\\n3 4\\n4 4\\n4 3\\n2 2\\n1 1\\n\") == \"1\\n\"\nassert solution(\"4 4\\n4 4\\n4 4\\n4 4\\n4 4\\n\") == \"2\\n\"\nassert solution(\"3 4\\n3 4\\n4 4\\n4 4\\n4 4\\n3 3\\n\") == \"1\\n\""
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\") == \"5\\n\"\nassert solution(\"5 4 3 2\\n3 1\\n1 3 2 4\\n5 2 6 7\") == \"4\\n\"\nassert solution(\"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\") == \"5\\n\"\nassert solution(\"5 4 3 2\\n3 1\\n1 3 2 4\\n5 2 6 7\") == \"4\\n\"\nassert solution(\"5 4 3 2\\n3 1\\n1 3 2 4\\n5 2 6 7\") == \"4\\n\"\nassert solution(\"5 4 3 2\\n3 1\\n1 3 2 4\\n5 2 6 7\") == \"4\\n\"\nassert solution(\"5 4 3 2\\n3 1\\n1 3 2 4\\n5 2 6 7\") == \"4\\n\""
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"5\"\n\nfrom typing import List"
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\") == \"5\\n\""
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"5\\n\""
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"5\\n\""
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == expected_solution, f\"The solution is {solution}, but the expected solution is {expected_solution}\"\n"
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9') == '5'\nassert solution('4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9') == '5'"
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\") == \"5\"\n"
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(str(int(input()) + 1)) == \"5\"\n"
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 2\\n2 4 same\\n3 5 same\\n\") == \"4\\n\"\n\nsolution(\"5 2\\n2 4 same\\n3 5 same\\n\")"
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == 4, \"The function solution has incorrect output.\""
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 2\\n2 4 same\\n3 5 same\") == 4\nassert solution(\"5 2\\n3 5 same\\n2 4 same\") == 2\nassert solution(\"5 2\\n2 4 different\\n3 5 different\") == 2\nassert solution(\"5 2\\n3 5 different\\n2 4 different\") == 2\nassert solution(\"5 2\\n1 3 same\\n1 2 different\\n3 4 same\\n3 5 different\\n2 4 different\") == 6\nassert solution(\"5 2\\n1 3 same\\n1 2 different\\n3 4 different\\n3 5 different\\n2 4 different\") == 6"
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"4\\n\"\nassert solution(input()) == \"4\\n\""
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 2\\n2 4 same\\n3 5 same\") == \"4\\n\"\n"
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2\\n2 4 same\\n3 5 same\\n\") == \"4\"\nassert solution(\"5 2\\n2 4\\n3 5 same\\n\") == \"3\"\nassert solution(\"5 2\\n2 4\\n3 5\\n\") == \"2\"\nassert solution(\"5 2\\n2 4\\n3 5\\n\") == \"1\"\n"
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 2\\n2 4 same\\n3 5 same\\n\") == \"4\"\n\nassert solution(\"5 2\\n1 4 same\\n3 5 different\\n\") == \"2\"\n\nassert solution(\"5 2\\n1 4 true\\n3 5 false\\n\") == \"4\""
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2\\n2 4 same\\n3 5 same\") == \"4\"\nassert solution(\"5 2\\n2 4 false\\n3 5 same\") == \"0\"\nassert solution(\"5 2\\n2 4 same\\n3 5 false\") == \"1\"\n"
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 2\\n2 4 same\\n3 5 same\") == 4\nassert solution(\"5 2\\n2 4 different\\n3 5 same\") == 0"
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 2\\n2 4 same\\n3 5 same\\n') == 4"
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 3, \"Your solution is incorrect. Please check the input and output examples.\"\n"
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 4\\n0 1\\n0 2\\n3 4\\n3 5\") == \"3\""
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution([3, 4, 5, 1, 2, 3]) == \"3\"\nassert solution([3, 4, 5, 1, 2, 4]) == \"3\"\nassert solution([3, 4, 5, 1, 2, 5]) == \"3\"\nassert solution([1, 2, 3, 4, 5]) == \"3\"\nassert solution([5, 4, 3, 2, 1]) == \"3\"\n"
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6 4\\n0 1\\n0 2\\n3 4\\n3 5') == 3\nassert solution('6 4\\n0 1\\n2 2\\n3 4\\n3 5') == 2\nassert solution('6 4\\n0 1\\n2 2\\n3 5\\n4 4') == 2\nassert solution('6 4\\n0 1\\n2 2\\n3 5\\n4 5') == 1\nassert solution('6 4\\n0 1\\n2 2\\n3 4\\n4 4') == 0\nassert solution('6 4\\n0 1\\n2 2\\n3 4\\n4 5') == 1\n"
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 4\\n0 1\\n0 2\\n3 4\\n3 5\\n\") == 3\nassert solution(\"6 5\\n0 1\\n0 2\\n3 4\\n3 5\\n\") == 3\nassert solution(\"6 4\\n1 2\\n3 4\\n3 5\\n\") == 3\nassert solution(\"6 4\\n0 1\\n4 3\\n3 5\\n\") == 3\nassert solution(\"6 4\\n0 1\\n3 2\\n5 4\\n\") == 3\n"
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 4\\n0 1\\n0 2\\n3 4\\n3 5\") == 3, \"Incorrect output for sample input\"\n"
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 4\\n0 1\\n0 2\\n3 4\\n3 5\\n\") == \"3\\n\""
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Test case failed: expected {output}, got {solution(input())}\""
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(['6', '4', '0', '1', '0', '2', '3', '4', '3', '5']) == '3'"
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 4\\n0 1\\n0 2\\n3 4\\n3 5\\n\") == 3"
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Incorrect output\\nexpected: {expected_output}\\nactual: {solution(input())}\"\n"
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR') == '9.0\\n6.5\\n2.5\\ndef solution(stdin: str) -> str:\n    pass'"
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Test Failed\""
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR') == '9.0\\n6.5\\n2.5'\nassert solution('1\\n1 1\\n2 2\\n3 3\\n4 4') == '1.0'\n"
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), \"Test failed\""
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR') == '9.0\\n6.5\\n2.5'"
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"9.0\\n6.5\\n2.5\"\n"
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR\") == \"9.0\\n6.5\\n2.5\\n\""
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Solution is incorrect. Expected: {output}, Received: {solution(input())}\""
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3 2\\nB 1 2\\nB 2 3\\nR 3 1\") == 1, \"Solution is incorrect\""
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3 2\\nB 1 2\\nB 2 3\\nR 3 1\\n\") == \"1\"\n"
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3 2\\nB 1 2\\nB 2 3\\nR 3 1\") == \"1\\n\"\nassert solution(\"3 4 2\\nB 1 2\\nB 2 3\\nR 3 1\") == \"0\\n\""
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '1', \"Incorrect solution\""
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 1\nprint(\"def solution(stdin: str) -> str:\")\nprint(\"    pass\")"
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt').read()) == '1\\n'\nprint(\"All tests passed!\")"
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3 2\\nB 1 2\\nB 2 3\\nR 3 1\") == 1\nassert solution(\"3 3 4\\nB 1 2\\nB 2 3\\nR 3 1\") == 0"
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 3 2\\nB 1 2\\nB 2 3\\nR 3 1') == '1'\nassert solution('3 4 2\\nB 1 2\\nB 2 3\\nR 3 2') == '0'\n"
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '1\\n', \"Expected output: 1\""
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 1\nassert solution() == 0"
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == '88'\nassert solution(7) == '5'\nassert solution(4) == '5'\nassert solution(5) == '5'\nassert solution(6) == '7'"
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"88\\n5\\n5\\n7\""
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 'Output', 'Test case failed'"
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"88\\n5\\n5\\n7\\n\"\n"
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '88\\n5\\n5\\n7', 'The function should return \"88\\n5\\n5\\n7\".'"
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_data) == output_data, f\"Test Case {test_case_index + 1} failed\" for test_case_index, input_data, output_data in enumerate(test_cases)"
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"88\\n5\\n5\\n7\", \"Test case 1 failed\""
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2\\n5 0 5\\n7 0 7\\n4\\n88\\n5\\n6\\n7') == '88\\n5\\n5\\n7\\n'\n"
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == expected_output, f\"Test case {i+1} failed: {solution(sample_input)}!= {expected_output}\" for i, (sample_input, expected_output) in enumerate(test_cases)"
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n5 0 5\\n7 0 7\\n4\\n88\\n5\\n6\\n7\\n\") == \"88\\n5\\n5\\n7\\n\""
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == 5\nassert solution(\"3 3 1 3\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == -1"
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\\n\") == 5\nassert solution(\"1 1 1 1\\n1\\n1\\n1\\n\") == -1\nassert solution(\"5 3 3 2\\n1\\n1\\n1\\n1\\n\") == -1"
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == 5\nassert solution(\"4 4 1 2\\n2\\n1 2 1\\n1 3 1\\n2 3 2\\n2 4 1\") == 10\nassert solution(\"5 5 1 2\\n2\\n1 2 1\\n1 3 1\\n2 3 1\\n2 4 2\") == -1\n"
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == 5\nprint(\"All tests passed!\")"
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == 5\nassert solution(\"1 2 10 3\\n2\\n2 3 1\") == 4\nassert solution(\"3 2 1 2\\n1\\n3 1 2\") == -1"
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 5\n"
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == 5\n"
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(stdin)}\""
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n    3 3 1 2\n    2\n    1 2 2\n    1 3 1\n    2 3 3''') == '5'"
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == 5\nassert solution(\"3 3 2 1\\n1\\n2 3 3\\n2 3 3\") == -1\nassert solution(\"3 3 1 1\\n1\\n2 3 3\\n2 3 3\") == -1\nassert solution(\"3 3 1 1\\n1\\n2 3 4\\n2 3 3\") == -1\nassert solution(\"3 3 1 1\\n1\\n2 3 3\\n2 4 3\") == -1"
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkovniz\", \"Incorrect output for the first example\"\n\nassert solution(\"C4\") == \"def\", \"Incorrect output for the second example\""
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkovniz\""
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"mirkovC4nizCC44\\nC4\") == \"mirkovniz\\ndef solution(stdin: str) -> str:\\n    return stdin\""
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"mirkovC4nizCC44C4\") == \"mirkovniz\"\n"
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"mirkovC4nizCC44\\nC4\\n\") == \"mirkovniz\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkovniz\"\nassert solution(\"C4\") == \"mirkovniz\""
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkovniz\""
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkovniz\""
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkovniz\"\n"
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkovniz\"\n"
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '32'"
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3, \"3 65\\n45 10\\n60 25\") == 32"
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 32, \"Your solution is incorrect.\""
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n3 65\\n45 10\\n60 25\") == \"32\\n\""
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 32\n"
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"32\"\n"
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 32"
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n3 65\\n45 10\\n60 25\") == 32\nprint(\"Test Passed\")"
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3, 3, 65, 45, 10, 60, 25) == 32, \"Incorrect output\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 32"
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"3\\n2\\n\""
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 2 0 3 1\") == \"3\\n2\""
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == sample_output, f\"Test case {sample_case_number} failed: expected {sample_output}, got {solution(sample_input)}\""
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 2 0 3 1\") == \"3\\n2\\n\"\n"
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n1 2 0 3 1') == '3\\n2\\n'\nassert solution('5\\n2 4 1 5 2') == '2\\n'\nassert solution('5\\n1 4 3 5 1') == '3\\n'\nassert solution('5\\n1 4 2 5 1') == '2\\n'\nassert solution('5\\n1 4 4 5 1') == '2\\n'"
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n1 2 0 3 1') == '3\\n2\\n'\n"
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 2 0 3 1\") == \"3\\n2\\n\""
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"3\\n2\\n\"\n"
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 2 0 3 1\") == \"3\\n2\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"2\\n\"\nassert solution(\"5\\n1 2 0 3 1\\n1 2 3 4 5\") == \"3\\n2\\n\"\nassert solution(\"5\\n1 2 0 3 1\\n1 2 3 4 5\\n1 2 0 3 1\") == \"3\\n2\\n\"\nassert solution(\"5\\n1 2 0 3 1\\n1 2 3 4 5\\n1 2 0 3 1\\n1 2 3 4 5\\n1 2 0 3 1\") == \"3\\n2\\n\"\nassert solution(\"5\\n1 2 0 3 1\\n1 2 3 4 5\\n1 2 0 3 1\\n1 2 3 4 5\\n1 2 0 3 1\\n1 2 3 4 5\\n1 2 0 3 1\\n1 2 3 4 5\\n1 2 0 3 1\\n1 2 3 4 5\\n1 2 0 3 1\\n1 2 3 4 5\\n1 2 0 3 1\\n1 2 3 4 5\\n1 2 0 3 1\\n1 2 3 4 5\\n1 2 0 3 1\\n1 2 3 4 5\\n1 2 0 3 1\\n1 2 3 4 5\\n1 2 0 3 1\\n1 2 3 4 5\\n1 2 0 3 1\\n1 2 3 4 5\\n1 2 0 3 1\\n1 2 3 4 5\\n1 2 0 3 1\\n1 2 3 4 5\\n1 2 0 3 1\\n1 2 3 4 5\\n1 2 0 3 1\\n1 2 3 4 5\\n1 2 0 3 1\\n1 2 3 4 5\\n1 2 0 3 1\\n1 2 3 4 5\\n1 2 0 3 1\\n1 2 3 4 5\\n1 2 0 3 1\\n1 2 3 4 5\\n1 2 0 3 1\\n1 2 3 4 5\\n1 2 0 3 1\\n1 2 3 4 5\\n1 2 0 3 1\\n1 2 3 4 5\\n1 2 0 3 1\\n1 2 3 4 5\\n1 2 0 3 1\\n1 2 3 4 5\\n1 2 0 3 1\\n1 2 3 4 5\\n1 2 0 3 1\\n1 2 3 4 5\\n1 2 0 3 1\\n1 2 3 4 5\\n1 2 0 3 1\\n1 2 3 4 5\\n1 2 0 3 1\\n1 2 3 4 5\\n1 2 0 3 1\\n1 2 3 4 5\\n1 2 0 3 1\\n1 2 3 4 5\\n1 2 0 3 1\\n1 2 3 4 5\\n1 2 0 3 1\\n1 2 3 4 5\\n1 2 0 3 1\\n1 2 3 4 5\\n1 2 0 3 1\\n1 2 3 4 5\\n1 2 0 3 1\\n1 2 3 4 5\\n1 "
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 2 0 3 1\\n\") == \"3\\n2\\n\"\nassert solution(\"6\\n2 0 1 3\\n\") == \"4\\n0\\n\"\nassert solution(\"7\\n4 0 2 1 3\\n\") == \"5\\n0\\n\"\nassert solution(\"8\\n1 1 1 0 0 3\\n\") == \"3\\n2\\n\"\nassert solution(\"9\\n1 0 0 0 0 1\\n\") == \"3\\n2\\n\"\nassert solution(\"10\\n0 0 0 0 0 0\\n\") == \"3\\n2\\n\""
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4') == '2\\n'\nprint(\"Test Passed\")"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '2', \"The answer is not correct.\""
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4') == 2\n"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4\") == 2"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4\") == 2\n"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    2 4 4\n    + 1 1\n    - 1 2\n    + 1 3\n    - 1 4\n\"\"\"\n) == \"2\\n\""
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution, \"Solution function not defined\""
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4\") == \"2\""
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''2\n1000000000 0\n1000000000 1''') == '500000004'\n\nfrom math import gcd"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"500000004\", \"The output should be '500000004', but it is '{}'\".format(solution(input()))"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1000000000 0\\n1000000000 1\") == 500000004\nassert solution(\"2\\n1000000000 0\\n1000000000 1\") == 500000004\nassert solution(\"2\\n1000000000 0\\n1000000000 1\") == 500000004"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1000000000 0\\n1000000000 1\\n\") == \"500000004\"\n\nfrom sympy import gcd, modinv"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"sample_input.txt\").read()) == \"500000004\\n\""
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n2\n1000000000 0\n1000000000 1\n''') == '500000004'\n\nassert solution('''\n3\n5 0\n1 1\n2 2\n''') == '32'\n\nassert solution('''\n4\n3 0\n0 1\n1 2\n2 3\n''') == '0.5'\n\nassert solution('''\n5\n1 0\n0 1\n1 2\n2 3\n3 4\n''') == '0'\n\nassert solution('''\n6\n1 0\n0 1\n1 2\n2 3\n3 4\n4 5\n''') == '0'\n\nassert solution('''\n7\n1 0\n0 1\n1 2\n2 3\n3 4\n4 5\n5 6\n''') == '0'\n\nassert solution('''\n8\n1 0\n0 1\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n''') == '0'\n\nassert solution('''\n9\n1 0\n0 1\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n''') == '0'\n\nassert solution('''\n10\n1 0\n0 1\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n''') == '0'"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1000000000 0\\n1000000000 1\") == 500000004\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt').read()) == \"500000004\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == 500000004\n"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '500000004'"
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"12\"\n"
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24') == '12\\n'\n"
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"12\"\n"
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24\") == \"12\\n\"\nassert solution(\"5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24\\n\") == \"12\\n\"\nassert solution(\"5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24\\n5 10\\n1 1 1 10\\n2 2 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24\\n\") == \"12\\n\"\nassert solution(\"5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24\\n10 5\\n1 1 1 10\\n2 2 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24\\n\") == \"12\\n\"\nassert solution(\"5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24\\n10 15\\n1 1 1 10\\n2 2 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24\\n\") == \"12\\n\"\nassert solution(\"5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24\\n10 20\\n1 1 1 10\\n2 2 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24\\n\") == \"12\\n\"\nassert solution(\"5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\"
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"12\\n\"\n"
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin='5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24') == '12', \"The correct output is not found.\"\nassert solution(stdin='5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24') == '12', \"The correct output is not found.\"\nassert solution(stdin='5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24') == '12', \"The correct output is not found.\""
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24') == '12', 'Sample Input\\n5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24'\n\nsolution('5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24') # Test case"
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24\\n\") == \"12\\n\""
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"12\", \"Incorrect output\""
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"\"\"\n12\n\"\"\""
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 19\\n15 5 3\\n12 4 4\\n20 10 5\") == \"3\\n\"\n"
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 19\\n15 5 3\\n12 4 4\\n20 10 5\\n\") == \"3\\n\"\nassert solution(\"4 3 1\\n2 3 1\\n1 2 1\\n1 1 2\\n2 2 2\\n3 3 3\\n\") == \"3\\n\"\nassert solution(\"1 1 1\\n1 1 1\\n1 1 1\\n\") == \"1\\n\""
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 19\\n15 5 3\\n12 4 4\\n20 10 5\\n') == '3'\n"
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"3\\n\""
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"3\"\nprint(\"All tests pass!\")"
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 19\\n15 5 3\\n12 4 4\\n20 10 5\\n\") == \"3\\n\"\nassert solution(\"2 3 1\\n3 4 2\\n4 5 3\\n\") == \"1\\n\"\nassert solution(\"3 2 1\\n2 3 2\\n3 4 3\\n\") == \"2\\n\"\nassert solution(\"4 5 6\\n5 6 7\\n6 7 8\\n\") == \"1\\n\"\nassert solution(\"1 1 1\\n1 1 1\\n1 1 1\\n\") == \"0\\n\""
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 19\\n15 5 3\\n12 4 4\\n20 10 5') == '3\\n'\n"
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '3\\n'"
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 19\\n15 5 3\\n12 4 4\\n20 10 5\") == \"3\\n\"\nassert solution(\"5 10 20\\n5 15 20\") == \"2\\n\"\nassert solution(\"7 20 20\\n10 10 50\\n5 5 5\") == \"3\\n\""
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"3\\n\"\n"
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 1, \"The correct output is not given.\""
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1\\n1 1') == '1\\n1'"
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == expected, f\"Solution should be '{expected}', but is '{solution}'.\"\n"
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"2\"  # One way to draw 3 bipartite graphs\nassert solution(4) == \"3\"  # Two ways to draw 4 bipartite graphs\nassert solution(10) == \"6\"  # Three ways to draw 10 bipartite graphs\nassert solution(100) == \"48\"  # Four ways to draw 100 bipartite graphs"
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 1"
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"1\"\n"
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 10816187995737014, \"The solution is incorrect.\""
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin: str) == \"1\\n1\\n\""
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"1\\n1 1\""
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"1\\n\"\n"
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"RGGR\\nGBGB\\nBYBY\\nYRYR\") == \"3\"\n"
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('RGGR\\nGBGB\\nBYBY\\nYRYR') == 3"
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"RGGR\") == 3, \"Expected solution to be 3, got {}\".format(solution(\"RGGR\"))"
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"RGGR\\nGBGB\\nBYBY\\nYRYR\") == \"3\"\n"
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"RGGR\\nGBGB\\nBYBY\\nYRYR\") == \"3\\n\""
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"RGGR\") == 3\nassert solution(\"GBGB\") == 4\nassert solution(\"BYBY\") == 4\nassert solution(\"YRYR\") == 5"
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"RGGR\\nGBGB\\nBYBY\\nYRYR\") == \"3\"\nassert solution(\"RGBG\\nGGBG\\nYBYG\\nBRBY\") == \"3\"\nassert solution(\"RBGR\\nGBBR\\nYRBG\\nBRBY\") == \"3\"\nassert solution(\"RGRB\\nGBRB\\nYGBR\\nBRBY\") == \"3\"\nassert solution(\"RGGB\\nGBRG\\nYGBR\\nBRBY\") == \"3\"\nassert solution(\"RGRB\\nGRBG\\nGBRB\\nYGBR\") == \"4\"\nassert solution(\"RGBG\\nGBRG\\nYGBR\\nBRBG\") == \"4\"\nassert solution(\"RBGR\\nGBRB\\nYGBR\\nBRBG\") == \"4\"\nassert solution(\"RGRB\\nGBRB\\nGRBG\\nYGBR\") == \"5\"\nassert solution(\"RGBG\\nGBRG\\nYGBR\\nBRBG\") == \"5\"\nassert solution(\"RBGR\\nGBRB\\nYGBR\\nBRBG\") == \"5\"\nassert solution(\"RGRB\\nGBRB\\nGRBG\\nYGBR\") == \"6\"\nassert solution(\"RGBG\\nGBRG\\nYGBR\\nBRBG\") == \"6\"\nassert solution(\"RBGR\\nGBRB\\nYGBR\\nBRBG\") == \"6\"\nassert solution(\"RGRB\\nGBRB\\nGRBG\\nYGBR\") == \"7\"\nassert solution(\"RGBG\\nGBRG\\nYGBR\\nBRBG\") == \"7\"\nassert solution(\"RBGR\\nGBRB\\nYGBR\\nBRBG\") == \"7\"\nassert solution(\"RGRB\\nGBRB\\nGRBG\\nYGBR\") == \"8\"\nassert solution(\"RGBG\\nGBRG\\nYGBR\\nBRBG\") == \"8\"\nassert solution(\"RBGR\\nGBRB\\nYGBR\\nBRBG\") == \"8\"\nassert solution(\"RGRB\\nGBRB\\nGRBG\\nYGBR\") == \"9\"\nassert solution(\"RGBG\\nGBRG\\nYGBR\\nBRBG\") == \"9\"\nassert solution(\"RBGR\\nGBRB\\nYGBR\\nBRBG\") == \"9\"\nassert solution(\"RGRB\\nGBRB\\nGRBG\\nYGBR\") == \"10\"\nassert solution(\"RGBG\\nGBRG\\nYGBR\\nBRBG\") == \"10\"\nassert solution(\"RBGR\\nGBRB\\nYGBR\\nBRBG\") == \"10\"\nassert solution(\"RGRB\\nGBRB\\nGRBG\\nYGBR\") == \"11\"\nassert solution(\"RGBG\\nGBRG\\nYGBR\\nBRBG\") == \"11\"\nassert solution(\"RBGR\\nGBRB\\nYGBR\\nBRBG\") == \"11\"\nassert solution(\"RGRB\\nGBRB\\nGRBG\\nYGBR\") == \"12\"\nassert solution(\"RGBG\\nGBRG\\nYGBR\\nBRBG\") == \"12\"\nassert solution(\"RBGR\\nGBRB\\nYGBR\\nBRBG\") == \"12\"\nassert solution(\"RGRB\\nGBRB\\nGRBG\\nYGBR\") == \"13\"\nassert solution(\"RGBG\\nGBRG\\nYGBR\\nBRBG\") == \"13\"\nassert solution(\"RBGR\\nGBRB\\nYGBR\\nBRBG\") == \"13\"\nassert solution(\"RGRB\\nGBRB\\nGRBG\\nYGBR\") == \"14\"\nassert solution(\"RGBG\\nGBRG\\nYGBR\\nBRBG\") == \"14\"\nassert solution(\"RBGR\\nGBRB\\nYGBR\\nBRBG\") == \"14\"\nassert solution(\"RGRB\\nGBRB\\nGRBG\\nYGBR\") == \"15\"\nassert solution(\"RGBG\\nGBRG\\nYGBR\\nBRBG\") == \"15\"\nassert solution(\"RBGR\\nGBRB\\nYGBR\\nBRBG\") == \"15\"\nassert solution(\"RGRB\\nGBRB"
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"RGGR\\nGBGB\\nBYBY\\nYRYR\") == 3, \"Expected output: 3\\nReceived: {}\".format(solution(\"RGGR\\nGBGB\\nBYBY\\nYRYR\"))\n"
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('RGGR\\nGBGB\\nBYBY\\nYRYR') == '3'\n"
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"RGGR\\nGBGB\\nBYBY\\nYRYR\") == \"3\""
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n-2 -1 0 1 2\\n2 1 0 -1 -2') == 'AAAAA'"
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"AAAAA\"\n"
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"AAAAA\"\n"
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n-2 -1 0 1 2\\n2 1 0 -1 -2\") == \"AAAAA\""
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n-2 -1 0 1 2\\n2 1 0 -1 -2\") == \"AAAAA\""
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n-2 -1 0 1 2\\n2 1 0 -1 -2\") == \"AAAAA\"\n"
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n-2 -1 0 1 2\\n2 1 0 -1 -2\") == \"AAAAA\\n\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    5\n    2 -1 0 1 2\n    -2 -1 0 1 2\n\"\"\".strip()\n) == \"AAAAA\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\n    \"\"\"\n    5\n    2 -1 0 1 2\n    1 0 -1 -2\n    0 0 1 2 -1\n\"\"\".strip()\n) == \"AAAAA\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\n    \"\"\"\n    5\n    2 -1 0 1 2\n    1 0 -1 -2\n    0 0 1 2 -1\n    2 -2 -1 1 2\n\"\"\".strip()\n) == \"BBAAB\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\n    \"\"\"\n    5\n    2 -1 0 1 2\n    1 0 -1 -2\n    0 0 1 2 -1\n    2 -2 -1 1 2\n    0 0 0 -1 2\n\"\"\".strip()\n) == \"BBAAB\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n-2 -1 0 1 2\\n2 1 0 -1 -2\") == \"AAAAA\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"5\\n-3 -1 0 1 2\\n2 1 0 -1 -2\") == \"BBBBB\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"5\\n-2 -1 0 1 2\\n-1 0 1 2 3\") == \"AABBA\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"5\\n-2 -1 0 1 2\\n2 1 0 -1 -2\") == \"BBBBB\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"5\\n-1 -1 0 1 2\\n2 1 0 -1 -2\") == \"AAAAB\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n-2 -1 0 1 2\\n2 1 0 -1 -2\") == \"AAAAA\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}\\nActual output: {solution(input())}\"\n\nN = int(input())\nM = int(input())\n\npoints = [tuple(map(int, input().split())) for _ in range(2)]"
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('6 3\\n2 3\\n4 0\\n0 2\\n6 1\\n') == 'IMPOSSIBLE'\nassert solution('7 6\\n5 1\\n1 2\\n2 3\\n3 4\\n') == 'IMPOSSIBLE'\nassert solution('7 6\\n5 1\\n1 2\\n2 3\\n3 4\\n5 5\\n') == 'IMPOSSIBLE'\nassert solution('7 6\\n5 1\\n1 2\\n2 3\\n3 4\\n6 5\\n') == 'IMPOSSIBLE'\nassert solution('7 6\\n5 1\\n1 2\\n2 3\\n3 4\\n6 4\\n') == 'IMPOSSIBLE'\nassert solution('7 6\\n5 1\\n1 2\\n2 3\\n3 4\\n6 3\\n') == 'IMPOSSIBLE'\nassert solution('7 6\\n5 1\\n1 2\\n2 3\\n3 4\\n5 4\\n') == 'IMPOSSIBLE'\nassert solution('7 6\\n5 1\\n1 2\\n2 3\\n3 4\\n4 5\\n') == 'IMPOSSIBLE'\nassert solution('7 6\\n5 1\\n1 2\\n2 3\\n3 4\\n4 4\\n') == 'IMPOSSIBLE'\nassert solution('7 6\\n5 1\\n1 2\\n2 3\\n3 4\\n4 3\\n') == 'IMPOSSIBLE'\nassert solution('7 6\\n5 1\\n1 2\\n2 3\\n3 4\\n4 2\\n') == 'IMPOSSIBLE'\nassert solution('7 6\\n5 1\\n1 2\\n2 3\\n3 4\\n4 1\\n') == 'IMPOSSIBLE'\nassert solution('7 6\\n5 1\\n1 2\\n2 3\\n3 4\\n4 0\\n') == 'IMPOSSIBLE'\nassert solution('7 6\\n5 1\\n1 2\\n2 3\\n3 4\\n3 5\\n') == 'IMPOSSIBLE'\nassert solution('7 6\\n5 1\\n1 2\\n2 3\\n3 4\\n3 4\\n') == 'IMPOSSIBLE'\nassert solution('7 6\\n5 1\\n1 2\\n2 3\\n3 4\\n3 3\\n') == 'IMPOSSIBLE'\nassert solution('7 6\\n5 1\\n1 2\\n2 3\\n3 4\\n3 2\\n') == 'IMPOSSIBLE'\nassert solution('7 6\\n5 1\\n1 2\\n2 3\\n3 4\\n3 1\\n') == 'IMPOSSIBLE'\nassert solution('7 6\\n5 1\\n1 2\\n2 3\\n3 4\\n3 0\\n') == 'IMPOSSIBLE'\nassert solution('7 6\\n5 1\\n1 2\\n2 3\\n3 4\\n2 5\\n') == 'IMPOSSIBLE'\nassert solution('7 6\\n5 1\\n1 2\\n2 3\\n3 4\\n2 4\\n') == 'IMPOSSIBLE'\nassert solution('7 6\\n5 1\\n1 2\\n2 3\\n3 4\\n2 3\\n') == 'IMPOSSIBLE'\nassert solution('7 6\\n5 1\\n1 2\\n2 3\\n3 4\\n2 2\\n') == 'IMPOSSIBLE'\nassert solution('7 6\\n5 1\\n1 2\\n2 3\\n3 4\\n2 1\\n') == 'IMPOSSIBLE'\nassert solution('7 6\\n5 1\\n1 2\\n2 3\\n3 4\\n2 0\\n') == 'IMPOSSIBLE'\nassert solution('7 6\\n5 1"
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n6 3\n2 3\n4 0\n0 2\n6 1\n\"\"\") == \"IMPOSSIBLE\"\n\nassert solution(\n\"\"\"\n7 4\n4 2\n1 3\n5 0\n0 1\n\"\"\") == \"IMPOSSIBLE\"\n\nassert solution(\n\"\"\"\n6 4\n2 3\n4 0\n0 2\n6 1\n\"\"\") == \"IMPOSSIBLE\"\n\nassert solution(\n\"\"\"\n3 4\n2 3\n4 0\n0 2\n6 1\n\"\"\") == \"IMPOSSIBLE\"\n\nassert solution(\n\"\"\"\n6 3\n2 3\n4 0\n0 2\n5 1\n\"\"\") == \"IMPOSSIBLE\"\n\nassert solution(\n\"\"\"\n2 3\n4 0\n0 2\n6 1\n\"\"\") == \"IMPOSSIBLE\"\n\nassert solution(\n\"\"\"\n6 3\n2 3\n4 0\n0 2\n4 1\n\"\"\") == \"IMPOSSIBLE\"\n\nassert solution(\n\"\"\"\n2 3\n4 0\n0 2\n4 1\n\"\"\") == \"IMPOSSIBLE\"\n\nassert solution(\n\"\"\"\n6 3\n2 3\n4 0\n0 2\n4 2\n\"\"\") == \"IMPOSSIBLE\"\n\nassert solution(\n\"\"\"\n2 3\n4 0\n0 2\n4 2\n\"\"\") == \"IMPOSSIBLE\"\n\nassert solution(\n\"\"\"\n6 3\n2 3\n4 0\n0 2\n5 1\n\"\"\") == \"IMPOSSIBLE\"\n\nassert solution(\n\"\"\"\n2 3\n4 0\n0 2\n5 1\n\"\"\") == \"IMPOSSIBLE\"\n\nassert solution(\n\"\"\"\n6 3\n2 3\n4 0\n0 2\n6 2\n\"\"\") == \"IMPOSSIBLE\"\n\nassert solution(\n\"\"\"\n2 3\n4 0\n0 2\n6 2\n\"\"\") == \"IMPOSSIBLE\"\n\nassert solution(\n\"\"\"\n6 3\n2 3\n4 0\n0 2\n6 3\n\"\"\") == \"IMPOSSIBLE\"\n\nassert solution(\n\"\"\"\n2 3\n4 0\n0 2\n6 3\n\"\"\") == \"IMPOSSIBLE\"\n\nassert solution(\n\"\"\"\n6 3\n2 3\n4 0\n0 2\n6 4\n\"\"\") == \"IMPOSSIBLE\"\n\nassert solution(\n\"\"\"\n2 3\n4 0\n0 2\n6 4\n\"\"\") == \"IMPOSSIBLE\"\n\nassert solution(\n\"\"\"\n6 3\n2 3\n4 0\n0 2\n5 1\n\"\"\") == \"IMPOSSIBLE\"\n\nassert solution(\n\"\"\"\n2 3\n4 0\n0 2\n5 1\n\"\"\") == \"IMPOSSIBLE\"\n\nassert solution(\n\"\"\"\n6 3\n2 3\n4 0\n0 2\n6 3\n\"\"\") == \"IMPOSSIBLE\"\n\nassert solution(\n\"\"\"\n2 3\n4 0\n0 2\n6 3\n\"\"\") == \"IMPOSSIBLE\"\n\nassert solution(\n\"\"\"\n6 3\n2 3\n4 0\n0 2\n6 4\n\"\"\") == \"IMPOSSIBLE\"\n\nassert solution(\n\"\"\"\n2 3\n4 0\n0 2\n6 4\n\"\"\") == \"IMPOSSIBLE\"\n\nassert solution(\n\"\"\"\n6 3\n2 3\n4 0\n0 2\n6 2\n\"\"\") == \"IMPOSSIBLE\"\n\nassert solution(\n\"\"\"\n2 3\n4 0\n0 2\n6 2\n\"\"\") == \"IMPOSSIBLE\"\n\nassert solution(\n\"\"\"\n6 3\n2 3\n4 0\n0 2\n4 1\n\"\"\") == \"IMPOSSIBLE\"\n\nassert solution(\n\"\"\"\n2 3\n4 0\n0 2\n4 1\n\"\"\") == \"IMPOSSIBLE\"\n\nassert solution(\n\"\"\"\n6 3\n2 3\n4 0\n0 2\n4 2\n\"\"\") == \"IMPOSSIBLE\"\n\nassert solution(\n\"\"\"\n2 3\n4 0\n0 2\n4 2\n\"\"\") == \"IMPOSSIBLE\"\n\nassert solution(\n\"\"\"\n6 3\n2 3\n4 0\n0 2\n5 1\n\"\"\") =="
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"6 3\\n2 3\\n4 0\\n0 2\\n6 1\\n\"\n) == \"IMPOSSIBLE\""
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 3\\n2 3\\n4 0\\n0 2\\n6 1\") == \"IMPOSSIBLE\"\nassert solution(\"6 3\\n1 1\\n4 1\\n3 3\\n1 3\\n2 4\\n4 2\") == \"1\"\nassert solution(\"6 3\\n2 3\\n4 0\\n0 2\\n6 1\") == \"IMPOSSIBLE\"\nassert solution(\"6 3\\n2 3\\n4 0\\n0 2\\n6 1\") == \"1\"\nassert solution(\"6 3\\n2 3\\n4 0\\n0 2\\n6 1\") == \"IMPOSSIBLE\"\nassert solution(\"6 3\\n2 3\\n4 0\\n0 2\\n6 1\") == \"1\""
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(6, 3) == \"IMPOSSIBLE\"\n\nimport math"
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('6 3\\n2 3\\n4 0\\n0 2\\n6 1') == 'IMPOSSIBLE'\n\nHere's the code to solve the problem:\n\n```python\n"
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 3\\n2 3\\n4 0\\n0 2\\n6 1\\n\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(2) == \"IMPOSSIBLE\"\nassert solution(6, 3) == \"IMPOSSIBLE\"\nassert solution(2, 3, 4, 0, 6, 1) == \"IMPOSSIBLE\"\nassert solution(3, 3) == \"1\"\nassert solution(3, 4, 5, 6) == \"2\""
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == \"IMPOSSIBLE\" # you can add more tests for other cases"
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 5\\naustria\\nautocorrect\\nprogram\\nprogramming\\ncomputer\\nautocorrelation\\nprogramming\\ncompetition\\nyzx\\naustria\\n\") == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"10 10\\napple\\nbanana\\npapaya\\nbananas\\n\") == \"10\\n4\\n10\\n4\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"4 4\\nhello\\nworld\\nhello\\n\") == \"4\\n4\\n4\\n4\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"10 20\\nsuperman\\nspiderman\\nunknown\\n\") == \"20\\n10\\n20\\n10\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"10 10\\napple\\nbanana\\npapaya\\nbananas\\n\") == \"10\\n4\\n10\\n4\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"4 4\\nhello\\nworld\\nhello\\n\") == \"4\\n4\\n4\\n4\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"10 20\\nsuperman\\nspiderman\\nunknown\\n\") == \"20\\n10\\n20\\n10\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"austria\") == \"12\"\nassert solution(\"autocorrect\") == \"12\"\nassert solution(\"program\") == \"11\"\nassert solution(\"programming\") == \"12\"\nassert solution(\"computer\") == \"11\"\nassert solution(\"autocorrelation\") == \"12\"\nassert solution(\"programming\") == \"11\"\nassert solution(\"competition\") == \"11\"\nassert solution(\"zyx\") == \"3\"\n"
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 5\\naustria\\nautocorrect\\nprogram\\nprogramming\\ncomputer\\nautocorrelation\\nprogramming\\ncompetition\\nyzx\\naustria\") == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str: pass\\n\"\nassert solution(\"5 5\\nhello\\nworld\\ny\\nother\\nSample Input: 5 5\\nhello\\nworld\\ny\\nother\\nSample Output: 12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str: pass\\n\") == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str: pass\\n\"\nassert solution(\"5 5\\ncat\\nbat\\ncats\\nSample Input: 5 5\\ncat\\nbat\\ncats\\nSample Output: 12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str: pass\\n\") == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str: pass\\n\""
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"12\", \"Test case 1 failed\"\nassert solution() == \"4\", \"Test case 2 failed\"\nassert solution() == \"11\", \"Test case 3 failed\"\nassert solution() == \"3\", \"Test case 4 failed\"\nassert solution() == \"2\", \"Test case 5 failed\"\nassert solution() == \"def solution(stdin: str) -> str:\\n    pass\", \"Test case 6 failed\""
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"12\\n4\\n11\\n3\\n2\\n\"\n"
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution"
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 5\\naustria\\nautocorrect\\nprogram\\nprogramming\\ncomputer\\nautocorrelation\\nprogramming\\ncompetition\\nyzx\\naustria\") == \"12\\n4\\n11\\n3\\n2\"\nassert solution(\"5 5\\nb\\nb\\nbe\\n\\n\") == \"0\\n1\"\nassert solution(\"5 5\\nb\\n\\nb\\nbe\\n\\n\") == \"0\\n1\"\nassert solution(\"5 5\\nb\\n\\n\\nb\\nbe\\n\\n\") == \"0\\n1\"\nassert solution(\"5 5\\nb\\n\\n\\n\\nb\\nbe\\n\\n\") == \"0\\n1\"\nassert solution(\"5 5\\nb\\n\\n\\n\\n\\nbe\\n\\n\") == \"0\\n1\"\nassert solution(\"5 5\\nb\\n\\n\\n\\n\\nbe\\n\\n\") == \"0\\n1\""
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n    5 5\n        austria\n        autocorrect\n        program\n        programming\n        computer\n        autocorrelation\n        programming\n        competition\n        zyx\n        austria\n''') == '''\n    12\n    4\n    11\n    3\n    2\n'''\n"
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 5\\naustria\\nautocorrect\\nprogram\\nprogramming\\ncomputer\\nautocorrelation\\nprogramming\\ncompetition\\nyzx\\naustria') == '12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n', 'The solution is correct.'\nassert solution('5 5\\naustria\\nautocorrect\\nprogram\\nprogramming\\ncomputer\\nautocorrelation\\nprogramming\\ncompetition\\nyzx\\naustria\\n') == '12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n', 'The solution is correct.'"
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 5\\naustria\\nautocorrect\\nprogram\\nprogramming\\ncomputer\\nautocorrelation\\nprogramming\\ncompetition\\nyx\\naustria\") == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test 1\"\n\nassert solution(\"5 5\\naustria\\nautocorrect\\nprogram\\nprogramming\\ncomputer\\nautocorrelation\\nprogramming\\ncompetition\\nyx\\naustria\\n\") == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test 2\"\n\nassert solution(\"5 5\\naustria\\nautocorrect\\nprogram\\nprogramming\\ncomputer\\nautocorrelation\\nprogramming\\ncompetition\\nyx\\naustria\\n\") == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test 3\"\n\nassert solution(\"5 5\\naustria\\nautocorrect\\nprogram\\nprogramming\\ncomputer\\nautocorrelation\\nprogramming\\ncompetition\\nyx\\naustria\\n\") == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test 4\"\n\nassert solution(\"5 5\\naustria\\nautocorrect\\nprogram\\nprogramming\\ncomputer\\nautocorrelation\\nprogramming\\ncompetition\\nyx\\naustria\\n\") == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test 5\""
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n0 1 1\") == 3\nprint(\"All tests passed!\")"
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Incorrect output. Expected '{output()}', got '{solution(input())}'.\"\n"
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=3) == 3\nprint(\"All tests passed!\")"
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n0 1 1') == 3\nassert solution('0\\n1 1 1') == 0\nassert solution('10\\n1 2 2') == 12"
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n0 1 1\") == 3\nassert solution(\"4\\n0 1 1\") == 4\nassert solution(\"5\\n0 1 1\") == 5\nassert solution(\"6\\n0 1 1\") == 5\nassert solution(\"7\\n0 1 1\") == 6\nassert solution(\"8\\n0 1 1\") == 7\nassert solution(\"9\\n0 1 1\") == 8\nassert solution(\"10\\n0 1 1\") == 9\nassert solution(\"11\\n0 1 1\") == 11\nassert solution(\"12\\n0 1 1\") == 12\nassert solution(\"13\\n0 1 1\") == 13\nassert solution(\"14\\n0 1 1\") == 13\nassert solution(\"15\\n0 1 1\") == 14\nassert solution(\"16\\n0 1 1\") == 15\nassert solution(\"17\\n0 1 1\") == 15\nassert solution(\"18\\n0 1 1\") == 15\nassert solution(\"19\\n0 1 1\") == 16\nassert solution(\"20\\n0 1 1\") == 17\nassert solution(\"21\\n0 1 1\") == 17\nassert solution(\"22\\n0 1 1\") == 17\nassert solution(\"23\\n0 1 1\") == 18\nassert solution(\"24\\n0 1 1\") == 19\nassert solution(\"25\\n0 1 1\") == 19\nassert solution(\"26\\n0 1 1\") == 20\nassert solution(\"27\\n0 1 1\") == 20\nassert solution(\"28\\n0 1 1\") == 21\nassert solution(\"29\\n0 1 1\") == 22\nassert solution(\"30\\n0 1 1\") == 22\nassert solution(\"31\\n0 1 1\") == 23\nassert solution(\"32\\n0 1 1\") == 23\nassert solution(\"33\\n0 1 1\") == 24\nassert solution(\"34\\n0 1 1\") == 24\nassert solution(\"35\\n0 1 1\") == 25\nassert solution(\"36\\n0 1 1\") == 25\nassert solution(\"37\\n0 1 1\") == 26\nassert solution(\"38\\n0 1 1\") == 27\nassert solution(\"39\\n0 1 1\") == 27\nassert solution(\"40\\n0 1 1\") == 28\nassert solution(\"41\\n0 1 1\") == 29\nassert solution(\"42\\n0 1 1\") == 29\nassert solution(\"43\\n0 1 1\") == 30\nassert solution(\"44\\n0 1 1\") == 30\nassert solution(\"45\\n0 1 1\") == 31\nassert solution(\"46\\n0 1 1\") == 31\nassert solution(\"47\\n0 1 1\") == 32\nassert solution(\"48\\n0 1 1\") == 32\nassert solution(\"49\\n0 1 1\") == 33\nassert solution(\"50\\n0 1 1\") == 33\nassert solution(\"51\\n0 1 1\") == 34\nassert solution(\"52\\n0 1 1\") == 34\nassert solution(\"53\\n0 1 1\") == 35\nassert solution(\"54\\n0 1 1\") == 35\nassert solution(\"55\\n0 1 1\") == 36\nassert solution(\"56\\n0 1 1\") == 37\nassert solution(\"57\\n0 1 1\") == 37\nassert solution(\"58\\n0 1 1\") == 38\nassert solution(\"59\\n0 1 1\") == 39\nassert solution(\"60\\n0 1 1\") == "
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(10, [1,2,3,2,1,3,1,1,1]) == 3\nassert solution(12, [1,2,3,2,1,3,1,1,1]) == 12\nassert solution(5, [2,1,2,1,2]) == 6\nassert solution(12, [1,2,3,2,1,3,1,1,2,3,2]) == 12\nassert solution(12, [1,2,3,2,1,3,1,1,1,1,2]) == 12\nassert solution(12, [1,2,3,2,1,3,1,1,1,1,2,3]) == impossible"
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n0 1 1\\n') == 3, \"Expected 3, got {}\".format(solution('3\\n0 1 1\\n'))\nassert solution('0\\n1\\n') == 1, \"Expected 1, got {}\".format(solution('0\\n1\\n'))\nassert solution('2\\n0 1 1\\n') == 2, \"Expected 2, got {}\".format(solution('2\\n0 1 1\\n'))\nassert solution('2\\n0 0 1\\n') == 1, \"Expected 1, got {}\".format(solution('2\\n0 0 1\\n'))\nassert solution('3\\n1 1 1\\n') == 3, \"Expected 3, got {}\".format(solution('3\\n1 1 1\\n'))\nassert solution('4\\n0 0 0\\n') == 4, \"Expected 4, got {}\".format(solution('4\\n0 0 0\\n'))\nassert solution('4\\n0 1 1\\n') == 12, \"Expected 12, got {}\".format(solution('4\\n0 1 1\\n'))\nassert solution('5\\n0 0 1\\n') == 1, \"Expected 1, got {}\".format(solution('5\\n0 0 1\\n'))\nassert solution('5\\n0 0 2\\n') == 2, \"Expected 2, got {}\".format(solution('5\\n0 0 2\\n'))\nassert solution('5\\n0 0 3\\n') == 1, \"Expected 1, got {}\".format(solution('5\\n0 0 3\\n'))\nassert solution('5\\n0 0 4\\n') == 2, \"Expected 2, got {}\".format(solution('5\\n0 0 4\\n'))\nassert solution('6\\n0 0 2\\n') == 3, \"Expected 3, got {}\".format(solution('6\\n0 0 2\\n'))\nassert solution('6\\n0 0 3\\n') == 2, \"Expected 2, got {}\".format(solution('6\\n0 0 3\\n'))\nassert solution('6\\n0 0 4\\n') == 3, \"Expected 3, got {}\".format(solution('6\\n0 0 4\\n'))\nassert solution('6\\n0 1 1\\n') == 12, \"Expected 12, got {}\".format(solution('6\\n0 1 1\\n'))\nassert solution('6\\n0 1 2\\n') == 11, \"Expected 11, got {}\".format(solution('6\\n0 1 2\\n'))\nassert solution('6\\n0 1 3\\n') == 12, \"Expected 12, got {}\".format(solution('6\\n0 1 3\\n'))\nassert solution('6\\n0 1 4\\n') == 11, \"Expected 11, got {}\".format(solution('6\\n0 1 4\\n'))\nassert solution('7\\n0 1 2\\n') == 12, \"Expected 12, got {}\".format(solution('7\\n0 1 2\\n'))\nassert solution('7\\n0 1 3\\n') == 11, \"Expected 11, got {}\".format(solution('7\\n0 1 3\\n'))\nassert solution('7\\n0 1 4\\n') == 12, \"Expected 12, got {}\".format(solution('7\\n0 1 4\\n'))\nassert solution('7\\n0 1 5\\n') == 11, \"Expected 11, got {}\".format(solution('7\\n0 1 5\\n'))\nassert solution('7\\n0 1 6\\n') == 12, \"Expected 12, got {}\".format(solution('7\\n0 1 6\\n'))\nassert solution('7\\n0 1 7\\n') == 11, \"Expected 11, got {}\".format(solution('7\\n0 1 7\\n'))\nassert solution('7\\n0 1 8\\n') == 12, \"Expected 12, got {}\".format"
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected, f\"Solution({stdin})!= expected({expected})\"\nfor i in range(1, 13):\n    assert solution(f\"{i}\") == i, f\"Solution({i})!= expected({i})\"\n"
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"3\""
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"3\\n0 1 1\") == \"3\\n3\\n\\n\"\nassert solution(stdin=\"1\\n1\") == \"1\\n1\\n\\n\"\nassert solution(stdin=\"10\\n1 2 3 4 5 6 7 8 9\") == \"12\\n12\\n\\n\"\nassert solution(stdin=\"11\\n1 2 3 4 5 6 7 8 9 10\") == \"12\\n12\\n\\n\"\nassert solution(stdin=\"12\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"impossible\\nimpossible\\n\\n\""
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"Pre Post In Post In Pre\"\nassert solution(\"BIGEDCJFAH\") == \"HFBJCDEGIA\"\nassert solution(\"BIGEDCJFAH\") == \"IGEDCJBAFH\""
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"Pre Post In Post In Pre\"\nassert solution(\"BIGEDCJFAH\") == \"Pre Post In Post In Pre\""
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"Pre Post In Post In Pre\", \"Sample Input HFBIGEDCJA, Expected Output Pre Post In Post In Pre, but got: \" + solution(\"HFBIGEDCJA\")\nassert solution(\"BIGEDCJFAH\") == \"In Pre In In In In Post Pre\", \"Sample Input BIGEDCJFAH, Expected Output In Pre In In In In Post Pre, but got: \" + solution(\"BIGEDCJFAH\")\nassert solution(\"BIGEDCJFAH\") == \"In Pre In In In In Post Pre\", \"Sample Input BIGEDCJFAH, Expected Output In Pre In In In In Post Pre, but got: \" + solution(\"BIGEDCJFAH\")"
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"Pre Post In Post In Pre\"\nassert solution(\"BIGEDCJFAH\") == \"HFBJCDEGIA\"\nassert solution(\"BIGEDCJFAH\") == \"IGEDCJBAFH\""
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"Pre Post In Post In Pre\"\nassert solution(\"BIGEDCJFAH\") == \"HFBJCDEGIA\"\nassert solution(\"BIGEDCJFAH\") == \"IGEDCJBAFH\""
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"Pre Post In Post In Pre\"\nassert solution(\"BIGEDCJFAH\") == \"HFBJCDEGIA\"\nassert solution(\"IGEDCJBAFH\") == \"IGEDCJBAFH\""
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin='HFBIGEDCJA\\nBIGEDCJFAH\\nBIGEDCJFAH\\n') == 'Pre Post In Post In Pre\\nHFBJCDEGIA\\nBIGEDCJFAH\\nIGEDCJBAFH\\n'"
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"Pre Post In Post In Pre\"\nassert solution(\"BIGEDCJFAH\") == \"IGEDCJBAFH\"\nassert solution(\"BIGEDCJFAH\") == \"HFBJCDEGIA\""
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"Pre Post In Post In Pre\", \"HFBIGEDCJA\"\nassert solution(\"BIGEDCJFAH\") == \"Pre In In Pre In Pre Post Post\", \"BIGEDCJFAH\"\nassert solution(\"BIGEDCJFAH\") == \"Pre In In Pre In Pre Post Post\", \"BIGEDCJFAH\"\n"
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"Pre Post In Post In Pre\", \"Expected: Pre Post In Post In Pre, but got: \" + solution(\"HFBIGEDCJA\")\nassert solution(\"BIGEDCJFAH\") == \"Pre Post In Post In Pre\", \"Expected: Pre Post In Post In Pre, but got: \" + solution(\"BIGEDCJFAH\")\nassert solution(\"BIGEDCJFAH\") == \"Pre Post In Post In Pre\", \"Expected: Pre Post In Post In Pre, but got: \" + solution(\"BIGEDCJFAH\")"
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"10\\n\"\n"
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\") == 10\n"
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 10"
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"10\\n\"\nassert solution(stdin) == \"10\\n\""
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=input()) == expected, f\"Expected: '{expected}', but got: '{solution(stdin=input())}'\""
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 10"
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0') == '10\\n'\n"
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\") == 10\nassert solution(\"2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\") == 10\nassert solution(\"1\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\") == 10\nassert solution(\"1\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\") == 10\nassert solution(\"1\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\") == 10"
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == sample_output"
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 0 100 100\\n30 30 60 60\") == 10000.00, \"The correct output should be 10000.00.\""
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"10000.00\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == sample_output, f\"Output: {solution(sample_input)}, Expected Output: {sample_output}\""
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '10000.00'"
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('0 0 100 100\\n30 30 60 60') == '10000.00'"
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 0 100 100\\n30 30 60 60\") == 10000.00, \"Input incorrect. Expected 10000.00, got {}\".format(solution(\"0 0 100 100\\n30 30 60 60\"))"
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(b'''\n2\n0 0 100 100\n30 30 60 60\n''') == '10000.00'"
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 0 100 100\\n30 30 60 60\") == 10000.0\nassert solution(\"0 0 100 100\\n30 30 60 60\\n40 40 50 50\") == 20000.0\nassert solution(\"0 0 100 100\\n30 30 60 60\\n40 40 50 50\\n60 60 80 80\") == 160000.0\nassert solution(\"0 0 100 100\\n30 30 60 60\\n40 40 50 50\\n60 60 80 80\\n70 70 90 90\") == 540000.0"
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"10000.00\\n\", \"Test case 1 failed\""
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"10000.00\"\nassert solution(\"0 0 100 100\\n30 30 60 60\") == \"10000.00\""
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n1 3\\n4 5\\n2 4\") == \"5\\n\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == 5"
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n1 3\\n4 5\\n2 4\\n\") == \"5\\n\"\nassert solution(\"100000 0\\n\") == \"999999999999999898\\n\""
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n1 3\\n4 5\\n2 4\") == \"5\\n\"\nassert solution(\"100000 100000\") == \"1000000007\\n\""
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"5\\n\", \"The expected output is incorrect.\""
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 5"
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n1 3\\n4 5\\n2 4\") == 5\n"
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n1 3\\n4 5\\n2 4\") == \"5\\n\""
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n1 3\\n4 5\\n2 4\") == 5\n"
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n1 3\\n4 5\\n2 4\") == 5\nprint(\"All test cases passed\")"
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == \"2095\""
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == \"2095\\n\"\nassert solution(\"11 13 17\\n5 2 4\\n10 5 15\") == \"199\\n\"\nassert solution(\"11 13 17\\n5 2 4\\n100 10 5\") == \"1995\\n\""
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"11 13 17\\n5 2 4\\n0 0 0\\n\") == \"2095\"\n"
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == \"2095\\n\""
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('11 13 17\\n5 2 4\\n0 0 0') == '2095'\n\nimport math"
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2095\"\nassert solution(stdin) == \"2095\"\nassert solution(stdin) == \"2095\"\nassert solution(stdin) == \"2095\"\nassert solution(stdin) == \"2095\"\nassert solution(stdin) == \"2095\"\nassert solution(stdin) == \"2095\""
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == \"2095\\n\""
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('11 13 17\\n5 2 4\\n0 0 0\\n') == '2095'\nassert solution
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2095\\n\"\n"
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('11 13 17\\n5 2 4\\n0 0 0') == '2095'\nassert solution('37 17 29\\n2 3 2\\n10 10 10') == '511'\nassert solution('23 13 19\\n1 1 1\\n3 3 3') == '2'"
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"var a = \\\"Gon\\\";var b = a;var c = `My name is ${a}`;print c;print `My name is ${b}`;end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"print \\\"Gon\\\";print `My name is ${\\\"Gon\\\"}`;end.\") == \"My name is Gon\"\nassert solution(\"var a = \\\"Gon\\\";var b = `My name is ${a}`;print b;end.\") == \"My name is Gon\"\nassert solution(\"var a = 1;var b = a;print a;print b;end.\") == \"1\\n1\"\nassert solution(\"var a = 'hello';var b = a;print a;print b;end.\") == \"'hello'\\n'hello'\"\nassert solution(\"var a = 123;var b = a;print a;print b;end.\") == \"123\\n123\"\nassert solution(\"var a = 12345;var b = a;print a;print b;end.\") == \"12345\\n12345\"\nassert solution(\"var a = 1234567890;var b = a;print a;print b;end.\") == \"1234567890\\n1234567890\"\nassert solution(\"var a = 12345678901234567890;var b = a;print a;print b;end.\") == \"12345678901234567890\\n12345678901234567890\"\nassert solution(\"var a = '12345678901234567890';var b = a;print a;print b;end.\") == \"'12345678901234567890'\\n'12345678901234567890'\"\nassert solution(\"var a = 'hello world';var b = a;print a;print b;end.\") == \"'hello world'\\n'hello world'\"\nassert solution(\"var a = 'hello world123';var b = a;print a;print b;end.\") == \"'hello world123'\\n'hello world123'\"\nassert solution(\"var a = 'hello world12345678901234567890';var b = a;print a;print b;end.\") == \"'hello world12345678901234567890'\\n'hello world12345678901234567890'\"\nassert solution(\"var a = 'hello world123456789012345678901234567890';var b = a;print a;print b;end.\") == \"'hello world123456789012345678901234567890'\\n'hello world123456789012345678901234567890'\"\nassert solution(\"var a = 'hello world1234567890123456789012345678901234567890';var b = a;print a;print b;end.\") == \"'hello world1234567890123456789012345678901234567890'\\n'hello world1234567890123456789012345678901234567890'\"\nassert solution(\"var a = 'hello world12345678901234567890123456789012345678901234567890';var b = a;print a;print b;end.\") == \"'hello world12345678901"
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('var a = \"Gon\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.') == 'My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str: \\n    pass\\n'\nassert solution('print 1; print 2; print 3; print 4; print 5;') == '1\\n2\\n3\\n4\\n5\\n'\nassert solution('print \"Hello, world!\";') == 'Hello, world!\\n'\nassert solution('end.') == ''"
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input) == expected, f\"Output is '{solution(input)}' but expected '{expected}'\"\n"
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"print 1; print 2; print 3; end.\") == \"1\\n2\\n3\\n\"\nassert solution(\"print 1+2; print 3-4; print 5*6; end.\") == \"12\\n-2\\n36\\n\"\nassert solution(\"var a = 1; var b = 2; var c = a + b; print c; end.\") == \"3\\n\"\nassert solution(\"var a = 1; var b = 2; var c = a - b; print c; end.\") == \"1\\n\"\nassert solution(\"var a = 1; var b = 2; var c = a * b; print c; end.\") == \"2\\n\"\nassert solution(\"var a = 1; var b = 2; var c = a / b; print c; end.\") == \"0.5\\n\"\nassert solution(\"var a = 1; var b = 2; var c = a % b; print c; end.\") == \"1\\n\"\nassert solution(\"var a = \\\"Hello, world!\\\"; var b = a.length; print b; end.\") == \"13\\n\"\nassert solution(\"var a = \\\"Hello, world!\\\"; var b = a.substring(0, 5); print b; end.\") == \"Hello\\n\"\nassert solution(\"var a = \\\"Hello, world!\\\"; var b = a.substring(2); print b; end.\") == \"lo, world!\\n\"\nassert solution(\"var a = \\\"Hello, world!\\\"; var b = a.indexOf(\\\"llo\\\"); print b; end.\") == \"4\\n\"\nassert solution(\"var a = \\\"Hello, world!\\\"; var b = a.lastIndexOf(\\\"llo\\\"); print b; end.\") == \"4\\n\"\nassert solution(\"var a = 1; var b = 2; var c = a & b; print c; end.\") == \"1\\n\"\nassert solution(\"var a = 1; var b = 2; var c = a | b; print c; end.\") == \"3\\n\"\nassert solution(\"var a = 1; var b = 2; var c = a ^ b; print c; end.\") == \"1\\n\"\nassert solution(\"var a = 1; var b = 2; var c = a << b; print c; end.\") == \"4\\n\"\nassert solution(\"var a = 1; var b = 2; var c = a >> b; print c; end.\") == \"1\\n\"\nassert solution(\"var a = \\\"Gon\\\"; var b = \\\"is a little bit\\\"; var c = a.concat(b); print c; end.\") == \"Gonis a little bit\\n\"\nassert solution(\"var a = \\\"Gon\\\"; var b = \\\"is a little bit\\\"; var c = a.substring(3); print c; end.\") == \"is a little bit\\n\"\nassert solution(\"var a = \\\"Gon\\\"; var b = \\\"is a little bit\\\"; var c = a.substring(1, 3); print c; end.\") == \"Gon\\n\"\nassert solution(\"var a = 1; var b = 2; var c = a < b; print c; end.\") == \"True\\n\"\nassert solution(\"var a = 1; var b = 2; var c = a <= b; print c; end.\") == \"True\\n\"\nassert solution(\"var a = 1; var b = 2; var c = a > b; print c; end.\") == \"False\\n\"\nassert solution(\"var a = 1; var b = 2; var c = a >= b; print c; end.\") == \"False\\n\"\nassert solution(\"var a = 1; var b = 2; var c = a == b; print c; end.\") == \"True\\n\"\nassert solution(\"var a = 1; var b = 2; var c = a!= b; print c; end.\") == \"False\\n\"\nassert solution(\"var a = \\\"Gon\\\"; var b = \\\"is a little bit\\\"; var c = a.toUpperCase(); print c; end.\") == \"GONIS"
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(f\"var a = \\\"Gon\\\";var b = a;var c = `My name is {a}`;print c;print `My name is {b}`\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(f\"var a = \\\"Gon\\\";var b = a;var c = `My name is {a}`;print c;print `My name is {b}`\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(f\"var a = \\\"Gon\\\";var b = a;var c = `My name is {a}`;print c;print `My name is {b}`\") == \"My name is Gon\\nMy name is Gon\""
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}` end.\") == \"My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == sample_output, f\"Test failed for sample input: {sample_input}\\nExpected output: {sample_output}\\nOutput: {solution(sample_input)}\""
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n7 8\\n10\") == \"fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\""
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n7 8\\n10\") == \"fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndef solution(stdin: str) -> str:\n    pass\""
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"impossible\""
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n2\n7 8\n10\n\"\"\") == \"\"\"\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\n"
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n7 8\\n10') == 'fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0'\nassert solution('3\\n10 20 30\\n50') == 'fill 0\\ndiscard 1\\nfill 1\\ndiscard 2\\nfill 2\\ntransfer 2 0\\ntransfer 2 1\\ndiscard 2\\ntransfer 2 0\\ntransfer 2 1\\ndiscard 2\\ntransfer 2 0\\ndiscard 2\\ntransfer 2 0\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 2\\ntransfer 2 0\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 2\\ntransfer 2 0\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 2\\ntransfer 2 0\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 2\\ntransfer 2 0\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 2\\ntransfer 2 0\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 2\\ntransfer 2 0\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 2\\ntransfer 2 0\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 2\\ntransfer 2 0\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 2\\ntransfer 2 0\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 2\\ntransfer 2 0\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 2\\ntransfer 2 0\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 2\\ntransfer 2 0\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 2\\ntransfer 2 0\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 2\\ntransfer 2 0\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 2\\ntransfer 2 0\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 2\\ntransfer 2 0\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 2\\ntransfer 2 0\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 2\\ntransfer 2 0\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 2\\ntransfer 2 0\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 2\\ntransfer 2 0\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 2\\ntransfer 2 0\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 2\\ntransfer 2 0\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 2\\ntransfer 2 0\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 2\\ntransfer 2 0\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 2\\ntransfer 2 0\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 2\\ntransfer 2 0\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 2\\ntransfer 2 0\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 2\\ntransfer 2 0\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 2\\ntransfer 2 0\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 2\\ntransfer 2 0\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 2\\ntransfer 2 0\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 2\\ntransfer 2 0\\ntransfer 2 1\\ntransfer 2 0\\ndiscard"
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, got: {solution(input())}\""
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n7 8\\n10\\n\") == \"fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n7 8\\n10\") == \"fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution('2\\n7 8\\n10') == 'fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution('2\\n7 8\\n10') == 'fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution('2\\n7 8\\n10') == 'fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution('2\\n7 8\\n10') == 'fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution('2\\n7 8\\n10') == 'fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution('2\\n7 8\\n10') == 'fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution('2\\n7 8\\n10') == 'fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution('2\\n7 8\\n10') == 'fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution('2\\n7 8\\n10') == 'fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution('2\\n7 8\\n10') == 'fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution('2\\n7 8"
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\n7 8\\n10\\nSample Input:\\n2\\n7 8\\n10\\nSample Output:\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndef solution(stdin: str) -> str:\\n    pass\\n') == 'fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\n'"
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 4 3\") == \"27\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 4 3\") == \"27\"\n"
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(4, 3, 3) == 27\nassert solution(10, 4, 3) == 27\nassert solution(10, 2, 4) == 27\nassert solution(10, 2, 5) == 27\nassert solution(10, 4, 4) == 27\nassert solution(10, 5, 4) == 27\nassert solution(10, 5, 5) == 27\nassert solution(10, 2, 6) == 27\nassert solution(10, 3, 6) == 27\nassert solution(10, 4, 6) == 27\nassert solution(10, 5, 6) == 27\nassert solution(10, 2, 7) == 27\nassert solution(10, 3, 7) == 27\nassert solution(10, 4, 7) == 27\nassert solution(10, 5, 7) == 27"
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 4 3\") == \"27\""
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 4 3\") == \"27\"\n\nfrom typing import List"
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"27\"\n"
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 4 3\") == 27"
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 4 3\") == 27, \"The maximum amount of damage you can cause to the enemy is not correct.\"\n"
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('10 4 3') == 27, \"Test case 1 failed\""
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\") == \"3\\n-1\\n4\\n\""
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3\") == \"3\\n\"\nassert solution(\"2 3 1\") == \"1\\n\"\nassert solution(\"2 2 2 2\") == \"4\\n\"\nassert solution(\"1 3 3\") == \"3\\n\"\nassert solution(\"2 1 1 1\") == \"-1\\n\""
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"3\\n-1\\n4\""
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\") == \"3\\n-1\\n4\\n\""
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\") == \"3\\n-1\\n4\\n\""
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input) == expected_output, f\"Test case failed: {input}, expected output: {expected_output}\"\n"
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\") == \"3\\n-1\\n4\"\nassert solution(\"5 3\\n1 2 3\\n4\") == \"1\"\nassert solution(\"5 3\\n1 2 3\\n4\\n1 2 3\\n4\") == \"1\"\nassert solution(\"5 3\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\") == \"-1\"\nassert solution(\"5 3\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\n1 2 3\\n4\\"
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '3\\n-1\\n4'\n"
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Incorrect output. Expected: {output}, Got: {solution(input())}\""
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1000 3000 1000\") == \"533.3333333333\\n\", \"Your solution is incorrect.\""
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1000 3000 1000\") == \"533.3333333333\", \"The given solution is incorrect.\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"533.3333333333\""
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1000 3000 1000\") == \"533.3333333333\\n\", \"Incorrect output\"\n"
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 533.3333333333, \"Your solution is incorrect.\""
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1000 3000 1000\") == \"533.3333333333\"\nassert solution(\"1000 2000 1000\") == \"666.6666666667\"\nassert solution(\"1000 1000 1000\") == \"1000\"\nassert solution(\"1000 1000 500\") == \"478.3333333333\"\nassert solution(\"1000 500 500\") == \"92.6666666667\"\n"
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '533.3333333333\\n', 'Expected Output:\\n533.3333333333\\nGot:\\n' + solution(stdin)\n"
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"533.3333333333\"\n"
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1000 3000 1000\") == \"533.3333333333\"\nassert solution(\"1000 5000 2000\") == \"666.6666666667\"\nassert solution(\"1000 7000 3000\") == \"999.9999999999\""
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n1000 3000 1000\n\"\"\"\n) == \"533.3333333333\\n\""
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '14.14'\n"
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 0\\n10 0\\n10 10\\n') == 14.14\nprint('All tests passed!')"
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 0\\n10 0\\n10 10') == '14.14'"
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 0\\n10 0\\n10 10\\n\") == \"14.14\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"5 0\\n20 0\\n20 20\\n30 0\\n\") == \"14.14\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 0\\n10 0\\n10 10\") == \"14.14\"\n"
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 0\\n10 0\\n10 10\\n\") == \"14.14\"\n"
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 0\\n10 0\\n10 10\") == 14.14, \"Output is incorrect.\""
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 0\\n10 0\\n10 10\\n') == '14.14'\n"
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 0\\n10 0\\n10 10\") == \"14.14\"\nassert solution(\"2 0\\n3 0\\n4 0\") == \"14.14\"\nassert solution(\"2 0\\n10 0\\n10 10\\n1 0\") == \"14.14\"\nassert solution(\"2 0\\n10 0\\n10 10\\n1 0\\n2 0\\n3 0\\n4 0\") == \"14.14\"\nassert solution(\"2 0\\n10 0\\n10 10\\n1 0\\n2 0\\n3 0\\n4 0\\n5 0\") == \"14.14\""
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 0\\n10 0\\n10 10') == 14.14, \"Your solution is incorrect.\"\nprint(\"Your solution is correct.\")"
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n123456 14323 1700000\\n123458 41412 1900000\\n123457 15221 1800000\\n123456\\n123458\\n123457\") == \"123457 0\\n0 2\\n123458 1\"\nassert solution(\"3 3\\n123456 14323 1700000\\n123458 41412 1900000\\n123457 15221 1800000\\n123456\\n123458\\n123457\") == \"123457 0\\n0 2\\n123458 1\""
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == sample_output"
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n123456 14323 1700000\\n123458 41412 1900000\\n123457 15221 1800000\\n123456\\n123458\\n123457\") == \"123457 0\\n0 2\\n123458 1\"\nassert solution(\"10 1\\n123456 14323 1700000\\n123458 41412 1900000\\n123457 15221 1800000\\n123456\\n123458\\n123457\") == \"123456 0\\n123458 1\""
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"123457 0\\n0 2\\n123458 1\\n\", \"Solution is incorrect.\"\n"
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n123456 14323 1700000\\n123458 41412 1900000\\n123457 15221 1800000\\n123456\\n123458\\n123457\") == \"123457 0\\n0 2\\n123458 1\"\nassert solution(\"3 3\\n123456 14323 1700000\\n123458 41412 1900000\\n123457 15221 1800000\\n123456\\n123458\\n123457\") == \"123457 0\\n0 2\\n123458 1\"\nassert solution(\"3 3\\n123456 14323 1700000\\n123458 41412 1900000\\n123457 15221 1800000\\n123456\\n123458\\n123457\") == \"123457 0\\n0 2\\n123458 1\"\n"
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 3\\n123456 14323 1700000\\n123458 41412 1900000\\n123457 15221 1800000\\n123456\\n123458\\n123457') == '123457 0\\n0 2\\n123458 1'"
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n123456 14323 1700000\\n123458 41412 1900000\\n123457 15221 1800000\\n123456\\n123458\\n123457\\n\") == \"123457 0\\n0 2\\n123458 1\\n\""
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"123456 14323 1700000\\n123458 41412 1900000\\n123457 15221 1800000\\n123456\\n123458\\n123457\") == \"123457 0\\n0 2\\n123458 1\"\nassert solution(\"123456\\n123458\\n123457\") == \"123457 0\\n0 2\\n123458 1\""
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n123456 14323 1700000\\n123458 41412 1900000\\n123457 15221 1800000\\n123456\\n123458\\n123457\") == \"123457 0\\n0 2\\n123458 1\"\n\nSolution:\nWe can solve this problem by iterating through the input data and keeping track of the current boss of the employee and the number of subordinates of the employee. We can then print the boss ID and the number of subordinates in the output.\n\nHere's the Python code:\n\n```python\n"
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"123456\\n123458\\n123457\\n\") == \"123457 0\\n0 2\\n123458 1\\n\""
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n3 5 10 2 5\\n2 4 5 1 3\") == 90\nassert solution(\"10\\n1 2 3 4 5\\n1 3 2 5 4\\n5 4 5 6 3 2\\n7 8 9 10 11 12\") == 282\nassert solution(\"20\\n1 2 3 4 5\\n1 3 2 5 4\\n5 4 5 6 3 2\\n7 8 9 10 11 12\\n13 14 15 16 17 18\\n19 20 21 22 23 24\") == 2216\nassert solution(\"25\\n1 2 3 4 5\\n1 3 2 5 4\\n5 4 5 6 3 2\\n7 8 9 10 11 12\\n13 14 15 16 17 18\\n19 20 21 22 23 24\\n25 26 27 28 29 30\") == 10645\n"
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin='5\\n3 5 10 2 5\\n2 4 5 1 3') == '90\\n'"
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_str) == output_str, f\"The given solution {solution(input_str)} is not correct. Please make sure to use the provided test cases.\""
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n3 5 10 2 5\\n2 4 5 1 3\") == \"90\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"90\""
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n3 5 10 2 5\\n2 4 5 1 3') == 90, \"Incorrect output\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 90, \"The maximum chaos that occurred during the robbery is incorrect.\""
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n3 5 10 2 5\\n2 4 5 1 3\") == 90"
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\n3 5 10 2 5\\n2 4 5 1 3') == '90'\n\nsolution('5\\n3 5 10 2 5\\n2 4 5 1 3')"
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"90\""
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\\n1\\n2\\n6\\n1\\n0\\n4\\n3\\n0\\n8\\n2\\n\") == \"6.000000\"\nassert solution(\"5\\n0\\n5\\n10\\n5\\n5\\n10\\n10\\n10\\n\") == \"10.000000\""
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"6.000000\", \"The solution is incorrect.\""
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 6.0, \"Incorrect output.\""
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 10\\n1 2 6\\n0 4 3\\n0 8 2') == '6.000000'"
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == expected_output, f\"Expected output: {expected_output}\\nGot: {solution(sample_input)}\"\n\nsample_input = \"\"\"\n3 10\n1 2 6\n0 4 3\n0 8 2\n\"\"\"\n\nexpected_output = \"\"\"\n6.000000\n\"\"\""
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"6.000000\\n\"\n"
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 10\\n1 2 6\\n0 4 3\\n0 8 2') == '6.000000\\n'\nassert solution('1 2 3\\n4 5 6\\n7 8 9') == '9.000000\\n'\nassert solution('0 0 10') == '0.000000\\n'"
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '6.000000', 'The output should be 6.000000'"
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 10\\n1 2 6\\n0 4 3\\n0 8 2\\n\") == \"6.000000\"\nassert solution(\"4 7\\n1 1 2\\n1 3 5\\n1 6 4\\n\") == \"13.000000\""
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 10\\n1 2 6\\n0 4 3\\n0 8 2') == '6.000000'"
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '''1.\n..\n0'''"
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('sample_input.txt', 'r')) == '1.\n.."
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0') == '\\n1.\\n..'\nassert solution('3\\n0 0\\n0 0\\n1. 2\\n..\\n0') == '\\n..\\n..'\nassert solution('4\\n0 0\\n0 0\\n1. 2\\n..\\n0') == '\\n..\\n..'\nassert solution('5\\n0 0\\n0 0\\n1. 2\\n..\\n0') == '\\n..\\n..'\nassert solution('6\\n0 0\\n0 0\\n1. 2\\n..\\n0') == '\\n..\\n..'\nassert solution('7\\n0 0\\n0 0\\n1. 2\\n..\\n0') == '\\n..\\n..'\nassert solution('8\\n0 0\\n0 0\\n1. 2\\n..\\n0') == '\\n..\\n..'\nassert solution('9\\n0 0\\n0 0\\n1. 2\\n..\\n0') == '\\n..\\n..'\nassert solution('10\\n0 0\\n0 0\\n1. 2\\n..\\n0') == '\\n..\\n..'\nassert solution('11\\n0 0\\n0 0\\n1. 2\\n..\\n0') == '\\n..\\n..'\nassert solution('12\\n0 0\\n0 0\\n1. 2\\n..\\n0') == '\\n..\\n..'\nassert solution('13\\n0 0\\n0 0\\n1. 2\\n..\\n0') == '\\n..\\n..'\nassert solution('14\\n0 0\\n0 0\\n1. 2\\n..\\n0') == '\\n..\\n..'\nassert solution('15\\n0 0\\n0 0\\n1. 2\\n..\\n0') == '\\n..\\n..'\nassert solution('16\\n0 0\\n0 0\\n1. 2\\n..\\n0') == '\\n..\\n..'\nassert solution('17\\n0 0\\n0 0\\n1. 2\\n..\\n0') == '\\n..\\n..'\nassert solution('18\\n0 0\\n0 0\\n1. 2\\n..\\n0') == '\\n..\\n..'\nassert solution('19\\n0 0\\n0 0\\n1. 2\\n..\\n0') == '\\n..\\n..'\nassert solution('20\\n0 0\\n0 0\\n1. 2\\n..\\n0') == '\\n..\\n..'\nassert solution('21\\n0 0\\n0 0\\n1. 2\\n..\\n0') == '\\n..\\n..'\nassert solution('22\\n0 0\\n0 0\\n1. 2\\n..\\n0') == '\\n..\\n..'\nassert solution('23\\n0 0\\n0 0\\n1. 2\\n..\\n0') == '\\n..\\n..'\nassert solution('24\\n0 0\\n0 0\\n1. 2\\n..\\n0') == '\\n..\\n..'\nassert solution('25\\n0 0\\n0 0\\n1. 2\\n..\\n0') == '\\n..\\n..'\nassert solution('26\\n0 0\\n0 0\\n1. 2\\n..\\n0') == '\\n..\\n..'\nassert solution('27\\n0 0\\n0 0\\n1. 2\\n..\\n0') == '\\n..\\n..'\nassert solution('28\\n0 0\\n0 0\\n1. 2\\n..\\n0') == '\\n..\\n..'\nassert solution('29\\n0 0\\n0 0\\n1. 2\\n..\\n0') == '\\n..\\n..'\n"
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n0 0\\n0 0\\n1.\\n...\\n0\\n') == '''1.\n..\n"
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n0 0\\n0 0\\n1.\\n....\\n0\\n\") == \"1.\\n....\\n0\\n\"\nassert solution(\"2\\n1 0\\n0 0\\n0.5\\n1 0\\n1.5\\n\") == \"1.5\\n1.5\\n\"\nassert solution(\"2\\n2 2\\n1 1\\n1 1\\n0\\n\") == \"1.0\\n0.0\\n\"\nassert solution(\"2\\n2 2\\n1 1\\n1 1\\n0\\n\") == \"1.0\\n0.0\\n\"\nassert solution(\"2\\n2 2\\n1 1\\n1 1\\n0\\n\") == \"1.0\\n0.0\\n\"\nassert solution(\"2\\n2 2\\n1 1\\n1 1\\n0\\n\") == \"1.0\\n0.0\\n\"\nassert solution(\"2\\n2 2\\n1 1\\n1 1\\n0\\n\") == \"1.0\\n0.0\\n\"\nassert solution(\"2\\n2 2\\n1 1\\n1 1\\n0\\n\") == \"1.0\\n0.0\\n\"\nassert solution(\"2\\n2 2\\n1 1\\n1 1\\n0\\n\") == \"1.0\\n0.0\\n\"\nassert solution(\"2\\n2 2\\n1 1\\n1 1\\n0\\n\") == \"1.0\\n0.0\\n\"\nassert solution(\"2\\n2 2\\n1 1\\n1 1\\n0\\n\") == \"1.0\\n0.0\\n\"\nassert solution(\"2\\n2 2\\n1 1\\n1 1\\n0\\n\") == \"1.0\\n0.0\\n\"\nassert solution(\"2\\n2 2\\n1 1\\n1 1\\n0\\n\") == \"1.0\\n0.0\\n\"\nassert solution(\"2\\n2 2\\n1 1\\n1 1\\n0\\n\") == \"1.0\\n0.0\\n\"\nassert solution(\"2\\n2 2\\n1 1\\n1 1\\n0\\n\") == \"1.0\\n0.0\\n\"\nassert solution(\"2\\n2 2\\n1 1\\n1 1\\n0\\n\") == \"1.0\\n0.0\\n\"\nassert solution(\"2\\n2 2\\n1 1\\n1 1\\n0\\n\") == \"1.0\\n0.0\\n\"\nassert solution(\"2\\n2 2\\n1 1\\n1 1\\n0\\n\") == \"1.0\\n0.0\\n\"\nassert solution(\"2\\n2 2\\n1 1\\n1 1\\n0\\n\") == \"1.0\\n0.0\\n\"\nassert solution(\"2\\n2 2\\n1 1\\n1 1\\n0\\n\") == \"1.0\\n0.0\\n\"\nassert solution(\"2\\n2 2\\n1 1\\n1 1\\n0\\n\") == \"1.0\\n0.0\\n\"\nassert solution(\"2\\n2 2\\n1 1\\n1 1\\n0\\n\") == \"1.0\\n0.0\\n\"\nassert solution(\"2\\n2 2\\n1 1\\n1 1\\n0\\n\") == \"1.0\\n0.0\\n\"\nassert solution(\"2\\n2 2\\n1 1\\n1 1\\n0\\n\") == \"1.0\\n0.0\\n\"\nassert solution(\"2\\n2 2\\n1 1\\n1 1\\n0\\n\") == \"1.0\\n0.0\\n\"\nassert solution(\"2\\n2 2\\n1 1\\n1 1\\n0\\n\") == \"1.0\\n0.0\\n\"\nassert solution(\"2\\"
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1.1\\n..1\\n.111\\n..11\\n.111\\n..11\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n\"\nassert solution() == \"1.1\\n..1\\n.111\\n..11\\n.111\\n..11\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n\"\nassert solution() == \"1.1\\n..1\\n.111\\n..11\\n.111\\n..11\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n\"\nassert solution() == \"1.1\\n..1\\n.111\\n..11\\n.111\\n..11\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n\""
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == expected_output, f\"Expected output: {expected_output}, got: {solution()}\""
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1.\\n..\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n0 0\\n0 0\\n1.\\n...\\n0\") == \"\"\"1.\n..\"\"\"\n\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n...\\n0\") == \"\"\"1.\n..\"\"\"\n\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n...\\n0\") == \"\"\"1.\n..\"\"\""
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\") == \"1.\\n..\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3, \"a\", \"bc\", \"abc\") == \"1\\n1\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\\tpass\\n\\t'def solution(stdin: str) -> str:\\n\\tpass\\n\\t'def solution(stdin: str) -> str:\\n\\tpass\\n\\t'"
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\na\\nbc\\nabc\\n3\\n1 abca\\n2 1\\n2 3\") == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n\"3\\na\\nbc\\nabc\"\n) == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\n\"3\\na\\nbc\\nabc\"\n) == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\n\"3\\na\\nbc\\nabc\"\n) == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == ['1', '1', 'def']\n"
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3, \"a\", \"bc\", \"abc\", 3, 1, 1, 2, 1, 2, 3) == \"1\\ndef solution(stdin: str) -> str:\\n\\treturn 1\"\nassert solution(3, \"a\", \"bc\", \"abc\", 3, 1, 1, 2, 1, 2, 3) == \"1\\ndef solution(stdin: str) -> str:\\n\\treturn 1\""
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\na\\nbc\\nabc\\n3\\n1 abca\\n2 1\\n2 3\") == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"3\\na\\nbc\\nabc\\n3\\n1 abca\\n2 1\\n2 2\") == \"1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\na\\nbc\\nab\\n3\\n1 abca\\n2 1\\n2 3\") == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\"3\\na\\nbc\\nab\\n3\\n1 abca\\n2 1\\n2 2\") == \"1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\na\\nbc\\nabc\\n3\\n1 abca\\n2 1\\n2 3') == '1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(solution) == \"abc\" # check the solution"
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 1 1 1') == 'YES'\nassert solution('2 2 2 2') == 'YES'\nassert solution('3 3 3 3') == 'NO'\nassert solution('1 2 3 4') == 'NO'\nassert solution('2 3 4 5') == 'NO'\nassert solution('3 4 5 6') == 'YES'"
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1 1 1\") == \"YES\"\nassert solution(\"5 2 1 3\") == \"NO\"\nassert solution(\"2 3 5 4\") == \"YES\"\nassert solution(\"4 1 2 3\") == \"NO\""
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1 1 1\") == \"YES\"\nassert solution(\"2 2 2 2\") == \"NO\"\nassert solution(\"1 1 2 2\") == \"NO\"\nassert solution(\"3 3 3 3\") == \"YES\"\nassert solution(\"4 4 4 4\") == \"YES\"\nassert solution(\"5 5 5 5\") == \"YES\""
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"1 1 1 1\") == \"YES\"\nassert solution(stdin=\"2 2 2 2\") == \"NO\"\nassert solution(stdin=\"3 3 3 3\") == \"YES\"\nassert solution(stdin=\"4 4 4 4\") == \"YES\"\nassert solution(stdin=\"5 5 5 5\") == \"YES\"\nassert solution(stdin=\"1 5 1 1\") == \"NO\"\nassert solution(stdin=\"2 5 2 2\") == \"YES\"\nassert solution(stdin=\"3 5 3 3\") == \"YES\"\nassert solution(stdin=\"4 5 4 4\") == \"YES\"\nassert solution(stdin=\"5 5 5 5\") == \"NO\"\nassert solution(stdin=\"1 10 1 1\") == \"NO\"\nassert solution(stdin=\"2 10 2 2\") == \"YES\"\nassert solution(stdin=\"3 10 3 3\") == \"YES\"\nassert solution(stdin=\"4 10 4 4\") == \"YES\"\nassert solution(stdin=\"5 10 5 5\") == \"YES\""
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 'YES', \"The code is not correct!\""
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1 1\") == \"YES\"\nassert solution(\"2 1 1 1\") == \"NO\"\nassert solution(\"1 2 1 1\") == \"YES\"\nassert solution(\"1 1 2 1\") == \"YES\"\nassert solution(\"1 1 1 2\") == \"NO\""
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1 1 1\") == \"YES\""
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 1 1 1') == 'YES\\n'\nassert solution('2 2 2 2') == 'NO\\n'"
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1 1 1\") == \"YES\"\nassert solution(\"2 1 1 1\") == \"YES\"\nassert solution(\"2 2 1 1\") == \"YES\"\nassert solution(\"2 2 2 1\") == \"NO\"\nassert solution(\"3 1 1 1\") == \"NO\"\nassert solution(\"3 2 1 1\") == \"NO\"\nassert solution(\"3 2 2 1\") == \"NO\"\nassert solution(\"3 2 2 2\") == \"NO\""
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1 1 1\") == \"YES\""
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '80.5696000000'\n"
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 96\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000') == '80.57'"
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 96\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\") == \"80.5696000000\""
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"80.5696000000\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 96\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n\") == \"80.5696000000\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Solution does not match the expected output.\\nExpected: {output()}\\nActual: {solution(input())}\""
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Solution error: expected '{output}', but got '{solution(input())}'\""
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"The output '{solution(input())}' is incorrect. Expected '{expected}'.\"\n"
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\npass\\n'\nassert solution.count('pass') == 1"
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"5\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"10\\n\""
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin: str) == \"2\", \"Your solution is incorrect\"\n"
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 0 0 1 1 1 0 0 1\") == \"2\\n\"\n"
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 0 0 1 1 1 0 0 1\") == \"2\\n\"\nassert solution(\"2 2 0 0\") == \"0\\n\"\nassert solution(\"4 0 0 1 0 0 0 0 0\") == \"5\\n\""
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n    4 0 0 1 1 1 0 0 1\n    ''') == '2\\n'\n\nassert solution('''\n    2 0 0 0 0 0 0 0 0\n    3 0 1 0 1 0 3 0 1\n    ''') == '2\\n'\n\nassert solution('''\n    1 0 0 0 0 0 0 0 0\n    0 0 0 0 0 0 0 0 0\n    ''') == '2\\n'"
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n4 0 0 1 1 1 0 0 1\n''') == '2\\n'\n\nassert solution('''\n2 3 4 5\n''') == '2\\n'\n\nassert solution('''\n1 2 3 4 5\n''') == '1\\n'\n\nassert solution('''\n2 0 1 2 3 4 5\n''') == '2\\n'"
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"2\\n\"\n"
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '2\\n'"
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output"
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 0 0 1 1 1 0 0 1\") == \"2\"\nassert solution(\"4 0 0 1 1 1 0 0 2\") == \"2\"\nassert solution(\"4 0 0 1 1 1 0 0 3\") == \"1\"\nassert solution(\"4 0 0 1 1 1 0 0 4\") == \"1\"\nassert solution(\"4 0 0 1 1 1 0 0 5\") == \"0\"\nassert solution(\"4 0 0 1 1 1 0 0 6\") == \"0\"\nassert solution(\"4 0 0 1 1 1 0 0 7\") == \"0\"\nassert solution(\"4 0 0 1 1 1 0 0 8\") == \"0\""
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\") == \"1400\"\nassert solution(\"1 1 1\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\") == \"impossible\"\nassert solution(\"2 1 1\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\") == \"impossible\"\nassert solution(\"3 1 1\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\") == \"impossible\"\nassert solution(\"1 2 1\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\") == \"impossible\"\nassert solution(\"4 1 1\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\") == \"impossible\"\nassert solution(\"3 4 1\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\") == \"impossible\"\nassert solution(\"3 1 10\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\") == \"impossible\"\nassert solution(\"3 1 1\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 1500\") == \"impossible\"\nassert solution(\"1 1 2\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\") == \"impossible\"\nassert solution(\"3 1 1\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 1500\") == \"impossible\"\nassert solution(\"3 1 1\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\") == \"impossible\"\nassert solution(\"3 1 1\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 1500\") == \"impossible\"\nassert solution(\"3 1 1\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\") == \"impossible\"\nassert solution(\"3 1 1\\n0 0 400\\n1000 0 "
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1400\", \"Incorrect solution\""
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\") == \"1400\"\n"
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\\n\") == 1400\nassert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n\") == \"impossible\"\n"
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1400\""
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\\n\") == 1400\n"
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3 2 3\n0 0 400\n1000 0 400\n2000 0 400\n300 0 150\n1300 0 150\n\"\"\") == \"1400\"\n\nassert solution(\"\"\"\n3 1 1\n0 0 100\n1000 0 100\n1000 0 100\n1000 0 100\n\"\"\") == \"impossible\""
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\") == \"1400\""
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"impossible\"\nassert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\") == 1400"
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 1400, \"Incorrect solution\""
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbrussels\\noslo stockholm 415\\nstockholm helsinki 396\\noslo london 1153\\noslo copenhagen 485\\nstockholm copenhagen 522\\ncopenhagen berlin 354\\ncopenhagen amsterdam 622\\nhelsinki berlin 1107\\nlondon amsterdam 356\\nberlin amsterdam 575\\nlondon dublin 463\\nreykjavik dublin 1498\\nreykjavik oslo 1748\\nlondon brussels 318\\nbrussels amsterdam 173\\nstockholm amsterdam\") == \"3907\\n\""
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"0\"\n\nfrom typing import List"
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"3907\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"your_answer\" # Add the correct solution here\n"
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbrussels\\noslo stockholm 415\\nstockholm helsinki 396\\noslo london 1153\\noslo copenhagen 485\\nstockholm copenhagen 522\\ncopenhagen berlin 354\\ncopenhagen amsterdam 622\\nhelsinki berlin 1107\\nlondon amsterdam 356\\nberlin amsterdam 575\\nlondon dublin 463\\nreykjavik dublin 1498\\nreykjavik oslo 1748\\nlondon brussels 318\\nbrussels amsterdam 173\\nstockholm amsterdam\\noslo london\\nreykjavik dublin\\nbrussels helsinki\") == \"3907\"\nassert solution(\"10 20\\nstockholm\\nmoscow\\nboston\\nlondon\\nseattle\\nlosangeles\\nminneapolis\\nnewyork\\nashburn\\nsanfrancisco\\nlosangeles\\nnewyork\\nashburn\\nnewyork\\nmoscow\\nboston\\nseattle\\nlosangeles\\nminneapolis\\nnewyork\\nashburn\\nsanfrancisco\\nlosangeles\\nnewyork\\nashburn\\nnewyork\") == \"2723\"\nassert solution(\"10 25\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noakland\\nlosangeles\\nsanfrancisco\\nlosangeles\\nnewyork\\nashburn\\nlosangeles\\nnewyork\\nashburn\\nnewyork\\nlosangeles\\nnewyork\") == \"7020\"\nassert solution(\"10 30\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noakland\\nlosangeles\\nsanfrancisco\\nlosangeles\\nnewyork\\nashburn\\nlosangeles\\nnewyork\\nashburn\\nnewyork\\nlosangeles\\nnewyork\\nlosangeles\\nnewyork\\nlosangeles\\nnewyork\\nlosangeles\\nnewyork\\nlosangeles\\nnewyork\\nlosangeles\\nnewyork\") == \"11690\"\nassert solution(\"10 35\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noakland\\nlosangeles\\nsanfrancisco\\nlosangeles\\nnewyork\\nashburn\\nlosangeles\\nnewyork\\nashburn\\nnewyork\\nlosangeles\\nnewyork\\nlosangeles\\nnewyork\\nlosangeles\\nnewyork\\nlosangeles\\nnewyork\\nlosangeles\\nnewyork\\nlosangeles\\nnewyork\\nlosangeles\\nnewyork\\nlosangeles\\nnewyork\\nlosangeles\\nnewyork\") == \"16560\"\nassert solution(\"10 40\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noakland\\nlosangeles\\nsanfrancisco\\nlosangeles\\nnewyork\\nashburn\\nlosangeles\\nnewyork\\nashburn\\nnewyork\\nlosangeles\\nnewyork\\nlosangeles\\nnewyork\\nlosangeles\\nnewyork\\nlosangeles\\nnewyork\\nlosangeles\\nnewyork\\nlosangeles\\nnewyork\\nlosangeles\\nnewyork\\nlosangeles\\nnewyork\\nlosangeles\\nnewyork\\nlosangeles\\nnewyork\\nlosangeles\\nnewyork\\nlosangeles\\nnew"
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbruges\\nostrava\\nTallinn\") == \"3907\"\nassert solution(\"10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbruges\\nostrava\\nTallinn\") == \"3907\"\nassert solution(\"10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbruges\\nostrava\\nTallinn\") == \"3907\"\nassert solution(\"10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbruges\\nostrava\\nTallinn\") == \"3907\"\nassert solution(\"10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbruges\\nostrava\\nTallinn\") == \"3907\"\nassert solution(\"10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbruges\\nostrava\\nTallinn\") == \"3907\"\nassert solution(\"10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbruges\\nostrava\\nTallinn\") == \"3907\"\nassert solution(\"10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbruges\\nostrava\\nTallinn\") == \"3907\"\nassert solution(\"10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbruges\\nostrava\\nTallinn\") == \"3907\"\nassert solution(\"10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbruges\\nostrava\\nTallinn\") == \"3907\"\nassert solution(\"10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbruges\\nostrava\\nTallinn\") == \"3907\"\nassert solution(\"10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbruges\\nostrava\\nTallinn\") == \"3907\"\nassert solution(\"10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbruges\\nostrava\\nTallinn\") == \"3907\"\nassert solution(\"10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbruges\\nostrava\\nTallinn\") == \"3907\"\nassert solution(\"10 15\\nstockholm\\namsterdam"
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '3907'"
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbrussels\\noslo stockholm 415\\nstockholm helsinki 396\\noslo london 1153\\noslo copenhagen 485\\nstockholm copenhagen 522\\ncopenhagen berlin 354\\ncopenhagen amsterdam 622\\nhelsinki berlin 1107\\nlondon amsterdam 356\\nberlin amsterdam 575\\nlondon dublin 463\\nreykjavik dublin 1498\\nreykjavik oslo 1748\\nlondon brussels 318\\nbruesssels amsterdam 173\\nstockholm amsterdam\\noslo london\\nreykjavik dublin\\nbruesssels helsinki\") == 3907\nassert solution(\"10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbrussels\\noslo stockholm 415\\nstockholm helsinki 396\\noslo london 1153\\noslo copenhagen 485\\nstockholm copenhagen 522\\ncopenhagen berlin 354\\ncopenhagen amsterdam 622\\nhelsinki berlin 1107\\nlondon amsterdam 356\\nberlin amsterdam 575\\nlondon dublin 463\\nreykjavik dublin 1498\\nreykjavik oslo 1748\\nlondon brussels 318\\nbruesssels amsterdam 173\\nstockholm amsterdam\\noslo london\\nreykjavik dublin\\nbruesssels helsinki\") == 1526"
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 15\\nsstk\\nams\\nmgl\\nbrl\\ncph\\nosl\\nhels\\ndbl\\nrkv\\nbru\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\"
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"Output the minimum possible cost to set up all four train lines.\""
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\") == \"2\\n1\\n2\\n1\"\n\nassert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\") == \"2\\n1\\n2\\n1\""
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_string) == output_string, f\"Input: {input_string}\\nOutput: {output_string}\\nExpected: {expected_string}\\nGot: {actual_string}\""
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1') == '2\\n1\\n2\\n1'\nassert solution('5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\\n2 2') == '2\\n1\\n2\\n1'\nassert solution('5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\\n2 2\\n2 3') == '2\\n1\\n2\\n1'\nassert solution('5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\\n2 2\\n2 3\\n2 4') == '2\\n1\\n2\\n1'\nassert solution('5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5') == '2\\n1\\n2\\n1'"
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\") == \"2\\n1\\n2\\n1\\n\""
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt').read()) == '2\\n1\\n2\\n1\\n'"
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\") == \"2\\n1\\n2\\n1\"\nassert solution(\"10 1\\n1 1 1 1 1\\n0 1\\n1 0\\n0 0 1\\n0 1 0 1\") == \"1\\n1\\n1\\n1\\n1\"\nassert solution(\"5 3\\n2 2 2 2 2\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 "
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\\n\") == \"2\\n1\\n2\\n1\\n\"\nassert solution(\"10 6\\n4 5 2\\n0 1 6 7 2\\n3 4\\n1 7 2\\n1 8\\n\") == \"0\\n1\\n2\\n1\\n\"\nassert solution(\"10 7\\n3 3 4 1\\n0 1 2 5 6\\n1 4\\n2 5\\n1 8\\n\") == \"3\\n3\\n3\\n3\\n3\\n\"\nassert solution(\"10 7\\n3 3 4 1\\n0 1 2 5 6\\n1 4\\n2 5\\n1 8\\n\") == \"1\\n1\\n2\\n2\\n2\\n\"\nassert solution(\"10 7\\n3 3 4 1\\n0 1 2 5 6\\n1 4\\n2 5\\n1 8\\n\") == \"4\\n4\\n5\\n5\\n5\\n\""
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Expected: {expected_output}, Received: {solution(input())}\""
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\\n') == '2\\n1\\n2\\n1\\n'"
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1') == '2\\n1\\n2\\n1\\n'"
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    3 5\n    01001\n    11100\n    10111\n    \"\"\"\n) == \"00010\"\n\nassert solution(\n    \"\"\"\n    3 5\n    01001\n    11100\n    00000\n    \"\"\"\n) == \"00010\"\n\nassert solution(\n    \"\"\"\n    3 5\n    01001\n    11100\n    11111\n    \"\"\"\n) == \"00010\"\n\nassert solution(\n    \"\"\"\n    3 5\n    01001\n    11100\n    11111\n    00001\n    \"\"\"\n) == \"00010\"\n\nassert solution(\n    \"\"\"\n    3 5\n    01001\n    11100\n    11111\n    11111\n    \"\"\"\n) == \"00010\"\n\nassert solution(\n    \"\"\"\n    3 5\n    01001\n    11100\n    11111\n    11111\n    11111\n    \"\"\"\n) == \"00010\"\n\nassert solution(\n    \"\"\"\n    3 5\n    01001\n    11100\n    11111\n    11111\n    11111\n    11111\n    \"\"\"\n) == \"00010\"\n\nassert solution(\n    \"\"\"\n    3 5\n    01001\n    11100\n    11111\n    11111\n    11111\n    11111\n    11111\n    \"\"\"\n) == \"00010\"\n\nassert solution(\n    \"\"\"\n    3 5\n    01001\n    11100\n    11111\n    11111\n    11111\n    11111\n    11111\n    11111\n    \"\"\"\n) == \"00010\""
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '00010'"
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5\\n01001\\n11100\\n10111\\n\") == \"00010\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"00010\""
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 5\\n01001\\n11100\\n10111\") == \"00010\\ndef solution(stdin: str) -> str: \\n    pass\""
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 5\\n01001\\n11100\\n10111\") == \"00010\"\n"
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 5\\n01001\\n11100\\n10111\") == \"00010\\ndef solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(str(input().strip())) == output, \"Expected output: {0}\\nActual output: {1}\".format(output, solution(str(input().strip())))"
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 5\\n01001\\n11100\\n10111\") == \"00010\""
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"00010\", \"Your solution is incorrect.\"\nassert solution(stdin) == \"00111\", \"Your solution is incorrect.\"\nassert solution(stdin) == \"11011\", \"Your solution is incorrect.\"\nassert solution(stdin) == \"00010\", \"Your solution is incorrect.\"\nassert solution(stdin) == \"00111\", \"Your solution is incorrect.\"\nassert solution(stdin) == \"11011\", \"Your solution is incorrect.\""
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n6 2\\n0 4\\n6 12\") == \"possible\\n\"\nassert solution(\"1\\n3 3\\n1 3\\n3 3\") == \"possible\\n\"\nassert solution(\"1\\n1 5\\n0 2\\n2 1\\n1 4\\n0 1\\n1 5\") == \"possible\\n\"\nassert solution(\"1\\n1 2\\n1 2\\n2 2\\n2 2\\n3 3\\n3 3\") == \"impossible\\n\"\nassert solution(\"1\\n6 2\\n0 4\\n6 12\\n6 12\") == \"impossible\\n\"\nassert solution(\"1\\n3 3\\n1 3\\n3 3\\n3 3\\n3 3\\n3 3\") == \"impossible\\n\"\nassert solution(\"1\\n1 5\\n0 2\\n2 1\\n1 4\\n0 1\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 "
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"possible\""
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1\\n6 2\\n0 4\\n6 12') == 'possible'"
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n6 2\\n0 4\\n6 12\") == \"possible\"\nassert solution(\"1\\n1 1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n6 2\\n0 4\\n6 12\\n\") == \"possible\""
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(solution.read()) == \"possible\"\n"
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1\\n6 2\\n0 4\\n6 12\\n') == 'possible'\nassert solution('1\\n6 3\\n0 4\\n6 12\\n') == 'impossible'\nassert solution('1\\n6 2\\n0 5\\n6 12\\n') == 'possible'\nassert solution('1\\n6 2\\n0 5\\n6 13\\n') == 'impossible'\nassert solution('1\\n6 2\\n0 4\\n6 13\\n') == 'possible'\nassert solution('1\\n6 2\\n0 4\\n6 12\\n') == 'impossible'\n"
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == sample_output\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n    1\n    6 2\n    0 4\n    6 12\n    6 24\n    ''') == 'possible'"
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n6 2\\n0 4\\n6 12\\n\") == \"possible\""
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1') == '2\\n'\n"
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1') == '2'\n"
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2\\n\"\n"
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\") == \"2\""
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n5\n5 0 1\n10 0 1\n0 5 1\n0 -5 1\n-5 0 1\n''') == '2'"
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\") == \"2\"\nprint(\"All tests pass\")"
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"E business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n\") == \"Plot Error\\n3 Just A Dream\\nYes\""
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"E business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\") == \"Yes\"\nassert solution(\"E business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nE wrong_event\\nS 1 business_as_usual\\nE wrong_event\\nS 2 stuff_happens\\nS 3 jr_does_bad_things\\nS 4 it_goes_on_and_on\") == \"Plot Error\"\nassert solution(\"E business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nS 1!bobby_dies\\nS 2 business_as_usual\\nE business_as_usual\\nS 3 business_as_usual\\nS 4 stuff_happens\\nS 5 jr_does_bad_things\\nS 6 it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\") == \"Plot Error\"\n"
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('sample_input.txt', 'r')) == \"Plot Error\\n3 Just A Dream\\nYes\"\n\nfrom collections import defaultdict"
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\") == \"Yes\\n3 Just A Dream\"\nassert solution(\"10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\") == \"Plot Error\""
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"E business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n\") == \"Yes\\n3 Just A Dream\\n\"\nassert solution(\"E business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nE something_happened\\nS 1!something_happened business_as_usual\\nE everything_happened\\nS 2!everything_happened it_goes_on_and_on\\n\") == \"Plot Error\\n3 Just A Dream\\n\"\nassert solution(\"E business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nS 1!bobby_died business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nS 1!everything_happened business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nS 1!everything_happened it_goes_on_and_on\\n\") == \"Plot Error\\n3 Just A Dream\\n\"\nassert solution(\"E business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nS 1!everything_happened business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nS 1!everything_happened it_goes_on_and_on\\nE something_happened\\nS 1!something_happened business_as_usual\\nE everything_happened\\nS 2!everything_happened it_goes_on_and_on\\n\") == \"Plot Error\\n3 Just A Dream\\n\"\nassert solution(\"E business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nS 1!everything_happened business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\"
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"test_data.txt\").read()) == \"Plot Error\"\nassert solution(open(\"test_data2.txt\").read()) == \"No\"\nassert solution(open(\"test_data3.txt\").read()) == \"4 Just A Dream\"\nassert solution(open(\"test_data4.txt\").read()) == \"2 Just A Dream\""
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"E business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n\") == \"Yes\\n3 Just A Dream\\n\"\nassert solution(\"E business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nE foo_happens\\nE bar_happens\\nS 3!foo_happens\\nS 4!bar_happens\\n\") == \"Plot Error\\n\"\nassert solution(\"E business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nE foo_happens\\nE bar_happens\\nS 3!foo_happens\\nS 4!bar_happens\\nE baz_happens\\n\") == \"Plot Error\\n\""
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\") == \"Plot Error\\nPlot Error\\nPlot Error\"\n"
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n\") == \"Yes\\n3 Just A Dream\\n\"\nassert solution(\"10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n\") == \"Yes\\n3 Just A Dream\\n\"\nassert solution(\"10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n\") == \"Plot Error\\nPlot Error\\nPlot Error\\n\""
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"Plot Error\"\n"
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    24 5 8 7\n    Lorem ipsum dolor sit amet consectetur adipisicing elit sed do\n    eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad\n    minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\n    \"\"\"\n) == \"\"\"\n+------------------------+-+\n|exercitation ullamco    |^|\n|laboris nisi ut aliquip | |\n|ex ea commodo consequat |X|\n|Duis aute irure dolor in| |\n|reprehenderit in        |v|\n+------------------------+-+\n"
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Test failed\"\n\ninput_str = \"24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\"\noutput_str = \"+------------------------+-+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+-+\"\nassert solution(input_str) == output_str, \"Test failed\""
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n24 5 8 7\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do\neiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad\nminim veniam quis nostrud exercitation ullamco laboris nisi ut\naliquip ex ea commodo consequat Duis aute irure dolor in\nreprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\npariatur Excepteur sint occaecat cupidatat non proident sunt in\nculpa qui officia deserunt mollit anim id est laborum\n''') == '''\n+------------------------+-+\n|exercitation ullamco    |^|\n|laboris nisi ut aliquip | |\n|ex ea commodo consequat |X|\n|Duis aute irure dolor in| |\n|reprehenderit in        |v|\n+------------------------+-+\n"
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_data) == expected_output\nassert solution(input_data_2) == expected_output_2\nassert solution(input_data_3) == expected_output_3\nassert solution(input_data_4) == expected_output_4\nassert solution(input_data_5) == expected_output_5\n"
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('24 5 8 7') == '''\n+------------------------+-+\n|exercitation ullamco    |^|\n|laboris nisi ut aliquip | |\n|ex ea commodo consequat |X|\n|Duis aute irure dolor in| |\n|reprehenderit in        |v|\n+------------------------+-+\n"
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do\\n\"\n    \"eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad\\n\"\n    \"minim veniam quis nostrud exercitation ullamco laboris nisi ut\\n\"\n    \"aliquip ex ea commodo consequat Duis aute irure dolor in\\n\"\n    \"reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\\n\"\n    \"pariatur Excepteur sint occaecat cupidatat non proident sunt in\\n\"\n    \"culpa qui officia deserunt mollit anim id est laborum\\n\") == (\n        \"+--------+------+\\n\"\n        \"|exercitation ullamco    |^|\\n\"\n        \"|laboris nisi ut aliquip | |\\n\"\n        \"|ex ea commodo consequat |X|\\n\"\n        \"|Duis aute irure dolor in| |\\n\"\n        \"|reprehenderit in        |v|\\n\"\n        \"+--------+------+\"\n    )"
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\""
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    24 5 8 7\n    Lorem ipsum dolor sit amet consectetur adipisicing elit sed do\n    eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad\n    minim veniam quis nostrud exercitation ullamco laboris nisi ut\n     aliquip ex ea commodo consequat Duis aute irure dolor in\n     reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n     pariatur Excepteur sint occaecat cupidatat non proident sunt in\n     culpa qui officia deserunt mollit anim id est laborum\n    \"\"\"\n) == \"\"\"\n+------------------------+-+\n|exercitation ullamco    |^|\n|laboris nisi ut aliquip | |\n|ex ea commodo consequat |X|\n|Duis aute irure dolor in| |\n|reprehenderit in        |v|\n+------------------------+-+\n"
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod\\ntempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam\\nquis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\\nconsequat Duis aute irure dolor in reprehenderit in voluptate velit esse\\ncillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non\\nproident sunt in culpa qui officia deserunt mollit anim id est laborum\") == \"+------------------------+-+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+-+\"\n\nassert solution(\"24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod\\ntempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam\\nquis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\\nconsequat Duis aute irure dolor in reprehenderit in voluptate velit esse\\ncillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non\\nproident sunt in culpa qui officia deserunt mollit anim id est laborum\") == \"+------------------------+-+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+-+\"\n\nassert solution(\"24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod\\ntempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam\\nquis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo\\nconsequat Duis aute irure dolor in reprehenderit in voluptate velit esse\\ncillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non\\nproident sunt in culpa qui officia deserunt mollit anim id est laborum\") == \"+------------------------+-+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+-+\""
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output\n\nfrom typing import List"
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"possible\""
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"possible\\n\"\nassert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n4 5 3 2\\n2 0 1 3\") == \"impossible\\n\"\nassert solution(\"5 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n4 5 3 2\\n2 0 1 3\") == \"possible\\n\""
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"possible\""
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0') == 'possible'\nassert solution('5 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0') == 'impossible'\nassert solution('1 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0') == 'impossible'\nassert solution('4 5\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0') == 'impossible'"
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"possible\""
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n') == 'possible\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n\nassert solution('4 20\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n') == 'impossible\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n\nassert solution('4 30\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n') == 'possible\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"possible\""
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    4 10\n    0 3 2 1\n    3 0 1 3\n    2 1 0 2\n    1 3 2 0\n    \"\"\"\n) == \"possible\"\n\nassert solution(\n    \"\"\"\n    4 10\n    0 3 2 1\n    3 0 1 3\n    2 1 0 2\n    1 3 2 0\n    \"\"\"\n) == \"impossible\""
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"possible\\n\""
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n\") == \"possible\""
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1 1\\n1\\n2\\n\") == \"1.00000000\""
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1 1\\n1\\n2\") == \"1.00000000\\n\"\n"
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1 1\\n1\\n2\") == \"1.00000000\"\n"
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1 1\\n1\\n2\\n\") == \"1.00000000\"\n"
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=input()) == \"1.00000000\\n\", \"Expected Output: 1.00000000\\n\""
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin: str) == \"1.00000000\""
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1 1\\n1\\n2\\n\") == \"1.00000000\"\n"
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 1 1') == '1.00000000'\nassert solution('1') == '1.00000000'\n\nfrom typing import List"
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"2 1 1\\n1\\n2\\n\") == \"1.00000000\"\n"
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"1.00000000\\n\", \"Please provide the correct input for the function.\""
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(b'5\\n5 4 3 3 2\\n3\\n1 2\\n1 1\\n2 4\\n') == '2\\n1\\n3\\n'"
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for {input()}\"\n\nN = int(input())\na = list(map(int, input().split()))\nQ = int(input())\n\nanswer = []\n\nfor i in range(Q):\n    L = int(input())\n    R = int(input())\n\n    longest_subarray = []\n    current_magical = False\n\n    for j in range(L, R + 1):\n        if j - L + 1 > max(longest_subarray):\n            longest_subarray = [j]\n        elif j - L + 1 == max(longest_subarray):\n            current_magical = True\n            longest_subarray.append(j)\n\n    answer.append(current_magical)\n\nfor i in range(Q):\n    print(answer[i])"
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r')) == 'Output'\n"
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Young Luka is about to enter a house with the evil witch Marica inside. As soon as he enters the house, she asks him questions about her array of 5 numbers. Luka fearfully asks for a clarification of the questions. Marica explains to him that each query consists of two integers L and R which represent the positions of a contiguous sub-array in her array. It is Luka's task to answer for each query what the longest contiguous sub-array of that contiguous sub-array (it can be the entire sub-array) having the property of being magical. An array is called magical if all the values are between the values of the first and last number in that array. For example, [1 3 1 2 4] is magical, the same as [4 1 1 2 1], whereas [3 3 4 1] is not magical.\") == \"2\\n1\\n3\"\nassert solution(\"5\\n5 4 3 3 2\\n3\\n1 2\\n1 1\\n2 4\") == \"2\\n1\\n3\""
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt').read()) == '2\\n1\\n3\\n'\nassert solution(open('input1.txt').read()) == '2\\n1\\n3\\n'\nassert solution(open('input2.txt').read()) == '2\\n1\\n3\\n'"
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution([5, 4, 3, 3, 2]) == \"2\"\nassert solution([1, 2, 1, 1, 2]) == \"1\"\nassert solution([3, 3, 4, 1]) == \"3\""
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == sample_output, \"Test failed\""
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n5 4 3 3 2\\n3\\n1 2\\n1 1\\n2 4\\n\") == \"2\\n1\\n3\\n\""
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == 1\nassert solution(\"6 4\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\") == 5\nassert solution(\"5 5\") == \"never meet\"\n"
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == \"1\\n1\"\nassert solution(\"2 2\\n1 2\\n2 3\\n3 4\\n4 1\\n1 3\\n3 5\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 1\\n1 0\\n2 0\\n0 2\") == \"2\\n3\"\nassert solution(\"2 1\\n0 2\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 1\\n1 0\\n2 0\\n0 2\") == \"1\\n1\""
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == \"1\"\nassert solution(\"1 1\\n1 1\\n1 1\\n1 1\\n1 1\") == \"1\"\nassert solution(\"2 1\\n2 1\\n2 1\\n2 1\\n2 1\") == \"1\"\nassert solution(\"3 2\\n0 1\\n1 2\\n2 3\\n3 4\") == \"2\"\nassert solution(\"3 2\\n0 1\\n1 2\\n2 3\\n3 4\") == \"2\"\nassert solution(\"1 1\\n1 1\\n1 1\\n1 1\\n1 1\") == \"1\"\nassert solution(\"2 1\\n2 1\\n2 1\\n2 1\\n2 1\") == \"1\"\nassert solution(\"3 2\\n0 1\\n1 2\\n2 3\\n3 4\") == \"2\"\nassert solution(\"3 2\\n0 1\\n1 2\\n2 3\\n3 4\") == \"2\"\nassert solution(\"1 1\\n1 1\\n1 1\\n1 1\\n1 1\") == \"1\"\nassert solution(\"2 1\\n2 1\\n2 1\\n2 1\\n2 1\") == \"1\"\nassert solution(\"3 2\\n0 1\\n1 2\\n2 3\\n3 4\") == \"2\"\nassert solution(\"3 2\\n0 1\\n1 2\\n2 3\\n3 4\") == \"2\"\nassert solution(\"1 1\\n1 1\\n1 1\\n1 1\\n1 1\") == \"1\"\nassert solution(\"2 1\\n2 1\\n2 1\\n2 1\\n2 1\") == \"1\"\nassert solution(\"3 2\\n0 1\\n1 2\\n2 3\\n3 4\") == \"2\"\nassert solution(\"3 2\\n0 1\\n1 2\\n2 3\\n3 4\") == \"2\"\nassert solution(\"1 1\\n1 1\\n1 1\\n1 1\\n1 1\") == \"1\"\nassert solution(\"2 1\\n2 1\\n2 1\\n2 1\\n2 1\") == \"1\"\nassert solution(\"3 2\\n0 1\\n1 2\\n2 3\\n3 4\") == \"2\"\nassert solution(\"3 2\\n0 1\\n1 2\\n2 3\\n3 4\") == \"2\"\nassert solution(\"1 1\\n1 1\\n1 1\\n1 1\\n1 1\") == \"1\"\nassert solution(\"2 1\\n2 1\\n2 1\\n2 1\\n2 1\") == \"1\"\nassert solution(\"3 2\\n0 1\\n1 2\\n2 3\\n3 4\") == \"2\"\nassert solution(\"3 2\\n0 1\\n1 2\\n2 3\\n3 4\") == \"2\"\nassert solution(\"1 1\\n1 1\\n1 1\\n1 1\\n1 1\") == \"1\"\nassert solution(\"2 1\\n2 1\\n2 1\\n2 1\\n2 1\") == \"1\"\nassert solution(\"3 2\\n0 1\\n1 2\\n2 3\\n3 4\") == \"2\"\nassert solution(\"3 2\\n0 1\\n1 2\\n2 3\\n3 4\") == \"2\"\nassert solution(\"1 1\\n1 1\\n1 1\\n1 1\\n1 1\") == \"1\"\nassert solution(\"2 1\\n2 1\\n2 1\\n2 1\\n2 1\") == \"1\"\nassert solution(\"3 2\\n0 1\\n1 2\\n2 3\\n3 4\") == \"2\"\nassert solution(\"3 2\\"
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"1\"\n\nfrom collections import deque"
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"never meet\""
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 2\\n0 1\\n1 2\\n0 2\\n') == '1\\n'\n"
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"1\"\nprint(\"def solution(stdin: str) -> str:\")\nprint(\"    return \\\"never meet\\\"\")"
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Solution error: {solution(input())}!= {output}\""
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == \"1\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == \"1\""
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(str(input())) == \"14500000001\", \"The given solution is incorrect.\""
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 4 2\") == 14500000001, \"The answer is incorrect.\""
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 4 2\") == \"14500000001\"\nassert solution(\"5 5 2\") == \"10000000001\"\nassert solution(\"6 5 2\") == \"11000000001\"\nassert solution(\"5 5 3\") == \"11000000001\"\nassert solution(\"4 4 2\") == \"23000000001\""
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"14500000001\"\n"
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 4 2\") == 14500000001\n"
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 4 2') == '14500000001', \"Solution not correct\"\n"
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 4 2\") == \"14500000001\\n\"\nassert solution(\"1 1 1\") == \"1000000000\\n\"\n"
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(5, 4, 2) == '14500000001'\n"
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 4 2\") == \"14500000001\""
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(10, 10, 1000000000) == 14500000001"
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 4\\n3 7\\n1 6\\n2 6\\n\") == \"0\\n1\\n1\\n2\\n\""
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 4\\n3 7\\n1 6\\n2 6\\n\") == \"0\\n1\\n1\\n2\\n\""
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 4\\n3 7\\n1 6\\n2 6\") == \"0\\n1\\n1\\n2\""
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 4\\n3 7\\n1 6\\n2 6') == '0\\n1\\n1\\n2'\nassert solution('100000\\n1 4\\n3 7\\n1 6\\n2 6') == '100000\\n1\\n1\\n2'\nassert solution('100000\\n100000\\n1 4\\n3 7\\n1 6\\n2 6') == '100000\\n1\\n1\\n2'"
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\n1 4\\n3 7\\n1 6\\n2 6\\n') == '0\\n1\\n1\\n2\\n'"
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 0\n"
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 4\\n3 7\\n1 6\\n2 6\") == \"0\\n1\\n1\\n2\""
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 4\\n3 7\\n1 6\\n2 6\") == \"0\\n1\\n1\\n2\""
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"day3.txt\", \"r\")) == \"0\\n1\\n1\\n2\\n\"\n"
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n1 4\\n3 7\\n1 6\\n2 6') == '0\\n1\\n1\\n2'"
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300') == '3100\\n'\nprint(solution('5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300'))"
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == '3100'"
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == \"3100\""
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"3100\\n\""
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input) == output, \"Expected: {}, Received: {}.\".format(output, solution(input))"
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Solution ({input()}) doesn't match the expected output ({output})\""
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == '3100'\n"
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '3100', 'The solution is incorrect'"
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n\") == \"3100\\n\"\nassert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n\") == \"3100\\n\"\nassert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n\") == \"3100\\n\"\nassert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n\") == \"3100\\n\"\nassert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n\") == \"3100\\n\""
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"3100\""
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"5.250000000\""
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '5.25', \"Incorrect output. Expected 5.25, got {}.\".format(solution())"
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '5.250000000\\n', \"Test failed for solution 1.\"\n\nassert solution(input()) == '4.000000000\\n', \"Test failed for solution 2.\"\n\nassert solution(input()) == '5.000000000\\n', \"Test failed for solution 3.\"\n\nassert solution(input()) == '10.000000000\\n', \"Test failed for solution 4.\"\n\nassert solution(input()) == '0.000000000\\n', \"Test failed for solution 5.\""
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Solution is incorrect. Received: {solution(input())}, expected: {expected_output}\""
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\\n\") == \"5.250000000\\n\"\nassert solution(\"4 14\\n1 10\\n6 7\\n2 4\\n2 6\\n7 12\\n\") == \"0.000000000\\n\"\nassert solution(\"4 2\\n1 10\\n6 6\\n2 3\\n2 7\\n7 11\\n\") == \"0.000000000\\n\"\nassert solution(\"4 14\\n1 8\\n6 6\\n2 3\\n2 5\\n7 10\\n\") == \"0.000000000\\n\""
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13') == '5.250000000'\nassert solution('4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\\n2 2\\n1 10\\n5 8') == '3.500000000'\nassert solution('4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\\n2 2\\n1 10\\n5 8\\n1 14\\n7 6') == '1.666666667'\nassert solution('4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\\n2 2\\n1 10\\n5 8\\n1 14\\n7 6\\n1 16\\n4 5\\n2 3') == '0.750000000'\nassert solution('4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\\n2 2\\n1 10\\n5 8\\n1 14\\n7 6\\n1 16\\n4 5\\n2 3\\n1 18\\n7 9') == '0.750000000'"
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"5.250000000\", \"Test case not passed!\"\nprint(\"Test case passed!\")"
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\\n') == '5.250000000\\n'"
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\") == \"5.250000000\"\nassert solution(\"4 2\\n3 4\\n2 2\\n1 1\") == \"2.500000000\"\nassert solution(\"4 2\\n2 1\\n2 1\") == \"2.500000000\"\nassert solution(\"4 2\\n1 4\\n1 3\\n1 2\") == \"2.000000000\"\nassert solution(\"4 2\\n2 3\\n2 2\\n2 1\") == \"2.500000000\"\nassert solution(\"4 2\\n1 2\\n1 1\\n1 1\") == \"1.000000000\"\nassert solution(\"4 2\\n2 1\\n2 1\\n2 1\") == \"2.500000000\"\nassert solution(\"4 2\\n1 4\\n1 3\\n1 2\") == \"2.000000000\"\nassert solution(\"4 2\\n2 3\\n2 2\\n2 1\") == \"2.500000000\"\nassert solution(\"4 2\\n1 2\\n1 1\\n1 1\") == \"1.000000000\""
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Expected: {output}\\nGot: {solution(input())}\""
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected_output, f\"Expected: {expected_output}, Received: {solution(stdin)}\""
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('7\\n1 2 3 1 2 1 1\\n5\\n1 3 1 2 3\\n1 2 1 2\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2\\n') == '7\\n2\\n2\\n0\\n4'"
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"Output: 7\\nOutput: 2\\nOutput: 2\\nOutput: 0\\nOutput: 4\""
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == sample_output, 'The solution is not correct.'"
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"7\\n2\\n2\\n0\\n4\""
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"7\\n2\\n2\\n0\\n4\", \"Incorrect output\"\nassert solution() == \"7\\n2\\n2\\n0\\n4\", \"Incorrect output\"\nassert solution() == \"7\\n2\\n2\\n0\\n4\", \"Incorrect output\"\nassert solution() == \"7\\n2\\n2\\n0\\n4\", \"Incorrect output\"\nassert solution() == \"7\\n2\\n2\\n0\\n4\", \"Incorrect output\"\nassert solution() == \"7\\n2\\n2\\n0\\n4\", \"Incorrect output\"\nassert solution() == \"7\\n2\\n2\\n0\\n4\", \"Incorrect output\"\nassert solution() == \"7\\n2\\n2\\n0\\n4\", \"Incorrect output\"\nassert solution() == \"7\\n2\\n2\\n0\\n4\", \"Incorrect output\"\nassert solution() == \"7\\n2\\n2\\n0\\n4\", \"Incorrect output\"\nassert solution() == \"7\\n2\\n2\\n0\\n4\", \"Incorrect output\"\nassert solution() == \"7\\n2\\n2\\n0\\n4\", \"Incorrect output\"\nassert solution() == \"7\\n2\\n2\\n0\\n4\", \"Incorrect output\"\nassert solution() == \"7\\n2\\n2\\n0\\n4\", \"Incorrect output\"\nassert solution() == \"7\\n2\\n2\\n0\\n4\", \"Incorrect output\"\nassert solution() == \"7\\n2\\n2\\n0\\n4\", \"Incorrect output\"\nassert solution() == \"7\\n2\\n2\\n0\\n4\", \"Incorrect output\"\nassert solution() == \"7\\n2\\n2\\n0\\n4\", \"Incorrect output\""
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7\\n1 2 3 1 2 1 1\\n5\\n1 3 1 2 3\\n1 2 1 2\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2\") == \"7\\n2\\n2\\n0\\n4\"\nprint(\"All test cases passed\")\n"
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"7\\n2\\n2\\n0\\n4\"\nprint(\"All test cases pass!\")"
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7\\n1 2 3 1 2 1 1\\n5\\n1 3 1 2 3\\n1 2 1 2\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2\") == \"7\\n2\\n2\\n0\\n4\""
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7\\n1 2 3 1 2 1 1\\n5\\n1 3 1 2 3\\n1 2 1 2\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2\\n\") == \"7\\n2\\n2\\n0\\n4\""
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n40 30 30 40 20 40 50 30 30 50\\n0.0 0.0 0.45 0.45 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.2 0.2 0.2 0.2 0.2\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.8 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.8 0.0 0.0 0.0 0.2\") == \"32.6405451448\""
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == expected_output, \"Your solution is incorrect. Please check the sample input and expected output.\""
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(solution) == 32.6405451448, \"The solution is incorrect.\""
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 32.6405451448, \"Incorrect answer.\""
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 32.640545144799997\n"
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == '''32.6405451448'''"
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n4\n40 30 30 40 20 40 50 30 30 50\n0.0 0.0 0.45 0.45 0.1\n0.0 0.3 0.3 0.3 0.1\n0.3 0.0 0.3 0.3 0.1\n0.0 0.3 0.3 0.3 0.1\n0.2 0.2 0.2 0.2 0.2\n0.3 0.0 0.3 0.3 0.1\n0.0 0.8 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.8 0.0 0.0 0.0 0.2\n\"\"\"\n) == \"32.6405451448\""
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n40 30 30 40 20 40 50 30 30 50\\n0.0 0.0 0.45 0.45 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.2 0.2 0.2 0.2 0.2\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.8 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.8 0.0 0.0 0.0 0.2\") == \"32.6405451448\\n\""
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"32.6405451448\"\n"
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"32.6405451448\"\n"
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n2 1 4 3\") == \"2 3 4 1\"\n"
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '''2 3 4 1'''\nprint(\"All tests pass\")"
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\"\n"
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '2 3 4 1\\n'\n\nsolution = lambda: '2 3 4 1\\n'\nsolution"
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}, Got: {solution(stdin)}\""
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2 3 4 1\", \"Your solution is incorrect\""
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n2 1 4 3\\n') == '2 3 4 1\\n'"
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n4\n2 1 4 3\n''') == '''\n2 3 4 1\n'''\n"
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n2 1 4 3\") == \"2 3 4 1\\n\""
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n2 1 4 3\\n\") == \"2 3 4 1\\n\"\n"
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\") == \"7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\"\nassert solution(\"4\\n1 1\\n2 1\\n3 1\\n4 1\") == \"3.1415926535897931\"\nassert solution(\"3\\n1 1\\n1 2\\n1 3\") == \"2.0000000000000004\"\nassert solution(\"2\\n1 1\\n2 1\\n1 2\") == \"2.0000000000000004\"\nassert solution(\"5\\n1 1\\n2 1\\n3 1\\n4 1\\n1 2\\n2 2\") == \"1.5707963267948966\""
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == \"7.656854249492381\", \"Test case 1 failed.\""
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\") == \"7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n\""
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\") == \"7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n\"\nassert solution(\"5\\n1 2\\n2 1\\n3 2\\n4 1\\n\") == \"5.0000000000000004\\n\"\n"
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output() for input, output in [\n    (\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\", \"7.656854249492381\"),\n    (\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 5\", \"7.656854249492381\"),\n]"
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\") == \"7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\"\nassert solution(\"7\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\") == \"10.528775502259701\"\nassert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n5\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n4\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n3\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n2\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n1\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\") == \"5.305617825846279\"\nassert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n5\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n4\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n3\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n2\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n1\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\") == \"5.305617825846279\""
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"7.656854249492381\""
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"7.656854249492381\", \"Incorrect Answer\"\n"
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1') == '7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381'"
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received: {solution(input())}\""
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2"
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2, \"Test failed\""
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 2\nassert solution(1) == 1\nassert solution(2) == 2\nassert solution(3) == 2\nassert solution(3) == 1\nassert solution(3) == 1"
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2\n\nfrom typing import List"
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == \"2\""
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2\n"
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 2, \"Test case 1 failed\""
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2\n"
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"9\""
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1\") == 9, \"Incorrect output\""
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1\") == 9, \"The expected result is incorrect. Please check the example provided.\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1\") == \"9\\n\""
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1\") == \"9\"\nassert solution(\"3 4\") == \"9\"\nassert solution(\"10 5\") == \"14\"\nassert solution(\"5 5\") == \"0\"\nassert solution(\"2 3\") == \"0\""
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1\") == \"9\", \"Your code is not passing the testcase.\""
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 1') == '9'"
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1\") == \"9\""
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 1') == '9\\n'\n"
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1\\n\") == \"9\\n\"  # correct\n"
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"12\""
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"12\"\nassert solution() == \"no solution\""
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '12', \"The given solution is incorrect.\""
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"12\"\n"
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 2 3 5 7') == '12'\nassert solution('1 2 3 5 7 12') == '12'\nassert solution('1 2 3 4') == ''\nassert solution('5 2 3 5 7') == '12'\nassert solution('1 1 1 1 1') == '1'"
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n2\\n3\\n5\\n7\\n12\\n\") == \"12\\n\"\nassert solution(\"1\\n-5\\n2\\n4\\n\") == \"2\\n\"\nassert solution(\"1\\n3\\n4\\n5\\n\") == \"5\\n\"\nassert solution(\"6\\n7\\n8\\n9\\n10\\n11\\n\") == \"11\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n\") == \"100\\n\""
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n2\\n3\\n5\\n7\\n12\") == \"12\""
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"12\\n\"\nassert solution(5) == \"12\\n\"\nassert solution(1) == \"no solution\\n\"\nassert solution(2) == \"no solution\\n\"\nassert solution(4) == \"no solution\\n\""
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2\\n3\\n5\\n7\\n12\\n\") == \"12\\n\"\nassert solution(\"10\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n\") == \"8\\n\"\nassert solution(\"3\\n6\\n9\\n12\\n15\\n18\\n\") == \"15\\n\"\nassert solution
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"The output '{solution(input())}' is incorrect. Expected output: '{expected_output}'.\""
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n00\\n01\\n10\\n110\\n111\\n') == '11'\nassert solution('6\\n00\\n01\\n10\\n110\\n111\\n') == '-1'\n"
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n00\\n01\\n10\\n110\\n111\") == \"11\"\nassert solution(\"5\\n00\\n01\\n10\\n110\\n111\\n111\") == \"111\"\nassert solution(\"5\\n00\\n01\\n10\\n110\\n111\\n111\\n111\") == \"111\"\nassert solution(\"5\\n00\\n01\\n10\\n110\\n111\\n111\\n111\\n111\") == \"111\"\nassert solution(\"5\\n00\\n01\\n10\\n110\\n111\\n111\\n111\\n111\\n111\") == \"111\""
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"00\\n01\\n10\\n110\\n111\") == \"11\"\n"
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n00\\n01\\n10\\n110\\n111') == '11\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"11\""
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '11'\n"
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n00\\n01\\n10\\n110\\n111\\n\") == \"11\"\nassert solution(\"16\\n0101\\n0100\\n1011\\n1010\\n1110\\n1101\\n1111\\n\") == \"11\"\nassert solution(\"3\\n101\\n1001\\n1101\\n\") == \"1111\"\nassert solution(\"5\\n
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('00\\n01\\n10\\n110\\n111') == 11\nassert solution('00\\n01\\n00\\n01\\n10\\n110\\n111') == -1\nassert solution('00\\n01\\n00\\n01\\n00\\n01\\n10\\n110\\n111') == 11\nassert solution('00\\n01\\n00\\n01\\n00\\n01\\n00\\n01\\n10\\n110\\n111') == -1"
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"00\\n01\\n10\\n110\\n111\") == \"11\"\nassert solution(\"00\\n10\\n110\\n111\") == \"11\"\nassert solution(\"00\\n10\\n010\\n111\") == \"-1\"\nassert solution(\"00\\n0000\\n0001\\n0010\\n0011\\n0100\\n0101\\n0110\\n0111\\n1000\\n1001\\n1010\\n1011\\n1100\\n1101\\n1110\\n1111\") == \"111\""
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected_output, f\"Expected Output: {expected_output}, Actual Output: {solution(stdin)}\""
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n3\n2\n20 100\n100 10\n1\n150 50\n1\n150 100\n''') == '''\n100 250 320\n'''"
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"100 250 320\\n\", \"Incorrect output\""
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    3\n    2\n    20 100\n    100 10\n    1\n    150 50\n    1\n    150 100\n    \"\"\"\n) == \"100 250 320\\n\""
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n2\\n20 100\\n100 10\\n1\\n150 50\\n1\\n150 100\") == \"100 250 320\\n\"\n"
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n2\\n20 100\\n100 10\\n1\\n150 50\\n1\\n150 100\\n\") == \"100 250 320\""
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"100 250 320\""
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"100 250 320\\n\""
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '100 250 320'"
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=input()) == expected_output, f\"Your solution is incorrect. Please see the provided example and solution.\"\n"
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"50 100\") == \"3 7 4 6 5 7 2 15 2\"\nassert solution(\"100 50\") == \"9 6 5 4 3 2 1\"\nassert solution(\"50 150\") == \"2 1\"\nassert solution(\"150 50\") == \"2 1\"\nassert solution(\"50 50\") == \"0\"\nassert solution(\"150 150\") == \"0\""
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"50 100\") == \"3 7 4 6 5 7 2 15 2\\n\"\nassert solution(\"55 105\") == \"2 1 1 8 2 1 2 8\\n\"\nassert solution(\"25 55\") == \"6 3 1 15 6 3 1 15\\n\"\nassert solution(\"75 100\") == \"6 1 6 1 6 1 6 1\\n\"\nassert solution(\"100 150\") == \"1 2 1 2 1 2 1 2\\n\"\nassert solution(\"1000 9999\") == \"9 999 999 999 9\\n\"\n"
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('50 100') == '3 7 4 6 5 7 2 15 2\\n'\n"
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(r'1\\n50\\n100') == '3 7 4 6 5 7 2 15 2\\n'\n"
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin='50 100') == '3 7 4 6 5 7 2 15 2'\n"
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('50 100') == '3 7 4 6 5 7 2 15 2'\n"
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"50 100\") == \"3 7 4 6 5 7 2 15 2\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"50 100\") == \"3 7 4 6 5 7 2 15 2\\n\"\n"
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"50 100\") == \"3 7 4 6 5 7 2 15 2\\n\"\nassert solution(\"1 2\") == \"1 1\\n\"\nassert solution(\"100 100\") == \"9 9\\n\"\nassert solution(\"100 50\") == \"0 1\\n\"\nassert solution(\"1000000000 1000000000\") == \"9999999999 9999999999\\n\""
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"50 100\") == \"3 7 4 6 5 7 2 15 2\"\nassert solution(stdin=\"49 50\") == \"3 7 4 6 5 7 2 15 2\"\nassert solution(stdin=\"60 60\") == \"3 7 4 6 5 7 2 15 2\"\nassert solution(stdin=\"90 90\") == \"3 7 4 6 5 7 2 15 2\"\nassert solution(stdin=\"101 101\") == \"3 7 4 6 5 7 2 15 2\"\nassert solution(stdin=\"100 99\") == \"3 7 4 6 5 7 2 15 2\"\nassert solution(stdin=\"100 100\") == \"3 7 4 6 5 7 2 15 2\"\nassert solution(stdin=\"999 999\") == \"3 7 4 6 5 7 2 15 2\"\nassert solution(stdin=\"1001 1001\") == \"3 7 4 6 5 7 2 15 2\"\nassert solution(stdin=\"1000 999\") == \"3 7 4 6 5 7 2 15 2\""
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Incorrect output: expected {output}, got {solution(input())}\""
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_data) == expected_output, f\"Test case failed: {input_data} -> {expected_output}\""
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7\\n\") == 40.0\n\nfrom typing import List\nfrom math import sqrt"
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"40.0000000000\""
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 40.0000000000, \"The solution for the given constraints is incorrect.\""
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n4\n0 0\n0 14\n15 14\n15 0\n4\n8 3\n4 6\n7 10\n11 7\n\"\"\") == 40.0\n\nfrom typing import List"
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"40.0000000000\\n\"\nassert solution(open(\"input1.txt\", \"r\").read()) == \"12.0000000000\\n\"\nassert solution(open(\"input2.txt\", \"r\").read()) == \"28.0000000000\\n\"\nassert solution(open(\"input3.txt\", \"r\").read()) == \"64.0000000000\\n\"\nassert solution(open(\"input4.txt\", \"r\").read()) == \"12.0000000000\\n\"\nassert solution(open(\"input5.txt\", \"r\").read()) == \"20.0000000000\\n\""
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r')) == 40.0"
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 40.0000000000"
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 40.0\nprint(\"All tests passed.\")"
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected_output, \"Test case failed\""
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1\\n1\\n\"\nassert solution() == \"1\\n1\\n\"\nassert solution() == \"1\\n1\\n\""
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n2 1 3\") == \"1\\n1\"\nassert solution(\"4\\n1 2 3 4\") == \"1\\n2\"\nassert solution(\"5\\n2 1 2 1 2\") == \"2\\n1\"\nassert solution(\"6\\n2 3 1 3 2 2\") == \"1\\n2\"\nassert solution(\"7\\n2 2 1 2 1 2 2 2\") == \"1\\n2\"\nassert solution(\"8\\n2 3 3 3 3 3 2 2\") == \"1\\n2\"\nassert solution(\"9\\n2 2 1 2 2 2 1 2 2 2 2 2 2 2\") == \"1\\n3\"\nassert solution(\"10\\n3 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\") == \"1\\n3\""
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '1\\n1'"
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n3\\n2 1 3\") == \"1\\n1\""
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n3\\n2 1 3\\n\") == \"1\\n1\\n\"\nassert solution(\"2\\n3\\n2 1 3\\n4\\n5\\n6\\n\") == \"1\\n2\\n\""
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''1\n3\n2 1 3''') == '1\\n1\\n'\nassert solution('''2\n2\n1 2 3''') == '2\\n1\\n'\nassert solution('''3\n2\n1 3 2''') == '1\\n1\\n'"
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n3\\n2 1 3\") == \"1\\n1\\n\"\nassert solution(\"1\\n2\\n3\\n2 1 3\") == \"1\\n1\\n\""
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n3\\n2 1 3\") == \"1\\n1\\n\"\nassert solution(\"1\\n3\\n2 4 3\\n\") == \"1\\n\"\nassert solution(\"1\\n3\\n2 3 4\\n\") == \"1\\n\"\nassert solution(\"1\\n3\\n2 1 4\\n\") == \"1\\n\""
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"725.85 1.71 2.38\") == \"199 162\\n\"\n"
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"725.85 1.71 2.38\") == \"199 162\""
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"725.85 1.71 2.38\") == \"199 162\", \"Test failed for sample input.\""
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_string) == output_string, f\"The output of the solution is incorrect. Expected {output_string}, but got {solution(input_string)}.\""
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"725.85 1.71 2.38\") == \"199 162\""
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"725.85 1.71 2.38\") == \"199 162\"\n"
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('725.85 1.71 2.38') == '199 162'"
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"725.85 1.71 2.38\") == \"199 162\""
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"725.85 1.71 2.38\") == \"199 162\""
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"199 162\\n\"\n"
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0\") == 16\n\nMirko has a chessboard with $N$ rows and just three columns. Slavica has written an integer on each field. Mirko has $K$ dominoes at his disposal, their dimensions being $2 \\times 1$, and has to arrange all of them on the board without overlapping, in a way that each domino covers exactly two fields of the board. He can rotate the dominoes as he please.\n\nFor each of the dominoes, he writes $1$ on one field and $-1$ on the other field. He has to arrange all $K$ dominoes on the chessboard, without overlapping, in a way that each domino covers exactly two fields of the board.\n\nTo cover the largest sum possible, Mirko can rotate the dominoes in the following way:\n\n1. Flip the dominoes around their midpoints so that their midpoints are on opposite sides of the board.\n2. Place the dominoes on the opposite side of the board so that their midpoints are on the same side.\n3. Rotate the dominoes so that the midpoints are on the opposite side of the board.\n4. Flip the dominoes around their midpoints so that their midpoints are on opposite sides of the board.\n5. Place the dominoes on the opposite side of the board so that their midpoints are on the same side.\n6. Rotate the dominoes so that the midpoints are on the opposite side of the board.\n7. Repeat steps 1 to 6 until all dominoes have been rotated and placed in the correct order.\n8. Flip the dominoes around their midpoints so that their midpoints are on opposite sides of the board.\n9. Place the dominoes on the opposite side of the board so that their midpoints are on the same side.\n10. Repeat steps 1 to 9 until all dominoes have been rotated and placed in the correct order.\n11. Flip the dominoes around their midpoints so that their midpoints are on opposite sides of the board.\n12. Place the dominoes on the opposite side of the board so that their midpoints are on the same side.\n13. Repeat steps 1 to 12 until all dominoes have been rotated and placed in the correct order.\n14. Flip the dominoes around their midpoints so that their midpoints are on opposite sides of the board.\n15. Place the dominoes on the opposite side of the board so that their midpoints are on the same side.\n16. Repeat steps 1 to 15 until all dominoes have been rotated and placed in the correct order.\n17. Flip the dominoes around their midpoints so that their midpoints are on opposite sides of the board.\n18. Place the dominoes on the opposite side of the board so that their midpoints are on the same side.\n19. Repeat steps 1 to 18 until all dominoes have been rotated and placed in the correct order.\n20. Flip the dominoes around their midpoints so that their midpoints are on opposite sides of the board.\n21. Place the dominoes on the opposite side of the board so that their midpoints are on the same side.\n22. Repeat steps 1 to 21 until all dominoes have been rotated and placed in the correct order.\n23. Flip the dominoes around their midpoints so that their midpoints are on opposite sides of the board.\n24. Place the dominoes on the opposite side of the board so that their midpoints are on the same side.\n25. Repeat steps 1 to 24 until all dominoes have been rotated and placed in the correct order.\n26. Flip the dominoes around their midpoints so that their midpoints are on opposite sides of the board.\n27. Place the dominoes on the opposite side of the board so that their midpoints are on the same side.\n28. Repeat steps 1 to 27 until all dominoes have been rotated and placed in the correct order.\n29. Flip the dominoes around their midpoints so that their midpoints are on opposite sides of the board.\n30. Place the dominoes on the opposite side of the board so that their midpoints are on the same side.\n31. Repeat steps 1 to 30 until all dominoes have been rotated and"
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Expected output: {output()}, Received: {solution(input())}\""
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_string) == expected_output, f\"Solution does not match expected output: got '{solution(input_string)}', expected '{expected_output}'\""
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"16\\n\""
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"16\\n\"\nassert solution(stdin) == \"16\\n\""
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '16\\n'"
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"16\\n\""
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0\\n\") == \"16\""
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n    5 3\n    2 1 -1\n    1 3 2\n    0 2 3\n    2 1 1\n    3 3 0\n''') == '16\\n'"
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2 1 4\"\nassert solution(input()) == \"1 4 2\"\nassert solution(input()) == \"3 5 2\"\nassert solution(input()) == \"3 4 1\""
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\nO 4\\nSample Input:1\\nO 4\\nSample Output:2 1 4\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\") == \"2 1 4\\n\""
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\nO 4\\n\") == \"2 1 4\\n\""
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2 1 4\", \"The output should be 2 1 4\""
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2 1 4\\n\", \"Incorrect output\""
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '2 1 4\\n', \"Testcase 1 failed\"\n\nassert solution(stdin) == '2 2 2\\n', \"Testcase 2 failed\"\n\nassert solution(stdin) == '2 3 1\\n', \"Testcase 3 failed\"\n\nassert solution(stdin) == '1 15 16 8 4 2 1 1\\n', \"Testcase 4 failed\""
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\nO 4\") == \"2 1 4\\n\", \"Test 1\"\nassert solution(\"2\\nO 15\") == \"2 1 15\\n\", \"Test 2\"\nassert solution(\"3\\nE 3\\nI 12\\nI 1\\nE 6\\nO 10\\nE 9\\n\") == \"2 1 4\\n2 1 15\\n2 1 4\\n2 1 15\\n2 1 4\\n\", \"Test 3\""
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2 1 4\\n\"\n"
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\nO 4\") == \"2 1 4\"\n"
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 4"
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\") == 4\nassert solution(\"10 10\\n1 1 1 1\") == 1\nassert solution(\"3 3\\n1 1 1 1 1\") == 3\nassert solution(\"10 10\\n1 1 1 1\") == 1\nassert solution(\"1000 1000\") == 1000000000\nassert solution(\"10 10\\n1 1 1 1\") == 1"
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\") == \"4\\n\"\nassert solution(\"5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\\n\") == \"4\\n\"\nassert solution(\"5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\\n6 7 1 8\\n4 12 8 13\\n\") == \"4\\n\"\nassert solution(\"5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\\n6 7 1 8\\n4 12 8 13\\n8 11 14 10\\n\") == \"4\\n\"\nassert solution(\"5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\\n6 7 1 8\\n4 12 8 13\\n8 11 14 10\\n8 14 12 9\\n\") == \"4\\n\""
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14') == 4\nassert solution('1 1 1 1') == 1\nassert solution('10 10') == 10000000000000000000\nassert solution('1000000000000000000') == 100000000000000000000\nassert solution('1 2') == 0\nassert solution('0 0') == 0\nassert solution('10 10000000000000000000') == 10000000000000000000\n"
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\\n\") == \"4\"\nassert solution(\"5 9\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\\n\") == \"5\""
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\") == \"4\\n\"\nassert solution(\"5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\\n2 2 1 5\") == \"5\\n\"\nassert solution(\"5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\\n2 2 1 5\\n2 3 5 10\") == \"6\\n\"\nassert solution(\"5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\\n2 2 1 5\\n2 3 5 10\\n2 4 5 15\") == \"7\\n\"\nassert solution(\"5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\\n2 2 1 5\\n2 3 5 10\\n2 4 5 15\\n2 5 6 20\") == \"8\\n\"\nassert solution(\"5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\\n2 2 1 5\\n2 3 5 10\\n2 4 5 15\\n2 5 6 20\\n2 6 7 25\") == \"9\\n\"\nassert solution(\"5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\\n2 2 1 5\\n2 3 5 10\\n2 4 5 15\\n2 5 6 20\\n2 6 7 25\\n2 7 8 30\") == \"10\\n\"\nassert solution(\"5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\\n2 2 1 5\\n2 3 5 10\\n2 4 5 15\\n2 5 6 20\\n2 6 7 25\\n2 7 8 30\\n2 8 9 35\") == \"11\\n\"\nassert solution(\"5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\\n2 2 1 5\\n2 3 5 10\\n2 4 5 15\\n2 5 6 20\\n2 6 7 25\\n2 7 8 30\\n2 8 9 35\\n2 9 10 40\") == \"12\\n\"\nassert solution(\"5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\\n2 2 1 5\\n2 3 5 10\\n2 4 5 15\\n2 5 6 2"
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '4\\n'"
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"4\", \"The output should be '4'.\""
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == \"4\", \"Test case 1 failed\""
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4.0000 4.0000 4.0000 0.5000\\n4 99 9 99 9\\n9 99 9 99 9\") == \"9.585073\\n\"\n"
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"99.99 99.99 9999.99\\n99 9 999 9999\") == \"9.585073\"\nassert solution(\"99.99 99.99 9999.99\\n99 9 999 9999\") == \"9.585073\""
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=input()) == expected\n"
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('-99.99 99.99 9999.99\\n99 9 999 9999') == '9.585073\\n'\nassert solution('99 9 999 9999') == '9.585073\\n'\nassert solution('9 99 9 99 9') == '9.585073\\n'"
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"99.99 99.99 9999.99\") == \"9.585073\"\nassert solution(\"99 9 999 9999\") == \"9.585073\""
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('-99.99 99.99 9999.99\\n99 9 999 9999') == '9.585073'"
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"99.99 99.99 9999.99\\n99 9 999 9999\") == \"9.585073\""
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '9.585073'\n"
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n-99.99 99.99 9999.99\n99 9 999 9999\n9 99 9 99 9\n''') == '9.585073\\n'"
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"-99.99 99.99 9999.99\") == \"9.585073\"\nassert solution(\"99 9 999 9999\") == \"9.585073\"\nassert solution(\"9 99 9 99 9\") == \"9.585073\""
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"Test case {test_case} failed: Expected {expected}, got {solution(stdin)}\""
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, got: {solution(stdin)}\"\n"
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('20 30\\n2 10 20 2 24 18 28 10') == '12.74 127.83'\nassert solution('10 10\\n3 0 3 0 3 0') == 'impossible'\nassert solution('10 10\\n1 10 1 10 1 10') == 'impossible'\nassert solution('10 10\\n1 0 0 0 0 1') == 'impossible'\nassert solution('10 10\\n1 10 1 10 1 10') == 'impossible'\nassert solution('10 10\\n1 10 1 10 1 10') == 'impossible'\nassert solution('10 10\\n1 10 1 10 1 10') == 'impossible'\nassert solution('10 10\\n1 10 1 10 1 10') == 'impossible'\nassert solution('10 10\\n1 10 1 10 1 10') == 'impossible'\nassert solution('10 10\\n1 10 1 10 1 10') == 'impossible'\nassert solution('10 10\\n1 10 1 10 1 10') == 'impossible'\nassert solution('10 10\\n1 10 1 10 1 10') == 'impossible'\nassert solution('10 10\\n1 10 1 10 1 10') == 'impossible'\nassert solution('10 10\\n1 10 1 10 1 10') == 'impossible'\nassert solution('10 10\\n1 10 1 10 1 10') == 'impossible'\nassert solution('10 10\\n1 10 1 10 1 10') == 'impossible'\nassert solution('10 10\\n1 10 1 10 1 10') == 'impossible'\nassert solution('10 10\\n1 10 1 10 1 10') == 'impossible'\nassert solution('10 10\\n1 10 1 10 1 10') == 'impossible'\nassert solution('10 10\\n1 10 1 10 1 10') == 'impossible'\nassert solution('10 10\\n1 10 1 10 1 10') == 'impossible'\nassert solution('10 10\\n1 10 1 10 1 10') == 'impossible'\nassert solution('10 10\\n1 10 1 10 1 10') == 'impossible'\nassert solution('10 10\\n1 10 1 10 1 10') == 'impossible'\nassert solution('10 10\\n1 10 1 10 1 10') == 'impossible'\nassert solution('10 10\\n1 10 1 10 1 10') == 'impossible'\nassert solution('10 10\\n1 10 1 10 1 10') == 'impossible'\nassert solution('10 10\\n1 10 1 10 1 10') == 'impossible'\nassert solution('10 10\\n1 10 1 10 1 10') == 'impossible'\nassert solution('10 10\\n1 10 1 10 1 10') == 'impossible'\nassert solution('10 10\\n1 10 1 10 1 10') == 'impossible'\nassert solution('10 10\\n1 10 1 10 1 10') == 'impossible'\nassert solution('10 10\\n1 10 1 10 1 1"
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"\"\"12.74 127.83\"\"\""
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('20 30\\n2 10 20 2 24 18 28 10') == '12.74 127.83'\n"
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"20 30\\n2 10 20 2 24 18 28 10\") == \"12.74 127.83\""
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"20 30\\n2 10 20 2 24 18 28 10\") == \"12.74 127.83\""
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"impossible\\n\", \"Test failed\""
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"20 30\\n2 10 20 2 24 18 28 10\") == \"12.74 127.83\"\n"
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('20 30\\n2 10 20 2 24 18 28 10') == '12.74 127.83'\n"
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0116\", \"Test failed\""
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=input()) == \"0116\\n\", \"Incorrect output.\""
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_data) == expected_output, f\"Test case failed for solution:\\n\\tInput: {input_data}\\n\\tExpected Output: {expected_output}\\n\\tSolution: {solution(input_data)}\""
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n110\\n6\\n\") == \"0116\"\n"
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"0116\"\n\nfrom typing import List"
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n110\\n6\\n') == '0116'"
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\n110\\n6\\n') == '0116'"
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n110\\n6\\n\") == \"0116\\n\""
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '0116', \"The solution should be 0116\""
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\n110\\n6\\n') == '0116\\n'\nassert solution('2\\n110\\n6\\n100\\n111\\n1\\n') == '0116\\n111\\n100\\n'\nassert solution('3\\n110\\n6\\n100\\n111\\n1\\n111\\n') == '0116\\n111\\n110\\n100\\n'"
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Test failed: {output()}\\nExpected output: {output()}\""
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"0 2 4\""
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 3\\n4 4 4\") == \"0 2 4\"\nassert solution(\"10 20\\n40 50\") == \"0 10 50\""
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 3\\n4 4 4\") == \"0 2 4\""
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n    8 3\n    4 4 4\n''') == ['0', '2', '4']"
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 3\\n4 4 4\") == \"0 2 4\""
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 3\\n4 4 4\") == \"0 2 4\""
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 3\\n4 4 4\") == \"0 2 4\""
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('8 3\\n4 4 4') == '0 2 4'\nassert solution('8 3\\n4 2 5') == '1 3 6'\nassert solution('8 3\\n4 4 2') == '2 3 3'\nassert solution('8 3\\n4 2 5') == '1 3 6'\nassert solution('8 3\\n4 2 3') == '1 3 6'"
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\") == \"impossible\"\nassert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\\n8\") == \"def solution(stdin: str) -> str:\\n    pass\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\") == \"impossible\""
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5') == 'impossible'"
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == expected_output, f\"Test case {sample_input} failed. Expected output: {expected_output}, Actual output: {solution(sample_input)}\""
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == \"impossible\", \"Expected 'impossible', but got '{}'.\".format(solution(sample_input))\n\nfrom typing import List"
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\\n\") == \"impossible\"\n"
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\") == \"impossible\"\nassert solution(\"5\\n5\\n1 2\\n2 1\\n3 1\\n1 1\") == \"possible\"\nassert solution(\"4\\n4\\n1 1\\n1 1\\n1 1\\n1 1\") == \"impossible\""
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\\n\") == \"impossible\"\nassert solution(\"5\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\\n\") == \"possible\""
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\") == \"impossible\"\n\nassert solution(\"2\\n3\\n4\\n1\") == \"impossible\"\n\nassert solution(\"4\\n1\") == \"impossible\"\n\nassert solution(\"4\\n2\\n1 2 3 4\") == \"possible\"\n\nassert solution(\"4\\n3\\n2 4 6 5\") == \"possible\"\n\nassert solution(\"1\\n2\\n3\\n4\") == \"possible\""
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\") == \"impossible\""
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"4.00000\""
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == '4.00000\\n'"
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('test_case.txt', 'r')) == '4.00000\\nImpossible\\n'\n"
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '4.00000'\n"
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n0 0\\n0 10\\n2\\n4 10\\n4 0\") == 4.0\nassert solution(\"2\\n1000 2000\\n2000 1000\\n2\\n500 1000\\n500 0\") == 100000\nassert solution(\"2\\n1000 2000\\n2000 1000\\n2\\n500 1000\\n500 0\") == \"impossible\""
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 4.00000"
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '4.00000'"
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n0 0\\n0 10\\n2\\n4 10\\n4 0\") == 4.0\n\nfrom math import sqrt"
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 0\\n0 10\\n2\\n4 10\\n4 0\") == \"4.00000\\nimpossible\"\nassert solution(\"2\\n4 10\\n4 0\") == \"4.00000\\nimpossible\"\nassert solution(\"0 0\\n10 0\\n10 10\\n10 10\\n10 0\") == \"impossible\""
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"impossible\"  # Test case 1\nassert solution(\"2\\n0 0\\n0 10\\n2\\n4 10\\n4 0\") == \"4.00000\"  # Test case 2\nassert solution(\"4\\n10 10\\n0 0\\n10 10\\n0 0\") == \"impossible\"  # Test case 3\n\nimport math"
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n3 2 5\n1 1\n1 3\n3 1\n3 3\n2 2\n''') == '1'\nassert solution('''\n3 2 5\n1 1\n1 3\n3 2\n3 3\n2 2\n''') == '0'\nassert solution('''\n3 2 5\n1 1\n1 3\n3 1\n3 3\n2 2\n''') == '0'\nassert solution('''\n3 2 5\n1 1\n1 3\n3 2\n3 3\n2 2\n''') == '1'"
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_str) == expected_output, f\"Test case {index + 1} failed. Expected: {expected_output}, Received: {solution(input_str)}\""
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\") == 1, \"Expected output: 1, actual output: {}\".format(solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\"))\n"
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\\n') == '1'\nassert solution('4 2 4\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\\n') == '0'\nassert solution('1 1\\n1 2\\n2 1\\n3 2\\n4 3\\n5 4\\n') == '1'"
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == sample_output, \"Incorrect output\""
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"1\\n\", \"Test failed\"\nassert solution(input()) == \"0\\n\", \"Test failed\"\nassert solution(input()) == \"1\\n\", \"Test failed\"\nassert solution(input()) == \"1\\n\", \"Test failed\"\nassert solution(input()) == \"0\\n\", \"Test failed\""
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2') == 1\nassert solution('5 5 2\\n1 2\\n2 3\\n3 1\\n3 4\\n4 1') == 1\nassert solution('10 10 10') == 0\nassert solution('10 10 5') == 0\n"
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''3 2 5\n1 1\n1 3\n3 1\n3 3\n2 2''') == '1\\n'"
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\\n\") == 1, \"Expected 1, got: {}\".format(solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\\n\"))\nassert solution(\"5 5 5\\n4 1 2\\n2 4 5\\n1 3 6\\n6 4 7\\n7 3 1\\n4 6 8\\n\") == 0, \"Expected 0, got: {}\".format(solution(\"5 5 5\\n4 1 2\\n2 4 5\\n1 3 6\\n6 4 7\\n7 3 1\\n4 6 8\\n\"))"
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\") == \"1\"\nassert solution(\"4 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\") == \"0\"\nassert solution(\"2 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\") == \"0\"\nassert solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 4\") == \"0\""
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n') == '''\n1 0\n2 4\n'''"
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution([5, 6]), \"Sample Input\"\nassert solution([5, 6, 7]), \"Sample Input\"\nassert solution([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 22"
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\") == \"5 3\\n1 0\\n2 4\"\nassert solution(\"3 5\\n1 0\\n2 1\\n2 2\\n3 3\") == \"3 3\"\nassert solution(\"1 3\\n4 2\\n3 2\") == \"impossible\""
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\"\n) == \"5 3\\n1 0\\n2 4\""
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3') == '5 3\\n1 0\\n2 4\\n'"
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n\") == \"5 3\\n1 0\\n2 4\"\nassert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n1 2\\n5 3\\n\") == \"5 3\\n1 0\\n2 4\"\nassert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n\") == \"impossible\"\nassert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n1 2\\n5 3\\n\") == \"impossible\"\nassert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n1 2\\n5 3\\n0 3\\n\") == \"5 3\\n1 0\\n2 4\"\nassert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n1 2\\n5 3\\n0 2\\n\") == \"impossible\""
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\") == \"5 3\\n1 0\\n2 4\\nimpossible\""
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(f\"\"\"5 6\n0 1\n0 2\n1 3\n2 3\n1 2\n4 3\"\"\") == \"\"\"5 3\n1 0\n2 4\"\"\""
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3') == '5 3\\n1 0\\n2 4\\nimpossible'\nassert solution('5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 4') == '5 3\\n1 0\\n2 4\\nimpossible'\nassert solution('5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\nimpossible') == '5 3\\n1 0\\n2 4\\nimpossible'\nassert solution('5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n0 0') == '5 3\\n1 0\\n2 4\\nimpossible'\nassert solution('5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n0 1') == '5 3\\n1 0\\n2 4\\nimpossible'\nassert solution('5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n0 2') == '5 3\\n1 0\\n2 4\\nimpossible'"
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 1\\n0 0\\n0 1\\n1 0\\n1 1') == '2\\n1 2'"
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"4 1\\n0 0\\n0 1\\n1 0\\n1 1\\n\"\n) == \"2\\n1 2\""
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '''\n2\n1 2\n'''"
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    4 1\n    0 0\n    0 1\n    1 0\n    1 1\n    \"\"\"\n) == \"\"\"\n2\n1 2\n\"\"\"\n\nassert solution(\n    \"\"\"\n    4 5\n    0 0\n    0 5\n    1 0\n    1 5\n    \"\"\"\n) == \"\"\"\n3\n1 2 3\n\"\"\"\n\nassert solution(\n    \"\"\"\n    10 1\n    0 0\n    0 1\n    1 0\n    1 1\n    2 0\n    2 1\n    3 0\n    3 1\n    4 0\n    4 1\n    5 0\n    5 1\n    6 0\n    6 1\n    7 0\n    7 1\n    8 0\n    8 1\n    9 0\n    9 1\n    \"\"\"\n) == \"\"\"\n6\n1 2 3 4 5\n\"\"\""
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 1\\n0 0\\n0 1\\n1 0\\n1 1') == '2\\n1 2'\nassert solution('4 3\\n0 0\\n0 1\\n1 0\\n1 1') == '0'\nassert solution('4 1\\n0 0\\n0 1\\n1 0\\n1 1\\n2 0\\n2 1\\n2 2') == '0'"
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Input:\\n4 1\\n0 0\\n0 1\\n1 0\\n1 1\\nOutput:\\n2\\n1 2\\n\") == \"Output:\\n2\\n1 2\\n\""
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 1\\n0 0\\n0 1\\n1 0\\n1 1\\n') == '2\\n1 2\\n'\n"
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Input\") == \"Output\""
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2\\n1 2\""
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 1\\n0 0\\n0 1\\n1 0\\n1 1') == '2\\n1 2'"
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 2\\n1 3 5 7 9 11 13 15 17 16\") == \"1\\n\""
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 2\\n1 3 5 7 9 11 13 15 17 16\") == \"1\\n\"\nassert solution(\"10 3\\n1 3 5 7 9 11 13 15 17 16\") == \"2\\n\"\nassert solution(\"10 4\\n1 3 5 7 9 11 13 15 17 16\") == \"3\\n\"\nassert solution(\"10 5\\n1 3 5 7 9 11 13 15 17 16\") == \"4\\n\"\nassert solution(\"10 6\\n1 3 5 7 9 11 13 15 17 16\") == \"5\\n\"\nassert solution(\"10 7\\n1 3 5 7 9 11 13 15 17 16\") == \"6\\n\"\nassert solution(\"10 8\\n1 3 5 7 9 11 13 15 17 16\") == \"7\\n\"\nassert solution(\"10 9\\n1 3 5 7 9 11 13 15 17 16\") == \"8\\n\"\nassert solution(\"10 10\\n1 3 5 7 9 11 13 15 17 16\") == \"9\\n\"\nassert solution(\"10 11\\n1 3 5 7 9 11 13 15 17 16\") == \"10\\n\"\nassert solution(\"10 12\\n1 3 5 7 9 11 13 15 17 16\") == \"11\\n\"\nassert solution(\"10 13\\n1 3 5 7 9 11 13 15 17 16\") == \"12\\n\"\nassert solution(\"10 14\\n1 3 5 7 9 11 13 15 17 16\") == \"13\\n\"\nassert solution(\"10 15\\n1 3 5 7 9 11 13 15 17 16\") == \"14\\n\"\nassert solution(\"10 16\\n1 3 5 7 9 11 13 15 17 16\") == \"15\\n\"\nassert solution(\"10 17\\n1 3 5 7 9 11 13 15 17 16\") == \"16\\n\"\nassert solution(\"10 18\\n1 3 5 7 9 11 13 15 17 16\") == \"17\\n\"\nassert solution(\"10 19\\n1 3 5 7 9 11 13 15 17 16\") == \"18\\n\"\nassert solution(\"10 20\\n1 3 5 7 9 11 13 15 17 16\") == \"19\\n\"\nassert solution(\"10 21\\n1 3 5 7 9 11 13 15 17 16\") == \"20\\n\"\nassert solution(\"10 22\\n1 3 5 7 9 11 13 15 17 16\") == \"21\\n\"\nassert solution(\"10 23\\n1 3 5 7 9 11 13 15 17 16\") == \"22\\n\"\nassert solution(\"10 24\\n1 3 5 7 9 11 13 15 17 16\") == \"23\\n\"\nassert solution(\"10 25\\n1 3 5 7 9 11 13 15 17 16\") == \"24\\n\"\nassert solution(\"10 26\\n1"
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"Output the minimum height difference between the shortest and tallest trees of any contiguous subrange of k trees.\\n\"\n"
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 1\nassert solution(5) == 0\nassert solution(8) == 3\nassert solution(10) == 1\nassert solution(15) == 4"
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('10 2\\n1 3 5 7 9 11 13 15 17 16') == '1\\n'"
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''10 2\n1 3 5 7 9 11 13 15 17 16''') == '1\\n'"
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 2\\n1 3 5 7 9 11 13 15 17 16\") == \"1\"\nassert solution(\"10 3\\n1 2 4 6 8 10 12 14 16 18 20\") == \"1\"\nassert solution(\"10 4\\n1 3 5 7 9 11 13 15 17 19\") == \"1\"\nassert solution(\"10 5\\n1 3 5 7 9 11 13 15 17 19 21\") == \"1\"\nassert solution(\"10 6\\n1 2 4 6 8 10 12 14 16 18 20 22\") == \"1\"\nassert solution(\"10 7\\n1 3 5 7 9 11 13 15 17 19 21 23\") == \"1\"\nassert solution(\"10 8\\n1 2 4 6 8 10 12 14 16 18 20 22 24\") == \"1\"\nassert solution(\"10 9\\n1 2 4 6 8 10 12 14 16 18 20 22 24 26\") == \"1\"\nassert solution(\"10 10\\n1 2 4 6 8 10 12 14 16 18 20 22 24 26 28\") == \"1\"\nassert solution(\"10 11\\n1 2 4 6 8 10 12 14 16 18 20 22 24 26 28 30\") == \"1\"\nassert solution(\"10 12\\n1 3 5 7 9 11 13 15 17 19 21 23 25 27 29 31\") == \"1\"\nassert solution(\"10 13\\n1 2 4 6 8 10 12 14 16 18 20 22 24 26 28 30 32\") == \"1\"\nassert solution(\"10 14\\n1 3 5 7 9 11 13 15 17 19 21 23 25 27 29 31 33\") == \"1\"\nassert solution(\"10 15\\n1 2 4 6 8 10 12 14 16 18 20 22 24 26 28 30 32 34\") == \"1\"\nassert solution(\"10 16\\n1 3 5 7 9 11 13 15 17 19 21 23 25 27 29 31 33 35\") == \"1\"\nassert solution(\"10 17\\n1 2 4 6 8 10 12 14 16 18 20 22 24 26 28 30 32 34 36\") == \"1\"\nassert solution(\"10 18\\n1 3 5 7 9 11 13 15 17 19 21 23 25 27 29 31 33 35 37\") == \"1\"\nassert solution(\"10 19\\n1 2 4 6 8 10 12 14 16 18 20 22 24 26 28 30 32 34 36 38\") == \"1\"\nassert solution(\"10 20\\n1 3 5 7 9 11 13 15 17 19 21 23 25 27 29 "
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 2\\n1 3 5 7 9 11 13 15 17 16\") == \"1\\n\"\nassert solution(\"10 5\\n1 2 3 4 5\") == \"2\\n\""
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1\\n\"\n"
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('10 2\\n1 3 5 7 9 11 13 15 17 16') == '1\\n'\nassert solution('10 10\\n1 2 3 4 5') == '0\\n'\nassert solution('2 10\\n1 2 3 4 5') == '1\\n'\nassert solution('10 10\\n1 2 3 4 5') == '1\\n'"
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4') == '7 4\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4') == '7 4\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '7 4\\ndef solution(stdin: str) -> str:\\n    pass\\n', \"The correct code should be: def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(solution) == \"7 4\""
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\") == \"7 4\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"def solution(stdin: str) -> str:\\n    pass\\n\", \"The provided solution is incorrect.\""
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"7 4\", \"The output is not as expected.\""
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"Expected output: {expected}, Received output: {solution(input())}\""
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"7 4\", \"Incorrect output: 7 4\""
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 'def solution(stdin: str) -> str:\\n\\tpass\\n\\treturn \"def solution(stdin: str) -> str:\\n\\t\\tpass\\n\\treturn \""
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n\"\n"
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n\""
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n\"\nassert solution(\"5 PRINT 10\\n2 PRINT 20\\n3 PRINT 30\\n4 PRINT 40\\n5 PRINT 50\\n\") == \"10\\n20\\n30\\n40\\n50\\n\"\nassert solution(\"1 LET A = 1\\n2 PRINT \\\"HELLO THERE \\\"\\n3 PRINTLN A\\n4 PRINT A\\n5 PRINT A + 1\\n6 PRINT A - 1\\n7 PRINT A * 2\\n8 PRINT A / 2\\n9 PRINT A = 10\\n10 PRINT A + 5\\n11 PRINT A - 5\\n12 PRINT A * 10\\n13 PRINT A / 10\\n14 PRINT A < 10\\n15 PRINT A <= 10\\n16 PRINT A > 10\\n17 PRINT A >= 10\\n18 PRINT A <> 10\\n19 PRINT A + A\\n20 PRINT A - A\\n21 PRINT A * A\\n22 PRINT A / A\\n23 PRINT A < A\\n24 PRINT A <= A\\n25 PRINT A > A\\n26 PRINT A >= A\\n27 PRINT A <> A\\n28 PRINT A < A + 5\\n29 PRINT A <= A + 5\\n30 PRINT A > A + 5\\n31 PRINT A >= A + 5\\n32 PRINT A <> A + 5\\n33 PRINT A + A + A\\n34 PRINT A - A - A\\n35 PRINT A * A * A\\n36 PRINT A / A / A\\n37 PRINT A < A + A\\n38 PRINT A <= A + A\\n39 PRINT A > A + A\\n40 PRINT A >= A + A\\n41 PRINT A <> A + A\\n42 PRINT A * A * A * A\\n43 PRINT A / A / A / A\\n44 PRINT A < A + A + A\\n45 PRINT A <= A + A + A\\n46 PRINT A > A + A + A\\n47 PRINT A >= A + A + A\\n48 PRINT A <> A + A + A\\n49 PRINT A * A * A * A * A\\n50 PRINT A / A / A / A / A\\n51 PRINT A < A + A + A + A\\n52 PRINT A <= A + A + A + A\\n53 PRINT A > A + A + A + A\\n54 PRINT A >= A + A + A + A\\n55 PRINT A <> A + A + A + A\\n56 PRINT A * A * A * A * A * A\\n57 PRINT A / A / A / A / A / A\\n58 PRINT A < A + A + A + A + A\\n59 PRINT A <= A + A + A + A + A\\n60 PRINT A > A + A + A + A + A\\n61 PRINT A >= A + A + A + A + A\\n62 PRINT A <> A + A + A + A + A\\n63 PRINT A * A * A * A * A * A * A\\n64 PRINT A / A / A / A / A / A / A\\n65 PRINT A < A + A + A + A + A + A\\n66 PRINT A <= A + A + A + A + A + A\\n67 PRINT A > A + A + A + A + A + A\\n68 PRINT A >= A + A + A + A + A + A\\n69 PRINT A <> A + A + A + A + A + A\\n70 PRINT A * A * A * A * A * A * A * A\\n71 PRINT A / A / A / A / A / A / A / A\\n72 PRINT A < A + A + A + A + A"
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\", \"The input is empty\""
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n        10 LET A = 1\n        20 PRINT \"HELLO THERE \"\n        30 PRINTLN A\n        40 LET A = A + 1\n        50 IF A <= 5 THEN GOTO 20\n        60 PRINTLN \"DONE\"\n        \"\"\") == \"\"\"\nHELLO THERE 1\nHELLO THERE 2\nHELLO THERE 3\nHELLO THERE 4\nHELLO THERE 5\nDONE\n\"\"\"\n"
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('10 LET A = 1\\n20 PRINT \"HELLO THERE\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \"DONE\"') == 'HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE'\n"
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n\"\n"
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n\""
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"Output:\\n\\n\", \"Solution should return an empty string when given an empty input.\""
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\", \"Test Case 1\"\nassert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n\", \"Test Case 2\"\nassert solution(\"10 LET A = -1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"DONE\\n\", \"Test Case 3\"\nassert solution(\"10 LET A = 2147483647\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 0\\nHELLO THERE 0\\nHELLO THERE 0\\nHELLO THERE 0\\nHELLO THERE 0\\nDONE\\n\", \"Test Case 4\"\nassert solution(\"10 LET A = -2147483648\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"DONE\\n\", \"Test Case 5\""
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3 0 1\\n0 1\") == \"3\\n\""
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 3\nassert solution() == 5\nassert solution() == 11\nassert solution() == 23\nassert solution() == 41"
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n3 0 1\\n0 1\") == 3"
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n3 0 1\\n0 1\") == \"3\\n\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n3 0 1\\n0 1') == 3"
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n3 0 1\\n0 1\") == \"3\\n\"\nassert solution(\"4\\n3 0 1\\n2 3\") == \"5\\n\"\nassert solution(\"5\\n3 0 1\\n2 3\\n4 5\") == \"10\\n\"\nassert solution(\"6\\n3 0 1\\n2 3\\n4 5\\n6 7\") == \"15\\n\"\n\nfrom itertools import combinations"
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n3 0 1\\n0 1\") == 3, \"The solution is incorrect\"\nassert solution(\"5\\n2 1 3\\n1 2 4\") == 4, \"The solution is incorrect\"\nassert solution(\"7\\n4 2 1 3\\n1 2 4 5 6 7\") == 120, \"The solution is incorrect\"\n"
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3, 3, 0, 1) == 3\nassert solution(3, 0, 1, 1) == 4\nassert solution(3, 0, 1, 2) == 2\nassert solution(3, 0, 2, 2) == 4\nassert solution(3, 0, 2, 3) == 3"
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 3\nassert solution(1) == 1\nassert solution(2) == 2\nassert solution(10) == 36\nassert solution(20) == 72\nassert solution(100) == 131071\nassert solution(1000) == 131071\nassert solution(10000) == 131071\nassert solution(100000) == 131071\nassert solution(1000000) == 131071\nassert solution(10000000) == 131071\n\nfrom functools import reduce"
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    '3\\n3 0 1\\n0 1'\n) == '3\\n'\nassert solution(\n    '5\\n3 1 2\\n2 0'\n) == '3\\n'\nassert solution(\n    '7\\n3 4 1\\n0 4'\n) == '4\\n'"
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\") == \"LLRRRRLL\"\nassert solution(\"1\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\") == \"impossible\"\nassert solution(\"1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1"
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3') == 'LLRRRRLL'"
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\") == \"LLRRRRLL\\nimpossible\"\n\nassert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\") == \"LLRRRRLL\\nimpossible\"\n\nassert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\") == \"LLRRRRLL\\nimpossible\"\n\nassert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\") == \"LLRRRRLL\\nimpossible\"\n\nassert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\") == \"LLRRRRLL\\nimpossible\"\n\nassert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\") == \"LLRRRRLL\\nimpossible\"\n\nassert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\") == \"LLRRRRLL\\nimpossible\"\n\nassert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\") == \"LLRRRRLL\\nimpossible\"\n\nassert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\") == \"LLRRRRLL\\nimpossible\"\n\nassert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\") == \"LLRRRRLL\\nimpossible\"\n\nassert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\") == \"LLRRRRLL\\nimpossible\"\n\nassert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\") == \"LLRRRRLL\\nimpossible\"\n\nassert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\") == \"LLRRRRLL\\nimpossible\"\n\nassert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\") == \"LLRRRRLL\\nimpossible\""
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"LLRRRRLL\\n\""
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3') == 'LLRRRRLL\\n'\nprint('All tests passed')"
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n2\\n2\\n1\\n3\\n3\\n5\\n4\\n5\\n3\\n4\\n1\\n3\") == \"LLRRRRLL\"\nassert solution(\"1\\n2\\n2\\n1\\n3\\n3\\n5\\n4\\n5\\n3\\n4\\n1\\n3\\n1\\n2\") == \"impossible\""
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == 'def solution(stdin: str) -> str:\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n    # Your code here\\n    pass\\n\\n   "
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    5\n    1 2\n    2 5\n    2 3\n    1 3\n    3 5\n    4 5\n    3 4\n    1 3\n    \"\"\"\n) == \"LLRRRRLL\"\n\nassert solution(\n    \"\"\"\n    5\n    1 2\n    2 5\n    2 3\n    1 3\n    3 5\n    4 5\n    3 4\n    1 3\n    5 3\n    \"\"\"\n) == \"impossible\"\n\nassert solution(\n    \"\"\"\n    5\n    1 2\n    2 5\n    2 3\n    1 3\n    3 5\n    4 5\n    3 4\n    1 3\n    1 4\n    \"\"\"\n) == \"impossible\""
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n') == 'LLRRRRLL'\nassert solution('5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n1 2\\n') == 'impossible'\nassert solution('5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n2 3\\n') == 'RRLRRRRL'\nassert solution('5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n1 2\\n3 4\\n') == 'RRRRRRRRR'\n"
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\") == \"LLRRRRLL\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2\\n1009 2011\\n1017 2011') == '1\\n2011'\n"
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n2011\\n1009 2011\\n1017 2011\\n\") == \"1\\n2011\\n1009\\n1017\\n\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n1009 2011\\n1017 2011\") == \"1\\n2011\\n\"\nassert solution(\"1\\n1009 2012\\n1017 2011\\n1017 2012\\n1017 2013\") == \"2\\n2011\\n2012\\n2013\\n\"\nassert solution(\"1\\n1009 2011\\n1017 2012\\n1017 2013\\n1017 2014\\n1017 2015\\n1017 2016\\n1017 2017\\n1017 2018\\n1017 2019\\n1017 2020\\n1017 2021\\n1017 2022\\n1017 2023\\n1017 2024\\n1017 2025\\n1017 2026\\n1017 2027\\n1017 2028\\n1017 2029\\n1017 2030\\n1017 2031\\n1017 2032\\n1017 2033\\n1017 2034\\n1017 2035\\n1017 2036\\n1017 2037\\n1017 2038\\n1017 2039\\n1017 2040\\n1017 2041\\n1017 2042\\n1017 2043\\n1017 2044\\n1017 2045\\n1017 2046\\n1017 2047\\n1017 2048\\n1017 2049\\n1017 2050\\n1017 2051\\n1017 2052\\n1017 2053\\n1017 2054\\n1017 2055\\n1017 2056\\n1017 2057\\n1017 2058\\n1017 2059\\n1017 2060\\n1017 2061\\n1017 2062\\n1017 2063\\n1017 2064\\n1017 2065\\n1017 2066\\n1017 2067\\n1017 2068\\n1017 2069\\n1017 2070\\n1017 2071\\n1017 2072\\n1017 2073\\n1017 2074\\n1017 2075\\n1017 2076\\n1017 2077\\n1017 2078\\n1017 2079\\n1017 2080\\n1017 2081\\n1017 2082\\n1017 2083\\n1017 2084\\n1017 2085\\n1017 2086\\n1017 2087\\n1017 2088\\n1017 2089\\n1017 2090\\n1017 2091\\n1017 2092\\n1017"
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1009 2011\\n1017 2011\") == \"1\\n2011\\n\"\nassert solution(\"1009 2011\\n1009 2011\") == \"2\\n2011\\n\"\nassert solution(\"1009 2011\\n1017 2011\") == \"1\\n2011\\n\"\nassert solution(\"1009 2011\\n1017 2011\\n1009 2011\\n1017 2011\\n\") == \"2\\n2011\\n\"\nassert solution(\"1009 2011\\n1017 2011\\n1009 2011\\n1017 2011\\n1009 2011\\n\") == \"1\\n2011\\n\"\nassert solution(\"1009 2011\\n1017 2011\\n1009 2011\\n1017 2011\\n1009 2011\\n1009 2011\\n\") == \"2\\n2011\\n\"\nassert solution(\"1009 2011\\n1017 2011\\n1009 2011\\n1017 2011\\n1009 2011\\n1017 2011\\n\") == \"1\\n2011\\n\"\nassert solution(\"1009 2011\\n1017 2011\\n1009 2011\\n1017 2011\\n1009 2011\\n1009 2011\\n1009 2011\\n\") == \"2\\n2011\\n\"\nassert solution(\"1009 2011\\n1017 2011\\n1009 2011\\n1017 2011\\n1009 2011\\n1017 2011\\n1017 2011\\n\") == \"1\\n2011\\n\"\nassert solution(\"1009 2011\\n1017 2011\\n1009 2011\\n1017 2011\\n1009 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n\") == \"2\\n2011\\n\"\nassert solution(\"1009 2011\\n1017 2011\\n1009 2011\\n1017 2011\\n1009 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1017 2011\\n1"
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '1\\n2011'\nassert solution(input()) == '3\\n1009 1008 2011'"
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n\\tpass\\n\\n\"\n"
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_str) == output_str, f\"Input: {input_str}\\nOutput: {output_str}\""
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == sample_output"
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"your_answer\" # Replace this with your solution code"
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n2011\\n1009 2011\\n1017 2011\\n\") == \"1\\n2011\\n1009\\n1017\\n\""
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '0 3'"
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3') == ['0 3']\n"
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3') == '0 3\\n', \"Incorrect output\""
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"0 3\""
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == ['0 3']"
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3\\n\") == \"0 3\\n\", \"Test case 1 failed\"\n\nassert solution(\"4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n1 0\\n\") == \"1\\n\", \"Test case 2 failed\"\n\nassert solution(\"4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n1 3\\n\") == \"0 1\\n\", \"Test case 3 failed\"\n\nassert solution(\"4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n1 2\\n\") == \"0 2\\n\", \"Test case 4 failed\"\n\nassert solution(\"4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n1 1\\n\") == \"0 3\\n\", \"Test case 5 failed\""
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '0 3'"
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3') == '0 3\\n'\n"
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"0 3\\n\"\nassert solution() == \"2 3\\n\""
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3\\n') == '0 3\\n', \"Solution should return '0 3'\\n\""
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\""
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\""
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\"\n"
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"2.0 10.0\n3 3 0 0\n2001 1000 100\n1001 10000 200\n100 0 0\"\"\"\n) == \"20\"\n\nassert solution(\n    \"\"\"5.0 5.0\n1 1 0 0\n2001 1000 100\n1001 10000 200\n100 0 0\"\"\"\n) == \"10\"\n\nassert solution(\n    \"\"\"2.0 10.0\n3 3 0 0\n2001 1000 100\n1001 10000 200\n100 0 0\"\"\"\n) == \"10\"\n\nassert solution(\n    \"\"\"2.0 10.0\n3 3 0 0\n2001 1000 100\n1001 10000 200\n100 0 0\"\"\"\n) == \"20\"\n\nassert solution(\n    \"\"\"2.0 10.0\n3 3 0 0\n2001 1000 100\n1001 10000 200\n100 0 0\"\"\"\n) == \"20\"\n\nassert solution(\n    \"\"\"2.0 10.0\n3 3 0 0\n2001 1000 100\n1001 10000 200\n100 0 0\"\"\"\n) == \"20\"\n\nassert solution(\n    \"\"\"2.0 10.0\n3 3 0 0\n2001 1000 100\n1001 10000 200\n100 0 0\"\"\"\n) == \"10\"\n\nassert solution(\n    \"\"\"2.0 10.0\n3 3 0 0\n2001 1000 100\n1001 10000 200\n100 0 0\"\"\"\n) == \"20\""
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\""
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\""
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0') == '20'\nprint('All test cases pass')"
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\\n\""
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"20\\n\"\nprint(\"All tests passed\")\n"
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0') == '20', 'The correct answer is 20, but the actual answer is {}'.format(solution('2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0'))"
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5') == 4, \"Testcase 1 failed\"\n\nassert solution('6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\\n6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5') == 3, \"Testcase 2 failed\""
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\") == \"4\\n\", \"The output is incorrect.\""
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\") == 4, \"The correctness of the solution is not verified.\""
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\") == \"4\\n\"\n"
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\") == \"4\\n4\\n\""
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5') == '4'\nassert solution('6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5') == '2'"
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\") == \"4\\n4\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9\") == \"10\\n10\""
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n    6\n    0 2 3 4 5 6\n    0 1 3 4 5 6\n    1 6 5 4 2 1\n    2 6 5 3 2 1\n    1 1 2 3 4 6\n    2 1 2 3 4 5\n    ''') == '4'"
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\") == 4\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\") == 1\nassert solution(\"6\\n0 1 2 3 4 5\\n0 1 2 3 4 5\\n0 1 2 3 4 5\\n0 1 2 3 4 5\\n0 1 2 3 4 5\") == 1\nassert solution(\"6\\n0 1 2 3 4 5\\n0 1 2 3 4 5\\n0 1 2 3 4 5\\n0 1 2 3 4 5\\n0 1 2 3 4 5\") == 1\n"
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n6\n0 2 3 4 5 6\n0 1 3 4 5 6\n1 6 5 4 2 1\n2 6 5 3 2 1\n1 1 2 3 4 6\n2 1 2 3 4 5\n\"\"\") == \"4\"\n\nassert solution(\n\"\"\"\n7\n0 1 2 3 4 5 6\n0 2 3 4 5 6\n0 1 3 4 5 6\n1 2 3 4 5 6\n2 3 4 5 5 6\n3 4 5 5 5 6\n4 5 5 5 5 6\n5 5 5 5 5 6\n\"\"\") == \"6\"\n\nassert solution(\n\"\"\"\n7\n0 1 2 3 4 5 6\n0 2 3 4 5 6\n0 1 3 4 5 6\n1 2 3 4 5 6\n2 3 4 5 5 6\n3 4 5 5 5 6\n4 5 5 5 5 6\n5 5 5 5 5 6\n\"\"\") == \"6\"\n\nassert solution(\n\"\"\"\n6\n0 2 3 4 5 6\n0 1 3 4 5 6\n1 6 5 4 2 1\n2 6 5 3 2 1\n1 1 2 3 4 6\n2 1 2 3 4 5\n\"\"\") == \"4\""
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"4\\n\""
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 4, \"Test failed\"\nassert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n\") == 4, \"Test failed\""
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\") == \"4\\n\"\n"
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input) == expected_output, f\"Your solution is incorrect. Expected output: {expected_output}, but got: {solution(input)}\"\n"
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"4\\n4\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n\""
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7') == '4'"
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\") == \"4\\n\""
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n\") == \"4\\n\"\n"
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n\") == 4\n"
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1') == 6\nassert solution('5\\n1.0001 1.0001\\n3.1 1.0001\\n1.0001 3.1\\n3.1 3.1\\n4.2 3.1') == 6\nassert solution('5\\n1.000001 1.000001\\n3.1 1.000001\\n1.000001 3.1\\n3.1 3.1\\n4.2 3.1') == 6\nassert solution('5\\n1.0000000001 1.0000000001\\n3.1 1.0000000001\\n1.0000000001 3.1\\n3.1 3.1\\n4.2 3.1') == 6\nassert solution('5\\n1.000000000001 1.000000000001\\n3.1 1.000000000001\\n1.000000000001 3.1\\n3.1 3.1\\n4.2 3.1') == 6"
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\") == \"6\\n6\""
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"6\", \"Test Failed\"\n"
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\") == \"6\"\n"
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 6, \"Test case failed\""
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution([1, 1]) == 6, \"Test case 1 failed\"\nassert solution([1, 1, 1, 1, 1]) == 6, \"Test case 2 failed\"\nassert solution([1, 1, 1, 1, 1, 1, 1, 1, 1]) == 6, \"Test case 3 failed\"\nassert solution([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, "
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"1\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n\") == 6"
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n') == 6\nprint('Test passed')"
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    5\n    1.0 1.0\n    3.1 1.0\n    1.0 3.1\n    3.1 3.1\n    4.2 3.1\n    \"\"\"\n) == 6"
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution([3, 2, 2, 2]) == 5\n"
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3)<|im_sep|>"
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3)<|im_sep|>"
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_data) == expected_output, f\"Test failed: solution({input_data})!= expected_output ({expected_output})\""
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"5\\n\""
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n2\\n2\\n2\\n') == '5'"
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, \"Test case failed. Expected output: {}, Received output: {}\".format(expected_output, solution(input()))"
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n2\\n2\\n2\\n\") == \"5\"\nassert solution(\"5\\n2\\n2\\n2\\n\") == \"5\"\nassert solution(\"7\\n1\\n3\\n1\\n\") == \"6\"\nassert solution(\"1\\n3\\n2\\n1\\n\") == \"4\"\nassert solution(\"2\\n3\\n3\\n2\\n\") == \"4\"\nassert solution(\"5\\n1\\n4\\n1\\n\") == \"6\"\nassert solution(\"5\\n3\\n2\\n2\\n\") == \"6\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"0\""
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3)<|im_sep|>"
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 5\n"
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 3\\n2 2 2 1\") == \"1 1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(10) == \"1 1\", \"Test 1 failed\"\nassert solution(1000) == \"1 1\", \"Test 2 failed\"\nassert solution(10000) == \"1 1\", \"Test 3 failed\"\nassert solution(100000) == \"1 1\", \"Test 4 failed\"\nassert solution(1000000000) == \"1 1\", \"Test 5 failed\""
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 3\\n2 2 2 1\") == \"1 1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Test failed: {input()} -> {output}\"\n"
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1 1\\ndef solution(stdin: str) -> str:\\npass\\n\""
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '1 1'"
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == '1 1'"
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1 1\"\n"
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 3\\n2 2 2 1\") == \"1 1\"\nassert solution(\"2 1\\n1 1 1\") == \"2 2\"\nassert solution(\"3 5\\n3 3 1\") == \"2 3\"\nassert solution(\"1 1\\n1 1\") == \"1 1\"\nassert solution(\"2 10\\n4 2 1\") == \"2 3\"\nassert solution(\"10 1\\n1 1\") == \"1 1\"\nassert solution(\"1 1\\n1 1\") == \"1 1\"\nassert solution(\"100 100\\n1 1\") == \"1 1\"\nassert solution(\"2 2\\n2 2 1\") == \"2 2\"\nassert solution(\"3 5\\n3 3 1\") == \"2 3\"\nassert solution(\"3 5\\n3 3 1\") == \"2 3\"\nassert solution(\"1 1\\n1 1\") == \"1 1\""
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1 1\\n\"\nassert solution(input()) == \"1 2\\n\"\nassert solution(input()) == \"1 2\\n\"\nassert solution(input()) == \"1 4\\n\"\nassert solution(input()) == \"2 2\\n\"\nassert solution(input()) == \"3 3\\n\"\nassert solution(input()) == \"3 3\\n\"\nassert solution(input()) == \"3 5\\n\""
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1') == '10'"
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(10) == '10'"
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"10\"\nassert solution(\"2\") == \"20\"\nassert solution(\"3\") == \"30\"\nassert solution(\"4\") == \"40\"\nassert solution(\"5\") == \"50\"\nassert solution(\"6\") == \"60\"\nassert solution(\"7\") == \"70\"\nassert solution(\"8\") == \"80\"\nassert solution(\"9\") == \"90\"\nassert solution(\"10\") == \"100\"\nassert solution(\"11\") == \"110\"\nassert solution(\"12\") == \"120\"\nassert solution(\"13\") == \"130\"\nassert solution(\"14\") == \"140\"\nassert solution(\"15\") == \"150\"\nassert solution(\"16\") == \"160\"\nassert solution(\"17\") == \"170\"\nassert solution(\"18\") == \"180\"\nassert solution(\"19\") == \"190\"\nassert solution(\"20\") == \"200\"\nassert solution(\"21\") == \"210\"\nassert solution(\"22\") == \"220\"\nassert solution(\"23\") == \"230\"\nassert solution(\"24\") == \"240\"\nassert solution(\"25\") == \"250\"\nassert solution(\"26\") == \"260\"\nassert solution(\"27\") == \"270\"\nassert solution(\"28\") == \"280\"\nassert solution(\"29\") == \"290\"\nassert solution(\"30\") == \"300\"\nassert solution(\"31\") == \"310\"\nassert solution(\"32\") == \"320\"\nassert solution(\"33\") == \"330\"\nassert solution(\"34\") == \"340\"\nassert solution(\"35\") == \"350\"\nassert solution(\"36\") == \"360\"\nassert solution(\"37\") == \"370\"\nassert solution(\"38\") == \"380\"\nassert solution(\"39\") == \"390\"\nassert solution(\"40\") == \"400\"\nassert solution(\"41\") == \"410\"\nassert solution(\"42\") == \"420\"\nassert solution(\"43\") == \"430\"\nassert solution(\"44\") == \"440\"\nassert solution(\"45\") == \"450\"\nassert solution(\"46\") == \"460\"\nassert solution(\"47\") == \"470\"\nassert solution(\"48\") == \"480\"\nassert solution(\"49\") == \"490\"\nassert solution(\"50\") == \"500\"\nassert solution(\"51\") == \"510\"\nassert solution(\"52\") == \"520\"\nassert solution(\"53\") == \"530\"\nassert solution(\"54\") == \"540\"\nassert solution(\"55\") == \"550\"\nassert solution(\"56\") == \"560\"\nassert solution(\"57\") == \"570\"\nassert solution(\"58\") == \"580\"\nassert solution(\"59\") == \"590\"\nassert solution(\"60\") == \"600\"\nassert solution(\"61\") == \"610\"\nassert solution(\"62\") == \"620\"\nassert solution(\"63\") == \"630\"\nassert solution(\"64\") == \"640\"\nassert solution(\"65\") == \"650\"\nassert solution(\"66\") == \"660\"\nassert solution(\"67\") == \"670\"\nassert solution(\"68\") == \"680\"\nassert solution(\"69\") == \"690\"\nassert solution(\"70\") == \"700\"\nassert solution(\"71\") == \"710\"\nassert solution(\"72\") == \"720\"\nassert solution(\"73\") == \"730\"\nassert solution(\"74\") == \"740\"\nassert solution(\"75\") == \"750\"\nassert solution(\"76\") == \"760\"\nassert solution(\"77\") == \"770\"\nassert solution(\"78\") == \"780\"\nassert solution(\"79\") == \"790\"\nassert solution(\"80\") == \"800\"\nassert solution(\"8"
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\") == 10, \"The solution should return 10.\""
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n\") == \"10\\n\"\nassert solution(\"2\\n\") == \"20\\n\"\nassert solution(\"3\\n\") == \"30\\n\"\nassert solution(\"4\\n\") == \"40\\n\"\nassert solution(\"5\\n\") == \"50\\n\"\n"
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1') == '10'"
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(5) == \"10\"\n"
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n\") == \"10\""
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n\") == \"1\""
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"10\""
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 0.001, \"The given code does not pass the given test cases.\"\n"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n1 2\n1000 1 0\n1 1000 1\n\"\"\") == \"0.001\""
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2\\n1000 1 0\\n1 1000 1\") == \"0.001\"\n"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2\\n1000 1 0\\n1 1000 1\") == \"0.001\\n\""
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"0.001\", \"The solution is incorrect.\""
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"0.001\""
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"0.001\"\n"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2\\n1000 1 0\\n1 1000 1\") == 0.001\nassert solution(\"1 2\\n5000 1 0\\n1 1000 1\") == 0.01\nassert solution(\"1 2\\n1000 1 0\\n1 1000 2\") == 0.0\nassert solution(\"1 2\\n1000 1 0\\n1 1000 3\") == 0.001\nassert solution(\"1 2\\n1000 1 0\\n1 1000 4\") == 0.0\nassert solution(\"1 2\\n1000 1 0\\n1 1000 5\") == 0.001"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == 0.001, \"Output should be 0.001\""
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"1 2\n1000 1 0\n1 1000 1\"\"\") == 0.001"
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 0\n"
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3 2 10000\\n1 2\\n2 3\\n3 1\") == \"0\\n\"\nassert solution(\"2 2 1 10000\\n1 2\\n2 1\") == \"1\\n\"\nassert solution(\"3 4 2 10000\\n1 2\\n2 3\\n3 4\\n4 3\\n3 2\\n2 1\") == \"2\\n\"\nassert solution(\"4 4 2 10000\\n1 2\\n2 3\\n3 4\\n4 3\\n3 2\\n2 1\") == \"3\\n\"\nassert solution(\"4 2 2 10000\\n1 2\\n2 3\\n3 4\\n4 3\\n3 2\\n2 1\") == \"4\\n\"\n"
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3 2 10000\\n1 2\\n2 3\\n3 1\") == 0\nassert solution(\"2 2 1 10000\\n1 1\\n1 2\") == 1\nassert solution(\"5 5 1 10000\\n1 2\\n2 3\\n3 4\\n4 5\\n5 1\") == 4\nassert solution(\"1 2\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100\") == 123\nassert solution(\"2 2 1 10000\\n1 1\\n1 2\") == 1\nassert solution(\"5 5 1 10000\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n3"
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '0\\n'\n"
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"\"\"\n0\n\"\"\""
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"0\\n\""
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == sample_output"
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3 2 10000\\n1 2\\n2 3\\n3 1\") == 0\nassert solution(\"4 4 2 10000\\n1 2\\n2 3\\n3 1\") == 1\nassert solution(\"5 5 2 10000\\n1 2\\n2 3\\n3 1\") == 0\nassert solution(\"6 6 2 10000\\n1 2\\n2 3\\n3 1\") == 2"
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3 2 10000\\n1 2\\n2 3\\n3 1\\n\") == \"0\"\nassert solution(\"5 5\\n1 2\\n2 3\\n3 4\\n4 5\\n\") == \"5\"\nassert solution(\"3 5\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n\") == \"10\"\nassert solution(\"3 5\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n\") == \"12\""
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3 2 10000\\n1 2\\n2 3\\n3 1\") == \"0\"\nassert solution(\"2 5 2 10000\\n1 2\\n2 3\\n3 1\") == \"1\"\nassert solution(\"3 5 2 10000\\n1 2\\n2 3\\n3 1\") == \"3\"\nassert solution(\"2 5 3 10000\\n1 2\\n2 3\\n3 1\") == \"6\"\nassert solution(\"2 5 4 10000\\n1 2\\n2 3\\n3 1\") == \"4\"\nassert solution(\"2 5 5 10000\\n1 2\\n2 3\\n3 1\") == \"8\"\nassert solution(\"2 5 6 10000\\n1 2\\n2 3\\n3 1\") == \"2\"\nassert solution(\"2 5 7 10000\\n1 2\\n2 3\\n3 1\") == \"7\"\nassert solution(\"2 5 8 10000\\n1 2\\n2 3\\n3 1\") == \"9\"\nassert solution(\"2 5 9 10000\\n1 2\\n2 3\\n3 1\") == \"1\""
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\\n\") == \"26\"\nassert solution(\"4\\n0 1 1 1\\n0 2 0 2\\n1 0 3 2\\n1 3 0 2\\n\") == \"10\"\nassert solution(\"4\\n0 1 1 1\\n0 1 0 1\\n1 0 2 1\\n1 2 0 1\\n\") == \"10\"\nassert solution(\"4\\n0 1 1 1\\n1 0 2 1\\n1 2 0 2\\n1 2 3 0\\n\") == \"10\"\nassert solution(\"4\\n0 1 1 1\\n1 0 2 2\\n0 2 0 3\\n1 2 3 0\\n\") == \"10\"\nassert solution(\"4\\n0 1 1 1\\n1 0 2 2\\n0 2 0 3\\n0 2 3 0\\n\") == \"10\"\nassert solution(\"4\\n0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\\n1 2 3 1\\n\") == \"10\"\nassert solution(\"4\\n0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\\n1 2 3 1\\n1 2 3 2\\n\") == \"10\"\nassert solution(\"4\\n0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\\n1 2 3 1\\n1 2 3 2\\n1 2 3 3\\n\") == \"10\"\nassert solution(\"4\\n0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\\n1 2 3 1\\n1 2 3 2\\n1 2 3 3\\n1 2 3 4\\n\") == \"10\"\nassert solution(\"4\\n0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\\n1 2 3 1\\n1 2 3 2\\n1 2 3 3\\n1 2 3 4\\n1 2 3 5\\n\") == \"10\"\nassert solution(\"4\\n0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\\n1 2 3 1\\n1 2 3 2\\n1 2 3 3\\n1 2 3 4\\n1 2 3 5\\n1 2 3 6\\n\") == \"10\"\nassert solution(\"4\\n0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\\n1 2 3 1\\n1 2 3 2\\n1 2 3 3\\n1 2 3 4\\n1 2 3 5\\n1 2 3 6\\n1 2 3 7\\n\") == \"10\"\nassert solution(\"4\\n0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\\n1 2 3 1\\n1 2 3 2\\n1 2 3 3\\n1 2 3 4\\n1 2 3 5\\n1 2 3 6\\n1 2 3 7\\n1 2 3 8\\n\") == \"10\"\nassert solution(\"4\\n0 1 1 1\\n1"
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 26"
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 26, \"The output should be 26, but it is {}\".format(solution())"
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 26\n"
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\") == 26\n"
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\") == \"26\""
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\") == 26\nassert solution(\"5\\n2 2 3 4 1\\n2 3 0 5 2\\n3 4 5 0 1\\n4 1 2 3 0\\n\") == 17\nassert solution(\"6\\n1 1 1 1 1\\n1 0 2 2 3\\n1 2 3 4 5\\n1 2 4 5 0\\n1 2 5 0 1\\n\") == 25\nassert solution(\"7\\n1 1 1 1 1\\n1 0 2 2 3\\n1 2 3 4 5\\n1 2 4 5 0\\n1 2 5 0 1\\n2 2 3 4 5\\n\") == 32\nassert solution(\"8\\n1 1 1 1 1\\n1 0 2 2 3\\n1 2 3 4 5\\n1 2 4 5 0\\n1 2 5 0 1\\n2 2 3 4 5\\n3 4 5 0 1\\n\") == 29\nassert solution(\"9\\n1 1 1 1 1\\n1 0 2 2 3\\n1 2 3 4 5\\n1 2 4 5 0\\n1 2 5 0 1\\n2 2 3 4 5\\n3 4 5 0 1\\n4 1 2 3 0\\n\") == 15\nassert solution(\"10\\n1 1 1 1 1\\n1 0 2 2 3\\n1 2 3 4 5\\n1 2 4 5 0\\n1 2 5 0 1\\n2 2 3 4 5\\n3 4 5 0 1\\n4 1 2 3 0\\n5 2 3 0 1\\n\") == 15\nassert solution(\"11\\n1 1 1 1 1\\n1 0 2 2 3\\n1 2 3 4 5\\n1 2 4 5 0\\n1 2 5 0 1\\n2 2 3 4 5\\n3 4 5 0 1\\n4 1 2 3 0\\n5 2 3 0 1\\n6 3 0 1 1\\n\") == 25\nassert solution(\"12\\n1 1 1 1 1\\n1 0 2 2 3\\n1 2 3 4 5\\n1 2 4 5 0\\n1 2 5 0 1\\n2 2 3 4 5\\n3 4 5 0 1\\n4 1 2 3 0\\n5 2 3 0 1\\n6 3 0 1 1\\n7 4 5 0 1\\n\") == 21\nassert solution(\"13\\n1 1 1 1 1\\n1 0 2 2 3\\n1 2 3 4 5\\n1 2 4 5 0\\n1 2 5 0 1\\n2 2 3 4 5\\n3 4 5 0 1\\n4 1 2 3 0\\n5 2 3 0 1\\n6 3 0 1 1\\n7 4 5 0 1\\n8 5 0 1 1\\n\") == 23\nassert solution(\"14\\n1 1 1 1 1\\n1 0 2 2 3\\n1 2 3 4 5\\n1 2 4 5 0\\n1 2 5 0 1\\n2 2 3 4 5\\n3 4"
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"26\"\n"
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 26\n"
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"26\", \"Please provide the correct input.\""
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 2\\n20 20 20 40\\nX.X\\nT.T') == '0.333333333\\n0.666666667\\n'"
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\\n20 20 20 40\\nX.X\\nT.T\") == \"0.333333333\\n0.666666667\""
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\\n20 20 20 40\\nX.X\\nT.T\") == \"0.333333333\\n0.666666667\\n\""
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"0.333333333\\n0.666666667\", \"Test case 1 failed\"\n\nassert solution(stdin) == \"0.666666667\\n0.333333333\", \"Test case 2 failed\"\n\nassert solution(stdin) == \"0.833333333\\n0.166666667\", \"Test case 3 failed\"\n\nassert solution(stdin) == \"0.5\\n0.5\", \"Test case 4 failed\"\n\nassert solution(stdin) == \"0.666666667\\n0.333333333\", \"Test case 5 failed\""
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == expected_output, f\"The solution should return '{expected_output}', but instead returned '{solution(sample_input)}'.\""
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2\\n20 20 20 40\\nX.X\\nT.T\\n\") == \"0.333333333\\n0.666666667\""
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"0.333333333\\n0.666666667\"\n"
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 2\\n20 20 20 40\\nX.X\\nT.T') == '0.333333333\\n0.666666667'\nassert solution('3 2\\n20 20 20 40\\nX.X\\nT.T\\n2 2 2 40 20') == '0.166666667\\n0.833333333\\n0.333333333\\n0.833333333\\n0.166666667'\nassert solution('3 2\\n20 20 20 40\\nX.X\\nT.T\\n2 2 2 40 20\\n2 2 2 40 20') == '0.166666667\\n0.833333333\\n0.333333333\\n0.833333333\\n0.166666667\\n0.833333333\\n0.333333333\\n0.833333333\\n0.166666667'\nassert solution('3 2\\n20 20 20 40\\nX.X\\nT.T\\n2 2 2 40 20\\n2 2 2 40 20\\n2 2 2 40 20\\n2 2 2 40 20') == '0.166666667\\n0.833333333\\n0.333333333\\n0.833333333\\n0.166666667\\n0.833333333\\n0.333333333\\n0.833333333\\n0.166666667\\n0.833333333\\n0.333333333\\n0.833333333\\n0.166666667'\nassert solution('3 2\\n20 20 20 40\\nX.X\\nT.T\\n2 2 2 40 20\\n2 2 2 40 20\\n2 2 2 40 20\\n2 2 2 40 20\\n2 2 2 40 20\\n2 2 2 40 20\\n2 2 2 40 20\\n2 2 2 40 20\\n2 2 2 40 20\\n2 2 2 40 20\\n2 2 2 40 20\\n2 2 2 40 20\\n2 2 2 40 20\\n2 2 2 40 20\\n2 2 2 40 20\\n2 2 2 40 20\\n2 2 2 40 20\\n2 2 2 40 20\\n2 2 2 40 20\\n2 2 2 40 20\\n2 2 2 40 20\\n2 2 2 40 20\\n2 2 2 40 20\\n2 2 2 40 20\\n2 2 2 40 20\\n2 2 2 40 20\\n2 2 2 40 20\\n2 2 2 40 20\\n2 2 2 40 20\\n2 2 2 40 20\\n2 2 2 40 "
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == [\"0.333333333\", \"0.666666667\"]\nassert solution() == [\"0.666666667\", \"0.333333333\"]\nassert solution() == [\"0.999999999\", \"0.000000001\"]\nassert solution() == [\"0.987654321\", \"0.012345679\"]\nassert solution() == [\"1.0\", \"0.0\"]"
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\\n20 20 20 40\\nX.X\\nT.T\") == \"0.333333333\\n0.666666667\""
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"45 45 0 0\") == \"0.75\""
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"45 45 0 0\") == \"0.75\""
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(45, 45, 0, 0) == 0.75, \"The output should be 0.75\""
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin='45 45 0 0') == '0.75'"
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(45, 45, 0, 0) == 0.75"
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"45 45 0 0\") == \"0.75\\n\"\nassert solution(\"50 45 0 0\") == \"0.25\\n\"\nassert solution(\"45 50 0 0\") == \"0.5\\n\"\nassert solution(\"45 45 10 0\") == \"0.0\\n\"\nassert solution(\"45 45 -10 0\") == \"0.0\\n\"\nassert solution(\"45 45 0 10\") == \"0.0\\n\"\nassert solution(\"45 45 0 -10\") == \"0.0\\n\""
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"45 45 0 0\") == 0.75\nassert solution(\"45 45 90 90\") == 1\nassert solution(\"45 45 45 45\") == 1\nassert solution(\"45 45 45 44\") == 1\nassert solution(\"45 45 45 46\") == 1"
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"45 45 0 0\") == 0.75, \"Test case 1 failed.\"\nassert solution(\"55 45 270 180\") == 0.375, \"Test case 2 failed.\"\nassert solution(\"30 30 0 0\") == 0.0, \"Test case 3 failed.\"\nassert solution(\"22 22 0 0\") == 0.5, \"Test case 4 failed.\"\nassert solution(\"90 90 0 0\") == 0.0, \"Test case 5 failed.\""
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"45 45 0 0\") == \"0.75\\n\", \"The solution is incorrect\""
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"0.75\", \"The expected output is not correct.\""
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 4\n"
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 4, \"The output is incorrect.\""
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == \"4\""
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\") == \"4\"\n"
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\") == 4\nassert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\") == 4\nassert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\") == 4\nassert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\") == 4\nassert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\") == 4\nassert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\") == 4\nassert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\") == 4\nassert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\") == 4\nassert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\") == 4\nassert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\") == 4\nassert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\") == 4\nassert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\") == 4\nassert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\") == 4\nassert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\") == 4\nassert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\") == 4\nassert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\") == 4\nassert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\") == 4\nassert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\") == 4\nassert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\") == 4\n"
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9') == 4, 'Test failed'"
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '4', \"Expected output: 4\\nGot: {}\".format(solution())"
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9') == 4\n"
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9') == '4'"
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n') == '4'\nprint(\"All tests passed\")"
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n10 10 0 5\\n\") == 100"
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n10 10 0 5\\n\") == \"100\""
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"100\"\n"
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1\\n10 10 0 5') == '100' #expected output: 100\nassert solution('2\\n5 1 20 5') == '30' #expected output: 30\nassert solution('3\\n20 2 5 30') == '50' #expected output: 50\nassert solution('4\\n20 5 5 5') == '100' #expected output: 100"
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '100', \"The solution is incorrect.\""
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n10 10 0 5\\n\") == \"100\"\n\nassert solution(\"2\\n5 10 1 10\\n\") == \"10\"\n\nassert solution(\"3\\n10 5 0 25\\n\") == \"50\"\n\nassert solution(\"4\\n7 10 1 15\\n\") == \"25\""
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n10 10 0 5\") == \"100\"\nassert solution(\"2\\n1 1 1 1\\n2 2 2 2\") == \"30\"\nassert solution(\"3\\n3 3 3 3\\n3 3 3 3\\n3 3 3 3\") == \"1000\"\nassert solution(\"4\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\") == \"10000\"\nassert solution(\"5\\n1 1 1 1\\n2 2 2 2\\n3 3 3 3\\n4 4 4 4\\n5 5 5 5\") == \"100000\"\n"
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n10 10 0 5\") == 100, \"Expected Output: 100, Actual Output: \" + solution(\"1\\n10 10 0 5\")"
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"100\""
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1\\n10 10 0 5') == '100'\nassert solution('2\\n5 10 0 5') == '500'\nassert solution('3\\n10 20 0 5') == '600'\nassert solution('4\\n50 30 0 5') == '800'\nassert solution('5\\n100 40 0 5') == '1000'"
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input) == output, f\"Test case {i+1} failed. Expected output: {output}, got: {solution(input)}\" for i, (input, output) in enumerate(test_cases)"
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"The function returned {solution(input())} instead of {expected}\""
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"1\""
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(solution) == 1\n"
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 1\nassert solution(4) == 0"
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('0 0 2 2\\n1 1 3 4\\n5 7 6 8\\n') == 1\nassert solution('0 0 2 2\\n1 1 3 4\\n5 7 6 8\\n0 0 2 2\\n1 1 3 4\\n5 7 6 8\\n') == 1\nassert solution('0 0 2 2\\n1 1 3 4\\n5 7 6 8\\n0 0 2 2\\n1 1 3 4\\n5 7 6 8\\n0 0 2 2\\n1 1 3 4\\n5 7 6 8\\n1 1 3 4\\n') == 0\nassert solution('0 0 2 2\\n1 1 3 4\\n5 7 6 8\\n0 0 2 2\\n1 1 3 4\\n5 7 6 8\\n0 0 2 2\\n1 1 3 4\\n5 7 6 8\\n1 1 3 4\\n0 0 2 2\\n1 1 3 4\\n5 7 6 8\\n1 1 3 4\\n') == 0"
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution([3, 0, 2, 2, 1, 1, 3, 4, 5, 7, 6, 8]), 1\nassert solution([1, 1, 3, 4, 5, 7, 6, 8, 9, 10, 11]), 1\nassert solution([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 0\n"
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('0 0 2 2\\n1 1 3 4\\n5 7 6 8') == 1\nassert solution('0 0 1 1\\n0 0 2 2') == 0\nassert solution('0 0 2 2\\n0 0 1 1') == 0\nassert solution('0 0 2 2\\n-1 1 3 4') == 0\nassert solution('0 0 2 2\\n5 7 6 8\\n9 0 9 0') == 1"
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 0 2 2\\n1 1 3 4\\n5 7 6 8\") == 1\nassert solution(\"0 0 1 1\\n2 2 3 3\") == 0\nassert solution(\"0 0 4 4\") == 0\nassert solution(\"1 2 3 4\\n0 0 5 6\\n7 8 9 10\") == 1\nassert solution(\"1 2 4 4\\n3 3 5 6\\n7 8 9 10\") == 0\nassert solution(\"1 1 1 1\\n1 1 1 1\\n1 1 1 1\") == 0\nassert solution(\"1 2 3 4\\n3 4 5 6\\n5 6 7 8\") == 1\nassert solution(\"0 0 2 2\\n1 1 3 4\\n5 7 6 8\") == 1"
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Expected: {output}\\nGot: {solution(input())}\""
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"17\", \"The solution is incorrect.\""
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"17\""
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\") == \"17\"\nassert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nW W W W W\") == \"1\"\n"
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=input()) == \"17\"\n"
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"17\\n\", \"Your solution should return '17'.\""
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S') == 17, \"Test failed.\""
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S') == '17\\n'\n"
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\") == 17\n"
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin: str) == \"17\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\") == 17\n"
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n3 2 3 1 1\") == \"1 4 3 5 2\\n2 3 5 1 4\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9\") == \"impossible\"\nassert solution(\"5\\n1 1 2 3 4\") == \"impossible\"\nassert solution(\"10\\n0 0 0 0 0\") == \"impossible\""
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n3 2 3 1 1') == '1 4 3 5 2\\n2 3 5 1 4'\nassert solution('6\\n1 2 3 4 5 6') == '1 6 5 4 3 2'\nassert solution('7\\n1 2 3 4 5 6 7 8 9 10') == '1 7 6 5 4 3 2 9 8 7'\nassert solution('8\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25') == '1 8 7 6 5 4 3 2 19 18 17 16 15 14 13 12 25 24 23 22 21 20 19 18 17 16'\nassert solution('9\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40') == '1 9 8 7 6 5 4 3 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40'"
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '1 4 3 5 2\\n2 3 5 1 4'"
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n3 2 3 1 1\") == \"1 4 3 5 2 \\n2 3 5 1 4\"\n\nassert solution(\"5\\n1 2 3 4 5\") == \"impossible\"\n\nassert solution(\"5\\n1 2 3 4 5\") == \"1 4 3 5 2 \\n2 3 5 1 4\"\n\nassert solution(\"5\\n3 2 3 1 4\") == \"2 3 5 1 4\""
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 'impossible'"
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"1 4 3 5 2\\n2 3 5 1 4\""
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n3 2 3 1 1\") == \"1 4 3 5 2\\n2 3 5 1 4\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9\") == \"impossible\"\nassert solution(\"5\\n1 2 3 4 5\") == \"impossible\""
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1 4 3 5 2\\n2 3 5 1 4\""
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output\nprint(\"Done\")"
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n3 2 3 1 1\") == \"1 4 3 5 2\\n2 3 5 1 4\""
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n3 0 1\\n1 4\") == 0.76772047\nassert solution(\"2\\n1 0 1\\n1 2\") == 0.0\nassert solution(\"3\\n1 1 1\\n1 1\") == 0.5\nassert solution(\"4\\n1 1 1\\n1 2\") == 0.5\nassert solution(\"5\\n1 1 1\\n1 2\\n1 2\\n1 2\") == 0.0"
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"0.76772047\", \"Incorrect output\""
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"0.76772047\"\n"
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n3 0 1\\n1 4\\n\") == \"0.76772047\""
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"0.76772047\\n\", \"Test case 1 failed\""
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n3 0 1\\n1 4\\n\") == 0.76772047\nassert solution(\"1\\n3 0 1\\n1 4\\n\") == 0.76772047\nassert solution(\"1\\n3 0 1\\n1 4\\n\") == 0.76772047\nassert solution(\"1\\n3 0 1\\n1 4\\n\") == 0.76772047\nassert solution(\"1\\n3 0 1\\n1 4\\n\") == 0.76772047"
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n3 0 1\\n1 4\") == 0.76772047\nassert solution(\"1\\n2 3 4\\n-1 5\") == 0.38146155\nassert solution(\"1\\n10 10 10\\n1 1\") == 0.99999999\nassert solution(\"1\\n10 10 10\\n0 0\") == 1.0\nassert solution(\"1\\n10 10 10\\n10 10\") == 0.99999999\nassert solution(\"1\\n10 10 10\\n10 10\\n1 1\") == 0.99999999\nassert solution(\"1\\n10 10 10\\n10 10\\n1 1\") == 0.99999999\nassert solution(\"1\\n10 10 10\\n10 10\\n1 1\") == 0.99999999\nassert solution(\"1\\n10 10 10\\n10 10\\n1 1\") == 0.99999999\nassert solution(\"1\\n10 10 10\\n10 10\\n1 1\") == 0.99999999\nassert solution(\"1\\n10 10 10\\n10 10\\n1 1\") == 0.99999999\nassert solution(\"1\\n10 10 10\\n10 10\\n1 1\") == 0.99999999\nassert solution(\"1\\n10 10 10\\n10 10\\n1 1\") == 0.99999999\nassert solution(\"1\\n10 10 10\\n10 10\\n1 1\") == 0.99999999\nassert solution(\"1\\n10 10 10\\n10 10\\n1 1\") == 0.99999999\nassert solution(\"1\\n10 10 10\\n10 10\\n1 1\") == 0.99999999\nassert solution(\"1\\n10 10 10\\n10 10\\n1 1\") == 0.99999999\nassert solution(\"1\\n10 10 10\\n10 10\\n1 1\") == 0.99999999\nassert solution(\"1\\n10 10 10\\n10 10\\n1 1\") == 0.99999999\nassert solution(\"1\\n10 10 10\\n10 10\\n1 1\") == 0.99999999\nassert solution(\"1\\n10 10 10\\n10 10\\n1 1\") == 0.99999999\nassert solution(\"1\\n10 10 10\\n10 10\\n1 1\") == 0.99999999\nassert solution(\"1\\n10 10 10\\n10 10\\n1 1\") == 0.99999999\nassert solution(\"1\\n10 10 10\\n10 10\\n1 1\") == 0.99999999\nassert solution(\"1\\n10 10 10\\n10 10\\n1 1\") == 0.99999999\nassert solution(\"1\\n10 10 10\\n10 10\\n1 1\") == 0.99999999\nassert solution(\"1\\n10 10 10\\n10 10\\n1 1\") == 0."
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt').read()) == '0.76772047\\n', 'Sample Output'"
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n1\n3 0 1\n1 4\n''') == '0.76772047'"
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 0.76772047, \"The given solution is incorrect\""
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"hello teams\") == \"27\""
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('hello teams') == '27'"
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"hello teams\"\n) == \"27\", \"The solution should return 27.\""
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"hello teams\") == \"27\""
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"hello teams\") == \"27\""
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"hello teams\") == \"27\", \"The solution should be 27\""
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('hello teams') == '27'"
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"hello teams\") == \"27\\n\", \"Your solution is incorrect.\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"hello teams\") == \"27\""
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('hello teams') == '27'\n"
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\""
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == 2, \"The output is incorrect.\"\nassert solution(\"6 5\\n2 3\\n5 4\\n8 1\\n11 6\\n14 2\\n17 7\") == 1, \"The output is incorrect.\"\nassert solution(\"6 5\\n2 3\\n5 4\\n8 1\\n11 6\\n14 2\\n17 7\\n19 5\") == 2, \"The output is incorrect.\""
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == 2\n"
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == 2, \"The output must be 2.\""
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\\n') == 2\nassert solution('5 4\\n1 8\\n7 7\\n10 10\\n13 13\\n15 15\\n18 18\\n5 2\\n6 1\\n7 0\\n8 1\\n9 2\\n10 3\\n11 4\\n12 5\\n13 6\\n14 7\\n15 8\\n16 9\\n17 10\\n18 11\\n19 12\\n20 13\\n21 14\\n22 15\\n23 16\\n24 17\\n25 18\\n26 19\\n27 20\\n28 21\\n29 22\\n30 23\\n31 24\\n32 25\\n33 26\\n34 27\\n35 28\\n36 29\\n37 30\\n38 31\\n39 32\\n40 33\\n41 34\\n42 35\\n43 36\\n44 37\\n45 38\\n46 39\\n47 40\\n48 41\\n49 42\\n50 43\\n51 44\\n52 45\\n53 46\\n54 47\\n55 48\\n56 49\\n57 50\\n58 51\\n59 52\\n60 53\\n61 54\\n62 55\\n63 56\\n64 57\\n65 58\\n66 59\\n67 60\\n68 61\\n69 62\\n70 63\\n71 64\\n72 65\\n73 66\\n74 67\\n75 68\\n76 69\\n77 70\\n78 71\\n79 72\\n80 73\\n81 74\\n82 75\\n83 76\\n84 77\\n85 78\\n86 79\\n87 80\\n88 81\\n89 82\\n90 83\\n91 84\\n92 85\\n93 86\\n94 87\\n95 88\\n96 89\\n97 90\\n98 91\\n99 92\\n100 93\\n101 94\\n102 95\\n103 96\\n104 97\\n105 98\\n106 99\\n107 100\\n108 101\\n109 102\\n110 103\\n111 104\\n112 105\\n113 106\\n114 107\\n115 108\\n116 109\\n117 110\\n118 111\\n119 112\\n120 113\\n121 114\\n122 115\\n123 116\\n124 117\\n125 118\\n126 119\\n127 120\\n128 121\\n129 122\\n1"
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\\n') == '2'"
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3') == 2\n"
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin: str) == \"2\\n\"\nassert solution(stdin: str) == \"2\\n\"\nassert solution(stdin: str) == \"2\\n\"\nassert solution(stdin: str) == \"2\\n\"\nassert solution(stdin: str) == \"2\\n\"\nassert solution(stdin: str) == \"2\\n\""
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2\\n\""
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '2'\nassert solution('''\n6 3\n1 8\n5 4\n7 7\n9 2\n16 6\n17 10\n4 7 2\n6 3 1\n12 6 3\n''') == '2'\nassert solution('''\n6 3\n1 8\n5 4\n7 7\n9 2\n16 6\n17 10\n4 7 2\n6 3 1\n12 6 3\n''') == '3'\nassert solution('''\n6 3\n1 8\n5 4\n7 7\n9 2\n16 6\n17 10\n4 7 2\n6 3 1\n12 6 3\n''') == '3'\nassert solution('''\n6 3\n1 8\n5 4\n7 7\n9 2\n16 6\n17 10\n4 7 2\n6 3 1\n12 6 3\n''') == '4'\n"
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution([5, 3]) == \"26\"\nassert solution([10, 3]) == \"129\"\nassert solution([5, 4]) == \"22\"\nassert solution([10, 5]) == \"154\"\nassert solution([2, 2]) == \"1\""
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\na\\nb\\nc\\nd\\ne\") == 26\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncaf\") == 26\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncaf\\nba\") == 31\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncaf\\nba\\nabb\") == 18\n"
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"26\""
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\n\") == \"26\""
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed: expected {expected_output}, got {solution(input())}\" for i, (n, k, input_, expected_output) in enumerate(test_cases)"
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\na\\nb\\nc\\nd\\ne\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\"
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 3\\na\\nb\\nc\\nd\\ne\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n"
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 3\\na\\nb\\nc\\nd\\ne\\nca\\n', '') == 26\nassert solution('5 3\\na\\nb\\nc\\nd\\ne\\nca\\n', 'c') == 2\nassert solution('5 3\\na\\nb\\nc\\nd\\ne\\nca\\n', 'd') == 7\nassert solution('5 3\\na\\nb\\nc\\nd\\ne\\nca\\n', 'e') == 12\nassert solution('5 3\\na\\nb\\nc\\nd\\ne\\nca\\n', 'f') == 17\nassert solution('5 3\\na\\nb\\nc\\nd\\ne\\nca\\n', 'g') == 22"
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    5 3\n    a\n    b\n    c\n    d\n    e\n    \"\"\"\n) == \"26\"\n\nassert solution(\n    \"\"\"\n    10 4\n    a\n    b\n    c\n    d\n    e\n    f\n    g\n    h\n    i\n    j\n    k\n    \"\"\"\n) == \"25\"\n\nassert solution(\n    \"\"\"\n    1000 10\n    a\n    b\n    c\n    d\n    e\n    f\n    g\n    h\n    i\n    j\n    k\n    l\n    m\n    n\n    o\n    p\n    q\n    r\n    s\n    t\n    u\n    v\n    w\n    x\n    y\n    z\n    \"\"\"\n) == \"2758377\""
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"26\"\n"
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 10 30\\n10 5 3 1 3') == '3 5 2 1 4'\nassert solution('5 10 30\\n10 5 2 4 1') == 'impossible'"
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 10 30\\n10 5 3 1 3\") == \"3 5 2 1 4\"\nassert solution(\"5 10 30\\n10 5 3 1 3\") == \"impossible\""
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 10 30\\n10 5 3 1 3\") == \"3 5 2 1 4\""
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\n'\nprint(\"Test passed.\")"
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 10 30\\n10 5 3 1 3\") == \"3 5 2 1 4\"\n"
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"3 5 2 1 4\""
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 10 30\\n10 5 3 1 3\") == \"3 5 2 1 4\"\n\nfrom itertools import permutations\n\nn, m, k = map(int, stdin.split())\nscores = list(map(int, stdin.split()))"
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 10 30\\n10 5 3 1 3\") == \"3 5 2 1 4\\n\"\nassert solution(\"5 10 30\\n10 5 2 1 3\") == \"impossible\\n\"\nassert solution(\"5 10 30\\n10 5 2 1 3 2 1\") == \"impossible\\n\"\nassert solution(\"5 10 30\\n10 5 2 1 3 2 4\") == \"impossible\\n\"\nassert solution(\"5 10 30\\n10 5 2 1 3 2 5\") == \"impossible\\n\"\nassert solution(\"5 10 30\\n10 5 2 1 3 2 6\") == \"impossible\\n\"\nassert solution(\"5 10 30\\n10 5 2 1 3 2 7\") == \"impossible\\n\"\nassert solution(\"5 10 30\\n10 5 2 1 3 2 8\") == \"impossible\\n\"\nassert solution(\"5 10 30\\n10 5 2 1 3 2 9\") == \"impossible\\n\"\nassert solution(\"5 10 30\\n10 5 2 1 3 2 10\") == \"impossible\\n\"\nassert solution(\"5 10 30\\n10 5 2 1 3 2 11\") == \"impossible\\n\"\nassert solution(\"5 10 30\\n10 5 2 1 3 2 12\") == \"impossible\\n\"\nassert solution(\"5 10 30\\n10 5 2 1 3 2 13\") == \"impossible\\n\"\nassert solution(\"5 10 30\\n10 5 2 1 3 2 14\") == \"impossible\\n\"\nassert solution(\"5 10 30\\n10 5 2 1 3 2 15\") == \"impossible\\n\"\nassert solution(\"5 10 30\\n10 5 2 1 3 2 16\") == \"impossible\\n\"\nassert solution(\"5 10 30\\n10 5 2 1 3 2 17\") == \"impossible\\n\"\nassert solution(\"5 10 30\\n10 5 2 1 3 2 18\") == \"impossible\\n\"\nassert solution(\"5 10 30\\n10 5 2 1 3 2 19\") == \"impossible\\n\"\nassert solution(\"5 10 30\\n10 5 2 1 3 2 20\") == \"impossible\\n\"\nassert solution(\"5 10 30\\n10 5 2 1 3 2 21\") == \"impossible\\n\"\nassert solution(\"5 10 30\\n10 5 2 1 3 2 22\") == \"impossible\\n\"\nassert solution(\"5 10 30\\n10 5 2 1 3 2 23\") == \"impossible\\n\"\nassert solution(\"5 10 30\\n10 5 2 1 3 2 24\") == \"impossible\\n\"\nassert solution(\"5 10 30\\n10 5 2 1 3 2 25\") == \"impossible\\n\"\nassert solution(\"5 10 30\\n10 5 2 1 3 2 26\") == \"impossible\\n\"\nassert solution(\"5 10 30\\n10 5 2 1 3 2 27\") == \"impossible\\n\"\nassert solution(\"5 10 30\\n10 5 2 1 3 2 28\") == \"impossible\\n\"\nassert solution(\"5 10 30\\n10 5 2 1 3 2 29\")"
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 10 30\\n10 5 3 1 3\") == \"3 5 2 1 4\"\nassert solution(\"5 10 30\\n10 5 3 2 3\") == \"impossible\""
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 10 30\\n10 5 3 1 3\") == \"3 5 2 1 4\"\n"
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"3\n1 1\n2 3\n2 3\"\"\"\n) == 2\n\nassert solution(\n    \"\"\"4\n1 1\n2 3\n3 4\n4 5\"\"\"\n) == 2\n\nassert solution(\n    \"\"\"5\n1 1\n2 3\n3 4\n4 5\n5 6\"\"\"\n) == 3\n\nassert solution(\n    \"\"\"6\n1 1\n2 3\n3 4\n4 5\n5 6\n6 7\"\"\"\n) == 4\n\nassert solution(\n    \"\"\"7\n1 1\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\"\"\"\n) == 5\n\nassert solution(\n    \"\"\"8\n1 1\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\"\"\"\n) == 6\n\nassert solution(\n    \"\"\"9\n1 1\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\"\"\"\n) == 7\n\nassert solution(\n    \"\"\"10\n1 1\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\"\"\"\n) == 8\n\nassert solution(\n    \"\"\"11\n1 1\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\"\"\"\n) == 9\n\nassert solution(\n    \"\"\"12\n1 1\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\"\"\"\n) == 10\n\nassert solution(\n    \"\"\"13\n1 1\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\"\"\"\n) == 11\n\nassert solution(\n    \"\"\"14\n1 1\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n14 15\"\"\"\n) == 12\n\nassert solution(\n    \"\"\"15\n1 1\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n14 15\n15 16\"\"\"\n) == 13\n\nassert solution(\n    \"\"\"16\n1 1\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n14 15\n15 16\n16 17\"\"\"\n) == 14\n\nassert solution(\n    \"\"\"17\n1 1\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n14 15\n15 16\n16 17\n17 18\"\"\"\n) == 15\n\nassert solution(\n    \"\"\"18\n1 1\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n14 15\n15 16\n16 17\n17 18\n18 19\"\"\"\n) == 16\n\nassert solution(\n    \"\"\"19\n1 1\n2 "
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 1\\n2 3\\n2 3\") == \"2\"\nassert solution(\"2\\n1 2\\n2 3\\n3 4\") == \"1\"\nassert solution(\"2\\n1 2\\n2 3\\n3 4\\n3 4\") == \"1\"\nassert solution(\"5\\n1 1\\n2 3\\n2 3\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\") == \"360646962\""
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n'\n"
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 1\\n2 3\\n2 3\") == \"2\\nshovel time!\\n\"\nassert solution(\"4\\n1 1\\n2 3\\n3 4\") == \"1\\nshovel time!\\n\"\nassert solution(\"5\\n1 1\\n2 3\\n3 4\\n4 5\") == \"0\\nshovel time!\\n\"\nassert solution(\"6\\n1 1\\n2 3\\n3 4\\n4 5\\n5 6\") == \"1\\nshovel time!\\n\""
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n1 1\\n2 3\\n2 3') == '2\\n'\nassert solution('4\\n1 1\\n2 3\\n3 4\\n3 4') == '0\\n'\nassert solution('5\\n1 1\\n2 3\\n3 4\\n3 5\\n4 6') =='shovel time!\\n'\n"
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 1\\n2 3\\n2 3') == 2, \"Expected 2, got {}\".format(solution('1 1\\n2 3\\n2 3'))"
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 2, \"Shovel time!\""
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1\\n2 3\\n2 3\") == 2\nassert solution(\"3 1\\n1 2\\n2 1\") == 1\nassert solution(\"1 1\\n2 2\\n3 3\") == 2\nassert solution(\"1 3\\n2 2\\n1 1\") == 1\nassert solution(\"1 1\\n2 1\\n3 2\") == 0\nassert solution(\"1 1\\n2 1\\n3 2\") == 0"
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 1\\n2 3\\n2 3\") == 2\nassert solution(\"4\\n1 1\\n2 3\\n2 3\\n4 5\") == \"shovel time!\""
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 2"
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2 1 2\") == \"3\"\nassert solution(\"4\\n1 2 2 2\") == \"2\"\nassert solution(\"4\\n1 1 1 1\") == \"2\"\nassert solution(\"4\\n1 2 3 2\") == \"1\"\nassert solution(\"4\\n1 2 1 3\") == \"1\"\nassert solution(\"4\\n1 2 2 3\") == \"2\"\nassert solution(\"4\\n1 2 1 2\") == \"3\""
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n1 2 1 2') == 3"
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '3'"
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 2 1 2\") == \"3\""
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"3\", \"The output should be '3'.\""
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"3\"\n"
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"3\"\n"
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '3', \"Test Case Failed\""
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(None) == 'Invalid input'"
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"3\\n\""
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"79\", \"Output should be 79\"\n"
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4 999999937\") == \"79\"\nassert solution(\"3 4 2333333\") == \"6\"\nassert solution(\"1 1 2\") == \"1\"\nassert solution(\"5 1 1\") == \"11\""
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Output: {solution(input())}, Expected: {expected}\""
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4 999999937\") == 79, \"Output should be 79\""
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"79\"\n"
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '79'\n"
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 4 999999937') == 79\nassert solution('5 5 999999999') == 23\nassert solution('3 3 999999999') == 3\nassert solution('2 2 999999999') == 4"
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"79\"\n"
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"79\\n\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\"\nassert solution(stdin) == \"79\\n\""
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"zucchini\\nmozzarella\\nmushrooms\\nartichoke\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == 'zucchini\\nmozzarella\\nmushrooms\\nartichoke', \"Test case 1 failed.\"\nassert solution(input()) == 'def\\n', \"Test case 2 failed.\"\nassert solution(input()) == 'zucchini\\nmozzarella\\nmushrooms\\nartichoke\\ndef\\n', \"Test case 3 failed.\"\n\nfrom typing import List"
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"zucchini\\nmozzarella\\nmushrooms\\nartichoke\\n\", \"Solution should return 'zucchini\\nmozzarella\\nmushrooms\\nartichoke\\n' but returned '{}'\".format(solution(stdin))\n"
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin='1\\n4 +zucchini +mozzarella +mushrooms -artichoke') == 'zucchini\\nmozzarella\\nmushrooms\\nartichoke'\n"
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n4 +zucchini +mozzarella +mushrooms -artichoke\") == \"zucchini mozzarella mushrooms artichoke\"\nassert solution(\"2\\n1 +bananas -apple -carrots -mushrooms\\n2 +oranges -banana -grapefruit -kiwi\\n3 +pears -grape -pineapple -strawberry\") == \"banana\"\nassert solution(\"1\\n2 +bananas -apple -carrots -mushrooms\\n3 +pears -grape -pineapple -strawberry\") == \"banana\"\nassert solution(\"1\\n1 +bananas -apple -carrots -mushrooms\\n2 +oranges -banana -grapefruit -kiwi\\n3 +pears -grape -pineapple -strawberry\") == \"banana\"\nassert solution(\"1\\n1 +bananas -apple -carrots -mushrooms\\n1 +oranges -banana -grapefruit -kiwi\\n3 +pears -grape -pineapple -strawberry\") == \"banana\"\nassert solution(\"1\\n1 +bananas -apple -carrots -mushrooms\\n1 +oranges -banana -grapefruit -kiwi\\n1 +pears -grape -pineapple -strawberry\") == \"banana\""
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"zucchini\\nmozzarella\\nmushrooms\\nartichoke\""
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 +zucchini +mozzarella +mushrooms -artichoke') == 'zucchini\\nmozzarella\\nmushrooms\\nartichoke'"
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n4 +zucchini +mozzarella +mushrooms -artichoke\") == [\"zucchini\", \"mozzarella\", \"mushrooms\", \"artichoke\"]"
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1\\n4 +zucchini +mozzarella +mushrooms -artichoke\\n') == 'zucchini\\nmozzarella\\nmushrooms\\nartichoke\\n'"
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n4 +zucchini +mozzarella +mushrooms -artichoke\") == \"zucchini\\nmozzarella\\nmushrooms\\nartichoke\"\n"
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 4\\nPP\\nRR\\nPS\\nSS\\n') == 'PS\\nPP\\nRR\\nSS\\n'\nassert solution('4 2\\nP\\nR\\nP\\nS\\n') == 'P\\nR\\nS\\nP\\n'\nassert solution('6 3\\nP\\nR\\nP\\nS\\n') == 'P\\nR\\nS\\nP\\nP\\nR\\nP\\n'\nassert solution('3 4\\nPP\\nRR\\nPS\\nSS\\n') == 'PS\\nPP\\nRR\\nSS\\n'\nassert solution('6 5\\nPP\\nRR\\nPS\\nSS\\n') == 'PP\\nPS\\nRR\\nSS\\nPP\\nPP\\nRR\\nRR\\n'\nassert solution('5 2\\nP\\nR\\nP\\nS\\n') == 'P\\nR\\nS\\nP\\n'\nassert solution('1 2\\nS\\nP\\nR\\nP\\n') == 'P\\nR\\nP\\nS\\n'"
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == 'PS\\nPP\\nRR\\nSS\\n'\n"
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Your solution is incorrect. Please check the input and output for the given examples.\""
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('sample_input.txt', 'r')) == '''\nPS\nPP\nRR\nSS\n'''"
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Test failed: Solution does not match expected output. Input:\\n{input()}\\nExpected output:\\n{expected_output}\\nOutput:\\n{solution(input())}\""
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\nPP\\nRR\\nPS\\nSS\") == \"PS\\nPP\\nRR\\nSS\""
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4\\nPP\\nRR\\nPS\\nSS\") == \"PS\\nPP\\nRR\\nSS\"\nassert solution(\"3 4\\nRR\\nPP\\nPS\\nSS\") == \"PP\\nRR\\nPS\\nSS\"\nassert solution(\"3 4\\nRR\\nPP\\nSS\\nPS\") == \"RR\\nPP\\nSS\\nPS\"\nassert solution(\"3 4\\nPP\\nRR\\nSS\\nPS\") == \"SS\\nPP\\nRR\\nPS\"\nassert solution(\"3 4\\nPP\\nRR\\nPS\\nSS\") == \"PS\\nRR\\nPP\\nSS\""
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\nPP\\nRR\\nPS\\nSS\\n\") == \"PS\\nPP\\nRR\\nSS\\n\"\nassert solution(\"5 5\\n
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"PP\\nRR\\nSS\\n\", \"Your solution is incorrect.\""
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"PS\\nPP\\nRR\\nSS\\n\", \"Incorrect output for the given examples\""
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == 288, \"The solution should return 288.\""
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n0\\n') == '288'"
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0.1 2.0\\n0\\n0\\n0\\n0\\n0\") == 288.0, \"Sample Output should be 288.\"\n"
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n\") == \"288.0\"\nassert solution(\"5\\n0.1 2.0\\n0\\n0\\n0\\n0\") == \"288.0\"\nassert solution(\"5\\n0.1 2.0\\n0\\n0\\n0\\n0\") == \"288.0\"\nassert solution(\"5\\n0.1 2.0\\n0\\n0\\n0\\n0\") == \"288.0\"\nassert solution(\"5\\n0.1 2.0\\n0\\n0\\n0\\n0\") == \"288.0\"\nassert solution(\"5\\n0.1 2.0\\n0\\n0\\n0\\n0\") == \"288.0\""
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"288\", \"Please provide the solution for this problem\"\n"
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0.1 2.0\\n0\\n0\\n0\\n0\\n0\\n\") == 288.0, \"Expected output is 288.0, but got {}\".format(solution(\"0.1 2.0\\n0\\n0\\n0\\n0\\n0\\n\"))"
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n0\\n\") == \"288\"\n"
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"288\"\n"
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n0\\n') == 288.0\n"
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"288\", \"Incorrect output.\"\n"
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"pastimeofwhimsy\") == \"1\""
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"pastimeofwhimsy\") == 1\n"
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"pastimeofwhimsy\") == 1"
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('pastimeofwhimsy') == 1\n"
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"pastimeofwhimsy\") == 1, \"Solution is incorrect.\""
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"pastimeofwhimsy\") == 1"
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"1\"\n"
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"pastimeofwhimsy\") == \"1\"\nassert solution(\"abcde\") == \"0\"\nassert solution(\"zabc\") == \"1\"\nassert solution(\"abab\") == \"0\"\nassert solution(\"abcdefghijklmnopqrstuvwxyz\") == \"0\""
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"pastimeofwhimsy\") == 1, \"Expected 1, got {}\".format(solution(\"pastimeofwhimsy\"))  # correct\nassert solution(\"meowwhimsy\") == 2, \"Expected 2, got {}\".format(solution(\"meowwhimsy\"))  # correct\nassert solution(\"colorfulwhimsy\") == 2, \"Expected 2, got {}\".format(solution(\"colorfulwhimsy\"))  # correct\nassert solution(\"defectivewhimsy\") == 3, \"Expected 3, got {}\".format(solution(\"defectivewhimsy\"))  # correct"
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"pastimeofwhimsy\") == 1\nprint(\"All tests passed!\")"
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\n1 2 2 1 \") == \"YES\""
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4\\n1 2 2 1 \") == \"YES\"\nassert solution(\"3 4\\n1 2 1 1 \") == \"NO\"\nassert solution(\"3 4\\n1 2 1 2 \") == \"NO\"\nassert solution(\"3 4\\n1 2 1 3 \") == \"NO\"\nassert solution(\"3 4\\n1 2 1 4 \") == \"YES\""
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4\\n1 2 2 1 \\n\") == \"YES\""
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4\\n1 2 2 1 \") == \"YES\""
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4\\n1 2 2 1\") == \"YES\"\nassert solution(\"3 4\\n5 3 1 2 1\") == \"NO\""
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\n1 2 2 1 \\n\") == \"YES\"\n\nassert solution(\"3 4\\n2 2 2 1 \\n\") == \"NO\"\n\nassert solution(\"3 4\\n1 2 1 1 \\n\") == \"YES\"\n\nassert solution(\"3 4\\n2 2 1 1 \\n\") == \"NO\"\n\nassert solution(\"3 4\\n1 1 1 1 \\n\") == \"NO\""
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4\\n1 2 2 1 \\n\") == \"YES\"\nassert solution(\"2 1\\n1 1 \\n\") == \"NO\"\nassert solution(\"10 10\\n1 2 3 4 5 6 7 8 9 10\\n\") == \"YES\"\nassert solution(\"10 5\\n1 2 3 4 5\\n\") == \"NO\""
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"YES\"\n"
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == 'YES'\n"
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4\\n1 2 2 1 \") == \"YES\\n\", \"Testcase 1 failed\"\nassert solution(\"3 4\\n2 3 3 2 1 \") == \"NO\\n\", \"Testcase 2 failed\"\nassert solution(\"3 4\\n1 2 2 1 2 \") == \"NO\\n\", \"Testcase 3 failed\"\nassert solution(\"3 4\\n2 2 2 2 2 \") == \"YES\\n\", \"Testcase 4 failed\"\nassert solution(\"3 4\\n3 3 3 3 3 \") == \"YES\\n\", \"Testcase 5 failed\"\n"
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"3/1\", \"Expected '3/1', but got '{}'.\".format(solution())"
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"3/1\", \"Test 1 failed\"\nassert solution(4) == \"1/2\", \"Test 2 failed\"\nassert solution(5) == \"1/4\", \"Test 3 failed\"\nassert solution(6) == \"1/8\", \"Test 4 failed\"\nassert solution(7) == \"1/16\", \"Test 5 failed\""
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1 2\\n3\\n4\\n\") == \"3/1\", \"Test 1\"\nassert solution(\"4\\n1 2\\n3 4\\n5\\n\") == \"1/10000\", \"Test 2\"\nassert solution(\"6\\n1 2\\n3 4\\n5 6\\n\") == \"5/100\", \"Test 3\"\nassert solution(\"8\\n1 2\\n3 4\\n5 6\\n7 8\\n\") == \"19/100\", \"Test 4\"\nassert solution(\"10\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n\") == \"199/10000\", \"Test 5\""
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Output: {solution(input())}, Expected Output: {expected_output}\""
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2\\n1 2\\n3\\n4\\n') == '3/1\\n'"
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"3/1\""
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 2\\n3\\n4\\n\") == \"3/1\\n\"\n"
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == \"3/1\", \"The output should be '3/1'.\""
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n    2\n    1 2\n    3\n    4\n''') == '3/1\\n'\nassert solution('''\n    5\n    1 2\n    3\n    4\n    5\n''') == '5/1\\n'\nassert solution('''\n    2\n    1 2\n    3\n    4\n    5\n    6\n''') == '6/1\\n'\nassert solution('''\n    7\n    1 2\n    3\n    4\n    5\n    6\n    7\n    8\n''') == '3/1\\n'\nassert solution('''\n    8\n    1 2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n''') == '9/1\\n'\n"
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Test failed for input {input()}\""
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n2\n1.2 10.2\n2.2 15.2\n''') == '1.114672365'\nprint('All test cases passed!')"
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1.2 10.2\\n2.2 15.2\") == \"1.114672365\"\nassert solution(\"1\\n2.1\\n3.1\\n4.1\\n5.1\\n6.1\\n7.1\\n8.1\\n9.1\\n10.1\") == \"1.658794473\"\nassert solution(\"1\\n100.1\\n200.1\\n300.1\\n400.1\\n500.1\\n600.1\\n700.1\\n800.1\\n900.1\\n1000.1\") == \"1.02075938\"\nassert solution(\"1\\n200.1\\n300.1\\n400.1\\n500.1\\n600.1\\n700.1\\n800.1\\n900.1\\n1000.1\") == \"0.996472897\"\nassert solution(\"1\\n100.1\\n200.1\\n300.1\\n400.1\\n500.1\\n600.1\\n700.1\\n800.1\\n900.1\\n1000.1\") == \"0.972186408\""
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\n1.2 10.2\\n2.2 15.2') == '1.114672365\\n'\nprint('All tests passed.')"
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1.2 10.2\\n2.2 15.2\\n\") == \"1.114672365\\n\""
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1.2 10.2\\n2.2 15.2\\n\") == 1.114672365\nprint(\"All tests passed!\")"
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '1.114672365'\n"
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\n1.2 10.2\\n2.2 15.2') == '1.114672365'\n\nimport random\nimport math"
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nprint(f\"Test Passed: {assert_test_passed()}\")"
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1.2 10.2\\n2.2 15.2\") == \"1.114672365\"\n"
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1.2 10.2\\n2.2 15.2\\n\") == \"1.114672365\"\n"
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"\"\"3\n1 2 3 2\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == sample_output, \"The provided function is not correct.\"\n\nsample_input = '''\n4\n0 3\n1 1\n2 1\n2 0\n'''\nsample_output = '''\n3\n1 2 3 2\n'''"
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n0 3\\n1 1\\n2 1\\n2 0\") == \"3\\n1 2 3 2\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"0 3\\n1 1\\n2 1\\n2 0\") == \"3\\n1 2 3 2\"\n"
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 3\\n1 1\\n2 1\\n2 0\") == \"3\\n1 2 3 2\\n\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n0 3\\n1 1\\n2 1\\n2 0') == '3\\n1 2 3 2'\nassert solution('3\\n1 2 3\\n2 2') == '3\\n1 2 3'\nassert solution('3\\n1 2 3\\n2 1\\n1 1\\n2 2') == '3\\n1 2 3'\n"
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0 3\\n1 1\\n2 1\\n2 0\") == \"3\\n1 2 3 2\""
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '''\n3\n1 2 3 2\n'''"
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 3\\n1 1\\n2 1\\n2 0\") == \"3\\n1 2 3 2\\n\"\nassert solution(\"4\\n0 3\\n1 1\\n2 1\\n2 0\") == \"3\\n1 2 3 2\\n\"\nassert solution(\"5\\n0 3\\n1 1\\n2 1\\n2 0\") == \"3\\n1 2 3 2\\n\"\nassert solution(\"6\\n0 3\\n1 1\\n2 1\\n2 0\") == \"3\\n1 2 3 2\\n\"\nassert solution(\"7\\n0 3\\n1 1\\n2 1\\n2 0\") == \"3\\n1 2 3 2\\n\""
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(solution) == '1'\nassert solution(solution) == '1'\nassert solution(solution) == '1'\nassert solution(solution) == '1'\nassert solution(solution) == '2'\nassert solution(solution) == '3'\nassert solution(solution) == '4'"
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n1 2 3\\n') == '1\\n2\\n3\\n'\nassert solution('3\\n1 1 2\\n') == 'none\\n'\nassert solution('4\\n1 2 1 3\\n') == 'none\\n'"
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == '1,2,3', \"Expected '1,2,3', got: {}\".format(solution(sample_input1))\nassert solution(sample_input2) == 'none', \"Expected 'none', got: {}\".format(solution(sample_input2))\nassert solution(sample_input3) == 'none', \"Expected 'none', got: {}\".format(solution(sample_input3))"
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"none\"\n"
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"1\\n2\\n3\\n\"\nassert solution(\"3\\n1 1 2\\n\") == \"none\\n\"\nassert solution(\"4\\n1 2 1 3\\n\") == \"none\\n\""
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input) == expected_output, f\"Error: {solution(input)}!= {expected_output}\""
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"1\\n2\\n3\\n\"\nassert solution(\"3\\n1 1 2\\n\") == \"none\\n\"\nassert solution(\"4\\n1 2 1 3\\n\") == \"none\\n\""
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == expected"
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"1\\n2\\n3\\n\", \"Test 1\"\nassert solution(\"3\\n1 1 2\\n\") == \"none\\n\", \"Test 2\"\nassert solution(\"4\\n1 2 1 3\\n\") == \"none\\n\", \"Test 3\""
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2 3\") == \"1\\n2\\n3\"\nassert solution(\"3\\n1 1 2\") == \"none\"\nassert solution(\"4\\n1 2 1 3\") == \"none\"\n\nfrom typing import List"
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Test failed for input: {input()}\"\nfor input_, output_ in zip(input(), output):\n    assert input_ == output_, f\"Test failed for input: {input_}\\nOutput: {output_}\"\n"
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7\\n2 1 0 1 2 3 3\") == \"5\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '5', \"The solution is incorrect.\""
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"5\\n\""
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7\\n2 1 0 1 2 3 3\") == \"5\\n\""
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('7\\n2 1 0 1 2 3 3') == '5\\n'\nprint('All tests passed.')"
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1 0 1 2 3 3\") == \"5\", \"The correct output is 5, but it is: \" + str(solution(\"2 1 0 1 2 3 3\"))\nassert solution(\"7\") == \"5\", \"The correct output is 5, but it is: \" + str(solution(\"7\"))\n"
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1 0 1 2 3 3\") == \"5\\n\""
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '5', \"Test failed. Please fix the given code.\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '5', \"Incorrect output. Please check the problem statement and the given examples.\""
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7\\n2 1 0 1 2 3 3\") == 5, \"The output is incorrect\"\nassert solution(\"1000001\\n1 2 3 4 5 6 7 8 9 10\") == 0, \"The output is incorrect\""
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n    5 6\n    #####\n     #...#\n     #_###\n     #_M.#\n     #_#.#\n     #####\n    \"\"\") == \"\"\"\n-1 -1 -1 -1 -1\n-1 4 5 6 -1\n-1 4 -1 -1 -1\n-1 1 0 1 -1\n-1 3 1 2 -1\n-1 -1 -1 -1 -1\"\"\""
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\") == \"\"\"-1 -1 -1 -1 -1\n-1 4 5 6 -1\n-1 4 -1 -1 -1\n-1 1 0 1 -1\n-1 3 1 2 -1\n-1 -1 -1 -1 -1\"\"\""
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\\n\") == \"-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1\\n\"\nassert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#M.##\\n#####\\n\") == \"-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1\\n\"\nassert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#M.##\\n#####\\n\") == \"-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1\\n\"\nassert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#M.##\\n#####\\n\") == \"-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1\\n\"\nassert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#M.##\\n#####\\n\") == \"-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1\\n\""
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\") == [4, 5, 6, -1, -1]\nassert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\") == [-1, -1, -1, -1, -1]\nassert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\") == [-1, 4, 5, 6, -1]\nassert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\") == [-1, 4, -1, -1, -1]\nassert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\") == [-1, 1, 0, 1, -1]\nassert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\") == [-1, 3, 1, 2, -1]"
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3, 2) == \"-1 -1 -1 -1 -1\"\nassert solution(4, 2) == \"4 5 6 -1\"\nassert solution(4, 2) == \"4 -1 -1 -1\"\nassert solution(3, 3) == \"-1 -1 -1 -1 -1\"\nassert solution(5, 6) == \"-1 -1 -1 -1 -1\"\nassert solution(5, 7) == \"0 1 2 3 4\""
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n    5 6\n#####\n"
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    5 6\n    #####\n    #...#\n   #_###\n   #_M.#\n   #__.#\n    #####\n    \"\"\"\n) == \"\"\"\n-1 -1 -1 -1 -1\n-1 4 5 6 -1\n-1 4 -1 -1 -1\n-1 1 0 1 -1\n-1 3 1 2 -1\n-1 -1 -1 -1 -1\n\"\"\""
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 6\\n#####\\n#_###\\n#_M.#\\n#__.#\\n#####\") == \"-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1\"\n"
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\\n\") == \"-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1\"\n"
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n    5 6\n#####\n"
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n\") == \"6\\n\"\nassert solution(\"4 6 1\\n1\\n2 3 2\\n3 4 3\\n\") == \"impossible\\n\"\nassert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n\") == \"impossible\\n\""
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\") == 6, \"The mayor of RMRCity wants to create a secure landline telephone network for emergency use in case of serious disasters when the city is cut off from the outside world. Some pairs of buildings in the city can be directly connected with a wire telephone line and the municipality engineers have prepared an estimate of the cost of connecting any such pair.\""
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3') == 6"
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\") == \"6\\ndef solution(stdin: str) -> str: pass\\n\""
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '6\\n'"
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n4 6 1\n1\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4\n3 4 3\n''') == '6\\n'\nassert solution('''\n4 6 2\n1\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4\n3 4 3\n''') == 'impossible\\n'\nassert solution('''\n4 6 3\n1\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4\n3 4 3\n''') == 'impossible\\n'\nassert solution('''\n4 6 2\n1\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4\n3 4 3\n''') == 'impossible\\n'\nassert solution('''\n4 6 1\n1\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4\n3 4 3\n''') == 'impossible\\n'"
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n\") == \"6\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"test.in\", \"r\").read()) == \"6\\n\""
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\") == \"6\\n6\\n\""
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\") == \"6\\n\"\n"
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4 2 1\") == \"01001\""
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4 2 1\") == \"01001\""
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4 2 1\") == \"01001\""
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3, 4, 2, 1) == \"01001\""
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 4 2 1') == '01001'"
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4 2 1\") == \"01001\"\n"
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4 2 1\") == \"01001\""
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3, 4, 2, 1) == \"01001\""
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"3 4 2 1\") == \"01001\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4 2 1\") == \"01001\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n''') == 'possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\\n'\n\nassert solution('''\n3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n''') == 'possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\\n'\n\nassert solution('''\n3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n''') == 'possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\\n'"
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"possible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"possible\"\nassert solution(input()) == \"impossible\"\nassert solution(input()) == \"possible\""
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n\"\"\"\n) == \"possible\"\n\nassert solution(\n    \"\"\"\n3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n3 5\n\"\"\"\n) == \"possible\"\n\nassert solution(\n    \"\"\"\n3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n3 5\n3 6\n\"\"\"\n) == \"possible\"\n\nassert solution(\n    \"\"\"\n3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n3 5\n3 6\n3 7\n\"\"\"\n) == \"possible\"\n\nassert solution(\n    \"\"\"\n3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n3 5\n3 6\n3 7\n3 8\n\"\"\"\n) == \"impossible\""
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\""
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\"\nassert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n5 6\") == \"impossible\""
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 'possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3'"
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\"\nassert solution(\"5 6 7\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\") == \"impossible\"\nassert solution(\"5 6 7\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\"\nassert solution(\"5 6 7\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\") == \"impossible\"\nassert solution(\"5 6 7\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\"\nassert solution(\"5 6 7\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\") == \"impossible\"\nassert solution(\"5 6 7\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\""
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"possible\""
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\""
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"possible\"\n"
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin: str) == \"2.0\""
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == \"2.0\""
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 2.0"
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n') == '2.0'\nassert solution('0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n\\n0 0 0\\n0 0 0\\n0 0 0\\n') == '2.0'\nassert solution('0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n\\n0 0 0\\n0 0 0\\n0 0 0\\n\\n0 0 0\\n0 0 0\\n0 0 0\\n') == '2.0'\nassert solution('0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n\\n0 0 0\\n0 0 0\\n0 0 0\\n\\n0 0 0\\n0 0 0\\n0 0 0\\n\\n0 0 0\\n0 0 0\\n0 0 0\\n') == '2.0'"
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('0 0 1\\n0 1 1\\n2 0 3\\n2 1 3') == '2.0'"
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\") == \"2.0\"\n"
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(None) == \"1.0\"\nassert solution(\"Test Input\") == \"2.0\"\n\nfrom typing import List"
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\") == \"2.0\\n\"\nassert solution(\"0 0 1\\n0 1 1\\n0 2 1\\n0 3 1\\n0 4 1\\n0 5 1\\n0 6 1\\n0 7 1\\n0 8 1\\n0 9 1\\n0 10 1\\n0 11 1\\n0 12 1\\n0 13 1\\n0 14 1\\n0 15 1\\n0 16 1\\n0 17 1\\n0 18 1\\n0 19 1\\n0 20 1\\n0 21 1\\n0 22 1\\n0 23 1\\n0 24 1\\n0 25 1\\n0 26 1\\n0 27 1\\n0 28 1\\n0 29 1\\n0 30 1\\n0 31 1\\n0 32 1\\n0 33 1\\n0 34 1\\n0 35 1\\n0 36 1\\n0 37 1\\n0 38 1\\n0 39 1\\n0 40 1\\n0 41 1\\n0 42 1\\n0 43 1\\n0 44 1\\n0 45 1\\n0 46 1\\n0 47 1\\n0 48 1\\n0 49 1\\n0 50 1\\n0 51 1\\n0 52 1\\n0 53 1\\n0 54 1\\n0 55 1\\n0 56 1\\n0 57 1\\n0 58 1\\n0 59 1\\n0 60 1\\n0 61 1\\n0 62 1\\n0 63 1\\n0 64 1\\n0 65 1\\n0 66 1\\n0 67 1\\n0 68 1\\n0 69 1\\n0 70 1\\n0 71 1\\n0 72 1\\n0 73 1\\n0 74 1\\n0 75 1\\n0 76 1\\n0 77 1\\n0 78 1\\n0 79 1\\n0 80 1\\n0 81 1\\n0 82 1\\n0 83 1\\n0 84 1\\n0 85 1\\n0 86 1\\n0 87 1\\n0 88 1\\n0 89 1\\n0 90 1\\n0 91 1\\n0 92 1\\n0 93 1\\n0 94 1\\n0 95 1\\n0 96 1\\n0 97 1\\n0 98 1\\n0 99 1\\n0 100 1\\n0 101 1\\n0 102 1\\n0 103 1\\n0 104 1\\n0 105 1\\n0 106 1\\n0 107 1\\n0 108 1\\n0 109 1\\n0 110 1\\n0 111 1\\n0 112 1\\n0 113 1\\n0 114 1\\n0 115 1\\n0 116 1\\n0 117 1\\n0 118 1\\n0 119 1\\n0 120 1\\n0 121"
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\") == \"2.0\"\nassert solution(\"0 2 0\\n0 3 0\\n0 4 0\\n0 5 0\\n0 6 0\\n0 7 0\\n0 8 0\\n0 9 0\\n0 10 0\\n0 11 0\\n0 12 0\\n0 13 0\\n0 14 0\\n0 15 0\\n0 16 0\\n0 17 0\\n0 18 0\\n0 19 0\\n0 20 0\\n0 21 0\\n0 22 0\\n0 23 0\\n0 24 0\\n0 25 0\\n0 26 0\\n0 27 0\\n0 28 0\\n0 29 0\\n0 30 0\\n0 31 0\\n0 32 0\\n0 33 0\\n0 34 0\\n0 35 0\\n0 36 0\\n0 37 0\\n0 38 0\\n0 39 0\\n0 40 0\\n0 41 0\\n0 42 0\\n0 43 0\\n0 44 0\\n0 45 0\\n0 46 0\\n0 47 0\\n0 48 0\\n0 49 0\\n0 50 0\\n0 51 0\\n0 52 0\\n0 53 0\\n0 54 0\\n0 55 0\\n0 56 0\\n0 57 0\\n0 58 0\\n0 59 0\\n0 60 0\\n0 61 0\\n0 62 0\\n0 63 0\\n0 64 0\\n0 65 0\\n0 66 0\\n0 67 0\\n0 68 0\\n0 69 0\\n0 70 0\\n0 71 0\\n0 72 0\\n0 73 0\\n0 74 0\\n0 75 0\\n0 76 0\\n0 77 0\\n0 78 0\\n0 79 0\\n0 80 0\\n0 81 0\\n0 82 0\\n0 83 0\\n0 84 0\\n0 85 0\\n0 86 0\\n0 87 0\\n0 88 0\\n0 89 0\\n0 90 0\\n0 91 0\\n0 92 0\\n0 93 0\\n0 94 0\\n0 95 0\\n0 96 0\\n0 97 0\\n0 98 0\\n0 99 0\\n0 100 0\\n0 101 0\\n0 102 0\\n0 103 0\\n0 104 0\\n0 105 0\\n0 106 0\\n0 107 0\\n0 108 0\\n0 109 0\\n0 110 0\\n0 111 0\\n0 112 0\\n0 113 0\\n0 114 0\\n0 115 0\\n0 116 0\\n0 117 0\\n0 118 0\\n0 119 0\\n0 120 0\\n0 121 0\\n0 122 0\\n0 1"
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('0 0 1\\n0 1 1\\n2 0 3\\n2 1 3') == '2.0'"
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2\") == \"4\\n\""
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('7\\n5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2') == '4'\nprint('All tests passed!')"
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"4\\n\", \"Expected output 4, got: \" + solution(input())"
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2\") == \"4\""
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7\\n5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2\") == \"4\\n\""
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"4\"\n"
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '4'"
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, \"Testcase failed\"\n"
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7\\n5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2\") == \"4\", \"Incorrect output. Please check the sample input and the function definition.\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7\\n5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2\") == \"4\\n\"\nassert solution(\"5\\n1 1 3 4 7\") == \"2\\n\"\nassert solution(\"7\\n3 4 6 2 7 5 1\\n5 4 2 6 3 1 5\\n7 1 6 2 3 4 2\\n1 6 1 2 3 5 4\\n3 4 5 1 2 6 7\\n2 7 2 4 3 1 5\\n1 5 4 2 6 3 7\") == \"11\\n\""
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n-10 0\\n-10 10\") == \"2\""
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n-10 0\\n-10 10\") == \"2\"\nassert solution(\"4\\n-10 0\\n10 10\") == \"1\"\nassert solution(\"4\\n10 0\\n-10 10\") == \"1\"\nassert solution(\"4\\n10 0\\n10 10\") == \"2\""
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n-10 0\\n-10 10\") == \"2\"\n"
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n-10 0\\n-10 10\") == \"2\\n2\"\nassert solution(\"5\\n-10 0\\n-10 10\\n10 10\") == \"3\\n2\"\nassert solution(\"1\\n-10 0\") == \"1\\n1\"\nassert solution(\"5\\n-10 0\\n-10 10\\n10 10\\n10 10\\n10 10\") == \"3\\n2\"\n"
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n-10 0\\n-10 10\") == \"2\""
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n-10 0\\n-10 10\") == \"2\""
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n-10 0\\n-10 10\") == \"2\""
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n-10 0\\n-10 10\") == \"2\\n\"\n"
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n-10 0\\n-10 10\") == \"2\"\n"
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 5\") == \"0\\n\"\nassert solution(\"2 3\") == \"0\\n\"\nassert solution(\"3 4\") == \"1\\n\"\nassert solution(\"4 5\") == \"1\\n\"\nassert solution(\"5 6\") == \"2\\n\"\nassert solution(\"6 7\") == \"2\\n\"\nassert solution(\"7 8\") == \"3\\n\"\nassert solution(\"8 9\") == \"3\\n\"\nassert solution(\"9 10\") == \"4\\n\"\nassert solution(\"10 11\") == \"4\\n\"\nassert solution(\"11 12\") == \"5\\n\"\nassert solution(\"12 13\") == \"5\\n\"\nassert solution(\"13 14\") == \"6\\n\"\nassert solution(\"14 15\") == \"6\\n\"\nassert solution(\"15 16\") == \"7\\n\"\nassert solution(\"16 17\") == \"7\\n\"\nassert solution(\"17 18\") == \"8\\n\"\nassert solution(\"18 19\") == \"8\\n\"\nassert solution(\"19 20\") == \"9\\n\"\nassert solution(\"20 21\") == \"9\\n\"\nassert solution(\"21 22\") == \"10\\n\"\nassert solution(\"22 23\") == \"10\\n\"\nassert solution(\"23 24\") == \"11\\n\"\nassert solution(\"24 25\") == \"11\\n\"\nassert solution(\"25 26\") == \"12\\n\"\nassert solution(\"26 27\") == \"12\\n\"\nassert solution(\"27 28\") == \"13\\n\"\nassert solution(\"28 29\") == \"13\\n\"\nassert solution(\"29 30\") == \"14\\n\"\nassert solution(\"30 31\") == \"14\\n\"\nassert solution(\"31 32\") == \"15\\n\"\nassert solution(\"32 33\") == \"15\\n\"\nassert solution(\"33 34\") == \"16\\n\"\nassert solution(\"34 35\") == \"16\\n\"\nassert solution(\"35 36\") == \"17\\n\"\nassert solution(\"36 37\") == \"17\\n\"\nassert solution(\"37 38\") == \"18\\n\"\nassert solution(\"38 39\") == \"18\\n\"\nassert solution(\"39 40\") == \"19\\n\"\nassert solution(\"40 41\") == \"19\\n\"\nassert solution(\"41 42\") == \"20\\n\"\nassert solution(\"42 43\") == \"20\\n\"\nassert solution(\"43 44\") == \"21\\n\"\nassert solution(\"44 45\") == \"21\\n\"\nassert solution(\"45 46\") == \"22\\n\"\nassert solution(\"46 47\") == \"22\\n\"\nassert solution(\"47 48\") == \"23\\n\"\nassert solution(\"48 49\") == \"23\\n\"\nassert solution(\"49 50\") == \"24\\n\"\nassert solution(\"50 51\") == \"24\\n\"\nassert solution(\"51 52\") == \"25\\n\"\nassert solution(\"52 53\") == \"25\\n\"\nassert solution(\"53 54\") == \"26\\n\"\nassert solution(\"54 55\") == \"26\\n\"\nassert solution(\"55 56\") == \"27\\n\"\nassert solution(\"56 57\") == \"27\\n\"\nassert solution(\"57 58\") == \"28\\n\"\nassert solution(\"58 59\") == \"28\\n\"\nassert solution(\"59 60\") == \"29\\n\"\nassert solution(\"60 61\") == \"29\\n\"\nassert solution(\"61 62\") == \"30\\n\"\nassert solution(\"62 63\") == \"30\\n\"\nassert solution(\"63 64\")"
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 5\") == \"0\\n\"\nassert solution(\"5 1\") == \"1\\n\"\nassert solution(\"50 5000\") == \"100\\n\"\nassert solution(\"10 100\") == \"50\\n\"\nassert solution(\"500 5000\") == \"100000\\n\"\nassert solution(\"100000 100000\") == \"1000000\\n\"\nassert solution(\"1000000 1000000\") == \"10000000\\n\"\nassert solution(\"10000000 10000000\") == \"100000000\\n\"\n"
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 5') == '0\\n'\nassert solution('2 10') == '5\\n'\nassert solution('3 20') == '5\\n'\nassert solution('4 30') == '6\\n'\nassert solution('5 40') == '7\\n'\nassert solution('6 50') == '8\\n'\nassert solution('7 60') == '9\\n'\nassert solution('8 70') == '10\\n'\nassert solution('9 80') == '12\\n'\nassert solution('10 90') == '15\\n'\nassert solution('11 100') == '20\\n'\nassert solution('12 110') == '25\\n'\nassert solution('13 120') == '31\\n'\nassert solution('14 130') == '38\\n'\nassert solution('15 140') == '46\\n'\nassert solution('16 150') == '55\\n'\nassert solution('17 160') == '66\\n'\nassert solution('18 170') == '78\\n'\nassert solution('19 180') == '91\\n'\nassert solution('20 190') == '105\\n'\nassert solution('21 200') == '120\\n'\nassert solution('22 210') == '136\\n'\nassert solution('23 220') == '153\\n'\nassert solution('24 230') == '171\\n'\nassert solution('25 240') == '190\\n'\nassert solution('26 250') == '210\\n'\nassert solution('27 260') == '231\\n'\nassert solution('28 270') == '253\\n'\nassert solution('29 280') == '276\\n'\nassert solution('30 290') == '300\\n'\nassert solution('31 300') == '325\\n'\nassert solution('32 310') == '351\\n'\nassert solution('33 320') == '378\\n'\nassert solution('34 330') == '406\\n'\nassert solution('35 340') == '435\\n'\nassert solution('36 350') == '465\\n'\nassert solution('37 360') == '496\\n'\nassert solution('38 370') == '528\\n'\nassert solution('39 380') == '561\\n'\nassert solution('40 390') == '595\\n'\nassert solution('41 400') == '630\\n'\nassert solution('42 410') == '666\\n'\nassert solution('43 420') == '703\\n'\nassert solution('44 430') == '741\\n'\nassert solution('45 440') == '780\\n'\nassert solution('46 450') == '820\\n'\nassert solution('47 460') == '861\\n'\nassert solution('48 470') == '903\\n'\nassert solution('49 480') == '946\\n'\nassert solution('50 490') == '990\\n'\nassert solution('51 500') == '1035\\n'\nassert solution('52 510') == '1081\\n'\nassert solution('53 520') == '1128\\n'\nassert solution('54 530') == '1176\\n'\nassert solution('55 540') == '1225\\n'\nassert solution('56 550') == '1275\\n'\nassert solution"
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Test case {test_case} failed\"\nfor test_case in range(1, 11):\n    test_input, output = [int(x) for x in input().split()]\n    test_case = test_case + 1\n    assert solution(test_input) == output, f\"Test case {test_case} failed\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 0, \"Your solution is incorrect.\""
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 0, \"Test Failed\""
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Input {input()} does not produce expected output {output()}\""
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 5\") == \"0\\n\"\nassert solution(\"2 2\") == \"1\\n\"\nassert solution(\"3 5\") == \"2\\n\"\nassert solution(\"5 10\") == \"3\\n\"\nassert solution(\"6 15\") == \"3\\n\"\nassert solution(\"10 30\") == \"4\\n\"\nassert solution(\"15 20\") == \"4\\n\"\nassert solution(\"20 30\") == \"4\\n\"\nassert solution(\"25 40\") == \"4\\n\"\nassert solution(\"30 50\") == \"4\\n\"\nassert solution(\"35 60\") == \"4\\n\"\nassert solution(\"40 70\") == \"5\\n\"\nassert solution(\"45 80\") == \"5\\n\"\nassert solution(\"50 90\") == \"5\\n\"\nassert solution(\"55 100\") == \"5\\n\"\nassert solution(\"60 110\") == \"5\\n\"\nassert solution(\"65 120\") == \"5\\n\"\nassert solution(\"70 130\") == \"5\\n\"\nassert solution(\"75 140\") == \"5\\n\"\nassert solution(\"80 150\") == \"5\\n\"\nassert solution(\"85 160\") == \"5\\n\"\nassert solution(\"90 170\") == \"5\\n\"\nassert solution(\"95 180\") == \"5\\n\"\nassert solution(\"100 190\") == \"5\\n\"\nassert solution(\"105 200\") == \"5\\n\"\nassert solution(\"110 210\") == \"5\\n\"\nassert solution(\"115 220\") == \"5\\n\"\nassert solution(\"120 230\") == \"5\\n\"\nassert solution(\"125 240\") == \"5\\n\"\nassert solution(\"130 250\") == \"5\\n\"\nassert solution(\"135 260\") == \"5\\n\"\nassert solution(\"140 270\") == \"5\\n\"\nassert solution(\"145 280\") == \"5\\n\"\nassert solution(\"150 290\") == \"5\\n\"\nassert solution(\"155 300\") == \"5\\n\"\nassert solution(\"160 310\") == \"5\\n\"\nassert solution(\"165 320\") == \"5\\n\"\nassert solution(\"170 330\") == \"5\\n\"\nassert solution(\"175 340\") == \"5\\n\"\nassert solution(\"180 350\") == \"5\\n\"\nassert solution(\"185 360\") == \"5\\n\"\nassert solution(\"190 370\") == \"5\\n\"\nassert solution(\"195 380\") == \"5\\n\"\nassert solution(\"200 390\") == \"5\\n\"\nassert solution(\"205 400\") == \"5\\n\"\nassert solution(\"210 410\") == \"5\\n\"\nassert solution(\"215 420\") == \"5\\n\"\nassert solution(\"220 430\") == \"5\\n\"\nassert solution(\"225 440\") == \"5\\n\"\nassert solution(\"230 450\") == \"5\\n\"\nassert solution(\"235 460\") == \"5\\n\"\nassert solution(\"240 470\") == \"5\\n\"\nassert solution(\"245 480\") == \"5\\n\"\nassert solution(\"250 490\") == \"5\\n\"\nassert solution(\"255 500\") == \"5\\n\"\nassert solution(\"260 510\") == \"5\\n\"\nassert solution(\"265 520\") == \"5\\n\"\nassert solution(\"270 530\") == \"5\\n\"\nassert solution(\"275 540\") == \"5\\n\"\nassert solution(\"280 55"
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 5\") == \"0\"\nassert solution(\"2 3\") == \"2\"\nassert solution(\"3 4\") == \"5\"\nassert solution(\"4 5\") == \"8\"\nassert solution(\"5 6\") == \"13\"\nassert solution(\"6 7\") == \"21\"\nassert solution(\"7 8\") == \"34\"\nassert solution(\"8 9\") == \"55\"\nassert solution(\"9 10\") == \"89\""
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 5') == '0\\n'"
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1') == ['0 0', '1 1']"
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0 0\\n1 1\\n\""
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1') == '0 0\\n1 1\\n'\nassert solution('5 5\\n0 1\\n0 0\\n0 1\\n1 0\\n1 1\\n') == '1 1\\n2 2\\n'\nassert solution('10 10\\n1 0\\n0 0\\n0 1\\n0 0\\n1 1\\n1 1\\n') == '1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n'\nassert solution('10 10\\n1 0\\n0 0\\n0 1\\n0 0\\n1 1\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n') == '1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n'\nassert solution('10 10\\n1 0\\n0 0\\n0 1\\n0 0\\n1 1\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n0 0\\n') == '1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n'\nassert solution('10 10\\n1 0\\n0 0\\n0 1\\n0 0\\n1 1\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n0 0\\n1 0\\n') == '1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n'\nassert solution('10 10\\n1 0\\n0 0\\n0 1\\n0 0\\n1 1\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n0 0\\n1 0\\n1 0\\n') == '1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n'\nassert solution('10 10\\n1 0\\n0 0\\n0 1\\n0 0\\n1 1\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n0 0\\n1 0\\n1 0\\n1 0\\n') == '1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n'\nassert solution('10 10\\n1 0\\n0 0\\n0 1\\n0 0\\n1 1\\n1 1\\n0 0\\n1 1\\n0 0\\n1 1\\n0 0\\n0 0\\n1 0\\n1 0\\n1 0\\n1 0\\n') == '1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n'\nassert solution('10 10\\n1 0\\n0 "
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '0 0\\n1 1\\n'\n\nSolution:\n\nThe problem requires us to find the initial set of locations that seem like candidates. We will try to match the robot's image to the floor image at each possible location and overlay it on the floor image. We will keep track of the number of pixels the robot's image matches the floor image at each location and sort the locations based on the number of pixels the robot matches the floor image at each location.\n\nLet's start by writing the code to read the input images and find the initial set of locations: \n\n```python\nimport sys"
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\") == [\"0 0\", \"1 1\"]"
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\") == \"0 0\\n1 1\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"Incorrect output. Expected: {expected}, got: {solution(input())}\""
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\\n') == '0 0\\n1 1\\n'"
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n2 2\n1 0\n0 1\n3 3\n1 0 0\n0 1 0\n0 0 1\n''') == ['0 0', '1 1']"
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n2 2\n1 0\n0 1\n3 3\n1 0 0\n0 1 0\n0 0 1\n''') == '0 0\\n1 1'\n\nassert solution('''\n3 2\n1 1\n0 1\n2 1\n1 1 1\n0 1 1\n''') == '0 0\\n1 1'\n\nassert solution('''\n1 1\n0 1\n1 1\n1 0\n1 1 1\n1 1 0\n''') == '0 0\\n1 1'\n\nassert solution('''\n1 1\n1 0\n1 1\n1 0\n1 1 1\n1 1 0\n''') == '0 0\\n1 1'\n\nassert solution('''\n2 3\n1 1\n0 1\n2 1\n1 1 1\n0 1 1\n0 0 1\n''') == '0 0\\n1 1'\n\nassert solution('''\n2 3\n1 1\n1 1\n1 1\n1 1 1\n1 1 0\n''') == '0 0\\n1 1'\n\nassert solution('''\n1 2\n0 0\n0 0\n0 0\n0 0\n0 0\n''') == '0 0\\n1 0'\n\nassert solution('''\n3 2\n1 1\n1 1\n1 1\n1 1 1\n1 1 0\n''') == '0 0\\n1 1'\n\nassert solution('''\n2 2\n1 1\n1 1\n1 1\n1 1 1\n1 1 0\n''') == '0 0\\n1 1'"
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 0.950000\\n0.700000 50\") == \"44.975\""
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 0.950000\\n0.700000 50\") == \"44.975\"\nassert solution(\"1 2 0.950000\\n0.700000 50\") == \"44.975\"\nassert solution(\"1 2 0.950000\\n0.700000 50\") == \"44.975\"\nassert solution(\"1 2 0.950000\\n0.700000 50\") == \"44.975\"\nassert solution(\"1 2 0.950000\\n0.700000 50\") == \"44.975\"\nassert solution(\"1 2 0.950000\\n0.700000 50\") == \"44.975\"\nassert solution(\"1 2 0.950000\\n0.700000 50\") == \"44.975\"\nassert solution(\"1 2 0.950000\\n0.700000 50\") == \"44.975\"\nassert solution(\"1 2 0.950000\\n0.700000 50\") == \"44.975\"\nassert solution(\"1 2 0.950000\\n0.700000 50\") == \"44.975\"\nassert solution(\"1 2 0.950000\\n0.700000 50\") == \"44.975\"\nassert solution(\"1 2 0.950000\\n0.700000 50\") == \"44.975\"\nassert solution(\"1 2 0.950000\\n0.700000 50\") == \"44.975\"\nassert solution(\"1 2 0.950000\\n0.700000 50\") == \"44.975\"\nassert solution(\"1 2 0.950000\\n0.700000 50\") == \"44.975\"\nassert solution(\"1 2 0.950000\\n0.700000 50\") == \"44.975\"\nassert solution(\"1 2 0.950000\\n0.700000 50\") == \"44.975\"\nassert solution(\"1 2 0.950000\\n0.700000 50\") == \"44.975\"\nassert solution(\"1 2 0.950000\\n0.700000 50\") == \"44.975\"\nassert solution(\"1 2 0.950000\\n0.700000 50\") == \"44.975\"\nassert solution(\"1 2 0.950000\\n0.700000 50\") == \"44.975\"\nassert solution(\"1 2 0.950000\\n0.700000 50\") == \"44.975\"\nassert solution(\"1 2 0.950000\\n0.700000 50\") == \"44.975\"\nassert solution(\"1 2 0.950000\\n0.700000 50\") == \"44.975\"\nassert solution(\"1 2 0.950000\\n0.700000 50\") == \"44.975\"\nassert solution(\"1 2 0.950000\\n0.700000 50\") == \"44.975\"\nassert solution(\"1 2 0.950"
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 2 0.950000\\n0.700000 50') == '44.975\\n'\n"
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"44.975\"\n"
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 0.950000\\n0.700000 50\") == \"44.975\"  # correct solution"
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '44.975', \"Expected: 44.975, got: \" + solution(stdin)"
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 44.975\n"
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 0.950000\\n0.700000 50\") == \"44.975\""
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"44.975\"\n"
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 2 0.950000\\n0.700000 50') == '44.975'"
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\\n\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"IMPOSSIBLE\\n\""
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\\n\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\\n\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\\n\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\\n\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\\n\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\\n\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\\n\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\\n\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\\n\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\\n\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\\n\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\\n\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\\n\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\\n\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\\n\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\\n\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\\n\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\\n\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\\n\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\\n\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\\n\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\\n\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\\n\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") =="
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n\") == \"2\\n\"\n\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n4\") == \"IMPOSSIBLE\\n\"\n\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n1\") == \"3\\n\"\n\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n100\") == \"IMPOSSIBLE\\n\"\n\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n4\") == \"3\\n\""
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\"\nassert solution(\"3 1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''3 2 3\n1 1\n5 2\n1 3\n3\n3\n2\n1''') == '2\\n'\n\nassert solution('''3 1 2\n2 1\n4 3\n1 2\n3\n2\n1''') == 'IMPOSSIBLE\\n'\n\nassert solution('''3 1 2\n2 1\n4 3\n1 2\n3\n3\n2\n1''') == '3\\n'"
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n') == '2\\n'\nassert solution('3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n\\n') == 'IMPOSSIBLE\\n'"
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n') == '2'\nassert solution('3 4 4\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n') == 'IMPOSSIBLE'\nassert solution('3 2 4\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n') == 'IMPOSSIBLE'\nassert solution('1 1\\n1\\n1\\n1\\n1\\n') == 'IMPOSSIBLE'"
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n') == '2'\n\nfrom typing import List"
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r')) == '2'\n"
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(None) == \"\""
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_data) == output_data, f\"Test case {test_case_index + 1} failed: {expected_output}, got {actual_output}\"\n"
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0') == '4.0'\nassert solution('5 7\\n0.0 1.0\\n2.0 0.0\\n3.0 2.0\\n4.0 2.0\\n5.0 3.0\\n6.0 3.0\\n7.0 2.0\\n8.0 4.0\\n9.0 5.0\\n10.0 6.0\\n11.0 5.0\\n12.0 8.0\\n13.0 9.0\\n14.0 8.0\\n15.0 10.0\\n16.0 12.0\\n17.0 12.0\\n18.0 11.0\\n19.0 13.0\\n20.0 14.0\\n21.0 15.0\\n22.0 16.0\\n23.0 17.0\\n24.0 18.0\\n25.0 18.0\\n26.0 17.0\\n27.0 19.0\\n28.0 20.0\\n29.0 20.0\\n30.0 21.0\\n31.0 22.0\\n32.0 23.0\\n33.0 24.0\\n34.0 24.0\\n35.0 23.0\\n36.0 25.0\\n37.0 26.0\\n38.0 27.0\\n39.0 28.0\\n40.0 29.0\\n41.0 30.0\\n42.0 30.0\\n43.0 29.0\\n44.0 31.0\\n45.0 32.0\\n46.0 33.0\\n47.0 34.0\\n48.0 35.0\\n49.0 36.0\\n50.0 37.0\\n51.0 37.0\\n52.0 38.0\\n53.0 39.0\\n54.0 40.0\\n55.0 40.0\\n56.0 39.0\\n57.0 41.0\\n58.0 42.0\\n59.0 43.0\\n60.0 44.0\\n61.0 45.0\\n62.0 46.0\\n63.0 47.0\\n64.0 48.0\\n65.0 48.0\\n66.0 49.0\\n67.0 50.0\\n68.0 51.0\\n69.0 52.0\\n70.0 53.0\\n71.0 54.0\\n72.0 55.0\\n73.0 56.0\\n74.0 56.0\\n75.0 55.0\\n76.0 57.0\\n77.0 58.0\\n78.0 59.0\\n79.0 60.0\\n80.0 61.0\\n81.0 62.0\\n82.0 63.0\\n83.0 64.0\\n84.0 65.0\\n85.0 65.0\\n86.0 66.0\\n87.0 67.0\\n88.0 68.0\\n89."
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 4.0, \"The expected output is not 4.0.\"\n"
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == sample_output, f\"Expected output '{sample_output}', but got '{solution(sample_input)}'.\""
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"4.0\""
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\") == \"4.0\\n\"\nassert solution(\"2 2\\n0.0 0.0\\n0.0 0.0\\n0.0 0.0\") == \"0.0\\n\"\nassert solution(\"5 5\\n0.0 0.0\\n1.0 0.0\\n2.0 0.0\\n3.0 0.0\\n4.0 0.0\\n5.0 0.0\") == \"0.0\\n\"\nassert solution(\"10 10\\n0.0 0.0\\n0.0 0.0\\n0.0 0.0\\n0.0 0.0\\n0.0 0.0\\n0.0 0.0\\n0.0 0.0\\n0.0 0.0\\n0.0 0.0\\n0.0 0.0\\n0.0 0.0\") == \"0.0\\n\""
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\") == \"4.0\"\nassert solution(\"3 3\\n-0.0 -6.0\\n-6.0 -0.0\\n-6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\") == \"4.0\"\nassert solution(\"3 3\\n0.0 0.0\\n0.0 0.0\\n0.0 0.0\\n0.0 0.0\\n0.0 0.0\\n0.0 0.0\") == \"0.0\"\n"
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3 3\n0.0 6.0\n6.0 0.0\n6.0 6.0\n4.0 4.0\n10.0 4.0\n4.0 10.0\n\"\"\") == \"4.0\"\nassert solution(\"\"\"\n4 4\n2.0 3.0\n3.0 2.0\n3.0 3.0\n2.0 2.0\n3.0 3.0\n2.0 3.0\n\"\"\") == \"6.0\""
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Test Case {i+1} failed: Solution is {solution(input())}, but expected {expected}\"\n\ninput()\ninput()\n\nfor i in range(int(input())):\n    x1, y1 = map(float, input().split())\n    x2, y2 = map(float, input().split())\n    \n    area = abs(x2 - x1) * abs(y2 - y1)\n    \n    print(area)"
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n220 29\\n195 20\\n200 9\\n180 30\") == \"18000\"\nassert solution(\"5\\n200 20\\n180 15\\n195 20\\n220 10\") == \"21000\"\nassert solution(\"6\\n200 20\\n180 15\\n195 20\\n220 10\\n225 15\") == \"26000\"\n"
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n220 29\\n195 20\\n200 9\\n180 30\") == \"18000\\n\"\nassert solution(\"5\\n50 10\\n30 20\\n150 30\\n80 40\") == \"17000\\n\"\nassert solution(\"6\\n150 150\\n100 100\\n50 50\\n30 30\") == \"20000\\n\"\nassert solution(\"7\\n500 500\\n150 150\\n75 75\\n37 37\") == \"30000\\n\"\nassert solution(\"8\\n1000 1000\\n200 200\\n100 100\\n50 50\") == \"19000\\n\"\nassert solution(\"9\\n1000 1000\\n150 150\\n100 100\\n50 50\") == \"19000\\n\"\nassert solution(\"10\\n1500 1500\\n150 150\\n100 100\\n50 50\") == \"20000\\n\""
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n220 29\\n195 20\\n200 9\\n180 30\") == \"18000\\n\"\n"
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"18000\""
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"18000\\n\""
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n220 29\\n195 20\\n200 9\\n180 30\") == \"18000\"\n"
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n220 29\\n195 20\\n200 9\\n180 30') == '18000\\n'"
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"18000\\n\""
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n220 29\\n195 20\\n200 9\\n180 30\") == \"18000\\n\"\nassert solution(\"4\\n150 150\\n200 200\\n200 200\\n200 200\\n\") == \"200000\\n\"\nassert solution(\"3\\n150 150\\n200 200\\n200 200\\n200 200\\n\") == \"200000\\n\"\nassert solution(\"1\\n150 150\\n200 200\\n200 200\\n200 200\\n\") == \"200000\\n\"\nassert solution(\"10\\n50 50\\n200 200\\n200 200\\n200 200\\n200 200\\n200 200\\n\") == \"200000\\n\"\nassert solution(\"10\\n50 50\\n200 200\\n200 200\\n200 200\\n200 200\\n200 200\\n200 200\\n200 200\\n\") == \"4000000\\n\""
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"18000\\n\""
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\") == \"28\\n\"\nassert solution(\"BUYSTICKERS\\n3\\nSTICKY 10\\nTICKERS 1\\nSTICKER 10\\nSTICKY 10\\nSTICKER 20\\nSTICKER 15\\nSTICKER 25\\n\") == \"120\\n\"\nassert solution(\"BUYSTICKERS\\n2\\nSTICKY 10\\nSTICKER 10\\nSTICKY 10\\nSTICKER 20\\nSTICKER 15\\nSTICKER 25\\nSTICKER 30\\n\") == \"160\\n\"\nassert solution(\"BUYSTICKERS\\n2\\nSTICKY 10\\nSTICKER 10\\nSTICKY 10\\nSTICKER 20\\nSTICKER 15\\nSTICKER 25\\nSTICKER 30\\nSTICKER 20\\nSTICKER 15\\nSTICKER 25\\nSTICKER 30\\nSTICKER 20\\nSTICKER 15\\nSTICKER 25\\nSTICKER 30\\nSTICKER 20\\nSTICKER 15\\nSTICKER 25\\nSTICKER 30\\n\") == \"160\\n\"\nassert solution(\"BUYSTICKERS\\n2\\nSTICKY 10\\nSTICKER 10\\nSTICKY 10\\nSTICKER 20\\nSTICKER 15\\nSTICKER 25\\nSTICKER 30\\nSTICKER 20\\nSTICKER 15\\nSTICKER 25\\nSTICKER 30\\nSTICKER 20\\nSTICKER 15\\nSTICKER 25\\nSTICKER 30\\nSTICKER 20\\nSTICKER 15\\nSTICKER 25\\nSTICKER 30\\nSTICKER 20\\nSTICKER 15\\nSTICKER 25\\nSTICKER 30\\nSTICKER 20\\nSTICKER 15\\nSTICKER 25\\nSTICKER 30\\nSTICKER 20\\nSTICKER 15\\nSTICKER 25\\nSTICKER 30\\n\") == \"IMPOSSIBLE\\n\""
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8') == '28\\nIMPOSSIBLE'"
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    BUYSTICKERS\n    4\n    BUYER 10\n    STICKY 10\n    TICKERS 1\n    ERS 8\n    \"\"\"\n) == \"28\\ndef solution(stdin: str) -> str: \\n    pass\\n\""
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\") == \"28\\ndef solution(stdin: str) -> str:\\npass\""
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input) == expected_output, f\"Incorrect output: expected {expected_output}, got {solution(input)}\""
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8') == '28\\ndef solution(stdin: str) -> str:\\npass'"
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"BUYSTICKERS\") == \"28\"\nassert solution(\"STICKERS\") == \"IMPOSSIBLE\"\nassert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\") == \"28\""
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"28\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input) == output, f\"Test failed: Input {input} and expected output {output} are not equal.\" for input, output in zip(sample_inputs, sample_outputs)"
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nSTICKERS 1\\nERS 8\") == \"28\""
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\\n\"\n"
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\\n\"\n"
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\") == [\"INDV 1\", \"INDV 2\", \"CORP 1\", \"INDV 4\", \"CORP 2\", \"INDV 3\", \"CORP 3\"]\nassert solution(\"1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\\n\") == [\"INDV 1\", \"INDV 2\", \"CORP 1\", \"INDV 4\", \"CORP 2\", \"INDV 3\", \"CORP 3\"]\nassert solution(\"1 2\\n3 2\\n4 2\\n5 2\\n6 2\\n7 2\\n8 2\\n9 2\\n10 2\\n11 2\\n12 2\\n13 2\\n14 2\\n15 2\\n16 2\\n17 2\\n18 2\\n19 2\\n20 2\\n\") == [\"INDV 1\", \"INDV 2\", \"CORP 1\", \"CORP 2\", \"INDV 3\", \"INDV 4\", \"INDV 5\", \"INDV 6\", \"INDV 7\", \"INDV 8\", \"INDV 9\", \"INDV 10\", \"INDV 11\", \"INDV 12\", \"INDV 13\", \"INDV 14\", \"INDV 15\", \"INDV 16\", \"INDV 17\", \"INDV 18\", \"INDV 19\", \"INDV 20\", \"INDV 21\", \"INDV 22\", \"INDV 23\", \"INDV 24\", \"INDV 25\", \"INDV 26\", \"INDV 27\", \"INDV 28\", \"INDV 29\", \"INDV 30\", \"INDV 31\", \"INDV 32\", \"INDV 33\", \"INDV 34\", \"INDV 35\", \"INDV 36\", \"INDV 37\", \"INDV 38\", \"INDV 39\", \"INDV 40\", \"INDV 41\", \"INDV 42\", \"INDV 43\", \"INDV 44\", \"INDV 45\", \"INDV 46\", \"INDV 47\", \"INDV 48\", \"INDV 49\", \"INDV 50\", \"INDV 51\", \"INDV 52\", \"INDV 53\", \"INDV 54\", \"INDV 55\", \"INDV 56\", \"INDV 57\", \"INDV 58\", \"INDV 59\", \"INDV 60\", \"INDV 61\", \"INDV 62\", \"INDV 63\", \"INDV 64\", \"INDV 65\", \"INDV 66\", \"INDV 67\", \"INDV 68\", \"INDV 69\", \"INDV 70\", \"INDV 71\", \"INDV 72\", \"INDV 73\", \"INDV 74\", \"INDV 75\", \"INDV 76\", \"INDV 77\", \"INDV 78\", \"INDV 79\", \"INDV 80\", \"INDV 81\", \"INDV 82\", \"INDV 83\", \"INDV 84\", \"INDV 85\", \"INDV 86\", \"INDV 87\", \"INDV 88\", \"INDV 89\", \"INDV 90\", \"INDV 91\", \"INDV 92\", \"INDV 93\", \"INDV 94\", \"INDV 95\", \"INDV 96\", \"INDV 97\", \"INDV 98\", \"INDV 99\", \"INDV 100\", \"INDV 101\", \"INDV 102\", \"INDV 103\", \"INDV 10"
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == expected_output, f\"Solution '{solution}' should be equal to '{expected_output}'.\"\n"
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\") == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\""
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    5 3 8\n    1 1\n    2 1\n    3 1\n    4 2\n    5 2\n    3 3\n    4 3\n    5 3\n    \"\"\"\n) == \"\"\"\nINDV 1\nINDV 2\nCORP 1\nINDV 4\nCORP 2\nINDV 3\nCORP 3\nINDV 5\n\"\"\"\n\nassert solution(\n    \"\"\"\n    5 3 8\n    1 1\n    2 1\n    3 1\n    4 2\n    5 2\n    3 3\n    4 3\n    5 3\n    \"\"\"\n) == \"\"\"\nINDV 1\nINDV 2\nCORP 1\nINDV 4\nCORP 2\nINDV 3\nCORP 3\nINDV 5\n\"\"\"\n\nassert solution(\n    \"\"\"\n    5 3 8\n    1 1\n    2 1\n    3 1\n    4 2\n    5 2\n    3 3\n    4 3\n    5 3\n    \"\"\"\n) == \"\"\"\nINDV 1\nINDV 2\nCORP 1\nINDV 4\nCORP 2\nINDV 3\nCORP 3\nINDV 5\n\"\"\"\n\nassert solution(\n    \"\"\"\n    5 3 8\n    1 1\n    2 1\n    3 1\n    4 2\n    5 2\n    3 3\n    4 3\n    5 3\n    \"\"\"\n) == \"\"\"\nINDV 1\nINDV 2\nCORP 1\nINDV 4\nCORP 2\nINDV 3\nCORP 3\nINDV 5\n\"\"\""
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n    5 3 8\n    1 1\n    2 1\n    3 1\n    4 2\n    5 2\n    3 3\n    4 3\n    5 3\n    ''') == '''\nINDV 1\nINDV 2\nCORP 1\nINDV 4\nCORP 2\nINDV 3\nCORP 3\nINDV 5\n'''\n\nassert solution('''\n    5 3 8\n    1 1\n    2 1\n    3 1\n    4 2\n    5 2\n    3 3\n    4 3\n    5 3\n    3 2\n    ''') == '''\nINDV 1\nINDV 2\nCORP 1\nINDV 4\nCORP 2\nINDV 3\nCORP 3\nINDV 5\n'''\n\nassert solution('''\n    5 3 8\n    1 1\n    2 1\n    3 1\n    4 2\n    5 2\n    3 3\n    4 3\n    5 3\n    2 1\n    ''') == '''\nINDV 1\nINDV 2\nCORP 1\nINDV 4\nCORP 2\nINDV 3\nCORP 3\nINDV 5\n'''"
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n    5 3 8\n    1 1\n    2 1\n    3 1\n    4 2\n    5 2\n    3 3\n    4 3\n    5 3\n    ''') == '''\nINDV 1\nINDV 2\nCORP 1\nINDV 4\nCORP 2\nINDV 3\nCORP 3\nINDV 5\n'''"
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\") == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\""
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n    4\n    10 1\n    1\n    0\n    10\n    10\n    10\n    \"\"\"), \"Phew, that was the last one! exclaimed the garden helper Tim as he threw the last tree plant to the ground. His employer, countess Esmeralda Hunt who owned the estate, has ordered him to arrange an avenue of aspen trees along both sides of the front road leading up to the house. The first trees in the avenue are supposed to be planted at the very beginning of the road, and the last trees of the avenue at the very end of the road. Tim, who was constantly being reminded of her sense of accuracy, knew that the countess would insist on the trees being placed in perfectly aligned tree pairs, one on each side of the road, and with exactly the same spacing between the pairs along the road. However, when bringing the tree plants to the estate, Tim had just dropped them arbitrarily along the left side of the road and was now facing the task of moving the trees to their correct positions to meet the countess\u2019s requirements. Being stronger in mind than in arms, and since it was time for a coffee break anyway before he started digging, he sat down to figure out which trees to move to which positions so as to minimize the total (Euclidean) distance that he had to move the trees.\n\n-----Input-----\nThe input file starts with a positive even integer $N$ between $4$ and $2000$ (inclusive), giving the total number of trees in the avenue. The next line contains two integers $L$ and $W$, where $1 \\le L \\le 10000$ is the length of the road, in meters, and $1 \\le W \\le 20$ is the width of the road, in meters. The next $N$ lines each describe where Tim had dropped of the trees. Each such line contains an integer $0 \\le p \\le L$ indicating the position of a tree plant along the left side of the road, measured in meters from the start of the road.\n\n-----Output-----\nOutput the smallest total number of meters the tree plants need to be moved. The answer should be given with an absolute or relative error of at most $10^{-6}$.\n\n-----Examples-----\nSample Input:\n4\n10 1\n1\n0\n10\n10\nSample Output:\n2.4142135624\n"
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2.4142135624\""
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2.4142135624\", \"Test failed\""
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\") == \"2.4142135624\"\n"
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(r\"\"\"\n4\n10 1\n1\n0\n10\n10\n\"\"\") == \"2.4142135624\"\n\nassert solution(r\"\"\"\n4\n10 1\n1\n0\n10\n10\n\"\"\") == \"2.4142135624\"\n\nassert solution(r\"\"\"\n3\n10 1\n1\n0\n10\n10\n\"\"\") == \"0\"\n\nassert solution(r\"\"\"\n4\n10 1\n1\n0\n10\n10\n\"\"\") == \"2.4142135624\"\n\nassert solution(r\"\"\"\n5\n10 1\n1\n0\n10\n10\n10\n10\n\"\"\") == \"0\""
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\""
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2.4142135624\", \"The given code is incorrect\""
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n4\n10 1\n1\n0\n10\n10\n\"\"\"\n) == \"2.4142135624\""
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\") == \"2.4142135624\""
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n2\\n5\\n\") == \"2.5\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n2\\n5\\n1\\n6\\n\") == \"2.5\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n2\\n5\\n1\\n6\\n2\\n8\\n\") == \"2.75\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n2\\n5\\n1\\n6\\n2\\n8\\n1\\n4\\n\") == \"2.5\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n2\\n5\\n1\\n6\\n2\\n8\\n1\\n4\\n2\\n9\\n\") == \"2.875\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n2\\n5\\n1\\n6\\n2\\n8\\n1\\n4\\n2\\n9\\n1\\n7\\n\") == \"2.875\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n2\\n5\\n1\\n6\\n2\\n8\\n1\\n4\\n2\\n9\\n1\\n7\\n1\\n3\\n\") == \"2.75\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n2\\n5\\n1\\n6\\n2\\n8\\n1\\n4\\n2\\n9\\n1\\n7\\n1\\n3\\n2\\n6\\n\") == \"2.5\"\nassert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n2\\n5\\n1\\n6\\n2\\n8\\n1\\n4\\n2\\n9\\n1\\n7\\n1\\n3\\n2\\n6\\n2\\n7\\n\") == \"2.5\""
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 15, \"Your solution is incorrect.\"\nprint(\"Correct solution!\")"
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"15\\n\""
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"15\\n\"\n"
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3') == '15'"
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3') == '15\\n'"
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n3\n1 2 5\n3 1 5\n2 1\n5 0\n1 3\n''') == '15'\n"
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\") == \"15\""
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\\n\") == \"15\\n\"\n"
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\") == \"15\"\nassert solution(\"3 1 2\\n1 3 5\\n5 2 1\\n1 2 4\\n2 4 5\\n3 5 4\\n4 5 1\\n\") == \"11\""
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3') == '15\\n'\nassert solution('4\\n1 1 2\\n1 2 1\\n2 2 2\\n3 3 3') == '30\\n'\nassert solution('5\\n1 2 3 4 5\\n1 2 4 5 6\\n2 3 5 6 7\\n3 4 6 7 8\\n4 5 7 8 9') == '120\\n'"
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 5 3 3 4\") == \"..BBC..A.C....C@DDDD\\n\", \"The solution is incorrect.\"\nassert solution(\"5 5 3 3 5\") == \"...........@DDDD\\n\", \"The solution is incorrect.\"\nassert solution
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 5 3 3 4\") == \"..B..\n..BBC\n..A.C\n....C\n@DDDD\n"
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 5 3 3 4') == '.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"Test cases failed\""
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == sample_output, \"Your solution is not correct\""
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 5 3 3 4') == '.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nfor num_rows, num_cols, start_row, start_col, num_steps in [(\\n    (5, 5), (3, 3), (3, 3), (3, 3), (4,)\\n), (\\n    (5, 5), (3, 3), (3, 2), (3, 3), (4,)\\n), (\\n    (5, 5), (3, 2), (2, 3), (3, 3), (4,)\\n), (\\n    (5, 5), (2, 3), (3, 3), (3, 3), (4,)\\n), (\\n    (5, 5), (3, 3), (3, 3), (3, 3), (5,)\\n), (\\n    (5, 5), (3, 3), (3, 3), (3, 3), (4,)\\n), (\\n    (5, 5), (3, 3), (3, 3), (3, 3), (4,)\\n), (\\n    (5, 5), (3, 3), (3, 3), (3, 3), (4,)\\n), (\\n    (5, 5), (3, 3), (3, 3), (3, 3), (4,)\\n), (\\n    (5, 5), (3, 3), (3, 3), (3, 3), (4,)\\n)]:\\n    result = solution(str(num_rows) +'' + str(num_cols) +'' + str(start_row) +'' + str(start_col) +'' + str(num_steps))\\n    if result!= \".....\\n   ..BBC\\n   ..A.C\\n   ....C\\n    @DDDD\\n    def solution(stdin: str) -> str:\\n        pass\\n\\n    print(result)\\n\""
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 5 3 3 4') == '.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str: \\n    pass'"
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '....A.C....C.....A.C....C....C....C..D@..'"
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 5 3 3 4') == '.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\n'\n\nassert solution('5 6 3 3 4') == '.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\n'\n\nassert solution('5 5 2 2 4') == '.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\n'\n\nassert solution('5 5 3 4 4') == '.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\n'\n\nassert solution('5 5 3 3 5') == '.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\n'"
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 5 3 3 4') == '.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Example usage\\nstdin = \\'5 5 3 3 4\\nprint(solution(stdin))\\n'"
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\"\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\""
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == ['001', '001', '001', '111', '200']\nassert solution(input()) == ['001', '001', '001', '111', '200']\nassert solution(input()) == ['001', '001', '001', '111', '200']\nassert solution(input()) == ['001', '001', '001', '111', '200']\nassert solution(input()) == ['001', '001', '001', '111', '200']"
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\\n\"\nassert solution(\"5 5\\n9876543210123456789\\n765432101234567890123456789\\n4321012345678901234567890123456789\\n10123456789012345678901234567890\\n12345678901234567890123456789012\") == \"9876543210123456789\\n123456789012345678901234567890\\n10123456789012345678901234567890\\n4321012345678901234567890\\n765432101234567890123456789\\n98765432101234567890\"\nassert solution(\"5 6\\n123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890\\n987654321012345678901234567890123456789012345678901234567890123456789012345678901234567890\\n87654321012345678901234567890123456789012345678901234567890123456789012345678901234567890\\n7654321012345678901234567890123456789012345678901234567890123456789012345678901234567890\\n654321012345678901234567890123456789012345678901234567890123456789012345678901234567890\\n54321012345678901234567890123456789012345678901234567890123456789012345678901234567890\\n4321012345678901234567890123456789012345678901234567890123456789012345678901234567890\") =="
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\""
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\"\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\\n2\") == \"001\\n001\\n001\\n111\\n200\"\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\\n1\") == \"001\\n001\\n001\\n111\\n200\"\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\\n1111111111111111\") == \"111\\n111\\n111\\n111\\n111\\n111\\n111\"\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\\n
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == [\"001\", \"001\", \"001\", \"111\", \"200\"]\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\\n111\\n001\") == [\"001\", \"001\", \"001\", \"111\", \"200\"]"
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"001\", \"Expected '001', got '{}'.\".format(solution(stdin))"
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 3\\n111\\n001\\n000\\n111\\n000') == '001\\n001\\n001\\n111\\n200'\nassert solution('5 3\\n111\\n001\\n000\\n111\\n000') == '001\\n001\\n001\\n111\\n200'\nassert solution('5 3\\n111\\n001\\n000\\n111\\n000') == '001\\n001\\n001\\n111\\n200'\nassert solution('5 3\\n111\\n001\\n000\\n111\\n000') == '001\\n001\\n001\\n111\\n200'\nassert solution('5 3\\n111\\n001\\n000\\n111\\n000') == '001\\n001\\n001\\n111\\n200'\nassert solution('5 3\\n111\\n001\\n000\\n111\\n000') == '001\\n001\\n001\\n111\\n200'"
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\"\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\"\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\"\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\"\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\""
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\\n\"\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\\n111\") == \"001\\n001\\n001\\n111\\n200\\n\"\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\\n111\\n001\\n001\\n001\\n111\\n200\\n\") == \"001\\n001\\n001\\n111\\n200\\n\"\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\\n111\\n001\\n001\\n001\\n111\\n200\\n\\n111\") == \"001\\n001\\n001\\n111\\n200\\n\"\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\\n111\\n001\\n001\\n001\\n111\\n200\\n\\n111\\n111\") == \"001\\n001\\n001\\n111\\n200\\n\"\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\\n111\\n001\\n001\\n001\\n111\\n200\\n\\n111\\n111\\n111\") == \"001\\n001\\n001\\n111\\n200\\n\""
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\") == \"19 20\\n17 15 14 13 7 2\"\nassert solution(\"4/3\\n19/14\\n19/2\\n10/1\\n20/7\\n19/7\\n19/15\\n20/13\\n20/17\\n19/13\\n19/17\\n19/14\\n4/3\") == \"19 20\\n17 15 14 13 7 2\"\nassert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n19/15\\n20/13\\n20/17\\n19/13\\n19/17\\n19/14\\n4/3\\n20/1\\n20/17\\n20/13\") == \"Impossible\""
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\") == \"19 20\\n17 15 14 13 7 2\""
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n\") == \"19 20\\n17 15 14 13 7 2\"\n"
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n\") == \"19 20\\n17 15 14 13 7 2\"\nassert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n10/1\\n19/13\\n\") == \"impossible\"\nassert solution(\"23/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n\") == \"impossible\"\nassert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/13\\n19/13\\n\") == \"impossible\"\nassert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/13\\n19/13\\n19/13\\n19/13\\n\") == \"19 20\"\nassert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\n19/13\\"
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n    19/13\n    10/1\n    19/14\n    4/3\n    20/7\n    19/7\n    20/13\n    19/15\n    10/7\n    20/17\n    19/2\n    19/17\n''') == '''\n    19 20\n    17 15 14 13 7 2\n'''\n\nfrom typing import List"
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n\") == \"19 20\\n17 15 14 13 7 2\""
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\") == \"19 20\\n17 15 14 13 7 2\"\nassert solution(\"5/3\\n3/2\\n5/2\\n3/4\\n4/3\\n6/4\") == \"impossible\""
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\") == \"19 20\\n17 15 14 13 7 2\"\nassert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\"
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\") == \"19 20\\n17 15 14 13 7 2\"\nassert solution(\"19/13\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/15\\n10/7\\n"
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == \"19 20\\n17 15 14 13 7 2\", sample_input"
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"possible\""
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\") == \"possible\"\nassert solution(\"1 1\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\") == \"impossible\"\nassert solution(\"3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\\n4 0 4\\n5 0 5\\n6 0 6\\n7 0 7\\n8 0 8\\n9 0 9\\n10 0 10\\n11 0 11\\n12 0 12\\n13 0 13\\n14 0 14\\n15 0 15\\n16 0 16\\n17 0 17\\n18 0 18\\n19 0 19\\n20 0 20\") == \"possible\""
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"possible\"\nassert solution() == \"possible\"\nassert solution() == \"impossible\"\nassert solution() == \"possible\"\n"
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3') == 'impossible'\nassert solution('3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 2 2') == 'possible'"
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''3 3\n0 0\n0 2\n2 0\n1 2 3\n2 2 2\n3 0 3''') == 'possible'\n\nassert solution('''1 1\n0 0\n0 0\n1 1\n0 0\n0 0\n0 1\n1 0\n1 0\n0 0\n0 0\n0 0\n1 0\n0 1\n1 0\n0 0\n1 1\n1 1\n1 0\n1 1\n1 0\n1 0\n0 1\n0 0\n0 0\n1 0\n0 0\n0 0\n0 0\n0 0\n0 0\n1 0\n1 0\n1 0\n0 1\n1 1\n0 0\n0 1\n1 1\n0 0\n0 1\n0 0\n0 0\n0 0\n1 0\n0 0\n1 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 1\n0 0\n0 0\n0 0\n1 0\n0 0\n1 0\n0 1\n0 0\n0 0\n0 0\n0 0\n1 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 1\n0 0\n0 0\n0 0\n0 0\n1 0\n0 0\n1 0\n0 1\n0 0\n0 0\n0 0\n0 0\n1 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 1\n0 0\n0 0\n0 0\n0 0\n1 0\n0 0\n1 0\n0 1\n0 0\n0 0\n0 0\n0 0\n1 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 1\n0 0\n0 0\n0 0\n0 0\n1 0\n0 0\n1 0\n0 1\n0 0\n0 0\n0 0\n0 0\n1 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 1\n0 0\n0 0\n0 0\n0 0\n1 0\n0 0\n1 0\n0 1\n0 0\n0 0\n0 0\n0 0\n1 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 1\n0 0\n0 0\n0 0\n0 0\n1 0\n0 0\n1 0\n0 1\n0 0\n0 0\n0 0\n0 0\n1 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 1\n0 0\n0 0\n0 0\n0 0\n1 0\n0 0\n1 0\n0 1\n0 0\n0 0\n0 0\n0 0\n1 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n1 0\n0 0\n1 0\n0 1\n0 0\n0 0\n0 0\n0 0\n1 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 1\n0 0\n0 0\n0 0\n0 0\n1 0\n0 0\n1 0\n0 1\n0 0\n0 0\n0 0\n0 0\n1 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 1\n0 0\n0 0\n0 0\n0 0\n1 0\n0 0\n1 0\n0 1\n0 0\n0 0\n0 0\n0 0\n1 0\n0 0\n0 0"
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3') == 'possible'\nassert solution('3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 4') == 'impossible'"
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3') == 'possible'\nassert solution('5 5\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\\n4 0 4\\n4 2 4\\n4 4 4\\n5 1 5\\n5 2 5\\n5 4 5\\n') == 'possible'"
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\") == \"possible\""
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n3 3\n0 0\n0 2\n2 0\n1 2 3\n2 2 2\n3 0 3\n''') == 'possible'"
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\\n\") == \"possible\"\nassert solution(\"4 4\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\\n\") == \"impossible\""
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n2\\n2\\n\") == \"4\\n\"\nassert solution(\"4 2\\n2\\n2\\n\") == \"4\\n\"\nassert solution(\"4 2\\n2\\n2\\n\") == \"4\\n\""
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 4, \"Your code does not pass the test.\""
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}, got: {solution(input())}\"\n"
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n2\\n2\") == \"4\\n\"\nassert solution(\"5 2\\n1 2\\n1 3\\n2 3\") == \"5\\n\""
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(str(input())) == \"4\\n\"\n"
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\n2\\n2\\n\") == \"4\"\nassert solution(\"4 2\\n3\\n1\\n\") == \"0\"\nassert solution(\"4 2\\n3\\n4\\n\") == \"3\"\nassert solution(\"4 2\\n3\\n1\\n2\\n\") == \"4\""
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for solution({input()})\"\nprint(\"Test passed!\")"
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n2\\n2\\n\") == \"4\"\n\nHere's the code to test the correctness of the solution:\n\n```python\n"
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n2\\n2\\n\") == \"4\"\nassert solution(\"4 3\\n1\\n1\\n2\\n\") == \"3\"\nassert solution(\"3 4\\n1\\n1\\n2\\n\") == \"4\"\nassert solution(\"5 4\\n1\\n1\\n2\\n\") == \"4\"\nassert solution(\"6 3\\n1\\n1\\n2\\n\") == \"3\"\nassert solution(\"7 5\\n1\\n1\\n2\\n\") == \"5\"\nassert solution(\"8 4\\n1\\n1\\n2\\n\") == \"4\"\nassert solution(\"9 4\\n1\\n1\\n2\\n\") == \"4\"\n"
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n# Your code here\""
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 1\\n1 2\\n1 3\\n\") == \"Mirko\\n\"\nassert solution(\"6\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\\n6 1\\n\") == \"Slavko\\n\""
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"Slavko\", \"Please fix the solution.\""
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    '''3\n1 1\n1 2\n1 3'''\n) == 'Mirko\\n'\n\nassert solution(\n    '''2\n1 2\n1 3'''\n) == 'Slavko\\n'\n\nassert solution(\n    '''3\n2 1\n1 1'''\n) == 'Slavko\\n'\n\nassert solution(\n    '''2\n2 1\n2 1'''\n) == 'Mirko\\n'\n\nassert solution(\n    '''2\n1 1\n1 1'''\n) == 'Mirko\\n'\n\nassert solution(\n    '''3\n2 2\n1 1'''\n) == 'Mirko\\n'\n\nassert solution(\n    '''2\n1 1\n1 2'''\n) == 'Slavko\\n'"
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"sample_input.txt\", \"r\")) == \"Mirko\\n\""
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 1\\n1 2\\n1 3\\n') == 'Mirko'\nassert solution('2 2\\n2 3\\n3 3\\n') == 'Slavko'\nassert solution('1 1\\n2 2\\n3 3\\n') == 'Mirko'\nassert solution('1 2\\n2 3\\n3 4\\n') == 'Mirko'\nassert solution('1 1\\n2 1\\n3 3\\n') == 'Slavko'\nassert solution('2 3\\n3 4\\n4 5\\n') == 'Slavko'\nassert solution('1 1\\n2 1\\n3 2\\n') == 'Mirko'\nassert solution('1 1\\n2 1\\n3 3\\n4 4\\n') == 'Slavko'\nassert solution('1 1\\n2 1\\n3 2\\n4 3\\n5 4\\n') == 'Mirko'\nassert solution('1 1\\n2 1\\n3 3\\n4 2\\n5 2\\n6 2\\n7 2\\n') == 'Slavko'\nassert solution('1 1\\n2 1\\n3 4\\n4 3\\n5 2\\n6 1\\n7 1\\n') == 'Mirko'\nassert solution('1 1\\n2 1\\n3 4\\n4 3\\n5 1\\n6 1\\n7 1\\n') == 'Slavko'\nassert solution('1 1\\n2 1\\n3 4\\n4 3\\n5 1\\n6 2\\n7 2\\n8 2\\n') == 'Mirko'"
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n1 1\\n1 2\\n1 3\\n') == 'Mirko'"
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1\\n1 2\\n1 3\\n\") == \"Mirko\"\nassert solution(\"3 2\\n3 3\\n1 4\\n\") == \"Slavko\"\nassert solution(\"1 2\\n2 3\\n3 4\\n\") == \"Mirko\"\n\nassert solution(\"3 4\\n2 1\\n1 3\\n\") == \"Slavko\""
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1\\n1 2\\n1 3\\n\") == \"Mirko\\n\"\nassert solution(\"3\\n1 1\\n1 2\\n1 3\\n\") == \"Mirko\\n\"\nassert solution(\"4\\n1 1\\n1 2\\n1 3\\n\") == \"Slavko\\n\"\nassert solution(\"1 5\\n2 5\\n3 5\\n4 5\\n\") == \"Slavko\\n\""
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 1\\n1 2\\n1 3\") == \"Mirko\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\\n1 2\\n1 3\") == \"Slavko\", \"Mirko and his friend Slavko got really bored one day. The result of their boredom is the creation of a new game! In the beginning of the game, they draw 3 points in a coordinate system. The players take turns and Mirko plays first. He draws a straight line which is parallel to one of the axes of the coordinate system and passes through one of the 3 points. In the following moves, the player draws a straight line which is parallel to one of the axes of the coordinate system and passes through one of the 3 points located on the line drawn in the previous move of the opponent. No single line must be drawn twice. The loser is the player who cannot play his move. Determine who has the winning strategy.\"\nassert solution(\"3\\n1 1\\n2 2\\n1 3\") == \"Mirko\", \"Mirko and his friend Slavko got really bored one day. The result of their boredom is the creation of a new game! In the beginning of the game, they draw 3 points in a coordinate system. The players take turns and Mirko plays first. He draws a straight line which is parallel to one of the axes of the coordinate system and passes through one of the 3 points. In the following moves, the player draws a straight line which is parallel to one of the axes of the coordinate system and passes through one of the 3 points located on the line drawn in the previous move of the opponent. No single line must be drawn twice. The loser is the player who cannot play his move. Determine who has the winning strategy.\"\nassert solution(\"5\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n3 3\\n4 4\") == \"Mirko\", \"Mirko and his friend Slavko got really bored one day. The result of their boredom is the creation of a new game! In the beginning of the game, they draw 5 points in a coordinate system. The players take turns and Mirko plays first. He draws a straight line which is parallel to one of the axes of the coordinate system and passes through one of the 5 points. In the following moves, the player draws a straight line which is parallel to one of the axes of the coordinate system and passes through one of the 5 points located on the line drawn in the previous move of the opponent. No single line must be drawn twice. The loser is the player who cannot play his move. Determine who has the winning strategy.\"\nassert solution(\"1 1\\n5 5\\n5 4\\n4 5\\n4 3\\n5 2\\n4 1\\n5 1\") == \"Slavko\", \"Mirko and his friend Slavko got really bored one day. The result of their boredom is the creation of a new game! In the beginning of the game, they draw 1 point in a coordinate system. The players take turns and Mirko plays first. He draws a straight line which is parallel to one of the axes of the coordinate system and passes through one of the 1 point. In the following moves, the player draws a straight line which is parallel to one of the axes of the coordinate system and passes through one of the 1 point located on the line drawn in the previous move of the opponent. No single line must be drawn twice. The loser is the player who cannot play his move. Determine who has the winning strategy.\""
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n6\\n34\\n38\") == \"2 4\""
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, \"The output is incorrect.\""
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"2 4\"\nassert solution(6) == \"2 4 6\"\nassert solution(34) == \"2 4 6 8\"\nassert solution(38) == \"2 4 6 8 10\""
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n6\\n34\\n38\\n\") == \"2 4\""
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"3\\n6\\n34\\n38\") == \"2 4\"\nassert solution(stdin=\"3\\n2\\n4\\n10\") == \"10 20\"\nassert solution(stdin=\"3\\n1000000000\\n1000000000\\n1000000000\") == \"1000000000\"\n"
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n6\\n34\\n38\") == \"2 4\\n\", \"Luka started driving international routes with his truck. His biggest problem is the border with Slovenia. The border is a point of entrance into the European Union, so every truck is thoroughly examined. Because of this, Luka always has to wait several hours there. To kill the time, he comes up with various logic and math games. In one of them, Luka first reads the numbers off of $N$ license plates and writes them down on a piece of paper. Then he tries to find an integer $M$ greater than $1$ such that all integers on the paper give the same remainder when divided by $M$. Luka tries to find as many such integers $M$ as possible.\""
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 6\\n34\\n38\\n') == ['2', '4']"
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"2 4\\n\""
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == \"2 4\"\nassert solution(6) == \"2 4 6 8 10\"\nassert solution(34) == \"2 4 6 8 10 12 14 16 18 20\"\nassert solution(38) == \"2 4 6 8 10 12 14 16 18 20 22 24 26 28 30\"\n\nfrom typing import List"
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n6\\n34\\n38\") == \"2 4\\n\"\n\nLuka started driving international routes with his truck. His biggest problem is the border with Slovenia. The border is a point of entrance into the European Union, so every truck is thoroughly examined. Because of this, Luka always has to wait several hours there. To kill the time, he comes up with various logic and math games.\n\nIn one of them, Luka first reads the numbers off of $N$ license plates and writes them down on a piece of paper. Then he tries to find an integer $M$ greater than $1$ such that all integers on the paper give the same remainder when divided by $M$. Luka tries to find as many such integers $M$ as possible.\n\nWrite a program that, given Luka\u2019s $N$ integers, determines all such integers $M$.\n\n-----Input-----\nThe first line contains the integer $N$ ($2 \\le N \\le 100$), the number of integers on paper. Each of the following $N$ lines contains one integer between $1$ and $1000000000$ (one billion). All these integers will be distinct. The input data will guarantee that at least one integer $M$ will always exist.\n\n-----Output-----\nOutput all integers $M$ separated by spaces, in any order.\n\n-----Examples-----\nSample Input:\n3\n6\n34\n38\nSample Output:\n2 4\n\n```python\n"
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n10000 400000 500000 900000\") == 12\nassert solution(\"5\\n8 10 2 1000000 30556926000\") == 12"
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin='4\\n10000 400000 500000 900000') == '12\\n'\nassert solution(stdin='5\\n8 10 2 1000000 30556926000') == '12\\n'"
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    4\n    10000 400000 500000 900000\n    \"\"\"\n) == \"12\"\n\nassert solution(\n    \"\"\"\n    5\n    8 10 2 1000000 30556926000\n    \"\"\"\n) == \"12\""
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Expected output: {expected_output}, Received: {solution(input())}\"\n"
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Test case {i+1} failed. Expected {expected}, got {solution(stdin)}\""
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n10000 400000 500000 900000\\n') == '12'"
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(None) == ''\nassert solution(\"1\") == '1'\nassert solution(\"2\") == '2'\nassert solution(\"3\") == '3'\nassert solution(\"4\") == '4'\nassert solution(\"5\") == '5'"
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(example_input1) == expected1\nassert solution(example_input2) == expected2"
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == output, f\"Incorrect output. Expected: {output}, Received: {solution(stdin)}\""
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n10000 400000 500000 900000') == '12', \"Test failed for input '4'\\n10000 400000 500000 900000\"\nassert solution('5\\n8 10 2 1000000 30556926000') == '12', \"Test failed for input '5'\\n8 10 2 1000000 30556926000\""
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(None) == \"YES\"\nassert solution(\"\") == \"YES\"\nassert solution(\"1\") == \"NO\"\nassert solution(\"2 4 0\") == \"NO\"\nassert solution(\"1 8 0\") == \"NO\"\nassert solution(\"8 5 0\") == \"NO\"\nassert solution(\"4 3 7 0\") == \"NO\"\nassert solution(\"5 2 6 0\") == \"NO\"\nassert solution(\"1 6 0\") == \"NO\"\nassert solution(\"7 3 0\") == \"NO\"\nassert solution(\"8 4 0\") == \"NO\"\nassert solution(\"8 4 5 0\") == \"YES\""
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 'YES'"
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\") == \"YES\""
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"YES\", \"The solution is not correct\""
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 'YES', \"Your solution is incorrect.\""
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\") == \"YES\""
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\") == \"YES\""
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\") == \"YES\"\n"
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0') == 'YES'"
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0') == 'YES'\n"
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\"\nassert solution(\"7 3\\n4 1 5 2 3 6\\n\") == \"Impossible\""
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\\n\"\nassert solution(\"1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\") == \"Impossible\\n\""
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\"\nassert solution(\"5 5\\n5 5\") == \"Impossible\"\nassert solution(\"6 2\\n2 3 4 5 6 7 8 9 10\") == \"Impossible\"\nassert solution(\"1 1\\n1 1 1 1 1 1\") == \"Impossible\"\n"
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\"\n"
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\"\nassert solution(\"6 1\\n1 2 3 4 5 6\") == \"1 2 3 4 5 6\"\nassert solution(\"4 2\\n2 1 3 4 5 6\") == \"2 1 3 4 5 6\"\nassert solution(\"3 2\\n2 1 3 4 5 6\") == \"2 1 3 4 5 6\"\nassert solution(\"3 1\\n1 2 3 4 5 6\") == \"1 2 3 4 5 6\"\nassert solution(\"3 1\\n1 2 3 4 5 6\") == \"1 2 3 4 5 6\"\nassert solution(\"3 1\\n1 2 3 4 5 6\") == \"1 2 3 4 5 6\""
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\\n\") == \"5 6 1 2 3 4\"\nassert solution(\"6 10\\n1 2 3 4 5 6 7 8 9 10\\n\") == \"1 2 3 4 5 6 7 8 9 10\"\nassert solution(\"6 1\\n3 4 5 6 1 2\\n\") == \"Impossible\"\nassert solution(\"6 2\\n3 4 1 6 1 2\\n\") == \"Impossible\""
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\\n\") == \"5 6 1 2 3 4\\n\""
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\\n\""
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 2 8 4\") == \"20512\"\nassert solution(\"1 2 3 4\") == \"IMPOSSIBLE\"\nassert solution(\"3 4 5 6\") == \"IMPOSSIBLE\"\nassert solution(\"1 1 1 1\") == \"IMPOSSIBLE\"\nassert solution(\"1 1 1 0\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == sample_output, f\"Expected {sample_output}, got {solution(sample_input)}\""
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 2 8 4\") == \"20512\"\nassert solution(\"2 5 3 7\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2 8 4\") == \"20512\"\nassert solution(\"10 1 2 3\") == \"IMPOSSIBLE\"\nassert solution(\"7 5 3 6\") == \"753\""
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(5, 2, 8, 4) == \"20512\", \"Filip's answer is incorrect.\""
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"5 2 8 4\") == \"20512\"\n"
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin='5 2 8 4') == '20512'\nassert solution(stdin='10 2 8 4') == '1010084'\nassert solution(stdin='1 2 8 4') == '12084'\nassert solution(stdin='1000000 2 8 4') == 'IMPOSSIBLE'\nassert solution(stdin='5 2 0 4') == 'IMPOSSIBLE'\nassert solution(stdin='10 2 0 4') == 'IMPOSSIBLE'\nassert solution(stdin='1 2 0 4') == 'IMPOSSIBLE'\nassert solution(stdin='1000000 2 0 4') == 'IMPOSSIBLE'"
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2 8 4\") == \"20512\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(b'5 2 8 4\\n') == b'20512'"
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"20512\"\nassert solution(1000001) == \"IMPOSSIBLE\""
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == sample_output, f\"Solution {solution.__name__}() should return {sample_output}, but returned {sample_input}\""
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\nBAC\\nABC\\n\") == 2\nassert solution(\"3 8\\nHGBDFCAE\\nADBGHFCE\\nHCFGBDAE\\n\") == 3"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r')) == 2\nassert solution(open('input_2.txt', 'r')) == 3\n\nfrom typing import List"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output() # check if the function returns the expected output\n"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 2"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"ACAB\") == 2\nassert solution(\"ABCDGH\") == 0\nassert solution(\"AEDFHR\") == 2\nassert solution(\"AEDGHR\") == 1\nassert solution(\"AEDFHRIO\") == 2"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 2 3\\nBAC\\nABC\\n') == 2\nassert solution('1 3 8\\nHGBDFCAE\\nADBGHFCE\\nHCFGBDAE\\n') == 3"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\nBAC\\nABC\") == 2\nassert solution(\"3 8\\nHGBDFCAE\\nADBGHFCE\\nHCFGBDAE\") == 3"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 2 3') == '2'\nassert solution('1 3 2') == '2'\nassert solution('2 2 2') == '2'\nassert solution('1 2 2 3') == '2'\nassert solution('2 1 1 2') == '1'\nassert solution('3 1 2 3') == '1'\nassert solution('1 1 2 3') == '1'"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(str(input())) == int(input())"
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 2') == '3'"
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2\") == \"3\" # Change this line with your answer\n"
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2\") == \"3\\n1\\n\"\nassert solution(\"3 4\") == \"6\\n2\\n\"\nassert solution(\"5 6\") == \"12\\n3\\n\"\nassert solution(\"7 8\") == \"20\\n4\\n\"\nassert solution(\"10 12\") == \"45\\n5\\n\""
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"3\\n\""
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n    1 2\n    \"\"\") == \"3\"\n\nassert solution(\"\"\"\n    3 4\n    \"\"\") == \"3\"\n\nassert solution(\"\"\"\n    5 6\n    \"\"\") == \"2\"\n\nassert solution(\"\"\"\n    4 3\n    \"\"\") == \"5\"\n\nassert solution(\"\"\"\n    1 1\n    \"\"\") == \"1\"\n\nassert solution(\"\"\"\n    2 2\n    \"\"\") == \"1\"\n\nassert solution(\"\"\"\n    1 2\n    \"\"\") == \"3\"\n\nassert solution(\"\"\"\n    3 4\n    \"\"\") == \"3\"\n\nassert solution(\"\"\"\n    5 6\n    \"\"\") == \"2\"\n\nassert solution(\"\"\"\n    4 3\n    \"\"\") == \"5\"\n\nassert solution(\"\"\"\n    1 1\n    \"\"\") == \"1\"\n\nassert solution(\"\"\"\n    2 2\n    \"\"\") == \"1\""
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"3\", \"Test Failed\""
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2\") == \"3\" # correct\n\nfrom typing import List"
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"3\\n\", \"Please fix the code to return the correct output.\""
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2\") == \"3\\n\"\nassert solution(\"3 4\") == \"5\\n\"\nassert solution(\"4 3\") == \"6\\n\"\nassert solution(\"5 6\") == \"13\\n\"\nassert solution(\"7 8\") == \"18\\n\""
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution"
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == output, f\"Solution failed. Expected: {output}, Received: {solution(stdin)}\""
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '3\\n', \"Incorrect output. Expected '3', got: {}\".format(solution(stdin))"
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == output, \"Expected output: {}, Received: {}\"\n"
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3\") == \"3\\n\"\n"
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3\") == 3\n"
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"3\\n\", \"Output: {}\\n\".format(solution(stdin))"
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 3\n"
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3\") == \"3\"\nassert solution(\"5 10\\n2 2 1\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3\") == \"3\"\nassert solution(\"5 3\\n2 0 2\\n3 0 1 3\\n3 0 1 4\\n2 1 4\\n2 2 3\") == \"3\"\nassert solution(\"5 10\\n2 2 1\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3\") == \"5\"\nassert solution(\"5 10\\n2 2 1\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3\") == \"5\""
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"Test failed for solution: {solution(stdin)}\"\n"
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3\") == 3\nassert solution(\"5 5\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\") == 10"
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r').read()) == 'YES\\nNO\\n'\nassert solution(open('input.txt', 'r').read()) == 'YES\\nNO\\n'"
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3\\n1 1\\n1 2\\n2 1\") == \"YES\"\nassert solution(\"7\\n1 1\\n1 2\\n2 1\\n2 2\\n3\\n1\\n1\\n2\") == \"YES\"\nassert solution(\"3\\n1 1\\n1 2\\n2 1\\n2 2\\n3 3\\n1 1\\n1 2\\n2 1\") == \"NO\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"YES\"\nassert solution(\"10\\n1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\") == \"YES\""
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3') == 'YES'\nassert solution('1 1\\n1 2\\n2 1\\n2 2\\n3 1\\n3 2\\n4 3') == 'NO'"
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n1\n6\n1 1\n1 3\n2 2\n2 3\n3 1\n3 2\n3\n1 1\n1 2\n2 1\n''') == 'YES'\nassert solution('''\n2\n6\n1 1\n1 3\n2 2\n2 3\n3 1\n3 2\n3\n1 1\n1 2\n2 1\n''') == 'NO'"
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n6\\n1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3\") == \"YES\"\nassert solution(\"2\\n6\\n1 1\\n1 2\\n2 1\\n2 2\\n3 1\\n3 2\\n3\") == \"NO\""
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == 'YES' # Test case 1\nassert solution(4) == 'NO' # Test case 2\nassert solution(5) == 'NO' # Test case 3\nassert solution(6) == 'NO' # Test case 4\nassert solution(7) == 'YES' # Test case 5"
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"YES\\nNO\""
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n1\\n1\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n"
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3\") == \"YES\"\nassert solution(\"6\\n1 1\\n1 2\\n2 1\\n2 2\\n3 1\\n3 2\") == \"NO\""
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3\") == \"YES\"\nassert solution(\"1 1\\n1 2\\n2 1\\n2 2\") == \"NO\""
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 3.000000000, \"Expected output: 3.000000000\"\n"
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"2\") == \"3.000000000\"\n"
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == sample_output"
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\") == 3.000000000"
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n\") == \"3.000000000\\n\", \"Test case 1 failed.\"\nassert solution(\"3\\n\") == \"6.000000000\\n\", \"Test case 2 failed.\"\nassert solution(\"4\\n\") == \"9.000000000\\n\", \"Test case 3 failed.\"\nassert solution(\"5\\n\") == \"12.000000000\\n\", \"Test case 4 failed.\"\nassert solution(\"6\\n\") == \"15.000000000\\n\", \"Test case 5 failed.\""
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"3.000000000\\n\", \"The output is incorrect.\""
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"3.000000000\""
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(None) == \"0.000000000\\n\", \"Invalid input\"\nassert solution(\"\") == \"0.000000000\\n\", \"Invalid input\"\nassert solution(\"1\") == \"0.000000000\\n\", \"Invalid input\"\nassert solution(\"1000\") == \"3.000000000\\n\", \"Invalid input\"\n\nfrom typing import List\nimport random"
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"3.000000000\\n\", \"Invalid input\"\nassert abs(solution(stdin) - 3.0) <= 1e-6, \"Invalid output\""
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2') == '3.000000000'"
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2\\n3\") == \"1\"\nassert solution(\"1 2\\n3 4 5\\n6 7 8\") == \"1\"\nassert solution(\"1 2\\n3 4 5\\n6 7 8 9\") == \"2\"\nassert solution(\"1 2\\n3 4 5\\n6 7 8 9\\n10\") == \"2\""
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Expected: {output}, Got: {solution(input())}\""
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2\\n3\") == \"1\"\n"
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 2\\n3') == '1\\n'\n"
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 2\\n3') == '1\\n'\nassert solution('10 2\\n3 4 5\\n6 7 8') == '1\\n'\nassert solution('1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1') == '1\\n'\nassert solution('1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1"
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"Output the minimum number of cuts needed to build the fence.\\n\", \"Test case failed\""
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2\\n3\") == \"1\\n\"\nassert solution(\"1 1\\n2 3\\n4 5 6\\n7 8 9 10\") == \"1\\n\"\nassert solution(\"1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\") == \"1\\n\""
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2\\n3\\n\") == \"1\"\n"
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1\""
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Test Failed. Expected Output: {output}, Got: {solution(input())}\""
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\""
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''3 4 5\n1 3 4\n0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4''') == '''3\n2\n3\n1\n'''"
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin='3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4') == '3\\n2\\n3\\n1'\nassert solution(stdin='3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4') == '3\\n2\\n3\\n1'"
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == sample_output, \"Expected output:\\n{}\\nGot output:\\n{}\".format(sample_output, solution(sample_input))"
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\""
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\"\nassert solution(\"0 1 2 3 2\\n1 3 4\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\"\nassert solution(\"0 2 1 3 2\\n1 3 4\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\"\nassert solution(\"0 2 1 3 2\\n1 3 4\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\"\nassert solution(\"0 2 1 3 2\\n1 3 4\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\"\nassert solution(\"0 2 1 3 2\\n1 3 4\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\"\nassert solution(\"0 2 1 3 2\\n1 3 4\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\"\nassert solution(\"0 2 1 3 2\\n1 3 4\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\"\nassert solution(\"0 2 1 3 2\\n1 3 4\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\"\nassert solution(\"0 2 1 3 2\\n1 3 4\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\"\nassert solution(\"0 2 1 3 2\\n1 3 4\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\"\nassert solution(\"0 2 1 3 2\\n1 3 4\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\"\nassert solution(\"0 2 1 3 2\\n1 3 4\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\"\nassert solution(\"0 2 1 3 2\\n1 3 4\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\"\nassert solution(\"0 2 1 3 2\\n1 3 4\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\"\nassert solution(\"0 2 1 3 2\\n1 3 4\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\"\nassert solution(\"0 2 1 3 2\\n1 3 4\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\"\nassert solution(\"0 2 1 3 2\\n1 3 4\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\"\nassert solution(\"0 2 1 3 2\\n1 3 4\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\"\nassert solution(\"0 2 1 3 2\\n1 3 4\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\"\nassert solution(\"0 2 1 3 2\\n1 3 4\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\"\nassert solution(\"0 2 1 3 2\\n1 3 "
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == 3\nassert solution(2) == 2\nassert solution(3) == 3\nassert solution(4) == 1\nassert solution(5) == 1\n\nsolution = lambda q: None\n\nsolution(1)\nsolution(2)\nsolution(3)\nsolution(4)\nsolution(5)"
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3, 4, 5) == \"3\\n2\\n3\\n1\\n\"\n\nassert solution(1, 3, 4) == \"3\\n2\\n3\\n1\\n\"\n\nassert solution(0, 2, 2, 3, 2) == \"3\\n2\\n3\\n1\\n\"\n\nassert solution(1, 3, 2) == \"3\\n2\\n3\\n1\\n\"\n\nassert solution(1, 2, 4) == \"3\\n2\\n3\\n1\\n\"\n\nassert solution(1, 1, 4) == \"3\\n2\\n3\\n1\\n\""
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4') == '3\\n2\\n3\\n1\\n'\nassert solution('0 1 1 3 2\\n1 3 2\\n1 2 4\\n1 1 4') == '3\\n2\\n3\\n1\\n'\nassert solution('0 1 1 3 2\\n1 3 2\\n1 2 4\\n1 1 4') == '3\\n2\\n3\\n1\\n'\nassert solution('0 1 1 3 2\\n1 3 2\\n1 2 4\\n1 1 4') == '3\\n2\\n3\\n1\\n'\nassert solution('0 1 1 3 2\\n1 3 2\\n1 2 4\\n1 1 4') == '3\\n2\\n3\\n1\\n'"
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\""
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_code) == expected_output\nassert solution(input_code) == expected_output\nassert solution(input_code) == expected_output"
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"HelloWorld.c\\nint Main() {\\nprintf(\\\"Hello %d\\\\n\\\",i);}\\n***END***\\nAdd.c\\nint Main() {\\nfor (int i=0; i<10; i++)\\n    sum += i;\\nprintf(\\\"SUM %d\\\", sum);}\\n***END***\\nint Main() {\\nprintf(\\\"Hello %d\\\\n\\\",i);printf(\\\"THE END\\\\n\\\");}\\n\") == [2, 'HelloWorld.c']\nassert solution(\"int Main() {\\nprintf(\\\"Hello %d\\\\n\\\",i);}\\n***END***\\nint Main() {\\nprintf(\\\"Hello %d\\\\n\\\",i);printf(\\\"THE END\\\\n\\\");}\\n\") == [0]\nassert solution(\"int Main() {\\nprintf(\\\"Hello %d\\\\n\\\",i);}\\n***END***\\nint Main() {\\nprintf(\\\"Hello %d\\\\n\\\",i);printf(\\\"THE END\\\\n\\\");}\\n***END***\\n\") == [0]"
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"1\\n1\\n\"\n"
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"HelloWorld.c\\nint Main() { printf(\\\"Hello %d\\\", i); }\\n***END***\\nAdd.c\\nint Main() { for (int i=0; i<10; i++) sum += i; printf(\\\"SUM %d\\\", sum); }\\n***END***\\nint Main() { printf(\\\"Hello %d\\\", i); printf(\\\"THE END\\\\n\\\"); }\\n***END***\") == \"2 HelloWorld.c\\ndef solution(stdin: str) -> str:\\npass\\n\\n2 Add.c\\ndef solution(stdin: str) -> str:\\npass\\n\\n2 int Main() { printf(\\\"Hello %d\\\", i); printf(\\\"THE END\\\\n\\\"); }\\n***END***\"\n"
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"Test_case.txt\").read()) == \"def solution(stdin: str) -> str:pass\"\n"
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_data) == output_data, \"Test Failed\"\n"
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"2 HelloWorld.c\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\n1 Add.c\\nint Main() {\\n    for (int i=0; i<10; i++)\\n        sum += i;\\n    printf(\\\"SUM %d\\\", sum);\\n}\\n\\n\\n2 Main() {\\n    printf(\\\"Hello %d\\\\n\\\",i);\\n    printf(\\\"THE END\\\\n\\\");\\n}\\n\\n\\n\\n\\n\""
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(f) == expected_output\nfor i, (file_name, code) in enumerate(data):\n    assert solution(code) == f\"Match {i+1}: {file_name}\\n\""
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin: str) -> str:\n    pass"
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2 HelloWorld.c\\n\", \"Test failed\"\nassert solution(stdin) == \"def solution(stdin: str) -> str: pass\\n\", \"Test failed\"\nassert solution(stdin) == \"2 Add.c\\n\", \"Test failed\"\nassert solution(stdin) == \"2 The End\\n\", \"Test failed\"\nassert solution(stdin) == \"0\\n\", \"Test failed\""
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n3 3\n2 2 2\n4 2 1\n4 4 1\n''') == '1\\n2\\n2\\n'\nassert solution('''\n4 3\n2 3 4\n1 3 2\n3 3 4\n''') == '1\\n2\\n'"
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n2 2 2\\n4 2 1\\n4 4 1\") == \"1\\n2\\n2\\n1\""
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3, 3) == \"1\\n2\\n2\\n2\"\nassert solution(4, 2) == \"1\\n2\\n2\"\nassert solution(4, 4) == \"1\\n2\\n2\""
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 3\\n2 2 2\\n4 2 1\\n4 4 1') == '1\\n2\\n2\\n2\\n'\nassert solution('3 3\\n2 2 1\\n4 4 2\\n4 2 1') == '1\\n2\\n2\\n2\\n'\nassert solution('3 3\\n2 2 1\\n4 4 2\\n4 4 1') == '1\\n2\\n2\\n2\\n'"
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1\\n2\\n2\\n2\"\n"
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n2 2 2\\n4 2 1\\n4 4 1\") == \"1\\n2\\n2\""
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n2 2 2\\n4 2 1\\n4 4 1\\n\") == \"1\\n2\\n2\\n\"\n"
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3, 3) == \"1\\n2\\n2\\n2\"\nassert solution(4, 2) == \"1\\n2\\n2\"\nassert solution(4, 4) == \"1\\n2\\n2\"\nassert solution(3, 5) == \"1\\n2\\n2\""
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"5\\n\"\nassert solution() == \"5\\n\"\nassert solution() == \"5\\n\"\nassert solution() == \"5\\n\"\nassert solution() == \"5\\n\"\nassert solution() == \"5\\n\"\nassert solution() == \"5\\n\""
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\") == \"5\\n\"\n"
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\") == \"5\""
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"5\\n\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution"
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\\n\") == \"5\\n\""
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '5'"
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(None) == \"You have not provided any test cases.\""
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected_output, f\"Expected {expected_output}, but got {solution(stdin)}\""
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 20\\n50 70 10\\n100 110 4\\n150 190 16') == '5'"
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 5\\n(2 5) (5 3)\\n.....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\") == \"26\"\nassert solution(\"5 5\\n(2 5) (5 3)\\n.....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\\n2\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\") == \"IMPOSSIBLE\"\nassert solution(\"5 5\\n(2 5) (5 3)\\n.....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\\n1\\n10 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 5\\n(2 5) (5 3)\\n.....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\") == \"26\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n    5 5\n    2 5\n    .....\n    .#.#.\n    .#.#.\n    ....#\n    .#.##\n    1\n    6\n    4 2\n    4 3\n    3 3\n    2 3\n    1 3\n    1 2\n    ''') == 26\nassert solution('''\n    5 5\n    2 5\n    .....\n    .#.#.\n    .#.#.\n    ....#\n    .#.##\n    1\n    6\n    4 2\n    4 3\n    3 3\n    2 3\n    1 3\n    1 2\n    ''') == 'IMPOSSIBLE'\nassert solution('''\n    5 5\n    2 5\n    .....\n    .#.#.\n    .#.#.\n    ....#\n    .#.##\n    1\n    6\n    4 2\n    4 3\n    3 3\n    2 3\n    1 3\n    1 2\n    ''') == 26\n"
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"(2 5)\\n(5 3)\\n.....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\") == 26, \"Incorrect output for the first example.\""
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 5\\n(2 5) (5 3)\\n.....\\n.#.#. \\n.#.#. \\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\") == \"26\\ndef solution(stdin: str) -> str: \\n    pass\""
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n5 5\n(2 5) (5 3)\n.....\n.#.#.\n.#.#.\n....#\n.#.##\n1\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\n\"\"\") == \"26\""
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 5\\n(2 5) (5 3)\\n.....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\") == 26\nprint(\"Correct\")"
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 5\\n(2 5) (5 3)\\n.....\\n.#.#. \\n.#.#. \\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\\n\") == 26\nassert solution(\"5 5\\n(1 1) (2 2) (3 3) (4 4) (5 5)\\n.....\\n.#.#. \\n.#.#. \\n....#\\n.#.##\\n1\\n6 (1 1) (1 2) (1 3) (1 4) (1 5)\\n\") == IMPOSSIBLE"
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 5\\n(2 5) (5 3)\\n.....\\n.#.#. \\n.#.#. \\n....# \\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\") == \"26\""
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"5 5\n(2 5) (5 3)\n.....\n.#.#.\n.#.#.\n....#\n.#.##\n1\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\"\"\"\n) == \"26\"\n\nassert solution(\n    \"\"\"5 5\n(2 5) (5 3)\n.....\n.#.#.\n.#.#.\n....#\n.#.##\n2\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\"\"\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"5 5\n(1 1) (1 1)\n.....\n.#.#.\n.#.#.\n....#\n.#.##\n1\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\"\"\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"5 5\n(1 1) (1 1)\n.....\n.#.#.\n.#.#.\n....#\n.#.##\n2\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\"\"\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"5 5\n(2 5) (5 3)\n.....\n.#.#.\n.#.#.\n....#\n.#.##\n2\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\"\"\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"5 5\n(1 1) (1 1)\n.....\n.#.#.\n.#.#.\n....#\n.#.##\n2\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\"\"\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"5 5\n(1 1) (1 1)\n.....\n.#.#.\n.#.#.\n....#\n.#.##\n2\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\"\"\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"5 5\n(1 1) (1 1)\n.....\n.#.#.\n.#.#.\n....#\n.#.##\n2\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\"\"\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"5 5\n(1 1) (1 1)\n.....\n.#.#.\n.#.#.\n....#\n.#.##\n2\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\"\"\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"5 5\n(1 1) (1 1)\n.....\n.#.#.\n.#.#.\n....#\n.#.##\n2\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\"\"\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"5 5\n(1 1) (1 1)\n.....\n.#.#.\n.#.#.\n....#\n.#.##\n2\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\"\"\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"5 5\n(1 1) (1 1)\n.....\n.#.#.\n.#.#.\n....#\n.#.##\n2\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\"\"\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"5 5\n(1 1) (1 1)\n.....\n.#.#.\n.#.#.\n....#\n.#.##\n2\n6 (4 2) (4 3) (3 3)"
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"test_input.txt\", \"r\")) == \"success\"\nassert solution(open(\"test_input2.txt\", \"r\")) == \"failure\""
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n    6\n    1 0\n    0 0\n    1 0\n    -1 1\n    0 2\n    1 1\n    -1 0\n    0 0\n    1 0\n    -1 0\n    0 0\n    1 0\n    ''') =='success'"
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1\") == \"failure\"\n"
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1\") == \"failure\""
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('6\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1\\n') == 'failure'"
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(test_input) == \"success\"\n\ntest_input = \"\"\"\n6\n-1 0\n0 0\n1 0\n-1 1\n0 2\n1 1\n\"\"\""
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=None) == \"success\""
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1') == 'failure'"
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('6\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1') == 'failure'"
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_str=\"6\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1\") == \"failure\"\nassert solution(input_str=\"10\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1\\n1 2\\n2 1\\n2 2\\n3 1\\n3 2\\n4 1\\n4 2\") == \"success\""
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 'possible'\n"
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\") == \"possible\""
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"possible\""
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\") == \"possible\"\nassert solution(\"2 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\\n6 1 1\") == \"impossible\""
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\\n\") == \"possible\"\nassert solution(\"2 2 2\\n2 2 2\\n3 3\\n5 2 2\\n5 2 2\\n\") == \"impossible\"\nassert solution(\"2 2 2\\n1 2\\n3 3\\n5 2 2\\n10 2 2\\n\") == \"possible\"\nassert solution(\"2 2 2\\n1 2\\n3 3\\n10 2 2\\n5 2 2\\n\") == \"possible\"\nassert solution(\"2 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\\n\") == \"impossible\"\nassert solution(\"2 2 2\\n1 2\\n3 3\\n10 2 2\\n10 2 2\\n\") == \"impossible\"\nassert solution(\"2 2 2\\n1 2\\n3 3\\n10 2 2\\n10 2 2\\n\") == \"impossible\""
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"possible\""
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"possible\""
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\") == \"possible\"\nassert solution(\"2 3 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\") == \"impossible\""
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"2 2 2\n1 2\n3 3\n5 2 2\n5 2 2\"\"\"\n) == \"possible\"\n\nassert solution(\n    \"\"\"2 3 3\n3 1\n1 1\n1 1\n5 3 1\"\"\"\n) == \"impossible\"\n\nassert solution(\n    \"\"\"2 3 3\n3 1\n1 1\n1 1\n5 3 1\n6 4 2\"\"\"\n) == \"possible\"\n\nassert solution(\n    \"\"\"2 3 3\n3 1\n1 1\n1 1\n5 3 1\n6 4 2\n8 6 3\"\"\"\n) == \"impossible\""
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\") == \"possible\"\nassert solution(\"2 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\") == \"impossible\""
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n1 1 2\\n1 2 1\\n-1 1 2\\n\") == \"0\\n\"\n\nassert solution(\"5 2\\n1 1 2\\n1 2 1\\n2 1 2\\n3 1 2\\n\") == \"6\\n\"\n\nassert solution(\"4 3\\n1 1 2\\n1 2 1\\n2 1 2\\n3 1 2\\n\") == \"2\\n\"\n\nassert solution(\"1 1 1\\n2 1 1\\n3 1 1\\n4 1 1\\n5 1 1\\n6 1 1\\n7 1 1\\n8 1 1\\n9 1 1\\n\") == \"12\\n\""
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\\n1 1 2\\n1 2 1\\n-1 1 2\") == \"0\\n\"\nassert solution(\"10 3\\n1 1 2\\n2 2 1\\n3 3 2\\n4 4 1\\n5 5 2\\n6 6 1\") == \"5\\n\"\nassert solution(\"4 4\\n1 1 2\\n2 2 1\\n3 3 2\\n4 4 1\") == \"1\\n\""
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == solution(sample_output), \"Test case failed.\""
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2\\n1 1 2\\n1 2 1\\n-1 1 2\") == \"0\\n\"\nassert solution(\"3 4\\n1 1 2\\n1 2 3\\n-1 3 4\") == \"4\\n\"\nassert solution(\"3 3\\n1 1 2\\n1 2 3\\n-1 3 4\") == \"2\\n\"\nassert solution(\"3 2\\n1 2 3\\n1 2 3\\n-1 3 4\") == \"2\\n\"\nassert solution(\"3 2\\n1 1 2\\n1 2 3\\n-1 3 4\") == \"2\\n\""
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 2\\n1 1 2\\n1 2 1\\n-1 1 2') == '0\\n'"
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2\\n1 1 2\\n1 2 1\\n-1 1 2\") == \"0\\n\"\n"
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\\n1 1 2\\n1 2 1\\n-1 1 2\") == \"0\\n\""
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r')) == '0\\n'"
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 2\\n1 1 2\\n1 2 1\\n-1 1 2') == '0'\nassert solution('4 3\\n1 1 1\\n1 2 2\\n1 3 3\\n2 2 1\\n2 3 3\\n3 3 3\\n4 4 1\\n') == '3'\nassert solution('4 4\\n1 1 1\\n1 2 2\\n1 3 3\\n1 4 4\\n') == '4'\nassert solution('5 1\\n1 1 1\\n2 2 2\\n3 3 3\\n4 4 4\\n') == '3'\nassert solution('5 2\\n1 1 1\\n2 2 2\\n3 3 3\\n4 4 4\\n') == '4'"
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3 2\n1 1 2\n1 2 1\n-1 1 2\n\"\"\") == \"0\"\nassert solution(\"\"\"\n3 4\n1 1 1 2\n2 1 3 1\n-1 0 1 1\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3 4\n1 1 1 2\n2 1 3 1\n1 0 1 1\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3 4\n1 1 1 2\n2 1 3 1\n2 1 3 1\n\"\"\") == \"1\""
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 2\\n353\\n\\n4 2\\n1234\\n') == '3\\n353\\n\\n4\\n1313\\n'"
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 2\\n353\\n4 2\\n1234\\n') == '\\n3\\n353\\n4\\n1313'"
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\\n353\") == \"3\\n353\"\nassert solution(\"4 2\\n1234\") == \"4\\n1313\""
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Your solution is incorrect. Expected output: '{expected_output}', Received: '{solution(input())}'\"\n"
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2\\n353\\n\") == \"3\\n353\\n\"\nassert solution(\"4 2\\n1234\\n\") == \"4\\n1313\\n\""
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"Incorrect output\"\n"
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"\"\"3\n353\n\"\"\""
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 2\\n353\\n4 2\\n1234\\n') == '3\\n353\\n4\\n1313'"
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 'Output', \"Test case not valid.\""
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\""
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\""
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\""
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\""
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\""
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\""
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('12 30 45 3 11') == 'NO'\nassert solution('12 0 1 12 1') == 'YES'\nassert solution('3 47 0 4 9') == 'YES'"
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\""
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\""
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1 2 3 1 0\\n2 4 20\") == \"3\"\nassert solution(\"1 1 2 3 1 0\\n15 27 26\") == \"2\"\nassert solution(\"1 1 2 3 1 0\\n2 2 1\") == \"0\"\n"
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 1 2 3 1 0\\n2 4 20') == '3'\nassert solution('1 1 2 3 1 0\\n15 27 26') == '2'\nassert solution('1 1 2 3 1 0\\n2 2 1') == '0'"
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 1 2 3 1 0\\n2 4 20\\n') == '3'\nassert solution('1 1 2 3 1 0\\n15 27 26\\n') == '2'\nassert solution('1 1 2 3 1 0\\n2 2 1\\n') == '0'\n"
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1 2 3 1 0\\n2 4 20\") == \"3\"\nassert solution(\"1 1 2 3 1 0\\n15 27 26\") == \"2\"\nassert solution(\"1 1 2 3 1 0\\n2 2 1\") == \"0\""
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 1 2 3 1 0\\n2 4 20\\n15 27 26\\n2 2 1\\n') == '3\\n2\\n0'\nassert solution('1 1 2 3 1 0\\n2 2 1\\n15 27 26\\n') == '0'\nassert solution('1 1 2 3 1 0\\n15 27 26\\n') == '2'"
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 2 3 1 0\\n2 4 20\") == \"3\"\nassert solution(\"1 1 2 3 1 0\\n15 27 26\") == \"2\"\nassert solution(\"1 1 2 3 1 0\\n2 2 1\") == \"0\""
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1 2 3 1 0\\n2 4 20\") == \"3\"\nassert solution(\"1 1 2 3 1 0\\n15 27 26\") == \"2\"\nassert solution(\"1 1 2 3 1 0\\n2 2 1\") == \"0\""
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 1 2 3 1 0\\n2 4 20') == '3'\nassert solution('1 1 2 3 1 0\\n15 27 26') == '2'\nassert solution('1 1 2 3 1 0\\n2 2 1') == '0'"
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1 2 3 1 0\\n2 4 20\") == \"3\"\nassert solution(\"1 1 2 3 1 0\\n15 27 26\") == \"2\"\nassert solution(\"1 1 2 3 1 0\\n2 2 1\") == \"0\""
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '3', 'Incorrect output. Expected \"3\", got \"{}\"'.format(solution())"
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 0 1\\n2 0 1\\n4 0 1\") == 4\nassert solution(\"0 0 2\\n3 0 2\\n6 0 2\") == 6\nassert solution(\"0 0 2\\n2 0 2\\n1 1 2\") == 8\n\nfrom typing import List"
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 0 1\\n2 0 1\\n4 0 1\") == 4\nassert solution(\"0 0 2\\n3 0 2\\n6 0 2\") == 6\nassert solution(\"0 0 2\\n2 0 2\\n1 1 2\") == 8"
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"4\\n\"\n"
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}, Received: {solution(stdin)}\""
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"000\\n2 0 1\\n4 0 1\") == \"4\\n\"\nassert solution(\"000\\n2 0 1\\n4 0 1\") == \"4\\n\"\nassert solution(\"000\\n2 0 1\\n4 0 1\") == \"4\\n\""
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"000\\n000\\n000\\n\") == \"4\"\nassert solution(\"000\\n000\\n000\\n\") == \"6\"\nassert solution(\"000\\n000\\n000\\n\") == \"8\""
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"4\", \"The correct output is 4, but the function returned a value of '{}' instead.\".format(solution(stdin))"
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''3\n0 0 1\n2 0 1\n4 0 1''') == '4\\n'\n\nassert solution('''3\n0 0 2\n3 0 2\n6 0 2''') == '6\\n'\n\nassert solution('''3\n0 0 2\n2 0 2\n1 1 2''') == '8\\n'"
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"Solution\""
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n0 0 1\\n2 0 1\\n4 0 1') == '4'\nassert solution('3\\n0 0 2\\n3 0 2\\n6 0 2') == '6'\nassert solution('3\\n0 0 2\\n2 0 2\\n1 1 2') == '8'"
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\") == \"YES\"\nassert solution(\"0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\") == \"NO\"\nassert solution(\"6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\") == \"YES\""
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n0 0 6 0 6 6 0 6\n1 3 3 5 5 3 3 1\n''') == 'YES'\n\nassert solution('''\n0 0 6 0 6 6 0 6\n7 3 9 5 11 3 9 1\n''') == 'NO'\n\nassert solution('''\n6 0 6 6 0 6 0 0\n7 4 4 7 7 10 10 7\n''') == 'YES'"
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\\n\") == \"YES\"\n\nassert solution(\"0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\\n\") == \"NO\"\n\nassert solution(\"6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\\n\") == \"YES\""
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\\n\") == \"YES\"\nassert solution(\"0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\\n\") == \"NO\"\nassert solution(\"6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\\n\") == \"YES\""
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\\n\") == \"YES\"\n\nassert solution(\"0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\\n\") == \"NO\"\n\nassert solution(\"6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\\n\") == \"YES\""
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"YES\""
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\\n\") == \"YES\"\nassert solution(\"0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\\n\") == \"NO\"\nassert solution(\"6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\\n\") == \"YES\""
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output\n"
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\\n') == 'YES'\nassert solution('0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\\n') == 'NO'\nassert solution('6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\\n') == 'YES'"
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\\n\") == \"YES\"\nassert solution(\"0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\\n\") == \"NO\"\nassert solution(\"6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\\n\") == \"YES\""
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) =='sjfnb', 'Test failed'\n"
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"cslnb\" or solution(input()) == \"sjfnb\""
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n0\\n\") == \"cslnb\"\nassert solution(\"2\\n1 0\\n\") == \"cslnb\"\nassert solution(\"2\\n2 2\\n\") == \"sjfnb\"\nassert solution(\"3\\n2 3 1\\n\") == \"sjfnb\"\n"
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n0\\n\") == \"cslnb\"\nassert solution(\"2\\n1 0\\n\") == \"cslnb\"\nassert solution(\"2\\n2 2\\n\") == \"sjfnb\"\nassert solution(\"3\\n2 3 1\\n\") == \"sjfnb\""
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n0\\n\") == \"cslnb\"\nassert solution(\"2\\n1 0\\n\") == \"cslnb\"\nassert solution(\"2\\n2 2\\n\") == \"sjfnb\"\nassert solution(\"3\\n2 3 1\\n\") == \"sjfnb\"\nassert solution(\"1\\n1\\n\") == \"sjfnb\"\nassert solution(\"2\\n2 2\\n\") == \"cslnb\"\nassert solution(\"3\\n2 3 1\\n\") == \"cslnb\""
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1\\n0') == 'cslnb'\nassert solution('2\\n1 0') == 'cslnb'\nassert solution('2\\n2 2') =='sjfnb'\nassert solution('3\\n2 3 1') =='sjfnb'"
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n0\\n\") == \"cslnb\"\nassert solution(\"2\\n1 0\\n\") == \"cslnb\"\nassert solution(\"2\\n2 2\\n\") == \"sjfnb\"\nassert solution(\"3\\n2 3 1\\n\") == \"sjfnb\"\n"
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n0\\n\") == \"cslnb\"\nassert solution(\"2\\n1 0\\n\") == \"cslnb\"\nassert solution(\"2\\n2 2\\n\") == \"sjfnb\"\nassert solution(\"3\\n2 3 1\\n\") == \"sjfnb\"\nassert solution(\"4\\n2 2 1\\n\") == \"sjfnb\"\nassert solution(\"5\\n2 2 1\\n\") == \"cslnb\""
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"sjfnb\""
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n0\") == \"cslnb\"\nassert solution(\"2\\n1 0\") == \"cslnb\"\nassert solution(\"2\\n2 2\") == \"sjfnb\"\nassert solution(\"3\\n2 3 1\") == \"sjfnb\""
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 5\\n1 5 3\\n\\n1 2\\n1\\n\\n1 1\\n1\\n\\n\") == \"2\\n\"\nassert solution(\"1 2\\n1\\n\\n1 1\\n1\\n\\n\") == \"1\\n\"\nassert solution(\"1 1\\n1\\n\\n\") == \"0\\n\""
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 5\\n1 5 3\\n\") == \"2\\n\"\nassert solution(\"1 2\\n1\\n\") == \"1\\n\"\nassert solution(\"1 1\\n1\\n\") == \"0\\n\""
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\") == 0\nassert solution(\"3 5\\n1 5 3\\n\") == 2\nassert solution(\"1 2\\n1\\n\") == 1\nassert solution(\"1 1\\n1\\n\") == 0"
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5\\n1 5 3\\n\") == \"2\"\nassert solution(\"1 2\\n1\\n\") == \"1\"\nassert solution(\"1 1\\n1\\n\") == \"0\"\n"
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 5\\n1 5 3\\n\") == \"2\\n\"\nassert solution(\"1 2\\n1\\n\") == \"1\\n\"\nassert solution(\"1 1\\n1\\n\") == \"0\\n\"\n"
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"Output\\n2\\n\"\nassert solution(input()) == \"Output\\n1\\n\"\nassert solution(input()) == \"Output\\n0\\n\""
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 5\\n1 5 3\\n') == '2\\n'\nassert solution('1 2\\n1\\n') == '1\\n'\nassert solution('1 1\\n1\\n') == '0\\n'"
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 5\\n1 5 3\\n\") == \"2\\n\"\nassert solution(\"1 2\\n1\\n\") == \"1\\n\"\nassert solution(\"1 1\\n1\\n\") == \"0\\n\""
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 5\\n1 5 3\\n\") == \"2\"\nassert solution(\"1 2\\n1\\n\") == \"1\"\nassert solution(\"1 1\\n1\\n\") == \"0\""
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2\", \"Output: {}\".format(solution(stdin))"
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == 1\nassert solution(2) == 2\nassert solution(3) == -1\nassert solution(4) == 1\nassert solution(5) == 0\nassert solution(6) == 1\nassert solution(7) == -1\nassert solution(8) == 0\nassert solution(9) == 1\nassert solution(10) == 0\nassert solution(11) == 1\nassert solution(12) == 0\nassert solution(13) == 1\nassert solution(14) == 0\nassert solution(15) == 1\nassert solution(16) == 0\nassert solution(17) == 1\nassert solution(18) == 0\nassert solution(19) == 1\nassert solution(20) == 0\nassert solution(21) == 1\nassert solution(22) == 0\nassert solution(23) == 1\nassert solution(24) == 0\nassert solution(25) == 1\nassert solution(26) == 0\nassert solution(27) == 1\nassert solution(28) == 0\nassert solution(29) == 1\nassert solution(30) == 0\nassert solution(31) == 1\nassert solution(32) == 0\nassert solution(33) == 1\nassert solution(34) == 0\nassert solution(35) == 1\nassert solution(36) == 0\nassert solution(37) == 1\nassert solution(38) == 0\nassert solution(39) == 1\nassert solution(40) == 0\nassert solution(41) == 1\nassert solution(42) == 0\nassert solution(43) == 1\nassert solution(44) == 0\nassert solution(45) == 1\nassert solution(46) == 0\nassert solution(47) == 1\nassert solution(48) == 0\nassert solution(49) == 1\nassert solution(50) == 0\nassert solution(51) == 1\nassert solution(52) == 0\nassert solution(53) == 1\nassert solution(54) == 0\nassert solution(55) == 1\nassert solution(56) == 0\nassert solution(57) == 1\nassert solution(58) == 0\nassert solution(59) == 1\nassert solution(60) == 0\nassert solution(61) == 1\nassert solution(62) == 0\nassert solution(63) == 1\nassert solution(64) == 0\nassert solution(65) == 1\nassert solution(66) == 0\nassert solution(67) == 1\nassert solution(68) == 0\nassert solution(69) == 1\nassert solution(70) == 0\nassert solution(71) == 1\nassert solution(72) == 0\nassert solution(73) == 1\nassert solution(74) == 0\nassert solution(75) == 1\nassert solution(76) == 0\nassert solution(77) == 1\nassert solution(78) == 0\nassert solution(79) == 1\nassert solution(80) == 0\nassert solution(81) == 1\nassert solution(82) == 0\nassert solution(83) == 1\nassert solution(84) == 0\nassert solution(85) == 1\nassert solution(86) == 0\nassert solution(87) == 1\nassert solution(88) == 0\nassert solution(89) == 1\nassert solution(90) == 0\nassert solution(91) == 1\nassert solution(92) == 0\nassert solution(93) == 1\nassert solution(94) == 0\nassert solution(95) == 1\nassert solution(96) == 0\nassert solution(97) == 1\nassert solution(98) == 0\nassert solution(99) == 1\nassert solution(100) == 0\nassert solution(101) == 1\nassert solution(102) == 0\nassert solution(103) == 1\n"
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == [1]\nassert solution(2) == [2]\nassert solution(3) == [-1, 0, 1]\nassert solution(4) == [-1, 0, 1]\nassert solution(5) == [-1, 0, 1]\nassert solution(6) == [-1, 0, 1]\nassert solution(7) == [-1, 0, 1]\nassert solution(8) == [-1, 0, 1]\nassert solution(9) == [-1, 0, 1]\nassert solution(10) == [-1, 0, 1]\nassert solution(11) == [-1, 0, 1]\nassert solution(12) == [-1, 0, 1]\nassert solution(13) == [-1, 0, 1]\nassert solution(14) == [-1, 0, 1]\nassert solution(15) == [-1, 0, 1]\nassert solution(16) == [-1, 0, 1]\nassert solution(17) == [-1, 0, 1]\nassert solution(18) == [-1, 0, 1]\nassert solution(19) == [-1, 0, 1]\nassert solution(20) == [-1, 0, 1]\nassert solution(21) == [-1, 0, 1]\nassert solution(22) == [-1, 0, 1]\nassert solution(23) == [-1, 0, 1]\nassert solution(24) == [-1, 0, 1]\nassert solution(25) == [-1, 0, 1]\nassert solution(26) == [-1, 0, 1]\nassert solution(27) == [-1, 0, 1]\nassert solution(28) == [-1, 0, 1]\nassert solution(29) == [-1, 0, 1]\nassert solution(30) == [-1, 0, 1]\nassert solution(31) == [-1, 0, 1]\nassert solution(32) == [-1, 0, 1]\nassert solution(33) == [-1, 0, 1]\nassert solution(34) == [-1, 0, 1]\nassert solution(35) == [-1, 0, 1]\nassert solution(36) == [-1, 0, 1]\nassert solution(37) == [-1, 0, 1]\nassert solution(38) == [-1, 0, 1]\nassert solution(39) == [-1, 0, 1]\nassert solution(40) == [-1, 0, 1]\nassert solution(41) == [-1, 0, 1]\nassert solution(42) == [-1, 0, 1]\nassert solution(43) == [-1, 0, 1]\nassert solution(44) == [-1, 0, 1]\nassert solution(45) == [-1, 0, 1]\nassert solution(46) == [-1, 0, 1]\nassert solution(47) == [-1, 0, 1]\nassert solution(48) == [-1, 0, 1]\nassert solution(49) == [-1, 0, 1]\nassert solution(50) == [-1, 0, 1]\nassert solution(51) == [-1, 0, 1]\nassert solution(52) == [-1, 0, 1]\nassert solution(53) == [-1, 0, 1]\nassert solution(54) == [-1, 0, 1]\nassert solution(55) == [-1, 0, 1]\nassert solution(56) == [-1, 0, 1]\nassert solution(57) == [-1, 0, 1]\nassert solution(58) == [-1, 0, 1]\nassert solution(59) == [-1, 0, 1]\nassert solution(60) == [-1, 0, 1]\nassert solution(61) == [-1, 0, 1]\nassert solution(62) == [-1,"
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1\\n0 1\\n0\\n1\\n\"\nassert solution(\"2\") == \"2\\n-1 0 1\\n1\\n0 1\\n\"\nassert solution(\"3\") == \"-1\\n0 1\\n1\\n\"\nassert solution(\"4\") == \"1\\n0 1\\n\"\nassert solution(\"5\") == \"-1\\n0 1\\n\"\nassert solution(\"6\") == \"-1\\n0 1\\n\"\nassert solution(\"7\") == \"1\\n0 1\\n\"\nassert solution(\"8\") == \"-1\\n0 1\\n\"\nassert solution(\"9\") == \"1\\n0 1\\n\"\nassert solution(\"10\") == \"-1\\n0 1\\n\"\nassert solution(\"11\") == \"1\\n0 1\\n\"\nassert solution(\"12\") == \"-1\\n0 1\\n\"\nassert solution(\"13\") == \"1\\n0 1\\n\"\nassert solution(\"14\") == \"-1\\n0 1\\n\"\nassert solution(\"15\") == \"-1\\n0 1\\n\"\nassert solution(\"16\") == \"-1\\n0 1\\n\"\nassert solution(\"17\") == \"1\\n0 1\\n\"\nassert solution(\"18\") == \"-1\\n0 1\\n\"\nassert solution(\"19\") == \"-1\\n0 1\\n\"\nassert solution(\"20\") == \"-1\\n0 1\\n\"\nassert solution(\"21\") == \"-1\\n0 1\\n\"\nassert solution(\"22\") == \"-1\\n0 1\\n\"\nassert solution(\"23\") == \"-1\\n0 1\\n\"\nassert solution(\"24\") == \"-1\\n0 1\\n\"\nassert solution(\"25\") == \"-1\\n0 1\\n\"\nassert solution(\"26\") == \"-1\\n0 1\\n\"\nassert solution(\"27\") == \"-1\\n0 1\\n\"\nassert solution(\"28\") == \"-1\\n0 1\\n\"\nassert solution(\"29\") == \"-1\\n0 1\\n\"\nassert solution(\"30\") == \"-1\\n0 1\\n\"\nassert solution(\"31\") == \"-1\\n0 1\\n\"\nassert solution(\"32\") == \"-1\\n0 1\\n\"\nassert solution(\"33\") == \"-1\\n0 1\\n\"\nassert solution(\"34\") == \"-1\\n0 1\\n\"\nassert solution(\"35\") == \"-1\\n0 1\\n\"\nassert solution(\"36\") == \"-1\\n0 1\\n\"\nassert solution(\"37\") == \"-1\\n0 1\\n\"\nassert solution(\"38\") == \"-1\\n0 1\\n\"\nassert solution(\"39\") == \"-1\\n0 1\\n\"\nassert solution(\"40\") == \"-1\\n0 1\\n\"\nassert solution(\"41\") == \"-1\\n0 1\\n\"\nassert solution(\"42\") == \"-1\\n0 1\\n\"\nassert solution(\"43\") == \"-1\\n0 1\\n\"\nassert solution(\"44\") == \"-1\\n0 1\\n\"\nassert solution(\"45\") == \"-1\\n0 1\\n\"\nassert solution(\"46\") == \"-1\\n0 1\\n\"\nassert solution(\"47\") == \"-1\\n0 1\\n\"\nassert solution(\"48\") == \"-1\\n0 1\\n\"\nassert solution(\"49\") == \"-1\\n0 1\\n\"\nassert solution(\"50\") == \"-1\\n0 1\\n\"\nassert solution(\"51\") == \"-1\\n0 1\\n\"\nassert solution(\"52\") == \"-1\\n0 1\\n\"\nassert solution(\"53\") == \"-1\\n0 1\\n\"\nassert solution(\"54\") == \"-1\\n0 1\\n\"\nassert solution(\"55\") == \"-1\\n0 1\\n\"\nassert solution(\"56\") == \"-1\\n0 1\\n\"\nassert solution(\"57\") =="
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1') == '1\\n0 1\\n0\\n1\\n'\nassert solution('2') == '2\\n-1 0 1\\n1\\n0 1\\n'"
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(2) == '1\\n0 1\\n0\\n1\\n'\nassert solution(1) == '1\\n0 1\\n0\\n1\\n'\nassert solution(3) == '-1\\n0 1\\n1\\n0'\nassert solution(4) == '-1\\n0 1\\n1\\n0'\nassert solution(5) == '-1\\n0 1\\n1\\n0'"
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == 1\nassert solution(2) == 1\nassert solution(3) == 1\nassert solution(4) == 1\nassert solution(5) == 1\nassert solution(6) == -1\nassert solution(7) == -1\nassert solution(8) == -1\nassert solution(9) == -1\nassert solution(10) == -1\nassert solution(11) == -1\nassert solution(12) == -1\nassert solution(13) == -1\nassert solution(14) == -1\nassert solution(15) == -1\nassert solution(16) == -1\nassert solution(17) == -1\nassert solution(18) == -1\nassert solution(19) == -1\nassert solution(20) == -1\nassert solution(21) == -1\nassert solution(22) == -1\nassert solution(23) == -1\nassert solution(24) == -1\nassert solution(25) == -1\nassert solution(26) == -1\nassert solution(27) == -1\nassert solution(28) == -1\nassert solution(29) == -1\nassert solution(30) == -1\nassert solution(31) == -1\nassert solution(32) == -1\nassert solution(33) == -1\nassert solution(34) == -1\nassert solution(35) == -1\nassert solution(36) == -1\nassert solution(37) == -1\nassert solution(38) == -1\nassert solution(39) == -1\nassert solution(40) == -1\nassert solution(41) == -1\nassert solution(42) == -1\nassert solution(43) == -1\nassert solution(44) == -1\nassert solution(45) == -1\nassert solution(46) == -1\nassert solution(47) == -1\nassert solution(48) == -1\nassert solution(49) == -1\nassert solution(50) == -1\nassert solution(51) == -1\nassert solution(52) == -1\nassert solution(53) == -1\nassert solution(54) == -1\nassert solution(55) == -1\nassert solution(56) == -1\nassert solution(57) == -1\nassert solution(58) == -1\nassert solution(59) == -1\nassert solution(60) == -1\nassert solution(61) == -1\nassert solution(62) == -1\nassert solution(63) == -1\nassert solution(64) == -1\nassert solution(65) == -1\nassert solution(66) == -1\nassert solution(67) == -1\nassert solution(68) == -1\nassert solution(69) == -1\nassert solution(70) == -1\nassert solution(71) == -1\nassert solution(72) == -1\nassert solution(73) == -1\nassert solution(74) == -1\nassert solution(75) == -1\nassert solution(76) == -1\nassert solution(77) == -1\nassert solution(78) == -1\nassert solution(79) == -1\nassert solution(80) == -1\nassert solution(81) == -1\nassert solution(82) == -1\nassert solution(83) == -1\nassert solution(84) == -1\nassert solution(85) == -1\nassert solution(86) == -1\nassert solution(87) == -1\nassert solution(88) == -1\nassert solution(89) == -1\nassert solution(90) == -1\nassert solution(91) == -1\nassert solution(92) == -1\nassert solution(93) == -1\nassert solution(94) == -1\nassert solution(95) == -1\nassert solution(96) == -1\nassert solution(97) == -1\nassert solution(98) == -1\nassert solution(99) == -1\nassert solution(100) == -1\nassert solution(101) == -1\nassert solution(102) == -1\nassert solution(103) == -1\n"
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1') == '1\\n0 1\\n0\\n1\\n', \"Failed\"\nassert solution('2') == '2\\n-1 0 1\\n1\\n0 1\\n', \"Failed\"\nassert solution('3') == '3\\n0 0 1\\n1\\n0 1\\n', \"Failed\"\nassert solution('4') == '4\\n0 0 0 1\\n1\\n0 1\\n', \"Failed\"\nassert solution('5') == '5\\n0 0 0 0 1\\n1\\n0 1\\n', \"Failed\"\nassert solution('6') == '6\\n0 0 0 0 0 1\\n1\\n0 1\\n', \"Failed\"\nassert solution('7') == '7\\n0 0 0 0 0 0 1\\n1\\n0 1\\n', \"Failed\"\nassert solution('8') == '8\\n0 0 0 0 0 0 0 1\\n1\\n0 1\\n', \"Failed\"\nassert solution('9') == '9\\n0 0 0 0 0 0 0 0 1\\n1\\n0 1\\n', \"Failed\"\nassert solution('10') == '10\\n0 0 0 0 0 0 0 0 0 1\\n1\\n0 1\\n', \"Failed\"\nassert solution('11') == '11\\n0 0 0 0 0 0 0 0 0 0 1\\n1\\n0 1\\n', \"Failed\"\nassert solution('12') == '12\\n0 0 0 0 0 0 0 0 0 0 0 1\\n1\\n0 1\\n', \"Failed\"\nassert solution('13') == '13\\n0 0 0 0 0 0 0 0 0 0 0 0 1\\n1\\n0 1\\n', \"Failed\"\nassert solution('14') == '14\\n0 0 0 0 0 0 0 0 0 0 0 0 0 1\\n1\\n0 1\\n', \"Failed\"\nassert solution('15') == '15\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 1\\n1\\n0 1\\n', \"Failed\"\nassert solution('16') == '16\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1\\n1\\n0 1\\n', \"Failed\"\nassert solution('17') == '17\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1\\n1\\n0 1\\n', \"Failed\"\nassert solution('18') == '18\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1\\n1\\n0 1\\n', \"Failed\"\nassert solution('19') == '19\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1\\n1\\n0 1\\n', \"Failed\"\nassert solution('20') == '20\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1\\n1\\n0 1\\n', \"Failed\"\nassert solution('21') == '21\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1\\n1\\n0 1\\n', \"Failed\"\nassert solution('22') == '22\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1\\n"
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == '1'\nassert solution(2) == '1 0 1'\nassert solution(3) == '1 0 1 0'\nassert solution(4) == '1 0 1 0 0'\nassert solution(5) == '1 0 1 0 0 0'\nassert solution(6) == '1 0 1 0 0 0 0'\nassert solution(7) == '1 0 1 0 0 0 0 0'\nassert solution(8) == '1 0 1 0 0 0 0 0 0'\nassert solution(9) == '1 0 1 0 0 0 0 0 0 0'\nassert solution(10) == '1 0 1 0 0 0 0 0 0 0 0'\nassert solution(11) == '1 0 1 0 0 0 0 0 0 0 0 0'\nassert solution(12) == '1 0 1 0 0 0 0 0 0 0 0 0 0'\nassert solution(13) == '1 0 1 0 0 0 0 0 0 0 0 0 0 0'\nassert solution(14) == '1 0 1 0 0 0 0 0 0 0 0 0 0 0 0'\nassert solution(15) == '1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0'\nassert solution(16) == '1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0'\nassert solution(17) == '1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\nassert solution(18) == '1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\nassert solution(19) == '1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\nassert solution(20) == '1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\nassert solution(21) == '1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\nassert solution(22) == '1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\nassert solution(23) == '1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\nassert solution(24) == '1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\nassert solution(25) == '1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\nassert solution(26) == '1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\nassert solution(27) == '1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\nassert solution(28) == '1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\nassert solution(29) == '1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\nassert solution(30) == '1 0 "
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(2) == 2, \"Expected 2, got {}\".format(solution(2))\nassert solution(1) == 1, \"Expected 1, got {}\".format(solution(1))\nassert solution(150) == -1, \"Expected -1, got {}\".format(solution(150))"
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\\n0 1\\n0\\n1\"\nassert solution(\"2\") == \"2\\n-1 0 1\\n1\"\nassert solution(\"-1\") == \"-1\""
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == ['1', '3', '3']"
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n3 1 5 4\n1 2 1 3\n''') == '''\n1 3 3 \n'''\n\nassert solution('''\n3 1 5 3\n1 3 1\n''') == '''\n2 3 2 \n'''\n\nassert solution('''\n3 2 5 3\n1 3 1\n''') == '''\n1 2 2\n'''"
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1 5 4\\n1 2 1 3\\n\") == \"1 3 3\\n\"\nassert solution(\"3 1 5 3\\n1 3 1\\n\") == \"2 3 2\\n\"\nassert solution(\"3 2 5 3\\n1 3 1\\n\") == \"1 2 2\\n\""
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    stdin='3 1 5 4\\n1 2 1 3\\n'\n) == '1 3 3 \\n'\nassert solution(\n    stdin='3 1 5 3\\n1 3 1\\n'\n) == '2 3 2 \\n'\nassert solution(\n    stdin='3 2 5 3\\n1 3 1\\n'\n) == '1 2 2\\n'\n"
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1 5 4\\n1 2 1 3\\n\") == \"1 3 3 \"\nassert solution(\"3 1 5 3\\n1 3 1\\n\") == \"2 3 2 \"\nassert solution(\"3 2 5 3\\n1 3 1\\n\") == \"1 2 2\""
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == [1, 3, 3, 1, 2, 2]\nprint(\"All tests passed!\")"
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"1 3 3 \\n2 3 2 \\n1 2 2\""
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 1 5 4\\n1 2 1 3\\n') == '1 3 3  \\n1 3 3  \\n2 3 2  '\nassert solution('3 1 5 3\\n1 3 1\\n') == '2 3 2  \\n1 3 1  '\nassert solution('3 2 5 3\\n1 3 1\\n') == '1 2 2 '"
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1 5 4\\n1 2 1 3\\n\") == \"1 3 3 \"\nassert solution(\"3 1 5 3\\n1 3 1\\n\") == \"2 3 2 \"\nassert solution(\"3 2 5 3\\n1 3 1\\n\") == \"1 2 2\""
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"110\\n2\\n\") == \"3\\n\"\nassert solution(\"111111011\\n2\\n\") == \"169\\n\""
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"110\\n2\\n\") == \"3\"\nassert solution(\"111111011\\n2\\n\") == \"169\""
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"110\\n2\\n\") == \"3\"\nassert solution(\"111111011\\n2\\n\") == \"169\"\n"
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"110\\n2\\n\") == \"3\\n\"\nassert solution(\"111111011\\n2\\n\") == \"169\\n\""
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output\n"
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('110\\n2\\n') == '3'\nassert solution('111111011\\n2\\n') == '169'\n"
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"110\\n2\") == \"3\"\nassert solution(stdin=\"111111011\\n2\") == \"169\""
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == output(), f\"Test failed. Expected output: {output()}, Actual output: {solution(stdin=input())}\"\n\nfor _ in range(test_cases):\n    n, k = map(int, stdin.readline().split())\n    print(solution(stdin=str(n)))"
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"110\\n2\\n\") == \"3\"\nassert solution(\"111111011\\n2\\n\") == \"169\"\nassert solution(\"1\\n1\\n\") == \"1\""
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"11.084259940083\", \"Test case 1 failed\"\nassert solution(stdin) == \"33.121375178000\", \"Test case 2 failed\"\nassert solution(stdin) == \"1.662231410366\", \"Test case 3 failed\""
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1 1 2 0 0\\n3\\n1 1\\n2 1\\n2 3\") == 11.084259940083\nassert solution(\"5 0 4 2 2 0\\n5\\n5 2\\n3 0\\n5 5\\n3 5\\n3 3\") == 33.121375178000\n\nsolution = '''\nfrom math import sqrt"
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"11.084259940083\""
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1 1 2 0 0\\n3\\n1 1\\n2 1\\n2 3\\n\") == \"11.084259940083\\n\"\nassert solution(\"5 0 4 2 2 0\\n5\\n5 2\\n3 0\\n5 5\\n3 5\\n3 3\\n\") == \"33.121375178000\\n\"\nassert solution(\"5 0 0 0 0 0\\n5\\n5 5\\n3 5\\n3 3\\n3 1\\n\") == \"10.000000000000\\n\"\n"
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == expected_output, \"The expected output is not correct.\"\n"
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1 1 2 0 0\\n3\\n1 1\\n2 1\\n2 3\") == \"11.084259940083\"\nassert solution(\"5 0 4 2 2 0\\n5\\n5 2\\n3 0\\n5 5\\n3 5\\n3 3\") == \"33.121375178000\"\n\nassert solution(\"3 1 1 2 0 0\\n3\\n1 1\\n2 1\\n2 3\") == \"11.084259940083\"\nassert solution(\"5 0 4 2 2 0\\n5\\n5 2\\n3 0\\n5 5\\n3 5\\n3 3\") == \"33.121375178000\"\n"
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1 1 2 0 0\\n3\\n1 1\\n2 1\\n2 3\") == 11.084259940083\nassert solution(\"5 0 4 2 2 0\\n5\\n5 2\\n3 0\\n5 5\\n3 5\\n3 3\") == 33.121375178000\n"
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == solution_checker"
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1 1 2 0 0\\n3\\n1 1\\n2 1\\n2 3\") == \"11.084259940083\"\nassert solution(\"5 0 4 2 2 0\\n5\\n5 2\\n3 0\\n5 5\\n3 5\\n3 3\") == \"33.121375178000\""
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input) == output, f\"Test failed for {input}\\nExpected output: {output}\\nGot: {solution(input)}\""
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('8 5') == '2'\nassert solution('8 15') == '1'\nassert solution('7 20') == '0'\nassert solution('1000000000000 1000000000001') == '500000000000'"
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 5\") == \"2\"\nassert solution(\"8 15\") == \"1\"\nassert solution(\"7 20\") == \"0\"\nassert solution(\"1000000000000 1000000000001\") == \"500000000000\""
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''8 5\n''') == '2\\n'\n\nassert solution('''8 15\n''') == '1\\n'\n\nassert solution('''7 20\n''') == '0\\n'\n\nassert solution('''1000000000000 1000000000001\n''') == '500000000000\\n'"
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 2, \"Your solution is wrong\"\nprint(\"Test passed\")"
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 5\") == \"2\\n\"\nassert solution(\"8 15\") == \"1\\n\"\nassert solution(\"7 20\") == \"0\\n\"\nassert solution(\"1000000000000 1000000000001\") == \"500000000000\\n\""
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 5\\n\") == \"2\\n\"\nassert solution(\"8 15\\n\") == \"1\\n\"\nassert solution(\"7 20\\n\") == \"0\\n\"\nassert solution(\"1000000000000 1000000000001\\n\") == \"500000000000\\n\""
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 2 # correct solution\nassert solution(\"8 5\") == \"2\"\nassert solution(\"8 15\") == \"1\"\nassert solution(\"7 20\") == \"0\"\nassert solution(\"1000000000000 1000000000001\") == \"500000000000\"\n"
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"2\"\nassert solution() == \"1\"\nassert solution() == \"0\"\nassert solution() == \"500000000000\""
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 5\") == \"2\\n\"\nassert solution(\"8 15\") == \"1\\n\"\nassert solution(\"7 20\") == \"0\\n\"\nassert solution(\"1000000000000 1000000000001\") == \"500000000000\\n\"\nassert solution(\"1000000000000\") == \"0\\n\""
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 5\") == \"2\"\nassert solution(\"8 15\") == \"1\"\nassert solution(\"7 20\") == \"0\"\nassert solution(\"1000000000000 1000000000001\") == \"500000000000\""
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"0\", \"Expected '0' but got '{}'\".format(solution())"
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 1 10\\n01000\") == \"11\"\nassert solution(\"5 10 1\\n01000\") == \"2\"\nassert solution(\"7 2 3\\n1111111\") == \"0\""
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"0\", \"Test failed\""
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 1 10\\n01000\") == 11\nassert solution(\"5 10 1\\n01000\") == 2\nassert solution(\"7 2 3\\n1111111\") == 0"
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 1 10\\n01000') == '11', 'Expected output 11, got {}'.format(solution('5 1 10\\n01000'))\nassert solution('5 10 1\\n01000') == '2', 'Expected output 2, got {}'.format(solution('5 10 1\\n01000'))\nassert solution('7 2 3\\n1111111\\n0') == '0', 'Expected output 0, got {}'.format(solution('7 2 3\\n1111111\\n0'))"
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 1 10') == '11'\nassert solution('5 10 1') == '2'\nassert solution('7 2 3') == '0'"
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"0\"\nassert solution() == \"2\"\nassert solution() == \"0\""
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 1 10\\n01000\\n\\n5 10 1\\n01000\\n\\n7 2 3\\n1111111\\n\") == \"11\"\nassert solution(\"5 10 1\\n01000\\n\\n7 2 3\\n1111111\\n\") == \"2\"\nassert solution(\"7 2 3\\n1111111\\n\\n5 10 1\\n01000\\n\") == \"0\"\n"
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 1 10\\n01000\") == \"11\"\nassert solution(\"5 10 1\\n01000\") == \"2\"\nassert solution(\"7 2 3\\n1111111\") == \"0\""
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1 1\") == \"2 1\"\nassert solution(\"5 1 2\") == \"19 5\"\nassert solution(\"10 3 4\") == \"-1\"\nassert solution(\"3 1 2\") == \"-1\"\nassert solution(\"3 1 2\") == \"-1\"\nassert solution(\"3 1 2\") == \"-1\"\nassert solution(\"3 1 2\") == \"-1\"\nassert solution(\"3 1 2\") == \"-1\"\nassert solution(\"3 1 2\") == \"-1\"\nassert solution(\"3 1 2\") == \"-1\"\nassert solution(\"3 1 2\") == \"-1\"\nassert solution(\"3 1 2\") == \"-1\"\nassert solution(\"3 1 2\") == \"-1\"\nassert solution(\"3 1 2\") == \"-1\"\nassert solution(\"3 1 2\") == \"-1\"\nassert solution(\"3 1 2\") == \"-1\"\nassert solution(\"3 1 2\") == \"-1\"\nassert solution(\"3 1 2\") == \"-1\"\nassert solution(\"3 1 2\") == \"-1\"\nassert solution(\"3 1 2\") == \"-1\"\nassert solution(\"3 1 2\") == \"-1\"\nassert solution(\"3 1 2\") == \"-1\"\nassert solution(\"3 1 2\") == \"-1\"\nassert solution(\"3 1 2\") == \"-1\"\nassert solution(\"3 1 2\") == \"-1\"\nassert solution(\"3 1 2\") == \"-1\"\nassert solution(\"3 1 2\") == \"-1\"\nassert solution(\"3 1 2\") == \"-1\"\nassert solution(\"3 1 2\") == \"-1\"\nassert solution(\"3 1 2\") == \"-1\"\nassert solution(\"3 1 2\") == \"-1\"\nassert solution(\"3 1 2\") == \"-1\"\nassert solution(\"3 1 2\") == \"-1\"\nassert solution(\"3 1 2\") == \"-1\"\nassert solution(\"3 1 2\") == \"-1\"\nassert solution(\"3 1 2\") == \"-1\"\nassert solution(\"3 1 2\") == \"-1\"\nassert solution(\"3 1 2\") == \"-1\"\nassert solution(\"3 1 2\") == \"-1\"\nassert solution(\"3 1 2\") == \"-1\"\nassert solution(\"3 1 2\") == \"-1\"\nassert solution(\"3 1 2\") == \"-1\"\nassert solution(\"3 1 2\") == \"-1\"\nassert solution(\"3 1 2\") == \"-1\"\nassert solution(\"3 1 2\") == \"-1\"\nassert solution(\"3 1 2\") == \"-1\"\nassert solution(\"3 1 2\") == \"-1\"\nassert solution(\"3 1 2\") == \"-1\"\nassert solution(\"3 1 2\") == \"-1\"\nassert solution(\"3 1 2\") == \"-1\"\nassert solution(\"3 1 2\") == \"-1\"\nassert solution(\"3 1 2\") == \"-1\"\nassert solution(\"3 1 2\") == \"-1\"\nassert solution(\"3 1 2\") == \"-1\"\nassert solution(\"3 1 2\") == \"-1\"\nassert solution(\"3 1 2\") == \"-1\"\nassert solution(\"3 1 2\") == \"-1\"\nassert solution(\"3 1 2\") == \"-1\"\nassert solution(\"3 1 2\") == \"-1\"\nassert solution(\"3 1 2\") == \"-1\"\nassert solution(\"3 1 2\") == \"-1\"\nassert solution(\"3 1 2\") == \"-1\"\nassert solution(\"3 1 2\") == \"-1\"\nassert solution(\"3 1 2\") == \"-1\"\nassert solution(\"3 1 2\") == \"-1\"\nassert solution(\"3 1 2\") == \"-1\"\nassert solution(\"3 1 2\") == \"-1\"\nassert solution(\"3 1 2\") == \"-1\"\nassert solution(\"3 1 2\") == \"-1\"\nassert solution(\"3 1 2\") == \"-1\"\nassert solution(\"3 1 2\") == \"-1\"\nassert solution(\"3 1 2\") == \"-1\"\nassert solution(\"3 1 2\") == \"-1"
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_data) == output_data, f\"Test failed for input {input_data}, expected output {output_data}\"\nfor input_data, output_data in [(\"3 1 1\", \"2 1\"), (\"5 1 2\", \"19 5\")]:\n    assert solution(input_data) == output_data, f\"Test failed for input {input_data}, expected output {output_data}\""
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3, 1, 1) == \"2 1\"\nassert solution(5, 1, 2) == \"19 5\"\nassert solution(3, 1, 3) == \"-1\"\nassert solution(4, 1, 1) == \"1 2\"\nassert solution(5, 1, 2) == \"23 7\"\nassert solution(10, 1, 1) == \"1 2 3 4 5 6 7 8 9 10\""
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    3 1 1\n    5 1 2\n    \"\"\"\n) == \"2 1\\n19 5\"\n\nassert solution(\n    \"\"\"\n    3 1 1\n    5 1 2\n    5 3 1\n    7 2 1\n    11 5 1\n    27 2 1\n    54 5 1\n    109 1 1\n    218 1 1\n    443 5 1\n    883 1 1\n    1767 1 1\n    3534 2 1\n    7069 2 1\n    14167 5 1\n    28335 5 1\n    56780 1 1\n    113629 1 1\n    227280 1 1\n    454560 1 1\n    909161 5 1\n    1818320 5 1\n    3646405 1 1\n    7292810 1 1\n    14585621 1 1\n    29171242 1 1\n    58342485 1 1\n    116724970 1 1\n    233449941 1 1\n    466899883 1 1\n    933799767 1 1\n    1867599535 1 1\n    3735199071 1 1\n    7470398149 1 1\n    14940796299 1 1\n    29881592598 1 1\n    59763185197 1 1\n    119526370394 1 1\n    239052740791 1 1\n    478105481588 1 1\n    956210963177 1 1\n    1912421926354 1 1\n    3824843852709 1 1\n    7649687705418 1 1\n    15299375410845 1 1\n    30598750821690 1 1\n    61197501643381 1 1\n    122395003286762 1 1\n    244790006573525 1 1\n    489580013147050 1 1\n    979160026294101 1 1\n    1958320052588202 1 1\n    3916640095176405 1 1\n    7833280190352810 1 1\n    15666560380705621 1 1\n    31333120761411242 1 1\n    62666241522822485 1 1\n    125332483045644970 1 1\n    250664966091289941 1 1\n    501329932182579882 1 1\n    1002659864365159765 1 1\n    2005319728730319530 1 1\n    4010639457460639061 1 1\n    8021278914921278122 1 1\n    16042557829842556245 1 1\n    32085"
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1 1\") == \"2 1\"\nassert solution(\"5 1 2\") == \"19 5\"\nassert solution(\"3 2 1\") == \"-1\""
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 1 1') == '2 1'\nassert solution('5 1 2') == '19 5'"
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 1 1') == '2 1'\nassert solution('5 1 2') == '19 5'\nprint('-1')"
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1 1\") == \"2 1\"\nassert solution(\"5 1 2\") == \"19 5\""
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('Input\\n3 1 1\\n\\nOutput\\n2 1\\nInput\\n5 1 2\\n\\nOutput\\n19 5\\n\\nNote\\nIn the first test case, we can choose (b, e) = (2, 1) because F_2 = 1, F_3 = 2, F_4 = 3.\\n\\nIn the second test case, we can choose (b, e) = (19, 5) because:\\nF_{19} = 4181 contains 1\\nF_{24} = 46368 contains 3\\nF_{29} = 514229 contains 5\\nF_{34} = 5702887 contains 7\\nF_{39} = 63245986 contains 9') == '2 1\\n19 5'\nassert solution('Input\\n10 1 1\\n\\nOutput\\n-1') == '-1'\nassert solution('Input\\n0 1 1\\n\\nOutput\\n-1') == '-1'\nassert solution('Input\\n3 1 2\\n\\nOutput\\n-1') == '-1'\nassert solution('Input\\n3 1 1\\n\\nOutput\\n-1') == '-1'\nassert solution('Input\\n1 1 1\\n\\nOutput\\n-1') == '-1'\nassert solution('Input\\n5 1 2\\n\\nOutput\\n-1') == '-1'"
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 1\\n\") == \"6\\n\"\nassert solution(\"10 2\\n\") == \"4\\n\""
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 1\") == \"6\"\nassert solution(\"10 2\") == \"4\"\nassert solution(\"2\") == \"1\"\nassert solution(\"1 2\") == \"2\""
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 1\") == \"6\\n\", \"The output is incorrect.\"\nassert solution(\"10 2\") == \"4\\n\", \"The output is incorrect.\"\n"
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('7 1') == '6'\nassert solution('10 2') == '4'\n"
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('7 1') == '6'\nassert solution('10 2') == '4'"
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 1\\n10 2\\n\") == \"6\\n4\\n\"\n\nprint(\"All tests passed\")"
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 1\") == \"6\\n\"\nassert solution(\"10 2\") == \"4\\n\""
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 1\\n\") == \"6\\n\"\nassert solution(\"10 2\\n\") == \"4\\n\""
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 1\") == \"6\\n\"\nassert solution(\"10 2\") == \"4\\n\"\n"
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 1\") == \"6\\n\"\nassert solution(\"10 2\") == \"4\\n\""
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1\\n-149.154.167.99\\n') == '1\\n0.0.0.0/0\\n'\nassert solution('4\\n-149.154.167.99\\n+149.154.167.100/30\\n+149.154.167.128/25\\n-149.154.167.120/29\\n') == '2\\n149.154.167.99\\n149.154.167.120/29\\n'\nassert solution('5\\n-127.0.0.4/31\\n+127.0.0.8\\n+127.0.0.0/30\\n-195.82.146.208/29\\n-127.0.0.6/31\\n') == '2\\n195.0.0.0/8\\n127.0.0.4/30\\n'\nassert solution('2\\n+127.0.0.1/32\\n-127.0.0.1\\n') == '-1'"
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''1\n-149.154.167.99''') == '''1\n0.0.0.0/0'''\n\nassert solution('''4\n-149.154.167.99\n+149.154.167.100/30\n+149.154.167.128/25\n-149.154.167.120/29''') == '''2\n149.154.167.99\n149.154.167.120/29'''\n\nassert solution('''5\n-127.0.0.4/31\n+127.0.0.8\n+127.0.0.0/30\n-195.82.146.208/29\n-127.0.0.6/31''') == '''2\n195.0.0.0/8\n127.0.0.4/30'''\n\nassert solution('''2\n+127.0.0.1/32\n-127.0.0.1''') == '''-1'''"
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}\\nGot: {solution(input())}\""
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('Input\\n1\\n-149.154.167.99\\n') == '1\\n0.0.0.0/0\\n'\nassert solution('Input\\n4\\n-149.154.167.99\\n+149.154.167.100/30\\n+149.154.167.128/25\\n-149.154.167.120/29\\n') == '2\\n149.154.167.99\\n149.154.167.120/29\\n'\nassert solution('Input\\n5\\n-127.0.0.4/31\\n+127.0.0.8\\n+127.0.0.0/30\\n-195.82.146.208/29\\n-127.0.0.6/31\\n') == '2\\n195.0.0.0/8\\n127.0.0.4/30\\n'\nassert solution('Input\\n2\\n+127.0.0.1/32\\n-127.0.0.1\\n') == '-1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\"
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n-149.154.167.99\\n\") == \"1\\n0.0.0.0/0\\n\"\nassert solution(\"4\\n-149.154.167.99\\n+149.154.167.100/30\\n+149.154.167.128/25\\n-149.154.167.120/29\\n\") == \"2\\n149.154.167.99\\n149.154.167.120/29\\n\"\nassert solution(\"5\\n-127.0.0.4/31\\n+127.0.0.8\\n+127.0.0.0/30\\n-195.82.146.208/29\\n-127.0.0.6/31\\n\") == \"2\\n195.0.0.0/8\\n127.0.0.4/30\\n\"\nassert solution(\"2\\n+127.0.0.1/32\\n-127.0.0.1\\n\") == \"-1\\ndef solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == [1, -149, 149, 149, 149]\nassert solution(4) == [1, -149, 149, 149, 149]\nassert solution(5) == [1, -127, 127, 127, 127]\nassert solution(6) == [1, -195, 195, 195, 195]\nassert solution(7) == [-1, -127, 127, 127, 127]\nassert solution(8) == [-1, -195, 195, 195, 195]\nassert solution(9) == [-1, -149, 149, 149, 149]\nassert solution(10) == [-1, -149, 149, 149, 149]\nassert solution(11) == [-1, -127, 127, 127, 127]\nassert solution(12) == [-1, -195, 195, 195, 195]\nassert solution(13) == [-1, -149, 149, 149, 149]\nassert solution(14) == [-1, -149, 149, 149, 149]\nassert solution(15) == [-1, -127, 127, 127, 127]\nassert solution(16) == [-1, -195, 195, 195, 195]\nassert solution(17) == [-1, -149, 149, 149, 149]\nassert solution(18) == [-1, -149, 149, 149, 149]\nassert solution(19) == [-1, -127, 127, 127, 127]\nassert solution(20) == [-1, -195, 195, 195, 195]\nassert solution(21) == [-1, -149, 149, 149, 149]\nassert solution(22) == [-1, -149, 149, 149, 149]\nassert solution(23) == [-1, -127, 127, 127, 127]\nassert solution(24) == [-1, -195, 195, 195, 195]\nassert solution(25) == [-1, -149, 149, 149, 149]\nassert solution(26) == [-1, -149, 149, 149, 149]\nassert solution(27) == [-1, -127, 127, 127, 127]\nassert solution(28) == [-1, -195, 195, 195, 195]\nassert solution(29) == [-1, -149, 149, 149, 149]\nassert solution(30) == [-1, -149, 149, 149, 149]\nassert solution(31) == [-1, -127, 127, 127, 127]\nassert solution(32) == [-1, -195, 195, 195, 195]\nassert solution(33) == [-1, -149, 149, 149, 149]\nassert solution(34) == [-1, -149, 149, 149, 149]\nassert solution(35) == [-1, -127, 127, 127, 127]\nassert solution(36) == [-1,"
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"For input {input()}, expected output {expected}, but got {solution(input())}.\""
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 2"
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n-149.154.167.99\\n\\n4\\n-149.154.167.99\\n+149.154.167.100/30\\n+149.154.167.128/25\\n-149.154.167.120/29\\n\\n5\\n-127.0.0.4/31\\n+127.0.0.8\\n+127.0.0.0/30\\n-195.82.146.208/29\\n-127.0.0.6/31\\n\\n2\\n+127.0.0.1/32\\n-127.0.0.1\") == \"1\\n0.0.0.0/0\\n\\n2\\n149.154.167.99\\n149.154.167.120/29\\n\\n2\\n195.0.0.0/8\\n127.0.0.4/30\\n\"\nassert solution(\"4\\n-149.154.167.99\\n+149.154.167.100/30\\n+149.154.167.128/25\\n-149.154.167.120/29\\n\\n5\\n-127.0.0.4/31\\n+127.0.0.8\\n+127.0.0.0/30\\n-195.82.146.208/29\\n-127.0.0.6/31\\n\\n2\\n+127.0.0.1/32\\n-127.0.0.1\") == \"2\\n149.154.167.99\\n149.154.167.120/29\\n\\n2\\n195.0.0.0/8\\n127.0.0.4/30\\n\"\nassert solution(\"5\\n-127.0.0.4/31\\n+127.0.0.8\\n+127.0.0.0/30\\n-195.82.146.208/29\\n-127.0.0.6/31\\n\\n2\\n+127.0.0.1/32\\n-127.0.0.1\") == \"-1\"\n"
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n-149.154.167.99\\n2\\n149.154.167.99\\n3\\n-149.154.167.99\\n4\\n-149.154.167.99\\n5\\n-127.0.0.4/31\\n+127.0.0.8\\n+127.0.0.0/30\\n-195.82.146.208/29\\n-127.0.0.6/31\\n6\\n+127.0.0.1/32\\n-127.0.0.1\\n\") == \"1\\n0.0.0.0/0\\n2\\n149.154.167.99\\n149.154.167.120/29\\n3\\n195.0.0.0/8\\n127.0.0.4/30\\n-1\"\nassert solution(\"4\\n-149.154.167.99\\n+149.154.167.100/30\\n+149.154.167.128/25\\n-149.154.167.120/29\\n7\\n-127.0.0.4/31\\n+127.0.0.8\\n+127.0.0.0/30\\n-195.82.146.208/29\\n-127.0.0.6/31\\n8\\n-127.0.0.1/32\\n-127.0.0.1\\n\") == \"2\\n149.154.167.99\\n149.154.167.120/29\\n\"\nassert solution(\"5\\n-127.0.0.4/31\\n+127.0.0.8\\n+127.0.0.0/30\\n-195.82.146.208/29\\n-127.0.0.6/31\\n9\\n-127.0.0.1/32\\n-127.0.0.1\\n10\\n+127.0.0.1/32\\n-127.0.0.1\\n11\\n-127.0.0.1/32\\n-127.0.0.1\\n\") == \"-1\"\n"
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 1"
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"11\\n00000000008\\n\") == 1\nassert solution(\"22\\n0011223344556677889988\\n\") == 2\nassert solution(\"11\\n31415926535\\n\") == 0\n\nassert solution(\"11\\n00000000008\\n\") == 1\nassert solution(\"22\\n0011223344556677889988\\n\") == 2\nassert solution(\"11\\n31415926535\\n\") == 0\n\nassert solution(\"11\\n00000000008\\n\") == 1\nassert solution(\"22\\n0011223344556677889988\\n\") == 2\nassert solution(\"11\\n31415926535\\n\") == 0"
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"11\") == \"1\"\nassert solution(\"22\") == \"2\"\nassert solution(\"11\") == \"0\"\n"
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"11\\n00000000008\") == \"1\"\nassert solution(\"22\\n0011223344556677889988\") == \"2\"\nassert solution(\"11\\n31415926535\") == \"0\""
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"11\\n00000000008\") == \"1\"\nassert solution(\"22\\n0011223344556677889988\") == \"2\"\nassert solution(\"11\\n31415926535\") == \"0\"\n"
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"11\") == \"1\"\nassert solution(\"22\") == \"2\"\nassert solution(\"11\") == \"0\""
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"11\\n00000000008\\n\") == \"1\"\nassert solution(stdin=\"22\\n0011223344556677889988\\n\") == \"2\"\nassert solution(stdin=\"11\\n31415926535\\n\") == \"0\""
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"11\\n00000000008\") == \"1\\n\"\nassert solution(\"22\\n0011223344556677889988\") == \"2\\n\"\nassert solution(\"11\\n31415926535\") == \"0\\n\""
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('11\\n00000000008') == '1'\nassert solution('22\\n0011223344556677889988') == '2'\nassert solution('11\\n31415926535') == '0'"
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"11\\n00000000008\") == \"1\"\nassert solution(\"22\\n0011223344556677889988\") == \"2\"\nassert solution(\"11\\n31415926535\") == \"0\""
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('Input\\n3 5\\n2 2 2 3 2\\n0 0 0 1 0\\n1 1 1 2 1\\n\\nOutput\\n4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\\n\\nInput\\n3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\\nOutput\\n-1\\n\\nInput\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\nOutput\\n3\\nrow 1\\nrow 2\\nrow 3\\n') == '4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\\n\\n3\\nrow 1\\nrow 2\\nrow 3\\n'"
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Input\\n3 5\\n2 2 2 3 2\\n0 0 0 1 0\\n1 1 1 2 1\\n\") == \"4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\\n\"\nassert solution(\"Input\\n3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\") == \"-1\\n\"\nassert solution(\"Input\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"3\\nrow 1\\nrow 2\\nrow 3\\n\""
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 5\\n2 2 2 3 2\\n0 0 0 1 0\\n1 1 1 2 1\\n\\n3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\n3 3\\n1 2 3') == '4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\\n\\n3\\n1\\n1\\n1\\n1'\nassert solution('3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\n3 3\\n1 2 3') == '-1'\nassert solution('3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\n3 3\\n1 2 3') == '3\\nrow 1\\nrow 2\\nrow 3'"
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5\\n2 2 2 3 2\\n0 0 0 1 0\\n1 1 1 2 1\\n\\n3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\n3 3\\n2 2 2\\n3 3 3\\n\") == \"4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\\n\\n3\\nrow 1\\nrow 2\\nrow 3\\n\"\nassert solution(\"3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\n3 3\\n2 2 2\\n3 3 3\\n\") == \"-1\\n\"\nassert solution(\"3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\n3 3\\n2 2 2\\n3 3 3\\n\") == \"3\\nrow 1\\nrow 2\\nrow 3\\n\""
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 5\\n2 2 2 3 2\\n0 0 0 1 0\\n1 1 1 2 1\\n\") == \"4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\"\nassert solution(\"3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\") == \"-1\"\nassert solution(\"3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"3\\nrow 1\\nrow 2\\nrow 3\"\n"
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input) == output, f\"Test failed. Input: {input}, Output: {output}\" for input, output in [\n    (3, 5, [\n        \"2 2 2 3 2\",\n        \"0 0 0 1 0\",\n        \"1 1 1 2 1\"\n    ]),\n    (3, 3, [\n        \"0 0 0\",\n        \"0 1 0\",\n        \"0 0 0\"\n    ]),\n    (3, 3, [\n        \"1 1 1\",\n        \"1 1 1\",\n        \"1 1 1\"\n    ]),\n]"
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 5\\n2 2 2 3 2\\n0 0 0 1 0\\n1 1 1 2 1\\n\") == \"4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\\n\"\n\nassert solution(\"3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\") == \"-1\\n\"\n\nassert solution(\"3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"3\\nrow 1\\nrow 2\\nrow 3\\n\""
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 5\\n2 2 2 3 2\\n0 0 0 1 0\\n1 1 1 2 1\\n\\n3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\") == \"4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\\n\""
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\\n\\n-1\\n\\n3\\nrow 1\\nrow 2\\nrow 3\\n\"\nassert solution(input()) == \"-1\\n\\n3\\nrow 1\\nrow 2\\nrow 3\\n\"\nassert solution(input()) == \"3\\nrow 1\\nrow 2\\nrow 3\\n\""
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 5\\n2 2 2 3 2\\n0 0 0 1 0\\n1 1 1 2 1\\n\") == \"4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\\n\"\nassert solution(\"3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\") == \"-1\\n\"\nassert solution(\"3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"3\\nrow 1\\nrow 2\\nrow 3\\n\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\"\n\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected"
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"8 6 4 5\\n\"\n) == \"YES\\n\"\n\nassert solution(\n    \"8 6 4 6\\n\"\n) == \"NO\\n\"\n\nassert solution(\n    \"10 3 11 4\\n\"\n) == \"NO\\n\"\n\nassert solution(\n    \"4 2 1 4\\n\"\n) == \"YES\\n\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\\n\"\nassert solution(\"8 6 4 6\") == \"NO\\n\"\nassert solution(\"10 3 11 4\") == \"NO\\n\"\nassert solution(\"4 2 1 4\") == \"YES\\n\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\""
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n1 3\\n1 4\\n\") == \"6\"\nassert solution(\"7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n\") == \"12\"\nassert solution(\"2 2\\n1 2\\n2 1\\n\") == \"-1\""
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n4 2\n1 3\n1 4\n\"\"\") == 6\n\nassert solution(\"\"\"\n7 8\n1 6\n2 6\n3 5\n3 6\n4 3\n5 1\n5 2\n5 3\n\"\"\") == 12\n\nassert solution(\"\"\"\n2 2\n1 2\n2 1\n\"\"\") == -1"
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\n1 3\\n1 4\\n\") == \"6\\n\"\nassert solution(\"7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n\") == \"12\\n\"\nassert solution(\"2 2\\n1 2\\n2 1\\n\") == \"-1\\n\"\n"
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n1 3\\n1 4\\n\") == \"6\"\nassert solution(\"7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n\") == \"12\"\nassert solution(\"2 2\\n1 2\\n2 1\\n\") == \"-1\"\n\nprint(\"All test cases pass!\")"
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_data) == output_data, f\"Test failed for input {input_data} and output {output_data}\""
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 2\\n1 3\\n1 4') == 6\nassert solution('7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3') == 12\nassert solution('2 2\\n1 2\\n2 1') == -1"
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('Input\\n4 2\\n1 3\\n1 4\\n\\nOutput\\n6\\n\\nInput\\n7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n\\nOutput\\n12\\n\\nInput\\n2 2\\n1 2\\n2 1\\n\\nOutput\\n-1\\n\\nNote\\nA possible road is:\\n(1, 1)  \u2192  (1, 2)  \u2192  (2, 2)  \u2192  (2, 3)  \u2192  (3, 3)  \u2192  (3, 4)  \u2192  (4, 4)\\n') == 6\nassert solution('Input\\n7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n\\nOutput\\n12\\n\\nInput\\n2 2\\n1 2\\n2 1\\n\\nOutput\\n-1\\n\\nNote\\nA possible road is:\\n(1, 1)  \u2192  (1, 2)  \u2192  (2, 2)  \u2192  (2, 3)  \u2192  (3, 3)  \u2192  (3, 4)  \u2192  (4, 4)\\n') == 12\nassert solution('Input\\n2 2\\n1 2\\n2 1\\n\\nOutput\\n-1\\n\\nNote\\nA possible road is:\\n(1, 1)  \u2192  (1, 2)  \u2192  (2, 2)  \u2192  (2, 3)  \u2192  (3, 3)  \u2192  (3, 4)  \u2192  (4, 4)\\n') == -1"
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(4, 2) == 6\nassert solution(7, 8) == 12\nassert solution(2, 2) == -1"
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n4 2\n1 3\n1 4\n''') == '6'\n\nassert solution('''\n7 8\n1 6\n2 6\n3 5\n3 6\n4 3\n5 1\n5 2\n5 3\n''') == '12'\n\nassert solution('''\n2 2\n1 2\n2 1\n''') == '-1'"
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n1 3\\n1 4\\n\") == \"6\"\nassert solution(\"7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n\") == \"12\"\nassert solution(\"2 2\\n1 2\\n2 1\\n\") == \"-1\"\nassert solution(\"1 1\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n\") == \"0\""
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\""
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n1 0 1\\n1 1 0\\n1 0 0\\n1 0 0\\n1 0 0\") == \"NO\"\nassert solution(\"3 2\\n1 0\\n1 1\\n0 1\") == \"YES\""
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n1 0 1\\n1 1 0\\n1 0 0\\n1 0 0\\n1 0 0\") == \"NO\"\nassert solution(\"3 2\\n1 0\\n1 1\\n0 1\") == \"YES\""
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output\n\nfrom typing import List"
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Input\\n5 3\\n1 0 1\\n1 1 0\\n1 0 0\\n1 0 0\\n1 0 0\\n\\nOutput\\nNO\") == \"NO\"\nassert solution(\"Input\\n3 2\\n1 0\\n1 1\\n0 1\\n\\nOutput\\nYES\") == \"YES\""
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n1 0 1\\n1 1 0\\n1 0 0\\n1 0 0\\n1 0 0\") == \"NO\"\n\nassert solution(\"3 2\\n1 0\\n1 1\\n0 1\") == \"YES\"\n\nassert solution(\"5 3\\n1 1 0\\n1 1 0\\n1 1 0\\n1 1 0\\n1 1 0\") == \"YES\""
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n1 0 1\\n1 1 0\\n1 0 0\\n1 0 0\\n1 0 0\") == \"NO\"\n\nassert solution(\"3 2\\n1 0\\n1 1\\n0 1\") == \"YES\""
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\""
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n1 0 1\\n1 1 0\\n1 0 0\\n1 0 0\\n1 0 0\") == \"NO\"\n\nassert solution(\"3 2\\n1 0\\n1 1\\n0 1\\n0 0\") == \"YES\"\n\nassert solution(\"5 3\\n1 1 1\\n1 0 0\\n1 0 0\\n0 1 0\\n1 0 1\\n1 0 0\\n1 0 0\") == \"YES\""
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n1 0 1\\n1 1 0\\n1 0 0\\n1 0 0\\n1 0 0\") == \"NO\"\nassert solution(\"3 2\\n1 0\\n1 1\\n0 1\") == \"YES\""
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5\\n2 3 5 12\\n\") == \"Yes\"\nassert solution(\"2 7\\n2 3\\n\") == \"No\""
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5\\n2 3 5 12\") == \"Yes\\n\"\nassert solution(\"2 7\\n2 3\") == \"No\\n\""
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"Yes\" # replace me"
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 5\\n2 3 5 12\\n') == 'Yes\\n'\n\nassert solution('2 7\\n2 3\\n') == 'No\\n'"
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Yes\", \"Please provide the correct input.\""
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5\\n2 3 5 12\") == \"Yes\"\nassert solution(\"2 7\\n2 3\") == \"No\""
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 5\\n2 3 5 12\\n') == 'Yes\\n'\nassert solution('2 7\\n2 3\\n') == 'No\\n'"
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5\\n2 3 5 12\\n\") == \"Yes\"\nassert solution(\"2 7\\n2 3\\n\") == \"No\""
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"Yes\"\nassert solution() == \"No\""
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5\\n2 3 5 12\\n\") == \"Yes\\n\"\nassert solution(\"2 7\\n2 3\\n\") == \"No\\n\""
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4 1\") == 6\nassert solution(\"6 4 2\") == 8\nassert solution(\"2 3 4\") == -1"
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 4 1') == '6'\nassert solution('6 4 2') == '8'\nassert solution('2 3 4') == '-1'"
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 6"
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3, 4, 1) == 6\nassert solution(6, 4, 2) == 8\nassert solution(2, 3, 4) == -1\n"
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4 1\") == 6\nassert solution(\"6 4 2\") == 8\nassert solution(\"2 3 4\") == -1\nassert solution(\"4 2 2\") == -1\nassert solution(\"3 2 2\") == -1\nassert solution(\"1 2 3\") == -1\nassert solution(\"2 2 2\") == -1\nassert solution(\"1 3 3\") == -1\nassert solution(\"1 1 2\") == -1\nassert solution(\"1 1 1\") == -1\nassert solution(\"1 1 0\") == -1\nassert solution(\"0 0 0\") == -1"
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4 1\") == \"6\"\nassert solution(\"6 4 2\") == \"8\"\nassert solution(\"2 3 4\") == \"-1\""
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4 1\") == \"6\"\nassert solution(\"6 4 2\") == \"8\"\nassert solution(\"2 3 4\") == \"-1\""
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4 1\") == 6\nassert solution(\"6 4 2\") == 8\nassert solution(\"2 3 4\") == -1"
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 4 1') == '6'\nassert solution('6 4 2') == '8'\nassert solution('2 3 4') == '-1'"
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4 1\") == \"6\"\nassert solution(\"6 4 2\") == \"8\"\nassert solution(\"2 3 4\") == \"-1\"\n\nprint(solution(\"3 4 1\"))"
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 2 2 4 3\") == \"2\"\nassert solution(\"3\\n4 1 1\") == \"2\"\nassert solution(\"4\\n0 3 0 4\") == \"0\""
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 2 2 4 3\\n\") == 2\nassert solution(\"3\\n4 1 1\\n\") == 2\nassert solution(\"4\\n0 3 0 4\\n\") == 0"
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 2 2 4 3\\n\") == \"2\"\nassert solution(\"3\\n4 1 1\\n\") == \"2\"\nassert solution(\"4\\n0 3 0 4\\n\") == \"0\""
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\""
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 2 2 4 3\") == \"2\"\nassert solution(\"3\\n4 1 1\") == \"2\"\nassert solution(\"4\\n0 3 0 4\") == \"0\""
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 2 2 4 3\\n\") == \"2\\n\"\nassert solution(\"3\\n4 1 1\\n\") == \"2\\n\"\nassert solution(\"4\\n0 3 0 4\\n\") == \"0\\n\""
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 2 2 4 3\\n3\\n4 1 1\\n4\\n0 3 0 4\") == \"2\"\nassert solution(\"3\\n4 1 1\\n4\\n0 3 0 4\") == \"2\"\nassert solution(\"4\\n0 3 0 4\") == \"0\""
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 2\nassert solution(4) == 2\nassert solution(5) == 0\nassert solution(10) == -1"
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_string=input(), output_string=output()) == expected, f\"Test failed: {solution(input_string=input(), output_string=output())}!= {expected}\""
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n1 2 2 4 3\\n\\n3\\n4 1 1\\n\\n4\\n0 3 0 4') == '2'\nassert solution('3\\n4 1 1\\n\\n4\\n0 3 0 4') == '2'\nassert solution('4\\n0 3 0 4\\n') == '0'"
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8\\n10000011\") == \"5\"\nassert solution(\"2\\n01\") == \"2\""
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8\\n10000011\\n\") == \"5\"\nassert solution(\"2\\n01\\n\") == \"2\""
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8\\n10000011\") == \"5\"\nassert solution(\"2\\n01\") == \"2\""
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n10000011\") == \"5\"\nassert solution(\"2\\n01\") == \"2\""
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8\\n10000011\") == \"5\"\nassert solution(\"2\\n01\") == \"2\""
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8\\n10000011\") == 5\nassert solution(\"2\\n01\") == 2"
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8\\n10000011\") == \"5\"\nassert solution(\"2\\n01\") == \"2\""
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('8\\n10000011') == '5', \"Output should be 5\"\nassert solution('2\\n01') == '2', \"Output should be 2\"\n"
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('8') == 5\nassert solution('2') == 2\n"
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8\\n10000011\") == \"5\"\nassert solution(\"2\\n01\") == \"2\""
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n2 3 1 4\\n\") == \"3\"\nassert solution(\"4\\n4 4 4 4\\n\") == \"-1\"\nassert solution(\"4\\n2 1 4 3\\n\") == \"1\""
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Incorrect output: {solution(input())} instead of {expected_output}\"\n"
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n2 3 1 4\") == \"3\"\nassert solution(\"4\\n4 4 4 4\") == \"-1\"\nassert solution(\"4\\n2 1 4 3\") == \"1\""
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n2 3 1 4\\n4\\n4 4 4 4\\n4\\n2 1 4 3\\n\") == \"3\\n\"\nassert solution(\"4\\n4 4 4 4\\n4\\n2 1 4 3\\n\") == \"-1\\n\"\nassert solution(\"4\\n2 1 4 3\\n\") == \"1\\n\""
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n4\n2 3 1 4\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n4\n4 4 4 4\n\"\"\") == \"-1\"\n\nassert solution(\"\"\"\n4\n2 1 4 3\n\"\"\") == \"1\""
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n4\n2 3 1 4\n\"\"\") == \"3\"\nassert solution(\n\"\"\"\n4\n4 4 4 4\n\"\"\") == \"-1\"\nassert solution(\n\"\"\"\n4\n2 1 4 3\n\"\"\") == \"1\""
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n2 3 1 4\\n') == '3\\n'\nassert solution('4\\n4 4 4 4\\n') == '-1\\n'\nassert solution('4\\n2 1 4 3\\n') == '1\\n'"
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n4\n2 3 1 4\n''') == '3'\nassert solution('''\n4\n4 4 4 4\n''') == '-1'\nassert solution('''\n4\n2 1 4 3\n''') == '1'\n"
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n2 3 1 4\\n4\\n4 4 4 4\\n4\\n2 1 4 3\\n\") == \"3\\n\"\nassert solution(\"4\\n4 4 4 4\\n4\\n2 1 4 3\\n\") == \"-1\\n\"\nassert solution(\"4\\n2 1 4 3\\n\") == \"1\\n\""
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution"
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 3 2 0\\n\") == \"2\\n\"\nassert solution(\"7\\n1 3 3 2 1 2 3\\n\") == \"0\\n\"\nassert solution(\"2\\n2 2\\n\") == \"1\\n\"\nassert solution(\"5\\n1 3 3 2 1 2 3\\n\") == \"1\\n\"\nassert solution(\"4\\n1 3 0 1\\n\") == \"1\\n\"\nassert solution(\"7\\n1 3 1 2 1 2 3\\n\") == \"0\\n\""
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n1 3 2 0') == '2'\nassert solution('7\\n1 3 3 2 1 2 3') == '0'\nassert solution('2\\n2 2') == '1'"
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n1 3 2 0\\n') == '2'\nassert solution('7\\n1 3 3 2 1 2 3\\n') == '0'\nassert solution('2\\n2 2\\n') == '1'"
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_string) == expected_output, f\"Test failed for input '{stdin}', expected output '{expected_output}', but got '{solution(input_string)}'.\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 3 2 0\") == \"2\"\nassert solution(\"7\\n1 3 3 2 1 2 3\") == \"0\"\nassert solution(\"2\\n2 2\") == \"1\"\n"
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 3 2 0\\n\\n7\\n1 3 3 2 1 2 3\\n\\n2\\n2 2\\n\\n1\") == \"2\"\nassert solution(\"7\\n1 3 3 2 1 2 3\\n\\n2\\n2 2\\n\\n1\") == \"0\"\nassert solution(\"2\\n2 2\\n\\n1\") == \"1\""
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n1 3 2 0\\n') == '2'\nassert solution('7\\n1 3 3 2 1 2 3\\n') == '0'\nassert solution('2\\n2 2\\n') == '1'"
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 3 2 0\\n\") == \"2\\n\"\nassert solution(\"7\\n1 3 3 2 1 2 3\\n\") == \"0\\n\"\nassert solution(\"2\\n2 2\\n\") == \"1\\n\""
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 3 2 0\\n\") == \"2\"\nassert solution(\"7\\n1 3 3 2 1 2 3\\n\") == \"0\"\nassert solution(\"2\\n2 2\\n\") == \"1\""
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Input\\n4\\n1 3 2 0\\n\\nOutput\\n2\\n\\nInput\\n7\\n1 3 3 2 1 2 3\\n\\nOutput\\n0\\n\\nInput\\n2\\n2 2\\n\\nOutput\\n1\\n\") == \"2\\n\"\nassert solution(\"Input\\n7\\n1 3 3 2 1 2 3\\n\\nOutput\\n0\\n\\nInput\\n2\\n2 2\\n\\nOutput\\n1\\n\") == \"0\\n\"\nassert solution(\"Input\\n2\\n2 2\\n\\nOutput\\n1\\n\") == \"1\\n\""
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(7) == '210'\nassert solution(6) == '100'\nassert solution(5) == '50'\nassert solution(9) == '504'\n\nfrom typing import List"
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"504\"\nassert solution() == \"210\""
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"9\") == \"504\", \"Expected: '504', got: '{}'\".format(solution(\"9\"))\nassert solution(\"7\") == \"210\", \"Expected: '210', got: '{}'\".format(solution(\"7\"))"
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"9\") == \"504\"\nassert solution(\"7\") == \"210\""
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(9) == \"504\", \"Test failed for input 9\"\nassert solution(7) == \"210\", \"Test failed for input 7\""
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == 210\nassert solution(5) == 504\nassert solution(7) == 210\n"
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"9\") == \"504\"\nassert solution(\"7\") == \"210\""
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(9) == '504', \"Test case 9 failed.\"\nassert solution(7) == '210', \"Test case 7 failed.\"\n\nfrom typing import List"
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(9) == \"504\"\nassert solution(7) == \"210\""
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"504\"\nassert solution(input()) == \"210\"\n\nn = int(input())"
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '1 1\\n', 'The output should be \"1 1\"\\n'"
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 0 1 1\\n1 1 2 2\\n3 0 4 1\\n\") == \"1 1\"\nassert solution(\"0 0 1 1\\n0 1 1 2\\n1 0 2 1\\n\") == \"1 1\"\nassert solution(\"0 0 5 5\\n0 0 4 4\\n1 1 4 4\\n1 1 4 4\\n\") == \"1 1\"\nassert solution(\"0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2\\n\") == \"3 4\""
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n0 0 1 1\\n1 1 2 2\\n3 0 4 1\") == \"1 1\\n\"\nassert solution(\"3\\n0 0 1 1\\n0 1 1 2\\n1 0 2 1\") == \"1 1\\n\"\nassert solution(\"4\\n0 0 5 5\\n0 0 4 4\\n1 1 4 4\\n1 1 4 4\") == \"1 1\\n\"\nassert solution(\"5\\n0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2\") == \"3 4\\n\""
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 0 1 1\\n1 1 2 2\\n3 0 4 1\\n\") == \"1 1\\n\"\nassert solution(\"0 0 1 1\\n0 1 1 2\\n1 0 2 1\\n\") == \"1 1\\n\"\nassert solution(\"0 0 5 5\\n0 0 4 4\\n1 1 4 4\\n1 1 4 4\\n\") == \"1 1\\n\"\nassert solution(\"0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2\\n\") == \"3 4\\n\""
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n0 0 1 1\\n1 1 2 2\\n3 0 4 1\\n\\n4\\n0 0 5 5\\n0 0 4 4\\n1 1 4 4\\n1 1 4 4\\n\\n5\\n0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2\\n\") == \"1 1\\n1 1\\n3 4\\n3 4\\n3 4\\n\""
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"1 1\"\nassert solution(4) == \"1 1\"\nassert solution(5) == \"3 4\"\nassert solution(6) == \"1 1\"\n"
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n\", \"Test case 1 failed\"\n\nassert solution() == \"3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n\", \"Test case 2 failed\"\n\nassert solution() == \"1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n\", \"Test case 3 failed\"\n\nassert solution() == \"3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n\", \"Test case 4 failed\"\n\nassert solution() == \"3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n\", \"Test case 5 failed\""
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n0 0 1 1\\n1 1 2 2\\n3 0 4 1\\n') == '1 1\\n'\nassert solution('3\\n0 0 1 1\\n0 1 1 2\\n1 0 2 1\\n') == '1 1\\n'\nassert solution('4\\n0 0 5 5\\n0 0 4 4\\n1 1 4 4\\n1 1 4 4\\n') == '1 1\\n'\nassert solution('5\\n0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2\\n') == '3 4\\n'"
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 0 1 1\\n1 1 2 2\\n3 0 4 1\\n\") == \"1 1\"\nassert solution(\"0 0 1 1\\n0 1 1 2\\n1 0 2 1\\n\") == \"1 1\"\nassert solution(\"0 0 5 5\\n0 0 4 4\\n1 1 4 4\\n1 1 4 4\\n\") == \"1 1\"\nassert solution(\"0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2\\n\") == \"3 4\""
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 0 1 1\\n1 1 2 2\\n3 0 4 1\\n\") == \"1 1\"\nassert solution(\"0 0 1 1\\n0 1 1 2\\n1 0 2 1\\n\") == \"1 1\"\nassert solution(\"0 0 5 5\\n0 0 4 4\\n1 1 4 4\\n1 1 4 4\\n\") == \"1 1\"\nassert solution(\"0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2\\n\") == \"3 4\""
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"4\\n18 55 16 17\\n\") == \"YES\"\nassert solution(stdin=\"6\\n40 41 43 44 44 44\\n\") == \"NO\"\nassert solution(stdin=\"8\\n5 972 3 4 1 4 970 971\\n\") == \"YES\""
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Expected {output}, but got {solution(input())}\""
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n18 55 16 17\\n\") == \"YES\"\nassert solution(\"6\\n40 41 43 44 44 44\\n\") == \"NO\"\nassert solution(\"8\\n5 972 3 4 1 4 970 971\\n\") == \"YES\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n18 55 16 17\\n\") == \"YES\\n\"\nassert solution(\"6\\n40 41 43 44 44 44\\n\") == \"NO\\n\"\nassert solution(\"8\\n5 972 3 4 1 4 970 971\\n\") == \"YES\\n\""
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('Input\\n4\\n18 55 16 17\\n') == 'YES\\n'\nassert solution('Input\\n6\\n40 41 43 44 44 44\\n') == 'NO\\n'\nassert solution('Input\\n8\\n5 972 3 4 1 4 970 971\\n') == 'YES\\n'"
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"YES\\n\"\nassert solution() == \"NO\\n\"\nassert solution() == \"YES\\n\""
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n18 55 16 17\") == \"YES\"\nassert solution(\"6\\n40 41 43 44 44 44\") == \"NO\"\nassert solution(\"8\\n5 972 3 4 1 4 970 971\") == \"YES\"\n"
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n18 55 16 17\") == \"YES\"\nassert solution(\"6\\n40 41 43 44 44 44\") == \"NO\"\nassert solution(\"8\\n5 972 3 4 1 4 970 971\") == \"YES\""
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n18 55 16 17\") == \"YES\"\nassert solution(\"6\\n40 41 43 44 44 44\") == \"NO\"\nassert solution(\"8\\n5 972 3 4 1 4 970 971\") == \"YES\""
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n18 55 16 17\") == \"YES\"\nassert solution(\"6\\n40 41 43 44 44 44\") == \"NO\"\nassert solution(\"8\\n5 972 3 4 1 4 970 971\") == \"YES\""
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 9\\n1 2 3\\n1 2 3 7 8 9 11 12 13\\n') == '9'\nassert solution('5 5\\n1 2 3 4 5\\n1 2 3 4 5\\n') == '10'\nassert solution('') == ''"
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"3 9\n1 2 3\n1 2 3 7 8 9 11 12 13\n\"\"\") == \"9\"\nassert solution(\"\"\"5 5\n1 2 3 4 5\n1 2 3 4 5\n\"\"\") == \"10\""
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 9\\n1 2 3\\n1 2 3 7 8 9 11 12 13\\n\\n5 5\\n1 2 3 4 5\\n1 2 3 4 5\") == \"9\"\nassert solution(\"5 5\\n1 2 3 4 5\\n1 2 3 4 5\") == \"10\""
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    3 9\n    1 2 3\n    1 2 3 7 8 9 11 12 13\n    \"\"\"\n) == \"9\"\n\nassert solution(\n    \"\"\"\n    5 5\n    1 2 3 4 5\n    1 2 3 4 5\n    \"\"\"\n) == \"10\"\n\nassert solution(\n    \"\"\"\n    3 8\n    1 2 3\n    1 2 3 7 8\n    \"\"\"\n) == \"7\"\n\nassert solution(\n    \"\"\"\n    2 1\n    1 2\n    1 2 3 4 5\n    \"\"\"\n) == \"3\"\n\nassert solution(\n    \"\"\"\n    2 1\n    1 2\n    1 2 3 4 5 6\n    \"\"\"\n) == \"1\""
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 9\\n1 2 3\\n1 2 3 7 8 9 11 12 13\\n') == '9'\nassert solution('5 5\\n1 2 3 4 5\\n1 2 3 4 5\\n') == '10'"
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3 9\n1 2 3\n1 2 3 7 8 9 11 12 13\n\n\"\"\") == \"9\"\n\nassert solution(\"\"\"\n5 5\n1 2 3 4 5\n1 2 3 4 5\n\"\"\") == \"10\"\n\nassert solution(\"\"\"\n3 9\n1 2 3\n1 2 3 7 8 9 11 12 13\n\"\"\") == \"9\"\n\nassert solution(\"\"\"\n5 5\n1 2 3 4 5\n1 2 3 4 5\n\"\"\") == \"10\""
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 9\\n1 2 3\\n1 2 3 7 8 9 11 12 13\\n\\n5 5\\n1 2 3 4 5\\n1 2 3 4 5\") == \"9\\n\"\nassert solution(\"5 5\\n1 2 3 4 5\\n1 2 3 4 5\") == \"10\\n\"\n\nprint(\"All tests passed\")"
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 9\\n1 2 3\\n1 2 3 7 8 9 11 12 13\") == \"9\\n\"\nassert solution(\"5 5\\n1 2 3 4 5\\n1 2 3 4 5\") == \"10\\n\"\n"
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n3 9\n1 2 3\n1 2 3 7 8 9 11 12 13\n''') == '9\\n'\n\nassert solution('''\n5 5\n1 2 3 4 5\n1 2 3 4 5\n''') == '10\\n'"
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 9\\n1 2 3\\n1 2 3 7 8 9 11 12 13\") == \"9\\n\"\nassert solution(\"5 5\\n1 2 3 4 5\\n1 2 3 4 5\") == \"10\\n\""
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == \"Vasya\"\nassert solution(2) == \"Petya\"\nassert solution(8) == \"Petya\"\n"
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n\") == \"Vasya\"\nassert solution(\"2\\n\") == \"Petya\"\nassert solution(\"8\\n\") == \"Petya\""
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == \"Vasya\"\nassert solution(2) == \"Petya\"\nassert solution(8) == \"Petya\""
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"Vasya\"\nassert solution(\"2\") == \"Petya\"\nassert solution(\"8\") == \"Petya\""
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"Vasya\"\nassert solution(\"2\") == \"Petya\"\nassert solution(\"8\") == \"Petya\""
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == \"Vasya\"\nassert solution(2) == \"Petya\"\nassert solution(8) == \"Petya\""
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == \"Vasya\"\nassert solution(2) == \"Petya\"\nassert solution(8) == \"Petya\""
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"Vasya\"\nassert solution(\"2\") == \"Petya\"\nassert solution(\"8\") == \"Petya\""
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == \"Vasya\"\nassert solution(2) == \"Petya\"\nassert solution(8) == \"Petya\""
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == \"Vasya\"\nassert solution(2) == \"Petya\"\nassert solution(8) == \"Petya\""
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '0', 'Expected 0 but got {}'.format(solution(input()))"
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '0\\n'\nassert solution(stdin) == '2\\n'\nassert solution(stdin) == '1\\n'"
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 2 3\\n1 2\\n2 2\\n2 1') == '0\\n'\nassert solution('1 5 3\\n1 3\\n1 1\\n1 5') == '2\\n'\nassert solution('4 3 6\\n1 2\\n1 3\\n2 2\\n2 3\\n3 1\\n3 3') == '1\\n'"
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"0\", \"Expected output: 0\"\nassert solution() == \"2\", \"Expected output: 2\"\nassert solution() == \"1\", \"Expected output: 1\""
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Test {t+1} failed\\nInput: {stdin}\\nOutput: {output()}\\n\\n\\n\"\nfor t in range(1, 5):\n    stdin, output = get_input_output(f\"Input {t}\")\n    assert solution(stdin) == output, f\"Test {t+1} failed\\nInput: {stdin}\\nOutput: {output}\\n\\n\\n\"\n"
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2 3\\n1 2\\n2 2\\n2 1\") == \"0\"\nassert solution(\"1 5 3\\n1 3\\n1 1\\n1 5\") == \"2\"\nassert solution(\"4 3 6\\n1 2\\n1 3\\n2 2\\n2 3\\n3 1\\n3 3\") == \"1\""
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2 3\\n1 2\\n2 2\\n2 1\\n\") == \"0\"\nassert solution(\"1 5 3\\n1 3\\n1 1\\n1 5\\n\") == \"2\"\nassert solution(\"4 3 6\\n1 2\\n1 3\\n2 2\\n2 3\\n3 1\\n3 3\\n\") == \"1\""
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('Input\\n2 2 3\\n1 2\\n2 2\\n2 1\\n') == '0\\n'\nassert solution('Input\\n1 5 3\\n1 3\\n1 1\\n1 5\\n') == '2\\n'\nassert solution('Input\\n4 3 6\\n1 2\\n1 3\\n2 2\\n2 3\\n3 1\\n3 3\\n') == '1\\n'"
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n2\\n2\\n') == '0\\n'\nassert solution('1\\n5\\n3\\n1\\n') == '2\\n'\nassert solution('4\\n3\\n6\\n1\\n2\\n1\\n3\\n') == '1\\n'"
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\"\nassert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\"\nassert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\"\nassert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\""
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\"\nassert solution(\"4\\nA\\nB\\yB\\xA\") == \"1\"\nassert solution(\"4\\nA\\nB\\yB\\xB\") == \"0\"\nassert solution(\"4\\nA\\nB\\yB\\xC\") == \"0\"\nassert solution(\"4\\nA\\nB\\yB\\xD\") == \"0\""
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"4\\nA\\nB\\nB\\nA\\n\") == \"2\"\nassert solution(stdin=\"5\\nA\\nB\\nB\\nA\\nA\\n\") == \"5\""
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\"\nassert solution(\"5\\nA\\nB\\yB\\nB\") == \"2\"\nassert solution(\"6\\nA\\nB\\yB\\yB\\yB\") == \"5\"\nassert solution(\"7\\nA\\nB\\yB\\yB\\yB\\yB\\yB\") == \"10\"\nassert solution(\"8\\nA\\nB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\yB\\"
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\"\nassert solution(\"3\\nA\\nB\\nA\\nA\") == \"2\"\nassert solution(\"5\\nA\\nB\\nB\\nA\\nB\\nA\\nB\") == \"2\""
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '2'"
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\nA\\nB\\nB\\nA') == '2'\nassert solution('4\\nA\\nB\\yB\\yB') == '1'\nassert solution('4\\nA\\nB\\yB\\yB') == '1'\nassert solution('4\\nA\\nA\\yB\\yB') == '2'\nassert solution('4\\xA\\xB\\xC\\xD\\xE') == '1'"
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\"\nassert solution(\"4\\nA\\nB\\nA\\nB\") == \"1\""
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\" # Test Case 1\nassert solution(\"4\\nA\\nB\\nB\\nA\\n\") == \"2\" # Test Case 2\nassert solution(\"5\\nA\\nB\\nA\\nB\\nB\") == \"1\" # Test Case 3\nassert solution(\"5\\nA\\nB\\nA\\nB\\nB\\n\") == \"1\" # Test Case 4\nassert solution(\"6\\nA\\nB\\nA\\nB\\nC\\nD\\nE\\nF\\n\") == \"4\" # Test Case 5\nassert solution(\"6\\nA\\nB\\nA\\nC\\nD\\nE\\nF\\n\") == \"4\" # Test Case 6\nassert solution(\"7\\nA\\nB\\nA\\nB\\nC\\nD\\nE\\nF\\nG\\n\") == \"6\" # Test Case 7\nassert solution(\"7\\nA\\nB\\nA\\nB\\nC\\nD\\nE\\nF\\nG\\nH\\n\") == \"6\" # Test Case 8\nassert solution(\"8\\nA\\nB\\nA\\nB\\nC\\nD\\nE\\nF\\nG\\nH\\nI\\n\") == \"8\" # Test Case 9\nassert solution(\"9\\nA\\nB\\nA\\nB\\nC\\nD\\nE\\nF\\nG\\nH\\nI\\nJ\\n\") == \"12\" # Test Case 10"
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Input\\n3\\n2 3 4\") == 2\nassert solution(\"Input\\n5\\n2 3 4 6 7\") == 3"
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2 3 4\\n5\\n2 3 4 6 7\\n\") == \"2\"\nassert solution(\"5\\n2 3 4 6 7\\n\") == \"3\""
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected\nprint(\"ok\")\n"
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''3\n2 3 4\n''') == '2\\n'\n\nassert solution('''5\n2 3 4 6 7\n''') == '3\\n'"
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 2\nassert solution(5) == 3"
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n2 3 4\\n\") == \"2\\n\"\nassert solution(\"5\\n2 3 4 6 7\\n\") == \"3\\n\""
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('test_case1.txt').read()) == '2\\n'\nassert solution(open('test_case2.txt').read()) == '3\\n'\nassert solution(open('test_case3.txt').read()) == '3\\n'\n\nfrom functools import lru_cache"
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n2 3 4\\n\") == \"2\\n\"\nassert solution(\"5\\n2 3 4 6 7\\n\") == \"3\\n\"\n\nfrom math import gcd"
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('Input\\n3\\n2 3 4\\n\\nInput\\n5\\n2 3 4 6 7\\n\\nOutput\\n2\\n\\nInput\\n3\\n2 3 4\\n\\nOutput\\n3\\n\\n') == ['2', '3']"
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\nABAAC\\n\") == \"11\"\nprint(\"All test cases pass.\")"
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\nABAAC\") == \"11\\n\"\n"
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\nA\\nAC\\nACAC\\n\") == \"11\""
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\nABAAC\") == \"11\"\n"
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\nABAAC\") == \"11\\n\", \"Test failed\""
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\nABAAC') == '11\\n'"
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\nA\\n\") == \"11\\n\""
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\nA\\nB\\nC\\n\") == \"11\\n\""
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\nABAAC\") == \"11\\n\""
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\nABAAC\\n\") == \"11\\n\"\n"
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_sample1) == expected1, f\"Test 1 failed: expected {expected1}, got {solution(input_sample1)}\"\nassert solution(input_sample2) == expected2, f\"Test 2 failed: expected {expected2}, got {solution(input_sample2)}\"\nassert solution(input_sample3) == expected3, f\"Test 3 failed: expected {expected3}, got {solution(input_sample3)}\"\nassert solution(input_sample4) == expected4, f\"Test 4 failed: expected {expected4}, got {solution(input_sample4)}\"\nassert solution(input_sample5) == expected5, f\"Test 5 failed: expected {expected5}, got {solution(input_sample5)}\""
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '3\\n', 'Expected output: 3\\nActual output: {}'.format(solution(stdin))"
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Test case {i+1} failed: {solution(input())}!= {expected}\""
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 3, \"Expected output: 3, but got: \" + str(solution())"
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n4 2\\n1 1\\n0 1\\n2 3\\n\") == \"3\"\nassert solution(\"1023\\n1 2\\n1 0\\n1 2\\n1 1\\n\") == \"-1\""
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\""
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"3\", \"The solution should return 3\""
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n4 2\\n1 1\\n0 1\\n2 3\\n\") == \"3\\n\"\nassert solution(\"1023\\n1 2\\n1 0\\n1 2\\n1 1\\n\") == \"-1\\n\""
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n4 2\\n1 1\\n0 1\\n2 3\\n\") == \"3\\n\"\nassert solution(\"1023\\n1 2\\n1 0\\n1 2\\n1 1\\n\") == \"-1\\n\"\n"
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n4 2\\n1 1\\n0 1\\n2 3\\n\") == 3\nassert solution(\"1023\\n1 2\\n1 0\\n1 2\\n1 1\\n\") == -1\n"
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n4 5\\n\") == \"2\\n\"\n"
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n4 5\") == \"2\\n\"\nassert solution(\"3\\n1 2\") == \"3\\n\"\nassert solution(\"4\\n2 3\") == \"4\\n\"\nassert solution(\"5\\n1 2 3\") == \"5\\n\"\nassert solution(\"6\\n1 2 3 4 5\") == \"5\\n\"\nassert solution(\"7\\n1 2 3 4 5 6 7\") == \"5\\n\"\nassert solution(\"8\\n1 2 3 4 5 6 7 8\") == \"5\\n\"\nassert solution(\"9\\n1 2 3 4 5 6 7 8 9\") == \"5\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"5\\n\""
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '2'\nprint('All tests passed!')"
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"2\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n4 5\") == \"2\\n\", \"The minimum number of operations required to achieve the objective is 2.\""
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2\", \"Expected output: 2\\nActual output: \" + solution(input())\n"
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"2\\n\", \"Incorrect Output\""
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n4 5\") == \"2\\n\"\nassert solution(\"4\\n5 4 3 2 1\") == \"3\\n\"\nassert solution(\"3\\n2 1 4 5 3\") == \"3\\n\"\nassert solution(\"5\\n5 5 5 5 5\") == \"5\\n\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"5\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"10\\n\"\n"
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2\\n4 5') == '2\\n', \"Expected: '2\\n', Actual: '{}'\".format(solution('2\\n4 5'))"
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n4 5\") == \"2\""
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2 2 1\") == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"NO\""
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 2 2 1') == 'YES\\n0 1 0 1 2 3 2'\nassert solution('1 2 3 4') == 'NO'\nassert solution('2 2 2 3') == 'NO'"
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output\nassert solution(input()) == output"
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2 2 1\") == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"NO\""
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2 2 1\") == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"NO\"\n"
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2 2 1\") == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"NO\""
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"NO\"\n"
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2 2 1\") == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"NO\""
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2 2 1\") == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"NO\""
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2 2 1\") == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"NO\"\n\nsolution(stdin)"
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 4\\n1 3 2 4\\n1 3 4 2\") == \"YES\"\nassert solution(\"4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\") == \"NO\"\nassert solution(\"3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\") == \"YES\""
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 4\\n1 3 2 4\\n1 3 4 2\") == \"YES\"\nassert solution(\"4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\") == \"NO\"\nassert solution(\"3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\") == \"YES\""
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 'YES'\nassert solution() == 'YES'\nassert solution() == 'YES'\nassert solution() == 'YES'\nassert solution() == 'YES'\nassert solution() == 'YES'\nassert solution() == 'NO'\nassert solution() == 'NO'\nassert solution() == 'NO'\nassert solution() == 'NO'\nassert solution() == 'NO'\nassert solution() == 'NO'\nassert solution() == 'NO'"
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 4\\n1 3 2 4\\n1 3 4 2\") == \"YES\"\nassert solution(\"4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\") == \"NO\"\nassert solution(\"3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\") == \"YES\""
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 4\\n1 3 2 4\\n1 3 4 2\") == \"YES\"\nassert solution(\"4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\") == \"NO\"\nassert solution(\"3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\") == \"YES\""
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"YES\" or solution(input()) == \"NO\", \"Invalid input format\""
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 4\\n1 3 2 4\\n1 3 4 2\") == \"YES\"\nassert solution(\"4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\") == \"NO\"\nassert solution(\"3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\") == \"YES\""
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 4\\n1 3 2 4\\n1 3 4 2\") == \"YES\"\nassert solution(\"4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\") == \"NO\"\nassert solution(\"3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\") == \"YES\""
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 4\\n1 3 2 4\\n1 3 4 2\") == \"YES\\n\"\nassert solution(\"4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\") == \"NO\\n\"\nassert solution(\"3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\") == \"YES\\n\""
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 4\\n1 3 2 4\\n1 3 4 2\") == \"YES\"\nassert solution(\"4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\") == \"NO\"\nassert solution(\"3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\") == \"YES\""
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 1 1') == '0'\nassert solution('1 2 1') == '666666672'"
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"0\""
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"0\"\n\nassert solution(\"1 1 1\") == \"0\"\n\nassert solution(\"1 2 1\") == \"666666672\""
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"0\"\nprint(\"0\")\n\nassert solution(stdin) == \"666666672\"\nprint(\"666666672\")"
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '0'"
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1 1\\n\") == 0\nassert solution(\"1 2 1\\n\") == 666666672"
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1 1\\n\") == \"0\\n\"\nassert solution(\"1 2 1\\n\") == \"666666672\\n\""
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1, 1, 1) == 0\n\narrangement1 = [(1, 1), (1, 3)]\narrangement2 = [(1, 1), (2, 3)]\narrangement3 = [(2, 1), (1, 3)]\narrangement4 = [(1, 1), (1, 2)]\narrangement5 = [(3, 1), (2, 2), (1, 3)]"
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1 1\\n\") == \"0\"\nassert solution(\"1 2 1\\n\") == \"666666672\""
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    '6\\n7 2 3 1 5 6'\n) == '5'\n\nassert solution(\n    '7\\n7 2 3 1 5 6'\n) == '3'\n\nassert solution(\n    '6\\n7 2 3 1 5 6'\n) == '5'"
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"5\" # Correct Solution"
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n7 2 3 1 5 6\") == \"5\""
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n7 2 3 1 5 6\") == \"5\""
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '5'"
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('6\\n7 2 3 1 5 6') == '5'\nassert solution('12\\n1 2 3 4 5 6 7 8 9') == '6'\nassert solution('10\\n1 2 3 4 5 6 7 8 9') == '6'\nassert solution('5\\n1 2 3 4 5') == '3'\nassert solution('1\\n1') == '1'\nassert solution('0\\n1') == '0'"
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n7 2 3 1 5 6\") == \"5\"\nassert solution(\"3\\n1 2 3\") == \"2\"\nassert solution(\"1\\n1 1\") == \"1\"\nassert solution(\"10\\n5 3 2 1\") == \"5\"\nassert solution(\"10\\n2 3 5 4 6\") == \"6\""
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n7 2 3 1 5 6\") == \"5\""
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n7 2 3 1 5 6\\n\") == \"5\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9\\n\") == \"6\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9\\n5\") == \"5\""
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"5\"\n"
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(str(input())) == str(output()), f\"Expected output: {output()}, Received: {solution(str(input()))}\""
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1 1 8\") == \"2\", \"First test case\"\nassert solution(\"4 2 2 6\") == \"3\", \"Second test case\"\nassert solution(\"3 7 4 6\") == \"1\", \"Third test case\""
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1 1 8\") == \"2\", \"Test Case 1\"\nassert solution(\"4 2 2 6\") == \"3\", \"Test Case 2\"\nassert solution(\"3 7 4 6\") == \"1\", \"Test Case 3\"\nassert solution(\"1\") == \"0\", \"Test Case 4\""
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"Test case failed\""
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1 1 8\") == \"2\"\nassert solution(\"4 2 2 6\") == \"3\"\nassert solution(\"3 7 4 6\") == \"1\""
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1 8\") == \"2\", \"Test 1\"\nassert solution(\"4 2 2 6\") == \"3\", \"Test 2\"\nassert solution(\"3 7 4 6\") == \"1\", \"Test 3\"\n"
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"2\", \"Solution is incorrect\"\nassert solution(input()) == \"3\", \"Solution is incorrect\"\nassert solution(input()) == \"1\", \"Solution is incorrect\""
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1 1 8\") == \"2\", \"The first sample test case should generate string s = 'abababab...'\"\nassert solution(\"4 2 2 6\") == \"3\", \"The second sample test case should generate string s = 'abcdbcaefg...'\"\nassert solution(\"3 7 4 6\") == \"1\", \"The third sample test case should generate string s = 'abczzzacad...'\"\n"
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1 1 8\") == \"2\"\nassert solution(\"4 2 2 6\") == \"3\"\nassert solution(\"3 7 4 6\") == \"1\""
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1 1 8\") == \"2\", \"Output 2 expected\"\nassert solution(\"4 2 2 6\") == \"3\", \"Output 3 expected\"\nassert solution(\"3 7 4 6\") == \"1\", \"Output 1 expected\"\n"
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 5\") == \"2\"\nassert solution(\"-1 4 15\") == \"4\"\nassert solution(\"0 -1 5\") == \"-1\"\n"
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 2 5') == '2'\nassert solution('-1 4 15') == '4'\nassert solution('0 -1 5') == '-1'"
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 2 5') == '2\\n'\nassert solution('-1 4 15') == '4\\n'\nassert solution('0 -1 5') == '-1\\n'"
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 5\") == \"2\"\nassert solution(\"-1 4 15\") == \"4\"\nassert solution(\"0 -1 5\") == \"-1\"\n"
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 5\") == \"2\", \"Expected output: 2, got: \" + solution(\"1 2 5\")\nassert solution(\"-1 4 15\") == \"4\", \"Expected output: 4, got: \" + solution(\"-1 4 15\")\nassert solution(\"0 -1 5\") == \"-1\", \"Expected output: -1, got: \" + solution(\"0 -1 5\")\nprint(\"All test cases passed\")"
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 5\") == \"2\"\nassert solution(\"-1 4 15\") == \"4\"\nassert solution(\"0 -1 5\") == \"-1\""
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 5\") == \"2\"\nassert solution(\"-1 4 15\") == \"4\"\nassert solution(\"0 -1 5\") == \"-1\""
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 5\") == \"2\"\nassert solution(\"-1 4 15\") == \"4\"\nassert solution(\"0 -1 5\") == \"-1\""
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(str(input())) == str(input())"
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 1\\n2 1 2 3 4 3\\n\") == \"2\\n\"\nassert solution(\"6 2\\n2 1 2 3 4 3\\n\") == \"0\\n\"\nassert solution(\"6 1\\n1 1 2 2 3 3\\n\") == \"2\\n\""
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 1\\n2 1 2 3 4 3\") == \"2\\n\"\nassert solution(\"6 2\\n2 1 2 3 4 3\") == \"0\\n\"\nassert solution(\"6 1\\n1 1 2 2 3 3\") == \"2\\n\""
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6 1\\n2 1 2 3 4 3') == '2'\nassert solution('6 2\\n2 1 2 3 4 3') == '0'\nassert solution('6 1\\n1 1 2 2 3 3') == '2'"
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 1\\n2 1 2 3 4 3\") == \"2\"\nassert solution(\"6 2\\n2 1 2 3 4 3\") == \"0\"\nassert solution(\"6 1\\n1 1 2 2 3 3\") == \"2\""
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 1\\n2 1 2 3 4 3\\n\") == \"2\"\nassert solution(\"6 2\\n2 1 2 3 4 3\\n\") == \"0\"\nassert solution(\"6 1\\n1 1 2 2 3 3\\n\") == \"2\""
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 1\\n2 1 2 3 4 3\\n\") == \"2\"\nassert solution(\"6 2\\n2 1 2 3 4 3\\n\") == \"0\"\nassert solution(\"6 1\\n1 1 2 2 3 3\\n\") == \"2\""
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 1\\n2 1 2 3 4 3\") == \"2\"\nassert solution(\"6 2\\n2 1 2 3 4 3\") == \"0\"\nassert solution(\"6 1\\n1 1 2 2 3 3\") == \"2\"\n"
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 1\\n2 1 2 3 4 3\\n\") == \"2\"\nassert solution(\"6 2\\n2 1 2 3 4 3\\n\") == \"0\"\nassert solution(\"6 1\\n1 1 2 2 3 3\\n\") == \"2\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"monday\") == \"NO\", \"Invalid Input\"\nassert solution(\"tuesday\") == \"YES\", \"Invalid Input\"\nassert solution(\"sunday\") == \"NO\", \"Invalid Input\"\nassert solution(\"saturday\") == \"YES\", \"Invalid Input\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"sunday\") == \"NO\"\nassert solution(\"saturday\") == \"YES\"\nassert solution(\"tuesday\") == \"YES\"\nassert solution(\"wednesday\") == \"YES\"\nassert solution(\"thursday\") == \"YES\"\nassert solution(\"friday\") == \"YES\"\nassert solution(\"monday\") == \"NO\"\nassert solution(\"tuesday\") == \"YES\"\nassert solution(\"wednesday\") == \"YES\"\nassert solution(\"thursday\") == \"YES\"\nassert solution(\"friday\") == \"YES\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"sunday\") == \"YES\"\nassert solution(\"saturday\") == \"YES\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"tuesday\") == \"NO\"\nassert solution(\"wednesday\") == \"NO\"\nassert solution(\"thursday\") == \"NO\"\nassert solution(\"friday\") == \"NO\"\nassert solution(\"saturday\") == \"NO\"\nassert solution(\"sunday\") == \"NO\"\nassert solution(\"saturday\") == \"YES\"\nassert solution(\"tuesday\") == \"YES\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('monday') == 'NO'\nassert solution('sunday') == 'NO'\nassert solution('saturday') == 'YES'"
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"monday\") == \"NO\", \"No such situation is possible\"\nassert solution(\"sunday\") == \"YES\", \"No such situation is possible\"\nassert solution(\"saturday\") == \"YES\", \"No such situation is possible\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"tuesday\") == \"NO\"\nassert solution(\"wednesday\") == \"NO\"\nassert solution(\"thursday\") == \"NO\"\nassert solution(\"friday\") == \"NO\"\nassert solution(\"saturday\") == \"NO\"\nassert solution(\"sunday\") == \"NO\"\nassert solution(\"saturday\") == \"YES\"\nassert solution(\"tuesday\") == \"YES\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"sunday\") == \"YES\"\nassert solution(\"saturday\") == \"YES\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"tuesday\") == \"YES\"\nassert solution(\"sunday\") == \"YES\"\nassert solution(\"saturday\") == \"YES\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('monday') == 'NO'\nassert solution('tuesday') == 'NO'\nassert solution('sunday') == 'YES'\nassert solution('saturday') == 'YES'"
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"35\") == \"17\"\nassert solution(\"10000000000\") == \"91\""
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == \"17\"\nassert solution(5000000001) == \"91\"\n"
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('35') == '17'\nassert solution('10000000000') == '91'\n"
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(35) == \"17\"\nassert solution(10000000000) == \"91\"\n"
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"35\") == \"17\"\nassert solution(\"10000000000\") == \"91\""
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"35\") == \"17\"\nassert solution(\"10000000000\") == \"91\""
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(35) == 17\nassert solution(10000000000) == 91"
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"35\") == \"17\"\nassert solution(\"10000000000\") == \"91\""
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"35\") == \"17\"\nassert solution(\"10000000000\") == \"91\""
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(35) == '17'\nassert solution(10000000000) == '91'"
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"AHA\") == \"YES\", \"Test 1\"\nassert solution(\"Z\") == \"NO\", \"Test 2\"\nassert solution(\"XO\") == \"NO\", \"Test 3\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"AHA\") == \"YES\", \"The name AHA is not a mirror word\"\nassert solution(\"Z\") == \"NO\", \"The name Z is a mirror word\"\nassert solution(\"XO\") == \"NO\", \"The name XO is not a mirror word\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('AHA') == 'YES', \"Test 1\"\nassert solution('Z') == 'NO', \"Test 2\"\nassert solution('XO') == 'NO', \"Test 3\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('AHA') == 'YES', \"Incorrect output for AHA\"\nassert solution('Z') == 'NO', \"Incorrect output for Z\"\nassert solution('XO') == 'NO', \"Incorrect output for XO\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"AHA\") == \"YES\", \"Test Case 1 Failed\"\nassert solution(\"Z\") == \"NO\", \"Test Case 2 Failed\"\nassert solution(\"XO\") == \"NO\", \"Test Case 3 Failed\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\""
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1 5\\n\") == \"0\"\nassert solution(\"3\\n1 2 5\\n\") == \"1\""
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\n1 5\\n') == '0\\n'\nassert solution('3\\n1 2 5\\n') == '1\\n'"
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n5\\n2\\n5\\n3\\n1\\n2\\n5\\n5\\n\") == 0, \"1\"\nassert solution(\"3\\n1\\n2\\n5\\n5\\n\") == 1, \"2\""
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1 5\\n\") == \"0\"\nassert solution(\"3\\n1 2 5\\n\") == \"1\""
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1 5\") == \"0\"\nassert solution(\"3\\n1 2 5\") == \"1\""
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n1 5\\n') == '0\\n'\nassert solution('3\\n1 2 5\\n') == '1\\n'"
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"Test {i+1} failed: Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1 5\\n\") == \"0\\n\"\nassert solution(\"3\\n1 2 5\\n\") == \"1\\n\""
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1 5\") == \"0\"\nassert solution(\"3\\n1 2 5\") == \"1\""
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1 5\\n\") == \"0\\n\"\nassert solution(\"3\\n1 2 5\\n\") == \"1\\n\""
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\nRU\") == \"Yes\\n\"\nassert solution(\"1 2\\nRU\") == \"No\\n\"\nassert solution(\"-1 1000000000\\nLRRLU\") == \"Yes\\n\"\nassert solution(\"0 0\\nD\") == \"Yes\\n\""
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\nRU\") == \"Yes\\n\"\nassert solution(\"1 2\\nRU\") == \"No\\n\"\nassert solution(\"-1 1000000000\\nLRRLU\") == \"Yes\\n\"\nassert solution(\"0 0\\nD\") == \"Yes\\n\""
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\nRU\") == \"Yes\\n\"\nassert solution(\"1 2\\nRU\") == \"No\\n\"\nassert solution(\"-1 1000000000\\nLRRLU\") == \"Yes\\n\"\nassert solution(\"0 0\\nD\") == \"Yes\\n\""
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\nRU\") == \"Yes\"\nassert solution(\"1 2\\nRU\") == \"No\"\nassert solution(\"-1 1000000000\\nLRRLU\") == \"Yes\"\nassert solution(\"0 0\\nD\") == \"Yes\""
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 2\\nRU') == 'Yes', 'Incorrect output for the first test case.'\nassert solution('1 2\\nRU') == 'No', 'Incorrect output for the second test case.'\nassert solution('-1 1000000000\\nLRRLU') == 'Yes', 'Incorrect output for the third test case.'\nassert solution('0 0\\nD') == 'Yes', 'Incorrect output for the fourth test case.'"
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\nRU\") == \"Yes\"\nassert solution(\"1 2\\nRU\") == \"No\"\nassert solution(\"-1 1000000000\\nLRRLU\") == \"Yes\"\nassert solution(\"0 0\\nD\") == \"Yes\""
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 2\\nRU') == 'Yes', \"Solution for test case 2 is not correct\"\nassert solution('1 2\\nRU') == 'No', \"Solution for test case 1 is not correct\"\nassert solution('-1 1000000000\\nLRRLU') == 'Yes', \"Solution for test case -1 is not correct\"\nassert solution('0 0\\nD') == 'Yes', \"Solution for test case 0 is not correct\""
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\nRU\\n\") == \"Yes\"\nassert solution(\"1 2\\nRU\\n\") == \"No\"\nassert solution(\"-1 1000000000\\nLRRLU\\n\") == \"Yes\"\nassert solution(\"0 0\\nD\\n\") == \"Yes\""
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 2\\nRU') == 'Yes'\nassert solution('1 2\\nRU') == 'No'\nassert solution('-1 1000000000\\nLRRLU') == 'Yes'\nassert solution('0 0\\nD') == 'Yes'\n\nprint(\"All test cases passed\")"
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\nRU\") == \"Yes\", \"The solution for the first test case should be Yes.\"\nassert solution(\"1 2\\nRU\") == \"No\", \"The solution for the second test case should be No.\"\nassert solution(\"-1 1000000000\\nLRRLU\") == \"Yes\", \"The solution for the third test case should be Yes.\"\nassert solution(\"0 0\\nD\") == \"Yes\", \"The solution for the fourth test case should be Yes.\"\nassert solution(\"2 2\\nRU\\n\") == \"Yes\", \"The solution for the fifth test case should be Yes.\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 3 7\") == \"1\"\nassert solution(\"10   3   7\") == \"1\"\nassert solution(\"314\") == \"0\"\nassert solution(\"22 19 3\") == \"1\"\nassert solution(\"10\\n3\\n7\") == \"1\"\nassert solution(\"60\\n29\\n\\n31\\n\\n\\n\\n\") == \"1\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 3 7\") == \"1\", \"Sample Input 1: 10 3 7\"\nassert solution(\"10   3   7\") == \"1\", \"Sample Input 2: 10   3   7\"\nassert solution(\"314\") == \"0\", \"Sample Input 3: 314\"\nassert solution(\"22 19 3\") == \"1\", \"Sample Input 4: 22 19 3\"\nassert solution(\"60\\n29\\n\\n31\\n\\n\\n\\n\") == \"1\", \"Sample Input 5: 60\\n29\\n\\n31\\n\\n\\n\\n\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 3 7\") == \"1\\n\"\nassert solution(\"10   3   7\") == \"1\\n\"\nassert solution(\"314\") == \"0\\n\"\nassert solution(\"22 19 3\") == \"1\\n\"\nassert solution(\"   60 \\n 29 \\n \\n31 \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\n \\"
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 3 7\") == \"1\"\nassert solution(\"10   3   7\") == \"1\"\nassert solution(\"314\") == \"0\"\nassert solution(\"22 19 3\") == \"1\"\nassert solution(\"   60\\n 29\\n\\n\\n\\n\\n\") == \"1\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 3 7\") == \"1\"\nassert solution(\"10   3   7\") == \"1\"\nassert solution(\"314\") == \"0\"\nassert solution(\"22 19 3\") == \"1\"\nassert solution(\"   60\\n29\\n   31\\n    \\n\\n\\n    \\n\") == \"1\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 3 7\") == \"1\\n\"\nassert solution(\"10   3   7\") == \"1\\n\"\nassert solution(\"314\") == \"0\\n\"\nassert solution(\"22 19 3\") == \"1\\n\"\nassert solution(\"   60\\n29\\n\\n\\n\\n31\\n\\n\\n\\n\\n\") == \"1\\n\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 3 7\") == \"1\\n\"\nassert solution(\"10   3   7\") == \"1\\n\"\nassert solution(\"314\") == \"0\\n\"\nassert solution(\"22 19 3\") == \"1\\n\"\nassert solution(\"   60\\n29\\n\\n\\n31\\n\\n\\n\\n3\\n\\n\\n\\n\\n\") == \"1\\n\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 3 7\") == \"1\", \"Expected 1 but got {}.\"\nassert solution(\"10   3   7\") == \"1\", \"Expected 1 but got {}.\"\nassert solution(\"314\") == \"0\", \"Expected 0 but got {}.\"\nassert solution(\"22 19 3\") == \"1\", \"Expected 1 but got {}.\"\nassert solution(\"   60\\n29\\n\\n   31\\n\\n    \\n    \\n    \\n\") == \"1\", \"Expected 1 but got {}.\"\n"
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 3 7\") == \"1\", \"Invalid output\"\nassert solution(\"10   3   7\") == \"1\", \"Invalid output\"\nassert solution(\"314\") == \"0\", \"Invalid output\"\nassert solution(\"22 19 3\") == \"1\", \"Invalid output\"\nassert solution(\"   60\\n29\\n   31\\n   358\\n\") == \"1\", \"Invalid output\"\nassert solution(\"\") == \"0\", \"Invalid input\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 3 7\") == \"1\\n\"\nassert solution(\"10   3   7\") == \"1\\n\"\nassert solution(\"314\") == \"0\\n\"\nassert solution(\"22 19 3\") == \"1\\n\"\nassert solution(\"60\\n29\\n\\n31\\n\\n\\n\") == \"1\\n\"\n"
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"9\\n\", \"Test case failed.\""
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == '9', 'The given solution does not work'\n"
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '9'"
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == \"9\", \"Test failed\""
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '9\\n'\n"
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"9\\n\"\nassert solution(\"123\") == \"27\\n\"\nassert solution(\"1234\") == \"7\\n\"\nassert solution(\"12345\") == \"5\\n\"\nassert solution(\"123456\") == \"0\\n\"\nassert solution(\"1234567\") == \"0\\n\"\nassert solution(\"12345678\") == \"0\\n\""
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == \"9\""
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '9', \"Incorrect output\""
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"9\"\nassert solution(\"123456789\") == \"9\"\nassert solution(\"12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345"
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"9\""
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n3 6 28 9\\n\") == \"4\\n\"\nassert solution(\"5\\n5 12 9 16 48\\n\") == \"3\\n\"\nassert solution(\"4\\n1 2 4 8\\n\") == \"-1\\n\""
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"got {solution(input())}, expected {expected_output}\"\n"
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"Output\""
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n3 6 28 9\\n\") == \"4\\n\"\nassert solution(\"5\\n5 12 9 16 48\\n\") == \"3\\n\"\nassert solution(\"4\\n1 2 4 8\\n\") == \"-1\\n\""
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"4\", \"Test 1\""
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n3 6 28 9\\n\") == \"4\\n\"\nassert solution(\"5\\n5 12 9 16 48\\n\") == \"3\\n\"\nassert solution(\"4\\n1 2 4 8\\n\") == \"-1\\n\""
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n4\n3 6 28 9\n''') == '4'\nassert solution('''\n5\n5 12 9 16 48\n''') == '3'\nassert solution('''\n4\n1 2 4 8\n''') == '-1'\n"
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"4\"\nassert solution() == \"3\"\nassert solution() == \"-1\"\n"
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Input\\n4\\n3 6 28 9\") == \"4\\n\"\nassert solution(\"Input\\n5\\n5 12 9 16 48\") == \"3\\n\"\nassert solution(\"Input\\n4\\n1 2 4 8\") == \"-1\\n\""
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n3 6 28 9\\n4\\n5 12 9 16 48\\n4\\n1 2 4 8\\n-1\\n') == '4\\n4\\n3\\n-1\\n'\nassert solution('5\\n5 12 9 16 48\\n3\\n4\\n1 2 4 8\\n-1\\n') == '3\\n3\\n-1\\n'\nassert solution('4\\n1 2 4 8\\n-1\\n') == '-1\\n'"
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n0 5 0 2 3\") == \"2\"\nassert solution(\"7\\n1 0 0 5 0 0 2\") == \"1\""
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n0 5 0 2 3') == '2'\nassert solution('7\\n1 0 0 5 0 0 2') == '1'"
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\n0 5 0 2 3') == '2\\n'\nassert solution('7\\n1 0 0 5 0 0 2') == '1\\n'"
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n0 5 0 2 3\") == \"2\"\nassert solution(\"7\\n1 0 0 5 0 0 2\") == \"1\""
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n0 5 0 2 3\\n\") == \"2\"\nassert solution(\"7\\n1 0 0 5 0 0 2\\n\") == \"1\""
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\").read()) == \"2\"\nassert solution(open(\"input2.txt\").read()) == \"1\"\n"
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n0 5 0 2 3\\n\") == \"2\"\nassert solution(\"7\\n1 0 0 5 0 0 2\\n\") == \"1\""
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 1\nassert solution(7) == 1\nassert solution(1) == 2\nassert solution(5) == 2\nassert solution(0) == 2"
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n0 5 0 2 3\") == \"2\"\nassert solution(\"7\\n1 0 0 5 0 0 2\") == \"1\""
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Test failed with input {input()}, expected {expected}\""
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"5\""
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(4) == 2\nassert solution(5) == 5"
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(4) == \"2\", \"The output is incorrect\"\nassert solution(5) == \"5\", \"The output is incorrect\""
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(5) == \"2\", \"The expected output is 2, but instead got {}\".format(solution(5))"
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(5) == 5, \"Input is incorrect\"\nassert solution(10) == 2, \"Input is incorrect\"\nassert solution(15) == 5, \"Input is incorrect\"\nassert solution(16) == 5, \"Input is incorrect\"\nassert solution(17) == 5, \"Input is incorrect\"\nassert solution(18) == 5, \"Input is incorrect\"\nassert solution(19) == 5, \"Input is incorrect\"\nassert solution(20) == 5, \"Input is incorrect\"\nassert solution(21) == 5, \"Input is incorrect\"\nassert solution(22) == 5, \"Input is incorrect\"\nassert solution(23) == 5, \"Input is incorrect\"\nassert solution(24) == 5, \"Input is incorrect\"\nassert solution(25) == 5, \"Input is incorrect\"\nassert solution(26) == 5, \"Input is incorrect\"\nassert solution(27) == 5, \"Input is incorrect\"\nassert solution(28) == 5, \"Input is incorrect\"\nassert solution(29) == 5, \"Input is incorrect\"\nassert solution(30) == 5, \"Input is incorrect\"\nassert solution(31) == 5, \"Input is incorrect\"\nassert solution(32) == 5, \"Input is incorrect\"\nassert solution(33) == 5, \"Input is incorrect\"\nassert solution(34) == 5, \"Input is incorrect\"\nassert solution(35) == 5, \"Input is incorrect\"\nassert solution(36) == 5, \"Input is incorrect\"\nassert solution(37) == 5, \"Input is incorrect\"\nassert solution(38) == 5, \"Input is incorrect\"\nassert solution(39) == 5, \"Input is incorrect\"\nassert solution(40) == 5, \"Input is incorrect\"\nassert solution(41) == 5, \"Input is incorrect\"\nassert solution(42) == 5, \"Input is incorrect\"\nassert solution(43) == 5, \"Input is incorrect\"\nassert solution(44) == 5, \"Input is incorrect\"\nassert solution(45) == 5, \"Input is incorrect\"\nassert solution(46) == 5, \"Input is incorrect\"\nassert solution(47) == 5, \"Input is incorrect\"\nassert solution(48) == 5, \"Input is incorrect\"\nassert solution(49) == 5, \"Input is incorrect\"\nassert solution(50) == 5, \"Input is incorrect\"\nassert solution(51) == 5, \"Input is incorrect\"\nassert solution(52) == 5, \"Input is incorrect\"\nassert solution(53) == 5, \"Input is incorrect\"\nassert solution(54) == 5, \"Input is incorrect\"\nassert solution(55) == 5, \"Input is incorrect\"\nassert solution(56) == 5, \"Input is incorrect\"\nassert solution(57) == 5, \"Input is incorrect\"\nassert solution(58) == 5, \"Input is incorrect\"\nassert solution(59) == 5, \"Input is incorrect\"\nassert solution(60) == 5, \"Input is incorrect\"\nassert solution(61) == 5, \"Input is incorrect\"\nassert solution(62) == 5, \"Input is incorrect\"\nassert solution(63) == 5, \"Input is incorrect\"\nassert solution(64) == 5, \"Input is incorrect\"\nassert solution(65) == 5, \"Input is incorrect\"\nassert solution(66) == 5, \"Input is incorrect\"\nassert solution(67) == 5, \"Input is incorrect\"\nassert solution(68) == 5, \"Input is incorrect\"\nassert solution(69) == 5, \"Input is incorrect\"\nassert solution(70) == 5, \"Input is incorrect\"\nassert solution(71) == 5, \"Input is incorrect\"\nassert solution(72) == 5, \"Input is incorrect\"\nassert solution(73) == 5, \"Input is incorrect\"\nassert solution(74) == 5, \"Input is incorrect\"\nassert solution(75) == 5, \"Input is incorrect\"\nassert solution(76) == 5, \"Input is incorrect\"\nassert solution("
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n\") == \"2\\n\"\nassert solution(\"5\\n\") == \"5\\n\""
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"5\"\n"
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5) == 5"
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=input()) == '2\\n'"
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n    5 2 2\n    1 3 4 5 2\n    ''') == '18\\n3 4\\n1 5\\n'\n\nassert solution('''\n    4 2 2\n    10 8 8 3\n    ''') == '31\\n1 2\\n3 4\\n'\n\nassert solution('''\n    5 3 1\n    5 2 5 1 7\n    ''') == '23\\n1 3 5\\n4\\n'"
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 2 2\\n1 3 4 5 2\\n5 3 2 1 4\") == \"18\\n3 4\\n1 5\\n\"\nassert solution(\"4 2 2\\n10 8 8 3\\n10 7 9 4\") == \"31\\n1 2\\n3 4\\n\"\nassert solution(\"5 3 1\\n5 2 5 1 7\\n6 3 1 6 3\") == \"23\\n1 3 5\\n4\\n\""
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=stdin) == expected, f\"Expected {expected}, got {solution(stdin=stdin)}\""
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2 2\\n1 3 4 5 2\\n5 3 2 1 4\\n\") == \"18\\n3 4 \\n1 5 \\n\"\nassert solution(\"4 2 2\\n10 8 8 3\\n10 7 9 4\\n\") == \"31\\n1 2 \\n3 4 \\n\"\nassert solution(\"5 3 1\\n5 2 5 1 7\\n6 3 1 6 3\\n\") == \"23\\n1 3 5 \\n4\\n\""
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 2 2\\n1 3 4 5 2\\n5 3 2 1 4\") == \"18\\n3 4\\n1 5\\n\"\nassert solution(\"4 2 2\\n10 8 8 3\\n10 7 9 4\") == \"31\\n1 2\\n3 4\\n\"\nassert solution(\"5 3 1\\n5 2 5 1 7\\n6 3 1 6 3\") == \"23\\n1 3 5\\n4\""
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2 2\\n1 3 4 5 2\\n5 3 2 1 4\\n\") == \"18\\n3 4 \\n1 5 \\n\"\nassert solution(\"4 2 2\\n10 8 8 3\\n10 7 9 4\\n\") == \"31\\n1 2 \\n3 4 \\n\"\nassert solution(\"5 3 1\\n5 2 5 1 7\\n6 3 1 6 3\\n\") == \"23\\n1 3 5 \\n4\\n\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output() for input, output in zip(sample_input(), sample_output())"
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2 2\\n1 3 4 5 2\\n5 3 2 1 4\") == \"18\\n3 4\\n1 5\\n\"\nassert solution(\"4 2 2\\n10 8 8 3\\n10 7 9 4\") == \"31\\n1 2\\n3 4\\n\"\nassert solution(\"5 3 1\\n5 2 5 1 7\\n6 3 1 6 3\") == \"23\\n1 3 5\\n4\""
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 2 2\\n1 3 4 5 2\\n5 3 2 1 4\\n\") == \"18\\n3 4 \\n1 5 \\n\"\nassert solution(\"4 2 2\\n10 8 8 3\\n10 7 9 4\\n\") == \"31\\n1 2 \\n3 4 \\n\"\nassert solution(\"5 3 1\\n5 2 5 1 7\\n6 3 1 6 3\\n\") == \"23\\n1 3 5 \\n4\""
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"5 2 2\n1 3 4 5 2\n5 3 2 1 4\"\"\") == \"18\\n3 4 \\n1 5 \"\nassert solution(\"\"\"4 2 2\n10 8 8 3\n10 7 9 4\"\"\") == \"31\\n1 2 \\n3 4 \"\nassert solution(\"\"\"5 3 1\n5 2 5 1 7\n6 3 1 6 3\"\"\") == \"23\\n1 3 5 \\n4\""
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"Yes\\na\\nb\\nc\"\nassert solution(open(\"input2.txt\", \"r\")) == \"No\""
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2\\n1 3\\n1 4\") == \"Yes\\naa\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\") == \"No\""
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1\\n1 2\") == \"Yes\\na\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\") == \"No\""
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"Yes\", \"The provided input is incorrect.\""
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Test {test_num} failed\"\nfor test_num, (n, m, u, v) in enumerate(tests):\n    assert solution(input()) == expected, f\"Test {test_num} failed\""
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1\\n1 2\\n\") == \"Yes\\na\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\\n\") == \"No\""
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1\\n1 2\\n\") == \"Yes\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\\n\") == \"No\""
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1\\n1 2\") == \"Yes\\na\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\") == \"No\""
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1\\n1 2\\n\") == \"Yes\\na\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\\n\") == \"No\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1\\n1 2\\n\") == \"Yes\\naa\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\\n\") == \"No\""
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 1 1\\n1 0 1\\n1 1 0\\n3\\n\") == \"7\"\nassert solution(\"0 2 2\\n1 0 100\\n1 2 0\\n3\\n\") == \"19\"\nassert solution(\"0 2 1\\n1 0 100\\n1 2 0\\n5\\n\") == \"87\"\nassert solution(\"0 1 2\\n2 1 0\\n0 3 4\\n2\\n\") == \"4\"\nassert solution(\"0 4 5\\n3 1 0\\n1 5 2\\n4\\n\") == \"10\"\nassert solution(\"0 0 0\\n0 6 0\\n1 1 0\\n1\\n\") == \"10\"\nassert solution(\"0 0 0\\n0 1 1\\n1 1 0\\n1\\n\") == \"1\"\nassert solution(\"0 0 0\\n0 0 0\\n1 1 0\\n1\\n\") == \"1\""
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 1 1\\n1 0 1\\n1 1 0\\n3\") == \"7\\n\", \"Test 1\"\nassert solution(\"0 2 2\\n1 0 100\\n1 2 0\\n3\") == \"19\\n\", \"Test 2\"\nassert solution(\"0 2 1\\n1 0 100\\n1 2 0\\n5\") == \"87\\n\", \"Test 3\""
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('0 1 1\\n1 0 1\\n1 1 0\\n3\\n') == '7'\nassert solution('0 2 2\\n1 0 100\\n1 2 0\\n3\\n') == '19'\nassert solution('0 2 1\\n1 0 100\\n1 2 0\\n5\\n') == '87'"
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(0, 1, 1) == 7, \"The solution is incorrect\"\nassert solution(0, 2, 2) == 19, \"The solution is incorrect\"\nassert solution(0, 2, 1) == 87, \"The solution is incorrect\""
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '7', \"Expected output '7', but got '{}' instead.\".format(solution(input()))"
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 1 1\\n1 0 1\\n1 1 0\\n3\") == \"7\"\nassert solution(\"0 2 2\\n1 0 100\\n1 2 0\\n3\") == \"19\"\nassert solution(\"0 2 1\\n1 0 100\\n1 2 0\\n5\") == \"87\""
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"The provided input '{input()}' does not match the expected output '{output}'.\""
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 7\nassert solution(4) == 19\nassert solution(5) == 87"
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 1 1\\n1 0 1\\n1 1 0\\n3\") == \"7\\n\"\nassert solution(\"0 2 2\\n1 0 100\\n1 2 0\\n3\") == \"19\\n\"\nassert solution(\"0 2 1\\n1 0 100\\n1 2 0\\n5\") == \"87\\n\""
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 1 1\\n1 0 1\\n1 1 0\\n3\\n\") == \"7\\n\"\nassert solution(\"0 2 2\\n1 0 100\\n1 2 0\\n3\\n\") == \"19\\n\"\nassert solution(\"0 2 1\\n1 0 100\\n1 2 0\\n5\\n\") == \"87\\n\""
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Bulbbasaur\") == 1\nassert solution(\"F\") == 0\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == 2"
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Bulbbasaur\") == \"1\", \"The solution should return the correct output.\"\nassert solution(\"F\") == \"0\", \"The solution should return the correct output.\"\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == \"2\", \"The solution should return the correct output.\""
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Bulbbasaur\") == 1\nassert solution(\"F\") == 0\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == 2"
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Bulbbasaur\") == \"1\", \"The correct answer is 1.\"\nassert solution(\"F\") == \"0\", \"The correct answer is 0.\"\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == \"2\", \"The correct answer is 2.\""
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Bulbbasaur\") == \"1\"\nassert solution(\"F\") == \"0\"\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == \"2\""
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Bulbbasaur\") == \"1\"\nassert solution(\"F\") == \"0\"\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == \"2\"\n"
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Bulbbasaur\") == 1\nassert solution(\"F\") == 0\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == 2"
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Bulbbasaur\") == \"1\"\nassert solution(\"F\") == \"0\"\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == \"2\""
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('Bulbbasaur') == '1'\nassert solution('F') == '0'\nassert solution('aBddulbasaurrgndgbualdBdsagaurrgndbb') == '2'"
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Bulbbasaur\") == \"1\"\nassert solution(\"F\") == \"0\"\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == \"2\""
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\narc\\nrac\") == \"YES\"\nassert solution(\"3 2\\nabc\\nbcd\") == \"NO\"\nassert solution(\"3 2\\nabc\\nbac\") == \"YES\"\nassert solution(\"3 2\\nbcd\\nabc\") == \"YES\"\nassert solution(\"3 2\\nabc\\nbcd\") == \"NO\"\n"
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=input()) == \"YES\""
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\narc\\nrac\") == \"YES\"\nassert solution(\"2 3\\nabc\") == \"NO\"\nassert solution(\"2 4\\nabc\") == \"NO\"\nassert solution(\"4 2\\nabc\") == \"YES\"\n"
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\narc\\nrac\") == \"YES\"\nassert solution(\"1 2\\nbc\") == \"NO\"\nassert solution(\"3 1\\nbc\") == \"NO\"\nassert solution(\"5 5\\nabc\") == \"YES\"\nassert solution(\"1 1\\nabc\") == \"NO\"\nassert solution(\"5 1\\nabc\") == \"NO\""
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"2 3\\narc\\nrac\") == \"YES\"\nassert solution(stdin=\"2 3\\nabc\") == \"NO\""
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\narc\\nrac\\n\") == \"YES\"\nassert solution(\"3 2\\nbcc\\nbcd\\n\") == \"NO\"\nassert solution(\"2 4\\naab\\nbab\\n\") == \"YES\"\nassert solution(\"2 4\\nbba\\nbaa\\n\") == \"YES\"\nassert solution(\"2 4\\naaa\\nabb\\n\") == \"NO\""
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 3\\narc\\nrac\\n') == 'YES'\nassert solution('1 1\\nabc\\ndef\\nghi\\n') == 'NO'\nassert solution('3 3\\nabc\\ndef\\nghi\\n') == 'NO'\nassert solution('3 3\\nabc\\n\\nghi\\n') == 'YES'\nassert solution('3 3\\nabc\\ndef\\n\\nghi\\n') == 'NO'"
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\narc\\nrac\") == \"YES\"\nassert solution(\"3 2\\nbac\\ncba\") == \"YES\"\nassert solution(\"5 1\\naaa\\nbbb\\nccc\") == \"YES\"\nassert solution(\"5 1\\naaa\\nbbb\\nddd\") == \"NO\"\nassert solution(\"1 1\\na\\n\") == \"NO\""
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\narc\\nrac\\n\") == \"YES\"\nassert solution(\"3 3\\nbac\\naba\\nbac\\n\") == \"NO\""
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\narc\\nrac\") == \"YES\"\nassert solution(\"2 3\\nrac\\narc\") == \"NO\"\nassert solution(\"2 3\\naaa\\naaa\") == \"YES\"\nassert solution(\"2 3\\naaa\\nbbb\") == \"NO\"\nassert solution(\"2 3\\naaa\\nbbb\") == \"YES\"\nassert solution(\"2 3\\naaa\\nbab\") == \"NO\""
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\\n\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\\n1111\") == \"5\\n\""
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n3 111\n1111\n10111\n10010\n\"\"\") == '4\\n'\n\nN, X = map(int, stdin.split())\nA = []\nfor i in range(N):\n    A.append(int(input()))"
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\""
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\\n\") == \"4\\n\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\\n\") == \"4\\n\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\\n\") == \"4\\n\""
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\"\nassert solution(\"2 1\\n1\\n0\\n1\") == \"0\"\nassert solution(\"3 1\\n1\\n1\\n1\") == \"2\"\nassert solution(\"2 1\\n1\\n1\\n0\") == \"2\"\nassert solution(\"3 1\\n1\\n1\\n0\") == \"2\"\nassert solution(\"4 1\\n1\\n1\\n1\") == \"2\"\nassert solution(\"4 1\\n1\\n1\\n0\") == \"2\"\nassert solution(\"4 1\\n1\\n0\\n1\") == \"2\"\nassert solution(\"4 1\\n1\\n0\\n0\") == \"2\"\nassert solution(\"4 1\\n1\\n0\\n1\") == \"2\"\nassert solution(\"4 1\\n1\\n0\\n0\") == \"2\"\n"
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\\n\") == \"4\""
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\\n\") == \"4\\n\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\\n\"\nassert solution(\"1 1\\n2 3\\n4 5\") == \"0\\n\"\nassert solution
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\\n\"\nassert solution(\"3 222\\n1111\\n10111\\n10010\") == \"0\\n\""
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\\n\") == \"4\"\nassert solution(\"3 101\\n1101\\n11001\\n110001\\n\") == \"7\"\nassert solution(\"3 101\\n1101\\n11001\\n110001\\n\") == \"9\"\nassert solution(\"3 101\\n1101\\n11001\\n110001\\n\") == \"12\"\nassert solution(\"3 101\\n1101\\n11001\\n110001\\n\") == \"13\"\nassert solution(\"3 101\\n1101\\n11001\\n110001\\n\") == \"14\"\nassert solution(\"3 101\\n1101\\n11001\\n110001\\n\") == \"15\"\nassert solution(\"3 101\\n1101\\n11001\\n110001\\n\") == \"16\"\nassert solution(\"3 101\\n1101\\n11001\\n110001\\n\") == \"17\"\nassert solution(\"3 101\\n1101\\n11001\\n110001\\n\") == \"18\"\nassert solution(\"3 101\\n1101\\n11001\\n110001\\n\") == \"19\"\nassert solution(\"3 101\\n1101\\n11001\\n110001\\n\") == \"20\"\nassert solution(\"3 101\\n1101\\n11001\\n110001\\n\") == \"21\"\nassert solution(\"3 101\\n1101\\n11001\\n110001\\n\") == \"22\"\nassert solution(\"3 101\\n1101\\n11001\\n110001\\n\") == \"23\"\nassert solution(\"3 101\\n1101\\n11001\\n110001\\n\") == \"24\"\nassert solution(\"3 101\\n1101\\n11001\\n110001\\n\") == \"25\"\nassert solution(\"3 101\\n1101\\n11001\\n110001\\n\") == \"26\"\nassert solution(\"3 101\\n1101\\n11001\\n110001\\n\") == \"27\"\nassert solution(\"3 101\\n1101\\n11001\\n110001\\n\") == \"28\"\nassert solution(\"3 101\\n1101\\n11001\\n110001\\n\") == \"29\"\nassert solution(\"3 101\\n1101\\n11001\\n110001\\n\") == \"30\"\nassert solution(\"3 101\\n1101\\n11001\\n110001\\n\") == \"31\"\nassert solution(\"3 101\\n1101\\n11001\\n110001\\n\") == \"32\"\nassert solution(\"3 101\\n1101\\n11001\\n110001\\n\") == \"33\"\nassert solution(\"3 101\\n1101\\n11001\\n110001\\n\") == \"34\"\nassert solution(\"3 101\\n1101\\n11001\\n110001\\n\") == \"35\"\nassert solution(\"3"
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"11 11 5\") == \"1\\n\"\nassert solution(\"11 2 3\") == \"-1\\n\"\n"
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Expected '{output}', got '{solution(input())}'\""
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 2 3\") == \"-1\"\n"
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Error: Expected {output()}, but got {solution(input())}\"\n"
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"11 11 5\") == \"1\\n\"\nassert solution(\"11 2 3\") == \"-1\\n\"\nassert solution(\"1 2 3\") == \"0\\n\"\nassert solution(\"0 0 0\") == \"0\\n\"\nassert solution
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"11 11 5\") == \"1\\n\"\nassert solution(\"11 2 3\") == \"-1\\n\"\nassert solution(\"1 2 3\") == \"0\\n\"\nassert solution(\"10000000000000000000\") == \"1\\n\""
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"11 11 5\") == \"1\\n\"\nassert solution(\"11 2 3\") == \"-1\\n\""
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 2 3\") == \"-1\"\nassert solution
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 2 3\") == \"-1\"\n"
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 2 3\") == \"-1\""
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('abacaba') == 'YES'\nassert solution('jinotega') == 'NO'"
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\"\n"
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\"\n"
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('abacaba') == 'YES'\nassert solution('jinotega') == 'NO'"
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('abacaba') == 'YES'\nassert solution('jinotega') == 'NO'"
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\"\n"
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 2 6') == '6.5'\nassert solution('4 2 20') == '20.0'"
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2 6\") == \"6.5\"\nassert solution(\"4 2 20\") == \"20.0\""
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2 6\") == \"6.5\\n\"\nassert solution(\"4 2 20\") == \"20.0\\n\"\n\nfrom typing import List\nimport math"
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 2 6') == '6.5'\nassert solution('4 2 20') == '20.0'"
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2 6\") == \"6.5\"\nassert solution(\"4 2 20\") == \"20.0\"\n"
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2 6\") == \"6.5\\n\"\nassert solution(\"4 2 20\") == \"20.0\\n\""
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2 6\") == \"6.5\"\nassert solution(\"4 2 20\") == \"20.0\"\n\nfrom typing import List"
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2 6\") == \"6.5\"\nassert solution(\"4 2 20\") == \"20.0\"\n"
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == '6.5'"
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 6.5, \"Expected 6.5, but got {}\".format(solution())\nassert solution() == 20.0, \"Expected 20.0, but got {}\".format(solution())\n"
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 2\\n..\\n..\\n\\n4 4\\n....\\n#.#.\\n....\\n.#..\\n') == '2\\n'\nassert solution('4 4\\n....\\n.##.\\n....\\n\\n3 4\\n....\\n.##.\\n....') == '1\\n'\nassert solution('3 4\\n....\\n.##.\\n....\\n\\n4 4\\n....\\n.##.\\n....') == '2\\n'"
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2\"\nassert solution() == \"1\"\nassert solution() == \"2\""
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 2\\n..\\n..\\n') == '2'\nassert solution('4 4\\n....\\n#.#.\\n....\\n.#..\\n') == '1'\nassert solution('3 4\\n....\\n.##.\\n....\\n') == '2'"
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\n..\\n..\\n\") == \"2\"\nassert solution(\"4 4\\n....\\n#.#.\\n....\\n.#..\") == \"1\"\nassert solution(\"3 4\\n....\\n.##.\\n....\\n\") == \"2\"\n"
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\n..\\n..\\n\") == \"2\\n\"\nassert solution(\"4 4\\n....\\n#.#.\\n....\\n.#..\\n\") == \"1\\n\"\nassert solution(\"3 4\\n....\\n.##.\\n....\\n\") == \"2\\n\""
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n    2 2\n    ..\n    ..\n    2 2\n    ..\n    ..\n    2 2\n    ..\n    ..\n''') == '2'\n\nassert solution('''\n    4 4\n    ....\n    #.#.\n    ....\n    .#..\n    2 2\n    2 2\n    2 2\n    2 2\n    2 2\n''') == '1'\n\nassert solution('''\n    3 4\n    ....\n    .##.\n    ....\n    ''') == '2'"
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n..\\n..\\n\") == \"2\"\nassert solution(\"4 4\\n....\\n#.#.\\n....\\n.#..\\n\") == \"1\"\nassert solution(\"3 4\\n....\\n.##.\\n....\\n\") == \"2\""
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\n..\\n..\\n\") == \"2\"\nassert solution(\"4 4\\n....\\n#.#. \\n....\\n.#..\") == \"1\"\nassert solution(\"3 4\\n....\\n.##. \\n....\\n\") == \"2\""
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '2'\nassert solution(input()) == '2'\nassert solution(input()) == '1'\nassert solution(input()) == '2'"
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n..\\n..\\n\") == \"2\\n\"\nassert solution(\"4 4\\n....\\n.#.#\\n....\\n.#..\\n\") == \"1\\n\"\nassert solution(\"3 4\\n....\\n.##.\\n....\\n\") == \"2\\n\""
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 1 3\") == \"6\"\nassert solution(\"4\\n1 1 2 1\\n2 3 2 3\") == \"32\""
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 1 3\") == \"6\\n\"\nassert solution(\"4\\n2 3 4\") == \"12\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"30\\n\"\nassert solution(\"6\\n3 2 1 4 5 6\") == \"182\\n\"\nassert solution(\"7\\n3 2 3 4 5 6\") == \"200\\n\"\nassert solution(\"8\\n1 1 2 3 4 5\") == \"32\\n\""
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"6\\n\", solution(stdin)"
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"6\", \"Your code is incorrect\"\n\nHere's the solution:\n\n```python\n"
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 1 3\\n\") == \"6\\n\""
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 1 3\") == \"6\\n\""
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 1 3\") == \"6\\n\"\nprint(\"All test cases pass.\")"
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n1 1 3') == '6'\nprint(\"All tests passed!\")"
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_data) == output_data, f\"Test failed. Expected {output_data}, got {solution(input_data)}\""
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 1 3\") == \"6\\n\", \"Test 1 failed.\"\nassert solution(\"4\\n2 3 4\") == \"16\\n\", \"Test 2 failed.\"\nassert solution(\"5\\n1 2 3 3 4\") == \"25\\n\", \"Test 3 failed.\"\nassert solution(\"6\\n1 2 2 3 3\") == \"36\\n\", \"Test 4 failed.\""
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"11\\n3\\n1\\n4\\n2\""
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 4 3 7 5\\n\") == \"11\\n3\\n1\\n4\\n2\\n\""
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"\"\"11\n3\n1\n4\n2\"\"\""
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output\nprint(\"OK\")"
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '11\\n3\\n1\\n4\\n2'"
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 4 3 7 5\") == \"11\\n3\\n1\\n4\\n2\"\n"
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 4 3 7 5\\n\") == \"11\\n3\\n1\\n4\\n2\\n\"\nassert solution(\"5\\n1 4 3 7 6\\n\") == \"11\\n3\\n1\\n4\\n2\\n\"\nassert solution(\"5\\n1 4 3 7 5\\n\") == \"11\\n3\\n1\\n4\\n2\\n\"\nassert solution(\"5\\n1 4 3 7 6\\n\") == \"11\\n3\\n1\\n4\\n2\\n\"\nassert solution(\"5\\n1 4 3 7 5\\n\") == \"11\\n3\\n1\\n4\\n2\\n\""
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 4 3 7 5\") == \"11\\n3\\n1\\n4\\n2\"\nassert solution(\"6\\n1 2 3 4 5\") == \"16\\n1\"\nassert solution(\"7\\n1 2 3 4 5 6 7 8 9\") == \"21\\n2\"\nassert solution(\"8\\n1 2 3 4 5 6 7 8\") == \"24\\n2\"\nassert solution(\"9\\n1 2 3 4 5 6 7 8 9 10\") == \"29\\n2\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"36\\n2\"\nassert solution(\"11\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\") == \"45\\n2\""
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 4 3 7 5\") == \"11\\n3\\n1\\n4\\n2\"\nassert solution(\"5\\n1 4 3 7 6\") == \"12\\n4\\n1\\n3\"\nassert solution(\"5\\n1 4 3 7 5\") == \"11\\n3\\n1\\n4\\n2\"\nassert solution(\"5\\n1 4 3 7 5\") == \"11\\n3\\n1\\n4\\n2\"\nassert solution(\"5\\n1 4 3 7 5\") == \"11\\n3\\n1\\n4\\n2\""
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"11\\n3\\n1\\n4\\n2\\n\"\nassert solution(\"5\\n1 4 3 7 5\\n\") == \"11\\n3\\n1\\n4\\n2\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9\\n\") == \"10\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n\"\nassert solution(\"1\\n2 3\\n\") == \"2\\n1\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9\\n10 5\\n\") == \"10\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n\""
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), \"Test case failed\"\n"
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('6 1\\n10.245\\n') == '10.25\\n'\nassert solution('6 2\\n10.245\\n') == '10.3\\n'\nassert solution('3 100\\n9.2\\n') == '9.2\\n'"
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('6 1\\n10.245\\n') == '10.25\\n'\nassert solution('6 2\\n10.245\\n') == '10.3\\n'\nassert solution('3 100\\n9.2\\n') == '9.2\\n'"
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 1\\n10.245\") == \"10.25\"\nassert solution(\"6 2\\n10.245\") == \"10.3\"\nassert solution(\"3 100\\n9.2\") == \"9.2\""
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 1\\n10.245\") == \"10.25\\n\"\nassert solution(\"6 2\\n10.245\") == \"10.3\\n\"\nassert solution(\"3 100\\n9.2\") == \"9.2\\n\""
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 1\\n10.245\\n\") == \"10.25\\n\"\nassert solution(\"6 2\\n10.245\\n\") == \"10.3\\n\"\nassert solution(\"3 100\\n9.2\\n\") == \"9.2\\n\""
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(6, 1) == \"10.25\"\nassert solution(6, 2) == \"10.3\"\nassert solution(3, 100) == \"9.2\""
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 1\\n10.245\") == \"10.25\"\nassert solution(\"6 2\\n10.245\") == \"10.3\"\nassert solution(\"3 100\\n9.2\") == \"9.2\""
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 1\\n10.245\") == \"10.25\"\nassert solution(\"6 2\\n10.245\") == \"10.3\"\nassert solution(\"3 100\\n9.2\") == \"9.2\""
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 1\\n10.245\\n\") == \"10.25\\n\"\nassert solution(\"6 2\\n10.245\\n\") == \"10.3\\n\"\nassert solution(\"3 100\\n9.2\\n\") == \"9.2\\n\"\nassert solution(\"5 1\\n10.15\\n\") == \"10.15\\n\"\nassert solution(\"5 2\\n10.15\\n\") == \"10.2\\n\"\nassert solution(\"3 1\\n10.005\\n\") == \"10.005\\n\"\nassert solution(\"3 1\\n10.00499\\n\") == \"10.005\\n\"\nassert solution(\"3 1\\n10.00501\\n\") == \"10.005\\n\"\nassert solution(\"3 1\\n10.00502\\n\") == \"10.005\\n\"\nassert solution(\"3 1\\n10.00503\\n\") == \"10.005\\n\"\nassert solution(\"3 1\\n10.00504\\n\") == \"10.005\\n\"\nassert solution(\"3 1\\n10.00505\\n\") == \"10.005\\n\"\nassert solution(\"3 1\\n10.00506\\n\") == \"10.005\\n\"\nassert solution(\"3 1\\n10.00507\\n\") == \"10.005\\n\"\nassert solution(\"3 1\\n10.00508\\n\") == \"10.005\\n\"\nassert solution(\"3 1\\n10.00509\\n\") == \"10.005\\n\"\nassert solution(\"3 1\\n10.00510\\n\") == \"10.005\\n\"\nassert solution(\"3 1\\n10.00511\\n\") == \"10.005\\n\"\nassert solution(\"3 1\\n10.00512\\n\") == \"10.005\\n\"\nassert solution(\"3 1\\n10.00513\\n\") == \"10.005\\n\"\nassert solution(\"3 1\\n10.00514\\n\") == \"10.005\\n\"\nassert solution(\"3 1\\n10.00515\\n\") == \"10.005\\n\"\nassert solution(\"3 1\\n10.00516\\n\") == \"10.005\\n\"\nassert solution(\"3 1\\n10.00517\\n\") == \"10.005\\n\"\nassert solution(\"3 1\\n10.00518\\n\") == \"10.005\\n\"\nassert solution(\"3 1\\n10.00519\\n\") == \"10.005\\n\"\nassert solution(\"3 1\\n10.00520\\n\") == \"10.005\\n\"\nassert solution(\"3 1\\n10.00521\\n\") == \"10.005\\n\"\nassert solution(\"3 1\\n10.00522\\n\") == \"10.005\\n\"\nassert solution(\"3 1\\n10.00523\\n\") == \"10.005\\n\"\nassert solution(\"3 1\\n10.00524\\n\") == \"10.005\\n\"\nassert solution(\"3 1\\n10.00525\\n\") == \"10.005\\n\"\nassert solution(\"3 1\\n10.00526\\n\") == \"10.005\\n\"\nassert solution(\"3 1\\n10.00527\\n\") == \"10.005"
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"\n\nassert solution(\"1 2 2 1\") == \"0110\""
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"\nassert solution(\"1 2 2 1\") == \"0110\""
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\", \"Incorrect solution for example 1\"\nassert solution(\"1 2 2 1\") == \"0110\", \"Incorrect solution for example 2\""
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 2 3 4') == 'Impossible'\nassert solution('1 2 2 1') == '0110'\n\nprint('All test cases passed')"
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"\nassert solution(\"1 2 2 1\") == \"0110\""
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"\nassert solution(\"1 2 2 1\") == \"0110\""
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"\nassert solution(\"1 2 2 1\") == \"0110\""
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 2 3 4') == 'Impossible'\nassert solution('1 2 2 1') == '0110'"
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"\nassert solution(\"1 2 2 1\") == \"0110\""
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"\nassert solution(\"1 2 2 1\") == \"0110\""
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(7) == \"3\\n\"\nassert solution(10) == \"2\\n\""
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(solution_input) == expected_output, f\"Test case {i+1} failed. Got {solution(solution_input)}, expected {expected_output}\""
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('7\\n*..P*P*\\n') == '3\\n'\nassert solution('10\\n.**PP.*P.*\\n') == '2\\n'"
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7\\n*..P*P*\\n\") == \"3\\n\"\nassert solution(\"10\\n.**PP.*P.*\\n\") == \"2\\n\""
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7\\n*..P*P*\\n\") == \"3\\n\"\nassert solution(\"10\\n.**PP.*P.*\\n\") == \"2\\n\"\nassert solution(\"7\\n*..P*P*\\n\") == \"3\\n\"\nassert solution(\"10\\n.**PP.*P.*\\n\") == \"2\\n\""
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\\n*..P*P*\\n\") == \"3\"\nassert solution(\"10\\n.**PP.*P.*\\n\") == \"2\"\n"
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7\\n*..P*P*\\n\") == \"3\\n\"\nassert solution(\"10\\n.**PP.*P.*\\n\") == \"2\\n\""
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_data) == output_data, f\"Test case {i+1} failed.\"\nfor i, test in enumerate(tests):\n    input_data, output_data = test\n    assert solution(input_data) == output_data, f\"Test case {i+1} failed.\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(2) == 8, \"Expected 8, got {}\".format(solution(2))\nassert solution(3) == 16, \"Expected 16, got {}\".format(solution(3))\nassert solution(4) == 24, \"Expected 24, got {}\".format(solution(4))"
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == 4\nassert solution(2) == 8\nassert solution(3) == 16\n\nfrom typing import List\n"
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == 4\nassert solution(2) == 8\nassert solution(3) == 16"
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Test failed. Expected output: {output()}, Received: {solution(input())}\""
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == \"4\"\nassert solution(2) == \"8\"\nassert solution(3) == \"16\""
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == 4\nassert solution(2) == 8\nassert solution(3) == 16"
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"4\"\nassert solution(\"2\") == \"8\"\nassert solution(\"3\") == \"16\""
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"4\\n8\\n16\""
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n2\\n3\\n\") == \"4\\n\"\nassert solution(\"2\\n8\\n3\\n\") == \"8\\n\"\nassert solution(\"3\\n16\\n3\\n\") == \"16\\n\""
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"9 9 5 5 2 1\") == \"1 3 9 7\"\nassert solution(\"100 100 52 50 46 56\") == \"17 8 86 92\""
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '1 3 9 7'\nprint(\"All tests passed!\")"
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"1 3 9 7\", \"Incorrect output\"\nassert solution(input()) == \"17 8 86 92\", \"Incorrect output\""
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, Actual output: {solution(stdin)}\""
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == expected_output, f\"The provided solution is not correct. Expected output: {expected_output}, but got: {solution}\""
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"9 9 5 5 2 1\") == \"1 3 9 7\"\nassert solution(\"100 100 52 50 46 56\") == \"17 8 86 92\""
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"9 9 5 5 2 1\") == \"1 3 9 7\"\nassert solution(\"100 100 52 50 46 56\") == \"17 8 86 92\""
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"9 9 5 5 2 1\") == \"1 3 9 7\\n\"\nassert solution(\"100 100 52 50 46 56\") == \"17 8 86 92\\n\""
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"9 9 5 5 2 1\") == \"1 3 9 7\"\nassert solution(\"100 100 52 50 46 56\") == \"17 8 86 92\""
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"9 9 5 5 2 1\") == \"1 3 9 7\"\nassert solution(\"100 100 52 50 46 56\") == \"17 8 86 92\""
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('FTFFTFFF') == 'Yes'"
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('FTFFTFFF\\n4 2') == 'Yes', \"Sample Output is incorrect.\"\nassert solution('TTTTTTTT\\n4 2') == 'No', \"Sample Output is incorrect.\""
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"FTFFTFFF\") == \"Yes\", \"Output should be Yes\"\nassert solution(\"TFFTTFF\") == \"Yes\", \"Output should be Yes\"\nassert solution(\"TTFFTTF\") == \"No\", \"Output should be No\"\nassert solution(\"FFTTTTT\") == \"No\", \"Output should be No\"\nassert solution(\"TTTTTTT\") == \"No\", \"Output should be No\"\nassert solution(\"TTTTTTF\") == \"Yes\", \"Output should be Yes\"\n"
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"FTFFTFFF\") == \"Yes\\n\"\n"
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"FTFFTFFF\\n4 2\") == \"Yes\""
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"FTFFTFFF\") == \"Yes\"\nassert solution(\"4 2\") == \"No\""
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"FTFFTFFF\\n4 2\") == \"Yes\\n\"\nassert solution(\"TFTFFTFF\\n3 4\") == \"Yes\\n\"\nassert solution(\"TFFTTFF\\n3 3\") == \"No\\n\"\nassert solution(\"TTFFTFT\\n1 2\") == \"No\\n\"\nassert solution(\"TTFFTTF\\n3 2\") == \"No\\n\"\nassert solution(\"TTTTTT\\n1 1\") == \"No\\n\""
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('FTFFTFFF\\n4 2') == 'Yes\\n'\nprint('All tests passed!')"
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"FTFFTFFF\\n4 2\") == \"Yes\"\nassert solution(\"TTFTFTT\") == \"No\"\nassert solution(\"TTFFTT\") == \"No\"\nassert solution(\"TTFFTTFF\") == \"No\"\nassert solution(\"FTFFFTFF\") == \"No\"\nassert solution(\"TTFFTTFF\") == \"No\"\nassert solution(\"FTFFFTFF\") == \"No\"\nassert solution(\"TTFFTTFF\") == \"No\""
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"FTFFTFFF\\n4 2\") == \"Yes\"\nassert solution(\"FTFFTTFF\\n4 2\") == \"Yes\"\nassert solution(\"FTFFTTTT\\n4 2\") == \"No\"\nassert solution(\"FTFFTTFF\\n5 2\") == \"No\"\nassert solution(\"FTFFTTTT\\n5 2\") == \"No\""
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(4) == \"6\""
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2\", \"The number of perfect sets containing integers not greater than 2 is not correct.\"\nassert solution(stdin) == \"3\", \"The number of perfect sets containing integers not greater than 3 is not correct.\"\nassert solution(stdin) == \"5\", \"The number of perfect sets containing integers not greater than 5 is not correct.\"\nassert solution(stdin) == \"6\", \"The number of perfect sets containing integers not greater than 6 is not correct.\""
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == \"2\"\nassert solution(2) == \"3\"\nassert solution(3) == \"5\"\nassert solution(4) == \"6\"\n\nfrom math import pow\n"
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == 2\nassert solution(2) == 3\nassert solution(3) == 5\nassert solution(4) == 6"
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == '2'\nassert solution(2) == '3'\nassert solution(3) == '5'\nassert solution(4) == '6'\n\nimport math"
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2\\n\"\nassert solution(input()) == \"3\\n\"\nassert solution(input()) == \"5\\n\"\nassert solution(input()) == \"6\\n\"\nassert solution(input()) == \"2\\n\""
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2\", \"The solution is incorrect.\""
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n\") == \"2\\n\"\nassert solution(\"2\\n\") == \"3\\n\"\nassert solution(\"3\\n\") == \"5\\n\"\nassert solution(\"4\\n\") == \"6\\n\""
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n1 2 3\\n3') == '1.3333333333'\nassert solution('5\\n1 2 3 4 5\\n3') == '1.6666666667'\nassert solution('3\\n1 2 3\\n5') == '3.5'\nassert solution('3\\n1 2 3\\n1000') == 'Infinity'"
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"1.3333333333\", \"Test Case 1 failed\"\nassert solution(input()) == \"1.3333333333\", \"Test Case 2 failed\"\nassert solution(input()) == \"1.3333333333\", \"Test Case 3 failed\"\nassert solution(input()) == \"1.3333333333\", \"Test Case 4 failed\"\nassert solution(input()) == \"1.3333333333\", \"Test Case 5 failed\""
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 1.3333333333"
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 2 3\\n3\") == \"1.3333333333\\n\", \"Maxim has opened his own restaurant! The restaurant has got a huge table, the table's length is p meters. Maxim has got a dinner party tonight, n guests will come to him. Let's index the guests of Maxim's restaurant from 1 to n. Maxim knows the sizes of all guests that are going to come to him. The i-th guest's size (a_{i}) represents the number of meters the guest is going to take up if he sits at the restaurant table. Long before the dinner, the guests line up in a queue in front of the restaurant in some order. Then Maxim lets the guests in, one by one. Maxim stops letting the guests in when there is no place at the restaurant table for another guest in the queue. There is no place at the restaurant table for another guest in the queue, if the sum of sizes of all guests in the restaurant plus the size of this guest from the queue is larger than p. In this case, not to offend the guest who has no place at the table, Maxim doesn't let any other guest in the restaurant, even if one of the following guests in the queue would have fit in at the table. Maxim is now wondering, what is the average number of visitors who have come to the restaurant for all possible n! orders of guests in the queue. Help Maxim, calculate this number.\"\n\nfor _ in range(3):\n    solution(\"3\\n1 2 3\\n3\")\n"
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\na_1 a_2 a_3\\na_1 a_3 a_2\\np 3\\n\") == \"1.3333333333\"\nassert solution(\"3\\na_1 a_2 a_3\\na_2 a_3 a_1\\np 3\\n\") == \"0.6666666667\"\nassert solution(\"5\\na_1 a_2 a_3 a_4 a_5\\na_1 a_5 a_2 a_4 a_3\\np 4\\n\") == \"2.6666666667\""
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n\") == \"1.3333333333\""
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\na_1 2 a_2 3\\np 3\") == \"1.3333333333\""
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 2 3\\n3\") == \"1.3333333333\" # expected output: 1.3333333333\n"
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 2 3') == '1.3333333333'\nassert solution('3') == '1'\nassert solution('4 2 1') == '1.0000000000'\nassert solution('3\\n1\\n3\\n4\\n2\\n1') == '1.6666666667'\nassert solution('10 20 30 40 50') == '0.0000000000'"
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\na_1 a_2 a_3\\n3\\na_1 a_2 a_3\\n3') == '1.3333333333'\nassert solution('4\\na_1 a_2 a_3 a_4\\n2 2 2 2\\n2') == '0.0'\nassert solution('5\\na_1 a_2 a_3 a_4 a_5\\n1 2 3 4 5\\n1') == '0.0'\nassert solution('6\\na_1 a_2 a_3 a_4 a_5 a_6\\n2 3 4 5 6 6\\n1') == '0.0'\nassert solution('7\\na_1 a_2 a_3 a_4 a_5 a_6 a_7\\n2 3 4 5 6 7 7\\n1') == '0.0'\nassert solution('8\\na_1 a_2 a_3 a_4 a_5 a_6 a_7 a_8\\n1 1 2 3 4 5 6 7 8\\n1') == '0.0'\nassert solution('9\\na_1 a_2 a_3 a_4 a_5 a_6 a_7 a_8 a_9\\n2 2 3 4 5 6 7 8 9 9\\n1') == '0.0'\nassert solution('10\\na_1 a_2 a_3 a_4 a_5 a_6 a_7 a_8 a_9 a_10\\n3 3 4 5 6 7 8 9 10 10\\n1') == '0.0'\nassert solution('11\\na_1 a_2 a_3 a_4 a_5 a_6 a_7 a_8 a_9 a_10 a_11\\n4 4 5 6 7 8 9 10 11 11\\n1') == '0.0'\nassert solution('12\\na_1 a_2 a_3 a_4 a_5 a_6 a_7 a_8 a_9 a_10 a_11 a_12\\n5 5 6 7 8 9 10 11 12 12\\n1') == '0.0'\nassert solution('13\\na_1 a_2 a_3 a_4 a_5 a_6 a_7 a_8 a_9 a_10 a_11 a_12 a_13\\n6 6 7 8 9 10 11 12 13 13\\n1') == '0.0'\nassert solution('14\\na_1 a_2 a_3 a_4 a_5 a_6 a_7 a_8 a_9 a_10 a_11 a_12 a_13 a_14\\n7 7 8 9 10 11 12 13 14 14\\n1') == '0.0'\nassert solution('15\\na_1 a_2 a_3 a_4 a_5 a_6 a_7 a_8 a_9 a_10 a_11 a_12 a_13 a_14 a_15\\n8 8 9 10 11 12 13 14 15 15\\n1') == '0.0'\nassert solution('16\\na_1 a_2 a_3 a_4 a_5 a_6 a_7 a_8 a_9 a_10 a_11 a_12 a_13 a_14 a_15 a_16\\n9 9 10 11 12 13 14 15 16 16\\n1') == '0.0'\nassert solution('17\\na_1 a_2 a_3 a_4 a_5 a_6 a_7 a_8 a_9 a_10 a_11 a_12 a_13 a_14 a_15 a_16 a_17\\n10 10 11 "
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_string) == output_string, f\"Test failed. Input: {input_string}, Output: {output_string}\" for input_string, output_string in zip(input_data, output_data)"
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"13 7\\n986 605\\n\", \"Test Failed\""
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '13 7'\n"
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n    5 1 2\n9 7 11 15 5\n''') == '''\n    13 7\n'''\n\nassert solution('''\n    2 100000 569\n605 986\n''') == '''\n    986 605\n'''"
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 1 2\\n9 7 11 15 5\\n') == '13 7\\n'\nassert solution('2 100000 569\\n605 986\\n') == '986 605\\n'"
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"13 7\", \"Your solution is incorrect\"\nassert solution() == \"986 605\", \"Your solution is incorrect\""
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"13 7\\n986 605\""
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 1 2\\n9 7 11 15 5\\n\") == \"13 7\\n\"\nassert solution(\"2 100000 569\\n605 986\\n\") == \"986 605\\n\"\nassert solution(\"\") == \"\""
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 1 2\\n9 7 11 15 5\\n\") == \"13 7\\n\"\nassert solution(\"2 100000 569\\n605 986\\n\") == \"986 605\\n\""
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 1 2\\n9 7 11 15 5\\n\\n2 100000 569\\n605 986') == '13 7\\n986 605'\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3 2 4 4\\n2 5 4 10\\n\") == \"1\\n\"\nassert solution(\"3 3 3 3 5\\n2 3 5 4 2\\n\") == \"0\\n\"\nassert solution(\"5 5 1 2 3\\n2 2 3\\n\") == \"-1\\n\"\nassert solution(\"3 4 1 1 3\\n2 3 2\\n\") == \"3\\n\"\nassert solution(\"1 1 2 2 3\\n2 3 2\\n\") == \"1\\n\"\nassert solution(\"5 5 3 3 1\\n2 3 2\\n\") == \"0\\n\""
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(solution1_input) == solution1_output, \"Test case 1 failed.\"\nassert solution(solution2_input) == solution2_output, \"Test case 2 failed.\"\nassert solution(solution3_input) == solution3_output, \"Test case 3 failed.\"\nassert solution(solution4_input) == solution4_output, \"Test case 4 failed.\"\nassert solution(solution5_input) == solution5_output, \"Test case 5 failed.\""
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3 2 4 4\\n2 5 4 10\") == \"1\"\nassert solution(\"3 3 3 3 5\\n2 3 5 4 2\") == \"0\"\nassert solution(\"5 5 1 2 3\\n2 2 3\") == \"-1\"\nassert solution(\"3 4 1 1 3\\n2 3 2\") == \"3\"\nassert solution(\"3 3 4 2 4\\n1 3 5 2 1\") == \"1\"\nassert solution(\"3 3 4 4 3\\n1 4 2 3 2\") == \"0\"\nassert solution(\"4 3 5 2 2\\n1 4 2\") == \"-1\""
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Your solution is incorrect. Please check the provided code and the example inputs.\""
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 3 2 4 4\\n2 5 4 10\\n') == '1'\nassert solution('3 3 3 3 5\\n2 3 5 4 2\\n') == '0'\nassert solution('5 5 1 2 3\\n2 2 3\\n') == '-1'\nassert solution('3 4 1 1 3\\n2 3 2\\n') == '3'"
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3 2 4 4\\n2 5 4 10\\n\") == 1\nassert solution(\"3 3 3 3 5\\n2 3 5 4 2\\n\") == 0\nassert solution(\"5 5 1 2 3\\n2 2 3\\n\") == -1\nassert solution(\"3 4 1 1 3\\n2 3 2\\n\") == 3"
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 3 2 4 4\\n2 5 4 10\\n') == '1'\nassert solution('3 3 3 3 5\\n2 3 5 4 2\\n') == '0'\nassert solution('5 5 1 2 3\\n2 2 3\\n') == '-1'\nassert solution('3 4 1 1 3\\n2 3 2\\n') == '3'"
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 3 2 4 4') == '1\\n'\nassert solution('3 3 3 3 5') == '0\\n'\nassert solution('5 5 1 2 3') == '-1\\n'\nassert solution('3 4 1 1 3') == '3\\n'\n\nfrom typing import List"
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3 2 4 4\\n2 5 4 10\\n\") == \"1\\n\"\nassert solution(\"3 3 3 3 5\\n2 3 5 4 2\\n\") == \"0\\n\"\nassert solution(\"5 5 1 2 3\\n2 2 3\\n\") == \"-1\\n\"\nassert solution(\"3 4 1 1 3\\n2 3 2\\n\") == \"3\\n\""
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output\nprint(\"Pass\") if solution(input()) == \"Pass\" else print(\"Fail\")"
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2\\nG3 G3\\n') == '0\\n'\nassert solution('4\\nG4 R4 R3 B3\\n') == '2\\n'\nassert solution('5\\nB1 Y1 W1 G1 R1\\n') == '4\\n'\n"
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 0, \"Expected 0, got {}\".format(solution())\n\nassert solution() == 2, \"Expected 2, got {}\".format(solution())\n\nassert solution() == 4, \"Expected 4, got {}\".format(solution())"
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 0, \"The minimum number of hints should be 0 for the first sample\"\nassert solution() == 2, \"The minimum number of hints should be 2 for the second sample\"\nassert solution() == 4, \"The minimum number of hints should be 4 for the third sample\""
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '0\\n', \"The expected output is 0, but got \" + solution(stdin) + \"\\n\"\n\nfor i in range(1, 10):\n    assert solution(f\"Input{i}\") == str(i) + '\\n', f\"The expected output is {i}, but got {solution(f'Input{i}')}\"\n\nfor i in range(1, 6):\n    assert solution(f\"Input{i}\") == str(i) + '\\n', f\"The expected output is {i}, but got {solution(f'Input{i}')}\"\n\nassert solution(f\"Input5\") == \"4\\n\", \"The expected output is 4, but got \" + solution(f\"Input5\") + \"\\n\""
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2\\nG3 G3\\n') == 0\nassert solution('4\\nG4 R4 R3 B3\\n') == 2\nassert solution('5\\nB1 Y1 W1 G1 R1\\n') == 4\n"
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 0, \"Expected 0, got {}\".format(solution())"
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\nG3 G3\\n\") == \"0\\n\"\nassert solution(\"4\\nG4 R4 R3 B3\\n\") == \"2\\n\"\nassert solution(\"5\\nB1 Y1 W1 G1 R1\\n\") == \"4\\n\""
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\nG3 G3\\n\") == \"0\"\nassert solution(\"4\\nG4 R4 R3 B3\\n\") == \"2\"\nassert solution(\"5\\nB1 Y1 W1 G1 R1\\n\") == \"4\""
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"0\", \"Example 1\"\n\nassert solution(stdin) == \"2\", \"Example 2\"\n\nassert solution(stdin) == \"4\", \"Example 3\"\n\nassert solution(stdin) == \"4\", \"Example 4\""
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\nG4 R4 R3 B3') == '0'\nassert solution('5\\nB1 Y1 W1 G1 R1') == '4'"
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n3 3 4 3\\n4 7 6 5\\n\\n2\\n1 1\\n100 100\\n\\n5\\n10 30 5 6 24\\n10 41 7 8 24\\n\") == \"2 6\\n1 1\\n\"\nassert solution(\"2\\n1 1\\n100 100\\n\\n5\\n10 30 5 6 24\\n10 41 7 8 24\\n\") == \"1 1\\n\"\nassert solution(\"5\\n10 30 5 6 24\\n10 41 7 8 24\\n\\n\\n\") == \"3 11\\n\""
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n3 3 4 3\\n4 7 6 5\\n\") == \"2 6\\n\"\nassert solution(\"2\\n1 1\\n100 100\\n\") == \"1 1\\n\"\nassert solution(\"5\\n10 30 5 6 24\\n10 41 7 8 24\\n\") == \"3 11\\n\""
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(r'4\\n3 3 4 3\\n4 7 6 5\\n2\\n1 1\\n100 100\\n1\\n11\\n') == '2 6\\n'\nassert solution(r'2\\n1 1\\n100 100\\n1\\n11\\n') == '1 1\\n'\nassert solution(r'5\\n10 30 5 6 24\\n10 41 7 8 24\\n') == '3 11\\n'"
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n3 3 4 3\\n4 7 6 5\\n2\\n1 1\\n100 100\\n5\\n10 30 5 6 24\\n10 41 7 8 24\") == \"2 6\"\nassert solution(\"2\\n1 1\\n100 100\") == \"1 1\"\nassert solution(\"5\\n10 30 5 6 24\\n10 41 7 8 24\") == \"3 11\""
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n3 3 4 3\\n4 7 6 5\\n2\\n1 1\\n100 100\\n5\\n10 30 5 6 24\\n10 41 7 8 24\") == \"2 6\"\nassert solution(\"2\\n1 1\\n100 100\\n1\\n1\") == \"1 1\"\nassert solution(\"5\\n10 30 5 6 24\\n10 41 7 8 24\") == \"3 11\""
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n3 3 4 3\\n4 7 6 5\\n\") == \"2 6\\n\"\nassert solution(\"2\\n1 1\\n100 100\\n\") == \"1 1\\n\"\nassert solution(\"5\\n10 30 5 6 24\\n10 41 7 8 24\\n\") == \"3 11\\n\""
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n3 3 4 3\\n4 7 6 5\\n2\\n1 1\\n100 100\\n5\\n10 30 5 6 24\\n10 41 7 8 24\") == \"2 6\"\nassert solution(\"2\\n1 1\\n100 100\\n5\\n10 30 5 6 24\\n10 41 7 8 24\") == \"1 1\"\nassert solution(\"5\\n10 30 5 6 24\\n10 41 7 8 24\\n10 41 7 8 24\\n10 41 7 8 24\\n10 41 7 8 24\") == \"3 11\""
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n3 3 4 3\\n4 7 6 5\\n\") == \"2 6\"\nassert solution(\"2\\n1 1\\n100 100\\n\") == \"1 1\"\nassert solution(\"5\\n10 30 5 6 24\\n10 41 7 8 24\\n\") == \"3 11\""
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n3 3 4 3\\n4 7 6 5\\n\\n2\\n1 1\\n100 100\\n\\n5\\n10 30 5 6 24\\n10 41 7 8 24') == '2 6\\n1 1\\n'"
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 4\") == \"3B\"\nassert solution(\"2 2\") == \"Impossible\"\nassert solution(\"3 2\") == \"1A1B\""
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 4\\n\") == \"3B\\n\"\nassert solution(\"2 2\\n\") == \"Impossible\\n\"\nassert solution(\"3 2\\n\") == \"1A1B\\n\"\n"
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 4\") == \"3B\\n\", \"Output: 3B\\n\"\nassert solution(\"2 2\") == \"Impossible\\n\", \"Output: Impossible\\n\"\nassert solution(\"3 2\") == \"1A1B\\n\", \"Output: 1A1B\\n\""
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()\nprint('Correct')\n\ninput_str = input()\nx = int(input_str.split()[0])\ny = int(input_str.split()[1])"
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 4\") == \"3B\"\nassert solution(\"2 2\") == \"Impossible\"\nassert solution(\"3 2\") == \"1A1B\"\n\nfrom typing import List"
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 4\") == \"3B\\n\"\nassert solution(\"2 2\") == \"Impossible\\n\"\nassert solution(\"3 2\") == \"1A1B\\n\"\n"
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 4\") == \"3B\"\nassert solution(\"2 2\") == \"Impossible\"\nassert solution(\"3 2\") == \"1A1B\""
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 4\") == \"3B\"\nassert solution(\"2 2\") == \"Impossible\"\nassert solution(\"3 2\") == \"1A1B\""
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"Test case failed\""
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3, 2) == 3\nassert solution(5, 4) == 25\nassert solution(10, 3) == 1\n"
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3, 2) == \"3\"\nassert solution(5, 4) == \"25\""
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3, 2) == 3\nassert solution(5, 4) == 25\n"
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3, 2) == 3\nassert solution(5, 4) == 25\nassert solution(1, 1) == 1\nassert solution(3, 4) == 6\nassert solution(1, 3) == 0"
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 3\nassert solution(5) == 25"
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"3\\n\"\nassert solution(input()) == \"25\\n\""
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"The solution is incorrect. The output is '{output}', but the expected output is '{output}'.\""
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\") == \"3\"\nassert solution(\"5 4\") == \"25\""
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 2') == '3\\n'\nassert solution('5 4') == '25\\n'"
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\") == \"3\\n\"\nassert solution(\"5 4\") == \"25\\n\"\n\nprint(\"All test cases passed\")"
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\") == \"1\\n\"\nassert solution(\"4 1\\n1 2\\n0 2\") == \"1\\n\"\nassert solution(\"1 1\\n1 1\") == \"0\\n\"\nassert solution(\"1 2\\n1 2\\n0 0\") == \"1\\n\"\nassert solution(\"1 2\\n1 2\\n0 0\\n0 0\") == \"0\\n\"\n"
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r').read()) == '1'\nprint(solution(open('input.txt', 'r').read()))"
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1\""
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\").read()) == \"1\"\nprint(\"No output expected for this problem\")"
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == \"1\\n\"\nprint(\"1\")"
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '1', 'Your solution is incorrect!'"
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\") == \"1\"\nassert solution(\"4 3\\n0 1\\n2 3\") == \"1\"\nassert solution(\"3 2\\n1 2\\n3 4\\n4 5\\n6 7\\n8 9\\n10 11\\n12 13\\n14 15\\n16 17\\n18 19\\n20 21\\n22 23\\n24 25\\n26 27\\n28 29\") == \"1\""
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1\\n\", \"Incorrect output\""
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"1\\n\"\n"
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"1\"\nassert solution() == \"1\"\nassert solution() == \"1\"\nassert solution() == \"1\"\nassert solution() == \"1\"\nassert solution() == \"1\""
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\nS.o\\no.o\\no.T\") == \"2\\nRemove the upper-right and lower-left leaves.\"\n"
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r').read()) == 2\nprint('Test Passed')"
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n3 3\nS.o\n.o.\no.T\n''') == '2\\nRemove the upper-right and lower-left leaves.'"
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 3\\nS.o\\n.o.o\\no.T\\n') == '2'\nassert solution('3 3\\n.o\\n.T\\n') == '-1'\nassert solution('3 3\\n.o\\n.o\\n') == '1'\nassert solution('3 3\\n.o\\n.o\\n') == '0'\nprint(\"All tests passed.\")"
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\nS.o\\no.o\\no.T\\n\") == \"2\""
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 3\\nS.o\\no.o.oT\\n') == 2\nassert solution('3 3\\nS.o\\no.o.oT\\n') == -1"
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\nS.o\\n.o.o\\nT\\n\") == \"2\\nRemove the upper-right and lower-left leaves.\\n\"\nassert solution(\"3 3\\nS.o\\n.o.o\\nT\\n\\n\\n\") == \"-1\\n\"\nassert solution(\"3 3\\nS.o\\n.o.o\\nT\\n\\n.o.\\n\") == \"1\\nRemove the upper-right and lower-left leaves.\\n\"\nassert solution(\"3 3\\nS.o\\n.o.o\\nT\\n\\n\\n\\n\") == \"1\\nRemove the upper-right and lower-left leaves.\\n\"\nassert solution(\"3 3\\nS.o\\n.o.o\\nT\\n\\n.o.\\n\\n.o.o\\n\") == \"-1\\n\""
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\nS.o\\n.o.o\\no.T\\n\") == \"2\\nRemove the upper-right and lower-left leaves.\"\nassert solution(\"3 3\\nS.o\\n.o.o\\no.T\\nS\\n\") == \"1\\nRemove the lower-left leaf.\"\nassert solution(\"3 3\\nS.o\\n.o.o\\no.T\\n\") == \"-1\""
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\nS.o\\n.o.o.T\\n\") == \"2\\nRemove the upper-right and lower-left leaves.\"\nassert solution(\"3 3\\n.o.o.o.T\\n\") == \"-1\"\nassert solution(\"4 5\\n.o.o.o.T\\n\") == \"-1\""
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 3\\nS.o\\n.o.o\\no.T\\n') == '2'"
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1\\n\") == \"1\\n\"\nassert solution(\"3 2\\n\") == \"3\\n\"\nassert solution(\"199 200\\n\") == \"200\\n\""
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == \"1\"\nassert solution(3) == \"3\"\nassert solution(199) == \"200\"\nassert solution(1000000000) == \"Infinity\""
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == '1\\n'\nassert solution(3) == '3\\n'\nassert solution(199) == '200\\n'"
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Output\"\nassert solution(input()) == \"Output\"\nassert solution(input()) == \"Output\"\nassert solution(input()) == \"Output\""
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"1\\n\"\nassert solution(\"3 2\") == \"3\\n\"\nassert solution(\"199 200\") == \"200\\n\""
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"200\""
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Output\" # pass\nassert solution(input()) == \"Output\" # pass\nassert solution(input()) == \"Output\" # pass\nassert solution(input()) == \"Output\" # pass\nassert solution(input()) == \"Output\" # pass"
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == 1\nassert solution(3) == 3\nassert solution(199) == 200"
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n5 2\\n3 3\\n\") == \"Aoki\\n\""
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n5 2\\n3 3\\n\") == \"Aoki\"\nassert solution(\"1\\n2 2\\n1 2\\n\") == \"Takahashi\"\nassert solution(\"2\\n3 3\\n5 3\\n\") == \"Aoki\"\nassert solution(\"3\\n3 2\\n5 4\\n\") == \"Takahashi\"\nassert solution(\"4\\n4 4\\n5 5\\n\") == \"Aoki\""
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n5 2\\n3 3\\n\") == \"Aoki\\n\""
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n5 2\\n3 3\\n\") == \"Aoki\""
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n5 2\\n3 3\") == \"Aoki\\n\", \"Test case 1 failed\"\n\nassert solution(\"2\\n5 2\\n3 4\") == \"Aoki\\n\", \"Test case 2 failed\"\n\nassert solution(\"2\\n5 2\\n3 5\") == \"Takahashi\\n\", \"Test case 3 failed\"\n\nassert solution(\"2\\n5 2\\n3 6\") == \"Takahashi\\n\", \"Test case 4 failed\"\n\nassert solution(\"2\\n5 2\\n3 7\") == \"Takahashi\\n\", \"Test case 5 failed\"\n\nassert solution(\"2\\n5 2\\n3 8\") == \"Takahashi\\n\", \"Test case 6 failed\"\n\nassert solution(\"2\\n5 2\\n3 9\") == \"Aoki\\n\", \"Test case 7 failed\"\n\nassert solution(\"2\\n5 2\\n3 10\") == \"Takahashi\\n\", \"Test case 8 failed\"\n\nassert solution(\"2\\n5 2\\n3 11\") == \"Takahashi\\n\", \"Test case 9 failed\"\n\nassert solution(\"2\\n5 2\\n3 12\") == \"Aoki\\n\", \"Test case 10 failed\"\n\nassert solution(\"2\\n5 2\\n3 13\") == \"Aoki\\n\", \"Test case 11 failed\"\n\nassert solution(\"2\\n5 2\\n3 14\") == \"Aoki\\n\", \"Test case 12 failed\"\n\nassert solution(\"2\\n5 2\\n3 15\") == \"Aoki\\n\", \"Test case 13 failed\"\n\nassert solution(\"2\\n5 2\\n3 16\") == \"Aoki\\n\", \"Test case 14 failed\"\n\nassert solution(\"2\\n5 2\\n3 17\") == \"Aoki\\n\", \"Test case 15 failed\"\n\nassert solution(\"2\\n5 2\\n3 18\") == \"Aoki\\n\", \"Test case 16 failed\"\n\nassert solution(\"2\\n5 2\\n3 19\") == \"Aoki\\n\", \"Test case 17 failed\"\n\nassert solution(\"2\\n5 2\\n3 20\") == \"Aoki\\n\", \"Test case 18 failed\"\n\nassert solution(\"2\\n5 2\\n3 21\") == \"Aoki\\n\", \"Test case 19 failed\"\n\nassert solution(\"2\\n5 2\\n3 22\") == \"Aoki\\n\", \"Test case 20 failed\"\n\nassert solution(\"2\\n5 2\\n3 23\") == \"Aoki\\n\", \"Test case 21 failed\"\n\nassert solution(\"2\\n5 2\\n3 24\") == \"Aoki\\n\", \"Test case 22 failed\"\n\nassert solution(\"2\\n5 2\\n3 25\") == \"Aoki\\n\", \"Test case 23 failed\"\n\nassert solution(\"2\\n5 2\\n3 26\") == \"Aoki\\n\", \"Test case 24 failed\"\n\nassert solution(\"2\\n5 2\\n3 27\") == \"Aoki\\n\", \"Test case 25 failed\"\n\nassert solution(\"2\\n5 2\\n3 28\") == \"Aoki\\n\", \"Test case 26 failed\"\n\nassert solution(\"2\\n5 2\\n3 29\") == \"Aoki\\n\", \"Test case 27 failed\"\n\nassert solution(\"2\\n5 2\\n3 30\") == \"Aoki\\n\", \"Test case 28 failed\"\n\nassert solution(\"2\\n5 2\\n3 31\") == \"Aoki\\n\", \"Test case 29 failed\"\n\nassert solution(\"2\\n5 2\\n3 32\") == \"Aoki\\n\", \"Test case 30 failed\"\n\nassert solution(\"2\\n5 2\\n3 33\") == \"Aoki\\n\", \"Test case 31 failed\"\n\nassert solution(\"2\\n5"
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n5 2\\n3 3') == 'Aoki'\nassert solution('1\\n2 2\\n1 1\\n1 1') == 'Takahashi'"
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n5 2\\n3 3\\n\") == \"Aoki\"\nassert solution(\"3\\n2 3\\n1 2\\n\") == \"Takahashi\"\nassert solution(\"3\\n2 3\\n1 2\\n\") == \"Aoki\""
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n5 2\\n3 3\") == \"Aoki\\n\"\nassert solution(\"2\\n5 2\\n3 2\") == \"Takahashi\\n\""
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n5 2\\n3 3\") == \"Aoki\\n\"\nassert solution(\"2\\n10 1\\n5 2\") == \"Takahashi\\n\"\nassert solution(\"2\\n10 1\\n10 1\") == \"Aoki\\n\"\nassert solution(\"3\\n5 2\\n10 1\") == \"Takahashi\\n\"\nassert solution(\"3\\n5 2\\n10 2\") == \"Aoki\\n\"\nassert solution(\"3\\n5 2\\n10 3\") == \"Takahashi\\n\"\nassert solution(\"3\\n5 2\\n10 4\") == \"Aoki\\n\""
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"Aoki\\n\"\n"
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n3 3\\n\") == \"0\\n8\\n\"\nassert solution(\"3 3\\n\") == \"8\\n\""
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 2') == 0\nassert solution('3 3') == 8"
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\n3 3\\n\") == \"0\\n8\"\nassert solution(\"3 3\\n\") == \"8\""
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\n3 3\\n\") == \"0\\n8\""
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 2\\n3 3\\n') == '0\\n'\nassert solution('3 3\\n') == '8\\n'\nprint('All test cases passed.')"
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 2') == '0'\nassert solution('3 3') == '8'"
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '0\\n'"
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"0\"\nassert solution(\"3 3\") == \"8\"\n"
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\") == \"8\""
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 2') == 0\nassert solution('3 3') == 8"
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 2\\n1 2 3 4\\n1 5 3 4\\n') == '1\\n'\nassert solution('2 2\\n1 2 3 4\\n1 5 6 4\\n') == '0\\n'\nassert solution('2 3\\n1 2 4 5\\n1 2 1 3 2 3\\n') == '-1\\n'"
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=input()) == expected, f\"Test failed: Expected output: {expected}, Received output: {solution(stdin=input())}\"\nprint(\"All tests passed successfully!\")"
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output"
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 2\\n1 2 3 4\\n1 5 3 4\\n') == '1\\n'\nassert solution('2 2\\n1 2 3 4\\n1 5 6 4\\n') == '0\\n'\nassert solution('2 3\\n1 2 4 5\\n1 2 1 3 2 3\\n') == '-1\\n'\nassert solution('2 3\\n1 2 4 5\\n1 2 1 3 2 4\\n') == '-1\\n'\nassert solution('2 3\\n1 2 4 5\\n1 2 1 3 2 5\\n') == '-1\\n'\nassert solution('2 3\\n1 2 4 5\\n1 2 1 3 2 6\\n') == '-1\\n'\nassert solution('2 3\\n1 2 4 5\\n1 2 1 3 2 7\\n') == '-1\\n'\nassert solution('2 3\\n1 2 4 5\\n1 2 1 3 2 8\\n') == '-1\\n'\nassert solution('2 3\\n1 2 4 5\\n1 2 1 3 2 9\\n') == '-1\\n'"
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 2\\n1 2 3 4\\n1 5 3 4') == '1'\nassert solution('2 2\\n1 2 3 4\\n1 5 6 4') == '0'\nassert solution('2 3\\n1 2 4 5\\n1 2 1 3 2 3') == '-1'"
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\n1 2 3 4\\n1 5 3 4\") == \"1\"\nassert solution(\"2 2\\n1 2 3 4\\n1 5 6 4\") == \"0\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 3\") == \"-1\""
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n1 2 3 4\\n1 5 3 4\") == \"1\"\nassert solution(\"2 2\\n1 2 3 4\\n1 5 6 4\") == \"0\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 3\") == \"-1\"\n"
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"TODO\"\n"
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 2\\n1 2 3 4\\n1 5 3 4') == '1\\n'\nassert solution('2 2\\n1 2 3 4\\n1 5 6 4') == '0\\n'\nassert solution('2 3\\n1 2 4 5\\n1 2 1 3 2 3') == '-1\\n'\n"
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n1 2 3 4\\n1 5 3 4\") == \"1\"\nassert solution(\"2 2\\n1 2 3 4\\n1 5 6 4\") == \"0\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 3\") == \"-1\""
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"24\") == \"17:30\"\nassert solution(\"12\") == \"07:30\"\nassert solution(\"24\") == \"09:09\""
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"24\") == \"17:30\"\nassert solution(\"12\") == \"07:30\"\nassert solution(\"24\") == \"09:09\""
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"24\\n17:30\") == \"17:30\"\nassert solution(\"12\\n17:30\") == \"07:30\"\nassert solution(\"24\\n99:99\") == \"09:09\""
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"24\") == \"17:30\"\nassert solution(\"12\") == \"07:30\"\nassert solution(\"24\") == \"09:09\""
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"12\") == \"07:30\"\nassert solution(\"24\") == \"17:30\"\nassert solution(\"12\") == \"01:30\"\nassert solution(\"24\") == \"11:09\"\nassert solution(\"24\") == \"23:59\""
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"24\\n17:30\") == \"17:30\"\nassert solution(\"12\\n17:30\") == \"07:30\"\nassert solution(\"24\\n99:99\") == \"09:09\""
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input(\"Enter 12 or 24 hours format: \")) == output(\"17:30\")\nassert solution(input(\"Enter 12 or 24 hours format: \")) == output(\"07:30\")\nassert solution(input(\"Enter 12 or 24 hours format: \")) == output(\"09:09\")"
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"24\") == \"17:30\"\nassert solution(\"12\") == \"07:30\"\nassert solution(\"24\") == \"09:09\""
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"24\\n17:30\") == \"17:30\"\nassert solution(\"12\\n17:30\") == \"07:30\"\nassert solution(\"24\\n99:99\") == \"09:09\""
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"The output should be {expected_output}, but it is {solution(input())}.\""
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\") == \"6\""
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\") == \"6\"\n"
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\") == \"6\""
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\") == \"6\\n\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"6\""
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\") == \"6\""
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"6\\n\", \"Sample Output not matching the expected output.\""
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\") == \"6\""
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''3 3\n2\n1 2 1\n2 3 1\n3 1 1''') == '6'\nassert solution('''4 6\n1\n1 1 1 1 1\n2 2 2 2 2\n3 3 3 3 3\n4 4 4 4 4\n5 5 5 5 5\n6 6 6 6 6\n''') == '15'\nassert solution('''3 3\n4\n1 1 1 1\n2 2 2 2\n3 3 3 3\n4 4 4 4\n''') == '10'\n"
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\") == \"6\\n\"\nassert solution(\"4 1\\n2\\n1 2 1\\n2 3 1\\n3 1 1\\n4 2 1\\n\") == \"4\\n\""
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Expected: {output}\\nGot: {solution(input())}\""
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n2 0 3 0 1 1\\n\\n5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6\") == \"5\\n2 1\\n2 5\\n3 3\\n3 6\"\n\nassert solution(\"1\\n0\\n\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\"
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input) == expected, f\"Test {test_case_number} failed\""
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6\\n2 0 3 0 1 1\\n') == '5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6\\n'\nassert solution('1\\n0\\n') == '0\\n'\nassert solution('6\\n3 2 2 2 1 1\\n') == '-1\\n'"
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6\"\n\nsolution() == \"5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6\""
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=input()) == expected_output, f\"Expected output: {expected_output}, Actual output: {solution(stdin=input())}\""
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n2 0 3 0 1 1\") == \"5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"6\\n3 2 2 2 1 1\") == \"-1\""
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n2 0 3 0 1 1\\n\") == \"5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6\\n\"\nassert solution(\"1\\n0\\n\") == \"0\\n\"\nassert solution(\"6\\n3 2 2 2 1 1\\n\") == \"-1\"\n"
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n6\n2 0 3 0 1 1\n\n''') == '2 1\\n2 5\\n3 3\\n3 6\\n5 6'\n\nassert solution('''\n1\n0\n\n''') == '0'\n\nassert solution('''\n6\n3 2 2 2 1 1\n\n''') == '-1'"
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2 1\\n2 5\\n3 3\\n3 6\\n5 6\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"0\"\nassert solution(input()) == \"5\""
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 8\\n12 20\\n\") == \"2\\n0 4\\n\"\nassert solution(\"3 10\\n10 20 30\\n\") == \"1\\n0\""
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 8\\n12 20\\n') == '2\\n0 4\\n'\nassert solution('3 10\\n10 20 30\\n') == '1\\n0 '\nassert solution('2 12\\n12 20\\n') == '2\\n0 4\\n'\nassert solution('2 12\\n12 20\\n') == '2\\n0 4\\n'"
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 8\\n12 20\\n\") == \"2\\n0 4\\n\"\nassert solution(\"3 10\\n10 20 30\\n\") == \"1\\n0 \""
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"Test case failed\"\n"
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 8\\n12 20\\n') == '2\\n0 4 0'\nassert solution('3 10\\n10 20 30\\n') == '1\\n0'"
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 8\\n12 20\\n') == '2\\n0 4\\n'\nassert solution('3 10\\n10 20 30\\n') == '1\\n0\\n'"
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 8\\n12 20\") == \"2\\n0 4\"\nassert solution(\"3 10\\n10 20 30\") == \"1\\n0\""
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n2 8\n12 20\n\"\"\"\n) == \"\"\"\n2\n0 4 \n\"\"\"\n\nassert solution(\n    \"\"\"\n3 10\n10 20 30\n\"\"\"\n) == \"\"\"\n1\n0 \n\"\"\""
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 8\\n12 20\\n3 10\\n10 20 30\") == \"2\\n0 4 0\\n1\\n0\""
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\\n0 4\""
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 0 5 5\\n3 2\\n-1 -1\\n-1 0\") == \"3.729935587093555327\"\nassert solution(\"0 0 0 1000\\n100 1000\\n-50 0\\n50 0\") == \"11.547005383792516398\""
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3, 2, -1, -1, -1, 0, 5, 5) == 3.73, \"Expected output: 3.73\"\nassert solution(3, 2, -1, -1, -1, 0, 0, 1000) == 11.55, \"Expected output: 11.55\"\nassert solution(0, 0, 0, 1000, -50, 50) == 11.55, \"Expected output: 11.55\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('0 0 5 5\\n3 2\\n-1 -1\\n-1 0') == '3.729935587093555327\\n'\nassert solution('0 0 0 1000\\n100 1000\\n-50 0\\n50 0') == '11.547005383792516398\\n'"
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '3.729935587093555327'\n"
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('0 0 5 5\\n3 2\\n-1 -1\\n-1 0') == '3.729935587093555327'\nassert solution('0 0 0 1000\\n100 1000\\n-50 0\\n50 0') == '11.547005383792516398'"
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 0 5 5\\n3 2\\n-1 -1\\n-1 0\") == \"3.73\"\nassert solution(\"0 0 0 1000\\n100 1000\\n-50 0\\n50 0\") == \"11.55\""
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 0 5 5\\n3 2\\n-1 -1\\n-1 0\") == \"3.729935587093555327\\n\"\nassert solution(\"0 0 0 1000\\n100 1000\\n-50 0\\n50 0\") == \"11.547005383792516398\\n\""
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"0 0 5 5\n3 2\n-1 -1\n-1 0\"\"\") == \"3.729935587093555327\"\nassert solution(\"\"\"0 0 0 1000\n100 1000\n-50 0\n50 0\"\"\") == \"11.547005383792516398\"\n\nassert solution(\"\"\"0 0 5 5\n3 2\n-1 -1\n-1 0\"\"\") == \"3.729935587093555327\"\nassert solution(\"\"\"0 0 0 1000\n100 1000\n-50 0\n50 0\"\"\") == \"11.547005383792516398\""
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"3.729935587093555327\""
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"3.729935587093555327\""
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == 'Second\\nFirst\\nSecond', 'Incorrect solution'"
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\\n\") == \"Second\\nFirst\\nSecond\\n\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 'First\\n'"
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Test case {i+1} failed. Expected: '{output()}' but got: '{solution(input())}'\"\n"
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\") == \"First\\nSecond\\nSecond\\n\"\n\nassert solution(\"1\\n\") == \"Second\\nFirst\\n\"\n\nassert solution(\"2\\n\") == \"First\\nSecond\\n\"\n\nassert solution(\"4\\n1\\n2\\n3\\n4\\n\") == \"First\\nSecond\\nFirst\\nSecond\\nFirst\\nSecond\\nFirst\\nSecond\\nFirst\\nSecond\\n\""
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"First\\nSecond\\nSecond\", \"The code is not correct\""
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\") == \"Second\\nFirst\"\nassert solution(\"3\\n2\\n10\\n1\\n5\\n1 2\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\") == \"Second\""
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\") == \"Second\\nFirst\\nSecond\""
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(str(1)) == \"Second\"\nassert solution(str(2)) == \"First\""
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_data) == expected_output, f\"Test case {i+1} failed.\"\nprint(\"Second\" if solution(input_data) == \"Second\" else \"First\")"
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3 2\\n4 3 1 5 2\") == \"1\""
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3 2\\n4 3 1 5 2\") == \"1\\n\""
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 3 2\\n4 3 1 5 2') == '1\\n'\nassert solution('5 3 4\\n2 3 1 4 2') == '1\\n'\nassert solution('5 4 2\\n3 2 1 3 1') == '1\\n'\nassert solution('5 5 2\\n3 3 1 3 1') == '1\\n'"
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '1\\n', 'The function should return 1 for the sample input.'"
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3 2\\n4 3 1 5 2\") == \"1\""
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3 2\\n4 3 1 5 2\") == \"1\"\nassert solution(\"5 5 2\\n5 4 1 6 2\") == \"0\"\nassert solution(\"5 5 2\\n5 5 1 5 1\") == \"1\"\nassert solution(\"10 10 3\\n1 1 2 3 4\") == \"10\"\nassert solution(\"10 10 3\\n1 2 3 4 5\") == \"1\"\nassert solution(\"10 10 3\\n1 2 4 5 6\") == \"1\"\nassert solution(\"10 10 3\\n1 3 4 5 6\") == \"1\"\nassert solution(\"10 10 3\\n1 4 5 6 7\") == \"1\"\nassert solution(\"10 10 3\\n1 5 6 7 8\") == \"1\"\nassert solution(\"10 10 3\\n1 6 7 8 9\") == \"1\"\nassert solution(\"10 10 3\\n1 7 8 9 10\") == \"1\"\nassert solution(\"10 10 3\\n1 8 9 10 11\") == \"1\"\nassert solution(\"10 10 3\\n1 9 10 11 12\") == \"1\"\nassert solution(\"10 10 3\\n1 10 11 12 13\") == \"1\"\nassert solution(\"10 10 3\\n1 1 2 3 4\") == \"10\""
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3 2\\n4 3 1 5 2\") == \"1\"\nassert solution(\"5 5 10\\n1 2 3 4 5\") == \"1\"\nassert solution(\"5 3 1\\n1 2 3 4 5\") == \"1\""
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3 2\\n4 3 1 5 2\") == \"1\"\nassert solution(\"6 5 2\\n2 4 3 1 5 2\") == \"3\"\nassert solution(\"5 5 2\\n2 4 3 1 5 2\") == \"5\"\nassert solution(\"5 5 2\\n2 4 3 1 5 6\") == \"7\"\nassert solution(\"5 5 2\\n2 4 3 1 5 2\") == \"0\"\n"
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 3 2\\n4 3 1 5 2') == '1\\n'\nassert solution('5 4 2\\n3 4 1 5 2 3') == '1\\n'\nassert solution('10 2 3\\n5 7 9') == '7\\n'\nassert solution('10 1 1\\n1 1 1') == '1\\n'\nassert solution('1000 1000 1000') == '1000000\\n'\n"
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3 2\\n4 3 1 5 2\") == \"1\"\nassert solution(\"5 3 2\\n4 3 1 5 2\\n4 3 2 5 1 4\") == \"1\"\nassert solution(\"5 3 2\\n4 3 1 5 2\\n4 3 2 5 1 4\\n4 3 3 5 2 1\\n4 3 3 5 1 2\") == \"1\"\nassert solution(\"5 3 2\\n4 3 1 5 2\\n4 3 2 5 1 4\\n4 3 3 5 2 1\\n4 3 3 5 1 2\\n4 3 4 5 2 1\\n4 3 4 5 1 2\\n4 3 4 5 2 3\\n4 3 4 5 1 3\\n4 3 4 5 2 4\\n4 3 4 5 1 4\") == \"1\"\nassert solution(\"5 3 2\\n4 3 1 5 2\\n4 3 2 5 1 4\\n4 3 3 5 2 1\\n4 3 3 5 1 2\\n4 3 4 5 2 1\\n4 3 4 5 1 2\\n4 3 4 5 2 3\\n4 3 4 5 1 3\\n4 3 4 5 2 4\\n4 3 4 5 1 4\") == \"1\"\nassert solution(\"5 3 2\\n4 3 1 5 2\\n4 3 2 5 1 4\\n4 3 3 5 2 1\\n4 3 3 5 1 2\\n4 3 4 5 2 1\\n4 3 4 5 1 2\\n4 3 4 5 2 3\\n4 3 4 5 1 3\\n4 3 4 5 2 4\\n4 3 4 5 1 4\") == \"1\"\nassert solution(\"5 3 2\\n4 3 1 5 2\\n4 3 2 5 1 4\\n4 3 3 5 2 1\\n4 3 3 5 1 2\\n4 3 4 5 2 1\\n4 3 4 5 1 2\\n4 3 4 5 2 3\\n4 3 4 5 1 3\\n4 3 4 5 2 4\\n4 3 4 5 1 4\") == \"1\""
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Actual output: {solution(input())}\""
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"24\", \"Expected 24, got %s\" % solution(stdin)"
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_data) == output_data, f\"Test failed for input data {input_data}, expected output {output_data}, got {solution(input_data)}\""
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"24\\n\", \"Output should be 24.\""
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1, 1) == 1\nassert solution(3, 2) == 24"
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\\n\") == \"1\\n\"\nassert solution(\"3 2\\n\") == \"24\\n\""
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"24\""
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1\") == \"1\\n\"\nassert solution(\"3 2\") == \"24\\n\""
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"1\\n\"\nassert solution(\"3 2\") == \"24\\n\"\nassert solution(\"5 3\") == \"120\\n\"\nassert solution(\"2 3\") == \"18\\n\"\nassert solution(\"1 2\") == \"10\\n\"\n"
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"24\""
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"Test failed for {stdin}, expected {expected}, got {solution(stdin)}\""
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 2\\n') == '6\\n'\nassert solution('4 4\\n') == '3\\n'\nassert solution('7 3\\n') == '1196\\n'\nassert solution('31 8\\n') == '64921457\\n'"
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2\") == \"6\"\nassert solution(\"4 4\") == \"3\"\nassert solution(\"7 3\") == \"1196\"\nassert solution(\"31 8\") == \"64921457\""
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"\"\"\n"
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2\") == \"6\\n\"\nassert solution(\"4 4\") == \"3\\n\"\nassert solution(\"7 3\") == \"1196\\n\"\nassert solution(\"31 8\") == \"64921457\\n\""
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'Output the number of non-similar worlds that can be built, modulo 10^9 + 7.\\n'\n"
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(31) == \"64921457\""
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3, 2) == 6\nassert solution(4, 4) == 3\nassert solution(7, 3) == 1196\nassert solution(31, 8) == 64921457"
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(31, 8) == \"64921457\"  # example 2\nassert solution(4, 4) == \"3\"  # example 1\nassert solution(7, 3) == \"1196\"  # example 3\nassert solution(3, 2) == \"6\"  # example 4"
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 4 2\\n#..#\\n..#.\\n#...') == 'X#..#X#..#X#X#X#.X#X#.X#X#.X#X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X#.X#X"
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_str) == output_str, f\"The given solution is incorrect. Please see the example tests.\""
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 'X#X#X#X#'"
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4 2\\n#..#\\n..#.\\n#...\") == \"\"\"#.X#\nX.#.\n"
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4 2\\n#..#\\n..#.\\n#...\") == \".X#\"\nassert solution(\"5 4 5\\n#...\\n#.#.\\n.#..\\n...#\\n.#.#\") == \"#XXX\\n#X#.X\\nX#..#\\n...#X\\n.#.#\""
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    3 4 2\n    #..#\n   ..#.\n    #...\n    \"\"\"\n) == \"#XXX\\n#X#.\\nX#..\\n...#\\n.#.#\\n\"\n\nassert solution(\n    \"\"\"\n    5 4 5\n    #...\n    #.#.\n  .#..\n   ...#\n    #.#.#\n    \"\"\"\n) == \"#XXX\\n#X#.\\nX#..\\n...#\\n.#.#\\n\"\n\nassert solution(\n    \"\"\"\n    10 10 0\n    #..#\n    #.#.#\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n    #...\n   "
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n3 4 2\n"
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"Test Failed\"\n\nn, m, k = map(int, input().split())\nmaze = list(input())\n\ngrid = [[False] * m for _ in range(n)]\n\nvisited = set()\n\nfor i in range(n):\n    for j in range(m):\n        if maze[i][j] == \"#\":\n            grid[i][j] = True\n\nfor _ in range(k):\n    x, y = map(int, input().split())\n    dx, dy = (x, y) if x > y else (y, x)\n\n    for _ in range(abs(x - y)):\n        if not grid[x][y]:\n            break\n        x += dx\n        y += dy\n\n    dx, dy = -dx, -dy\n\n    while x!= y and grid[x][y]:\n        if x - dx in visited and grid[x - dx][y] or y - dy in visited and grid[x][y - dy]:\n            break\n        grid[x][y] = True\n        visited.add((x, y))\n        x += dx\n        y += dy\n\nfor i in range(n):\n    for j in range(m):\n        if grid[i][j] and maze[i][j] == \".\":\n            maze[i][j] = \"#\"\n        elif not grid[i][j] and maze[i][j] == \"#\":\n            maze[i][j] = \".\"\n\nprint(maze)"
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4 2\\n#..#\\n..#.\\n#...\") == \"#XXX\\n#X#.\\nX#..\\n...#\\n.#.#\"\nassert solution(\"5 4 5\\n#...\\n#.#.\\n.#..\\n...#\") == \"#XXX\\n#X#.\\nX#..\\n...#\\n.#.#\""
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"3 4 2\n"
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 1\\n\") == \"1\\n\"\nassert solution(\"5\\n1 2 2 2\\n\") == \"3\\n\"\nassert solution(\"18\\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4\\n\") == \"4\\n\""
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1\\n\", \"Expected 1, got {}\".format(solution(stdin))"
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Testcase failed. The output is not correct. Please check the given code and examples.\""
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1\"\nassert solution() == \"1\"\nassert solution() == \"3\"\nassert solution() == \"4\""
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"3\"\nassert solution(\"18\") == \"4\""
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 1\\n\") == \"1\\n\"\nassert solution(\"5\\n1 2 2 2\\n\") == \"3\\n\"\nassert solution(\"18\\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4\\n\") == \"4\\n\""
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"1\\n\", \"1st example\"\nassert solution(\"5\") == \"3\\n\", \"5th example\"\nassert solution(\"18\") == \"4\\n\", \"18th example\""
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 1\") == \"1\\n\", \"Test case 3 failed\"\nassert solution(\"5\\n1 2 2 2\") == \"3\\n\", \"Test case 4 failed\"\nassert solution(\"18\\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4\") == \"4\\n\", \"Test case 5 failed\"\n\nprint(\"All test cases passed\")"
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 1\") == \"1\\n\"\nassert solution(\"5\\n1 2 2 2\") == \"3\\n\"\nassert solution(\"18\\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4\") == \"4\\n\""
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3 2\") == \"2 4 1 5 3\"\nassert solution(\"1 1 1\") == \"-1\"\nassert solution(\"5 4 3\") == \"-1\"\nassert solution(\"10 3 5\") == \"1 10 10 3 5\""
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3 2\") == \"2 4 1 5 3\"\nassert solution(\"1 2 3\") == \"1 3 2\"\nassert solution(\"1 2\") == -1\nassert solution(\"5 6\") == -1"
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3 2\") == \"2 4 1 5 3\""
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '2 4 1 5 3\\n', 'Incorrect output'"
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3 2\") == \"2 4 1 5 3\""
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3 2\") == \"2 4 1 5 3\""
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 3 2') == '2 4 1 5 3'\nassert solution('1 2 3') == '-1'"
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '2 4 1 5 3\\n'"
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '-1' # no sequences satisfy the conditions\nassert solution('5 3 2') == '2 4 1 5 3' # one longest increasing subsequence of this sequence is {2,4,5}, and one longest decreasing subsequence of it is {4,3}"
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 3 2') == '2 4 1 5 3'"
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 6 9 18 36 108\") == \"Yes\"\nassert solution(\"2 7 17\") == \"No\"\nassert solution(\"9 4 8 10 12 15 18 33 44 81\") == \"Yes\""
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"Yes\", \"Test Failed\""
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"Yes\"\nassert solution() == \"No\"\nassert solution() == \"Yes\""
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"Yes\"\nassert solution(2) == \"No\"\nassert solution(9) == \"Yes\""
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n3 6 9 18 36 108\") == \"Yes\"\nassert solution(\"2\\n7 17\") == \"No\"\nassert solution(\"9\\n4 8 10 12 15 18 33 44 81\") == \"Yes\"\n"
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Input\") == \"Yes\"\nassert solution(\"Input\\n6\\n3 6 9 18 36 108\") == \"Yes\"\nassert solution(\"Input\\n2\\n7 17\") == \"No\"\nassert solution(\"Input\\n9\\n4 8 10 12 15 18 33 44 81\") == \"Yes\""
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"Yes\" # correct output\n"
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"Yes\" # Correct implementation\nassert solution(stdin) == \"No\" # Incorrect implementation"
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('6\\n3 6 9 18 36 108') == 'Yes'\nassert solution('2\\n7 17') == 'No'\nassert solution('9\\n4 8 10 12 15 18 33 44 81') == 'Yes'"
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"Yes\"\nassert solution(4) == \"No\"\nassert solution(6) == \"Yes\"\nassert solution(7) == \"No\"\nassert solution(9) == \"Yes\""
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n1 2 -6 4 5 3\") == \"12\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"6\\n2 2 2 2 2 2\") == \"14\"\nassert solution(\"3\\n1 -2 2\") == \"4\"\nassert solution(\"1\\n1\") == \"1\""
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n1 2 -6 4 5 3\\n\") == \"12\""
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n1 2 -6 4 5 3\") == \"12\"\n"
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n1 2 -6 4 5 3\") == \"12\\n\", \"Test failed\""
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n1 2 -6 4 5 3\") == \"12\""
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"1\\n6\\n1 2 -6 4 5 3\\n\") == \"12\""
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n1 2 -6 4 5 3\") == \"12\""
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n1 2 -6 4 5 3\") == \"12\"\n"
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n1 2 -6 4 5 3\\n\") == \"12\"\nassert solution(\"7\\n1 2 -6 4 5 3\\n\") == \"12\"\nassert solution(\"10\\n1 2 -6 4 5 3\\n\") == \"20\"\nassert solution(\"12\\n1 2 -6 4 5 3\\n\") == \"24\"\nassert solution(\"15\\n1 2 -6 4 5 3\\n\") == \"30\"\nassert solution(\"20\\n1 2 -6 4 5 3\\n\") == \"36\""
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"12\""
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n3 1 4 2\") == \"5\"\nassert solution(\"4 3\\n3 1 4 2\\n1 2\") == \"1\"\nassert solution(\"4 3\\n3 1 4 2\\n1 2\\n2 3\") == \"2\"\nassert solution(\"4 3\\n3 1 4 2\\n1 2\\n2 3\\n3 4\") == \"3\"\nassert solution(\"4 3\\n3 1 4 2\\n1 2\\n2 3\\n3 4\\n4 5\") == \"4\""
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 3\\n3 1 4 2') == '5\\n'\nassert solution('1 1\\n1 1') == '1\\n'"
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n3 1 4 2\") == \"5\"\nassert solution(\"4 3\\n3 1 4 2\") == \"5\""
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"5\""
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"5\""
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n3 1 4 2\\n\") == 5"
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n3 1 4 2\") == \"5\""
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"5\\n\", \"Test failed\""
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('Input\\n4 3\\n3 1 4 2\\n\\nOutput\\n5') == '5'"
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 3\\n3 1 4 2') == '5'"
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n2 3 1\") == \"0 0\\n0 1\\n2 1\"\nassert solution(\"3\\n2 3 1\\n3\\n3 2 1\") == \"2 1\"\nassert solution(\"3\\n3 2 1\\n3\\n1 2 3\") == \"2 1\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n2 3 1\") == \"0 0\\n\"\nassert solution(\"3\\n2 3 1\\n3\\n3 2 1\") == \"0 1\\n2 1\"\nassert solution(\"3\\n3 2 1\\n3\\n2 1 3\") == \"2 1\""
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n1 2 3\\n3\\n2 3 1\\n3\\n3 2 1') == '0 0\\n'\nassert solution('3\\n2 3 1\\n3\\n3 2 1') == '0 1\\n'\nassert solution('3\\n3 2 1\\n3\\n3 2 1') == '2 1\\n'"
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Expected: {output()}, but got: {solution(input())}\""
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '0 0'\nassert solution() == '0 1'\nassert solution() == '2 1'"
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 2 3\") == \"0 0\\n\", \"Test 1\"\nassert solution(\"3\\n2 3 1\") == \"0 1\\n\", \"Test 2\"\nassert solution(\"3\\n3 2 1\") == \"2 1\\n\", \"Test 3\"\n"
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n2 3 1\\n3\\n3 2 1\") == \"0 0\\n0 1\\n2 1\"\nassert solution(\"3\\n2 3 1\\n3\\n3 2 1\\n3\\n3 2 1\") == \"0 1\\n2 1\"\nassert solution(\"3\\n3 2 1\\n3\\n3 2 1\\n3\\n3 2 1\") == \"2 1\""
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n2 3 1\\n3\\n3 2 1\") == \"0 0\\n0 1\\n2 1\"\nassert solution(\"3\\n2 3 1\\n3\\n3 2 1\") == \"0 1\\n2 1\"\nassert solution(\"3\\n3 2 1\\n3\\n3 2 1\") == \"2 1\"\n"
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n2 3 1\\n3\\n3 2 1\") == \"0 0\\n0 1\\n2 1\"\nassert solution(\"3\\n2 3 1\\n3\\n3 2 1\\n3\\n4 2 1\") == \"2 1\"\nassert solution(\"3\\n3 2 1\\n3\\n3 2 1\\n3\\n4 2 1\") == \"2 1\""
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n2 3 1\\n3\\n3 2 1\") == \"0 0\\n0 1\\n2 1\"\nassert solution(\"3\\n2 3 1\\n3\\n3 2 1\\n3\\n3 3 1\") == \"2 1\"\nassert solution(\"3\\n3 2 1\\n3\\n3 3 1\\n3\\n3 2 1\") == \"2 1\""
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 4\\na\\nb\\n') == '6\\n'\nassert solution('3 3\\naba\\nbba\\n') == '8\\n'\nassert solution('4 5\\nabbb\\nbaaa\\n') == '8\\n'"
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 4\\naa\\nbb\\n\") == \"6\\n\"\nassert solution(\"3 3\\naba\\nbba\\n\") == \"8\\n\"\nassert solution(\"4 5\\nabbb\\nbaaa\\n\") == \"8\\n\""
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 4\\na\") == \"6\"\nassert solution(\"3 3\\naba\") == \"8\"\nassert solution(\"4 5\\nabbb\\nbaaa\") == \"8\""
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"6\"\nassert solution(4) == \"8\"\nassert solution(5) == \"8\"\n"
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Output\" # Test case 1\nassert solution(input()) == \"Output\" # Test case 2\nassert solution(input()) == \"Output\" # Test case 3\nassert solution(input()) == \"Output\" # Test case 4\nassert solution(input()) == \"Output\" # Test case 5\nassert solution(input()) == \"Output\" # Test case 6\nassert solution(input()) == \"Output\" # Test case 7"
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 4\\naa\\nbb\\n\") == \"6\"\nassert solution(\"3 3\\naba\\nbba\\n\") == \"8\"\nassert solution(\"4 5\\nabbb\\nbaaa\\n\") == \"8\""
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 4\\na\\nb\\n\") == \"6\"\nassert solution(\"3 3\\nab\\nba\\n\") == \"8\"\nassert solution(\"4 5\\nabbb\\nbaaa\\n\") == \"8\""
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 4\\na\\nb\\n\") == \"6\"\nassert solution(\"3 3\\nab\\nba\\n\") == \"8\"\nassert solution(\"4 5\\nabbb\\nbaaa\\n\") == \"8\"\n"
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 4\\na\\nb\\n\") == \"6\"\nassert solution(\"3 3\\na\\nb\\nc\\n\") == \"8\"\nassert solution(\"4 5\\nabbb\\nabba\\n\") == \"8\""
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 4\\naa\\nbb\\n\") == \"6\"\nassert solution(\"2 4\\naa\\nbb\\n\") == \"6\"\nassert solution(\"2 3\\naba\\nbba\\n\") == \"8\"\nassert solution(\"3 3\\naba\\nbba\\n\") == \"8\"\nassert solution(\"4 5\\nabbb\\nbaaa\\n\") == \"8\"\n"
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1\\n\") == \"YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n\") == \"NO\""
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\") == \"YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"NO\""
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_string=\"0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1\"\n\nassert solution(input_string=\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"NO\""
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1"
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1\\n\") == \"YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1\\n\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"NO\""
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1\""
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == 'YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1'\nassert solution('0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == 'NO'"
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"NO\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"NO\""
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n') == 'YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1\\n'\n\nassert solution('0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n') == 'NO\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"0 0 0\n0 0 1\n0 0 1\n0 0 1\n0 1 1\n0 1 1\n0 1 1\n1 1 1\n\"\"\") == \"YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1\"\n\nassert solution(\"\"\"0 0 0\n0 0 0\n0 0 0\n0 0 0\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n\"\"\") == \"NO\"\n\nassert solution(\"\"\"0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n\"\"\") == \"NO\"\n\nassert solution(\"\"\"0 0 0\n0 0 0\n0 0 0\n0 0 0\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n\"\"\") == \"NO\""
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=input()) == expected\nfor i, expected in enumerate(test_cases):\n    assert solution(stdin=str(i+1)+input()) == expected\n"
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"YES\\n2 2 1 1\\n\", \"Test 1\"\nassert solution(stdin) == \"YES\\n2 2 1 1\\n\", \"Test 2\"\nassert solution(stdin) == \"NO\\n2 2 1 1\\n\", \"Test 3\"\nassert solution(stdin) == \"YES\\n1 2 1 1\\n\", \"Test 4\"\nassert solution(stdin) == \"YES\\n1 2 1 1\\n\", \"Test 5\""
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"YES\\n2 2 1 1\""
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(10) == \"NO\""
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(4) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\""
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(4) == 'YES'\nassert solution(5) == 'YES'\nassert solution(6) == 'YES'\nassert solution(7) == 'YES'\nassert solution(8) == 'NO'"
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == 'YES'\nassert solution(2) == 'NO'\nassert solution(3) == 'NO'\nassert solution(4) == 'YES'\nassert solution(5) == 'YES'\nassert solution(6) == 'YES'\nassert solution(7) == 'YES'\nassert solution(8) == 'YES'\nassert solution(9) == 'YES'\nassert solution(10) == 'NO'\nassert solution(11) == 'NO'\nassert solution(12) == 'NO'\nassert solution(13) == 'NO'\nassert solution(14) == 'NO'\nassert solution(15) == 'NO'\nassert solution(16) == 'NO'\nassert solution(17) == 'NO'\nassert solution(18) == 'NO'\nassert solution(19) == 'NO'\nassert solution(20) == 'NO'"
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n2 3 6 7\") == \"YES\\n2 2 1 1\"\nassert solution(\"5\\n6 15 35 77 22\") == \"YES\\n2 1 2 1 1\"\nassert solution(\"5\\n6 10 15 1000 75\") == \"NO\""
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n2 3 6 7\\n5\\n6 15 35 77 22\\n5\\n6 10 15 1000 75\") == \"YES\\n2 1 2 1 1 \"\nassert solution(\"4\\n2 3 6 7\\n5\\n6 15 35 77 22\\n5\\n6 10 15 1000 75\") == \"NO\\n2 2 1 1 \"\nassert solution(\"4\\n2 3 6 7\\n5\\n6 15 35 77 22\\n5\\n6 10 15 1000 75\") == \"NO\\n1 2 1 1 \""
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Test case failed: {input()} expected {output()}\""
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output() # Test case generation and validation"
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"100\\n60\\n70\\n\") == \"40\\n\"\nassert solution(\"410\\n55\\n70\\n\") == \"5\\n\"\nassert solution(\"600\\n60\\n70\\n\") == \"0\\n\""
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('100\\n60\\n70') == '40'\nassert solution('410\\n55\\n70') == '5'\nassert solution('600\\n60\\n70') == '0'"
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('100\\n60\\n70') == '40'\nassert solution('410\\n55\\n70') == '5'\nassert solution('600\\n60\\n70') == '0'"
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"100\\n60\\n70\") == \"40\"\nassert solution(\"410\\n55\\n70\") == \"5\"\nassert solution(\"600\\n60\\n70\") == \"0\"\n\nfrom typing import List"
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"100\\n60\\n70\") == \"40\\n\"\nassert solution(\"410\\n55\\n70\") == \"5\\n\"\nassert solution(\"600\\n60\\n70\") == \"0\\n\""
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('100\\n60\\n70') == '40\\n'\nassert solution('410\\n55\\n70') == '5\\n'\nassert solution('600\\n60\\n70') == '0\\n'"
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Solution is incorrect. Expected {expected_output}, but got {solution(input())}.\""
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"100\\n60\\n70\\n\") == \"40\"\nassert solution(\"410\\n55\\n70\\n\") == \"5\"\nassert solution(\"600\\n60\\n70\\n\") == \"0\""
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"100\\n60\\n70\") == \"40\"\nassert solution(\"410\\n55\\n70\") == \"5\"\nassert solution(\"600\\n60\\n70\") == \"0\""
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == 'Output\\n12\\n3 4\\n1 2 3 5\\n3 1 5 4\\n5 6 8 9'"
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"Output\\n1\\n3 4\\n1 2 3 5\\n3 1 5 4\\n5 6 8 9\\n\""
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1 4 1 5 9 2 6 5 3 5 8\\n\") == \"12\\n3 4\\n1 2 3 5\\n3 1 5 4\\n5 6 8 9\\n\"\nassert solution(\"5\\n1 1 1 1 1\\n\") == \"1\\n1 1\\n1\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Test Failed: Output ({output}) does not match expected output ({output})\"\n"
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == '12'\nassert solution(12) == '12'\nassert solution(2) == '1 3'\nassert solution(1) == '1'"
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"12\"\nassert solution(3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5, 8) == \"12\\n3 4\\n1 2 3 5\\n3 1 5 4\\n5 6 8 9\"\nassert solution(5) == \"1\"\nassert solution(5, 1, 1, 1, 1) == \"1\\n1 1\\n1\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output\nprint(solution(input()))"
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Solution incorrect: got {solution(input())}, expected {expected_output}\""
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected\nprint(f\"Output\")\nprint(f\"{p} {q}\")\nfor i in range(p):\n    print([int(a) for a in stdin.split()])"
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"12\\n3 4\\n1 2 3 5\\n3 1 5 4\\n5 6 8 9\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1\\n1 3 3\\n\") == \"6\"\n"
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\\n1 3 3\") == \"6\\n\"\nassert solution(\"4 2\\n1 3 2\\n2 3 1\") == \"4\\n\"\nassert solution(\"5 2\\n1 4 3\\n2 4 1\\n3 5 2\") == \"7\\n\"\nassert solution(\"6 2\\n1 4 2\\n2 5 1\\n3 5 2\\n4 6 1\") == \"10\\n\"\nassert solution(\"7 2\\n1 4 1\\n2 5 2\\n3 6 1\\n4 6 2\\n5 7 1\") == \"16\\n\"\nassert solution(\"8 2\\n1 4 2\\n2 5 1\\n3 6 2\\n4 7 1\\n5 7 2\\n6 8 1\") == \"24\\n\"\nassert solution(\"9 2\\n1 4 2\\n2 5 1\\n3 6 2\\n4 7 1\\n5 8 2\\n6 8 1\\n7 9 2\") == \"36\\n\"\n"
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"6\\n\""
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 1\\n1 3 3') == '6'\n"
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"6\\n\", \"The count modulo 10^9+7 is not correct.\""
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 1\\n1 3 3\\n') == '6\\n'\n"
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1\\n1 3 3\\n\") == \"6\""
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1\\n1 3 3\\n\") == \"6\\n\"\nassert solution(\"2 2\\n1 2 1\\n\") == \"6\\n\"\nassert solution(\"5 2\\n1 3 2\\n2 4 1\\n3 5 1\\n4 6 1\\n\") == \"6\\n\"\n"
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1\\n1 3 3\\n\") == \"6\"\nassert solution(\"4 2\\n1 4 2\\n2 5 3\\n\") == \"5\""
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 1\\n1 3 3\\n') == '6\\n'\nassert solution('4 1\\n1 3 3\\n2 4 3') == '12\\n'\nassert solution('2 2\\n1 3 3\\n2 4 3') == '10\\n'\nassert solution('4 2\\n1 3 3\\n2 4 3') == '12\\n'\n"
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('87654\\n30') == '10'\n\nassert solution('10\\n30') == '-1'\n\nassert solution('10\\n100') == '1'"
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"87654\\n30\") == \"10\"\nassert solution(\"100\\n300\") == \"100\"\nassert solution(\"100\\n100\") == \"-1\"\nprint(\"All tests passed successfully!\")"
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"10\", \"The output is incorrect\"\nassert solution(input()) == \"10\", \"The output is incorrect\""
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"87654 30\") == 10\nassert solution(\"1000000000 3\") == 1000000000\nassert solution(\"20 3\") == 0\nassert solution(\"10 10\") == 0\nassert solution(\"2 3\") == -1"
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"87654\\n30\\n\") == \"10\\n\"\nassert solution(\"1000000000\\n1000000000\\n\") == \"10\\n\"\nassert solution(\"1000000000\\n2000000000\\n\") == \"-1\\n\""
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('87654\\n30') == '10'"
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('87654\\n30\\n') == '10'\nprint('All tests passed.')"
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"87654\") == \"10\"\nassert solution(\"30\") == \"-1\""
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"87654\\n30\") == 10\nassert solution(\"256\\n256\") == -1"
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 10\n"
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"aba\") == \"Second\", \"Expected 'Second', but got '{}'\".format(solution(\"aba\"))\n"
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"aba\") == \"Second\", \"Test failed for s = 'aba'.\"\nassert solution(\"bbca\") == \"First\", \"Test failed for s = 'bbca'.\"\nassert solution(\"ab\") == \"First\", \"Test failed for s = 'ab'.\"\nassert solution(\"abc\") == \"First\", \"Test failed for s = 'abc'.\"\nassert solution(\"abcd\") == \"First\", \"Test failed for s = 'abcd'.\""
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"aba\") == \"Second\"\n"
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"aba\") == \"Second\"\nassert solution(\"abca\") == \"First\"\nassert solution(\"abbc\") == \"Second\"\nassert solution(\"aacb\") == \"First\"\nassert solution(\"aabbc\") == \"Second\""
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"aba\") == \"Second\", \"Test failed\""
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"aba\") == \"Second\"\nassert solution(\"abc\") == \"First\"\nassert solution(\"def\") == \"Second\"\nassert solution(\"ghi\") == \"First\"\nassert solution(\"jkl\") == \"Second\""
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"aba\") == \"First\"\nassert solution(\"baa\") == \"Second\"\nassert solution(\"abc\") == \"First\"\nassert solution(\"acde\") == \"Second\"\nassert solution(\"abcde\") == \"First\""
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aba\") == \"Second\\n\""
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('aba') == 'Second', \"Takahashi, who goes first, cannot perform the operation, since removal of the b, which is the only character not at either ends of s, would result in s becoming aa, with two as neighboring.\"\nprint(\"First\")"
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"aba\") == \"Second\"\n"
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\\n12345\\n\") == 6, \"Incorrect output\"\nassert solution(\"16\\n439873893693495623498263984765\\n\") == 40, \"Incorrect output\""
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10\\n12345\") == \"6\", \"Expected output 6, but got {}\".format(solution(\"10\\n12345\"))\nassert solution(\"16\\n439873893693495623498263984765\") == \"40\", \"Expected output 40, but got {}\".format(solution(\"16\\n439873893693495623498263984765\"))"
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('10\\n12345\\n') == '6\\n', \"Test 1 failed\"\nassert solution('16\\n439873893693495623498263984765\\n') == '40\\n', \"Test 2 failed\"\n\nfrom typing import List"
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10\\n12345\") == \"6\"\nassert solution(\"16\\n439873893693495623498263984765\") == \"40\""
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(10) == 6\nassert solution(16) == 40"
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(10) == 6, \"Test failed\" # Test Case 1\nassert solution(16) == 40, \"Test failed\" # Test Case 2"
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"Output\"\n"
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 6, \"Expected output 6, but got {}\".format(solution())\nassert solution() == 40, \"Expected output 40, but got {}\".format(solution())"
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 6, \"Expected 6, got {}\".format(solution())"
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(10) == 6\nassert solution(16) == 40"
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, \"Test case not passed\""
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2\\n0 1\\n2 1\") == \"332748119\"\nassert solution(\"1 2\\n1\") == \"3\"\nassert solution(\"3 3\\n0 1 1\\n4 3 5\") == \"160955686\\n185138929\\n974061117\"\n"
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"\\nInput:\\n\" + input() + \"\\n\\nOutput:\\n\" + output() + \"\\n\\nDiff:\\n\" + diff()"
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1\\n0 1\\n2 1\") == \"332748119\"\nassert solution(\"1 2\\n1\") == \"3\"\nassert solution(\"3 3\\n0 1 1\\n4 3 5\") == \"160955686\\n185138929\\n974061117\"\n"
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1\\n0 1\\n2 1\") == \"332748119\\n332748119\\n\"\nassert solution(\"1 2\\n1\") == \"3\\n\"\nassert solution(\"3 3\\n0 1 1\\n4 3 5\") == \"160955686\\n185138929\\n974061117\\n\""
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, \"Your solution is incorrect!\"\nprint(expected_output)"
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1\\n0 1\\n2 1\\n\") == \"332748119\\n332748119\\n\"\nassert solution(\"1 2\\n1\\n1\\n\") == \"3\\n\"\nassert solution(\"3 3\\n0 1 1\\n4 3 5\\n\") == \"160955686\\n185138929\\n974061117\\n\""
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1\\n0 1\\n2 1\\n\") == \"332748119\\n332748119\\n\"\nassert solution(\"1 2\\n1\\n1\\n\") == \"3\\n\"\nassert solution(\"3 3\\n0 1 1\\n4 3 5\\n\") == \"160955686\\n185138929\\n974061117\\n\""
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Output: {solution(input())}, Expected: {output()}\""
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"AJKEQSLOBSROFGZ\") == \"ORZ\"\nassert solution(\"AA\") == \"0\""
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"ORZ\""
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"AJKEQSLOBSROFGZ\") == \"ORZ\"\nassert solution(\"AA\") == \"0\"\n\nfrom typing import List"
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"ORZ\", \"Test 1: Expected 'ORZ', but got: \" + solution(input())\nassert solution(input()) == \"0\", \"Test 2: Expected '0', but got: \" + solution(input())"
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('AJKEQSLOBSROFGZ') == 'ORZ'\nassert solution('AA') == '0'"
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"AJKEQSLOBSROFGZ\") == \"ORZ\"\nassert solution(\"AA\") == \"0\"\nassert solution(\"AC\") == \"AC\"\nassert solution(\"ABCDGH\") == \"GH\"\nassert solution(\"ABCDEFGH\") == \"GH\"\nassert solution(\"AABCDGH\") == \"GH\"\nassert solution(\"ABDGH\") == \"ABDGH\""
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"ORZ\" # Test case 1\n\nassert solution(input()) == \"0\" # Test case 2\n\nassert solution(input()) == \"def solution(stdin: str) -> str:\" # Test case 3"
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"AJKEQSLOBSROFGZ\\nOVGURWZLWVLUXTH\\nOZ\") == \"ORZ\"\nassert solution(\"AA\\nA\\nA\") == \"0\""
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('AJKEQSLOBSROFGZ') == 'ORZ'\nassert solution('AA') == '0'"
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 1\\n1 100 1\\n1 100 100\") == \"99\"\nassert solution(\"100 100 100\\n1 1 1\\n1 1 1\") == \"0\""
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 1\\n1 100 1\\n1 100 100\") == \"99\"\nassert solution(\"100 100 100\\n1 1 1\\n1 1 1\") == \"0\""
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2 1\\n1 100 1\\n1 100 100\") == 99\nassert solution(\"100 100 100\\n1 1 1\\n1 1 1\") == 0"
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 1\\n1 100 1\\n1 100 100\") == \"99\"\nassert solution(\"100 100 100\\n1 1 1\\n1 1 1\") == \"0\""
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 1\\n1 100 1\\n1 100 100\") == 99\nassert solution(\"100 100 100\\n1 1 1\\n1 1 1\") == 0"
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 1\\n1 100 1\\n1 100 100\") == \"99\"\nassert solution(\"100 100 100\\n1 1 1\\n1 1 1\") == \"0\"\n\nfrom typing import List"
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"1 2 1\\n1 100 1\\n1 100 100\") == \"99\\n\"\nassert solution(stdin=\"100 100 100\\n1 1 1\\n1 1 1\") == \"0\\n\""
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 1\\n1 100 1\\n1 100 100\") == 99\nassert solution(\"100 100 100\\n1 1 1\\n1 1 1\") == 0"
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 1\\n1 100 1\\n1 100 100\") == \"99\"\nassert solution(\"100 100 100\\n1 1 1\\n1 1 1\") == \"0\""
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 1\\n1 100 1\\n1 100 100\") == \"99\"\nassert solution(\"100 100 100\\n1 1 1\\n1 1 1\") == \"0\""
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1\\n\") == \"1\\n\"\nassert solution(\"3 2\\n\") == \"1\\n\"\nassert solution(\"3 3\\n\") == \"0\\n\"\nassert solution(\"1000000000000 1048576\\n\") == \"118606527258\\n\""
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1\\n\", \"Test 1 failed\"\nassert solution(stdin) == \"1\\n\", \"Test 2 failed\"\nassert solution(stdin) == \"0\\n\", \"Test 3 failed\"\nassert solution(stdin) == \"118606527258\\n\", \"Test 4 failed\"\nassert solution(stdin) == \"118606527258\\n\", \"Test 5 failed\""
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"1\", \"The correct answer is 1.\"\nassert solution(\"3 2\") == \"1\", \"The correct answer is 1.\"\nassert solution(\"3 3\") == \"0\", \"The correct answer is 0.\"\nassert solution(\"1000000000000 1048576\") == \"118606527258\", \"The correct answer is 118606527258.\""
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 1\\n1 1') == 1\nassert solution('3 2\\n1 1') == 1\nassert solution('3 3\\n') == 0\nassert solution('1000000000000 1048576\\n118606527258') == 118606527258"
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Input {input()} should produce Output {output}, but got {solution(input())}\""
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\\n\") == \"1\\n\"\nassert solution(\"3 2\\n\") == \"1\\n\"\nassert solution(\"3 3\\n\") == \"0\\n\"\nassert solution(\"1000000000000 1048576\\n\") == \"118606527258\\n\""
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1\\n\") == \"1\\n\"\nassert solution(\"3 2\\n\") == \"1\\n\"\nassert solution(\"3 3\\n\") == \"0\\n\"\nassert solution(\"1000000000000 1048576\\n\") == \"118606527258\\n\"\n"
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"The solution is not correct.\"\n"
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1, 1) == 1\nassert solution(3, 2) == 1\nassert solution(3, 3) == 0\nassert solution(1000000000000, 1048576) == 118606527258"
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == \"1\\n\"\nassert solution(\"3 2\") == \"1\\n\"\nassert solution(\"3 3\") == \"0\\n\"\nassert solution(\"1000000000000 1048576\") == \"118606527258\\n\""
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"++\") == \"Yes\", \"Test Case 1\"\nassert solution(\"+-\") == \"No\", \"Test Case 2\"\nassert solution(\"++\") == \"Yes\", \"Test Case 3\"\nassert solution(\"-\") == \"No\", \"Test Case 4\"\nassert solution(\"++\") == \"Yes\", \"Test Case 5\""
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"-++-\") == \"Yes\"\nassert solution(\"-+\") == \"No\"\nassert solution(\"++\") == \"Yes\"\nassert solution(\"-\") == \"No\""
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"+-\") == \"Yes\"\nassert solution(\"+-\") == \"Yes\"\nassert solution(\"++\") == \"Yes\"\nassert solution(\"-\") == \"No\"\nassert solution(\"-\") == \"No\"\n"
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('+-') == 'Yes', 'The first testcase is not correct'\nassert solution('++') == 'Yes', 'The second testcase is not correct'\nassert solution('-') == 'No', 'The third testcase is not correct'\nassert solution('++-') == 'Yes', 'The fourth testcase is not correct'\n\nfrom typing import List"
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"+-\") == \"Yes\"\nassert solution(\"++\") == \"Yes\"\nassert solution(\"-\") == \"No\""
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('-++-') == 'Yes', 'Test case 1 failed'\nassert solution('-+-') == 'No', 'Test case 2 failed'\nassert solution('++') == 'Yes', 'Test case 3 failed'\nassert solution('-') == 'No', 'Test case 4 failed'"
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"+-\") == \"No\", \"Test case 1 failed: Solution should return 'No' for testcase 1.\"\nassert solution(\"++\") == \"Yes\", \"Test case 2 failed: Solution should return 'Yes' for testcase 2.\"\nassert solution(\"-\") == \"No\", \"Test case 3 failed: Solution should return 'No' for testcase 3.\""
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"-++-\") == \"Yes\"\nassert solution(\"+-\") == \"No\"\nassert solution(\"++\") == \"Yes\"\nassert solution(\"-\") == \"No\""
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"-++-\") == \"Yes\"\nassert solution(\"+-\") == \"No\"\nassert solution(\"++\") == \"Yes\"\nassert solution(\"-\") == \"No\"\n"
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"-++-\") == \"Yes\"\nassert solution(\"-+\") == \"No\"\nassert solution(\"++\") == \"Yes\"\nassert solution(\"-\") == \"No\""
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 12.566370614359172464, \"The area of the region that will be cleared should be 12.566370614359172464\""
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 0 0\\n0 1\\n-1 2\\n1 2\\n') == '12.566370614359172464\\n'\nassert solution('4 1 -1\\n0 0\\n1 2\\n2 0\\n1 1\\n') == '21.991148575128551812\\n'"
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 0 0\\n0 1\\n-1 2\\n1 2\\n\") == 12.566370614359172464\nassert solution(\"4 1 -1\\n0 0\\n1 2\\n2 0\\n1 1\\n\") == 21.991148575128551812"
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '12.566370614359172464'"
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 0 0\\n0 1\\n-1 2\\n1 2\") == \"12.566370614359172464\"\nassert solution(\"4 1 -1\\n0 0\\n1 2\\n2 0\\n1 1\") == \"21.991148575128551812\""
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 0 0\\n0 1\\n-1 2\\n1 2') == '12.566370614359172464'\nassert solution('4 1 -1\\n0 0\\n1 2\\n2 0\\n1 1') == '21.991148575128551812'"
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 0 0\\n0 1\\n-1 2\\n1 2\") == 12.566370614359172464\nassert solution(\"4 1 -1\\n0 0\\n1 2\\n2 0\\n1 1\") == 21.991148575128551812"
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 0 0\\n0 1\\n-1 2\\n1 2\\n\") == \"12.566370614359172464\\n\"\nassert solution(\"4 1 -1\\n0 0\\n1 2\\n2 0\\n1 1\\n\") == \"21.991148575128551812\\n\""
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 0 0\\n0 1\\n-1 2\\n1 2\") == \"12.566370614359172464\"\nassert solution(\"4 1 -1\\n0 0\\n1 2\\n2 0\\n1 1\") == \"21.991148575128551812\""
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '12.566370614359172464'"
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(48) == \"9 42\", \"Limak is not able to build a tower with 9 blocks and X = 42\"\nassert solution(6) == \"6 6\", \"Limak is not able to build a tower with 6 blocks and X = 6\"\n"
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"48\\n\") == \"9 42\\n\"\nassert solution(\"6\\n\") == \"6 6\\n\""
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(48) == \"9 42\"\nassert solution(6) == \"6 6\""
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(48) == \"9 42\"\nassert solution(6) == \"6 6\"\n"
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == 'Output\\n9 42\\n6 6', \"Test failed\"\n"
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(48) == \"9 42\"\nassert solution(6) == \"6 6\""
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"48\") == \"9 42\\n\", \"Test Case 1 Failed\"\nassert solution(\"6\") == \"6 6\\n\", \"Test Case 2 Failed\"\n\nsolution = '''\n"
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"48\") == \"9 42\"\nassert solution(\"6\") == \"6 6\""
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '9 42\\n6 6', 'Your solution is incorrect.'"
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=input()) == output, f\"Expected '{output}', got '{solution(stdin=input())}'\""
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n)(\") == \"Yes\"\nassert solution(\"3\\n(()\") == \"No\"\nassert solution(\"2\\n()\") == \"Yes\"\nassert solution(\"10\\n)))(((((\") == \"No\"\n\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"(())\") == \"Yes\"\nassert solution(\"(()())\") == \"Yes\"\nassert solution(\"(())(())\") == \"No\"\nassert solution(\"(()())(())\") == \"No\"\nassert solution(\"(())(())(()())(())\") == \"No\"\n\nfrom typing import List\n"
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n(()\\n\") == \"Yes\\n\"\nassert solution(\"3\\n(()\\n\") == \"No\\n\"\nassert solution(\"2\\n()\\n\") == \"Yes\\n\"\nassert solution(\"10\\n)))))(((((\\n\") == \"No\\n\""
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n( \\n\") == \"Yes\"\nassert solution(\"3\\n(() \\n\") == \"No\"\nassert solution(\"2\\n() \\n\") == \"Yes\"\nassert solution(\"10\\n((((\\n\")) == \"No\""
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(solution(solution(solution(solution(\"())\"))))) == \"Yes\"\nassert solution(solution(\"(())\")) == \"No\"\nassert solution(solution(\"(()()))\")) == \"Yes\""
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n(\") == \"Yes\"\nassert solution(\"3\\n(()\") == \"No\"\nassert solution(\"2\\n()\") == \"Yes\"\nassert solution(\"10\\n(((\") == \"No\""
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2') == 'Yes\\n'\nassert solution('3') == 'No\\n'\nassert solution('2') == 'Yes\\n'\nassert solution('10') == 'No\\n'"
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n)(\\n\") == \"Yes\\n\"\nassert solution(\"3\\n(()\\n\") == \"No\\n\"\nassert solution(\"2\\n()\\n\") == \"Yes\\n\"\nassert solution(\"10\\n((((\\n\") == \"No\\n\""
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Yes\""
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n)(\") == \"Yes\"\nassert solution(\"3\\n(()\") == \"No\"\nassert solution(\"2\\n()\") == \"Yes\"\nassert solution(\"10\\n(((\") == \"No\""
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''1 50\n50''') == '1\\n1\\n'\n\nassert solution('''3 100\n50 50 100''') == '5\\n2\\n'\n\nassert solution('''2 50\n50 50''') == '-1\\n0\\n'"
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 50\\n50\\n\") == \"1\\n1\\n\"\nassert solution(\"3 100\\n50 50 100\\n\") == \"5\\n2\\n\"\nassert solution(\"2 50\\n50 50\\n\") == \"-1\\n0\\n\""
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\""
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 50\\n50\\n\") == \"1\\n1\\n\"\nassert solution(\"3 100\\n50 50 100\\n\") == \"5\\n2\\n\"\nassert solution(\"2 50\\n50 50\\n\") == \"-1\\n0\\n\""
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 50\\n50\") == \"1\\n1\\n\"\nassert solution(\"3 100\\n50 50 100\") == \"5\\n2\\n\"\nassert solution(\"2 50\\n50 50\") == \"-1\\n0\\n\""
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1\\n1\\n\"\nassert solution(\"1 50\\n50\\n\") == \"1\\n1\\n\"\nassert solution(\"3 100\\n50 50 100\\n\") == \"5\\n2\\n\"\nassert solution(\"2 50\\n50 50\\n\") == \"-1\\n0\\n\""
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 50\\n50\\n') == '1\\n1\\n'\nassert solution('3 100\\n50 50 100\\n') == '5\\n2\\n'\nassert solution('2 50\\n50 50\\n') == '-1\\n0\\n'"
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 50\\n50\") == \"1\"\nassert solution(\"3 100\\n50 50 100\") == \"5\"\nassert solution(\"2 50\\n50 50\") == \"-1\""
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == output, f\"Test failed: {output}\" for input, output in [\n    # Test case 1\n    [1, 50, [50]],\n\n    # Test case 2\n    [3, 100, [2, 1]],\n\n    # Test case 3\n    [2, 50, [2, 1, 1]],\n\n    # Test case 4\n    [3, 50, [3, 1, 1]],\n\n    # Test case 5\n    [4, 100, [2, 1, 1, 1]],\n]"
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 50\\n50\\n\") == \"1\\n1\\n\"\nassert solution(\"3 100\\n50 50 100\\n\") == \"5\\n2\\n\"\nassert solution(\"2 50\\n50 50\\n\") == \"-1\\n0\\n\""
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n2 6 8') == '2'\nassert solution('5\\n2 3 4 9 12') == '4'\nassert solution('4\\n5 7 2 9') == '1'\n"
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Input\\n3\\n2 6 8\\n\") == \"Output\\n2\\n\"\nassert solution(\"Input\\n5\\n2 3 4 9 12\\n\") == \"Output\\n4\\n\"\nassert solution(\"Input\\n4\\n5 7 2 9\\n\") == \"Output\\n1\\n\""
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n2 6 8') == '2'\nassert solution('5\\n2 3 4 9 12') == '4'\nassert solution('4\\n5 7 2 9') == '1'"
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n2 6 8\\n') == '2\\n'\nassert solution('5\\n2 3 4 9 12\\n') == '4\\n'\nassert solution('4\\n5 7 2 9\\n') == '1\\n'"
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n2 6 8\") == \"2\\n\"\nassert solution(\"5\\n2 3 4 9 12\") == \"4\\n\"\nassert solution(\"4\\n5 7 2 9\") == \"1\\n\""
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"2\"\nassert solution(5) == \"4\"\nassert solution(4) == \"1\"\n"
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n2 6 8\") == \"2\"\nassert solution(\"5\\n2 3 4 9 12\") == \"4\"\nassert solution(\"4\\n5 7 2 9\") == \"1\""
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n2 6 8\") == \"2\\n\"\nassert solution(\"5\\n2 3 4 9 12\") == \"4\\n\"\nassert solution(\"4\\n5 7 2 9\") == \"1\\n\""
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n2 6 8') == '2\\n'\nassert solution('5\\n2 3 4 9 12') == '4\\n'\nassert solution('4\\n5 7 2 9') == '1\\n'"
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('Input\\n3\\n2 6 8\\n\\nOutput\\n2\\n\\nInput\\n5\\n2 3 4 9 12\\n\\nOutput\\n4\\n\\nInput\\n4\\n5 7 2 9\\n\\nOutput\\n1\\n\\n') == 'Output\\n2\\n\\n'\nassert solution('Input\\n3\\n2 6 8\\n\\nOutput\\n2\\n\\nInput\\n5\\n2 3 4 9 12\\n\\nOutput\\n4\\n\\nInput\\n4\\n5 7 2 9\\n\\nOutput\\n1\\n\\n') == 'Output\\n2\\n\\n'\nassert solution('Input\\n3\\n2 6 8\\n\\nOutput\\n2\\n\\nInput\\n5\\n2 3 4 9 12\\n\\nOutput\\n4\\n\\nInput\\n4\\n5 7 2 9\\n\\nOutput\\n1\\n\\n') == 'Output\\n2\\n\\n'\nassert solution('Input\\n3\\n2 6 8\\n\\nOutput\\n2\\n\\nInput\\n5\\n2 3 4 9 12\\n\\nOutput\\n4\\n\\nInput\\n4\\n5 7 2 9\\n\\nOutput\\n1\\n\\n') == 'Output\\n2\\n\\n'"
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected_output, f\"got {solution(stdin)}, expected {expected_output}\""
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(None) == \"Invalid input\"\nassert solution(\"3\") == \"Invalid input\"\nassert solution(\"2\") == \"Invalid input\"\nassert solution(\"5\") == \"Invalid input\"\nassert solution(\"\") == \"Invalid input\""
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"6\\n5\\n-1\\n\"\n"
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n17 18\\n15 24\\n12 15\") == \"6\\n\"\nassert solution(\"2\\n10 16\\n7 17\") == \"-1\\n\"\nassert solution(\"5\\n90 108\\n45 105\\n75 40\\n165 175\\n33 30\") == \"5\\n\""
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n17 18\\n15 24\\n12 15\") == 6\nassert solution(\"2\\n10 16\\n7 17\") == -1\nassert solution(\"5\\n90 108\\n45 105\\n75 40\\n165 175\\n33 30\") == 5"
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('Input\\n3\\n17 18\\n15 24\\n12 15\\n') == '6\\n'\nassert solution('Input\\n2\\n10 16\\n7 17\\n') == '-1\\n'\nassert solution('Input\\n5\\n90 108\\n45 105\\n75 40\\n165 175\\n33 30\\n') == '5\\n'"
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n17 18\\n15 24\\n12 15\") == \"6\\n\"\nassert solution(\"2\\n10 16\\n7 17\") == \"-1\\n\"\nassert solution(\"5\\n90 108\\n45 105\\n75 40\\n165 175\\n33 30\") == \"5\\n\""
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 6, \"Incorrect output\""
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n17 18\\n15 24\\n12 15\") == \"6\"\nassert solution(\"2\\n10 16\\n7 17\") == \"0\"\nassert solution(\"5\\n90 108\\n45 105\\n75 40\\n165 175\\n33 30\") == \"5\""
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 6\nassert solution() == -1\nassert solution() == 5\n"
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"bab\") == \"2\"\nassert solution(\"bb\") == \"1 0\"\nassert solution(\"bbbb\") == \"0\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('bab') == '2\\n1 0\\n1 3\\n'\nassert solution('bb') == '2\\n1 0\\n1 3\\n'\nassert solution('bbbb') == '0\\n'"
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"bab\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bb\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bbbb\") == \"0\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"bab\") == \"2\\n1 0\\n1 3\\n\"\nassert solution(\"bb\") == \"2\\n1 0\\n1 3\\n\"\nassert solution(\"bbbb\") == \"0\\n\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"bab\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bb\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bbbb\") == \"0\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"bab\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bb\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bbbb\") == \"0\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"bab\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bb\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bbbb\") == \"0\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"bab\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bb\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bbbb\") == \"0\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('bab') == '2\\n1 0\\n1 3'\nassert solution('bb') == '1\\n1 0\\n1 3'\nassert solution('bbbb') == '0'\n\nprint(solution('aaa'))"
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n1 1\\n4 3 2\\n') == 'POSSIBLE'\nassert solution('4\\n1 1\\n4 3 2\\n') == 'POSSIBLE'\nassert solution('1\\n1 1\\n4 3 2\\n') == 'POSSIBLE'\nassert solution('2\\n1 1\\n4 3 2\\n') == 'POSSIBLE'\nassert solution('3\\n1 1\\n4 3 2\\n') == 'POSSIBLE'"
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 1\\n4 3 2\") == \"POSSIBLE\"\nassert solution(\"3\\n1 2\\n4 3 5\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 2\\n5 4 3\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 2\\n5 4 3\\n6 4 5\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 2\\n5 4 3\\n6 4 5\\n7 4 7\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 2\\n5 4 3\\n6 4 5\\n7 4 7\\n8 4 7\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 2\\n5 4 3\\n6 4 5\\n7 4 7\\n8 4 7\\n9 4 7\") == \"POSSIBLE\""
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n1 1\\n4 3 2') == 'POSSIBLE'"
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 1\\n4 3 2\") == \"POSSIBLE\"\n"
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''3\n1 1\n4 3 2''') == 'POSSIBLE'\n\nassert solution('''\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 1\\n4 3 2\") == \"POSSIBLE\"\nassert solution(\"2\\n1 1\\n4 3 2\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n1 1\\n4 3 2\\n') == 'POSSIBLE'\nassert solution('5\\n2 3\\n1 4\\n2 5\\n') == 'POSSIBLE'\nassert solution('5\\n1 2\\n4 3\\n2 5\\n') == 'POSSIBLE'\nassert solution('3\\n1 1\\n1 1\\n') == 'IMPOSSIBLE'\nassert solution('3\\n1 1\\n4 3 2\\n5 1 1\\n') == 'IMPOSSIBLE'"
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 1\\n4 3 2\") == \"POSSIBLE\"\nassert solution(\"5\\n1 1\\n4 3 2\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"POSSIBLE\""
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 1\\n4 3 2\") == \"POSSIBLE\"\nassert solution(\"4\\n1 1\\n2 2\\n3 4\\n5 5\") == \"POSSIBLE\"\nassert solution(\"2\\n1 1\\n2 2\\n3 4\\n5 5\") == \"IMPOSSIBLE\"\nassert solution(\"4\\n1 1\\n2 2\\n3 4\\n5 6\") == \"IMPOSSIBLE\"\nassert solution(\"1\\n1 1\\n2 2\\n3 4\\n5 6\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1000000007\") == \"2\\n\""
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 1000000007') == '2'\nprint('All test cases passed')"
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1000000007\") == \"2\"\nassert solution(\"3 1000000007\") == \"3\"\nassert solution(\"5 1000000007\") == \"3\"\nassert solution(\"10 1000000007\") == \"3\"\nassert solution(\"15 1000000007\") == \"3\"\nassert solution(\"20 1000000007\") == \"4\"\nassert solution(\"25 1000000007\") == \"4\"\nassert solution(\"30 1000000007\") == \"4\"\nassert solution(\"35 1000000007\") == \"4\"\nassert solution(\"40 1000000007\") == \"4\"\nassert solution(\"45 1000000007\") == \"4\"\nassert solution(\"50 1000000007\") == \"4\"\nassert solution(\"55 1000000007\") == \"4\"\nassert solution(\"60 1000000007\") == \"4\"\nassert solution(\"65 1000000007\") == \"4\"\nassert solution(\"70 1000000007\") == \"4\"\nassert solution(\"75 1000000007\") == \"4\"\nassert solution(\"80 1000000007\") == \"4\"\nassert solution(\"85 1000000007\") == \"4\"\nassert solution(\"90 1000000007\") == \"4\"\nassert solution(\"95 1000000007\") == \"4\"\nassert solution(\"100 1000000007\") == \"4\"\nassert solution(\"105 1000000007\") == \"4\"\nassert solution(\"110 1000000007\") == \"4\"\nassert solution(\"115 1000000007\") == \"4\"\nassert solution(\"120 1000000007\") == \"5\"\nassert solution(\"125 1000000007\") == \"5\"\nassert solution(\"130 1000000007\") == \"5\"\nassert solution(\"135 1000000007\") == \"5\"\nassert solution(\"140 1000000007\") == \"5\"\nassert solution(\"145 1000000007\") == \"5\"\nassert solution(\"150 1000000007\") == \"5\"\nassert solution(\"155 1000000007\") == \"5\"\nassert solution(\"160 1000000007\") == \"5\"\nassert solution(\"165 1000000007\") == \"5\"\nassert solution(\"170 1000000007\") == \"5\"\nassert solution(\"175 1000000007\") == \"5\"\nassert solution(\"180 1000000007\") == \"5\"\nassert solution(\"185 1000000007\") == \"5\"\nassert solution(\"190 1000000007\") == \"5\"\nassert solution(\"195 1000000007\") == \"5\"\nassert solution(\"200 1000000007\") == \"6\"\nassert solution(\"205 1000000007\") == \"6\"\nassert solution(\"210 1000000007\") == \"6\"\nassert solution(\"215 1000000007\") == \"6\"\nassert solution(\"220 10000000"
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"2\", \"Test case 1 failed.\"\nassert solution(stdin) == \"4\", \"Test case 2 failed.\"\nassert solution(stdin) == \"16\", \"Test case 3 failed.\""
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1000000007\") == \"2\", \"The expected output is '2', but got '{}'.\".format(solution(\"2 1000000007\"))"
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '2'\n"
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1000000007\") == \"2\"\nassert solution(\"3 1000000007\") == \"3\"\nassert solution(\"4 1000000007\") == \"4\"\nassert solution(\"5 1000000007\") == \"2\"\nassert solution(\"6 1000000007\") == \"3\"\nassert solution(\"7 1000000007\") == \"4\"\nassert solution(\"8 1000000007\") == \"2\"\nassert solution(\"9 1000000007\") == \"3\"\nassert solution(\"10 1000000007\") == \"4\"\nassert solution(\"11 1000000007\") == \"2\"\nassert solution(\"12 1000000007\") == \"3\"\nassert solution(\"13 1000000007\") == \"4\"\nassert solution(\"14 1000000007\") == \"2\"\nassert solution(\"15 1000000007\") == \"3\"\nassert solution(\"16 1000000007\") == \"4\"\nassert solution(\"17 1000000007\") == \"2\"\nassert solution(\"18 1000000007\") == \"3\"\nassert solution(\"19 1000000007\") == \"4\"\nassert solution(\"20 1000000007\") == \"2\"\nassert solution(\"21 1000000007\") == \"3\"\nassert solution(\"22 1000000007\") == \"4\"\nassert solution(\"23 1000000007\") == \"2\"\nassert solution(\"24 1000000007\") == \"3\"\nassert solution(\"25 1000000007\") == \"4\"\nassert solution(\"26 1000000007\") == \"2\"\nassert solution(\"27 1000000007\") == \"3\"\nassert solution(\"28 1000000007\") == \"4\"\nassert solution(\"29 1000000007\") == \"2\"\nassert solution(\"30 1000000007\") == \"3\"\nassert solution(\"31 1000000007\") == \"4\"\nassert solution(\"32 1000000007\") == \"2\"\nassert solution(\"33 1000000007\") == \"3\"\nassert solution(\"34 1000000007\") == \"4\"\nassert solution(\"35 1000000007\") == \"2\"\nassert solution(\"36 1000000007\") == \"3\"\nassert solution(\"37 1000000007\") == \"4\"\nassert solution(\"38 1000000007\") == \"2\"\nassert solution(\"39 1000000007\") == \"3\"\nassert solution(\"40 1000000007\") == \"4\"\nassert solution(\"41 1000000007\") == \"2\"\nassert solution(\"42 1000000007\") == \"3\"\nassert solution(\"43 1000000007\") == \"4\"\nassert solution(\"44 1000000007\") == \"2\"\nassert solution(\"45 1000000007\") == \"3\"\nassert solution(\"46 1000000007\") == \"4\"\nassert solution(\"47 1000000007\") == \"2\"\nassert solution(\"48 1000000007\") == \"3\"\n"
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1000000007\") == \"2\"\n"
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1000000007\") == \"2\"\nassert solution(\"3 1000000009\") == \"4\"\nassert solution(\"4 1000000007\") == \"3\"\nassert solution(\"5 1000000007\") == \"5\"\nassert solution(\"6 1000000007\") == \"7\"\nassert solution(\"7 1000000009\") == \"7\"\nassert solution(\"8 1000000009\") == \"8\"\nassert solution(\"9 1000000009\") == \"10\"\nassert solution(\"10 1000000007\") == \"9\"\nassert solution(\"11 1000000007\") == \"10\"\nassert solution(\"12 1000000007\") == \"11\"\nassert solution(\"13 1000000007\") == \"13\"\nassert solution(\"14 1000000007\") == \"15\"\nassert solution(\"15 1000000009\") == \"15\"\nassert solution(\"16 1000000009\") == \"16\"\nassert solution(\"17 1000000009\") == \"17\"\nassert solution(\"18 1000000009\") == \"18\"\nassert solution(\"19 1000000009\") == \"19\"\nassert solution(\"20 1000000007\") == \"20\"\nassert solution(\"21 1000000007\") == \"21\"\nassert solution(\"22 1000000007\") == \"22\"\nassert solution(\"23 1000000007\") == \"23\"\nassert solution(\"24 1000000007\") == \"24\"\nassert solution(\"25 1000000009\") == \"25\"\nassert solution(\"26 1000000009\") == \"26\"\nassert solution(\"27 1000000009\") == \"27\"\nassert solution(\"28 1000000009\") == \"28\"\nassert solution(\"29 1000000009\") == \"29\"\nassert solution(\"30 1000000007\") == \"30\"\nassert solution(\"31 1000000007\") == \"31\"\nassert solution(\"32 1000000007\") == \"32\"\nassert solution(\"33 1000000007\") == \"33\"\nassert solution(\"34 1000000007\") == \"34\"\nassert solution(\"35 1000000009\") == \"35\"\nassert solution(\"36 1000000009\") == \"36\"\nassert solution(\"37 1000000009\") == \"37\"\nassert solution(\"38 1000000009\") == \"38\"\nassert solution(\"39 1000000009\") == \"39\"\nassert solution(\"40 1000000007\") == \"40\"\nassert solution(\"41 1000000007\") == \"41\"\nassert solution(\"42 1000000007\") == \"42\"\nassert solution(\"43 1000000007\") == \"43\"\nassert solution(\"44 1000000007\") == \"44\"\nassert solution(\"45 1000000009\") == \"45\"\nassert solution(\"46 1000000009\") == \"46\"\nassert solution(\"47 1"
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1000000007\") == \"2\\n\"  # Pass\nassert solution(\"3 1000000007\") == \"2\\n\"  # Pass\nassert solution(\"5 1000000007\") == \"2\\n\"  # Pass\nassert solution(\"7 1000000007\") == \"2\\n\"  # Pass\nassert solution(\"10 1000000007\") == \"2\\n\"  # Pass\nassert solution(\"15 1000000007\") == \"2\\n\"  # Pass\nassert solution(\"20 1000000007\") == \"2\\n\"  # Pass\nassert solution(\"25 1000000007\") == \"2\\n\"  # Pass\nassert solution(\"30 1000000007\") == \"2\\n\"  # Pass\nassert solution(\"35 1000000007\") == \"2\\n\"  # Pass\nassert solution(\"40 1000000007\") == \"2\\n\"  # Pass\nassert solution(\"45 1000000007\") == \"2\\n\"  # Pass\nassert solution(\"50 1000000007\") == \"2\\n\"  # Pass\nassert solution(\"55 1000000007\") == \"2\\n\"  # Pass\nassert solution(\"60 1000000007\") == \"2\\n\"  # Pass\nassert solution(\"65 1000000007\") == \"2\\n\"  # Pass\nassert solution(\"70 1000000007\") == \"2\\n\"  # Pass\nassert solution(\"75 1000000007\") == \"2\\n\"  # Pass\nassert solution(\"80 1000000007\") == \"2\\n\"  # Pass\nassert solution(\"85 1000000007\") == \"2\\n\"  # Pass\nassert solution(\"90 1000000007\") == \"2\\n\"  # Pass\nassert solution(\"95 1000000007\") == \"2\\n\"  # Pass\nassert solution(\"100 1000000007\") == \"2\\n\"  # Pass\nassert solution(\"105 1000000007\") == \"2\\n\"  # Pass\nassert solution(\"110 1000000007\") == \"2\\n\"  # Pass\nassert solution(\"115 1000000007\") == \"2\\n\"  # Pass\nassert solution(\"120 1000000007\") == \"2\\n\"  # Pass\nassert solution(\"125 1000000007\") == \"2\\n\"  # Pass\nassert solution(\"130 1000000007\") == \"2\\n\"  # Pass\nassert solution(\"135 1000000007\") == \"2\\n\"  # Pass\nassert solution(\"140 1000000007\") == \"2\\n\"  # Pass\nassert solution(\"145 1000000007\") == \"2\\n\"  # Pass\nassert solution(\"150 1000000007\") == \"2\\n\"  # Pass\nassert solution(\"155 1000000007\") == \"2\\n\"  # Pass\nassert solution(\"160 1000000007\") == \"2\\n\"  # Pass\nassert solution(\"165 1000000007\") == \"2\\n\"  # Pass\nassert solution(\"170 1000000007\") == \"2\\n\"  # Pass\nassert solution(\"175 100000000"
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 2 3 3\\n+-+') == '7'\nassert solution('4 1 5 1\\n-') == '999999228'\n"
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2 3 3\\n+-+\") == \"7\"\nassert solution(\"4 1 5 1\\n-\") == \"999999228\""
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2 3 3\\n+-+\") == \"7\"\nassert solution(\"4 1 5 1\\n-\") == \"999999228\""
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 999999228\n\nimport math"
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 2 3 3\\n+-+') == '7'\nassert solution('4 1 5 1\\n-') == '999999228'"
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2 3 3\\n+-+\") == \"7\\n\"\nassert solution(\"4 1 5 1\\n-\") == \"999999228\\n\""
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_1) == \"Output\\n7\"\nassert solution(input_2) == \"Output\\n999999228\"\n\nfrom typing import List"
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2 3 3\\n+-+\") == \"7\"\nassert solution(\"4 1 5 1\\n-\") == \"999999228\""
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2 3 3\\n+-+\") == \"7\"\nassert solution(\"4 1 5 1\\n-\") == \"999999228\"\n\nfor line in input().split('\\n'):\n    n, a, b, k = map(int, line.split())\n    s = list(map(int, input().split()))\n    remainder = 1\n    for i in range(k):\n        remainder = (remainder * s[i]) % (10**9 + 9)\n    print(remainder)"
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '7'\nprint('All tests passed.')"
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 1 1 2') == '4'\nassert solution('1 2 3 1') == '2'\nassert solution('10 2 1 7') == '0'"
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1 1 2\") == \"4\"\nassert solution(\"1 2 3 1\") == \"2\"\nassert solution(\"10 2 1 7\") == \"0\"\n\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 1 1 2\\n') == '4'\nassert solution('1 2 3 1\\n') == '2'\nassert solution('10 2 1 7\\n') == '0'"
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1 1 2\") == \"4\"\nassert solution(\"1 2 3 1\") == \"2\"\nassert solution(\"10 2 1 7\") == \"0\""
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1 1 2\") == \"4\"\nassert solution(\"1 2 3 1\") == \"2\"\nassert solution(\"10 2 1 7\") == \"0\""
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1 2\") == \"4\"\nassert solution(\"1 2 3 1\") == \"2\"\nassert solution(\"10 2 1 7\") == \"0\""
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1 1 2\") == \"4\"\nassert solution(\"1 2 3 1\") == \"2\"\nassert solution(\"10 2 1 7\") == \"0\""
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1 1 2\") == \"4\\n\"\nassert solution(\"1 2 3 1\") == \"2\\n\"\nassert solution(\"10 2 1 7\") == \"0\\n\""
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1, 1, 1, 2) == 4, \"The number of ways to increase the sizes of the sticks by the total of at most 2 centimeters is incorrect.\"\nassert solution(1, 2, 3, 1) == 2, \"The number of ways to increase the sizes of the sticks by the total of at most 1 centimeter is incorrect.\"\nassert solution(10, 2, 1, 7) == 0, \"The number of ways to increase the sizes of the sticks by the total of at most 7 centimeters is incorrect.\""
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1 1 2\") == \"4\"\nassert solution(\"1 2 3 1\") == \"2\"\nassert solution(\"10 2 1 7\") == \"0\""
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 2') == '6'\nprint('All tests passed.')"
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\") == \"6\"\n\nfrom typing import List"
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\") == \"6\\n\", \"The output should be '6\\n' but is '{}'\".format(solution(\"3 2\"))"
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"6\\n\", \"The correct output should be: 6\\n\""
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2\") == \"6\"\n"
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 2') == '6'\nassert solution('5 5') == '2'\nassert solution('1 1') == '1'\nassert solution('2 2') == '0'"
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"6\"\nassert solution(\"3 2\") == \"6\"\nassert solution(\"5 3\") == \"12\""
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"6\\n\"\nassert solution(2) == \"3\\n\"\nassert solution(4) == \"5\\n\"\nassert solution(1) == \"1\\n\"\nassert solution(10) == \"24\\n\""
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\") == \"6\"\n"
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\\n\") == \"6\\n\"\n\nassert solution(\"5 1\\n\") == \"1\\n\"\n\nassert solution(\"1 1\\n\") == \"1\\n\"\n\nassert solution(\"1 1\\n\") == \"1\\n\"\n\nassert solution(\"2 1\\n\") == \"1\\n\"\n\nassert solution(\"2 3\\n\") == \"3\\n\"\n\nassert solution(\"3 3\\n\") == \"6\\n\""
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\"\nassert solution(\"10\\n1 2 3\\n\") == \"27\\n\"\nassert solution(\"20\\n1 2\\n3 4\\n\") == \"36\\n\"\nassert solution(\"100\\n1 2\\n3 4\\n\") == \"1098\\n\"\nassert solution(\"1000000000\\n1 2\\n3 4\\n\") == \"1000000006\\n\""
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\"\n"
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\n1 2\\n') == '2'\nassert solution('3\\n1 2\\n2 3\\n3 4\\n') == '3'\nassert solution('4\\n1 2\\n2 3\\n3 4\\n4 5\\n') == '4'\nassert solution('5\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n') == '5'\nassert solution('6\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n') == '6'\nassert solution('7\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n') == '7'\nassert solution('8\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n') == '8'\nassert solution('9\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n') == '9'\nassert solution('10\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n') == '10'\nassert solution('11\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n') == '11'\nassert solution('12\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n') == '12'\nassert solution('13\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n') == '13'\nassert solution('14\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n') == '14'\nassert solution('15\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n') == '15'\nassert solution('16\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n') == '16'\nassert solution('17\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 "
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\"\nassert solution(\"3\\n1 2\\n3 4\\n\") == \"1\\n\"\nassert solution(\"4\\n1 2\\n3 4\\n5 6\\n\") == \"0\\n\"\nassert solution(\"6\\n1 2\\n3 4\\n5 6\\n7 8\\n\") == \"3\\n\"\nassert solution(\"8\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n\") == \"0\\n\""
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2\\n\", \"Sample output should be 2.\""
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(r'''\n2\n1 2\n''') == '2'\n\nassert solution(r'''\n3\n1 2\n3 4\n5 6\n''') == '17'"
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2\\n\"\n"
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '2', \"Expected output: 2\"\nassert solution(\"1 2\\n\") == '2', \"Expected output: 2\"\nassert solution(\"1 3\\n\") == '0', \"Expected output: 0\"\nassert solution(\"2\\n\") == '1000000000', \"Expected output: 1000000000\"\nassert solution(\"2\\n1 2\\n\") == '1', \"Expected output: 1\"\n"
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_data) == expected_output, f\"Test failed. Expected: {expected_output}, Actual: {solution(input_data)}\"\n\ninput_data = \"2\\n1 2\\n\"\nexpected_output = \"2\""
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\\n\", \"Test failed!\""
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n0 2 0\\n3 0 1\\n') == '2\\n'\nassert solution('3\\n0 2 0\\n1 0 3\\n') == '4\\n'\nassert solution('11\\n0 0 0 5 0 0 0 4 0 0 11\\n9 2 6 0 8 1 7 0 3 0 10\\n') == '18\\n'"
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '2\\n'"
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n0 2 0\\n3 0 1\") == \"2\"\nassert solution(\"3\\n0 2 0\\n1 0 3\") == \"4\"\nassert solution(\"11\\n0 0 0 5 0 0 0 4 0 0 11\\n9 2 6 0 8 1 7 0 3 0 10\") == \"18\""
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"2\"\nassert solution(3) == \"2\"\nassert solution(11) == \"18\"\nassert solution(9, 2, 6, 0, 8, 1, 7, 0, 3, 0, 10) == \"18\""
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n0 2 0\\n3 0 1\\n\\n4\\n0 2 0\\n1 0 3\\n\\n11\\n0 0 0 5 0 0 0 4 0 0 11\\n9 2 6 0 8 1 7 0 3 0 10\\n\\n18') == '2\\n'\nassert solution('3\\n0 2 0\\n1 0 3\\n\\n4\\n0 2 0\\n1 0 3\\n\\n11\\n0 0 0 5 0 0 0 4 0 0 11\\n9 2 6 0 8 1 7 0 3 0 10\\n\\n18') == '4\\n'\nassert solution('11\\n0 0 0 5 0 0 0 4 0 0 11\\n9 2 6 0 8 1 7 0 3 0 10\\n\\n18') == '18\\n'"
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3') == '2\\n'\nassert solution('3\\n1') == '2\\n'\nassert solution('11\\n9 2 6 0 8 1 7 0 3 0 10') == '18\\n'"
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n0 2 0\\n3 0 1\\n\") == \"2\"\nassert solution(\"3\\n0 2 0\\n1 0 3\\n\") == \"4\"\nassert solution(\"11\\n0 0 0 5 0 0 0 4 0 0 11\\n9 2 6 0 8 1 7 0 3 0 10\\n\") == \"18\""
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n0 2 0\\n3 0 1\\n\") == \"2\\n\"\nassert solution(\"3\\n0 2 0\\n1 0 3\\n\") == \"4\\n\"\nassert solution(\"11\\n0 0 0 5 0 0 0 4 0 0 11\\n9 2 6 0 8 1 7 0 3 0 10\\n\") == \"18\\n\""
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n0 2 0\\n3 0 1\\n\") == \"2\\n\"\nassert solution(\"3\\n0 2 0\\n1 0 3\\n\") == \"4\\n\"\nassert solution(\"11\\n0 0 0 5 0 0 0 4 0 0 11\\n9 2 6 0 8 1 7 0 3 0 10\\n\") == \"18\\n\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 10\\ncode*s\\ncodeforces\\n\") == \"YES\"\nassert solution(\"6 5\\nvk*cup\\nvkcup\\n\") == \"YES\"\nassert solution(\"1 1\\nv\\nk\\n\") == \"NO\"\nassert solution(\"9 6\\ngfgf*gfgf\\ngfgfgf\\n\") == \"NO\"\n"
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()\nprint(\"YES\")"
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"aba*aba\") == \"YES\"\nassert solution(\"codeforces\") == \"YES\"\nassert solution(\"v\") == \"YES\"\nassert solution(\"k\") == \"NO\"\nassert solution(\"gfgf*gfgf\") == \"NO\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"aba*aba\") == \"YES\"\nassert solution(\"codeforces\") == \"YES\"\nassert solution(\"vk*cup\") == \"YES\"\nassert solution(\"v\") == \"NO\"\nassert solution(\"k\") == \"NO\"\nassert solution(\"gfgf*gfgf\") == \"NO\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"code*s\") == \"YES\"\nassert solution(\"codeforces\") == \"YES\"\nassert solution(\"vk*cup\") == \"YES\"\nassert solution(\"v\") == \"NO\"\nassert solution(\"k\") == \"NO\"\nassert solution(\"gfgf*gfgf\") == \"NO\"\nassert solution(\"gfgfgf\") == \"NO\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"code*s\") == \"YES\"\nassert solution(\"codeforces\") == \"YES\"\nassert solution(\"vk*cup\") == \"YES\"\nassert solution(\"v\") == \"NO\"\nassert solution(\"k\") == \"NO\"\nassert solution(\"gfgf*gfgf\") == \"NO\"\n\nfrom typing import List"
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed. Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"code*s\") == \"YES\"\nassert solution(\"codeforces\") == \"YES\"\nassert solution(\"vk*cup\") == \"YES\"\nassert solution(\"v\") == \"NO\"\nassert solution(\"k\") == \"NO\"\nassert solution(\"gfgf*gfgf\") == \"NO\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"code*s\") == \"YES\"\nassert solution(\"codeforces\") == \"YES\"\nassert solution(\"vk*cup\") == \"YES\"\nassert solution(\"v\") == \"NO\"\nassert solution(\"k\") == \"NO\"\nassert solution(\"gfgf*gfgf\") == \"NO\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 10\\ncode*s\\ncodeforces\\n\") == \"YES\"\nassert solution(\"6 5\\nvk*cup\\nvkcup\\n\") == \"YES\"\nassert solution(\"1 1\\nv\\nk\\n\") == \"NO\"\nassert solution(\"9 6\\ngfgf*gfgf\\ngfgfgf\\n\") == \"NO\""
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"0.800000000000\""
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n0.1 0.2 0.3 0.8\") == 0.8\nassert solution(\"2\\n0.1 0.2\") == 0.26"
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n0.1 0.2 0.3 0.8\") == \"0.800000000000\"\nassert solution(\"2\\n0.1 0.2\") == \"0.260000000000\"\n"
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0.1 0.2 0.3 0.8\") == \"0.800000000000\", \"Test 1 failed\"\nassert solution(\"2\\n0.1 0.2\") == \"0.260000000000\", \"Test 2 failed\""
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n0.1 0.2 0.3 0.8\\n2\\n0.1 0.2\") == \"0.260000000000\""
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n0.1 0.2 0.3 0.8\\n') == '0.800000000000\\n'\nassert solution('2\\n0.1 0.2\\n') == '0.260000000000\\n'"
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n4\n0.1 0.2 0.3 0.8\n\"\"\"\n) == \"0.800000000000\"\n\nassert solution(\n    \"\"\"\n2\n0.1 0.2\n\"\"\"\n) == \"0.260000000000\""
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n0.1 0.2 0.3 0.8\") == \"0.800000000000\\n\"\nassert solution(\"2\\n0.1 0.2\") == \"0.260000000000\\n\"\n"
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n0.1 0.2 0.3 0.8\") == \"0.800000000000\\n\"\nassert solution(\"2\\n0.1 0.2\") == \"0.260000000000\\n\""
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Expected: {output}, Received: {solution(input())}\""
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 10 1 2 5\") == \"5.0000000000\"\nassert solution(\"3 6 1 2 1\") == \"4.7142857143\"\n"
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 10 1 2 5\") == \"5.0000000000\"\nassert solution(\"3 6 1 2 1\") == \"4.7142857143\""
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"5.0000000000\"\nassert solution() == \"4.7142857143\""
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 10 1 2 5\") == \"5.0000000000\"\nassert solution(\"3 6 1 2 1\") == \"4.7142857143\""
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '5.0000000000\\n'\n"
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 10 1 2 5\") == \"5.0000000000\"\nassert solution(\"3 6 1 2 1\") == \"4.7142857143\""
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Error: Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '5.0000000000'"
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 10 1 2 5\") == \"5.0000000000\"\nassert solution(\"3 6 1 2 1\") == \"4.7142857143\"\n"
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_str) == '0.250', \"The expected output is '0.250', but it is actually '{}'.\".format(solution(input_str))\n\nassert solution(input_str) == '0.279', \"The expected output is '0.279', but it is actually '{}'.\".format(solution(input_str))"
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n0.000 0.500 0.750 1.000 2.000 3.000\") == \"0.250\\n\"\nassert solution(\"3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\") == \"0.279\\n\""
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n0.000 0.500 0.750 1.000 2.000 3.000\") == \"0.250\\n\"\nassert solution(\"3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\") == \"0.279\\n\""
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n0.000 0.500 0.750 1.000 2.000 3.000\") == \"0.250\", \"Test case 1 failed\"\nassert solution(\"3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\") == \"0.279\", \"Test case 2 failed\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n0.000 0.500 0.750 1.000 2.000 3.000') == '0.250\\n'\nassert solution('3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896') == '0.279\\n'\n"
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"0.250\"\nassert solution(3) == \"0.279\"\n"
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"0.250\"\nassert solution(input()) == \"0.279\""
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '0.250', 'The output should be 0.250, but it is {}.'.format(solution())"
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"0.250\", \"Test case 1 failed\"\n\nassert solution(input()) == \"0.279\", \"Test case 2 failed\"\n\nassert solution(input()) == \"0.279\", \"Test case 3 failed\"\n\nassert solution(input()) == \"0.279\", \"Test case 4 failed\"\n\nassert solution(input()) == \"0.279\", \"Test case 5 failed\""
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n0.000 0.500 0.750 1.000 2.000 3.000\") == \"0.250\\n\"\nassert solution(\"3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\") == \"0.279\\n\""
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 5\\n5 2\") == \"18\\n\"\nassert solution(\"0 1\\n0 0\") == \"8\\n\""
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"18\", \"Test 1\"\nassert solution() == \"8\", \"Test 2\"\n"
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"18\""
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 1\\n0 0\") == \"8\"\nassert solution(\"1 5\\n5 2\") == \"18\""
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 5\\n5 2\\n') == '18', 'Incorrect output.'"
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('0 1') == '8'"
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 5\\n5 2\\n\") == \"18\\n\"\nassert solution(\"0 1\\n0 0\\n\") == \"8\\n\""
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"18\"\nassert solution(input()) == \"8\""
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 5\\n5 2\\n\") == \"18\"\nassert solution(\"0 1\\n0 0\\n\") == \"8\""
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 5\\n5 2') == 18\nassert solution('0 1\\n0 0') == 8"
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == \"4\"\nassert solution(2) == \"10\"\nassert solution(10) == \"244\""
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == 4\nassert solution(2) == 10\nassert solution(10) == 244"
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == 4\nassert solution(2) == 10\nassert solution(10) == 244"
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == 4\nassert solution(2) == 10\nassert solution(10) == 244"
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == 4\nassert solution(2) == 10\nassert solution(10) == 244"
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == 4\nassert solution(2) == 10\nassert solution(10) == 244\n\nfrom typing import List"
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == 4, \"The output should be 4\"\nassert solution(2) == 10, \"The output should be 10\"\nassert solution(10) == 244, \"The output should be 244\"\n"
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == 4\nassert solution(2) == 10\nassert solution(10) == 244"
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == 4\nassert solution(2) == 10\nassert solution(10) == 244"
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == 4\nassert solution(2) == 10\nassert solution(10) == 244"
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n1 2 3') == '0\\n'\nassert solution('4\\n1 1 2 2') == '2\\n'\nassert solution('5\\n1 4 1 4 9') == '2\\n'"
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"0\\n\"\nassert solution(\"4\\n1 1 2 2\\n\") == \"2\\n\"\nassert solution(\"5\\n1 4 1 4 9\\n\") == \"2\\n\""
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 1 2 2\") == \"2\"\nassert solution(\"5\\n1 4 1 4 9\") == \"2\""
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 0, \"Correct output expected\"\n\nfrom typing import List"
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(solution(solution(solution(\"Input\\n3\\n1 2 3\\n\"))) == \"0\\n\")\nassert solution(solution(solution(solution(\"Input\\n4\\n1 1 2 2\\n\"))) == \"2\\n\")\nassert solution(solution(solution(solution(\"Input\\n5\\n1 4 1 4 9\\n\"))) == \"2\\n\")"
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 2 3\\n4\\n1 1 2 2\\n5\\n1 4 1 4 9\\n6\\n1 2 3 4 5 6 7 8 9\\n10\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n11\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 "
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n1 2 3') == '0\\n'\nassert solution('4\\n1 1 2 2') == '2\\n'\nassert solution('5\\n1 4 1 4 9') == '2\\n'\n"
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 0\nassert solution(4) == 2\nassert solution(5) == 2"
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3\") == \"0\"\nassert solution(\"4 1 1 2 2\") == \"2\"\nassert solution(\"5 1 4 1 4 9\") == \"2\""
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"0\"\nassert solution(\"4\\n1 1 2 2\\n\") == \"2\"\nassert solution(\"5\\n1 4 1 4 9\\n\") == \"2\""
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"aaabccc\") == \"YES\"\nassert solution(\"bbacc\") == \"NO\"\nassert solution(\"aabc\") == \"YES\""
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"aaabccc\") == \"YES\"\nassert solution(\"bbacc\") == \"NO\"\nassert solution(\"aabc\") == \"YES\""
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"aaabccc\") == \"YES\", \"Output: YES\"\nassert solution(\"bbacc\") == \"NO\", \"Output: NO\"\nassert solution(\"aabc\") == \"YES\", \"Output: YES\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('aaabccc') == 'YES'\nassert solution('bbacc') == 'NO'\nassert solution('aabc') == 'YES'"
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"aaabccc\") == \"YES\", \"Input: 'aaabccc'\\nOutput: 'YES', expected: 'YES'\"\nassert solution(\"bbacc\") == \"NO\", \"Input: 'bbacc'\\nOutput: 'NO', expected: 'NO'\"\nassert solution(\"aabc\") == \"YES\", \"Input: 'aabc'\\nOutput: 'YES', expected: 'YES'\""
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"aaabccc\") == \"YES\", \"The number of 'c' in the string 'aaabccc' is not equal to the number of the 'a'.\"\n\nassert solution(\"bbacc\") == \"NO\", \"The number of 'c' in the string 'bbacc' is equal to the number of the 'b'.\"\n\nassert solution(\"aabc\") == \"YES\", \"The number of 'c' in the string 'aabc' is not equal to the number of the 'a'.\""
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"aaabccc\") == \"YES\"\nassert solution(\"bbacc\") == \"NO\"\nassert solution(\"aabc\") == \"YES\""
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aaabccc\") == \"YES\"\nassert solution(\"bbacc\") == \"NO\"\nassert solution(\"aabc\") == \"YES\""
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aaabccc\") == \"YES\"\nassert solution(\"bbacc\") == \"NO\"\nassert solution(\"aabc\") == \"YES\""
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"aaabccc\") == \"YES\"\nassert solution(\"bbacc\") == \"NO\"\nassert solution(\"aabc\") == \"YES\""
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 1 2 5 3\") == \"2\"\nassert solution(\"4 1 3 2\") == \"2\""
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n4 1 2 5 3\") == \"2\"\nassert solution(\"4\\n4 1 3 2\") == \"2\""
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2\""
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"2\""
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n4 1 2 5 3\\n\") == \"2\"\nassert solution(\"4\\n4 1 3 2\\n\") == \"2\""
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '2'"
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n4 1 2 5 3\") == \"2\"\nassert solution(\"4\\n4 1 3 2\") == \"2\""
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n4 1 2 5 3\\n\") == \"2\\n\"\nassert solution(\"4\\n4 1 3 2\\n\") == \"2\\n\""
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"5\\n4 1 2 5 3\"\n) == \"2\\n\"\n\nassert solution(\n    \"4\\n4 1 3 2\"\n) == \"2\\n\""
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n4 1 2 5 3\") == \"2\\n\"\nassert solution(\"4\\n4 1 3 2\") == \"2\\n\""
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 1\") == \"3.5\"\nassert solution(\"6 3\") == \"4.96\"\nassert solution(\"2 2\") == \"1.76\""
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 1\") == \"3.5\"\nassert solution(\"6 3\") == \"4.96\"\nassert solution(\"2 2\") == \"1.76\"\n"
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Testcase failed.\""
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 1\") == \"3.5\"\nassert solution(\"6 3\") == \"4.96\"\nassert solution(\"2 2\") == \"1.76\"\n"
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 1\") == \"3.5\"\nassert solution(\"6 3\") == \"4.96\"\nassert solution(\"2 2\") == \"1.76\""
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"The output does not match the expected output.\\nInput: {}\\nOutput: {}\\nExpected Output: {}\".format(input(), output(), expected_output)"
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"Test case failed\""
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 1\") == \"3.5\", \"The expected output is incorrect.\"\nassert solution(\"6 3\") == \"4.96\", \"The expected output is incorrect.\"\nassert solution(\"2 2\") == \"1.8\", \"The expected output is incorrect.\""
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 1\") == \"3.5\"\nassert solution(\"6 3\") == \"4.96\"\nassert solution(\"2 2\") == \"1.75\""
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(6, 1) == 3.5\nassert solution(6, 3) == 4.96\nassert solution(2, 2) == 1.76"
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"\n"
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n4\\n-><-\\n5\\n>>>>>\") == \"3\\n5\\n3\\n0\\n\"\nassert solution(\"4\\n4\\n<--\\n2\\n<>\") == \"3\\n5\\n3\\n0\\n\"\n"
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"3\\n5\\n3\\n0\"\nassert solution(input()) == \"3\\n5\\n3\\n0\"\nassert solution(input()) == \"3\\n5\\n3\\n0\""
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n4\\n-><-\\n5\\n>>>>>') == '3\\n5\\n3\\n0'\nassert solution('4\\n4\\n<-\\n5\\n>>>>>') == '3\\n5\\n3\\n0'\nassert solution('4\\n4\\n<<-\\n5\\n>>>>>') == '3\\n5\\n3\\n0'\nassert solution('4\\n4\\n--\\n5\\n>>>>>') == '3\\n5\\n3\\n0'\nassert solution('4\\n4\\n---\\n5\\n>>>>>') == '3\\n5\\n3\\n0'\nassert solution('4\\n4\\n----\\n5\\n>>>>>') == '3\\n5\\n3\\n0'\nassert solution('4\\n4\\n---\\n5\\n<<<') == '3\\n5\\n3\\n0'\nassert solution('4\\n4\\n----\\n5\\n<<<') == '3\\n5\\n3\\n0'\nassert solution('4\\n4\\n---\\n5\\n---') == '3\\n5\\n3\\n0'\nassert solution('4\\n4\\n----\\n5\\n---') == '3\\n5\\n3\\n0'\nassert solution('4\\n4\\n---\\n5\\n----') == '3\\n5\\n3\\n0'\nassert solution('4\\n4\\n----\\n5\\n----') == '3\\n5\\n3\\n0'\nassert solution('4\\n4\\n---\\n5\\n---\\n') == '3\\n5\\n3\\n0'\nassert solution('4\\n4\\n----\\n5\\n---\\n') == '3\\n5\\n3\\n0'\nassert solution('4\\n4\\n---\\n5\\n----\\n') == '3\\n5\\n3\\n0'\nassert solution('4\\n4\\n----\\n5\\n----\\n') == '3\\n5\\n3\\n0'"
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(4, \"-><-\", 5, \">>>>>\", 3, \"<--\", 2, \"<>\") == 3 and solution(4, \"-><-\", 5, \">>>>>\", 3, \"<--\", 2, \"<>\") == 5 and solution(4, \"-><-\", 5, \">>>>>\", 3, \"<--\", 2, \"<>\") == 3 and solution(4, \"-><-\", 5, \">>>>>\", 3, \"<--\", 2, \"<>\") == 0"
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}, but got: {solution(input())}\""
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\"\n"
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n4\\t-><-\\n5\\t>>>>>\\n3\\t<--\\n2\\t<>\") == \"3\\n5\\n3\\n0\""
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"Output: {output()}, Input: {input()}\""
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n4\\n-><-\\n5\\n>>>>>') == '3\\n5\\n3\\n0'\n\nassert solution('4\\n4\\n<-\\n5\\n>>>>>') == '3\\n5\\n3\\n0'\n\nassert solution('4\\n4\\n<--\\n5\\n>>>>>') == '3\\n5\\n3\\n0'\n\nassert solution('4\\n4\\n<>') == '3\\n5\\n3\\n0'"
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"16\"\nassert solution(4) == \"9 9 10\"\nassert solution(3) == \"9 9 10\"\nassert solution(4) == \"-1\""
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == '16'\nassert solution(4) == '9 9 10'\nassert solution(3) == '9 9 10'\nassert solution(3) == '-1'"
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '202'\nassert solution() == '9 9 10'\nassert solution() == '-1'\n"
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n4 5\\n4 5\\n4 10\") == \"16\"\nassert solution(\"4\\n1 100\\n100 1\\n1 100\\n100 1\") == \"202\"\nassert solution(\"3\\n1 1\\n100 100\\n1 1\") == \"-1\"\n"
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n4 5\\n4 5\\n4 10\\n') == '16\\n9 9 10\\n'\nassert solution('4\\n1 100\\n100 1\\n1 100\\n100 1\\n') == '202\\n101 101 101 101\\n'\nassert solution('3\\n1 1\\n100 100\\n1 1\\n') == '-1\\n'"
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n4 5\\n4 5\\n4 10\\n\") == \"16\\n9 9 10\"\nassert solution(\"4\\n1 100\\n100 1\\n1 100\\n100 1\\n\") == \"202\\n101 101 101 101\"\nassert solution(\"3\\n1 1\\n100 100\\n1 1\\n\") == \"-1\""
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 16\nassert solution() == 9, 9\nassert solution() == 9, 9, 10"
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Input\") == \"16\\n9 9 10\\n202\\n101 101 101 101\\n\"\nassert solution(\"Input\") == \"202\\n101 101 101 101\\n100 100 1 1\\n1 1 100 1 100\"\nassert solution(\"Input\") == \"-1\""
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''3\n4 5\n4 5\n4 10''') == '16\\n9 9 10\\n'\n\nassert solution('''4\n1 100\n100 1\n1 100\n100 1''') == '202\\n101 101 101 101\\n'\n\nassert solution('''3\n1 1\n100 100\n1 1''') == '-1\\n'"
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"0 2\""
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, \"Test failed\"\n\nfrom typing import List"
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 1 1 1 1\\n3\\n1 2 3\") == \"0 2\\n0 1 3\\n0 1 2\\n0 1 1\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\n0 1 0\\"
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Output: {solution(input())}, Expected: {expected}\""
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == \"1\\n2\\n2\"\nassert solution(2) == \"0\\n2\\n2\"\nassert solution(3) == \"0\\n2\\n2\"\nassert solution(4) == \"0\\n1\\n3\"\nassert solution(5) == \"0\\n1\\n3\""
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 1 1 1 1\\n\") == \"1 2 2\\n\"\nassert solution(\"3\\n1 2 3\\n\") == \"0 2\\n\"\nassert solution(\"5\\n1 2 3 2 2\\n\") == \"0 1 3\\n\""
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 1 1 1 1\\n\") == \"1 2 2 \\n\", \"Test 1 failed\"\nassert solution(\"3\\n1 2 3\\n\") == \"0 2 \\n\", \"Test 2 failed\"\nassert solution(\"5\\n1 2 3 2 2\\n\") == \"0 1 3 \\n\", \"Test 3 failed\""
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 1 1 1 1\") == \"1 2 2\\n\", \"Incorrect output\"\nassert solution(\"3\\n1 2 3\") == \"0 2\\n\", \"Incorrect output\"\nassert solution(\"5\\n1 2 3 2 2\") == \"0 1 3\\n\", \"Incorrect output\""
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 1 1 1 1\") == \"1 2 2\"\nassert solution(\"3\\n1 2 3\") == \"0 2 \"\nassert solution(\"5\\n1 2 3 2 2\") == \"0 1 3\""
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 1 1 1 1\") == \"1 2 2\\n\"\nassert solution(\"3\\n1 2 3\") == \"0 2\\n\"\nassert solution(\"5\\n1 2 3 2 2\") == \"0 1 3\\n\"\n\nimport math"
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"101101\") == \"110110\"\nassert solution(\"10010110\") == \"01100011\"\nassert solution(\"10\") == \"01\""
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"101101\") == \"110110\"\nassert solution(\"10010110\") == \"01100011\"\nassert solution(\"10\") == \"01\""
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"01100011\"\nassert solution(open(\"input2.txt\", \"r\").read()) == \"01\"\nassert solution(open(\"input3.txt\", \"r\").read()) == \"01100011\"\nassert solution(open(\"input4.txt\", \"r\").read()) == \"01\"\nassert solution(open(\"input5.txt\", \"r\").read()) == \"01100011\""
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('101101\\n110\\n') == '110110\\n'\nassert solution('10010110\\n100011\\n') == '01100011\\n'\nassert solution('10\\n11100\\n') == '01\\n'"
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('101101\\n110\\n') == '110110\\n'\nassert solution('10010110\\n100011\\n') == '01100011\\n'\nassert solution('10\\n11100\\n') == '01\\n'"
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"101101\", \"110\") == \"110110\"\nassert solution(\"10010110\", \"100011\") == \"01100011\"\nassert solution(\"10\", \"11100\") == \"01\""
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"101101\") == \"110110\"\nassert solution(\"10010110\") == \"01100011\"\nassert solution(\"10\") == \"01\""
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"101101\\n110\\n\") == \"110110\"\nassert solution(\"10010110\\n100011\\n\") == \"01100011\"\nassert solution(\"10\\n11100\\n\") == \"01\"\n"
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('101101') == '110110'\nassert solution('10010110') == '01100011'\nassert solution('10') == '01'"
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('101101') == '110110'\nassert solution('10010110') == '01100011'\nassert solution('10') == '01'"
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(str(input())) == str(output)\n\nn, m, k = map(int, input().split())\n\na = [list(map(int, input().split())) for _ in range(n)]"
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 5 2\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n\\n3 4 1\\n1 0 0 0\\n0 1 1 1\\n1 1 1 0\\n1 0 0 1\\n1 0 0 1\\n\") == \"1\\n\"\nassert solution(\"3 4 1\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n1 0 0 1\\n\") == \"-1\\n\"\nassert solution(\"3 4 1\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n1 0 0 1\\n\") == \"0\\n\""
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 5 2\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n\") == \"1\"\nassert solution(\"3 4 1\\n1 0 0 0\\n0 1 1 1\\n1 1 1 0\\n1 0 0 1\\n1 1 1 0\\n\") == \"-1\"\nassert solution(\"3 4 1\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n\") == \"0\""
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 5 2\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1\\n1 1 1 1 1\") == -1\nassert solution(\"3 4 1\\n1 0 0 0\\n0 1 1 1\\n1 1 1 0\\n1 0 0 1\\n1 0 0 1\") == -1\nassert solution(\"3 4 1\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n1 0 0 1\") == 0"
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 5 2\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1\\n1 1 1 1 1') == 1\nassert solution('3 4 1\\n1 0 0 0\\n0 1 1 1\\n1 1 1 0\\n1 0 0 1\\n1 0 0 1') == -1\nassert solution('3 4 1\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n1 0 0 1') == 0"
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 5 2\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n\") == \"1\\n\"\nassert solution(\"3 4 1\\n1 0 0 0\\n0 1 1 1\\n1 1 1 0\\n1 0 0 1\\n1 0 0 1\\n\") == \"-1\\n\"\nassert solution(\"3 4 1\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n1 0 0 1\\n\") == \"0\\n\""
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output\nprint(f\"Test case {i + 1} passed\")"
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 5 2\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n\") == \"1\\n\"\nassert solution(\"3 4 1\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n1 0 0 1\\n\") == \"-1\\n\"\nassert solution(\"3 4 1\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n1 1 1 0\\n\") == \"0\\n\""
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 5 2\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n\\n3 4 1\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n\\n3 4 1\\n1 0 0 0\\n0 1 1 0\\n1 0 0 0\") == \"1\\n\"\nassert solution(\"3 4 1\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n\\n3 4 1\\n1 0 0 0\\n0 1 1 0\\n1 0 0 0\") == \"-1\\n\"\nassert solution(\"3 4 1\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n\\n3 4 1\\n1 0 0 0\\n0 1 1 0\\n1 0 0 0\") == \"0\\n\""
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(example1) == expected1\nassert solution(example2) == expected2\nassert solution(example3) == expected3\nassert solution(example4) == expected4\nassert solution(example5) == expected5"
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n0 4 6 2 4\\n4 0 6 2 4\\n6 6 0 3 6\\n2 2 3 0 2\\n4 4 6 2 0\\n\") == \"2 2 3 1 2  \"\nassert solution(\"3\\n0 99990000 99970002\\n99990000 0 99980000\\n99970002 99980000 0\\n\") == \"9999 10000 9998\""
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n0 4 6 2 4\\n4 0 6 2 4\\n6 6 0 3 6\\n2 2 3 0 2\\n4 4 6 2 0\\n\") == \"2 2 3 1 2  \\n\"\nassert solution(\"3\\n0 99990000 99970002\\n99990000 0 99980000\\n99970002 99980000 0\\n\") == \"9999 10000 9998\\n\""
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n0 4 6 2 4\\n4 0 6 2 4\\n6 6 0 3 6\\n2 2 3 0 2\\n4 4 6 2 0\\n\") == \"2 2 3 1 2 4\\n\"\nassert solution(\"3\\n0 99990000 99970002\\n99990000 0 99980000\\n99970002 99980000 0\\n\") == \"9999 10000 9998\\n\""
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('0\\n4\\n4\\n6\\n2\\n4') == '2 2 3 1 2'\nassert solution('0\\n4\\n4\\n6\\n2\\n4\\n6\\n2\\n4') == '2 2 3 1 2'\nassert solution('0\\n4\\n4\\n6\\n2\\n4\\n6\\n2\\n4') == '2 2 3 1 2'\nassert solution('0\\n4\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4') == '2 2 3 1 2'\nassert solution('0\\n4\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n6\\n2\\n4\\n"
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n0 4 6 2 4\\n4 0 6 2 4\\n6 6 0 3 6\\n2 2 3 0 2\\n4 4 6 2 0') == '2 2 3 1 2 2 2 3 3'\nassert solution('3\\n0 99990000 99970002\\n99990000 0 99980000\\n99970002 99980000 0') == '9999 10000 9998'\nassert solution('') == ''"
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Solution is incorrect. Expected output: {expected_output}, Actual output: {solution(input())}\""
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\"\n"
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n0 4 6 2 4\\n4 0 6 2 4\\n6 6 0 3 6\\n2 2 3 0 2\\n4 4 6 2 0\") == \"2 2 3 1 2 2 3 1 2\"\nassert solution(\"3\\n0 99990000 99970002\\n99990000 0 99980000\\n99970002 99980000 0\") == \"9999 10000 9998\""
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n0 4 6 2 4\\n4 0 6 2 4\\n6 6 0 3 6\\n2 2 3 0 2\\n4 4 6 2 0\") == \"2 2 3 1 2 10000\"\nassert solution(\"3\\n0 99990000 99970002\\n99990000 0 99980000\\n99970002 99980000 0\") == \"9999 10000 9998\""
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n0 4 6 2 4\\n4 0 6 2 4\\n6 6 0 3 6\\n2 2 3 0 2\\n4 4 6 2 0') == '2 2 3 1 2 2 3 1 2\\n'\nassert solution('3\\n0 99990000 99970002\\n99990000 0 99980000\\n99970002 99980000 0') == '9999 10000 9998\\n'"
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(solution(\"6\\n11 6\\n10 4\\n01 3\\n00 3\\n00 7\\n00 9\\n\")) == \"22\"\nassert solution(solution(\"5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1\\n\")) == \"103\"\nassert solution(solution(\"6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28\\n\")) == \"105\"\nassert solution(solution(\"3\\n00 5000\\n00 5000\\n00 5000\\n\")) == \"0\""
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n11 6\\n10 4\\n01 3\\n00 3\\n00 7\\n00 9\") == \"22\"\nassert solution(\"5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1\\n\") == \"103\"\nassert solution(\"6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28\\n\") == \"105\"\nassert solution(\"3\\n00 5000\\n00 5000\\n00 5000\") == \"0\""
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n11 6\\n10 4\\n01 3\\n00 3\\n00 7\\n00 9\") == \"22\"\nassert solution(\"5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1\") == \"103\"\nassert solution(\"6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28\") == \"105\"\nassert solution(\"3\\n00 5000\\n00 5000\\n00 5000\") == \"0\""
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n11 6\\n10 4\\n01 3\\n00 3\\n00 7\\n00 9\") == 22\nassert solution(\"5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1\") == 103\nassert solution(\"6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28\") == 105\nassert solution(\"3\\n00 5000\\n00 5000\\n00 5000\") == 0"
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n11 6\\n10 4\\n01 3\\n00 3\\n00 7\\n00 9\\n\") == \"22\"\nassert solution(\"5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1\\n\") == \"103\"\nassert solution(\"6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28\\n\") == \"105\"\nassert solution(\"3\\n00 5000\\n00 5000\\n00 5000\\n\") == \"0\""
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n11 6\\n10 4\\n01 3\\n00 3\\n00 7\\n00 9\") == \"22\"\nassert solution(\"5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1\") == \"103\"\nassert solution(\"6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28\") == \"105\"\nassert solution(\"3\\n00 5000\\n00 5000\\n00 5000\") == \"0\"\n"
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 22, \"Solution is not correct.\"\n\nassert solution() == 103, \"Solution is not correct.\"\n\nassert solution() == 105, \"Solution is not correct.\"\n\nassert solution() == 0, \"Solution is not correct.\""
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Test Failed! Input: {input()}, Output: {output}\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"22\"\nassert solution(input()) == \"103\"\nassert solution(input()) == \"105\"\nassert solution(input()) == \"0\"\n"
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n11 6\\n10 4\\n01 3\\n00 3\\n00 7\\n00 9\\n\") == \"22\"\nassert solution(\"5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1\\n\") == \"103\"\nassert solution(\"6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28\\n\") == \"105\"\nassert solution(\"3\\n00 5000\\n00 5000\\n00 5000\\n\") == \"0\"\n\nprint(\"All test cases passed\")"
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 4 9\\n1 3 1 2\\n2 1 3\\n4 3 6\\n') == 'YES\\n2 3 2 3\\n'\nassert solution('3 4 10\\n2 3 1 2\\n2 1 3\\n4 3 6\\n') == 'YES\\n1 3 1 3\\n'\nassert solution('3 4 9\\n2 3 1 2\\n2 1 3\\n4 3 6\\n') == 'YES\\n3 3 2 3\\n'\nassert solution('3 4 5\\n1 3 1 2\\n2 1 3\\n5 3 6\\n') == 'NO\\n'"
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4 9\\n1 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n2 3 2 3\\n\"\nassert solution(\"3 4 10\\n2 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n1 3 1 3\\n\"\nassert solution(\"3 4 9\\n2 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n3 3 2 3\\n\"\nassert solution(\"3 4 5\\n1 3 1 2\\n2 1 3\\n5 3 6\") == \"NO\"\n\nassert solution(\"4 1 3\\n5 2 4\\n6 3 5\\n7 4 6\") == \"NO\"\n\nassert solution(\"5 6 7\\n8 9 10\\n11 12 13\\n14 15 16\\n17 18 19\\n20 21 22\\n23 24 25\") == \"NO\""
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"YES\\n2 3 2 3\\nYES\\n1 3 1 3\\nYES\\n3 3 2 3\\nNO\""
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == expected\n"
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"NO\""
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 4 9\\n1 3 1 2\\n2 1 3\\n4 3 6') == 'YES\\n2 3 2 3\\nYES\\n1 3 1 3\\nYES\\n3 3 2 3'\nassert solution('3 4 10\\n2 3 1 2\\n2 1 3\\n4 3 6') == 'YES\\n1 3 1 3\\nYES\\n3 3 2 3'\nassert solution('3 4 9\\n2 3 1 2\\n2 1 3\\n4 3 6') == 'YES\\n3 3 2 3\\n'\nassert solution('3 4 5\\n1 3 1 2\\n2 1 3\\n5 3 6') == 'NO'"
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == 'YES\\n2 3 2 3\\nYES\\n1 3 1 3\\nYES\\n3 3 2 3'"
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 4 9\\n1 3 1 2\\n2 1 3\\n4 3 6') == 'YES\\n2 3 2 3\\nYES\\n1 3 1 3\\nYES\\n3 3 2 3'\nassert solution('3 4 10\\n2 3 1 2\\n2 1 3\\n4 3 6') == 'YES\\n1 3 1 3\\nYES\\n3 3 2 3'\nassert solution('3 4 9\\n2 3 1 2\\n2 1 3\\n4 3 6') == 'YES\\n3 3 2 3\\nYES\\n1 3 1 3'\nassert solution('3 4 5\\n1 3 1 2\\n2 1 3\\n5 3 6') == 'NO'\n"
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == output, \"Test case failed. Please check your code and try again.\""
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(str(3, 4, 9)) == \"YES\\n2 3 2 3\"\nassert solution(str(3, 4, 10)) == \"YES\\n1 3 1 3\"\nassert solution(str(3, 4, 9)) == \"YES\\n3 3 2 3\"\nassert solution(str(3, 4, 5)) == \"NO\""
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 1\\n2 3 4 1\\n1 2 3 4\") == \"NO\"\nassert solution(\"4 1\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 3\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 2\\n4 3 1 2\\n2 1 4 3\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n2 1 4 3\") == \"NO\"\n"
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"YES\"\nprint(\"PASSED\")"
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 1\\n2 3 4 1\\n1 2 3 4\") == \"NO\"\nassert solution(\"4 1\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 3\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 2\\n4 3 1 2\\n2 1 4 3\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n2 1 4 3\") == \"NO\"\nassert solution(\"4 1\\n1 2 3 4\") == \"YES\"\nassert solution(\"4 1\\n2 3 4 1\") == \"NO\""
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_string) == expected_output, f\"Test failed. Expected: '{expected_output}', Received: '{solution(input_string)}'\""
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 1\\n2 3 4 1\\n1 2 3 4\") == \"NO\"\nassert solution(\"4 1\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 3\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 2\\n4 3 1 2\\n2 1 4 3\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n2 1 4 3\") == \"NO\"\nassert solution(\"4 1\\n2 3 4 1\\n1 2 3 4\") == \"NO\"\nassert solution(\"4 1\\n4 3 1 2\\n2 1 4 3\") == \"YES\""
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 1\\n2 3 4 1\\n1 2 3 4\") == \"NO\"\nassert solution(\"4 1\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 3\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 2\\n4 3 1 2\\n2 1 4 3\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n2 1 4 3\") == \"NO\""
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 1\\n2 3 4 1\\n1 2 3 4\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 3\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 2\\n4 3 1 2\\n2 1 4 3\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n2 1 4 3\") == \"NO\"\n"
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 1\\n2 3 4 1\\n1 2 3 4\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 3\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 2\\n4 3 1 2\\n2 1 4 3\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n2 1 4 3\") == \"NO\""
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 1\\n2 3 4 1\\n1 2 3 4\") == \"NO\"\nassert solution(\"4 1\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 3\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 2\\n4 3 1 2\\n2 1 4 3\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n2 1 4 3\") == \"NO\"\n\nprint(\"ALL TEST CASES PASSED\")"
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"YES\", \"Test case 1 failed\""
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('Input\\n4\\n\\nInput\\n7\\n\\n') == '2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n'"
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n\") == \"1 1\\n3 1\\n1 5\\n4 4\\n\"\nassert solution(\"7\\n\") == \"2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n\""
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\") == \"1 1\\n3 1\\n1 5\\n4 4\"\nassert solution(\"7\") == \"2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\"\n"
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Expected output: {output()}, got: {solution(input())}\""
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n\") == \"1 1\\n3 1\\n1 5\\n4 4\\n\"\nassert solution(\"7\\n\") == \"2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n\""
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\") == \"1 1\\n3 1\\n1 5\\n4 4\"\nassert solution(\"7\") == \"2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\""
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n\") == \"\\n1 1\\n3 1\\n1 5\\n4 4\\n\\n\"\nassert solution(\"7\\n\") == \"\\n2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n\\n\"\n\nSolution:\n\n```python\nfrom typing import List"
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n\") == \"1 1\\n3 1\\n1 5\\n4 4\\n\"\nassert solution(\"7\\n\") == \"2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n\"\n"
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n\") == \"1 1\\n3 1\\n1 5\\n4 4\\n\"\nassert solution(\"7\\n\") == \"2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n\"\nassert solution(\"10\\n\") == \"1 1\\n3 1\\n1 5\\n4 4\\n\""
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n1\\n\") == \"-1\\n\"\nassert solution(\"3\\n1 2 3\\n\") == \"3\\n\"\nassert solution(\"5\\n2 4 6\\n\") == \"-1\\n\"\nassert solution(\"5\\n1 2 3\\n\") == \"-1\\n\"\nassert solution(\"3\\n1 2 3\\n\") == \"3\\n\""
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '-1\\n'  # test case 1\nassert solution(stdin) == '3\\n'  # test case 2\n\nsolution(stdin)"
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n1\\n\") == -1\nassert solution(\"3\\n1 2 3\\n\") == 3\nprint(\"All tests passed!\")"
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == 3\nassert solution(\"1\\n1 2 3\\n\") == 1\nassert solution(\"2\\n1 2 3\\n\") == -1"
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == -1, \"No solution found\"  # Test case 1\n\nassert solution(\"1\\n1\\n\") == -1, \"No solution found\"  # Test case 2\n\nassert solution(\"3\\n1 2 3\\n\") == 3, \"Incorrect solution\"  # Test case 3"
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == -1, \"There is no solution to this problem.\""
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n1\\n\") == \"-1\\n\"\nassert solution(\"3\\n1 2 3\\n\") == \"3\\n\"\nassert solution(\"1\\n2\\n3\\n\") == \"-1\\n\"\nassert solution(\"1\\n1\\n1\\n\") == \"-1\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n\") == \"-1\\n\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n    1\n    1\n    ''') == '-1'\n\nassert solution('''\n    3\n    1 2 3\n    ''') == '3'\n\nassert solution('''\n    10\n    1 2 3 4 5 6 7 8 9 10\n    ''') == '-1'\n\nassert solution('''\n    1\n    1 2 3 4 5 6 7 8 9\n    ''') == '5'\n\nassert solution('''\n    2\n    1 2 3 4 5\n    ''') == '3'\n\nassert solution('''\n    4\n    1 2 3 4 5 6 7 8 9\n    ''') == '5'"
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n\\n3\\n1 2 3\\n') == '-1\\n'  # Polycarpus can't empty the chests\nassert solution('3\\n1 2 3\\n') == '3\\n'  # Minimum number of moves needed to finish the game is 3\nassert solution('4\\n1\\n2\\n3\\n4\\n') == '-1\\n'  # No sequence of moves leads to finishing the game\n\nfrom typing import List"
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n1\\n\") == -1\nassert solution(\"3\\n1 2 3\\n\") == 3"
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"46 2\") == \"7\\n0 1 0 0 1 1 1\"\nassert solution(\"2018 214\") == \"3\\n92 205 1\"\nassert solution(\"2018 214\") == \"3\\n92 205 1\"\nassert solution(\"2018 214\") == \"3\\n92 205 1\"\nassert solution(\"2018 214\") == \"3\\n92 205 1\"\nassert solution(\"2018 214\") == \"3\\n92 205 1\""
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"The solution is incorrect: expected {output}, got {solution(input())}\"\n"
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"46 2\\n2018 214\\n\") == \"3\\n92 205 1\"\nassert solution(\"2018 2018\\n200 200\\n\") == \"0\"\nassert solution(\"10 10\\n20 5\\n\") == \"0\""
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"46 2\\n2018 214\\n\") == \"3\\n92 205 1\"\nassert solution(\"1 2\\n2 3\\n\") == \"-1\"\nassert solution(\"46 1000\\n1 100\\n\") == \"1\""
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"46 2\\n2018 214\\n\") == \"3\\n92 205 1\\n\"\n\nassert solution(\"2 1\\n\") == \"1\\n\"\n\nassert solution(\"2018 214\\n\") == \"3\\n92 205 1\\n\"\n\nassert solution(\"46 2\\n2 1\\n\") == \"2\\n\"\n\nassert solution(\"46 1\\n1 1\\n\") == \"1\\n\""
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"46 2\") == \"7\\n0 1 0 0 1 1 1\\n\", \"Test 1 failed\"\nassert solution(\"2018 214\") == \"3\\n92 205 1\\n\", \"Test 2 failed\"\n"
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"46 2\") == \"7\\n0 1 0 0 1 1 1\\n\"\nassert solution(\"2018 214\") == \"3\\n92 205 1\\n\"\n"
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"46 2\") == \"7\\n0 1 0 0 1 1 1\"\nassert solution(\"2018 214\") == \"3\\n92 205 1\"\nassert solution(\"\") == \"-1\""
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"46 2\\n2018 214\\n\") == \"3\\n92 205 1\\n\"\nassert solution(\"2018 214\\n46 2\\n\") == \"3\\n92 205 1\\n\""
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"46 2\\n\") == \"7\\n0 1 0 0 1 1 1\\n\"\nassert solution(\"2018 214\\n\") == \"3\\n92 205 1\\n\""
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 20 20\\n6 2\\n1 3\\n2 6\\n\") == \"5.000000000000000\"\nassert solution(\"4 1 1\\n2 3\\n3 2\\n2 3\\n3 2\\n\") == \"0.400000000000000\""
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == 5.000000000000000"
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 5.000000000000000\nassert abs(solution - 5.000000000000000) <= 10**(-6)"
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == 5.000000000000000, \"The output is incorrect.\""
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 5.000000000000000, \"Test Case 1 failed\"\n\nassert solution() == 0.400000000000000, \"Test Case 2 failed\""
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 20 20\\n6 2\\n1 3\\n2 6\") == 5.000000000000000\nassert solution(\"4 1 1\\n2 3\\n3 2\\n2 3\\n3 2\") == 0.400000000000000"
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 5.0\nprint('All tests passed.')"
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '5.000000000000000', 'Expected output: 5.000000000000000'\n"
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 5.0, \"Error: incorrect output\""
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"5.000000000000000\"\nassert solution() == \"0.400000000000000\"\n"
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '4', \"Testcase failed\"\n"
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\") == \"4\"\nassert solution(\"8 2\") == \"5\"\n\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 2 3 4\") == \"5\"\nassert solution(\"0 0\") == \"1\"\nassert solution(\"5 5\") == \"1\"\nassert solution(\"1 2 3 4 5\") == \"10\""
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Output: {solution(input())}, Expected: {expected}\""
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 3') == '4'\nassert solution('8 2') == '5'"
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 3') == '4'\nassert solution('8 2') == '5'"
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=input()) == expected, f\"Got '{solution(stdin=input())}' instead of expected output for input '{stdin}'\"\n"
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"4\"\nassert solution(\"8 2\") == \"5\"\n"
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == 4\nassert solution(\"8 2\") == 5"
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == \"4\"\nassert solution(\"8 2\") == \"5\"\n"
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"4\"\nassert solution(\"8 2\") == \"5\""
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n4 5 7') == 'Conan\\n'\nassert solution('2\\n1 1') == 'Agasa\\n'"
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n4 5 7\") == \"Conan\"\nassert solution(\"2\\n1 1\") == \"Agasa\""
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n4 5 7\") == \"Conan\"\nassert solution(\"2\\n1 1\") == \"Agasa\""
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n4 5 7\\n\") == \"Conan\"\nassert solution(\"2\\n1 1\\n\") == \"Agasa\"\nassert solution(\"1\\n2 3\\n\") == \"Agasa\"\nassert solution(\"3\\n6 5 8\\n\") == \"Conan\"\nassert solution(\"4\\n3 5 7\\n\") == \"Agasa\"\nassert solution(\"3\\n1 1 1 2\\n\") == \"Conan\"\nassert solution(\"3\\n1 1 1 2\\n\") == \"Agasa\""
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Input\\n3\\n4 5 7\") == \"Conan\"\nassert solution(\"Input\\n2\\n1 1\") == \"Agasa\""
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n4 5 7\\n') == 'Conan'\nassert solution('2\\n1 1\\n') == 'Agasa'"
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == 'Conan'\nassert solution(input()) == 'Agasa'\n"
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n4 5 7\\n\") == \"Conan\"\nassert solution(\"2\\n1 1\\n\") == \"Agasa\""
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n4 5 7\") == \"Conan\"\nassert solution(\"2\\n1 1\") == \"Agasa\""
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n4 5 7\\n') == 'Conan\\n'\nassert solution('2\\n1 1\\n') == 'Agasa\\n'"
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == '''\n3 3\n#.\n..#\n"
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n\") == \"3 3\\n##.\\n..#\\n#.#\""
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n\") == \"#.#\\n##.\"\n"
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\n\") == \"3 3\\n##.\\n..#\\n#.#\\n\""
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n\") == \"\"\"\n    3 3\n    #.\n    ..#\n    #.#\n\"\"\"\n\nassert solution(\"4 5\\n\") == \"\"\"\n    5 5\n    ##\n    #..\n    ##.\n    #..\n\"\"\"\n\nassert solution(\"1 1\\n\") == \"\"\"\n    1 1\n    #\n\"\"\""
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"\"\"3 3\n##.\n..#\n"
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n\") == \"3 3\\n3#\\n##\"\nassert solution(\"1 2\\n\") == \"1 2\\n#\"\nassert solution(\"5 5\\n\") == \"5 5\\n#..\\n..#\"\nassert solution(\"3 4\\n\") == \"4 4\\n..#\"\nassert solution(\"2 4\\n\") == \"3 3\\n..#\"\n"
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n\") == \"3 3\\n3 1\\n1 1\\n1 3\\n1 2\\n1 4\\n\"\nassert solution(\"5 5\\n\") == \"5 5\\n5 1\\n1 1\\n1 5\\n5 4\\n1 2\\n5 3\\n\"\nassert solution(\"10 10\\n\") == \"10 10\\n10 1\\n1 1\\n1 10\\n10 9\\n1 5\\n10 8\\n\"\nassert solution(\"20 20\\n\") == \"20 20\\n20 1\\n1 1\\n1 19\\n19 19\\n1 15\\n19 18\\n15 18\\n18 17\\n18 12\\n12 18\\n17 17\\n\""
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(2, 3) == \"\"\"\n3 3\n#.\n..#\n"
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"3 3\\n3 3\\n##.\\n..#\\n#.#\\n\", \"Test Case 1\""
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\") == \"4\\n1 3 4 5 \"\nassert solution(\"3 2\\n+ 1\\n- 2\\n\") == \"1\\n3  \"\nassert solution(\"2 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\") == \"0\\n\"\nassert solution(\"5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\") == \"3\\n2 3 5 \"\nassert solution(\"2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\") == \"0\\n\""
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test failed: solution({input()})!= expected_output({expected_output})\"\n\nn, m = map(int, input().split())\nmessages = list(map(int, input().split()))\nleader_set = set()\n\nfor i in range(m):\n    if messages[i] == '+':\n        leader_set.add(i + 1)\n    elif messages[i] == '-':\n        leader_set.remove(i + 1)"
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected\n\nfrom typing import List"
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\nr'''\n5 4\n+ 1\n+ 2\n- 2\n- 1\n'''\n) == '''\n4\n1 3 4 5 \n'''\n\nassert solution(\nr'''\n3 2\n+ 1\n- 2\n'''\n) == '''\n1\n3 \n'''\n\nassert solution(\nr'''\n2 4\n+ 1\n- 1\n+ 2\n- 2\n'''\n) == '''\n0\n'''\n\nassert solution(\nr'''\n5 6\n+ 1\n- 1\n- 3\n+ 3\n+ 4\n- 4\n'''\n) == '''\n3\n2 3 5 \n'''\n\nassert solution(\nr'''\n2 4\n+ 1\n- 2\n+ 2\n- 1\n'''\n) == '''\n0\n'''"
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), \"Test case failed.\"\n"
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''5 4\n+ 1\n+ 2\n- 2\n- 1''') == '4\\n1 3 4 5'\nassert solution('''3 2\n+ 1\n- 2\n''') == '1\\n3'\nassert solution('''2 4\n+ 1\n- 1\n+ 2\n- 2''') == '0'\nassert solution('''5 6\n+ 1\n- 1\n- 3\n+ 3\n+ 4\n- 4''') == '3\\n2 3 5'\nassert solution('''2 4\n+ 1\n- 2\n+ 2\n- 1''') == '0'\n"
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '4\\n1 3 4 5\\n\\n1\\n3 4\\n\\n0\\n2 3\\n\\n3'\n"
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"0\\n\"\nassert solution(input()) == \"4\\n1 3 4 5 \\n\"\nassert solution(input()) == \"1\\n3 \nassert solution(input()) == \"0\\n\""
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''5 4\n+ 1\n+ 2\n- 2\n- 1''') == '''4\n1 3 4 5'''\n\nassert solution('''3 2\n+ 1\n- 2\n''') == '''1'''\n\nassert solution('''2 4\n+ 1\n- 1\n+ 2\n- 2''') == '''0'''\n\nassert solution('''5 6\n+ 1\n- 1\n- 3\n+ 3\n+ 4\n- 4''') == '''3\n2 3 5'''\n\nassert solution('''2 4\n+ 1\n- 2\n+ 2\n- 1''') == '''0'''"
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('+ 1\\n- 2\\n') == '1\\n3 4 5 '\nassert solution('+ 1\\n+ 2\\n- 2\\n- 1\\n') == '1\\n3 4 5 '\nassert solution('+ 1\\n- 2\\n- 1\\n+ 2\\n- 2\\n') == '1\\n3 4 5 '\nassert solution('+ 1\\n- 2\\n+ 2\\n- 1\\n+ 2\\n- 2\\n') == '1\\n3 4 5 '\nassert solution('+ 1\\n- 2\\n+ 2\\n- 1\\n+ 2\\n- 2\\n') == '0\\n'"
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Solution failed: {solution(input())}!= {output}\""
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 3\\n1 2 3\\n1 2 3\\n9\\n') == '4'\nassert solution('5 1\\n5 4 2 4 5\\n2\\n5\\n') == '1'\n"
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 3\\n1 2 3\\n1 2 3\\n9') == '4\\n'\nassert solution('5 1\\n5 4 2 4 5\\n2\\n5') == '1\\n'"
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"4\\n\"\nassert solution(stdin) == \"1\\n\""
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"4\", \"Expected output: 4\"\nassert solution(input()) == \"0\", \"Expected output: 0\"\nassert solution(input()) == \"1\", \"Expected output: 1\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\na 2 3\\nb 1 2 3\\nx 9\\n\") == \"4\"\nassert solution(\"5 1\\n5 4 2 4 5\\nx 2\\n\") == \"1\""
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Test failed for case {test_case}\""
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n1 2 3\\n1 2 3\\n9\\n\") == \"4\\n\"\nassert solution(\"5 1\\n5 4 2 4 5\\n2\\n5\\n\") == \"1\\n\"\nassert solution(\"1 2 3\\n4 5 6 7 8\\n9 10 11 12 13\\n14 15 16 17 18\\n\") == \"4\\n\""
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n1 2 3\\n1 2 3\\n9\\n\") == \"4\\n\"\nassert solution(\"5 1\\n5 4 2 4 5\\n2\\n5\\n\") == \"1\\n\"\nassert solution(\"5 3\\n2 6 9\\n3\\n10\\n\") == \"1\\n\""
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n1 2 3\\n1 2 3\\n9\\n\") == \"4\"\nassert solution(\"5 1\\n5 4 2 4 5\\n2\\n5\\n\") == \"1\"\n"
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 3\\ncba') == 'NO'\nassert solution('3 4\\ncba') == 'cbd'\nassert solution('4 4\\nabcd') == 'abda'\n"
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\ncba\") == \"NO\"\nassert solution(\"3 4\\ncba\") == \"cbd\"\nassert solution(\"4 4\\nabcd\") == \"abda\""
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 3\\ncba') == 'NO'\nassert solution('3 4\\ncba') == 'cbd'\nassert solution('4 4\\nabcd') == 'abda'"
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\ncba\") == \"NO\"\nassert solution(\"3 4\\ncba\") == \"cbd\"\nassert solution(\"4 4\\nabcd\") == \"abda\""
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\ncba\") == \"NO\"\nassert solution(\"3 4\\ncba\") == \"cbd\"\nassert solution(\"4 4\\nabcd\") == \"abda\""
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 3\\ncba') == 'NO'\nassert solution('3 4\\ncba') == 'cbd'\nassert solution('4 4\\nabcd') == 'abda'\n\nfrom typing import List\n"
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\nbca\") == \"NO\"\nassert solution(\"3 4\\nbca\") == \"cbd\"\nassert solution(\"4 4\\nabd\") == \"abda\""
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\ncba\") == \"NO\"\nassert solution(\"3 4\\ncba\") == \"cbd\"\nassert solution(\"4 4\\nabcd\") == \"abda\""
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\ncba\") == \"NO\"\nassert solution(\"3 4\\ncba\") == \"cbd\"\nassert solution(\"4 4\\nabcd\") == \"abda\""
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\ncab\") == \"NO\"\nassert solution(\"3 4\\ncab\") == \"cbd\"\nassert solution(\"4 4\\nabd\") == \"abda\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n0101\") == \"quailty\"\nassert solution(\"6 1\\n010101\") == \"once again\"\nassert solution(\"6 5\\n010101\") == \"tokitsukaze\"\nassert solution(\"4 1\\n0011\") == \"once again\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"quailty\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\n0101\") == \"quailty\"\nassert solution(\"6 1\\n010101\") == \"once again\"\nassert solution(\"6 5\\n010101\") == \"tokitsukaze\"\nassert solution(\"4 1\\n0011\") == \"once again\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\") == \"quailty\"\nassert solution(\"6 1\") == \"once again\"\nassert solution(\"6 5\") == \"tokitsukaze\"\nassert solution(\"4 1\") == \"once again\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Duel!\") == \"quailty\"\nassert solution(\"Betting on the lovely princess Claris, the duel between Tokitsukaze and Quailty has started.\\nThere are 4 cards in a row. Each card has two sides, one of which has color. At first, some of these cards are with color sides facing up and others are with color sides facing down. Then they take turns flipping cards, in which Tokitsukaze moves first. In each move, one should choose exactly 2 consecutive cards and flip them to the same side, which means to make their color sides all face up or all face down. If all the color sides of these 4 cards face the same direction after one's move, the one who takes this move will win.\n\nPrincess Claris wants to know who will win the game if Tokitsukaze and Quailty are so clever that they won't make mistakes.\") == \"quailty\"\n\nassert solution
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\n0101\") == \"quailty\"\nassert solution(\"6 1\\n010101\") == \"once again\"\nassert solution(\"6 5\\n010101\") == \"tokitsukaze\"\nassert solution(\"4 1\\n0011\") == \"once again\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n0101\\n\") == \"quailty\\n\"\nassert solution(\"6 1\\n010101\\n\") == \"once again\\n\"\nassert solution(\"6 5\\n010101\\n\") == \"tokitsukaze\\n\"\nassert solution(\"4 1\\n0011\\n\") == \"once again\\n\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n0101\") == \"quailty\"\nassert solution(\"6 1\\n010101\") == \"once again\"\nassert solution(\"6 5\\n010101\") == \"tokitsukaze\"\nassert solution(\"4 1\\n0011\") == \"once again\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 2\\n0101') == 'quailty'\nassert solution('6 1\\n010101') == 'once again'\nassert solution('6 5\\n010101') == 'tokitsukaze'\nassert solution('4 1\\n0011') == 'once again'"
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n0101\") == \"quailty\"\nassert solution(\"6 1\\n010101\") == \"once again\"\nassert solution(\"6 5\\n010101\") == \"tokitsukaze\"\nassert solution(\"4 1\\n0011\") == \"once again\""
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 4 50\\n20 100\\n60 10 40 80\") == \"50\"\nassert solution(\"1 2 10\\n11\") == \"7\"\n"
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 4 50\\n20 100\\n60 10 40 80') == '50'\nassert solution('1 2 10\\n11') == '7'"
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"50\"\nassert solution(input()) == \"7\""
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"50\""
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 4 50\\n20 100\\n60 10 40 80\") == \"50\"\nassert solution(\"1 2 10\\n11\") == \"7\"\n"
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 4 50\\n20 100\\n60 10 40 80\") == \"50\\n\"\nassert solution(\"1 2 10\\n11\") == \"7\\n\""
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 4 50\\n20 100\\n60 10 40 80\") == \"50\\n\"\nassert solution(\"1 2 10\\n11\") == \"7\\n\""
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"Test failed for input {stdin}.\""
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 4 50\\n20 100\\n60 10 40 80\") == \"50\"\nassert solution(\"1 2 10\\n11\\n15 7\") == \"7\""
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n1 1\\n\") == \"1 6\\n\"\nassert solution(\"3 2\\n0 0\\n\") == \"1 3\\n\"\nassert solution(\"1 10\\n5 3\\n\") == \"5 5\\n\""
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input) == output, f\"Solution: {solution(input)}\\nInput: {input}\\nOutput: {output}\""
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1 6\"\n"
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1 6\""
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n1 1\\n\\n3 2\\n0 0\\n\\n1 10\\n5 3\") == \"1 6\\n\"\nassert solution(\"3 2\\n0 0\\n\\n1 10\\n5 3\") == \"1 3\\n\"\nassert solution(\"1 10\\n5 3\") == \"5 5\\n\""
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output() for input, output in zip(sample_inputs, sample_outputs)\nprint(\"All tests passed!\")"
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n1 1\\n\") == \"1 6\\n\"\nassert solution(\"3 2\\n0 0\\n\") == \"1 3\\n\"\nassert solution(\"1 10\\n5 3\\n\") == \"5 5\\n\""
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n1 1\\n\") == \"1 6\\n\"\nassert solution(\"3 2\\n0 0\\n\") == \"1 3\\n\"\nassert solution(\"1 10\\n5 3\\n\") == \"5 5\\n\""
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n1 1\\n\") == \"1 6\\n\"\nassert solution(\"3 2\\n0 0\\n\") == \"1 3\\n\"\nassert solution(\"1 10\\n5 3\\n\") == \"5 5\\n\"\n"
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n1 1\\n\") == \"1 6\\n\"\nassert solution(\"3 2\\n0 0\\n\") == \"1 3\\n\"\nassert solution(\"1 10\\n5 3\\n\") == \"5 5\\n\""
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '2\\n2 3\\n3 3\\n'\n"
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n-2 5 -1\") == \"2\\n2 3\\n3 3\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2\\n2 3\\n3 3\\n\"\n"
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin='3\\n-2 5 -1') == '2\\n2 3\\n3 3\\n'\n"
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"2\\n2 3\\n3 3\"\nassert solution(2) == \"2\\n2 3\\n3 3\"\nassert solution(0) == \"0\"\nassert solution(-3) == \"0\"\nassert solution(10) == \"0\"\nassert solution(5) == \"2\\n2 3\\n3 3\""
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n-2 5 -1\\n\") == \"2\\n2 3\\n3 3\\n\"\n"
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"-2 5 -1\") == \"2\\n2 3\\n3 3\"\nassert solution(\"-1 2 -3\") == \"2\\n2 2\\n2 2\""
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '''2\n2 3\n3 3\n'''"
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\""
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n-2 5 -1\") == \"2\\n2 3\\n3 3\""
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=input()) == output(), f\"Expected {output()}, but got {solution(stdin=input())}\""
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"2\n0 3\n1 5\n\"\"\"\n) == \"3\\n\"\n\nassert solution(\n    \"\"\"1\n0 4\n\"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"2\n1 10\n2 2\n\"\"\"\n) == \"3\\n\""
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n0 3\\n1 5\\n\") == \"3\\n\"\nassert solution(\"1\\n0 4\\n\") == \"1\\n\"\nassert solution(\"2\\n1 10\\n2 2\\n\") == \"3\\n\""
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n0 3\\n1 5\") == \"3\\n\"\nassert solution(\"1\\n0 4\\n\") == \"1\\n\"\nassert solution(\"2\\n1 10\\n2 2\\n\") == \"3\\n\""
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"3\\n\""
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n0 3\\n1 5\") == \"3\"\nassert solution(\"1\\n0 4\\n\") == \"1\"\nassert solution(\"2\\n1 10\\n2 2\") == \"3\""
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n0 3\\n1 5\\n\") == \"3\\n\"\nassert solution(\"1\\n0 4\\n\") == \"1\\n\"\nassert solution(\"2\\n1 10\\n2 2\\n\") == \"3\\n\""
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('Input') == 'Output'\nprint(\"All tests passed!\")"
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n0 3\\n1 5\\n\") == \"3\"\nassert solution(\"1\\n0 4\\n\") == \"1\"\nassert solution(\"2\\n1 10\\n2 2\\n\") == \"3\""
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 18\\n5 6 1 10 12 2\\n\") == \"16\\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18\\n\", \"Pari wants to buy an expensive chocolate from Arya and she has n coins, the value of the i-th coin is c_{i}. The price of the chocolate is k, so Pari will take a subset of her coins with sum equal to k and give it to Arya. Looking at her coins, a question came to her mind: after giving the coins to Arya, what values does Arya can make with them? She is jealous and she doesn't want Arya to make a lot of values. So she wants to know all the values x, such that Arya will be able to make x using some subset of coins with the sum k.\n\nFormally, Pari wants to know the values x such that there exists a subset of coins with the sum k such that some subset of this subset has the sum x, i.e. there is exists some way to pay for the chocolate, such that Arya will be able to make the sum x using these coins.\n\n-----Input-----\n\nThe first line contains two integers n and k (1  \u2264  n, k  \u2264  500)\u00a0\u2014 the number of coins and the price of the chocolate, respectively.\n\nNext line will contain n integers c_1, c_2,..., c_{n} (1 \u2264 c_{i} \u2264 500)\u00a0\u2014 the values of Pari's coins.\n\nIt's guaranteed that one can make value k using these coins.\n\n\n-----Output-----\n\nFirst line of the output must contain a single integer q\u2014 the number of suitable values x. Then print q integers in ascending order\u00a0\u2014 the values that Arya can make for some subset of coins of Pari that pays for the chocolate.\n\n\n-----Examples-----\nInput\n6 18\n5 6 1 10 12 2\n\nOutput\n16\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18 \n\nInput\n3 50\n25 25 50\n\nOutput\n3\n0 25 50"
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n6 18\n5 6 1 10 12 2\n''') == '16\\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18'\nassert solution('''\n3 50\n25 25 50\n''') == '3\\n0 25 50'\n"
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected, f\"Test failed: Expected {expected}, got {solution(stdin)}\"\n"
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 6 1 10 12 2\\n6 6 2\\n5 5 2\\n2 3 1\\n4 4 1\\n\") == \"16\\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18\"\nassert solution(\"3 50\\n25 25 50\\n\") == \"3\\n0 25 50\""
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 18\\n5 6 1 10 12 2\") == \"16\\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18\\n\"\nassert solution(\"3 50\\n25 25 50\") == \"3\\n0 25 50\""
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('6 18\\n5 6 1 10 12 2') == '16\\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18 '"
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"16\\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18\\n3\\n0 25 50\"\n"
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '''16\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18\n'''"
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"\"\"6 18\n5 6 1 10 12 2\n\nOutput\n16\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18\n\nInput\n3 50\n25 25 50\n\nOutput\n3\n0 25 50\"\"\") == \"16\\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18\\n3\\n0 25 50\"\n"
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 6 1 10 12 2\\n6\\n10 12 2\\n1\\n1\\n10\") == \"16\\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18\\n\"\nassert solution(\"3 50\\n25 25 50\\n\") == \"3\\n0 25 50\\n\""
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\") == \"3\"\nassert solution(\"2\") == \"2\"\n"
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\") == \"3\"\nassert solution(\"2\") == \"2\""
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(2) == 2\nassert solution(6) == 3\nassert solution(4) == 2\nassert solution(1) == 1\nassert solution(3) == 1\nassert solution(5) == 2\nassert solution(7) == 2\nassert solution(9) == 3\nassert solution(10) == 3\nassert solution(11) == 3\nassert solution(12) == 3\n"
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(6) == 3\nassert solution(2) == 2"
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(6) == \"3\"\nassert solution(2) == \"2\""
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(6) == \"3\\n\"\nassert solution(2) == \"2\\n\""
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n\") == \"3\\n\"\nassert solution(\"2\\n\") == \"2\\n\""
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 3\nassert solution(2) == 2"
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('6') == '3'\nassert solution('2') == '2'"
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\\n1\\n20\\n2\\n30\\n3\") == 180\nassert solution(\"3\\n3\\n2\\n4\\n1\") == 21\nassert solution(\"1\\n5\\n10\") == 50"
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n10 1\\n20 2\\n30 3') == 180\nassert solution('3\\n3 1\\n2 2\\n4 3') == 21\nassert solution('1\\n5 10') == 50\nprint('All test cases passed')"
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 180\nassert solution(3) == 21\nassert solution(1) == 50"
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 5 lines of code to test the correctness of solution:\n\nMany years have passed, and n friends met at a party again. Technologies have leaped forward since the last meeting, cameras with timer appeared and now it is not obligatory for one of the friends to stand with a camera, and, thus, being absent on the photo.\n\nSimply speaking, the process of photographing can be described as follows. Each friend occupies a rectangle of pixels on the photo: the i-th of them in a standing state occupies a w_{i} pixels wide and a h_{i} pixels high rectangle. But also, each person can lie down for the photo, and then he will occupy a h_{i} pixels wide and a w_{i} pixels high rectangle.\n\nThe total photo will have size W \u00d7 H, where W is the total width of all the people rectangles, and H is the maximum of the heights. The friends want to determine what minimum area the group photo can they obtain if no more than n / 2 of them can lie on the ground (it would be strange if more than n / 2 gentlemen lie on the ground together, isn't it?..)\n\nHelp them to achieve this goal.\n\n\n-----Input-----\n\nThe first line contains integer n (1 \u2264 n \u2264 1000) \u2014 the number of friends.\n\nThe next n lines have two integers w_{i}, h_{i} (1 \u2264 w_{i}, h_{i} \u2264 1000) each, representing the size of the rectangle, corresponding to the i-th friend.\n\n\n-----Output-----\n\nPrint a single integer equal to the minimum possible area of the photo containing all friends if no more than n / 2 of them can lie on the ground.\n\n\n-----Examples-----\nInput\n3\n10 1\n20 2\n30 3\n\nOutput\n180\n\nInput\n3\n3 1\n2 2\n4 3\n\nOutput\n21\n\nInput\n1\n5 10\n\nOutput\n50"
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n10 1\\n20 2\\n30 3\\n\") == 180\nassert solution(\"3\\n3 1\\n2 2\\n4 3\\n\") == 21\nassert solution(\"1\\n5 10\\n\") == 50"
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, \"10 1\\n20 2\\n30 3\\n\") == 180\nassert solution(3, \"3 1\\n2 2\\n4 3\\n\") == 21\nassert solution(1, \"5 10\\n\") == 50"
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n10 1\\n20 2\\n30 3\\n\") == \"180\\n\"\nassert solution(\"3\\n3 1\\n2 2\\n4 3\\n\") == \"21\\n\"\nassert solution(\"1\\n5 10\\n\") == \"50\\n\""
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 180\nassert solution(3) == 21\nassert solution(1) == 50"
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n10 1\\n20 2\\n30 3\\n\") == \"180\\n\"\nassert solution(\"3\\n3 1\\n2 2\\n4 3\\n\") == \"21\\n\"\nassert solution(\"1\\n5 10\\n\") == \"50\\n\""
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, \"Error: The output is incorrect.\""
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), \"Test failed\""
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n0 0 10\\n\") == \"2\\n\"\nassert solution(\"5\\n0 1 2 3 4\\n\") == \"1\\n\"\nassert solution(\"4\\n0 0 0 0\\n\") == \"4\\n\"\nassert solution(\"9\\n0 1 0 2 0 1 1 2 10\\n\") == \"3\\n\""
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n0 0 10\\n\") == \"2\"\nassert solution(\"5\\n0 1 2 3 4\\n\") == \"1\"\nassert solution(\"4\\n0 0 0 0\\n\") == \"4\"\nassert solution(\"9\\n0 1 0 2 0 1 1 2 10\\n\") == \"3\""
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n0 0 10\\n\") == \"2\\n\"\nassert solution(\"5\\n0 1 2 3 4\\n\") == \"1\\n\"\nassert solution(\"4\\n0 0 0 0\\n\") == \"4\\n\"\nassert solution(\"9\\n0 1 0 2 0 1 1 2 10\\n\") == \"3\\n\""
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n0 0 10\\n5\\n0 1 2 3 4\\n4\\n0 0 0 0\\n9\\n0 1 0 2 0 1 1 2 10\\n3\") == \"2\"\nassert solution(\"5\\n0 1 2 3 4\\n4\\n0 0 0 0\\n9\\n0 1 0 2 0 1 1 2 10\\n3\") == \"1\"\nassert solution(\"4\\n0 0 0 0\\n4\\n0 0 0 0\\n9\\n0 1 0 2 0 1 1 2 10\\n3\") == \"4\"\nassert solution(\"9\\n0 1 0 2 0 1 1 2 10\\n3\") == \"3\""
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('0 0 10\\n3\\n0 1 2 3 4\\n5\\n0 0 0 0\\n4\\n0 0 0 0\\n9\\n0 1 0 2 0 1 1 2 10\\n3') == '2'\nassert solution('0 1 2 3 4\\n0 0 10\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '1'\nassert solution('0 0 0 0\\n0 0 0 0\\n1 2 3 4 5\\n6 7 8 9 10\\n0 0 0 0\\n0 0 0 0') == '4'\nassert solution('0 0 10\\n0 1 2 3 4\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0') == '3'\nassert solution('0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0') == '4'\nassert solution('0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0') == '4'\nassert solution('0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0') == '4'\nassert solution('0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0') == '4'"
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n0 0 10\\n\") == \"2\"\nassert solution(\"5\\n0 1 2 3 4\\n\") == \"1\"\nassert solution(\"4\\n0 0 0 0\\n\") == \"4\"\nassert solution(\"9\\n0 1 0 2 0 1 1 2 10\\n\") == \"3\""
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n0 0 10\\n\") == \"2\\n\"\nassert solution(\"5\\n0 1 2 3 4\\n\") == \"1\\n\"\nassert solution(\"4\\n0 0 0 0\\n\") == \"4\\n\"\nassert solution(\"9\\n0 1 0 2 0 1 1 2 10\\n\") == \"3\\n\""
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 0 10\") == \"2\"\nassert solution(\"5 0 1 2 3 4\") == \"1\"\nassert solution(\"4 0 0 0\") == \"4\"\nassert solution(\"9 0 1 0 2 0 1 1 2 10\") == \"3\"\n\nfrom typing import List"
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n0 0 10\\n') == '2\\n'\nassert solution('5\\n0 1 2 3 4\\n') == '1\\n'\nassert solution('4\\n0 0 0 0\\n') == '4\\n'\nassert solution('9\\n0 1 0 2 0 1 1 2 10\\n') == '3\\n'\n"
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n4\n0 0\n0 1\n1 0\n1 1\n''') == '5\\n'"
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 0\\n1 1\") == \"5\\n\""
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n0 0\\n0 1\\n1 0\\n1 1\\n') == '5\\n'"
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"5\\n\"\n"
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '5\\n'\nprint(sum(2**i for i in range(2, N+1)))\n"
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '5\\n'  # Expected output: 5\n\nimport math"
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 0\\n1 1\") == \"5\\n\"\n\nfrom collections import Counter"
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"5\""
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"5\""
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"5\\n\""
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"4\\n\", \"The minimum number of operations required to achieve the objective is not correct.\""
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"4\\n\""
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\") == \"4\\n\""
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"4\\n\", \"The solution is incorrect.\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\") == \"4\\n\"\nassert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"4\\n\""
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\") == \"4\\n\"\n\nHere's the Python code to solve the problem:\n\n```python\n"
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"4\\n\""
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n') == '4\\n'\n\nassert solution('1\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n') == '2\\n'\n\nassert solution('1\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n') == '3\\n'\n\nassert solution('3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n') == '4\\n'\n\nassert solution('1\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n') == '5\\n'"
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"4\\n\"\nassert solution(\"1\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"5\\n\""
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"4\\n\""
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n6\\n3\\n\") == \"4\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\"\n\nassert solution(\"5\\n6\\n3\\n\") == \"4\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\""
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Input:\\n{input()}\\nOutput:\\n{output()}\"\n"
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n6\\n3\\n') == '4\\n'\nassert solution('5\\n3\\n5\\n') == '4\\n'"
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n6\\n3\\n\") == \"4\\n\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\\n\""
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n6\\n3\\n\") == \"4\\n\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\\n\""
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"4\", \"Test case not passed\""
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n6\\n3\\n\") == \"4\\n\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\\n\""
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n6\\n3\\n\") == 4\nassert solution(\"5\\n3\\n5\\n\") == 4\nassert solution(\"5\\n6\\n6\\n\") == 4\nassert solution(\"3\\n3\\n1\\n\") == 4\nassert solution(\"5\\n6\\n3\\n\") == 4\nassert solution(\"5\\n3\\n5\\n\") == 4\nassert solution(\"5\\n6\\n6\\n\") == 4\nassert solution(\"3\\n3\\n1\\n\") == 4"
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''2\n4 2''') == '2'\n\nassert solution('''8\n1 2 4 8 16 32 64 576''') == '32'"
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n4 2\\n\") == \"2\\n\", \"Expected output: '2'\\n\"\nassert solution(\"8\\n1 2 4 8 16 32 64 576\\n\") == \"32\\n\", \"Expected output: '32'\\n\"\nassert solution(\"8\\n1 2 4 8 16 32 64 576\\n\") == \"32\\n\", \"Expected output: '32'\\n\"\nassert solution(\"8\\n1 2 4 8 16 32 64 576\\n\") == \"32\\n\", \"Expected output: '32'\\n\""
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n4 2\\n\") == \"2\\n\"\nassert solution(\"8\\n1 2 4 8 16 32 64 576\\n\") == \"32\\n\""
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Output\""
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2\\n\"\nassert solution(stdin) == \"32\\n\"\nassert solution(stdin) == \"2\\n\"\nassert solution(stdin) == \"32\\n\"\nassert solution(stdin) == \"32\\n\"\nassert solution(stdin) == \"2\\n\""
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\") == \"2\", \"The given code is not correct.\"\nassert solution(\"8 1 2 4 8 16 32 64 576\") == \"32\", \"The given code is not correct.\""
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n4\\n\\nInput\\n8\\n1 2 4 8 16 32 64 576\\n\\nOutput\\n32\") == \"32\\n\"\n"
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n4 2\\n\") == \"2\\n\"\nassert solution(\"8\\n1 2 4 8 16 32 64 576\\n\") == \"32\\n\"\nassert solution(\"10\\n3 6 10 15\\n\") == \"3\\n\""
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(b\"2\") == \"2\\n\"\nassert solution(b\"8\\n1\\n2\\n4\\n8\\n16\\n32\\n64\\n576\") == \"32\\n\""
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n4 2\") == \"2\"\nassert solution(\"8\\n1 2 4 8 16 32 64 576\") == \"32\""
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('400 4\\n100 300 450 500') == '2'\nassert solution('50 2\\n100 25') == '3'"
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"400 4\\n100 300 450 500\\n\") == \"2\"\nassert solution(\"50 2\\n100 25\\n\") == \"3\""
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Testcase failed.\""
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()\n\ninput = \"\"\"\n400 4\n100 300 450 500\n\"\"\"\noutput = \"\"\"2\"\"\"\n\ninput = \"\"\"\n50 2\n100 25\n\"\"\"\noutput = \"\"\"3\"\"\"\n\ninput = \"\"\"\n100 5\n100 50\n\"\"\"\noutput = \"\"\"-1\"\"\""
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"400 4\\n100 300 450 500\") == \"2\"\nassert solution(\"50 2\\n100 25\") == \"3\""
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"400 4\\n100 300 450 500\") == \"2\"\nassert solution(\"50 2\\n100 25\") == \"3\"\n"
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('400 4\\n100 300 450 500\\n') == '2'\nassert solution('50 2\\n100 25\\n') == '3'\n\nprint(solution(stdin))"
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(str(400)) == 2\nassert solution(str(50)) == 3"
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('400 4\\n100 300 450 500\\n') == '2\\n'\nassert solution('50 2\\n100 25\\n') == '3\\n'\nassert solution('200 2\\n100 25\\n') == '-1\\n'\nassert solution('') == '-1\\n'"
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\") == \"6\\n\", \"Test case 1 failed\"\nassert solution(\"5 3\") == \"18\\n\", \"Test case 2 failed\"\nassert solution(\"7 4\") == \"31\\n\", \"Test case 3 failed\"\nassert solution(\"9 5\") == \"78\\n\", \"Test case 4 failed\"\nassert solution(\"11 6\") == \"204\\n\", \"Test case 5 failed\"\n\nfrom typing import List"
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"6\\n\", \"Incorrect output\""
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(4, 2) == \"6\""
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"6\\n\", \"Incorrect output\""
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\") == \"6\\n\"\n"
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\") == \"6\"\nassert solution(\"1 1000000000\") == \"126875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875056875"
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\") == \"6\"\nassert solution(\"10 5\") == \"10\"\nassert solution(\"10 2\") == \"6\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 1\") == \"2\"\n"
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n\") == \"6\\n\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\") == \"6\\n\""
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\") == \"6\\n\", \"Test Case 1\"\n\nassert solution(\"7 3\") == \"8\\n\", \"Test Case 2\"\n\nassert solution(\"8 5\") == \"12\\n\", \"Test Case 3\"\n\nassert solution(\"9 4\") == \"14\\n\", \"Test Case 4\"\n\nassert solution(\"10 6\") == \"18\\n\", \"Test Case 5\"\n\nassert solution(\"11 7\") == \"20\\n\", \"Test Case 6\"\n\nassert solution(\"12 8\") == \"24\\n\", \"Test Case 7\"\n\nassert solution(\"13 9\") == \"28\\n\", \"Test Case 8\"\n\nassert solution(\"14 10\") == \"30\\n\", \"Test Case 9\"\n\nassert solution(\"15 11\") == \"32\\n\", \"Test Case 10\"\n\nassert solution(\"16 12\") == \"36\\n\", \"Test Case 11\"\n\nassert solution(\"17 13\") == \"40\\n\", \"Test Case 12\"\n\nassert solution(\"18 14\") == \"44\\n\", \"Test Case 13\"\n\nassert solution(\"19 15\") == \"48\\n\", \"Test Case 14\"\n\nassert solution(\"20 16\") == \"50\\n\", \"Test Case 15\"\n\nassert solution(\"21 17\") == \"56\\n\", \"Test Case 16\"\n\nassert solution(\"22 18\") == \"60\\n\", \"Test Case 17\"\n\nassert solution(\"23 19\") == \"64\\n\", \"Test Case 18\"\n\nassert solution(\"24 20\") == \"66\\n\", \"Test Case 19\"\n\nassert solution(\"25 21\") == \"72\\n\", \"Test Case 20\"\n\nassert solution(\"26 22\") == \"76\\n\", \"Test Case 21\"\n\nassert solution(\"27 23\") == \"80\\n\", \"Test Case 22\"\n\nassert solution(\"28 24\") == \"82\\n\", \"Test Case 23\"\n\nassert solution(\"29 25\") == \"84\\n\", \"Test Case 24\"\n\nassert solution(\"30 26\") == \"88\\n\", \"Test Case 25\"\n\nassert solution(\"31 27\") == \"90\\n\", \"Test Case 26\"\n\nassert solution(\"32 28\") == \"92\\n\", \"Test Case 27\"\n\nassert solution(\"33 29\") == \"94\\n\", \"Test Case 28\"\n\nassert solution(\"34 30\") == \"98\\n\", \"Test Case 29\"\n\nassert solution(\"35 31\") == \"100\\n\", \"Test Case 30\"\n\nassert solution(\"36 32\") == \"102\\n\", \"Test Case 31\"\n\nassert solution(\"37 33\") == \"104\\n\", \"Test Case 32\"\n\nassert solution(\"38 34\") == \"108\\n\", \"Test Case 33\"\n\nassert solution(\"39 35\") == \"110\\n\", \"Test Case 34\"\n\nassert solution(\"40 36\") == \"114\\n\", \"Test Case 35\"\n\nassert solution(\"41 37\") == \"116\\n\", \"Test Case 36\"\n\nassert solution(\"42 38\") == \"120\\n\", \"Test Case 37\"\n\nassert solution(\"43 39\") == \"122\\n\", \"Test Case 38\"\n\nassert solution(\"44 40\") == \"126\\n\", \"Test Case 39\"\n\nassert solution(\"45 41\") == \"128\\n\", \"Test Case 40\"\n\nassert solution(\"46 42\") == \"130\\n\", \"Test Case 41\"\n\nassert solution(\"47 43\") == \"1"
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '499122178\\n499122178\\n499122178\\n', \"Incorrect result\""
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n') == '499122178\\n499122178\\n499122178\\n', \"Output not correct\"\n"
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n\") == \"499122178\\n499122178\\n499122178\\n\"\nassert solution(\"6\\n\") == \"184134626\\n184134626\\n184134626\\n184134626\\n184134626\\n184134626\\n\"\nassert solution(\"10\\n\") == \"499122178\\n499122178\\n499122178\\n499122178\\n499122178\\n499122178\\n499122178\\n499122178\\n\""
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"499122178\\n499122178\\n499122178\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"499122178\\n499122178\\n499122178\\n\", \"Test case 1\"\nassert solution(\"1\") == \"1\\n1\\n1\\n\", \"Test case 2\"\nassert solution(\"4\") == \"2331\\n2331\\n2331\\n\", \"Test case 3\""
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"499122178\\n499122178\\n499122178\"\n"
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=input()) == \"499122178\\n499122178\\n499122178\\n\", \"The solution should return the expected output.\"\nassert solution(stdin=\"4\") == \"1\\n\", \"The solution should return the expected output.\""
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"499122178\\n499122178\\n499122178\\n\"\nassert solution() == \"499122178\\n499122178\\n499122178\\n\""
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n\") == \"499122178\\n499122178\\n499122178\\n\"\nassert solution(\"5\\n\") == \"999999999\\n999999999\\n999999999\\n\"\nassert solution(\"10\\n\") == \"999999999\\n999999999\\n999999999\\n\""
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"499122178\\n499122178\\n499122178\"\n"
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(2) == \"6\"\nassert solution(3) == \"6669\"\nassert solution(10) == \"-1\""
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"6\", \"Expected output: 6\"\nassert solution(\"3\") == \"6669\", \"Expected output: 6669\"\nassert solution(\"10\") == \"-1\", \"Expected output: -1\""
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\n') == '6\\n'\nassert solution('3\\n') == '6669\\n'\nassert solution('10\\n') == '-1\\n'\n"
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(2) == 6\nassert solution(3) == 6669\nassert solution(10) == -1"
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(2) == 6\nassert solution(3) == 6669\nassert solution(10) == -1"
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Got {solution(input())}, expected {expected_output}\"\n"
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"Input does not match the expected output.\""
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(2) == 6\nassert solution(3) == 6669\nassert solution(10) == -1"
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 6\nassert solution(10) == -1\nassert solution(2) == 6\nassert solution(1) == -1"
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(2) == 6, \"Invalid output\"\nassert solution(3) == 6669, \"Invalid output\"\nassert solution(10) == -1, \"Invalid output\""
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output"
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n\") == \"1 4 3 2 0\\n1 0 2 4 3\\n2 4 0 1 3\\n\"\nassert solution(\"2\\n\") == \"-1\\n\"\n"
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(5) == \"1 4 3 2 0\\n1 0 2 4 3\\n2 4 0 1 3\"\nassert solution(2) == \"-1\""
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == -1, \"Sample 1 does not pass the test\""
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(5) == \"1 4 3 2 0\\n1 0 2 4 3\\n2 4 0 1 3\"\nassert solution(2) == \"-1\""
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"1 4 3 2 0\\n1 0 2 4 3\\n2 4 0 1 3\\n\"\nassert solution(\"2\") == \"-1\""
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 4 3 2 0\\n1 0 2 4 3\\n2 4 0 1 3\\n2\\n\") == \"1 4 3 2 0\\n1 0 2 4 3\\n2 4 0 1 3\\n-1\""
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1 4 3 2 0\\n1 0 2 4 3\\n2 4 0 1 3\"\nassert solution() == \"-1\""
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''5\n1 4 3 2 0\n1 0 2 4 3\n2 4 0 1 3\n''') == '''1 4 3 2 0\n1 0 2 4 3\n2 4 0 1 3'''\n\nassert solution('''2\n''') == '''-1'''"
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Test {test_case} failed: expected {expected}, got {solution(input())}\"\n\ntest_case = 1\ninput_str = \"\"\"\n5\n\"\"\"\nexpected_output = \"\"\"\n1 4 3 2 0\n1 0 2 4 3\n2 4 0 1 3\n\"\"\"\n\nsolution = lambda s: int(\" \".join(s.split()))"
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output() for input, output in zip(stdin_data, stdout_data)\n"
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"No\"\nassert solution() == \"No\""
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(4) == \"Yes\", \"Test 1 Failed\"\nassert solution(4) == \"No\", \"Test 2 Failed\""
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 3 4\") == \"Yes\"\nassert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 4 3\") == \"No\""
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\""
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2\\n1 3\\n2 4\\n1 2 3 4\") == \"Yes\"\nassert solution(\"1 2\\n1 3\\n2 4\\n1 2 4 3\") == \"No\""
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Input\\n4\\n1 2\\n1 3\\n2 4\\n1 2 3 4\\n\") == \"Yes\\n\"\nassert solution(\"Input\\n4\\n1 2\\n1 3\\n2 4\\n1 2 4 3\\n\") == \"No\\n\""
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Yes\""
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('Input\\n4\\n1 2\\n1 3\\n2 4\\n1 2 3 4\\n\\nOutput\\nYes\\nInput\\n4\\n1 2\\n1 3\\n2 4\\n1 2 4 3\\n\\nOutput\\nNo') == 'Yes\\n'\nassert solution('Input\\n4\\n1 2\\n1 3\\n2 4\\n1 2 4 3\\n\\nOutput\\nYes\\nInput\\n4\\n1 2\\n1 3\\n2 4\\n1 2 3 4\\n\\nOutput\\nNo') == 'No\\n'"
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 3 4\") == \"Yes\"\nassert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 4 3\") == \"No\"\n"
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 6 5\\n1 1 0 5000\\n3 2 0 5500\\n2 2 0 6000\\n15 0 2 9000\\n9 0 1 7000\\n8 0 2 6500\\n\") == 24500\nassert solution(\"2 4 5\\n1 2 0 5000\\n2 1 0 4500\\n2 1 0 3000\\n8 0 1 6000\\n\") == -1"
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"24500\""
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 6 5\\n1 1 0 5000\\n3 2 0 5500\\n2 2 0 6000\\n15 0 2 9000\\n9 0 1 7000\\n8 0 2 6500\") == \"24500\"\nassert solution(\"2 4 5\\n1 2 0 5000\\n2 1 0 4500\\n2 1 0 3000\\n8 0 1 6000\") == \"-1\""
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 6 5\\n1 1 0 5000\\n3 2 0 5500\\n2 2 0 6000\\n15 0 2 9000\\n9 0 1 7000\\n8 0 2 6500\\n\") == 24500\n\nassert solution(\"2 4 5\\n1 2 0 5000\\n2 1 0 4500\\n2 1 0 3000\\n8 0 1 6000\\n\") == -1"
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 6 5\\n1 1 0 5000\\n3 2 0 5500\\n2 2 0 6000\\n15 0 2 9000\\n9 0 1 7000\\n8 0 2 6500\\n\") == \"24500\"\nassert solution(\"2 4 5\\n1 2 0 5000\\n2 1 0 4500\\n2 1 0 3000\\n8 0 1 6000\\n\") == \"-1\""
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"24500\"\nassert solution(input()) == \"-1\""
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 6 5\\n1 1 0 5000\\n3 2 0 5500\\n2 2 0 6000\\n15 0 2 9000\\n9 0 1 7000\\n8 0 2 6500\") == \"24500\"\nassert solution(\"2 4 5\\n1 2 0 5000\\n2 1 0 4500\\n2 1 0 3000\\n8 0 1 6000\") == \"-1\""
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 6 5\\n1 1 0 5000\\n3 2 0 5500\\n2 2 0 6000\\n15 0 2 9000\\n9 0 1 7000\\n8 0 2 6500\\n') == '24500'\nassert solution('2 4 5\\n1 2 0 5000\\n2 1 0 4500\\n2 1 0 3000\\n8 0 1 6000\\n') == '-1'"
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 6 5\\n1 1 0 5000\\n3 2 0 5500\\n2 2 0 6000\\n15 0 2 9000\\n9 0 1 7000\\n8 0 2 6500\\n') == 24500\nassert solution('2 4 5\\n1 2 0 5000\\n2 1 0 4500\\n2 1 0 3000\\n8 0 1 6000\\n') == -1"
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1 45\") == 0.828427125\nassert solution(\"6 4 30\") == 19.668384925\n"
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1 45\") == \"0.828427125\"\nassert solution(\"6 4 30\") == \"19.668384925\""
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1 45\") == \"0.828427125\\n\", \"Test 1\"\nassert solution(\"6 4 30\") == \"19.668384925\\n\", \"Test 2\""
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1 45\") == \"0.828427125\"\nassert solution(\"6 4 30\") == \"19.668384925\"\n\nfrom math import radians, sin, cos, atan2, sqrt"
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1 45\") == 0.828427125\nassert solution(\"6 4 30\") == 19.668384925"
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output\nprint(input())"
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1 45\") == \"0.828427125\"\nassert solution(\"6 4 30\") == \"19.668384925\"\n"
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 1 45') == '0.828427125', \"1 1 45\"\nassert solution('6 4 30') == '19.668384925', \"6 4 30\""
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1 45\") == \"0.828427125\", \"Error in solution 1\"\nassert solution(\"6 4 30\") == \"19.668384925\", \"Error in solution 2\""
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"0.828427125\", \"Solution should be 0.828427125.\""
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500\") == \"3000\"\nassert solution(\"3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\") == \"992\"\nassert solution(\"2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\") == \"1\"\n\nfrom typing import List\n"
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500\\n') == '3000\\n'\nassert solution('3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\\n') == '992\\n'\nassert solution('2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n') == '1\\n'"
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500\") == 3000\nassert solution(\"3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\") == 992\nassert solution(\"2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\") == 1"
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500\") == \"3000\", \"Test Case 1\"\nassert solution(\"3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\\n\") == \"992\", \"Test Case 2\"\nassert solution(\"2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\") == \"1\", \"Test Case 3\"\nassert solution(\"1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n1 11\\n1 12\\n1 13\\n1 14\\n1 15\\n1 16\\n1 17\\n1 18\\n1 19\\n1 20\\n1 21\\n1 22\\n1 23\\n1 24\\n1 25\\n1 26\\n1 27\\n1 28\\n1 29\\n1 30\\n1 31\\n1 32\\n1 33\\n1 34\\n1 35\\n1 36\\n1 37\\n1 38\\n1 39\\n1 40\\n1 41\\n1 42\\n1 43\\n1 44\\n1 45\\n1 46\\n1 47\\n1 48\\n1 49\\n1 50\\n1 51\\n1 52\\n1 53\\n1 54\\n1 55\\n1 56\\n1 57\\n1 58\\n1 59\\n1 60\\n1 61\\n1 62\\n1 63\\n1 64\\n1 65\\n1 66\\n1 67\\n1 68\\n1 69\\n1 70\\n1 71\\n1 72\\n1 73\\n1 74\\n1 75\\n1 76\\n1 77\\n1 78\\n1 79\\n1 80\\n1 81\\n1 82\\n1 83\\n1 84\\n1 85\\n1 86\\n1 87\\n1 88\\n1 89\\n1 90\\n1 91\\n1 92\\n1 93\\n1 94\\n1 95\\n1 96\\n1 97\\n1 98\\n1 99\\n1 100\\n1 101\\n1 102\\n1 103\\n1 104\\n1 105\\n1 106\\n1 107\\n1 108\\n1 109\\n1 110\\n1 111\\n1 112\\n1 113\\n1 114\\n1 115\\n1 116\\n1 117\\n1 118\\n1 119\\n1 120\\n1 121\\n1 122\\n1 123\\n1 124\\n1 125\\n1 126\\n1 127\\n1 128\\n1 129\\n1 130\\n1 131\\n1 132\\n1 133\\n1 134\\n1 135\\n1 136\\n1 137\\n1 138\\n1 "
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"The solution provided for the problem {input()} is incorrect. Please check the expected output: {expected}\""
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input) == output, f\"Test failed for input {input}, expected {output}, got {solution(input)}\"\n"
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500\") == \"3000\\n\"\nassert solution(\"3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\") == \"992\\n\"\nassert solution(\"2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\") == \"1\\n\""
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500\") == \"3000\"\nassert solution(\"3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\") == \"992\"\nassert solution(\"2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\") == \"1\"\n"
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500\\n\") == \"3000\\n\"\n\nassert solution(stdin=\"3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\\n\") == \"992\\n\"\n\nassert solution(stdin=\"2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\") == \"1\\n\""
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500\") == \"3000\"\nassert solution(\"3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\") == \"992\"\nassert solution(\"2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\") == \"1\""
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n1 2 3 4 5 6 7 8 9\\n\") == \"6\\n\"\nassert solution(\"2 2\\n1 2\\n0 0\\n2 1 -100 -100\\n\") == \"2\\n\"\nassert solution(\"5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\\n\") == \"62\\n\"\nassert solution(\"5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n1 2 1 2 1\\n\") == \"4\\n\"\nassert solution(\"5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n1 2 1 2 1\\n\") == \"6\\n\"\nassert solution(\"5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n1 2 1 2 1\\n\") == \"6\\n\"\nassert solution(\"5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n1 2 1 2 1\\n\") == \"8\\n\"\nassert solution(\"5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n1 2 1 2 1\\n\") == \"10\\n\"\nassert solution(\"5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n1 2 1 2 1\\n\") == \"12\\n\"\nassert solution(\"5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n1 2 1 2 1\\n\") == \"14\\n\"\nassert solution(\"5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n1 2 1 2 1\\n\") == \"16\\n\"\nassert solution(\"5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n1 2 1 2 1\\n\") == \"18\\n\"\nassert solution(\"5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n1 2 1 2 1\\n\") == \"20\\n\"\nassert solution(\"5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n1 2 1 2 1\\n\") == \"22\\n\"\nassert solution(\"5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n1 2 1 2 1\\n\") == \"24\\n\"\nassert solution(\"5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n1 2 1 2 1\\n\") == \"26\\n\"\nassert solution(\"5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n1 2 1 2 1\\n\") == \"28\\n\"\nassert solution(\"5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n1 2 1 2 1\\n\") == \"30\\n\"\nassert solution(\"5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n1 2 1 2 1\\n\") == \"32\\n\"\nassert solution(\"5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n1 2 1 2 1\\n\") == \"34\\n\"\nassert solution(\"5 4\\n4 3 1 2 1\\n1 2"
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n1 2 3 4 5 6 7 8 9\\n\\n2 2\\n1 2\\n0 0\\n2 1 -100 -100\\n\\n5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\\n\\n\") == \"6\\n\"\nassert solution(\"2 2\\n1 2\\n0 0\\n2 1 -100 -100\\n\\n5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\\n\") == \"2\\n\"\nassert solution(\"5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\\n\") == \"62\\n\""
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n1 2 3 4 5 6 7 8 9\") == \"6\"\nassert solution(\"2 2\\n1 2\\n0 0\\n2 1 -100 -100\") == \"2\"\nassert solution(\"5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\") == \"62\""
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_str) == output_str, f\"Test Case {test_case} failed. Expected output: '{output_str}', but got: '{solution(input_str)}'.\""
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"5 4\n4 3 1 2 1\n1 2 1 2 1\n1 2 3 4 5 6 7 8 9\"\"\") == 6\n\nassert solution(\"\"\"2 2\n1 2\n0 0\n2 1 -100 -100\"\"\") == 2\n\nassert solution(\"\"\"5 4\n4 3 2 1 1\n0 2 6 7 4\n12 12 12 6 -3 -5 3 10 -4\"\"\") == 62\n\nfrom typing import List"
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n\") == 6\nassert solution(\"2 2\\n1 2\\n0 0\\n2 1 -100 -100\\n\") == 2\nassert solution(\"5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\\n\") == 62\n"
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\") == \"6\\n\"\nassert solution(\"2 2\\n1 2\\n0 0\\n2 1 -100 -100\") == \"2\\n\"\nassert solution(\"5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\") == \"62\\n\""
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n1 2 3 4 5 6 7 8 9\\n\") == \"6\\n\"\nassert solution(\"2 2\\n1 2\\n0 0\\n2 1 -100 -100\\n\") == \"2\\n\"\nassert solution(\"5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\\n\") == \"62\\n\""
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"6\""
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n1 2 3 4 5 6 7 8 9\\n') == '6\\n'\nassert solution('2 2\\n1 2\\n0 0\\n2 1 -100 -100\\n') == '2\\n'\nassert solution('5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\\n') == '62\\n'"
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"aabb\") == \"YES\"\nassert solution(\"abab\") == \"NO\""
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"abaa\") == \"NO\"\nassert solution(\"aabb\") == \"YES\"\nassert solution(\"abab\") == \"NO\""
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"abaa\") == \"YES\"\nassert solution(\"aabb\") == \"NO\"\nassert solution(\"abab\") == \"YES\""
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"abaa\") == \"YES\"\nassert solution(\"aabb\") == \"NO\"\nassert solution(\"abab\") == \"NO\""
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"aabb\") == \"YES\"\nassert solution(\"abab\") == \"NO\""
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"abaa\") == \"YES\"\nassert solution(\"aabb\") == \"YES\"\nassert solution(\"abab\") == \"NO\""
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"abaa\") == \"NO\"\nassert solution(\"aabb\") == \"YES\"\nassert solution(\"abab\") == \"NO\""
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aabb\") == \"YES\", \"The first sample is incorrect.\"\nassert solution(\"abaa\") == \"NO\", \"The second sample is incorrect.\"\n"
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"abaa\") == \"YES\"\nassert solution(\"aabb\") == \"NO\"\nassert solution(\"abab\") == \"NO\""
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"abaa\") == \"NO\"\nassert solution(\"aabb\") == \"YES\""
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == 'YES\\n2\\n0\\n1\\n1' # NO"
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"NO\"\nassert solution(\"1\\n2\\n3\") == \"YES\\n2\\n1\"\nassert solution(\"2\\n3\\n4\") == \"YES\\n1\\n3\"\nassert solution(\"3\\n2\\n1\") == \"YES\\n2\\n3\"\nassert solution(\"4\\n1\\n3\\n2\") == \"YES\\n1\\n4\\n2\"\nassert solution(\"5\\n2\\n4\\n3\\n1\") == \"YES\\n2\\n1\\n4\\n3\"\n"
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"NO\"\nassert solution(\"1\") == \"YES\""
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"NO\"\nassert solution(1) == \"YES\""
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"NO\"\nassert solution(\"1\") == \"YES\""
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"NO\\n\"\nassert solution(\"1\") == \"YES\\n1\\n1\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"NO\"\nassert solution(1) == \"YES\""
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == \"YES\\n2\\n0\\n1\\n\""
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n\") == \"YES\\n0\\n\"\nassert solution(\"3\\n\") == \"NO\\n\""
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"YES\\n6\\n2\\n1\\n3\"\nassert solution() == \"NO\""
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\""
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"Yes\\na?\"\nassert solution(stdin) == \"Yes\\n?es?\"\nassert solution(stdin) == \"No\"\nassert solution(stdin) == \"Yes\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"ab\") == \"Yes\\na?\"\nassert solution(\"ac\") == \"Yes\\na?\"\nassert solution(\"cd\") == \"Yes\\na?\"\nassert solution(\"1 2\") == \"Yes\\n?es?\"\nassert solution(\"1 2 3 4\") == \"No\"\nassert solution(\"a\") == \"Yes\\na?\"\nassert solution(\"b\") == \"Yes\\na?\"\nassert solution(\"c\") == \"Yes\\na?\"\nassert solution(\"d\") == \"Yes\\na?\"\nassert solution(\".svn\") == \"Yes\\n.??\"\nassert solution(\".git\") == \"Yes\\n.??\"\nassert solution(\"....\") == \"Yes\\n.??\"\nassert solution(\"...\") == \"Yes\\n.??\"\nassert solution(\"..\") == \"Yes\\n.??\"\nassert solution(\".\") == \"Yes\\n.??\"\nassert solution(\"test\") == \"Yes\\ntes?\"\nassert solution(\"tezt\") == \"Yes\\ntes?\"\nassert solution(\"test.\") == \"Yes\\ntes?\"\nassert solution(\".est\") == \"Yes\\ntes?\"\nassert solution(\"tes.\") == \"Yes\\ntes?\"\nassert solution(\"tes\") == \"Yes\\ntes?\"\nassert solution(\"tesz\") == \"No\"\nassert solution(\"a.b\") == \"No\"\nassert solution(\"a.b.c\") == \"No\"\nassert solution(\"a.b.c.d\") == \"No\"\nassert solution(\"a.b.c.d.e\") == \"No\"\nassert solution(\"a.b.c.d.e.f\") == \"No\"\nassert solution(\"a.b.c.d.e.f.g\") == \"No\"\nassert solution(\"a.b.c.d.e.f.g.h\") == \"No\"\nassert solution(\"a.b.c.d.e.f.g.h.i\") == \"No\"\nassert solution(\"a.b.c.d.e.f.g.h.i.j\") == \"No\"\nassert solution(\"a.b.c.d.e.f.g.h.i.j.k\") == \"No\"\nassert solution(\"a.b.c.d.e.f.g.h.i.j.k.l\") == \"No\"\nassert solution(\"a.b.c.d.e.f.g.h.i.j.k.l.m\") == \"No\"\nassert solution(\"a.b.c.d.e.f.g.h.i.j.k.l.m.n\") == \"No\"\nassert solution(\"a.b.c.d.e.f.g.h.i.j.k.l.m.n.o\") == \"No\"\nassert solution(\"a.b.c.d.e.f.g.h.i.j.k.l.m.n.o.p\") == \"No\"\nassert solution(\"a.b.c.d.e.f.g.h.i.j.k.l.m.n.o.p.q\") == \"No\"\nassert solution(\"a.b.c.d.e.f.g.h.i.j.k.l.m.n.o.p.q.r\") == \"No\"\nassert solution(\"a.b.c.d.e.f.g.h.i.j.k.l.m.n.o.p.q.r.s\") == \"No\"\nassert solution(\"a.b.c.d.e.f.g.h.i.j.k.l.m.n.o.p.q.r.s.t\") == \"No\"\nassert solution(\"a.b.c.d.e.f.g.h.i.j.k.l.m.n.o.p.q.r.s.t.u\") == \"No\"\nassert solution(\"a.b.c.d.e.f.g.h.i.j.k.l.m.n.o.p.q.r.s.t.u.v\") == \"No\"\nassert solution(\"a.b.c.d.e.f.g.h.i.j.k.l.m.n.o.p.q.r.s.t.u.v.w\") == \"No\"\nassert solution(\"a.b.c.d.e."
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"ab\") == \"Yes\\na?\"\nassert solution(\"ac\") == \"Yes\\na?\"\nassert solution(\"cd\") == \"Yes\\na?\"\nassert solution(\"1 2\") == \"Yes\\na?\"\nassert solution(\"1 2 3\") == \"Yes\\na?\"\nassert solution(\"1 4 5\") == \"No\"\nassert solution(\".svn\") == \"Yes\\n.svn\"\nassert solution(\".git\") == \"Yes\\n.git\"\nassert solution(\"....\") == \"Yes\\n....\"\nassert solution(\"...  \") == \"Yes\\n...  \"\nassert solution(\"..\") == \"Yes\\n.. \"\nassert solution(\".\") == \"No\""
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"ab\") == \"Yes\\na?\"\nassert solution(\"ac\") == \"Yes\\na?\"\nassert solution(\"cd\") == \"Yes\\na?\"\nassert solution(\"1 2\") == \"Yes\\na?\"\nassert solution(\"test\") == \"Yes\\na?\\nNo\"\nassert solution(\"tezt\") == \"Yes\\na?\\nNo\"\nassert solution(\"test.est\") == \"Yes\\na?\\nNo\"\nassert solution(\"tes.\") == \"Yes\\na?\\nNo\"\nassert solution(\"1 4 5\") == \"Yes\\na?\\nNo\""
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"ab\\nac\\ncd\") == \"Yes\\na?\"\nassert solution(\"test\\ntezt\\ntest.\\n.est\\ntes.\\n1 4 5\") == \"Yes\\nes?\"\nassert solution(\".svn\\n.git\\n....\\n...\\n..\\n.\\n1 2 3\") == \"Yes\\n.???def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"ab\") == \"a?\"\nassert solution(\"ac\") == \"ac\"\nassert solution(\"cd\") == \"cd\"\nassert solution(\"1 2\") == \"Yes\"\nassert solution(\"1 2 3\") == \"No\"\nassert solution(\"1 4 5\") == \"Yes\"\nassert solution(\".svn\") == \"def\"\nassert solution(\".git\") == \"def\"\nassert solution(\"....\") == \"def\"\nassert solution(\"... \") == \"def\"\nassert solution(\"... \") == \"def\"\nassert solution(\"... \") == \"def\"\nassert solution(\"... \") == \"def\"\nassert solution(\".??\") == \"def\"\nassert solution(\".est\") == \"tes.\"\nassert solution(\"tes.\") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes.\"\nassert solution(\"tes. \") == \"tes"
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"ab\") == \"Yes\\na?\"\nassert solution(\"ac\") == \"Yes\\na?\"\nassert solution(\"cd\") == \"Yes\\na?\"\nassert solution(\"1 2\") == \"Yes\\n?a?\"\nassert solution(\"1 2 3\") == \"Yes\\n?a?\"\nassert solution(\".svn\") == \"Yes\\n.svn\"\nassert solution(\".git\") == \"Yes\\n.git\"\nassert solution(\"....\") == \"Yes\\n....\"\nassert solution(\"...\".encode()) == \"Yes\\n...\".encode()\nassert solution(\"..\") == \"Yes\\n..\"\nassert solution(\".\".encode()) == \"Yes\\n.\"\nassert solution(\"tes.\".encode()) == \"Yes\\ntes.\".encode()\nassert solution(\"test\".encode()) == \"Yes\\ntest\".encode()\nassert solution(\"a\") == \"No\""
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(solution(stdin)) == \"Yes\""
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"ab\") == \"Yes\"\nassert solution(\"ac\") == \"Yes\"\nassert solution(\"cd\") == \"Yes\"\nassert solution(\"1 2\") == \"Yes\"\nassert solution(\"test\") == \"Yes\"\nassert solution(\"tezt\") == \"Yes\"\nassert solution(\"test.est\") == \"Yes\"\nassert solution(\"tes.\") == \"Yes\"\nassert solution(\"1 4 5\") == \"Yes\"\nassert solution(\"a\") == \"No\"\nassert solution(\"b\") == \"No\"\nassert solution(\"c\") == \"No\"\nassert solution(\"dd\") == \"No\"\nassert solution(\"1 2 3 4\") == \"No\"\nassert solution(\"abc\") == \"No\"\nassert solution(\"test.txt\") == \"No\"\n\nfrom typing import List"
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 2 3\") == \"2\\n\""
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n1 2 3') == '2'\nassert solution('2\\n1 2 3') == '2'\nassert solution('4\\n1 2 3') == '2'\nassert solution('5\\n1 2 3 4 5') == '2'\nassert solution('6\\n1 2 3 4 5 6') == '2'\nassert solution('7\\n1 2 3 4 5 6 7') == '2'\nassert solution('8\\n1 2 3 4 5 6 7 8') == '2'\nassert solution('9\\n1 2 3 4 5 6 7 8 9') == '2'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == '2'\nassert solution('11\\n1 2 3 4 5 6 7 8 9 10 11') == '2'\nassert solution('12\\n1 2 3 4 5 6 7 8 9 10 11 12') == '2'\nassert solution('13\\n1 2 3 4 5 6 7 8 9 10 11 12 13') == '2'\nassert solution('14\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14') == '2'\nassert solution('15\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15') == '2'\nassert solution('16\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16') == '2'\nassert solution('17\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17') == '2'\nassert solution('18\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18') == '2'\nassert solution('19\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19') == '2'\nassert solution('20\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20') == '2'\nassert solution('21\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21') == '2'\nassert solution('22\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22') == '2'\nassert solution('23\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23') == '2'\nassert solution('24\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24') == '2'\nassert solution('25\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 "
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 2 3\") == \"2\"\nassert solution(\"5\\n1 2 3 4 5\") == \"3\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"3\"\nassert solution(\"7\\n1 2 3 4 5 6 7\") == \"2\"\nassert solution(\"8\\n1 2 3 4 5 6 7 8\") == \"2\"\nassert solution(\"9\\n1 2 3 4 5 6 7 8 9\") == \"1\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"0\"\nassert solution(\"11\\n1 2 3 4 5 6 7 8 9 10 11\") == \"1\"\nassert solution(\"12\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"2\"\nassert solution(\"13\\n1 2 3 4 5 6 7 8 9 10 11 12 13\") == \"3\"\nassert solution(\"14\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14\") == \"4\"\nassert solution(\"15\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\") == \"5\"\nassert solution(\"16\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\") == \"5\"\nassert solution(\"17\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\") == \"4\"\nassert solution(\"18\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18\") == \"3\"\nassert solution(\"19\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\") == \"2\"\nassert solution(\"20\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\") == \"1\""
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2\\n\", \"Test case failed.\""
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2\"\n"
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 2 3\") == \"2\"\nassert solution(\"2\\n1 2 3\") == \"1\"\nassert solution(\"1\\n1 1\") == \"1\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"3\\n1 1 1\") == \"1\"\nassert solution(\"2\\n2 1\") == \"1\"\nassert solution(\"1\\n1 1\") == \"1\"\nassert solution(\"1\\n1 1\") == \"1\""
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2 3\") == \"2\\n\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"3\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9\") == \"4\\n\"\nassert solution(\"15\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\") == \"5\\n\"\nassert solution(\"20\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\") == \"6\\n\"\nassert solution(\"25\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\") == \"7\\n\""
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2\\n\"\n"
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(b'3\\n1 2 3\\n') == '2\\n'\nassert solution(b'5\\n1 2 3 4 5\\n') == '5\\n'\nassert solution(b'6\\n1 2 3 4 5 6\\n') == '14\\n'\nassert solution(b'7\\n1 2 3 4 5 6 7\\n') == '15\\n'\nassert solution(b'8\\n1 2 3 4 5 6 7 8\\n') == '19\\n'\nassert solution(b'9\\n1 2 3 4 5 6 7 8 9\\n') == '23\\n'"
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 2 3\") == \"2\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9\") == \"1\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"2\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10 11\") == \"2\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"3\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10 11 12 13\") == \"4\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14\") == \"5\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\") == \"6\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\") == \"6\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\") == \"8\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18\") == \"9\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\") == \"10\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\") == \"10\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21\") == \"10\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22\") == \"10\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23\") == \"10\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24\") == \"10\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\") == \"10\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 "
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\\n\"\n"
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 2"
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n1 2\\n2 3\\n3 4') == '2'"
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\"\nassert solution(\"1 2\\n3 4\") == \"1\"\nassert solution(\"1 1\\n2 2\") == \"2\"\nassert solution(\"4 2\\n1 2\\n2 3\\n3 4\") == \"2\"\n"
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\\n\") == \"2\\n\""
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\\n\"  # Example 1\nassert solution(\"5\\n1 2\\n2 3\\n3 4\\n4 5\") == \"3\\n\"  # Example 2\nassert solution(\"6\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\") == \"4\\n\"  # Example 3\nassert solution(\"7\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\") == \"5\\n\"  # Example 4\nassert solution(\"8\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\") == \"6\\n\"  # Example 5\nassert solution(\"9\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\") == \"7\\n\"  # Example 6"
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '2\\n'\n"
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n1 2\\n2 3\\n3 4') == '2'\n"
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\\n\") == \"2\"\nassert solution(\"4\\n5 6\\n7 8\\n9 10\\n\") == \"4\"\nassert solution(\"4\\n1 2\\n2 3\\n3 4\\n\") == \"2\""
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\\n\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Test case {i+1} failed: expected {output()}, got {solution(input())}\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Expected output: {output()}, got: {solution(input())}\""
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 2 5\") == \"4\\n\"\nassert solution(\"10 3 10\") == \"5\\n\""
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 2 5\\n10 3 10\") == \"4\"\nassert solution(\"5 1 10\\n7 2 4\") == \"5\""
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution"
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"Output\\n5\""
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 2 5\\n10 3 10\\n\") == \"4\\n5\"\nassert solution(\"7 2 4\\n10 3 9\\n\") == \"5\"\nassert solution(\"7 2 5\\n10 3 11\\n\") == \"5\"\nassert solution(\"7 2 5\\n10 3 9\\n\") == \"4\"\nassert solution(\"7 2 5\\n10 3 8\\n\") == \"4\"\nassert solution(\"7 2 5\\n10 3 7\\n\") == \"4\"\nassert solution(\"7 2 5\\n10 3 6\\n\") == \"4\"\nassert solution(\"7 2 5\\n10 3 5\\n\") == \"4\"\nassert solution(\"7 2 5\\n10 3 4\\n\") == \"4\"\nassert solution(\"7 2 5\\n10 3 3\\n\") == \"4\"\nassert solution(\"7 2 5\\n10 3 2\\n\") == \"4\"\nassert solution(\"7 2 5\\n10 3 1\\n\") == \"4\"\nassert solution(\"7 2 5\\n10 3 0\\n\") == \"4\"\nassert solution(\"7 2 5\\n10 3 -1\\n\") == \"4\"\nassert solution(\"7 2 5\\n10 3 -2\\n\") == \"4\"\nassert solution(\"7 2 5\\n10 3 -3\\n\") == \"4\"\nassert solution(\"7 2 5\\n10 3 -4\\n\") == \"4\"\nassert solution(\"7 2 5\\n10 3 -5\\n\") == \"4\"\nassert solution(\"7 2 5\\n10 3 -6\\n\") == \"4\"\nassert solution(\"7 2 5\\n10 3 -7\\n\") == \"4\"\nassert solution(\"7 2 5\\n10 3 -8\\n\") == \"4\"\nassert solution(\"7 2 5\\n10 3 -9\\n\") == \"4\"\nassert solution(\"7 2 5\\n10 3 -10\\n\") == \"4\""
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('7 2 5') == '4', \"Test case 1 failed\"\nassert solution('10 3 10') == '5', \"Test case 2 failed\""
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 2 5\") == \"4\\n\"\nassert solution(\"10 3 10\") == \"5\\n\""
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 2 5\") == \"4\"\nassert solution(\"10 3 10\") == \"5\""
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '2'"
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 6\\n1 2\\n1 3\\n2 3\\n2 5\\n3 4\\n4 5\\n\") == \"2\\n2 3\\n\"\n\nassert solution(\"4 4\\n1 2\\n1 3\\n1 4\\n3 4\\n\") == \"1\\n1\\n\""
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}, Received: {solution(input())}\""
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Test case failed. Expected {output()}, got {solution(input())}.\"\n\nn, m = map(int, input().split())\nguests = set(map(int, input().split()))\nfriends = set()"
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_data) == expected_output, f\"Test case failed: {solution(input_data)} should be {expected_output}\""
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 6\\n1 2\\n1 3\\n2 3\\n2 5\\n3 4\\n4 5\\n\") == \"2\\n2 3 \"\nassert solution(\"4 4\\n1 2\\n1 3\\n1 4\\n3 4\\n\") == \"1\\n1 \""
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input) == expected\n"
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 6\\n1 2\\n1 3\\n2 3\\n2 5\\n3 4\\n4 5\") == \"2\\n2 3\"\nassert solution(\"4 4\\n1 2\\n1 3\\n1 4\\n3 4\\n4 5\") == \"1\\n1\""
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 6\\n1 2\\n1 3\\n2 3\\n2 5\\n3 4\\n4 5\") == \"2\\n2 3\\n\"\nassert solution(\"4 4\\n1 2\\n1 3\\n1 4\\n3 4\\n\") == \"1\\n1 \"\n"
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Input\\n4\\n75 150 75 50\\n\\nInput\\n3\\n100 150 250\") == \"Yes\"\nassert solution(\"Input\\n4\\n10 10 5\\n\\nInput\\n3\\n10 5 10\") == \"No\""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n75 150 75 50\") == \"Yes\"\nassert solution(\"3\\n100 150 250\") == \"No\""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"Yes\"\n\nassert solution() == \"No\""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"Yes\"\nassert solution() == \"No\"\n"
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n75 150 75 50\\n\") == \"Yes\"\nassert solution(\"3\\n100 150 250\\n\") == \"No\""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n75 150 75 50\\n3\\n100 150 250\") == \"Yes\"\n\nassert solution(\"3\\n100 150 250\\n3\\n150 100 250\\n5\\n200 200 200\\n1\") == \"No\""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n75 150 75 50\") == \"Yes\"\nassert solution(\"3\\n100 150 250\") == \"No\"\n"
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n75 150 75 50\") == \"Yes\\n\"\nassert solution(\"3\\n100 150 250\") == \"No\\n\"\n"
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n75 150 75 50\\n\\n3\\n100 150 250') == 'Yes\\n'\nassert solution('3\\n100 150 250') == 'No\\n'"
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n50 50 50\") == \"150\\n\"\nassert solution(\"2\\n-1 -100 -1\") == \"100\\n\""
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n50 50 50\") == \"150\\n\"\nassert solution(\"2\\n-1 -100 -1\") == \"100\\n\""
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n50 50 50\") == \"150\\n\"\nassert solution(\"2\\n-1 -100 -1\") == \"100\\n\""
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('Input\\n2\\n50 50 50\\n') == '150\\n'\n\nassert solution('Input\\n2\\n-1 -100 -1\\n') == '100\\n'"
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n50 50 50\") == \"150\\n\", \"Sample 1 failed\"\nassert solution(\"2\\n-1 -100 -1\") == \"100\\n\", \"Sample 2 failed\""
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"150\""
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"150\"\nassert solution() == \"100\""
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"150\"\n\nassert solution(input()) == \"100\""
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n50 50 50\") == \"150\\n\", \"The first sample should return 150.\"\nassert solution(\"2\\n-1 -100 -1\") == \"100\\n\", \"The second sample should return 100.\"\n\nfrom typing import List"
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n50 50 50\\n\") == \"150\\n\"\nassert solution(\"2\\n-1 -100 -1\\n\") == \"100\\n\""
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('ab a\\ncc c\\nca a\\nee c\\nff d') == '4'\nassert solution('af e\\ndc d\\ncc f\\nbc b\\nda b\\neb a\\nbb b\\nff c') == '1'\nassert solution('6 2\\nbb a\\nba a\\n') == '0'"
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 5\\na b\\nc c\\na c\\nee c\\nff d\\n\") == \"4\\n\"\nassert solution(\"2 8\\na f e\\ndc d\\ncc f\\nbc b\\nda b\\neb a\\nbb b\\nff c\\n\") == \"1\\n\"\nassert solution(\"6 2\\nbb a\\nba a\\n\") == \"0\\n\""
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"ab a\\ncc c\\nca a\\nee c\\nff d\\n\") == \"4\"\nassert solution(\"af e\\ndc d\\ncc f\\nbc b\\nda b\\neb a\\nbb b\\nff c\\n\") == \"1\"\nassert solution(\"bb a\\nba a\\n\") == \"0\""
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5\\nab a\\ncc c\\nca a\\nee c\\nff d\\n\") == \"4\"\nassert solution(\"2 8\\naf e\\ndc d\\ncc f\\nbc b\\nda b\\neb a\\nbb b\\nff c\\n\") == \"1\"\nassert solution(\"6 2\\nbb a\\nba a\\n\") == \"0\""
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 5\\nab a\\ncc c\\nca a\\nee c\\nff d\\n\") == 4\nassert solution(\"2 8\\naf e\\ndc d\\ncc f\\nbc b\\nda b\\neb a\\nbb b\\nff c\\n\") == 1\nassert solution(\"6 2\\nbb a\\nba a\\n\") == 0"
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 5\\na ab\\ncc c\\nca a\\nee c\\nff d\") == \"4\\n\"\nassert solution(\"2 8\\na f e\\ndc d\\ncc f\\nbc b\\nda b\\neb a\\nbb b\\nff c\") == \"1\\n\"\nassert solution(\"6 2\\nbb a\\nba a\") == \"0\\n\""
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 5\\nab a\\ncc c\\nca a\\nee c\\nff d') == '4'\nassert solution('2 8\\naf e\\ndc d\\ncc f\\nbc b\\nda b\\neb a\\nbb b\\nff c') == '1'\nassert solution('6 2\\nbb a\\nba a\\n') == '0'"
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 5\\nab a\\ncc c\\nca a\\nee c\\nff d\\n\") == \"4\\n\"\nassert solution(\"2 8\\naf e\\ndc d\\ncc f\\nbc b\\nda b\\nee a\\n\") == \"1\\n\"\nassert solution(\"6 2\\nbb a\\nba a\\n\") == \"0\\n\""
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 5\\nab a\\ncc c\\nca a\\nee c\\nff d\") == \"4\"\nassert solution(\"2 8\\naf e\\ndc d\\ncc f\\nbc b\\nda b\\neb a\\nbb b\\nff c\") == \"1\"\nassert solution(\"6 2\\nbb a\\nba a\") == \"0\""
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output\nprint(\"All test cases pass.\")"
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == \"1\"\nassert solution(2) == \"3\"\nassert solution(3) == \"10\""
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == 1\nassert solution(2) == 3\nassert solution(3) == 10\n"
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == 1\nassert solution(2) == 3\nassert solution(3) == 10\n\nfrom functools import reduce\n"
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"10\""
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == \"1\"\nassert solution(2) == \"3\"\nassert solution(3) == \"10\"\n"
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n\") == \"1\\n\"\nassert solution(\"2\\n\") == \"3\\n\"\nassert solution(\"3\\n\") == \"10\\n\""
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 10\nassert solution(2) == 3\nassert solution(1) == 1\n\nfrom typing import List"
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == \"1\"\nassert solution(2) == \"3\"\nassert solution(3) == \"10\""
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 10\nassert solution(2) == 3\nassert solution(1) == 1"
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == 1\nassert solution(2) == 3\nassert solution(3) == 10\n\nfrom typing import List"
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1\") == \"1.000000000000\"\nassert solution(\"1 3\") == \"-1\"\nassert solution(\"4 1\") == \"1.250000000000\""
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\") == \"1.000000000000\"\nassert solution(\"1 3\") == \"-1\"\nassert solution(\"4 1\") == \"1.250000000000\""
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\") == \"1.000000000000\"\nassert solution(\"1 3\") == \"-1\"\nassert solution(\"4 1\") == \"1.250000000000\""
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1.000000000000\\n\", \"Test 1\"\nassert solution(input()) == \"1.000000000000\\n\", \"Test 2\"\nassert solution(input()) == \"1.000000000000\\n\", \"Test 3\"\nassert solution(input()) == \"-1\\n\", \"Test 4\"\nassert solution(input()) == \"-1\\n\", \"Test 5\""
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Test failed: expected output {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2\nassert solution(input_3) == output_3\nassert solution(input_4) == output_4\nassert solution(input_5) == output_5"
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1\\n1 3\\n4 1\\n\") == \"1.000000000000\\n1.250000000000\\n\"\nassert solution(\"1 3\\n4 1\\n\") == \"-1\\n\"\nassert solution(\"4 1\\n\") == \"1.250000000000\\n\""
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1\\n1 3\\n4 1\\n\") == \"1.000000000000\\n\"\nassert solution(\"1 3\\n4 1\\n\") == \"-1\\n\"\nassert solution(\"4 1\\n\") == \"1.250000000000\\n\""
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('12\\n11 8\\n7 5') == '10.0000000000'\nassert solution('3\\n1\\n1 4 1\\n2 5 3') == '-1'\nassert solution('6\\n2\\n4 6 3 3 5 6\\n2 6 3 6 5 3') == '85.4800000000'"
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"10.0000000000\\n\"\nassert solution(stdin) == \"10.0000000000\\n\"\nassert solution(stdin) == \"-1\\n\"\nassert solution(stdin) == \"85.4800000000\\n\""
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"The given code does not match the expected output.\""
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n12\\n11 8\\n7 5\") == \"10.0000000000\\n\"\nassert solution(\"3\\n1\\n1 4 1\\n2 5 3\") == \"-1\\n\"\nassert solution(\"6\\n2\\n4 6 3 3 5 6\\n2 6 3 6 5 3\") == \"85.4800000000\\n\""
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == -1"
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n12\\n11 8\\n7 5\") == \"10.0000000000\\n\"\nassert solution(\"3\\n1\\n1 4 1\\n2 5 3\") == \"-1\\n\"\nassert solution(\"6\\n2\\n4 6 3 3 5 6\\n2 6 3 6 5 3\") == \"85.4800000000\\n\""
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"10.0000000000\", solution(stdin)"
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n12\\n11 8\\n7 5\\n\") == \"10.0000000000\\n\"\nassert solution(\"3\\n1\\n1 4 1\\n2 5 3\\n\") == \"-1\\n\"\nassert solution(\"6\\n2\\n4 6 3 3 5 6\\n2 6 3 6 5 3\\n\") == \"85.4800000000\\n\""
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n12\\n11 8\\n7 5\") == \"10.0000000000\\n\"\nassert solution(\"3\\n1\\n1 4 1\\n2 5 3\") == \"-1\\n\"\nassert solution(\"6\\n2\\n4 6 3 3 5 6\\n2 6 3 6 5 3\") == \"85.4800000000\\n\""
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, got: {solution(input())}\""
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"0\" # Test case 1\n\nassert solution(input()) == \"0\" # Test case 2\n\nassert solution(input()) == \"0\" # Test case 3\n\nassert solution(input()) == \"4\" # Test case 4\n\nassert solution(input()) == \"0\" # Test case 5"
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1\\n') == '0\\n'\nassert solution('2\\n') == '0\\n'\nassert solution('10\\n') == '4\\n'"
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Output\\n0\"\nassert solution(input()) == \"Output\\n4\""
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == 0, \"Output: 0\" # pass"
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"16\""
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"10\") == \"4\""
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"10\") == \"4\""
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"0\"\nassert solution(5) == \"4\""
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"0\\n\""
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Incorrect output. Expected: {output}, Received: {solution(input())}\""
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1\\n1 2\\n1 111111111111\") == \"Wh.\\n\"\nassert solution(\"0 69\\n1 194\\n1 139\\n0 47\\n1 66\\n\") == \"abdef\\n\"\nassert solution(\"4 1825\\n3 75\\n3 530\\n4 1829\\n4 1651\\n3 187\\n4 584\\n4 255\\n4 774\\n2 474\\n\") == \"Areyoubusy\\n\""
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Wh.\\n\", \"Expected 'Wh.' but got '{}'\".format(solution(input()))"
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"Wh.\", \"Expected output: 'Wh.' but got: '{}'\".format(solution(stdin))"
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Wh.\\n\"\nassert solution(input()) == \"abdef\\n\"\nassert solution(input()) == \"Areyoubusy\\n\""
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"What are you doing at the end of the world? Are you busy? Will you save us?\") == \"Wh.\"\nassert solution(\"Input\\n5\\n0 69\\n1 194\\n1 139\\n0 47\\n1 66\") == \"abdef\"\nassert solution(\"Input\\n10\\n4 1825\\n3 75\\n3 530\\n4 1829\\n4 1651\\n3 187\\n4 584\\n4 255\\n4 774\\n2 474\") == \"Areyoubusy\""
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 1\\n1 2\\n1 111111111111\") == \"Wh\\n\"\nassert solution(\"5\\n0 69\\n1 194\\n1 139\\n0 47\\n1 66\") == \"abdef\\n\"\nassert solution(\"10\\n4 1825\\n3 75\\n3 530\\n4 1829\\n4 1651\\n3 187\\n4 584\\n4 255\\n4 774\\n2 474\") == \"Areyoubusy\\n\""
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"Wh.\\n\"\nassert solution(\"1 2\") == \"Wh.\\n\"\nassert solution(\"1 111111111111\") == \"Wh.\\n\"\n\nassert solution(\"0 69\") == \"abdef\\n\"\nassert solution(\"1 194\") == \"abdef\\n\"\nassert solution(\"1 139\") == \"abdef\\n\"\n\nassert solution(\"0 47\") == \"abdef\\n\"\nassert solution(\"1 66\") == \"abdef\\n\"\n\nassert solution(\"4 1825\") == \"Areyoubusy\\n\"\nassert solution(\"3 75\") == \"Areyoubusy\\n\"\nassert solution(\"3 530\") == \"Areyoubusy\\n\"\nassert solution(\"4 1829\") == \"Areyoubusy\\n\"\nassert solution(\"4 1651\") == \"Areyoubusy\\n\"\nassert solution(\"3 187\") == \"Areyoubusy\\n\"\nassert solution(\"4 584\") == \"Areyoubusy\\n\"\nassert solution(\"4 255\") == \"Areyoubusy\\n\"\nassert solution(\"4 774\") == \"Areyoubusy\\n\"\nassert solution(\"2 474\") == \"Areyoubusy\\n\""
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1\\n1 2\\n1 111111111111\") == \"Wh.\"\nassert solution(\"0 69\\n1 194\\n1 139\\n0 47\\n1 66\") == \"abdef\"\nassert solution(\"4 1825\\n3 75\\n3 530\\n4 1829\\n4 1651\\n3 187\\n4 584\\n4 255\\n4 774\\n2 474\") == \"Areyoubusy\""
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"Wh\"\nassert solution(\"1 2\") == \"Wh\"\nassert solution(\"1 111111111111\") == \"Wh\"\n\nassert solution(\"0 69\") == \"Wh\"\nassert solution(\"1 194\") == \"Wh\"\nassert solution(\"1 139\") == \"Wh\"\nassert solution(\"0 47\") == \"Wh\"\nassert solution(\"1 66\") == \"Wh\"\n\nassert solution(\"4 1825\") == \"Areyoubusy\"\nassert solution(\"3 75\") == \"abdef\"\nassert solution(\"3 530\") == \"abdef\"\nassert solution(\"4 1829\") == \"Areyoubusy\"\nassert solution(\"4 1651\") == \"Areyoubusy\"\nassert solution(\"3 187\") == \"Areyoubusy\"\nassert solution(\"4 584\") == \"Areyoubusy\"\nassert solution(\"4 255\") == \"Areyoubusy\"\nassert solution(\"4 774\") == \"Areyoubusy\"\nassert solution(\"2 474\") == \"Areyoubusy\"\n\nsolution_code = \"\"\"def solution(stdin: str) -> str:\n    q = int(stdin.split()[0])\n    n = int(stdin.split()[1])\n    k = int(stdin.split()[2])\n    results = [''] * q\n\n    for i in range(q):\n        f = stdin.split()[3+i]\n        if len(f) < k:\n            results[i] = '.'\n        else:\n            result = \"\"\n            for j in range(1, len(f), k):\n                result += f[j-1]\n            results[i] = result\n\n    return ''.join(results)\n\"\"\""
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 'Wh.\\n', 'Test Failed'\nassert solution(input()) == 'abdef\\n', 'Test Failed'\nassert solution(input()) == 'Areyoubusy\\n', 'Test Failed'"
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('? +? -? +? +? = 42') == 'Possible\\n9 + 13 - 39 + 28 + 31 = 42'\nassert solution('? -? = 1') == 'Impossible'\nassert solution('? = 1000000') == 'Possible\\n1000000 = 1000000'"
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Possible\" or solution(input()) == \"Impossible\", \"Invalid input\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"? +? -? +? +? = 42\") == \"Possible\"\nassert solution(\"? -? = 1\") == \"Impossible\"\nassert solution(\"? = 1000000\") == \"Possible\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"? +? -? +? +? = 42\") == \"Possible\\n9 + 13 - 39 + 28 + 31 = 42\"\nassert solution(\"? -? = 1\") == \"Impossible\"\nassert solution(\"? = 1000000\") == \"Possible\\n1000000 = 1000000\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('? +? -? +? = 42') == 'Possible\\n9 + 13 - 39 + 28 + 31 = 42'\nassert solution('? -? = 1') == 'Impossible'\nassert solution('? = 1000000') == 'Possible\\n1000000 = 1000000'"
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"? +? -? +? +? = 42\") == \"Possible\\n9 + 13 - 39 + 28 + 31 = 42\"\nassert solution(\"? -? = 1\") == \"Impossible\\n\"\nassert solution(\"? = 1000000\") == \"Possible\\n1000000 = 1000000\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"Test case failed: got '{solution(input())}', expected '{expected}'\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"? +? -? +? = 42\") == \"Possible\\n9 + 13 - 39 + 28 + 31 = 42\"\n\nassert solution(\"? -? = 1\") == \"Impossible\"\n\nassert solution(\"? = 1000000\") == \"Possible\\n1000000 = 1000000\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"? +? -? +? +? = 42\") == \"Possible\\n9 + 13 - 39 + 28 + 31 = 42\"\n\nassert solution(\"? -? = 1\") == \"Impossible\"\n\nassert solution(\"? = 1000000\") == \"Possible\\n1000000 = 1000000\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('? +? -? +? +? = 42') == 'Possible\\n9 + 13 - 39 + 28 + 31 = 42'\nassert solution('? -? = 1') == 'Impossible\\n'\nassert solution('? = 1000000') == 'Possible\\n1000000 = 1000000'"
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 0 2\\n0\\n0\\n0\\n\") == \"7 4 5\""
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"7 4 5\", \"Test failed.\""
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"7 4 5\""
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 0 2\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n"
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 2 0 2\\n0\\n0\\n0\\n\") == \"7 4 5\\n\"\n"
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"7 4 5\\n\", \"Testcase failed\"\n"
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 2 0 2\\n0\\n0\\n0\\n\") == \"7 4 5\""
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 2 0 2\\n0\\n0\\n0\") == \"7 4 5\\n\""
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"7 4 5\\n\", \"Incorrect output\"\n"
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 2 0 2\\n0\\n0\\n0\") == \"7 4 5\\n\""
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6\\naabddc\\n') == 'Yes'\nassert solution('3\\nabc\\n') == 'No'\nassert solution('3\\njjj\\n') == 'Yes'"
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"aabddc\") == \"Yes\"\nassert solution(\"3abc\") == \"No\"\nassert solution(\"3jjj\") == \"Yes\""
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"aabddc\") == \"Yes\", \"Test 1 failed\"\nassert solution(\"3abc\") == \"No\", \"Test 2 failed\"\nassert solution(\"3jjj\") == \"Yes\", \"Test 3 failed\""
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"aabddc\") == \"Yes\"\nassert solution(\"3abc\") == \"No\"\nassert solution(\"3jjj\") == \"Yes\""
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"aabddc\") == \"Yes\"\nassert solution(\"3\") == \"No\"\nassert solution(\"3\") == \"Yes\""
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\naabddc\\n\") == \"Yes\"\nassert solution(\"3\\nabc\\n\") == \"No\"\nassert solution(\"3\\njjj\\n\") == \"Yes\""
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"aabddc\") == \"Yes\"\nassert solution(\"3abc\") == \"No\"\nassert solution(\"3jjj\") == \"Yes\""
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aabddc\") == \"Yes\"\nassert solution(\"3abc\") == \"No\"\nassert solution(\"3jjj\") == \"Yes\"\n"
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\naabddc\") == \"Yes\"\nassert solution(\"3\\nabc\") == \"No\"\nassert solution(\"3\\njjj\") == \"Yes\""
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 'Yes'\nassert solution(input()) == 'No'\nassert solution(input()) == 'Yes'\n"
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 2\") == \"54\"\nassert solution(\"7 4\") == \"1728\""
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 2\") == 54\nassert solution(\"7 4\") == 1728"
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 2\") == 54\nassert solution(\"7 4\") == 1728\n"
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2\") == \"54\"\nassert solution(\"7 4\") == \"1728\""
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 2\") == \"54\"\nassert solution(\"7 4\") == \"1728\""
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(5 2) == 54\nassert solution(7 4) == 1728"
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 2\") == 54\nassert solution(\"7 4\") == 1728"
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"54\""
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1728\""
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"54\""
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW\\n\") == \"2 4\\n\", \"Test 1 failed\"\nassert solution(\"3 3\\nWWW\\nBWW\\nWWW\\n\") == \"2 1\\n\", \"Test 2 failed\"\n\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Test failed\""
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW\") == \"2 4\\n\", \"Test 1 failed.\"\nassert solution(\"3 3\\nWWW\\nBWW\\nWWW\") == \"2 1\\n\", \"Test 2 failed.\""
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW\\n') == '2 4\\n'\nassert solution('3 3\\nWWW\\nBWW\\nWWW\\n') == '2 1\\n'"
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW\") == \"2 4\\n\"\nassert solution(\"3 3\\nWWW\\nBWW\\nWWW\") == \"2 1\\n\""
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW\") == \"2 4\\n\"\nassert solution(\"3 3\\nWWW\\nBWW\\nWWW\") == \"2 1\\n\""
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW') == '2 4'\nassert solution('3 3\\nWWW\\nBWW\\nWWW') == '2 1'"
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW\") == \"2 4\\n\"\nassert solution(\"3 3\\nWWW\\nBWW\\nWWW\") == \"2 1\\n\""
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW\") == \"2 4\"\nassert solution(\"3 3\\nWWW\\nBWW\\nWWW\") == \"2 1\""
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW\") == \"2 4\\n\"\nassert solution(\"3 3\\nWWW\\nBWW\\nWWW\") == \"2 1\\n\""
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 7\\n2 4\\n5 1\\n2 3\\n3 4\\n4 1\\n5 3\\n3 5\\n') == '10 9 10 10 9'\nassert solution('2 3\\n1 2\\n1 2\\n1 2\\n') == '5 6'"
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 7\\n2 4\\n5 1\\n2 3\\n3 4\\n4 1\\n5 3\\n3 5\\n\") == \"10 9 10 10 9 \\n\"\nassert solution(\"2 3\\n1 2\\n1 2\\n1 2\\n\") == \"5 6 \\n\"\nassert solution(\"5 7\\n2 4\\n5 1\\n2 3\\n3 4\\n4 1\\n5 3\\n3 5\\n\") == \"10 9 10 10 9 \\n\""
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 7\\n2 4\\n5 1\\n2 3\\n3 4\\n4 1\\n5 3\\n3 5\\n') == '10 9 10 10 9'\nassert solution('2 3\\n1 2\\n1 2\\n1 2\\n') == '5 6'"
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 7\\n2 4\\n5 1\\n2 3\\n3 4\\n4 1\\n5 3\\n3 5\") == \"10 9 10 10 9\\n\""
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 7\\n2 4\\n5 1\\n2 3\\n3 4\\n4 1\\n5 3\\n3 5\\n') == '10 9 10 10 9\\n'\nassert solution('2 3\\n1 2\\n1 2\\n1 2\\n') == '5 6\\n'"
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 7\\n2 4\\n5 1\\n2 3\\n3 4\\n4 1\\n5 3\\n3 5\\n') == '10 9 10 10 9\\n'\nassert solution('2 3\\n1 2\\n1 2\\n1 2\\n') == '5 6\\n'"
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"10 9 10 10 9\\n5 6\"\nassert solution() == \"10 9 10 10 9\\n5 6\""
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 7\\n2 4\\n5 1\\n2 3\\n3 4\\n4 1\\n5 3\\n3 5\\n\") == \"10 9 10 10 9\\n\"\nassert solution(\"2 3\\n1 2\\n1 2\\n1 2\\n\") == \"5 6\\n\"\nassert solution(\"5 7\\n2 4\\n5 1\\n2 3\\n3 4\\n4 1\\n5 3\\n3 5\\n\") == \"10 9 10 10 9\\n\""
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 7\\n2 4\\n5 1\\n2 3\\n3 4\\n4 1\\n5 3\\n3 5\\n\") == \"10 9 10 10 9 \\n\""
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 7\\n2 4\\n5 1\\n2 3\\n3 4\\n4 1\\n5 3\\n3 5') == '10 9 10 10 9 \\n'\nassert solution('2 3\\n1 2\\n1 2\\n1 2') == '5 6 \\n'"
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\"\nassert solution(stdin) == \"2\""
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n\") == \"2\\n\"\nassert solution(\"1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\\n\") == \"2\\n\""
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n1 1 -3\\n2\") == \"2\\n\"\nassert solution(\"1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\\n2\") == \"2\\n\"\nassert solution(\"1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n1 1 -3\\n2\\n\") == \"2\\n\"\nassert solution(\"1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n1 1 -3\\n2\\n\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\\n2\\n\\n1 0 0\\n0 1 0\\n1 1 -3\\n2\\n\") == \"2\\n\"\nassert solution(\"1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n1 1 -3\\n2\\n\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\\n2\\n\\n1 0 0\\n0 1 0\\n1 1 -3\\n2\\n\\n1 0 0\\n0 1 0\\n1 1 -3\\n2\\n\\n1 0 0\\n0 1 0\\n1 1 -3\\n2\\n\\n1 0 0\\n0 1 0\\n1 1 -3\\n2\\n\\n1 0 0\\n0 1 0\\n1 1 -3\\n2\\n\\n1 0 0\\n0 1 0\\n1 1 -3\\n2\\n\\n1 0 0\\n0 1 0\\n1 1 -3\\n2\\n\\n1 0 0\\n0 1 0\\n1 1 -3\\n2\\n\\n1 0 0\\n0 1 0\\n1 1 -3\\n2\\n\\n1 0 0\\n0 1 0\\n1 1 -3\\n2\\n\\n1 0 0\\n0 1 0\\n1 1 -3\\n2\\n\\n1 0 0\\n0 1 0\\n1 1 -3\\n2\\n\\n1 0 0\\n0 1 0\\n1 1 -3\\n2\\n\\n1 0 0\\n0 1 0\\n1 1 -3\\n2\\n\\n1 0 0\\n0 1 0\\n1 1 -3\\n2\\n\\n1 0 0\\n0 1 0\\n1 1 -3\\n2\\n\\n1 0 0\\n0 1 0\\n1 1 -3\\n2\\n\\n1 0 0\\n0 1 0\\n1 1 -3\\n2\\n\\n1 0 0\\n0 1 0\\n1 1 -3\\n2\\n\\n1 0 0\\n0 1 0\\n1 1 -3\\n2\\n\\n1 0 0\\n0 1 0\\n1 1 -3\\n2\\n\\n1 0 0\\n0 1 0\\n1 1 -3\\n2\\n\\n1 0 0\\n0 1 0\\n1 1 -3\\n2\\n\\n1 0 0\\n0 1 0\\n1 1 -3\\n2\\n\\n1 0 0\\n0 1 0\\n1 1 -3\\n2\\n\\n1 0 0\\n0 1 0\\n1 1 -3\\n2\\n\\n1 0 0\\n0 1 0\\n1 1 -3\\n2\\n\\n1 0 0"
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n1 1 -3\") == \"2\"\nassert solution(\"1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\") == \"2\"\nassert solution(\"1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n1 1 -3\\n1 1 0\\n0 0 0\\n1 1 -3\\n0 0 0\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1 1 -3\\n1"
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n') == '2'\nassert solution('1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\\n') == '2'\nassert solution('1 1\\n-1 -1\\n3\\n0 1 0\\n0 0 1\\n0 0 -2\\n') == '0'"
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n1 1 -3\\n\") == \"2\\n\"\nassert solution(\"1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\\n\") == \"2\\n\""
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n1 1 -3\") == \"2\"\nassert solution(\"1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\") == \"2\"\n\nfrom typing import List"
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n1 1 -3\") == \"2\\n\"\nassert solution(\"1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\") == \"2\\n\""
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n1 1 -3\") == \"2\\n\"\nassert solution(\"1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\") == \"2\\n\""
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n\") == \"2\\n\"\nassert solution(\"1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\\n\") == \"2\\n\""
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1\\n3 4\") == \"Kevin\"\nassert solution(\"1 2\\n3\") == \"Nicky\"\n"
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1\\n3 4\") == \"Kevin\\n\"\nassert solution(\"1 2\\n3\\n\") == \"Nicky\\n\"\n"
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1\\n3 4\") == \"Kevin\"\nassert solution(\"1 2\\n3\") == \"Nicky\""
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 1\\n3 4') == 'Kevin'\nassert solution('1 2\\n3') == 'Nicky'"
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1\\n3 4\") == \"Kevin\"\nassert solution(\"1 2\\n3\") == \"Nicky\""
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1\\n3 4\") == \"Kevin\"\nassert solution(\"1 2\\n3\") == \"Nicky\""
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1\\n3 4\") == \"Kevin\"\nassert solution(\"1 2\\n3\") == \"Nicky\"\nassert solution(\"1 2\\n\") == \"Nicky\"\nassert solution(\"1 2\\n3\\n\") == \"Nicky\""
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1\\n3 4\") == \"Kevin\"\nassert solution(\"1 2\\n3\") == \"Nicky\""
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1\\n3 4\\n\") == \"Kevin\\n\"\nassert solution(\"1 2\\n3\\n\") == \"Nicky\\n\"\nassert solution(\"2\\n1\\n2\\n1\\n1\\n1\\n\") == \"Kevin\\n\""
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1\\n3 4\") == \"Kevin\"\nassert solution(\"1 2\\n3\") == \"Nicky\""
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n2 2 2\\n2\\n2 1\\n\") == \"3\\n1 2 3\\n3\\n1\\n\"\nassert solution(\"3\\n2 2 2\\n2\\n2 1\\n\") == \"1\\n1 1 1\\n2\\n\"\nassert solution(\"2\\n2 1\\n\") == \"-1\\ndef solution(stdin: str) -> str:pass\\n\""
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 3, \"Output: \" + str(solution(3)) + \"\\n\"  # expected output: 3\nassert solution(3) == 3, \"Output: \" + str(solution(3)) + \"\\n\"  # expected output: 3\nassert solution(2) == 1, \"Output: \" + str(solution(2)) + \"\\n\"  # expected output: 1\nassert solution(2) == 1, \"Output: \" + str(solution(2)) + \"\\n\"  # expected output: 1\nassert solution(1) == -1, \"Output: \" + str(solution(1)) + \"\\n\"  # expected output: -1"
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n1 2 3\\n3\\n2 2 2\\n2\\n2 1\\n') == '3\\n1 2 3\\n1 2 3\\n1\\n2\\n'\nassert solution('3\\n2 2 2\\n2\\n2 1\\n') == '1\\n1 1 1\\n2\\n'\nassert solution('2\\n2 1\\n') == '-1\\ndef solution(stdin: str) -> str:pass\\n'"
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == [3]\nassert solution(2) == [1, 1, 1]\nassert solution(2) == [1, 1, 1]\nassert solution(2) == [-1]\nassert solution(\"def solution(stdin: str) -> str:\\n    pass\\n\\n\") == [-1]\n\nfrom typing import List\n"
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == -1\nassert solution(input()) == -1\nassert solution(input()) == -1"
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Solution does not match the expected output. Expected: {expected}, got: {solution(input())}\"\n"
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '3\\n1 2 3\\n1 2 3\\n1 2 3'\nassert solution() == '3\\n2 2 2\\n1 1 1 1'\nassert solution() == '2\\n2 1'\nassert solution() == '-1\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1\\n2 3\\n2 3\\n2 3') == '3\\n1 2 3\\n1 2 3\\n1 2 3'\nassert solution('1\\n2 3\\n2 3\\n2 3') == '1\\n1 1 1'\nassert solution('1\\n2 3\\n2 3\\n2 3') == '-1\\ndef solution(stdin: str) -> str:    pass'"
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n2 2 2\\n2\\n2 1\\n\") == \"3\\n1 2 3\\n3\\n1 2 3\\n\"\nassert solution(\"3\\n2 2 2\\n2\\n2 1\\n\") == \"1\\n1 1 1\\n2\\n\"\nassert solution(\"2\\n2 1\\n\") == \"-1\\ndef solution(stdin: str) -> str: \\n    pass\"\n"
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 2 3\\n\\n2\\n2 2 2\\n\\n2\\n2 1\\n\\n1\\n\\n\\n\") == \"3\\n1 2 3\\n\\n2\\n2 2 2\\n\\n2\\n2 1\\n\\n1\\n\\n\\n\""
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"11\") == \"6\"\nassert solution(\"01\") == \"2\"\nassert solution(\"1\") == \"1\""
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(11) == 6\nassert solution(01) == 2\nassert solution(1) == 1"
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(b'11') == 6\nassert solution(b'01') == 2\nassert solution(b'1') == 1"
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(11) == 6\nassert solution(01) == 2\nassert solution(1) == 1"
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"11\") == \"6\"\nassert solution(\"01\") == \"2\"\nassert solution(\"1\") == \"1\""
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"11\") == \"6\"\nassert solution(\"01\") == \"2\"\nassert solution(\"1\") == \"1\""
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 6\nassert solution(1) == 1\nassert solution(100) == 1\nassert solution(1000) == 1\n"
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"11\") == \"6\"\nassert solution(\"01\") == \"2\"\nassert solution(\"1\") == \"1\""
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"11\") == \"6\"\nassert solution(\"01\") == \"2\"\nassert solution(\"1\") == \"1\""
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('11') == '6'\nassert solution('01') == '2'\nassert solution('1') == '1'"
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n15\") == \"1\\n\"\nassert solution(\"3\\n1 1 2\") == \"3\\n\"\nassert solution(\"2\\n5 7\") == \"4\\n\"\n"
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1\\n15\\n') == '1\\n'\nassert solution('3\\n1 1 2\\n') == '3\\n'\nassert solution('2\\n5 7\\n') == '4\\n'"
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n15\\n\") == \"1\\n\"\nassert solution(\"3\\n1 1 2\\n\") == \"3\\n\"\nassert solution(\"2\\n5 7\\n\") == \"4\\n\"\n"
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n15\") == \"1\\n\"\nassert solution(\"3\\n1 1 2\") == \"3\\n\"\nassert solution(\"2\\n5 7\") == \"4\\n\"\n\nfrom itertools import combinations\nfrom functools import reduce"
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n15\") == \"1\"\nassert solution(\"3\\n1 1 2\") == \"3\"\nassert solution(\"2\\n5 7\") == \"4\"\n"
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n15\") == \"1\\n\"\nassert solution(\"3\\n1 1 2\") == \"3\\n\"\nassert solution(\"2\\n5 7\") == \"4\\n\""
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"4\""
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n15\") == \"1\"\nassert solution(\"3\\n1 1 2\") == \"3\"\nassert solution(\"2\\n5 7\") == \"4\""
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n15\\n\") == \"1\\n\"\nassert solution(\"3\\n1 1 2\\n\") == \"3\\n\"\nassert solution(\"2\\n5 7\\n\") == \"4\\n\""
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '3'\nassert solution(input()) == '4'\n"
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(example1) == \"YES\", \"First sample incorrect.\"\nassert solution(example2) == \"YES\", \"Second sample incorrect.\"\nassert solution(example3) == \"NO\", \"Third sample incorrect.\"\nassert solution(example4) == \"NO\", \"Fourth sample incorrect.\"\nassert solution(example5) == \"NO\", \"Fifth sample incorrect.\""
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 0 2\\n2 0 1\\n\") == \"YES\"\nassert solution(\"2\\n1 0\\n0 1\\n\") == \"YES\"\nassert solution(\"4\\n1 2 3 0\\n0 3 2 1\\n\") == \"NO\"\n"
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n0 2\\n2 0 1\\n\") == \"YES\"\nassert solution(\"2\\n0 1\\n\\n\") == \"YES\"\nassert solution(\"4\\n1 2 3 0\\n0 3 2 1\\n\") == \"NO\""
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 0 2\\n2 0 1\\n\") == \"YES\"\nassert solution(\"2\\n1 0\\n0 1\\n\") == \"YES\"\nassert solution(\"4\\n1 2 3 0\\n0 3 2 1\\n\") == \"NO\""
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 0 2\\n2 0 1\\n\") == \"YES\"\nassert solution(\"2\\n1 0\\n0 1\\n\") == \"YES\"\nassert solution(\"4\\n1 2 3 0\\n0 3 2 1\\n\") == \"NO\"\n"
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input(\"Enter the number of islands: \")) == \"YES\"\nassert solution(input(\"Enter the number of islands: \")) == \"YES\"\nassert solution(input(\"Enter the number of islands: \")) == \"YES\"\nassert solution(input(\"Enter the number of islands: \")) == \"NO\""
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('Input\\n3\\n1 0 2\\n2 0 1\\n') == 'YES\\n'\nassert solution('Input\\n2\\n1 0\\n0 1\\n') == 'YES\\n'\nassert solution('Input\\n4\\n1 2 3 0\\n0 3 2 1\\n') == 'NO\\n'"
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed.\" for i, (input_, expected_output) in enumerate(zip(stdin.strip().split('\\n'), expected_outputs.strip().split('\\n'))):\n    stdin, expected_output = input_, expected_output\n    result = solution(stdin)\n    print(\"YES\" if result == expected_output else \"NO\")\n"
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 0 2\\n2 0 1\\n\") == \"YES\"\nassert solution(\"2\\n1 0\\n0 1\\n\") == \"YES\"\nassert solution(\"4\\n1 2 3 0\\n0 3 2 1\\n\") == \"NO\""
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 0 2\\n2 0 1\\n\") == \"YES\"\nassert solution(\"2\\n1 0\\n0 1\\n\") == \"YES\"\nassert solution(\"4\\n1 2 3 0\\n0 3 2 1\\n\") == \"NO\""
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '9000', 'Your implementation is not correct'"
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n8 10 9 9 8 10\\n1 1 1 1 1 1\\n\") == \"9000\\n\"\nassert solution(\"6\\n8 10 9 9 8 10\\n1 10 5 5 1 10\\n\") == \"1160\\n\"\n"
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"9000\", \"Test case 1 failed.\"\nassert solution() == \"1160\", \"Test case 2 failed.\""
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n8 10 9 9 8 10\\n1 1 1 1 1 1\") == \"9000\"\nassert solution(\"6\\n8 10 9 9 8 10\\n1 10 5 5 1 10\") == \"1160\""
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r')) == 9000\nassert solution(open('input2.txt', 'r')) == 1160"
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"Output\", f\"Expected output: 'Output', received: {solution(input())}\""
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(str(6)) == \"9000\"\nassert solution(str(6)) == \"1160\""
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(6) == \"9000\"\nassert solution(6) == \"1160\""
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\").read()) == \"9000\"\nassert solution(open(\"input2.txt\").read()) == \"1160\""
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"9000\"\nassert solution(stdin) == \"1160\"\n"
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n2 3\\n1 4\\n1 4\\n2 1\") == 6\nassert solution(\"8 6\\n5 6\\n5 7\\n5 8\\n6 2\\n2 1\\n7 3\\n1 3\\n1 4\") == 1"
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '6', 'The expected output is 6, but got {}'.format(solution(stdin))"
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 6, \"Your solution is incorrect.\"\n"
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n2 3\\n1 4\\n1 4\\n2 1\\n\") == \"6\"\nassert solution(\"8 6\\n5 6\\n5 7\\n5 8\\n6 2\\n2 1\\n7 3\\n1 3\\n1 4\\n\") == \"1\""
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt').read()) == '6\\n'\nassert solution(open('test_input.txt').read()) == '6\\n'\nassert solution(open('example_input.txt').read()) == '6\\n'"
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\n2 3\\n1 4\\n1 4\\n2 1\\n\") == \"6\\n\"\n\nassert solution(\"8 6\\n5 6\\n5 7\\n5 8\\n6 2\\n2 1\\n7 3\\n1 3\\n1 4\\n\") == \"1\\n\""
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n2 3\\n1 4\\n1 4\\n2 1\") == 6\nassert solution(\"8 6\\n5 6\\n5 7\\n5 8\\n6 2\\n2 1\\n7 3\\n1 3\\n1 4\") == 1"
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 6, \"The output is wrong\""
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"6\""
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"6\\n\", \"Expected output: 6\\n, but got: \" + solution() + \"\\n\""
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"-1\\n\"  # expected output\nassert solution() == \"-1\\n\"  # expected output\nassert solution() == \"-1\\n\"  # expected output\nassert solution() == \"5\\n\"   # expected output\nassert solution() == \"5\\n\"   # expected output\nassert solution() == \"5\\n\"   # expected output"
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 2 3 4 6') == '-1\\n'  # All numbers cannot be replaced by 1\nassert solution('4 2 4 6') == '4\\n'  # All numbers can be replaced by 1\nassert solution('3 2 6 9') == '4\\n'  # All numbers can be replaced by 1"
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed. Expected output: {expected_output}, Actual output: {solution(input())}\"\n\ninput_array = list(map(int, input().split()))\nn = len(input_array)"
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n2 2 3 4 6\") == 5\nassert solution(\"4\\n2 4 6 8\") == -1\nassert solution(\"3\\n2 6 9\") == 4\n"
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n2 2 3 4 6\") == \"5\\n\"\nassert solution(\"4\\n2 4 6 8\") == \"-1\\n\"\nassert solution(\"3\\n2 6 9\") == \"4\\n\""
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == -1, \"The minimum number of operations needed to make all numbers equal to 1 is -1\""
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n2 2 3 4 6\\n\\n4\\n2 4 6 8\\n\\n3\\n2 6 9\\n') == 5, \"Expected 5, got {}\".format(solution('5\\n2 2 3 4 6\\n\\n4\\n2 4 6 8\\n\\n3\\n2 6 9\\n'))"
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2 2 3 4 6\\n4\\n2 4 6 8\\n3\\n2 6 9\\n\") == \"5\\n\"\nassert solution(\"4\\n2 4 6 8\\n3\\n2 6 9\\n\") == \"-1\\n\"\nassert solution(\"3\\n2 6 9\\n\") == \"4\\n\""
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2 2 3 4 6\") == \"5\\n\"\nassert solution(\"4\\n2 4 6 8\") == \"-1\\n\"\nassert solution(\"3\\n2 6 9\") == \"4\\n\""
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abacabaca\") == 3\nassert solution(\"abaca\") == 0"
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('abacabaca') == 'aca', 'Expected \"aca\", got \"{}\"'.format(solution('abacabaca'))\nassert solution('abaca') == 0, 'Expected \"0\", got \"{}\"'.format(solution('abaca'))\n\nprint(solution('abacabaca'))  # Output: 3\nprint(solution('abaca'))  # Output: 0"
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abacabaca\") == \"3\\naca\\nba\\nca\"\nassert solution(\"abaca\") == \"0\""
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abacabaca\") == \"3\\naca\\nba\\nca\"\nassert solution(\"abaca\") == \"0\"\n\nassert solution(\"abac\") == \"4\\naca\\naba\\naca\\naba\"\nassert solution(\"aaab\") == \"2\\naa\\nab\"\nassert solution(\"abb\") == \"2\\nab\\nba\"\nassert solution(\"bab\") == \"2\\nba\\nab\"\nassert solution(\"babab\") == \"3\\nba\\nab\\naba\\naba\\naba\"\nassert solution(\"abbacab\") == \"4\\naba\\nab\\nabac\\nabac\\nab\"\n\nassert solution(\"a\") == \"0\"\nassert solution(\"ab\") == \"0\"\nassert solution(\"abc\") == \"0\"\nassert solution(\"abcd\") == \"0\"\nassert solution(\"efgh\") == \"0\"\nassert solution(\"ijkl\") == \"0\"\nassert solution(\"mnop\") == \"0\"\nassert solution(\"qr\") == \"0\"\nassert solution(\"rst\") == \"0\"\nassert solution(\"uvw\") == \"0\"\nassert solution(\"xyz\") == \"0\"\nassert solution(\"123\") == \"0\"\nassert solution(\"a\") == \"0\"\nassert solution(\"b\") == \"0\"\nassert solution(\"c\") == \"0\"\nassert solution(\"d\") == \"0\"\nassert solution(\"e\") == \"0\"\nassert solution(\"f\") == \"0\"\nassert solution(\"g\") == \"0\"\nassert solution(\"h\") == \"0\"\nassert solution(\"i\") == \"0\"\nassert solution(\"j\") == \"0\"\nassert solution(\"k\") == \"0\"\nassert solution(\"l\") == \"0\"\nassert solution(\"m\") == \"0\"\nassert solution(\"n\") == \"0\"\nassert solution(\"o\") == \"0\"\nassert solution(\"p\") == \"0\"\nassert solution(\"q\") == \"0\"\nassert solution(\"r\") == \"0\"\nassert solution(\"s\") == \"0\"\nassert solution(\"t\") == \"0\"\nassert solution(\"u\") == \"0\"\nassert solution(\"v\") == \"0\"\nassert solution(\"w\") == \"0\"\nassert solution(\"x\") == \"0\"\nassert solution(\"y\") == \"0\"\nassert solution(\"z\") == \"0\""
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abacabaca\") == \"3\\naca\\nba\\nca\"\nassert solution(\"abaca\") == \"0\""
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('abacabaca') == '3\\naca\\nba\\nca'\nassert solution('abaca') == '0'"
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abacabaca\") == \"3\\naca\\nba\\nca\"\nassert solution(\"abaca\") == \"0\"\n\nSolution:\n\nThe problem is asking us to find all distinct suffixes of a given word in Reberland language. \n\nThe suffixes can be obtained by traversing the word from the last character to the first character and checking if it matches the suffix rules. We can use a dictionary to keep track of all the suffixes we have seen so far.\n\nFirst, we iterate over the word from the last character to the first character. For each character, we check if it is a suffix. If it is, we add it to the suffixes dictionary.\n\nNext, we check if the current suffix is already in the dictionary. If not, we add it to the dictionary and continue to the next character.\n\nFinally, we return the number of distinct suffixes.\n\nLet's see the implementation of the solution: \n\n```python\n"
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abacabaca\") == \"3\\naca\\nba\\nca\""
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('abacabaca') == '3\\naca\\nba\\nca'\nassert solution('abaca') == '0'"
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abacabaca\") == \"3\\naca\\nba\\nca\"\nassert solution(\"abaca\") == \"0\""
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5\\n11..2\\n#..22\\n#.323\\n.#333\\n\") == \"2\\n\"\nassert solution(\"1 5\\n1#2#3\\n\") == \"-1\\n\"\nassert solution(\"\") == \"-1\\n\""
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected, f\"got '{solution(stdin)}', expected '{expected}'\"\nfor _ in range(10):\n    n, m = map(int, stdin.split())\n    map_ = list(map(str, stdin.split()))\n    expected = solution(f\"{n} {m}\\n{map_}\")\n    print(expected)"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3, 4) == 2\nassert solution(3, 5) == -1\nassert solution(3, 6) == 2\nassert solution(3, 7) == -1\nassert solution(3, 8) == 2\nassert solution(3, 9) == -1"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Input\") == \"2\"\nassert solution(\"Input\\nInput\\n\") == \"2\"\nassert solution(\"Input\\n1\\n\") == \"2\"\nassert solution(\"Input\\n1\\n1\\n\") == \"2\"\nassert solution(\"Input\\n1\\n1\\n1\\n\") == \"2\"\nassert solution(\"Input\\n1\\n1\\n1\\n1\\n\") == \"2\"\nassert solution(\"Input\\n1\\n1\\n1\\n1\\n1\\n\") == \"2\"\nassert solution(\"Input\\n1\\n1\\n1\\n1\\n1\\n1\\n\") == \"2\"\nassert solution(\"Input\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\") == \"2\"\nassert solution(\"Input\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\") == \"2\"\nassert solution(\"Input\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\") == \"2\"\nassert solution(\"Input\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\") == \"2\"\nassert solution(\"Input\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\") == \"2\"\nassert solution(\"Input\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\") == \"2\"\nassert solution(\"Input\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\") == \"2\"\nassert solution(\"Input\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\") == \"2\"\nassert solution(\"Input\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\") == \"2\"\nassert solution(\"Input\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\") == \"2\"\nassert solution(\"Input\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\") == \"2\"\nassert solution(\"Input\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\") == \"2\"\nassert solution(\"Input\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\") == \"2\"\nassert solution(\"Input\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\") == \"2\"\nassert solution(\"Input\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\") == \"2\"\nassert solution(\"Input\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 5\\n11..2\\n#..22\\n#.323\\n.#333') == 2\nassert solution('1 5\\n1#2#3') == -1\n"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 5\\n1#2#3\") == 2\nassert solution(\"4 5\\n11..2\\n#..22\\n#.323\\n.#333\") == -1"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 2, \"Expected result: 2, but got: {}\".format(solution())"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Wrong output. Input: {input()}, Output: {output}\""
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 2\nassert solution() == -1"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 5\\n1#2#3\") == \"2\"\nassert solution(\"4 5\\n11..2\\n#..22\\n#.323\\n.#333\") == \"2\"\nassert solution(\"1 5\\n11..2\\n#..22\\n#.323\\n.#333\") == \"-1\""
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('8') == '6', 'Test case 8 failed'\nassert solution('3') == '-1', 'Test case 3 failed'"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Error: expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8\") == \"6\"\nassert solution(\"3\") == \"-1\"\nassert solution(\"6\") == \"6\"\nassert solution(\"10\") == \"20\"\nassert solution(\"15\") == \"30\"\nassert solution(\"20\") == \"40\"\nassert solution(\"1\") == \"1\""
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8\"))((())(\n\"8))((())(\")\nassert solution(\"3\"))(()\n\"3)()()\"\nassert solution(\"5\"))(())\n\"5)()()()()()()()\"\nassert solution(\"1\"))\n\"-1\"\nassert solution(\"100\"))(())\n\"100)()()()()()()()\"\nassert solution(\"100000000000000000\"))(())\n\"10000000000000000000)()()()()()()()\"\nassert solution(\"10000000000000000000000\"))(())\n\"100000000000000000000000)()()()()()()()\"\nassert solution(\"1000000000000000000000000\"))(())\n\"100000000000000000000000000)()()()()()()()()\""
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8\\n(()((())()\\n\") == 6, \"Incorrect result for example 1\")\nassert solution(\"3\\n(()\\n\") == -1, \"Incorrect result for example 2\")"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('8') == '6'\nassert solution('3') == '-1'\n"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8\") == \"6\", \"Output: %s, Expected: %s\" % (solution(\"8\"), \"6\")\nassert solution(\"3\") == \"0\", \"Output: %s, Expected: %s\" % (solution(\"3\"), \"0\")"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8\\n())((())(\") == 6\nassert solution(\"3\\n(()\") == -1"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('8\\n())((())(') == 6\nassert solution('3\\n(()') == -1"
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3 5\\n4 4 0\\n1 3\\n3 2\\n3 1\") == \"1\\n3 \"\nassert solution(\"4 5 4\\n2 1 0 3\\n4 3\\n3 2\\n1 2\\n1 4\\n1 3\") == \"4\\n1 2 3 4 \"\n"
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, but got: {solution(input())}\""
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_data) == expected_output"
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5 4\\n2 1 0 3\\n4 3\\n3 2\\n1 2\\n1 4\\n1 3\\n\") == \"4\\n1 2 3 4\"\nassert solution(\"3 3 5\\n4 4 0\\n1 3\\n3 2\\n3 1\\n\") == \"1\\n3\""
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3 5\\n4 4 0\\n1 3\\n3 2\\n3 1\\n\") == \"1\\n3 1\\n\"\nassert solution(\"4 5 4\\n2 1 0 3\\n4 3\\n3 2\\n1 2\\n1 4\\n1 3\\n\") == \"4\\n1 2 3 4\\n\"\nassert solution(\"3 1 2 0\\n\") == \"0\\n\"\nassert solution(\"4 2\\n2 3\\n1\\n0\\n\") == \"2\\n\""
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1\\n3\"\nassert solution() == \"4\\n1 2 3 4\""
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3 5\\n4 4 0\\n1 3\\n3 2\\n3 1\\n\") == \"1\\n3 3\"\nassert solution(\"4 5 4\\n2 1 0 3\\n4 3\\n3 2\\n1 2\\n1 4\\n1 3\\n\") == \"4\\n1 2 3 4 \""
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 1\nassert solution() == \"1\"\nassert solution() == \"3 1\"\nassert solution() == \"4\"\nassert solution() == \"1 2 3 4\""
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3 5\\n4 4 0\\n1 3\\n3 2\\n3 1\\n\") == \"1\\n3 1\\n\"\nassert solution(\"4 5 4\\n2 1 0 3\\n4 3\\n3 2\\n1 2\\n1 4\\n1 3\\n\") == \"4\\n1 2 3 4\\n\""
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3 5\\n4 4 0\\n1 3\\n3 2\\n3 1\\n\") == \"1\\n3 2\\n3 1\\n\""
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input) == output, f\"Expected {output}, got {solution(input)}\""
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"8\\n\", \"The correct output is: 8\\n\"\n"
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == \"8\\n\"\nassert solution(\"3 2\") == \"11\\n\""
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"8\"\n"
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 3') == '8'"
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 3') == '8'"
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '8\\n', \"Expected output: 8, but got: {}\".format(solution(stdin))"
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == \"8\"\n"
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 3') == '8'\n"
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, but got {solution(input())}\""
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 2\\n1 2\\n2 3\\n\\n1 2\\n2 1\\n3 1\\n\\n1 2\\n1 1\\n2 100\\n\\n1 2\\n2 1\\n1 1\\n1 1\\n2 100\\n\\n1 2\\n2 1\\n2 1\\n1 1\\n2 100\\n\\n1 2\\n2 1\\n1 1\\n1 1\\n1 1\\n2 100\\n\") == \"5\\n\"\n\nassert solution(\"100 3\\n1 2\\n2 1\\n3 1\\n\\n1 2\\n2 1\\n3 1\\n\\n1 2\\n1 1\\n2 100\\n\\n1 2\\n2 1\\n1 1\\n2 100\\n\\n1 2\\n2 1\\n1 1\\n1 1\\n2 100\\n\\n1 2\\n2 1\\n2 1\\n1 1\\n2 100\\n\\n1 2\\n2 1\\n1 1\\n1 1\\n1 1\\n2 100\\n\") == \"4\\n\"\n\nassert solution(\"1 2\\n1 1\\n2 100\\n\\n1 2\\n2 1\\n1 1\\n1 1\\n2 100\\n\\n1 2\\n2 1\\n2 1\\n1 1\\n2 100\\n\\n1 2\\n2 1\\n1 1\\n1 1\\n1 1\\n2 100\\n\") == \"100\\n\"\n\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"5\", \"The output of the solution function is incorrect.\""
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 2\\n1 2\\n2 3\\n\") == \"5\"\nassert solution(\"100 3\\n1 2\\n2 1\\n3 1\\n\") == \"4\"\nassert solution(\"1 2\\n1 1\\n2 100\\n\") == \"100\""
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2\\n1 2\\n2 3\\n\") == \"5\\n\"\nassert solution(\"100 3\\n1 2\\n2 1\\n3 1\\n\") == \"4\\n\"\nassert solution(\"1 2\\n1 1\\n2 100\\n\") == \"100\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2\\n2 3\\n\") == \"5\"\nassert solution(\"100 3\\n1 2\\n2 1\\n3 1\\n\") == \"4\"\nassert solution(\"1 2\\n1 1\\n2 100\\n\") == \"100\""
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2\\n1 2\\n2 3\\n\") == \"5\\n\"\nassert solution(\"100 3\\n1 2\\n2 1\\n3 1\\n\") == \"4\\n\"\nassert solution(\"1 2\\n1 1\\n2 100\\n\") == \"100\\n\""
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    5 2\n    1 2\n    2 3\n    1 1\n    \"\"\"\n) == \"5\\n\"\n\nassert solution(\n    \"\"\"\n    100 3\n    1 2\n    2 1\n    3 1\n    \"\"\"\n) == \"4\\n\"\n\nassert solution(\n    \"\"\"\n    1 2\n    1 1\n    2 100\n    \"\"\"\n) == \"100\\n\""
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2\\n1 2\\n2 3\\n\") == \"5\\n\"\nassert solution(\"100 3\\n1 2\\n2 1\\n3 1\\n\") == \"4\\n\"\nassert solution(\"1 2\\n1 1\\n2 100\\n\") == \"100\\n\""
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 2\\n1 2\\n2 3\\n\") == \"5\\n\"\nassert solution(\"100 3\\n1 2\\n2 1\\n3 1\\n\") == \"4\\n\"\nassert solution(\"1 2\\n1 1\\n2 100\\n\") == \"100\\n\""
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"5\\n\", \"First sample should return 5\"\nassert solution() == \"4\\n\", \"Second sample should return 4\"\nassert solution() == \"100\\n\", \"Third sample should return 100\""
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('aaabb') == '6'\nassert solution('usaco') == '1'\nassert solution('lol') == '2'"
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('aaabb') == 6, \"The number of occurrences of the secret message is incorrect.\"\nassert solution('usaco') == 1, \"The number of occurrences of the secret message is incorrect.\"\nassert solution('lol') == 2, \"The number of occurrences of the secret message is incorrect.\""
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"aaabb\") == \"6\", \"Test 1\"\nassert solution(\"usaco\") == \"1\", \"Test 2\"\nassert solution(\"lol\") == \"2\", \"Test 3\""
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"aaabb\") == 6\nassert solution(\"usaco\") == 1\nassert solution(\"lol\") == 2"
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"aaabb\") == \"6\"\nassert solution(\"usaco\") == \"1\"\nassert solution(\"lol\") == \"2\""
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"aaabb\") == \"6\", \"Bessie the cow has just intercepted a text that Farmer John sent to Burger Queen! However, Bessie is sure that there is a secret message hidden inside. The text is a string $s$ of lowercase Latin letters. She considers a string $t$ as hidden in string $s$ if $t$ exists as a subsequence of $s$ whose indices form an arithmetic progression. For example, the string aab is hidden in string aaabb because it occurs at indices $1$, $3$, and $5$, which form an arithmetic progression with a common difference of $2$. Bessie thinks that any hidden string that occurs the most times is the secret message. Two occurrences of a subsequence of $S$ are distinct if the sets of indices are different. Help her find the number of occurrences of the secret message! For example, in the string aaabb, a is hidden $3$ times, b is hidden $2$ times, ab is hidden $6$ times, aa is hidden $3$ times, bb is hidden $1$ time, aab is hidden $2$ times, aaa is hidden $1$ time, abb is hidden $1$ time, aaab is hidden $1$ time, aabb is hidden $1$ time, and aaabb is hidden $1$ time. The number of occurrences of the secret message is $6$. \"\n\nassert solution(\"usaco\") == \"1\", \"Bessie the cow has just intercepted a text that Farmer John sent to Burger Queen! However, Bessie is sure that there is a secret message hidden inside. The text is a string $s$ of lowercase Latin letters. She considers a string $t$ as hidden in string $s$ if $t$ exists as a subsequence of $s$ whose indices form an arithmetic progression. For example, the string aab is hidden in string aaabb because it occurs at indices $1$, $3$, and $5$, which form an arithmetic progression with a common difference of $2$. Bessie thinks that any hidden string that occurs the most times is the secret message. Two occurrences of a subsequence of $S$ are distinct if the sets of indices are different. Help her find the number of occurrences of the secret message! For example, in the string aaabb, a is hidden $3$ times, b is hidden $2$ times, ab is hidden $6$ times, aa is hidden $3$ times, bb is hidden $1$ time, aab is hidden $2$ times, aaa is hidden $1$ time, abb is hidden $1$ time, aaab is hidden $1$ time, aabb is hidden $1$ time, and aaabb is hidden $1$ time. The number of occurrences of the secret message is $6$. \"\n\nassert solution(\"lol\") == \"2\", \"Bessie the cow has just intercepted a text that Farmer John sent to Burger Queen! However, Bessie is sure that there is a secret message hidden inside. The text is a string $s$ of lowercase Latin letters. She considers a string $t$ as hidden in string $s$ if $t$ exists as a subsequence of $s$ whose indices form an arithmetic progression. For example, the string aab is hidden in string aaabb because it occurs at indices $1$, $3$, and $5$, which form an arithmetic progression with a common difference of $2$. Bessie thinks that any hidden string that occurs the most times is the secret message. Two occurrences of a subsequence of $S$ are distinct if the sets of indices are different. Help her find the number of occurrences of the secret message! For example, in the string aaabb, a is hidden $3$ times, b is hidden $2$ times, ab is hidden $6$ times, aa is hidden $3$ times, bb is hidden $1$ time, aab is hidden $2$ times, aaa is hidden $1$ time, abb is hidden $1$ time, aaab is hidden $1$ time, aabb is hidden $1$ time, and aaabb is hidden $1$ time. The number of occurrences of the secret message is $6$. \""
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"aaabb\") == 6, \"Invalid answer for the first example\"\nassert solution(\"usaco\") == 1, \"Invalid answer for the second example\"\nassert solution(\"lol\") == 2, \"Invalid answer for the third example\""
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aaabb\") == \"6\"\nassert solution(\"usaco\") == \"1\"\nassert solution(\"lol\") == \"2\""
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aaabb\") == \"6\"\nassert solution(\"usaco\") == \"1\"\nassert solution(\"lol\") == \"2\""
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('aaabb') == 6\nassert solution('usaco') == 1\nassert solution('lol') == 2"
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin='1') == '1'\nassert solution(stdin='4') == '2'"
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"2\""
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"2\""
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == '1'\nassert solution(4) == '2'"
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n\") == \"1\\n\"\nassert solution(\"4\\n\") == \"2\\n\""
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"2\""
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\\n\"\nassert solution(\"4\") == \"2\\n\""
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Output\\n1\"\nassert solution(input()) == \"Output\\n2\""
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n\") == \"1\"\nassert solution(\"4\\n\") == \"2\""
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == '1\\n'\nassert solution(4) == '2\\n'"
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 1, \"Incorrect output\"\nassert solution(1) == 2, \"Incorrect output\"\nassert solution(4) == 1, \"Incorrect output\"\nassert solution(5) == 2, \"Incorrect output\"\nassert solution(6) == 1, \"Incorrect output\""
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"\"\"1 2\n2 1\n1 2\"\"\""
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3\n1 4\n2 5\n3 6\n\"\"\") == \"\"\"\n1 2\n2 1\n1 2\n\"\"\"\n\nassert solution(\"\"\"\n5\n1 3\n1 4\n1 5\n1 6\n2 4\n2 5\n2 6\n3 5\n3 6\n\"\"\") == \"\"\"\n1 2\n2 1\n1 2\n\"\"\"\n\nassert solution(\"\"\"\n3\n1 3\n2 3\n3 3\n\"\"\") == \"\"\"\n1 1\n1 2\n1 3\n\"\"\"\n\nassert solution(\"\"\"\n1\n1 1\n\"\"\") == \"\"\"\n1 1\n\"\"\"\n\nassert solution(\"\"\"\n2\n1 1\n\"\"\") == \"\"\"\n1 1\n\"\"\"\n\nassert solution(\"\"\"\n4\n1 2\n1 3\n1 4\n1 5\n\"\"\") == \"\"\"\n1 2\n2 1\n1 2\n\"\"\"\n\nassert solution(\"\"\"\n2\n1 2\n1 3\n\"\"\") == \"\"\"\n1 1\n1 2\n\"\"\""
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 4\\n2 5\\n3 6\") == \"1 2\\n2 1\\n1 2\\n\"\nassert solution(\"1 4\\n2 5\\n3 6\\n\") == \"1 2\\n2 1\\n1 2\\n\"\nassert solution(\"1 4\\n2 5\\n3 6\\n7 8\") == \"1 2\\n2 1\\n1 2\\n\"\nassert solution(\"1 4\\n2 5\\n3 6\\n7 8\\n\") == \"1 2\\n2 1\\n1 2\\n\"\nassert solution(\"1 4\\n2 5\\n3 6\\n7 8\\n9 10\") == \"1 2\\n2 1\\n1 2\\n\"\nassert solution(\"1 4\\n2 5\\n3 6\\n7 8\\n9 10\\n\") == \"1 2\\n2 1\\n1 2\\n\"\nassert solution(\"1 4\\n2 5\\n3 6\\n7 8\\n9 10\\n\") == \"1 2\\n2 1\\n1 2\\n\""
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('Input\\n3\\n1 4\\n2 5\\n3 6') == ['1 2', '2 1', '1 2']\nassert solution('Input\\n5\\n1 3\\n2 4\\n3 5\\n4 6\\n5 7') == ['1 2', '2 1', '1 2', '1 1', '2 1']\nassert solution('Input\\n3\\n1 4\\n1 4\\n2 5') == []\nassert solution('Input\\n5\\n1 3\\n2 4\\n3 5\\n4 6\\n5 7\\n6 7\\n7 7') == ['1 2', '2 1', '1 2', '1 1', '2 1']\nprint('All test cases passed!')"
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 4\\n2 5\\n3 6\") == '1 2\\n2 1\\n1 2'\nassert solution(\"1 1\\n2 2\\n3 3\") == '1 1\\n2 2\\n3 3'\nassert solution(\"1 2\\n2 2\\n3 3\") == '1 1\\n2 2\\n3 3'\nassert solution(\"1 3\\n2 3\\n3 3\") == '1 1\\n2 1\\n3 2'\nassert solution(\"1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\") == '-1'\n"
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, \"Test case failed. Expected output: {}, got output: {}\".format(output, solution(input()))"
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin='3\\n1 4\\n2 5\\n3 6') == '-1'\nassert solution(stdin='3\\n1 4\\n2 5\\n3 6\\n') == '-1'\nassert solution(stdin='3\\n1 4\\n2 5\\n3 6\\n1 1') == '1 2'\nassert solution(stdin='3\\n1 4\\n2 5\\n3 6\\n1 2') == '2 1'\nassert solution(stdin='3\\n1 4\\n2 5\\n3 6\\n2 2') == '2 1'"
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 4\\n2 5\\n3 6\") == \"1 2\\n2 1\\n1 2\\n\"\nassert solution(\"4\\n1 4\\n2 5\\n3 6\") == \"1 2\\n2 1\\n1 2\\n\"\nassert solution(\"1\\n1 4\\n2 5\\n3 6\") == \"1 2\\n2 1\\n1 2\\n\"\nassert solution(\"5\\n1 4\\n2 5\\n3 6\") == \"1 2\\n2 1\\n1 2\\n\"\nassert solution(\"4\\n1 4\\n2 5\\n3 6\") == \"1 2\\n2 1\\n1 2\\n\"\nassert solution(\"1\\n1 4\\n2 5\\n3 6\") == \"1 2\\n2 1\\n1 2\\n\"\nassert solution(\"5\\n1 4\\n2 5\\n3 6\") == \"1 2\\n2 1\\n1 2\\n\"\nassert solution(\"4\\n1 4\\n2 5\\n3 6\") == \"1 2\\n2 1\\n1 2\\n\"\nassert solution(\"1\\n1 4\\n2 5\\n3 6\") == \"1 2\\n2 1\\n1 2\\n\""
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == 1\nassert solution(2) == 2\nassert solution(3) == 2\nassert solution(8) == 4"
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2 1\"\nassert solution(\"8\") == \"4\""
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n\") == \"1\\n\"\nassert solution(\"2\\n\") == \"2\\n\"\nassert solution(\"3\\n\") == \"2 1\\n\"\nassert solution(\"8\\n\") == \"4\\n\""
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '2', \"Expected output: 2\"\nassert solution() == '2 1', \"Expected output: 2 1\"\nassert solution() == '4', \"Expected output: 4\""
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2 1\"\nassert solution(\"8\") == \"4\""
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == [1]\nassert solution(2) == [1, 1]\nassert solution(3) == [2]\nassert solution(8) == [4]"
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2 1\"\nassert solution(\"8\") == \"4\""
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == [1]\nassert solution(2) == [1, 2]\nassert solution(3) == [1, 2, 1]\nassert solution(8) == [1, 2, 2, 1, 3, 3, 1, 3, 2, 3, 2, 1, 4]"
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2 1\"\n\nassert solution(input()) == \"2\"\n\nassert solution(input()) == \"2 1\"\n\nassert solution(input()) == \"4\""
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2 1\"\nassert solution(\"8\") == \"4\""
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\naabaac\") == \"2\\nab aca\"\nassert solution(\"8\\n0rTrT022\") == \"1\\n02TrrT20\"\nassert solution(\"2\\naA\") == \"2\\na A\""
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"Output: 1\\n02TrrT20\""
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\naabaac\") == \"2\\naba aca\"\nassert solution(\"8\\n0rTrT022\") == \"1\\n02TrrT20\"\nassert solution(\"2\\naA\") == \"2\\nA\""
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == output, f\"Expected: '{output}', Received: '{solution(stdin)}'\""
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\naabaac\") == \"2\\naba aca\"\nassert solution(\"8\\n0rTrT022\") == \"1\\n02TrrT20\"\nassert solution(\"2\\nA\") == \"2\\nA\""
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('aabaac') == '2\\naba aca', '1st test'\nassert solution('0rTrT022') == '1\\n02TrrT20', '2nd test'\nassert solution('aA') == '2\\nA A', '3rd test'"
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected_output, f\"Your function {solution} should return {expected_output}, but it returns {solution(stdin)}.\"\n"
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin: str) == \"2\\naba aca\\n\"\nassert solution(stdin: str) == \"1\\n02TrrT20\\n\"\nassert solution(stdin: str) == \"2\\nA\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected\nassert solution(input()) == expected\nassert solution(input()) == expected\nassert solution(input()) == expected\nassert solution(input()) == expected\nassert solution(input()) == expected"
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\naabaac\") == \"2\\naba aca\"\nassert solution(\"8\\n0rTrT022\") == \"1\\n02TrrT20\"\nassert solution(\"2\\nA\") == \"2\\nA\"\n\nfrom typing import List"
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\na**d\\n2\\abcd\\nacbd\\n\") == \"2\"\nassert solution(\"5\\nlo*er\\n2\\lover\\nloser\\n\") == \"0\"\nassert solution(\"3\\na*a\\n2\\aaa\\aba\\n\") == \"1\""
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"a**d\") == 2\nassert solution(\"abcd\") == 2\nassert solution(\"acbd\") == 0\nassert solution(\"lo*er\") == 0\nassert solution(\"a*a\") == 1"
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\na**d\\n2\\abcd\\nacbd\") == 2\nassert solution(\"5\\nlo*er\\n2\\lover\\nloser\") == 0\nassert solution(\"3\\na*a\\n2\\aaa\\aba\") == 1"
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\na**d\\n2\\abcd\\nacbd\\n\") == 2\nassert solution(\"5\\nlo*er\\n2\\lover\\nloser\\n\") == 0\nassert solution(\"3\\na*a\\n2\\aaa\\aba\\n\") == 1"
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\na**d\\n2\\abcd\\nacbd') == 2\nassert solution('5\\nlo*er\\n2\\lover\\nloser') == 0\nassert solution('3\\na*a\\n2\\aaa\\aba') == 1"
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\na**d\\n2\\abcd\\nacbd\\n') == '2'\nassert solution('5\\nlo*er\\n2\\lover\\nloser\\n') == '0'\nassert solution('3\\na*a\\n2\\aaa\\aba\\n') == '1'\n"
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"The expected output is {expected_output}, but the actual output is {solution(input())}\""
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"a**d\") == 2, \"Expected output: 2, actual output: {}\".format(solution(\"a**d\"))\nassert solution(\"abcd\") == 0, \"Expected output: 0, actual output: {}\".format(solution(\"abcd\"))\nassert solution(\"acbd\") == 2, \"Expected output: 2, actual output: {}\".format(solution(\"acbd\"))\nassert solution(\"lo*er\") == 0, \"Expected output: 0, actual output: {}\".format(solution(\"lo*er\"))\nassert solution(\"a*a\") == 1, \"Expected output: 1, actual output: {}\".format(solution(\"a*a\"))"
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\na**d\\n2\\abcd\\nacbd\\n') == '2'\nassert solution('5\\nlo*er\\n2\\lover\\nloser\\n') == '0'\nassert solution('3\\na*a\\n2\\aaa\\aba\\n') == '1'\n"
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\na**d\\n2\\abcd\\nacbd\\n\") == \"2\\n\"\nassert solution(\"5\\nlo*er\\n2\\lover\\nloser\\n\") == \"0\\n\"\nassert solution(\"3\\na*a\\n2\\aaa\\aba\\n\") == \"1\\n\""
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Test failed for input {input()}, expected output {expected}, got {solution(input())}\""
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"test.in\", \"r\").read()) == \"1\\n\"\nassert solution(open(\"test.in\", \"r\").read()) == \"2\\n\"\nassert solution(open(\"test.in\", \"r\").read()) == \"3\\n\""
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 1 1\\n1 0 0 0 4\") == \"1\\n\"\nassert solution(\"6 1 2\\n3 8 0 1 0 0\") == \"2\\n\""
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1\""
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 1 1\\n1 0 0 0 4\\n') == '1\\n'\nassert solution('6 1 2\\n3 8 0 1 0 0\\n') == '2\\n'"
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 1 1\\n1 0 0 0 4\") == \"1\"\nassert solution(\"6 1 2\\n3 8 0 1 0 0\") == \"2\"\n\nfrom typing import List"
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 1 1\\n1 0 0 0 4\\n') == '1\\n'\nassert solution('6 1 2\\n3 8 0 1 0 0\\n') == '2\\n'"
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 1 1\\n1 0 0 0 4\\n') == '1\\n'\nassert solution('6 1 2\\n3 8 0 1 0 0\\n') == '2\\n'\n"
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input) == output, f\"Test failed for input {input}, expected output {output}, got {solution(input)}\""
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 1 1\\n1 0 0 0 4\\n\") == \"1\"\nassert solution(\"6 1 2\\n3 8 0 1 0 0\\n\") == \"2\""
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"40\"\nassert solution(\"1 42\") == \"1\"\nassert solution(\"6 4\") == \"172\""
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=input()) == expected_output, f\"Test failed for input {stdin}, expected output {expected_output}\""
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == output, f\"Your solution is wrong. Please see the problem statement for the correct solution.\""
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"Palindromic tree is better than splay tree\"\n"
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1, 1) == 40\nassert solution(1, 42) == 1\nassert solution(6, 4) == 172"
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == \"Palindromic tree is better than splay tree\"\nassert solution(10) == 40\nassert solution(100) == 1\nassert solution(400) == 172"
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1, 1) == 40\nassert solution(1, 42) == 1\nassert solution(6, 4) == 172"
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1, 1) == 40\nassert solution(1, 42) == 1\nassert solution(6, 4) == 172"
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"Palindromic tree is better than splay tree\", \"The output should be 'Palindromic tree is better than splay tree'.\""
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"Palindromic tree is better than splay tree\"\n"
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected_output, f\"Expected {expected_output}, got {solution(stdin)}\""
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Test failed for input: {input()}, expected output: {output}\""
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '6'\nprint('All assertions passed.')"
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n2 1 4\") == \"5\\n\"\nassert solution(\"4\\n3 1 4 4\") == \"6\\n\"\nassert solution(\"4\\n3 1 4 1\") == \"6\\n\"\nassert solution(\"5\\n3 1 4 1 5\") == \"11\\n\""
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"6\", \"Expected 6, got: {}\".format(solution(stdin))\n"
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected, f\"Got '{solution(stdin)}', expected '{expected}'\""
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '5', \"The output should be '5', but it is '{}'.\".format(solution())"
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n2 1 4\\n\") == \"5\\n\"\nassert solution(\"4\\n3 1 4 4\\n\") == \"6\\n\"\nassert solution(\"4\\n3 1 4 1\\n\") == \"6\\n\"\nassert solution(\"5\\n3 1 4 1 5\\n\") == \"11\\n\""
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 6, \"The solution is incorrect.\""
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1 4\") == \"5\"\nassert solution(\"4 3 1 4 4\") == \"6\"\nassert solution(\"4 3 1 4 1\") == \"6\"\nassert solution(\"5 3 1 4 1 5\") == \"11\""
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '1\\n', 'Test failed'\n"
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1\", \"The output should be '1', not '{}'.\".format(solution())"
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 0 0 -1\\n2\\n1 -1\\n\") == \"1\\n\""
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1\""
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1\", \"Incorrect output. Please check the given code and the given problem statement.\""
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1\"\n\nprint(\"Success!\")"
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"1\", \"The value of min_{i} \u2260 j\u00a0\u00a0f(i, j) should be 1\"\n"
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('Input\\n4\\n1 0 0 -1\\n\\nInput\\n2\\n1 -1\\n\\nOutput\\n1\\n\\nInput\\n2\\n1 -1\\n\\nOutput\\n2') == '1\\n\\n2'"
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1\\n\", \"Output: 1\\n\"\nassert solution(stdin) == \"2\\n\", \"Output: 2\\n\"\n"
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin: str) == '1', \"Expected output: 1, but got: {}\".format(solution(stdin: str))"
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 0 0\\n1 2\\n2 3\") == \"2\\n\"\nassert solution(\"2 1 0\\n1 2\\n2 2\") == \"0\\n\"\nassert solution(\"2 5 7\\n3 4\\n14 4\") == \"1\\n\""
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 0 0\\n1 2\\n2 3\") == \"2\"\nassert solution(\"2 1 0\\n1 2\\n2 2\") == \"0\"\nassert solution(\"2 5 7\\n3 4\\n14 4\") == \"1\""
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 0 0\\n1 2\\n2 3\") == \"2\"\nassert solution(\"2 1 0\\n1 2\\n2 2\") == \"0\"\nassert solution(\"2 5 7\\n3 4\\n14 4\") == \"1\""
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n2 0 0\n1 2\n2 3\n''') == '2\\n'\nassert solution('''\n2 1 0\n1 2\n2 2\n''') == '0\\n'\nassert solution('''\n2 5 7\n3 4\n14 4\n''') == '1\\n'"
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 0 0\\n1 2\\n2 3\\n\") == \"2\\n\"\nassert solution(\"2 1 0\\n1 2\\n2 2\\n\") == \"0\\n\"\nassert solution(\"2 5 7\\n3 4\\n14 4\\n\") == \"1\\n\"\n"
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 0 0\\n1 2\\n2 3\\n\") == \"2\\n\"\nassert solution(\"2 1 0\\n1 2\\n2 2\\n\") == \"0\\n\"\nassert solution(\"2 5 7\\n3 4\\n14 4\\n\") == \"1\\n\""
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n2 0 0\n1 2\n2 3\n''') == '2\\n'\n\nassert solution('''\n2 1 0\n1 2\n2 2\n''') == '0\\n'\n\nassert solution('''\n2 5 7\n3 4\n14 4\n''') == '1\\n'"
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 0 0\\n1 2\\n2 3\") == \"2\\n\"\nassert solution(\"2 1 0\\n1 2\\n2 2\") == \"0\\n\"\nassert solution(\"2 5 7\\n3 4\\n14 4\") == \"1\\n\""
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 0 0\\n1 2\\n2 3\\n\") == \"2\\n\"\nassert solution(\"2 1 0\\n1 2\\n2 2\\n\") == \"0\\n\"\nassert solution(\"2 5 7\\n3 4\\n14 4\\n\") == \"1\\n\""
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"6\\n\""
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\\n\"\n"
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 2\\n01001\\n2 4\\n3 5') == '6'"
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\\n\"\nassert solution(\"5 1\\n01001\") == \"10\\n\"\nassert solution(\"5 3\\n01001\\n00101\\n00011\\n00101\\n00110\\n00011\\n00101\\n01010\\n01001\\n01100\\n01010\\n01001\\n00011\\n00101\\n00110\\n00011\\n00101\\n01010\\n01001\\n01100\\n01010\\n01001\\n00011\\n00101\\n00110\\n00011\\n00101\\n01010\\n01001\\n01100\\n01010\\n01001\\n00011\\n00101\\n00110\\n00011\\n00101\\n01010\\n01001\\n01100\\n01010\\n01001\\n00011\\n00101\\n00110\\n00011\\n00101\\n01010\\n01001\\n01100\\n01010\\n01001\\n00011\\n00101\\n00110\\n00011\\n00101\\n01010\\n01001\\n01100\\n01010\\n01001\\n00011\\n00101\\n00110\\n00011\\n00101\\n01010\\n01001\\n01100\\n01010\\n01001\\n00011\\n00101\\n00110\\n00011\\n00101\\n01010\\n01001\\n01100\\n01010\\n01001\\n00011\\n00101\\n00110\\n00011\\n00101\\n01010\\n01001\\n01100\\n01010\\n01001\\n00011\\n00101\\n00110\\n00011\\n00101\\n01010\\n01001\\n01100\\n01010\\n01001\\n00011\\n00101\\n00110\\n00011\\n00101\\n01010\\n01001\\n01100\\n01010\\n01001\\n00011\\n00101\\n00110\\n00011\\n00101\\n01010\\n01001\\n01100\\n01010\\n01001\\n00011\\n00101\\n00110\\n00011\\n00101\\n01010\\n01001\\n01100\\n01010\\n01001\\n00011\\n00101\\n00110\\n00011\\n00101\\n01010\\"
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_str) == output_str, \"Test Failed\"\nfor i in range(N):\n    for j in range(i, N):\n        s = S[i:j+1]\n        # Perform M operations to obtain S\n        pass\nprint(num)"
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\\n\") == \"6\\n\"\nassert solution(\"1000000000 1\\n00001\\n00010\\n1000000000\\n\") == \"123456789\\n\"\nassert solution(\"1000000000 1\\n00001\\n00010\\n1000000000\\n\") == \"123456789\\n\"\nassert solution(\"1000000000 2\\n01011\\n10100\\n01010\\n01001\\n\") == \"123456789\\n\"\nassert solution(\"1000000000 1\\n00001\\n00010\\n1000000000\\n\") == \"123456789\\n\"\nassert solution(\"1000000000 1\\n00001\\n00010\\n1000000000\\n\") == \"123456789\\n\"\n"
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 2\\n01001\\n2 4\\n3 5\\n') == '6\\n'\nassert solution('5 2\\n01001\\n2 4\\n3 5\\n01100\\n01010\\n01001\\n00011\\n00101\\n00110\\n') == '6\\n'\nassert solution('5 2\\n01001\\n2 4\\n3 5\\n') == '6\\n'\nassert solution('5 2\\n01001\\n2 4\\n3 5\\n01100\\n01010\\n01001\\n00011\\n00101\\n00110\\n') == '6\\n'\nassert solution('5 2\\n01001\\n2 4\\n3 5\\n') == '6\\n'"
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\\n\") == \"6\\n\"\nassert solution(\"5 2\\n01001\\n2 4\\n3 5\\n\") == \"6\\n\""
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n5 2\n01001\n2 4\n3 5\n\"\"\") == \"6\\n\""
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 1 1 1 1 1') == 6\nassert solution('1 2 1 2 1 2') == 13"
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1 1 1 1 1\") == \"6\"\nassert solution(\"1 2 1 2 1 2\") == \"13\"\n"
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"6\\n\"\n"
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"6\"\nassert solution(input()) == \"13\""
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1 1 1 1 1\") == 6\nassert solution(\"1 2 1 2 1 2\") == 13\n\nassert solution(\"3 3 3 3 3 3\") == 3\n\nassert solution(\"1 1 1 1 1 2\") == 6\n\nassert solution(\"2 1 2 1 2 2\") == 12\n\nassert solution(\"2 2 2 2 2 2\") == 13\n\nassert solution(\"3 1 3 1 3 3\") == 3\n\nassert solution(\"4 1 4 1 4 4\") == 4\n\nassert solution(\"2 2 2 2 2 3\") == 13\n\nassert solution(\"2 1 2 1 3 3\") == 12\n\nassert solution(\"1 1 1 1 1 1\") == 6"
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 1 1 1 1 1') == '6'\nassert solution('1 2 1 2 1 2') == '13'"
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"6\\n\"\n"
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(str(input())) == '6\\n'"
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1 1 1 1 1\") == 6\nassert solution(\"1 2 1 2 1 2\") == 13"
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output() # check if the solution is correct\nelse:\n    print(\"Test Failed\")"
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n2 3 4 6 9\") == \"4\\n\"\nassert solution(\"9\\n1 2 3 5 6 7 8 9 10\") == \"4\\n\""
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"4\"\n"
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2 3 4 6 9\") == \"4\\n\"\nassert solution(\"9\\n1 2 3 5 6 7 8 9 10\") == \"4\\n\""
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n5\n2 3 4 6 9\n''') == '4'\n\nassert solution('''\n9\n1 2 3 5 6 7 8 9 10\n''') == '4'"
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n2 3 4 6 9\") == \"4\\n\"\nassert solution(\"9\\n1 2 3 5 6 7 8 9 10\") == \"4\\n\""
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n2 3 4 6 9\") == \"4\\n\"\nassert solution(\"9\\n1 2 3 5 6 7 8 9 10\") == \"4\\n\""
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Output\"\n"
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2 3 4 6 9\\n\") == \"4\"\nassert solution(\"9\\n1 2 3 5 6 7 8 9 10\\n\") == \"4\""
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2 3 4 6 9\") == \"4\\n\"\nassert solution(\"9\\n1 2 3 5 6 7 8 9 10\") == \"4\\n\""
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"DONE\""
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n2\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\"\nassert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\"\n\nassert solution(\"1\\n2\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\"\nassert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\"\n\nassert solution(\"1\\n2\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\"\nassert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\"\n\nassert solution(\"1\\n2\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\"\nassert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\"\n\nassert solution(\"1\\n2\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\"\nassert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\"\n\nassert solution(\"1\\n2\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\"\nassert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\"\n\nassert solution(\"1\\n2\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\"\nassert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\"\n\nassert solution(\"1\\n2\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\"\nassert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\"\n\nassert solution(\"1\\n2\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\"\nassert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\"\n\nassert solution(\"1\\n2\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\")"
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"SURGERY COMPLETE\"\n"
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 'SURGERY COMPLETE'\nassert solution(4) == 'SURGERY COMPLETE'\nassert solution(5) == 'SURGERY COMPLETE'\nassert solution(6) == 'SURGERY COMPLETE'\nassert solution(7) == 'SURGERY COMPLETE'\nassert solution(8) == 'SURGERY COMPLETE'\nassert solution(9) == 'SURGERY COMPLETE'\nassert solution(10) == 'SURGERY COMPLETE'\nassert solution(11) == 'SURGERY COMPLETE'\nassert solution(12) == 'SURGERY COMPLETE'\nassert solution(13) == 'SURGERY COMPLETE'\nassert solution(14) == 'SURGERY COMPLETE'\nassert solution(15) == 'SURGERY COMPLETE'\nassert solution(16) == 'SURGERY COMPLETE'\nassert solution(17) == 'SURGERY COMPLETE'\nassert solution(18) == 'SURGERY COMPLETE'\nassert solution(19) == 'SURGERY COMPLETE'\nassert solution(20) == 'SURGERY COMPLETE'\nassert solution(21) == 'SURGERY COMPLETE'\nassert solution(22) == 'SURGERY COMPLETE'\nassert solution(23) == 'SURGERY COMPLETE'\nassert solution(24) == 'SURGERY COMPLETE'\nassert solution(25) == 'SURGERY COMPLETE'\nassert solution(26) == 'SURGERY COMPLETE'\nassert solution(27) == 'SURGERY COMPLETE'\nassert solution(28) == 'SURGERY COMPLETE'\nassert solution(29) == 'SURGERY COMPLETE'\nassert solution(30) == 'SURGERY COMPLETE'\nassert solution(31) == 'SURGERY COMPLETE'\nassert solution(32) == 'SURGERY COMPLETE'\nassert solution(33) == 'SURGERY COMPLETE'\nassert solution(34) == 'SURGERY COMPLETE'\nassert solution(35) == 'SURGERY COMPLETE'\nassert solution(36) == 'SURGERY COMPLETE'\nassert solution(37) == 'SURGERY COMPLETE'\nassert solution(38) == 'SURGERY COMPLETE'\nassert solution(39) == 'SURGERY COMPLETE'\nassert solution(40) == 'SURGERY COMPLETE'\nassert solution(41) == 'SURGERY COMPLETE'\nassert solution(42) == 'SURGERY COMPLETE'\nassert solution(43) == 'SURGERY COMPLETE'\nassert solution(44) == 'SURGERY COMPLETE'\nassert solution(45) == 'SURGERY COMPLETE'\nassert solution(46) == 'SURGERY COMPLETE'\nassert solution(47) == 'SURGERY COMPLETE'\nassert solution(48) == 'SURGERY COMPLETE'\nassert solution(49) == 'SURGERY COMPLETE'\nassert solution(50) == 'SURGERY COMPLETE'\nassert solution(51) == 'SURGERY COMPLETE'\nassert solution(52) == 'SURGERY COMPLETE'\nassert solution(53) == 'SURGERY COMPLETE'\nassert solution(54) == 'SURGERY COMPLETE'\nassert solution(55) == 'SURGERY COMPLETE'\nassert solution(56) == 'SURGERY COMPLETE'\nassert solution(57) == 'SURGERY COMPLETE'\nassert solution(58) == 'SURGERY COMPLETE'\nassert solution(59) == 'SURGERY COMPLETE'\nassert solution(60) == 'SURGERY COMPLETE'\nassert solution(61) == 'SURGERY COMPLETE'\nassert solution(62) == 'SURGERY COMPLETE'\nassert solution(63) == 'SURGERY COMPLETE'\nassert solution(64) == 'SURGERY COMPLETE'\nassert solution(65) == 'SURGERY COMPLETE'\nassert solution(66) == 'SURGERY COMPLETE'\nassert solution(67) == 'SURGERY COMPLETE'\nassert solution(68) == 'SURGERY COMPLETE'\nassert solution(69) == 'SURGERY COMPLETE'\nassert solution(70) == 'SURGERY COMPLETE'\nassert solution(71) == 'SURGERY COMPLETE"
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n\") == \"SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED\\n\"\nassert solution(\"3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n\") == \"SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED\\n\"\nassert solution(\"1\\n2 3 4 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n\") == \"SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED\\n\"\nassert solution(\"3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n\") == \"SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED\\n\""
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n\") == \"SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED\\n\""
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n\") == \"SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED\"\n\nassert solution(\"4\\n1\\nE\\n2 3 4 5 E 6\\n7\\n8 9 E 10 11 12 13\\n14 15 16 17 18 19\\n\") == \"SURGERY COMPLETE\\nI\\nE\\nS rr\\nT urr\\nDONE\\nSURGERY FAILED\"\n\nassert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n\") == \"SURGERY COMPLETE\\nI\\nR SrS\\nS rr\\nDONE\\nSURGERY FAILED\"\n\nassert solution(\"4\\n1\\nE\\n2 3 4 5 E 6\\n7\\n8 9 E 10 11 12 13\\n14 15 16 17 18 19\\n\") == \"SURGERY COMPLETE\\nI\\nE\\nS rr\\nT urr\\nDONE\\nSURGERY FAILED\"\n\nassert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n\") == \"SURGERY COMPLETE\\nI\\nR SrS\\nS rr\\nDONE\\nSURGERY FAILED\"\n\nassert solution(\"4\\n1\\nE\\n2 3 4 5 E 6\\n7\\n8 9 E 10 11 12 13\\n14 15 16 17 18 19\\n\") == \"SURGERY COMPLETE\\nI\\nE\\nS rr\\nT urr\\nDONE\\nSURGERY FAILED\""
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r')) == \"SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED\\n\""
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output\nprint(\"DONE\")"
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"9 2 5\") == \"6 5 8 3 4 1 9 2 7\"\nassert solution(\"3 2 1\") == \"1 2 3 \""
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"9 2 5\") == \"6 5 8 3 4 1 9 2 7\"\nassert solution(\"3 2 1\") == \"1 2 3 \""
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"9 2 5\") == \"6 5 8 3 4 1 9 2 7\"\nassert solution(\"3 2 1\") == \"1 2 3\"\n"
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"9 2 5\") == \"6 5 8 3 4 1 9 2 7\", \"The output should be '6 5 8 3 4 1 9 2 7', but it's actually '\"+solution(\"9 2 5\")+\"'.\"\n\nassert solution(\"3 2 1\") == \"1 2 3\", \"The output should be '1 2 3', but it's actually '\"+solution(\"3 2 1\")+\"'.\""
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"9 2 5\\n3 2 1\") == \"6 5 8 3 4 1 9 2 7\\n\"\nassert solution(\"3 2 1\") == \"1 2 3\\n\""
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"9 2 5\") == \"6 5 8 3 4 1 9 2 7\", \"Incorrect Output for 9 2 5\"\nassert solution(\"3 2 1\") == \"1 2 3\", \"Incorrect Output for 3 2 1\""
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"9 2 5\") == \"6 5 8 3 4 1 9 2 7\", \"The output is incorrect.\"\nassert solution(\"3 2 1\") == \"1 2 3\", \"The output is incorrect.\""
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"9 2 5\\n3 2 1\\n\") == \"6 5 8 3 4 1 9 2 7\"\nassert solution(\"9 2 5\\n9 2 5\\n\") == -1"
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2 1\") == \"1 2 3\"\nassert solution(\"9 2 5\") == \"6 5 8 3 4 1 9 2 7\"\nassert solution(\"10 2 5\") == -1"
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3, 2, 1) == [1, 2, 3]\nassert solution(9, 2, 5) == [6, 5, 8, 3, 4, 1, 9, 2, 7]"
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n3 2 1\\n\") == \"3\\n\"\nassert solution(\"5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000\\n\") == \"5000000000\\n\"\nassert solution(\"3 2\\n1 0 1\\n\") == \"2\\n\"\nassert solution(\"4 4\\n2 8 4 1\\n\") == \"4\\n\""
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3, 2) == 3\nassert solution(5, 1) == 5000000000\nassert solution(3, 2) == 2\nassert solution(4, 4) == 4"
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\\n3 2 1\") == \"3\\n\"\nassert solution(\"5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000\") == \"5000000000\\n\"\nassert solution(\"3 2\\n1 0 1\") == \"2\\n\"\nassert solution(\"4 4\\n2 8 4 1\") == \"4\\n\""
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2\\n3 2 1\\n\") == \"3\"\nassert solution(\"5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000\\n\") == \"5000000000\"\nassert solution(\"3 2\\n1 0 1\\n\") == \"2\"\nassert solution(\"4 4\\n2 8 4 1\\n\") == \"4\""
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2\\n3 2 1\") == \"3\\n\"\nassert solution(\"5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000\") == \"5000000000\\n\"\nassert solution(\"3 2\\n1 0 1\") == \"2\\n\"\nassert solution(\"4 4\\n2 8 4 1\") == \"4\\n\""
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2\\n3 2 1\") == \"3\"\nassert solution(\"5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000\") == \"5000000000\"\nassert solution(\"3 2\\n1 0 1\") == \"2\"\nassert solution(\"4 4\\n2 8 4 1\") == \"4\""
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\\n3 2 1\") == \"3\\n\"\nassert solution(\"5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000\") == \"5000000000\\n\"\nassert solution(\"3 2\\n1 0 1\") == \"2\\n\"\nassert solution(\"4 4\\n2 8 4 1\") == \"4\\n\""
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\n3 2 1\\n\") == \"3\"\nassert solution(\"5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000\\n\") == \"5000000000\"\nassert solution(\"3 2\\n1 0 1\\n\") == \"2\"\nassert solution(\"4 4\\n2 8 4 1\\n\") == \"4\""
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\\n3 2 1\") == \"3\\n\"\nassert solution(\"5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000\") == \"5000000000\\n\"\nassert solution(\"3 2\\n1 0 1\") == \"2\\n\"\nassert solution(\"4 4\\n2 8 4 1\") == \"4\\n\""
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\\n3 2 1\\n\") == \"3\\n\"\nassert solution(\"5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000\\n\") == \"5000000000\\n\"\nassert solution(\"3 2\\n1 0 1\\n\") == \"2\\n\"\nassert solution(\"4 4\\n2 8 4 1\\n\") == \"4\\n\""
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"bwwwbwwbw\") == 5, \"Expected 5, got {}\".format(solution(\"bwwwbwwbw\"))\nassert solution(\"bwwbwwb\") == 3, \"Expected 3, got {}\".format(solution(\"bwwbwwb\"))"
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"bwwwbwwbw\") == 5, \"expected output: 5, but got: {}\".format(solution(\"bwwwbwwbw\"))\n\nassert solution(\"bwwbwwb\") == 3, \"expected output: 3, but got: {}\".format(solution(\"bwwbwwb\"))"
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"bwwwbwwbw\") == 5\nassert solution(\"bwwbwwb\") == 3"
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"bwwwbwwbw\") == 5, \"First test failed\"\nassert solution(\"bwwbwwb\") == 3, \"Second test failed\""
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"bwwwbwwbw\") == 5, \"The solution should be 5.\"\nassert solution(\"bwwbwwb\") == 3, \"The solution should be 3.\""
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('bwwwbwwbw') == 5\nassert solution('bwwbwwb') == 3"
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"bwwwbwwbw\") == \"5\"\nassert solution(\"bwwbwwb\") == \"3\""
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"bwwwbwwbw\") == 5\nassert solution(\"bwwbwwb\") == 3"
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Test case {i+1} failed: got {solution(input())} expected {expected}\""
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"bwwwbwwbw\") == \"5\"\nassert solution(\"bwwbwwb\") == \"3\""
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"10\", \"Test failed\" # correct solution"
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5\\n3 2\\n1 2\\n....\\n.***. \\n...**\\n*....\\n\") == \"10\"\nassert solution(\"4 4\\n2 2\\n0 1\\n....\\n..*. \\n....\\n....\\n\") == \"7\""
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Input\\n4 5\\n3 2\\n1 2\\n.....\\n.***. \\n...**\\n*....\\n\\nOutput\\n10\\n\\nInput\\n4 4\\n2 2\\n0 1\\n....\\n..*.\\n....\\n....\\n\\nOutput\\n7\") == \"10\\n7\"\nassert solution(\"Input\\n4 5\\n3 2\\n1 2\\n.....\\n.***. \\n...**\\n*....\\n\\nOutput\\n10\\n\\nInput\\n4 4\\n2 2\\n0 1\\n....\\n..*.\\n....\\n....\\n\\nOutput\\n7\") == \"10\\n7\"\nassert solution(\"Input\\n4 5\\n3 2\\n1 2\\n.....\\n.***. \\n...**\\n*....\\n\\nOutput\\n10\\n\\nInput\\n4 4\\n2 2\\n0 1\\n....\\n..*.\\n....\\n....\\n\\nOutput\\n7\") == \"10\\n7\"\nassert solution(\"Input\\n4 5\\n3 2\\n1 2\\n.....\\n.***. \\n...**\\n*....\\n\\nOutput\\n10\\n\\nInput\\n4 4\\n2 2\\n0 1\\n....\\n..*.\\n....\\n....\\n\\nOutput\\n7\") == \"10\\n7\""
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 10"
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    '''\n    4 5\n    3 2\n    1 2\n   .***.\n   ...**\n    *....\n    '''\n) == '10\\n'\n\nassert solution(\n    '''\n    4 4\n    2 2\n    0 1\n   .***.\n   ...**\n   ...**\n    '''\n) == '7\\n'"
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('Input') == 'Output'"
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_data) == output_data, f\"Test {test_num} failed. Expected: {output_data}, Received: {solution(input_data)}\""
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5\\n3 2\\n1 2\\n.....\\n.***.\\n...**\\n*....\\n\") == 10\nassert solution(\"4 4\\n2 2\\n0 1\\n....\\n..*.\\n....\\n....\\n\") == 7"
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 10, \"The given solution is incorrect.\""
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Input\\n4\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\"
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(solution) == \"pass\" # Correct"
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2\"\n\nassert solution(input()) == \"2\"\n\nassert solution(input()) == \"2\"\n\nassert solution(input()) == \"2\"\n\nassert solution(input()) == \"2\""
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 4 2 2\\n\") == \"2\\n\"\nassert solution(\"6 1 2 4 4 9\\n\") == \"2\\n\""
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 4 2 2\\n\") == \"2\\n\"\nassert solution(\"6\\n1 2 4 4 4 9\\n\") == \"2\\n\""
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2\"\n\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"2\"\nassert solution(open(\"example1.txt\", \"r\")) == \"2\"\nassert solution(open(\"example2.txt\", \"r\")) == \"2\""
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n1 4 2 2\\n6\\n1 2 4 4 4 9\\n') == '2'\nassert solution('6\\n1 2 4 4 4 9\\n') == '2'\n\nprint(\"All test cases pass\")"
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 4 2 2\\n6\\n1 2 4 4 4 9\\n\") == \"2\"\nassert solution(\"4\\n1 4 2 2\\n6\\n1 2 4 4 4 9\\n\") == \"2\""
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"aba\") == \"7\"\nassert solution(\"abcd\") == \"4\"\nassert solution(\"aaaa\") == \"12\""
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output() for input, output in [\n    ([3, 3, 1], 7),\n    ([4, 1, 1], 4),\n    ([4, 10, 1], 12),\n]\n"
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Test case failed\""
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3 1\\naba\") == \"7\\n\"\nassert solution(\"4 1 1\\nabcd\") == \"4\\n\"\nassert solution(\"4 10 1\\naaaa\") == \"12\\n\"\n"
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('aba') == 7\nassert solution('abcd') == 4\nassert solution('aaaa') == 12"
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"aba\") == \"7\"\nassert solution(\"abcd\") == \"4\"\nassert solution(\"aaaa\") == \"12\"\n"
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"aba\") == 7\nassert solution(\"abcd\") == 4\nassert solution(\"aaaa\") == 12\n\nfrom typing import List"
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('aba') == 7\nassert solution('abcd') == 4\nassert solution('aaaa') == 12"
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Test failed. Got: {solution(input())}, expected: {output()}\""
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\""
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1\", \"Incorrect output\"\n"
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1\") == \"1\\n\"\nassert solution(\"1 2\") == \"1\\n\"\nassert solution(\"2 2\") == \"1\\n\"\nassert solution(\"10 3\") == \"1\\n\"\nassert solution(\"1 5\") == \"2\\n\"\nassert solution(\"5 5\") == \"1\\n\"\nassert solution(\"2 6\") == \"1\\n\"\nassert solution(\"5 7\") == \"2\\n\""
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1\") == \"1\"\n"
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"5 2\") == \"2\"\nassert solution(\"6 4\") == \"2\"\nassert solution(\"7 6\") == \"4\"\nassert solution(\"8 4\") == \"4\""
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1\") == \"1\\n\", \"Invalid output\"\nassert solution(\"2 3\") == \"1\\n2\\n\", \"Invalid output\"\nassert solution(\"4 1\") == \"1\\n\", \"Invalid output\"\nassert solution(\"5 1\") == \"1\\n\", \"Invalid output\"\nassert solution(\"5 4\") == \"1\\n2\\n3\\n4\\n\", \"Invalid output\""
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 1') == '1', \"The correct answer is '1', but got '{}'.\".format(solution('2 1'))"
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1\\n\") == \"1\\n\"\nassert solution(\"1 1\\n\") == \"1\\n\"\nassert solution(\"1 2\\n\") == \"2\\n\"\nassert solution(\"2 2\\n\") == \"2\\n\"\nassert solution(\"2 3\\n\") == \"3\\n\"\nassert solution(\"2 4\\n\") == \"1\\n\"\nassert solution(\"3 4\\n\") == \"4\\n\"\nassert solution(\"3 2\\n\") == \"3\\n\"\nassert solution(\"4 3\\n\") == \"2\\n\"\nassert solution(\"4 1\\n\") == \"1\\n\""
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '1', \"Error in solution\""
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '1'\n"
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_data) == expected_output, f\"Solution {solution} is not correct\""
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\n2 2 2 2\\n\") == \"8\"\nassert solution(\"4 -3\\n3 -6 -3 12\\n\") == \"3\""
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\n2 2 2 2\") == 8\nassert solution(\"4 -3\\n3 -6 -3 12\") == 3"
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Output\\n8\\n\""
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n2 2 2 2\\n\") == \"8\"\nassert solution(\"4 -3\\n3 -6 -3 12\\n\") == \"3\""
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\n2 2 2 2\") == \"8\"\nassert solution(\"4 -3\\n3 -6 -3 12\") == \"3\"\nassert solution(\"5 1\\n1 2 3 4 5\") == \"0\"\nassert solution(\"1 2\\n2 1 2\") == \"2\"\nassert solution(\"1 1\\n1 1 1\") == \"1\"\n"
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n2 2 2 2\\n\") == \"8\\n\"\n\nassert solution(\"4 -3\\n3 -6 -3 12\\n\") == \"3\\n\""
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_str) == output_str, f\"Input {input_str} should give output {output_str}\""
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 2\\n2 2 2 2') == '8'\nassert solution('4 -3\\n3 -6 -3 12') == '3'"
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Output: 8\\n\"\nassert solution(input()) == \"Output: 3\\n\"\nassert solution(input()) == \"Output: 2\\n\"\n"
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"11\", \"The output should be 11, but got {}\".format(solution(input()))"
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 5 3 1 8\\nBerBank University\\nUniversity BerMall\\nUniversity BerBank\") == \"11\"\nassert solution(\"4 2 1 300 1000\\na A\\nA aa\\naa AA\\nA a\") == \"5\"\n"
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5 3 1 8\\nBerBank University\\nUniversity BerMall\\nUniversity BerBank\") == \"11\\n\"\nassert solution(\"4 2 1 300 1000\\nA A\\nA aa\\nAA a\\nA a\") == \"5\\n\"\nassert solution(\"2 3 1 20 1000\") == \"6000\\n\""
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5 3 1 8\\nBerBank University\\nUniversity BerMall\\nUniversity BerBank\") == \"11\"\nassert solution(\"4 2 1 300 1000\\nA A\\nA aa\\naa AA\\nA AA\") == \"5\""
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"11\\n\", \"Test Case 1 Failed\"\n\nassert solution() == \"5\\n\", \"Test Case 2 Failed\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 5 3 1 8\\nBerBank University\\nUniversity BerMall\\nUniversity BerBank\") == \"11\"\nassert solution(\"4 2 1 300 1000\\na A\\nA aa\\na a\") == \"5\""
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_1) == expected_1\nassert solution(input_2) == expected_2\nassert solution(input_3) == expected_3\nassert solution(input_4) == expected_4\nassert solution(input_5) == expected_5"
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 5 3 1 8\\nBerBank University\\nUniversity BerMall\\nUniversity BerBank\") == \"11\"\nassert solution(\"4 2 1 300 1000\\na A\\nA aa\\naa AA\\nAA a\") == \"5\""
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 5 3 1 8\\nBerBank University\\nUniversity BerMall\\nUniversity BerBank\") == \"11\"\nassert solution(\"4 2 1 300 1000\\na A\\nA aa\\naa AA\\nA a\") == \"5\""
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 5 3 1 8\\nBerBank University\\nUniversity BerMall\\nUniversity BerBank\") == \"11\"\n\nassert solution(\"4 2 1 300 1000\\nA A\\nA aa\\nAaa A\\nAaa Aa\") == \"5\""
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"YES\", \"Expected YES, but got: \" + solution(input())\nassert solution(input()) == \"NO\", \"Expected NO, but got: \" + solution(input())"
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1 1 4\") == \"YES\"\nassert solution(\"5 1 1 2 1\") == \"NO\""
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('Input') == 'YES', \"Expected 'YES', but got '{}' instead.\".format(solution('Input'))\nassert solution('Input\\nInput') == 'NO', \"Expected 'NO', but got '{}' instead.\".format(solution('Input\\nInput'))\n"
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 1 1 4\") == \"YES\"\nassert solution(\"5\\n1 1 5 2 1\") == \"NO\""
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 1 1 4\") == \"YES\"\nassert solution(\"5\\n1 1 5 2 1\") == \"NO\""
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 1 1 4\") == \"YES\", \"Output: NO\"\nassert solution(\"5\\n1 1 5 2 1\") == \"NO\", \"Output: NO\""
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 1 1 4\\n\") == \"YES\\n\"\nassert solution(\"5\\n1 1 5 2 1\\n\") == \"NO\\n\"\n"
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Test failed for {input()}, expected {output}\""
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n1 1 1 4\\n') == 'YES\\n'\nassert solution('5\\n1 1 5 2 1\\n') == 'NO\\n'"
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r')) == 'YES'\nassert solution(open('input2.txt', 'r')) == 'NO'\n"
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n10 5 0 -5 -10\") == \"-15\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"1\\n\"\nassert solution(\"3\\n5 1 -5\") == \"-5\\n\"\nassert solution(\"2\\n900 1000\") == \"1100\\n\""
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n10 5 0 -5 -10\") == \"-15\"\nassert solution(\"4\\n1 1 1 1\") == \"1\"\nassert solution(\"3\\n5 1 -5\") == \"-5\"\nassert solution(\"2\\n900 1000\") == \"1100\""
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == 'Output', 'Please, fill in the solution.'"
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n10 5 0 -5 -10\") == \"-15\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"1\\n\"\nassert solution(\"3\\n5 1 -5\") == \"-5\\n\"\nassert solution(\"2\\n900 1000\") == \"1100\\n\""
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n10 5 0 -5 -10\\n\") == \"-15\"\nassert solution(\"4\\n1 1 1 1\\n\") == \"1\"\nassert solution(\"3\\n5 1 -5\\n\") == \"-5\"\nassert solution(\"2\\n900 1000\\n\") == \"1100\""
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n10 5 0 -5 -10\\n\") == \"-15\\n\"\nassert solution(\"4\\n1 1 1 1\\n\") == \"1\\n\"\nassert solution(\"3\\n5 1 -5\\n\") == \"-5\\n\"\nassert solution(\"2\\n900 1000\\n\") == \"1100\\n\""
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"The solution returned '{solution(input())}', but expected '{expected_output}'.\""
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n10 5 0 -5 -10\") == \"-15\"\nassert solution(\"4\\n1 1 1 1\") == \"1\"\nassert solution(\"3\\n5 1 -5\") == \"-5\"\nassert solution(\"2\\n900 1000\") == \"1100\""
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '1100', 'Test case 4 failed'"
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(solution) == \"422\"\nprint(\"All tests passed successfully\")"
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2\\n2 3\\n\") == \"YES\\nYES\\n\"\nassert solution(\"1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"NO\\nYES\\n\"\nassert solution(\"1 2\\n2 3\\n1 4\\n2 5\\n2 6\\n\") == \"NO\\nYES\\n\"\nassert solution(\"1 2\\n2 3\\n2 4\\n2 5\\n\") == \"NO\\nNO\\n\"\nassert solution(\"1 2\\n1 3\\n2 4\\n2 5\\n\") == \"NO\\nNO\\n\"\nassert solution(\"1 2\\n1 3\\n2 4\\n1 5\\n\") == \"NO\\nNO\\n\"\nassert solution(\"1 2\\n1 3\\n2 4\\n1 5\\n\") == \"NO\\nNO\\n\"\nassert solution(\"1 2\\n1 3\\n2 4\\n1 5\\n\") == \"NO\\nNO\\n\"\nassert solution(\"1 2\\n1 3\\n2 4\\n1 5\\n\") == \"NO\\nNO\\n\"\nassert solution(\"1 2\\n1 3\\n2 4\\n1 5\\n\") == \"NO\\nNO\\n\"\nassert solution(\"1 2\\n1 3\\n2 4\\n1 5\\n\") == \"NO\\nNO\\n\"\nassert solution(\"1 2\\n1 3\\n2 4\\n1 5\\n\") == \"NO\\nNO\\n\"\nassert solution(\"1 2\\n1 3\\n2 4\\n1 5\\n\") == \"NO\\nNO\\n\"\nassert solution(\"1 2\\n1 3\\n2 4\\n1 5\\n\") == \"NO\\nNO\\n\"\nassert solution(\"1 2\\n1 3\\n2 4\\n1 5\\n\") == \"NO\\nNO\\n\"\nassert solution(\"1 2\\n1 3\\n2 4\\n1 5\\n\") == \"NO\\nNO\\n\"\nassert solution(\"1 2\\n1 3\\n2 4\\n1 5\\n\") == \"NO\\nNO\\n\"\nassert solution(\"1 2\\n1 3\\n2 4\\n1 5\\n\") == \"NO\\nNO\\n\"\nassert solution(\"1 2\\n1 3\\n2 4\\n1 5\\n\") == \"NO\\nNO\\n\"\nassert solution(\"1 2\\n1 3\\n2 4\\n1 5\\n\") == \"NO\\nNO\\n\"\nassert solution(\"1 2\\n1 3\\n2 4\\n1 5\\n\") == \"NO\\nNO\\n\"\nassert solution(\"1 2\\n1 3\\n2 4\\n1 5\\n\") == \"NO\\nNO\\n\"\nassert solution(\"1 2\\n1 3\\n2 4\\n1 5\\n\") == \"NO\\nNO\\n\"\nassert solution(\"1 2\\n1 3\\n2 4\\n1 5\\n\") == \"NO\\nNO\\n\"\nassert solution(\"1 2\\n1 3\\n2 4\\n1 5\\n\") == \"NO\\nNO\\n\"\nassert solution(\"1 2\\n1 3\\n2 4\\n1 5\\n\") == \"NO\\nNO\\n\"\nassert solution(\"1 2\\n1 3\\n2 4\\n1 5\\n\") == \"NO\\nNO\\n\"\nassert solution(\"1 2\\n1 3\\n2 4\\n1 5\\n\") == \"NO\\nNO\\n\"\nassert solution(\"1 2\\n1 3\\n2 4\\n1 5\\n\") == \"NO\\nNO\\n\"\nassert solution(\"1 2\\n1 3\\n2 4\\n1 5\\n\") == \"NO\\nNO\\n\"\nassert solution(\"1 2"
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1 2\\n\\n3\\n1 2\\n2 3\\n\\n5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\\n\") == \"YES\"\nassert solution(\"3\\n1 2\\n2 3\\n\\n5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\\n\") == \"NO\"\nassert solution(\"5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\\n\") == \"NO\"\nassert solution(\"6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\\n\") == \"YES\""
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"YES\"\nassert solution(4) == \"YES\"\nassert solution(5) == \"NO\"\nassert solution(6) == \"YES\""
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"NO\"\nassert solution(\"5\") == \"NO\"\nassert solution(\"6\") == \"YES\""
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Input\\n2\\n1 2\\n\") == \"YES\\n\"\nassert solution(\"Input\\n3\\n1 2\\n2 3\\n\") == \"NO\\n\"\nassert solution(\"Input\\n5\\n1 2\\n1 3\\n1 4\\n2 5\\n\") == \"NO\\n\"\nassert solution(\"Input\\n6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"YES\\n\""
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Input\\n2\\n1 2\\n\") == \"YES\\n\"\nassert solution(\"Input\\n3\\n1 2\\n2 3\\n\") == \"NO\\n\"\nassert solution(\"Input\\n5\\n1 2\\n1 3\\n1 4\\n2 5\\n\") == \"NO\\n\"\nassert solution(\"Input\\n6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"YES\\n\""
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"YES\\n\"\nassert solution(\"3\\n1 2\\n2 3\\n\") == \"NO\\n\"\nassert solution(\"5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"NO\\n\"\nassert solution(\"6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"YES\\n\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1 2\\n3\\n1 2\\n4\\n2 5\") == \"YES\"\nassert solution(\"3\\n1 2\\n2 3\\n4\\n5\\n6\") == \"NO\"\nassert solution(\"5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\") == \"NO\"\n"
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('Input\\n2\\n1 2\\n\\nOutput\\nYES\\nInput\\n3\\n1 2\\n2 3\\n\\nOutput\\nNO\\nInput\\n5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\\nOutput\\nNO') == 'YES', \"Testcase 1 failed\"\nassert solution('Input\\n3\\n1 2\\n2 3\\n\\nOutput\\nNO\\nInput\\n5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\\nOutput\\nYES') == 'NO', \"Testcase 2 failed\"\nassert solution('Input\\n5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\\nOutput\\nNO\\nInput\\n6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\\nOutput\\nYES') == 'YES', \"Testcase 3 failed\"\n"
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n') == 'YES'"
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == expected\n"
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1\\n2\\n2\\n0\"\nassert solution() == \"1\\n2\\n2\\n0\"\nassert solution() == \"0\\n2\\n2\\n0\""
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 1\nassert solution(2) == 0"
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"1\\n2 \"\nassert solution(\"2\\n2 6\\n\") == \"0\\n\""
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == 0\nassert solution(2) == 1\nassert solution(3) == 2\nassert solution(4) == 2\nassert solution(5) == 0\nassert solution(6) == 0\nassert solution(7) == 0\nassert solution(8) == 0\nassert solution(9) == 0\nassert solution(10) == 0\nassert solution(11) == 0\nassert solution(12) == 0\nassert solution(13) == 0\nassert solution(14) == 0\nassert solution(15) == 0\nassert solution(16) == 0\nassert solution(17) == 0\nassert solution(18) == 0\nassert solution(19) == 0\nassert solution(20) == 0\nassert solution(21) == 0\nassert solution(22) == 0\nassert solution(23) == 0\nassert solution(24) == 0\nassert solution(25) == 0\nassert solution(26) == 0\nassert solution(27) == 0\nassert solution(28) == 0\nassert solution(29) == 0\nassert solution(30) == 0\nassert solution(31) == 0\nassert solution(32) == 0\nassert solution(33) == 0\nassert solution(34) == 0\nassert solution(35) == 0\nassert solution(36) == 0\nassert solution(37) == 0\nassert solution(38) == 0\nassert solution(39) == 0\nassert solution(40) == 0\nassert solution(41) == 0\nassert solution(42) == 0\nassert solution(43) == 0\nassert solution(44) == 0\nassert solution(45) == 0\nassert solution(46) == 0\nassert solution(47) == 0\nassert solution(48) == 0\nassert solution(49) == 0\nassert solution(50) == 0\nassert solution(51) == 0\nassert solution(52) == 0\nassert solution(53) == 0\nassert solution(54) == 0\nassert solution(55) == 0\nassert solution(56) == 0\nassert solution(57) == 0\nassert solution(58) == 0\nassert solution(59) == 0\nassert solution(60) == 0\nassert solution(61) == 0\nassert solution(62) == 0\nassert solution(63) == 0\nassert solution(64) == 0\nassert solution(65) == 0\nassert solution(66) == 0\nassert solution(67) == 0\nassert solution(68) == 0\nassert solution(69) == 0\nassert solution(70) == 0\nassert solution(71) == 0\nassert solution(72) == 0\nassert solution(73) == 0\nassert solution(74) == 0\nassert solution(75) == 0\nassert solution(76) == 0\nassert solution(77) == 0\nassert solution(78) == 0\nassert solution(79) == 0\nassert solution(80) == 0\nassert solution(81) == 0\nassert solution(82) == 0\nassert solution(83) == 0\nassert solution(84) == 0\nassert solution(85) == 0\nassert solution(86) == 0\nassert solution(87) == 0\nassert solution(88) == 0\nassert solution(89) == 0\nassert solution(90) == 0\nassert solution(91) == 0\nassert solution(92) == 0\nassert solution(93) == 0\nassert solution(94) == 0\nassert solution(95) == 0\nassert solution(96) == 0\nassert solution(97) == 0\nassert solution(98) == 0\nassert solution(99) == 0\nassert solution(100) == 0\nassert solution(101) == 0\nassert solution(102) == 0\nassert solution(103) == 0\n"
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '1\\n'\nprint(\"def solution(stdin: str) -> str:\\npass\\n\")\n"
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"\"\"1\n2 \n\"\"\""
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution('3\\n1 2 3\\n\\n2\\n2 6\\n\\n1') == '1'\\nassert solution('2\\n2 6\\n\\n1\\n2') == '0'\\n\\n# Expected output: None\""
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"0\", \"Your implementation of the solution is incorrect.\""
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"\"\"1\n2\n\"\"\"\n\nassert solution(stdin) == \"\"\"0\n2 \n\"\"\"\n\nassert solution(stdin) == \"\"\"1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n27"
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"6\\n\", \"Test Failed\""
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\naab\\nccb') == '6'\nassert solution('4\\nabc\\ndef') == '12'\nassert solution('5\\nabcde\\nfgh') == '18'"
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\naab\\nccb\\n') == '6\\n'\nassert solution('3\\nbcd\\nxya\\n') == '12\\n'\nassert solution('3\\naab\\nccc\\n') == '20\\n'\nassert solution('3\\naab\\nbcc\\n') == '14\\n'\nassert solution('3\\naab\\nbcd\\n') == '12\\n'\nassert solution('3\\naab\\naba\\n') == '3\\n'"
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\naab\\nccb\") == \"6\\n\"\nassert solution(\"4\\naabb\\ncccb\") == \"12\\n\"\nassert solution(\"5\\naabbcc\\nccccc\") == \"80\\n\"\nassert solution(\"6\\naabbccddd\\nddddddd\") == \"6128\\n\"\nassert solution(\"7\\naabbccddddeeeee\\nddddddddddd\") == \"1356208\\n\""
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"6\\n\", \"Your solution is incorrect.\"\nassert solution(\"3\\naab\\nccb\") == \"6\\n\", \"Your solution is incorrect.\""
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Expected output: {}, got: {}.\".format(output(), solution(input()))"
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"3\\naab\\nccb\\n\") == \"6\\n\"\n"
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 6, \"Test case 1 failed\"\nassert solution(4) == 7, \"Test case 2 failed\"\nassert solution(5) == 8, \"Test case 3 failed\"\nassert solution(6) == 12, \"Test case 4 failed\"\nassert solution(7) == 14, \"Test case 5 failed\""
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\naab\\nccb\") == \"6\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\naab\\nccb\") == \"6\\n\", \"Input: 3\\nS_1: aab\\nS_2: ccb\\nExpected output: 6\\nOutput: \" + solution(\"3\\naab\\nccb\") + \"\\n\"\n\nfrom itertools import combinations"
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"100 100 5\\n5 2 1 2 1\\n\") == \"YES\"\nassert solution(\"100 8 5\\n5 2 1 2 1\\n\") == \"NO\"\nassert solution(\"100 100 7\\n1 2 3 4 5 6 7\\n\") == \"NO\""
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"100 100 5\\n5 2 1 2 1\\n\") == \"YES\"\nassert solution(\"100 8 5\\n5 2 1 2 1\\n\") == \"NO\"\nassert solution(\"100 100 7\\n1 2 3 4 5 6 7\\n\") == \"NO\""
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"100 100 5\\n5 2 1 2 1\\n\") == \"YES\"\nassert solution(\"100 8 5\\n5 2 1 2 1\\n\") == \"NO\"\nassert solution(\"100 100 7\\n1 2 3 4 5 6 7\\n\") == \"NO\"\n"
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('100 100 5\\n5 2 1 2 1') == 'YES'\nassert solution('100 8 5\\n5 2 1 2 1') == 'NO'\nassert solution('100 100 7\\n1 2 3 4 5 6 7') == 'NO'\n\nfrom functools import lru_cache\n\n@lru_cache(maxsize=None)\n"
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"100 100 5\\n5 2 1 2 1\\n\") == \"YES\\n\"\nassert solution(\"100 8 5\\n5 2 1 2 1\\n\") == \"NO\\n\"\nassert solution(\"100 100 7\\n1 2 3 4 5 6 7\\n\") == \"NO\\n\""
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"100 100 5\\n5 2 1 2 1\") == \"YES\"\nassert solution(\"100 8 5\\n5 2 1 2 1\") == \"NO\"\nassert solution(\"100 100 7\\n1 2 3 4 5 6 7\") == \"NO\""
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"YES\"\nassert solution() == \"NO\"\n"
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"100 100 5\\n5 2 1 2 1\\n\") == \"YES\"\nassert solution(\"100 8 5\\n5 2 1 2 1\\n\") == \"NO\"\nassert solution(\"100 100 7\\n1 2 3 4 5 6 7\\n\") == \"NO\""
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"100 100 5\\n5 2 1 2 1\") == \"YES\"\nassert solution(\"100 8 5\\n5 2 1 2 1\") == \"NO\"\nassert solution(\"100 100 7\\n1 2 3 4 5 6 7\") == \"NO\""
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('100 100 5\\n5 2 1 2 1') == 'YES'\nassert solution('100 8 5\\n5 2 1 2 1') == 'NO'\nassert solution('100 100 7\\n1 2 3 4 5 6 7') == 'NO'"
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(r'Input\\n10 2\\n4 1 5 10\\n1 4 10 5') == '4'\nassert solution(r'Input\\n7 6\\n2 1 2 1\\n4 2 4 3\\n2 5 2 5\\n2 3 5 3\\n1 2 1 2\\n3 2 5 3') == '3'"
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 4\nassert solution() == 3"
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 'Code here'"
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('Input') == 'Output'"
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 2\\n4 1 5 10\\n1 4 10 5\\n\") == \"4\"\nassert solution(\"7 6\\n2 1 2 1\\n4 2 4 3\\n2 5 2 5\\n2 3 5 3\\n1 2 1 2\\n3 2 5 3\\n\") == \"3\"\n"
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == '''\n4\n4 1 5 10\n1 4 10 5\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1"
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"4\"\nassert solution() == \"3\""
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input) == output, \"Failed for input: {}\".format(input)"
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 2\\n4 1 5 10\\n1 4 10 5\\n\") == \"4\\n\"\nassert solution(\"7 6\\n2 1 2 1\\n4 2 4 3\\n2 5 2 5\\n2 3 5 3\\n1 2 1 2\\n3 2 5 3\\n\") == \"3\\n\""
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n5 3\\n1 5 2 6 1\\n1 6\\n6\\n3 2\\n1 2 3\\n4 3\\n3 1 2 3\\n10 3\\n1 2 3 4 5 6 7 8 9 10\") == \"no\\nno\\nno\\nno\\nno\""
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 'no'\nassert solution() == 'yes'\nassert solution() == 'yes'\nassert solution() == 'no'\nassert solution() == 'yes'"
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"no\\nno\\nno\\nno\\nno\""
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 'no\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno"
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(solution) == 'yes'\nassert solution(solution(solution)) == 'yes'\nassert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution"
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n5 3\\n1 5 2 6 1\\n1 6\\n6\\n3 2\\n1 2 3\\n4 3\\n3 1 2 3\\n10 3\\n1 2 3 4 5 6 7 8 9 10') == 'no\\nyes\\nyes\\nno\\nyes'"
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n5\n5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10\n\"\"\") == 'no'\n\nassert solution(\"\"\"\n5\n5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10\n\"\"\") == 'yes'\n\nassert solution(\"\"\"\n5\n5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10\n\"\"\") == 'yes'\n\nassert solution(\"\"\"\n5\n5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10\n\"\"\") == 'no'"
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n5 3\\n1 5 2 6 1\\n1 6\\n6\\n3 2\\n1 2 3\\n4 3\\n3 1 2 3\\n10 3\\n1 2 3 4 5 6 7 8 9 10\\n\") == \"no\\nyes\\nyes\\nno\\nyes\""
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_output, \"Test case failed: Expected output: {}, Actual output: {}\".format(expected_output, solution(stdin))"
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_string) == output_string, f\"Test case {test_case_number} failed. Output: {output_string}, Expected: {expected_output}\""
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''5 3\n1 3\n2 5\n4 5\n''') == '2\\n1 0 2 1 0\\n'\n\nassert solution('''4 2\n1 4\n2 4\n''') == '3\\n5 2 0 1\\n'"
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n1 3\\n2 5\\n4 5\") == \"2\\n1 0 2 1 0\"\nassert solution(\"4 2\\n1 4\\n2 4\\n\") == \"3\\n5 2 0 1\""
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n1 3\\n2 5\\n4 5\") == \"2\\n1 0 2 1 0\\n\"\nassert solution(\"4 2\\n1 4\\n2 4\") == \"3\\n5 2 0 1\\n\"\n"
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2\\n1 0 2 1 0\\n\"\nassert solution() == \"3\\n5 2 0 1\""
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n5 3\n1 3\n2 5\n4 5\n''') == '''\n2\n1 0 2 1 0\n'''\n\nassert solution('''\n4 2\n1 4\n2 4\n''') == '''\n3\n5 2 0 1\n'''"
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n1 3\\n2 5\\n4 5\") == \"2\\n1 0 2 1 0\"\nassert solution(\"4 2\\n1 4\\n2 4\\n\") == \"3\\n5 2 0 1\""
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n1 3\\n2 5\\n4 5\") == \"2\\n1 0 2 1 0\\n\"\nassert solution(\"4 2\\n1 4\\n2 4\\n\") == \"3\\n5 2 0 1\\n\"\nassert solution(\"5 3\\n1 3\\n2 5\\n4 5\\n\") == \"2\\n1 0 2 1 0\\n\""
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n1 3\\n2 5\\n4 5\\n\") == \"2\\n1 0 2 1 0\\n\\n4\\n5 2 0 1\"\nassert solution(\"4 2\\n1 4\\n2 4\\n\") == \"3\\n5 2 0 1\""
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n1 3\\n2 5\\n4 5\\n\") == \"2\\n1 0 2 1 0\\n\"\nassert solution(\"4 2\\n1 4\\n2 4\\n\") == \"3\\n5 2 0 1\\n\""
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"YES\""
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n1 0 1\\n2 1 3\\n2 1 2\\n2 2 3\") == \"NO\\n\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n1 2\\n2 1 3\\n1 3\") == \"YES\\n\""
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n1 0 1\\n2 1 3\\n2 1 2\\n2 2 3\\n\") == \"NO\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n1 2\\n2 1 3\\n\") == \"YES\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n2 1 2\\n1 3\\n\") == \"NO\""
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n1 0 1\\n2 1 3\\n2 1 2\\n2 2 3\") == \"NO\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n1 2\\n2 1 3\\n\") == \"YES\""
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n3 3\n1 0 1\n2 1 3\n2 1 2\n2 2 3\n''') == 'NO'\n\nassert solution('''\n3 3\n1 0 1\n3 1 2 3\n1 2\n2 1 3\n''') == 'YES'\n\nassert solution('''\n3 3\n1 0 1\n3 1 2 3\n2 1 2\n1 3\n''') == 'NO'"
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(solution) == \"YES\"\nassert solution(solution) == \"YES\""
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"YES\"\nassert solution == \"YES\"\nassert solution == \"NO\"\nassert solution == \"YES\"\nassert solution == \"NO\"\nassert solution == \"YES\"\nassert solution == \"NO\""
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n1 0 1\\n2 1 3\\n2 1 2\\n2 2 3\") == \"NO\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n1 2\\n2 1 3\\n\") == \"YES\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n2 1 2\\n1 3\\n\") == \"NO\""
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"YES\""
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 'YES'\nassert solution(input()) == 'NO'"
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('(((#)((#)')) == 1)\nassert solution('()((#((#(#()')) == 2)\nassert solution('#') == -1\nassert solution('(#)') == -1\n"
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Test failed for input: {input()}\""
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"(((#)((#))\") == 1\nassert solution(\"()((#((#(#()\") == 2\nassert solution(\"#\") == -1\nassert solution(\"(#)\") == -1"
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"(((#)((#)\")) == \"1\\n2\\n\"\nassert solution(\"(#((#(#()\")) == \"2\\n2\\n1\\n\"\nassert solution(\"#\") == \"-1\\n\"\nassert solution(\"#(#)\") == \"-1\\n\"\nassert solution(\"#(())\") == \"-1\\n\"\nassert solution(\"((#)()))\") == \"-1\\n\""
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('(((#)((#)')) == '1\\n2\\n')\nassert solution('()((#((#(#()')) == '2\\n2\\n1\\n')\nassert solution('#') == '-1\\n'\nassert solution('(#)') == '-1\\n'"
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"(((#)((#))\") == 1\nassert solution(\"()((#((#(#()\") == 2\nassert solution(\"#\") == -1\nassert solution(\"(#)\") == -1"
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('(((#)((#)')) == '1') # expected output: 1\nassert solution('()((#((#(#()')) == '2') # expected output: 2\nassert solution('#') == '-1') # expected output: -1\nassert solution('(#)') == '-1') # expected output: -1"
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"#\") == -1\nassert solution(\"()\") == -1\nassert solution(\"((#()))\") == 1\nassert solution(\"((#))\") == 1\nassert solution(\"(#())\") == 1\nassert solution(\"((#()))\") == 1"
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('(((#)((#)')) == 1)\nassert solution('()((#((#(#()')) == 2)\nassert solution('#') == -1\nassert solution('(#)') == -1"
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"(((#)((#)\")) == \"1\\n2\\n\", \"(((#)((#)#(#(#())\")) == \"1\\n2\\n2\\n\", \"((()()(())))\") == \"2\\n2\\n1\\n1\\n\", \"((()())((#)))\") == \"2\\n2\\n1\\n1\\n\")"
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\"\n"
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\") == \"-1\\nxoxox\\n\"\nassert solution(\"4 0\") == \"16\\no\\n\"\nassert solution(\"0 4\") == \"-16\\nxoox\\n\"\n"
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"-1\", \"solution(''): expected -1, but got {}\"\nassert solution(\"2 3\") == \"-1\", \"solution('2 3'): expected -1, but got {}\"\nassert solution(\"4 0\") == \"16\", \"solution('4 0'): expected '16', but got {}\"\nassert solution(\"0 4\") == \"-16\", \"solution('0 4'): expected '-16', but got {}\""
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '-1'\nassert solution() == 'xoxox'\nassert solution() == '16'\nassert solution() == '-16'"
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 3\\n4 0\\n0 4\\n') == '-1\\nxoxox\\n16\\no\\no\\n'\nassert solution('4 0\\n0 4\\n0 0\\n') == '16\\no\\no\\n'\nassert solution('0 4\\n0 0\\n4 0\\n') == '-16\\nxxxx\\n'\nassert solution('4 4\\n4 4\\n0 4\\n0 4\\n') == '0\\no\\no\\n0\\no\\no\\n'\nassert solution('4 4\\n4 4\\n0 4\\n0 4\\n0 0\\n') == '0\\no\\no\\n0\\no\\no\\n'\n"
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"16\\noooo\\n\""
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '-1', \"Output must be -1\"\n"
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == -1, \"Invalid output\"\nassert solution(\"4 0\") == 16, \"Invalid output\"\nassert solution(\"0 4\") == -16, \"Invalid output\""
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('0 4\\n2 3') == '-1\\nxoxox'\nassert solution('4 0\\n2 3') == '16\\no'\nassert solution('10 1\\n3 0') == '10\\nxo'\n\nprint(' '.join(input().split()))"
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"1\\n\" + \"xoxox\\n\"\nassert solution(\"3 3\") == \"0\\n\" + \"xxxx\\n\"\nassert solution(\"1 1\") == \"1\\n\" + \"xoxox\\n\"\nassert solution(\"1 1 2 2\") == \"-1\\n\"\nassert solution(\"1 2 3 3\") == \"-1\\n\"\nassert solution(\"2 2 1 1\") == \"0\\n\" + \"xxxx\\n\""
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"1 1 1\") == \"17\"\nprint(\"All tests passed.\")\n"
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 1 1') == '17'\nprint(\"All tests passed!\")"
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"17\", \"The solution is incorrect.\""
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1 1\") == \"17\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1 1\") == \"17\", \"Sample Output not matching.\"\n"
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1\") == \"17\"\n"
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1 1\") == \"17\", \"The answer should be 17.\""
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"17\""
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '17'"
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"1 1 1\") == \"17\"\nassert solution(stdin=\"3 3 3\") == \"33\"\nassert solution(stdin=\"5 5 5\") == \"17\"\nassert solution(stdin=\"1 2 3\") == \"0\"\nassert solution(stdin=\"3 2 1\") == \"0\"\nassert solution(stdin=\"2 1 3\") == \"0\"\nassert solution(stdin=\"3 1 2\") == \"0\"\nassert solution(stdin=\"5 5 4\") == \"17\"\nassert solution(stdin=\"1 3 2\") == \"0\"\nassert solution(stdin=\"2 3 1\") == \"0\"\nassert solution(stdin=\"3 2 3\") == \"0\"\nassert solution(stdin=\"4 3 2\") == \"0\"\nassert solution(stdin=\"5 4 3\") == \"17\"\nassert solution(stdin=\"1 2 5\") == \"0\"\nassert solution(stdin=\"2 2 4\") == \"0\"\nassert solution(stdin=\"3 1 4\") == \"0\"\nassert solution(stdin=\"4 1 2\") == \"0\"\nassert solution(stdin=\"5 1 3\") == \"17\"\n"
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, \"Expected: {}, Got: {}\".format(expected_output, solution(input()))"
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 3\\n1 2 1\\n2 1 2') == '2 2 2 \\n2 2 2 \\n'\nassert solution('2 2\\n1 2\\n3 4') == '2 3 \\n3 2 '\n"
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"\"\"2 2\n2 2\n\"\"\""
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Expected '{output()}' but got '{solution(input())}'\""
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Test Failed: \\nInput: {input()} \\nOutput: {output}\""
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 'Solution'\n"
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"print(2, 2, 2)\\nprint(2, 2, 2)\\n\"\nassert solution == \"print(2, 2, 2)\\nprint(2, 2, 2)\\n\"\nassert solution == \"print(2, 2, 2)\\nprint(2, 2, 2)\\n\""
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n2 3\n1 2 1\n2 1 2\n''') == '''\n2 2 2 \n2 2 2 \n\n'''\nassert solution('''\n2 2\n1 2\n3 4\n''') == '''\n2 3 \n3 2 \n\n'''"
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"2 3\n1 2 1\n2 1 2\"\"\") == '2 2 2\\n2 2 2\\n'\nassert solution(\"\"\"2 2\n1 2\n3 4\"\"\") == '2 3 \\n3 2\\n'"
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n2 3\n1 2 1\n2 1 2\n''') == '2 2 2 \\n2 2 2 \\n'\n\nassert solution('''\n2 2\n1 2\n3 4\n''') == '2 3 \\n3 2 \\n'"
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1\\n0 1\\n2 1\\n\") == \"332748119\\n332748119\\n\"\nassert solution(\"1 2\\n1\\n1\\n\") == \"3\\n\"\nassert solution(\"3 3\\n0 1 1\\n4 3 5\\n\") == \"160955686\\n185138929\\n974061117\\n\""
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1\\n0 1\\n2 1\") == \"332748119\"\nassert solution(\"1 2\\n1\") == \"3\"\nassert solution(\"3 3\\n0 1 1\\n4 3 5\") == \"160955686\\n185138929\\n974061117\""
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '332748119'"
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1\\n0 1\\n2 1\\n\") == \"332748119\\n332748119\\n\"\nassert solution(\"1 2\\n1\\n1\\n\") == \"3\\n\"\nassert solution(\"3 3\\n0 1 1\\n4 3 5\\n\") == \"160955686\\n185138929\\n974061117\\n\""
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1\\n0 1\\n2 1\\n\") == \"332748119\\n332748119\\n\"\nassert solution(\"1 2\\n1\\n1\\n\") == \"3\\n\"\nassert solution(\"3 3\\n0 1 1\\n4 3 5\\n\") == \"160955686\\n185138929\\n974061117\\n\""
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1\\n0 1\\n2 1\\n\") == \"332748119\\n332748119\\n\"\nassert solution(\"1 2\\n1\\n1\\n\") == \"3\\n\"\nassert solution(\"3 3\\n0 1 1\\n4 3 5\\n\") == \"160955686\\n185138929\\n974061117\\n\""
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 332748119\nassert solution(3) == 160955686\nassert solution(3) == 185138929"
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 1\\n0 1\\n2 1\\n') == '332748119\\n332748119\\n'\nassert solution('1 2\\n1\\n1\\n') == '3\\n'\nassert solution('3 3\\n0 1 1\\n4 3 5\\n') == '160955686\\n185138929\\n974061117\\n'"
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"332748119\"\nassert solution(stdin) == \"332748119\""
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(str(input())) == str(input())"
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n3 1 5 2 6\\n5\\n1 2 3 4 5\\n5\\n1 100 101 100 1\\n\") == \"11\\n6\\n102\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n3 1 5 2 6\\n\\n5\\n1 2 3 4 5\\n\\n5\\n1 100 101 100 1\\n\") == \"11\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n\\n5\\n1 100 101 100 1\\n\") == \"6\\n\"\nassert solution(\"5\\n1 100 101 100 1\\n\") == \"102\\n\""
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n3 1 5 2 6\\n\") == \"11\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"6\\n\"\nassert solution(\"5\\n1 100 101 100 1\\n\") == \"102\\n\""
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(5) == \"11\\n\"\nassert solution(5) == \"6\\n\"\nassert solution(5) == \"102\\n\""
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n3 1 5 2 6\\n\") == \"11\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"6\\n\"\nassert solution(\"5\\n1 100 101 100 1\\n\") == \"102\\n\""
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n3 1 5 2 6\\n5\\n1 2 3 4 5\\n5\\n1 100 101 100 1\\n\") == \"11\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n5\\n1 100 101 100 1\\n\") == \"6\\n\"\nassert solution(\"5\\n1 100 101 100 1\\n\") == \"102\\n\""
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 1, 5, 2, 6) == 11\nassert solution(5, 1, 2, 3, 4, 5) == 6\nassert solution(5, 1, 100, 101, 100, 1) == 102\n"
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n3 1 5 2 6\\n\") == \"11\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"6\\n\"\nassert solution(\"5\\n1 100 101 100 1\\n\") == \"102\\n\""
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Input\\n5\\n3 1 5 2 6\\n\\nOutput\\n11\\n\\nInput\\n5\\n1 2 3 4 5\\n\\nOutput\\n6\\n\\nInput\\n5\\n1 100 101 100 1\\n\\nOutput\\n102\") == \"11\\n\"\nassert solution(\"Input\\n5\\n1 2 3 4 5\\n\\nOutput\\n6\\n\\nInput\\n5\\n1 100 101 100 1\\n\\nOutput\\n102\") == \"6\\n\"\nassert solution(\"Input\\n5\\n1 100 101 100 1\\n\\nOutput\\n102\") == \"102\\n\"\n"
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('14 2\\n1 4\\n2 4\\n3 4\\n4 13\\n10 5\\n11 5\\n12 5\\n14 5\\n5 13\\n6 7\\n8 6\\n13 6\\n9 6\\n') == 'Yes'\nassert solution('3 1\\n1 3\\n2 3\\n') == 'No'"
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"14 2\\n1 4\\n2 4\\n3 4\\n4 13\\n10 5\\n11 5\\n12 5\\n14 5\\n5 13\\n6 7\\n8 6\\n13 6\\n9 6\\n\") == \"Yes\\n\"\nassert solution(\"3 1\\n1 3\\n2 3\\n\") == \"No\\n\""
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"Yes\", solution(stdin)"
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"14 2\\n1 4\\n2 4\\n3 4\\n4 13\\n10 5\\n11 5\\n12 5\\n14 5\\n5 13\\n6 7\\n8 6\\n13 6\\n9 6\\n\") == \"Yes\"\nassert solution(\"3 1\\n1 3\\n2 3\\n\") == \"No\""
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('14 2\\n1 4\\n2 4\\n3 4\\n4 13\\n10 5\\n11 5\\n12 5\\n14 5\\n5 13\\n6 7\\n8 6\\n13 6\\n9 6') == 'Yes', 'Expected output: Yes'\nassert solution('3 1\\n1 3\\n2 3') == 'No', 'Expected output: No'\n\nfrom typing import List\n"
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"Yes\""
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Test failed: {output}, expected {output}\""
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"14 2\\n1 4\\n2 4\\n3 4\\n4 13\\n10 5\\n11 5\\n12 5\\n14 5\\n5 13\\n6 7\\n8 6\\n13 6\\n9 6\\n\") == \"Yes\"\nassert solution(\"3 1\\n1 3\\n2 3\\n\") == \"No\""
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"14 2\\n1 4\\n2 4\\n3 4\\n4 13\\n10 5\\n11 5\\n12 5\\n14 5\\n5 13\\n6 7\\n8 6\\n13 6\\n9 6\\n\") == \"Yes\"\nassert solution(\"3 1\\n1 3\\n2 3\\n\") == \"No\"\n"
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('14 2\\n1 4\\n2 4\\n3 4\\n4 13\\n10 5\\n11 5\\n12 5\\n14 5\\n5 13\\n6 7\\n8 6\\n13 6\\n9 6\\n') == 'Yes\\n'\nassert solution('3 1\\n1 3\\n2 3\\n') == 'No\\n'"
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n#.\\n###\\n##.\") == \"1\\n\"\nassert solution(\"4 2\\n##\\n.#\\n.#\\n##\\n\") == \"-1\\n\"\nassert solution(\"4 5\\n....#\\n####. #\\n.###. #\\n.#... #\\n\") == \"2\\n\"\nassert solution(\"2 1\\n. #\\n\") == \"-1\\n\"\nassert solution(\"3 5\\n.....\\n.....\\n.....\\n\") == \"0\\n\""
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Error: {solution(input())}!= {output()}\""
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1\\n\"\nassert solution() == \"1\\n\"\nassert solution() == \"-1\\n\"\nassert solution() == \"1\\n\"\nassert solution() == \"2\\n\"\nassert solution() == \"1\\n\"\nassert solution() == \"1\\n\"\nassert solution() == \"0\\n\"\n"
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('example1.txt')) == '1\\n'\nassert solution(open('example2.txt')) == '-1\\n'\nassert solution(open('example3.txt')) == '2\\n'\nassert solution(open('example4.txt')) == '-1\\n'\nassert solution(open('example5.txt')) == '2\\n'\nprint(\"All test cases passed\")"
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 3\\n.#.\\n###\\n##.\\n') == 1\nassert solution('4 2\\n##\\n.#\\n.#\\n##\\n') == -1\nassert solution('4 5\\n....#\\n####. \\n.###. \\n.#... \\n') == 2\nassert solution('2 1\\n. \\n# \\n') == -1\nassert solution('3 5\\n.....\\n.....\\n.....\\n') == 0"
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 3\\n.#\\n###\\n##.\\n') == '1'\nassert solution('4 2\\n##\\n.#\\n.#\\n##\\n') == '-1'\nassert solution('4 5\\n....#\\n####. \\n.###.\\n.#... \\n') == '2'\nassert solution('2 1\\n. \\n# \\n') == '-1'\nassert solution('3 5\\n.....\\n.....\\n.....\\n') == '0'"
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n.#.\\n###\\n##.\\n\\n4 2\\n##\\n.#\\n.#\\n##\\n\\n4 5\\n....#\\n####. \\n.###.\\n.#... \\n\\n2 1\\n. \\n# \\n\\n3 5\\n.....\\n.....\\n.....\\n\\n\") == \"1\"\nassert solution(\"4 2\\n##\\n.#\\n.#\\n##\\n\\n4 5\\n....#\\n####. \\n.###.\\n.#... \\n\\n2 1\\n. \\n# \\n\\n3 5\\n.....\\n.....\\n.....\\n\") == \"-1\"\nassert solution(\"4 5\\n....#\\n####. \\n.###. \\n.#... \\n\\n2 1\\n. \\n# \\n\\n3 5\\n.....\\n.....\\n.....\\n\") == \"2\"\nassert solution(\"2 1\\n. \\n# \\n\\n3 5\\n.....\\n.....\\n.....\\n\\n\") == \"-1\""
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n3 3\n.#.\n###\n##.\n''') == '1'\n\nassert solution('''\n4 2\n##\n.#\n.#\n##\n''') == '-1'\n\nassert solution('''\n4 5\n....#\n####.\n.###.\n.#...\n''') == '2'\n\nassert solution('''\n2 1\n.\n"
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3, 3) == 1\nassert solution(4, 2) == -1\nassert solution(4, 5) == 2\nassert solution(2, 1) == -1\nassert solution(3, 5) == 0"
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()\nprint(\"Test case passed.\")"
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"\"\"\nYES\n1 2 2 3\n\"\"\"\n"
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"YES\\n1 2 2 3\\nNO\\n10 10 10 \\nYES\\n5 4 2\""
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('Input\\n4 3\\n1 0 2 3\\n\\nOutput\\nYES\\n1 2 2 3\\n\\nInput\\n3 10\\n10 10 10\\n\\nOutput\\nYES\\n10 10 10 \\n\\nInput\\n5 6\\n6 5 6 2 2\\n\\nOutput\\nNO\\n\\nInput\\n3 5\\n0 0 0\\n\\nOutput\\nYES\\n5 4 2') == 'YES\\n1 2 2 3\\nNO\\n5 4 2'"
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n1 0 2 3\\n\") == \"YES\\n1 2 2 3\\n\"\nassert solution(\"3 10\\n10 10 10\\n\") == \"YES\\n10 10 10 \\n\"\nassert solution(\"5 6\\n6 5 6 2 2\\n\") == \"NO\\n\"\nassert solution(\"3 5\\n0 0 0\\n\") == \"YES\\n5 4 2\\n\"\n"
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 'YES\\n1 2 2 3\\nYES\\n10 10 10\\nYES\\n5 4 2'\n"
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n1 0 2 3\\n\") == \"YES\\n1 2 2 3\\n\"\nassert solution(\"3 10\\n10 10 10\\n\") == \"YES\\n10 10 10\\n\"\nassert solution(\"5 6\\n6 5 6 2 2\\n\") == \"NO\\n\"\nassert solution(\"3 5\\n0 0 0\\n\") == \"YES\\n5 4 2\\n\"\n"
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n1 0 2 3\\n\") == \"YES\\n1 2 2 3\\n\"\nassert solution(\"3 10\\n10 10 10\\n\") == \"YES\\n10 10 10\\n\"\nassert solution(\"5 6\\n6 5 6 2 2\\n\") == \"NO\\n\"\nassert solution(\"3 5\\n0 0 0\\n\") == \"YES\\n5 4 2\\n\""
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"YES\"\n"
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n1 0 2 3\\n\") == \"YES\\n1 2 2 3\"\nassert solution(\"3 10\\n10 10 10\\n\") == \"YES\\n10 10 10\"\nassert solution(\"5 6\\n6 5 6 2 2\\n\") == \"NO\"\nassert solution(\"3 5\\n0 0 0\\n\") == \"YES\\n5 4 2\"\n"
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2\") == \"4 3 6 2\"\nassert solution(\"1\\n42\") == \"42\"\nassert solution(\"2\\n1 1 1 1\") == \"1 1\""
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n42\") == \"42\\n\"\nassert solution(\"2\\n1 1 1 1\") == \"1 1\\n\"\nassert solution(\"4\\n2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2\") == \"4 3 6 2\\n\""
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Test case {i+1} failed. Expected: {output()}, Received: {solution(input())}\" for i, (input_, output) in enumerate([\n    (\"4\\n2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2\", \"4 3 6 2\"),\n    (\"1\\n42\", \"42\"),\n    (\"2\\n1 1 1 1\", \"1 1\"),\n])"
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Input\\n4\\n2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2\\n\\nInput\\n1\\n42\\n\\nInput\\n2\\n1 1 1 1\\n\\n\") == \"4 3 6 2\\n42\\n1 1\\n\""
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1 1 1 1\") == \"1 1\\n\"\nassert solution(\"1\\n42\") == \"42 42\\n\"\nassert solution(\"2\\n2 1 1 1\") == \"1 1\\n1 1\\n\"\nassert solution(\"1\\n4\") == \"4 4\\n\"\nassert solution(\"2\\n2 2 2 2\") == \"2 2\\n2 2\\n\"\nassert solution(\"1\\n4 4\") == \"4 4\\n4 4\\n\"\nassert solution(\"2\\n2 2 2 2 2 2\") == \"2 2\\n2 2\\n2 2\\n2 2\\n\""
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2\") == \"4 3 6 2\"\nassert solution(\"1\\n42\") == \"42  \"\nassert solution(\"2\\n1 1 1 1\") == \"1 1\""
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '4 3 6 2\\n42'\nassert solution() == '1 1'"
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '4 3 6 2\\n42\\n1 1'"
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2') == ['4', '3', '6', '2']\nassert solution('1\\n42') == ['42']\nassert solution('2\\n1 1 1 1') == ['1', '1']"
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n4\n2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2\n\nOutput\n4 3 6 2\n\nInput\n1\n42\n\nOutput\n42\nInput\n2\n1 1 1 1\n\nOutput\n1 1\n''') == '4 3 6 2\\n1 1'\n\nassert solution('''\n1\n42\n\nOutput\n42\nInput\n2\n1 1 1 1\n\nOutput\n1 1\n''') == '42 1 1'"
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 6\n"
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n1 1\\n1 2\\n1 3\\n') == '3\\n'\nassert solution('3\\n1 1\\n2 1\\n3 1\\n') == '6\\n'\nassert solution('4\\n2 1\\n2 2\\n3 1\\n3 2\\n') == '6\\n'"
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '6', \"The solution is incorrect\""
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 1\\n1 2\\n1 3\\n\") == \"3\\n\"\nassert solution(\"3\\n1 1\\n2 1\\n3 1\\n\") == \"6\\n\"\nassert solution(\"4\\n2 1\\n2 2\\n3 1\\n3 2\\n\") == \"6\\n\"\nassert solution(\"4\\n2 1\\n2 2\\n3 1\\n3 2\\n4 1\\n4 2\\n4 3\\n4 4\\n\") == \"12\\n\"\nassert solution(\"4\\n2 1\\n2 2\\n3 1\\n3 2\\n4 1\\n4 2\\n4 3\\n4 4\\n5 1\\n5 2\\n5 3\\n5 4\\n5 5\\n\") == \"12\\n\""
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 3, \"Example 1 should return 3\"\nassert solution(4) == 6, \"Example 2 should return 6\"\nassert solution(5) == 6, \"Example 3 should return 6\""
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"3\\n6\\n6\\n\"\nassert solution() == \"3\\n6\\n\""
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 1\\n1 2\\n1 3\\n\") == \"3\\n\\n6\\n\\n6\\n\"\nassert solution(\"3\\n1 1\\n2 1\\n3 1\\n\") == \"3\\n\\n6\\n\\n6\\n\"\nassert solution(\"4\\n2 1\\n2 2\\n3 1\\n3 2\\n\") == \"6\\n\\n6\\n\\n6\\n\""
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"Test case failed: {solution(input())}!= {expected}\"\n\nexpected = 3\nsolution = \"\"\"\n"
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input) == output, f\"Test failed for input {input}, expected output {output}, received {solution(input)}\" for input, output in zip(inputs, outputs)"
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 1\\n1 2\\n1 3\\n\") == \"3\\n\"\nassert solution(\"3\\n1 1\\n2 1\\n3 1\\n\") == \"6\\n\"\nassert solution(\"4\\n2 1\\n2 2\\n3 1\\n3 2\\n\") == \"6\\n\""
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n.E.\\nE.E\\n.E.') == '1 1\\n2 2\\n3 3'\nassert solution('3\\nEEE\\nE..\\nE.E\\n') == '-1'\nassert solution('5\\nEE.EE\\nE.EE.E\\nE...E\\n.EE.E\\nEE.EE\\n') == '3 3\\n1 3\\n2 2\\n4 4\\n5 3'\n"
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n.E.\\nE.E\\n.E.\\n\") == \"1 1\\n2 2\\n3 3\\n\"\nassert solution(\"3\\nEEE\\nE..\\nE.E\\n\") == \"-1\\n\"\nassert solution(\"5\\nEE.EE\\nE.EE.E\\nE...E\\n.EE.E\\nEE.EE\\n\") == \"3 3\\n1 3\\n2 2\\n4 4\\n5 3\\n\""
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3, \".E.\\nE.E.\\n.E.\") == \"1 1\\n2 2\\n3 3\\n\"\nassert solution(3, \"EEE\\nE..\\nE.E\\n\") == \"-1\\n\"\nassert solution(5, \"EE.EE\\nE.EE.E\\nE...E\\n.EE.E\\nEE.EE\\n\") == \"3 3\\n1 3\\n2 2\\n4 4\\n5 3\\n\""
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\") == -1\nassert solution(\".E.\\nE.E.\\n.E.\\n\") == 1 1\nassert solution(\".E.\\n.E.\\n.E.\\n\") == 2 2\nassert solution(\".E.\\n.E.\\n.E.\\n\") == 3 3\nassert solution(\".E.\\nEEE\\n.E.\\n\") == 3 3\nassert solution(\".E.\\nE.E.\\nE.E.\\n\") == -1\nassert solution(\".E.\\nE.E.\\n.E.\\n\") == 1 3\nassert solution(\".E.\\n.E.\\n.E.\\n\") == 2 2\nassert solution(\".E.\\nE.E.\\nE.E.\\n\") == 3 2\nassert solution(\".E.\\nE.E.\\n.E.\\n\") == 4 4\nassert solution(\".E.\\nEE.EE\\nE.EE.E\\nE...E\\n.EE.E\\nEE.EE\\n\") == 3 3\nassert solution(\".E.\\n.E.E.\\n.E...E\\n.E.E.\\n.E...E\\n.E.E.\\n\") == 3 3\nassert solution(\".E.\\n.E.E.\\n.E...E\\n.E.E.\\n.E...E\\n.E.E.\\n\") == 1 3\nassert solution(\".E.\\n.E.E.\\n.E...E\\n.E.E.\\n.E...E\\n.E.E.\\n\") == 2 2\nassert solution(\".E.\\n.E.E.\\n.E...E\\n.E.E.\\n.E...E\\n.E.E.\\n\") == 4 4"
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n.E.\\nE.E\\n.E.\\n\") == [\"1 1\", \"2 2\", \"3 3\"]\nassert solution(\"3\\nEEE\\nE..\\nE.E\\n\") == [\"-1\"]\nassert solution(\"5\\nEE.EE\\nE.EE.E\\nE...E\\n.EE.E\\nEE.EE\\n\") == [\"3 3\", \"1 3\", \"2 2\", \"4 4\", \"5 3\"]"
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n    3\n    \n.E.\nE.E\n.E.\n\"\"\") == \"\"\"\n    1 1\n    2 2\n    3 3\n\"\"\"\n\nassert solution(\"\"\"\n    3\n\nEEE\nE..\nE.E\n\"\"\") == \"\"\"\n-1\n\"\"\"\n\nassert solution(\"\"\"\n    5\n\nEE.EE\nE.EE.\nE...E\n.EE.E\nEE.EE\n\"\"\") == \"\"\"\n    3 3\n    1 3\n    2 2\n    4 4\n    5 3\n\"\"\"\n\nassert solution(\"\"\"\n    6\n\n.EE.E\n.E...\n.E.E\n.E.E\n...E.\n.E.E\n.E...\n.EE.E\n\"\"\") == \"\"\"\n-1\n\"\"\"\n\nassert solution(\"\"\"\n    7\n\n.EE.E\n.E...\n.E.E\n.E.E\n...E.\n.E.E\n.E...\n.EE.E\n\"\"\") == \"\"\"\n-1\n\"\"\"\n\nassert solution(\"\"\"\n    8\n\n.EE.E\n.E...\n.E.E\n.E.E\n...E.\n.E.E\n.E...\n.EE.E\n\"\"\") == \"\"\"\n-1\n\"\"\"\n\nassert solution(\"\"\"\n    9\n\n.EE.E\n.E...\n.E.E\n.E.E\n...E.\n.E.E\n.E...\n.EE.E\n\"\"\") == \"\"\"\n-1\n\"\"\"\n\nassert solution(\"\"\"\n    10\n\n.EE.E\n.E...\n.E.E\n.E.E\n...E.\n.E.E\n.E...\n.EE.E\n\"\"\") == \"\"\"\n-1\n\"\"\""
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Error: Please provide the correct output for the given example\""
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n.E.\\nE.E\\n.E.\\n') == '1 1\\n2 2\\n3 3\\n'\nassert solution('3\\nEEE\\nE..\\nE.E\\n') == '-1'\nassert solution('5\\nEE.EE\\nE.EE.E\\nE...E\\n.EE.E\\nEE.EE\\n') == '3 3\\n1 3\\n2 2\\n4 4\\n5 3\\n'"
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_str) == output_str, \"Test failed\""
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Actual output: {solution(input())}\""
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"32\"\nassert solution(stdin) == \"1\"\n"
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"32\", \"Test case failed\"\nprint(\"Test case passed\")"
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('10 2\\n10 -1 2 2 2 2 2 2 -1 10\\n5 10\\n-1 -1 -1 -1 -1\\n') == '32\\n-1\\n'"
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"Output\", solution(stdin)"
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('10 2\\n10 -1 2 2 2 2 2 2 -1 10') == '32'\nassert solution('5 10\\n-1 -1 -1 -1 -1') == '-1'"
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 2\\n10 -1 2 2 2 2 2 2 -1 10\\n\") == \"32\\n\"\nassert solution(\"5 10\\n-1 -1 -1 -1 -1\\n\") == \"-1\\n\""
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 2\\n10 -1 2 2 2 2 2 2 -1 10\") == \"32\\n\"\nassert solution(\"5 10\\n-1 -1 -1 -1 -1\") == \"-1\\n\""
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"32\\n\""
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected_output, f\"Output does not match.\\nExpected output: {expected_output}\\nActual output: {solution(stdin)}\""
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('10 2\\n10 -1 2 2 2 2 2 2 -1 10') == '32\\n'\nassert solution('5 10\\n-1 -1 -1 -1 -1') == '-1\\n'"
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test case {test_case} failed. Expected output: {expected_output}, got: {solution(input())}\""
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1 2\\n1 1 1\\n\") == \"3\\n\"\nassert solution(\"4 2 3\\n1 2 4 8\\n\") == \"79\\n\"\n\nprint(\"All test cases pass.\")"
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1 2\\n1 1 1\") == \"3\"\nassert solution(\"4 2 3\\n1 2 4 8\") == \"79\""
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 1 2\\n1 1 1\\n') == '3\\n'\nassert solution('4 2 3\\n1 2 4 8\\n') == '79\\n'"
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 2 3') == '79'\nassert solution('3 1 2') == '3'\nassert solution('1 1 1') == '3'"
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Input:\\n{input()}\\nOutput:\\n{output()}\""
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 1 2\\n1 1 1\\n') == '3\\n'\nassert solution('4 2 3\\n1 2 4 8\\n') == '79\\n'"
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 1 2\\n1 1 1\\n') == '3'\nassert solution('4 2 3\\n1 2 4 8\\n') == '79'"
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1 2\\n1 1 1\") == \"3\\n\"\nassert solution(\"4 2 3\\n1 2 4 8\") == \"79\\n\""
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 1 2\\n1 1 1\\n') == '3\\n'\nassert solution('4 2 3\\n1 2 4 8\\n') == '79\\n'"
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 3') == '7\\n7\\n4\\n7\\n7\\n', \"Incorrect output for test case 1\"\nassert solution('4 3') == '7\\n7\\n4\\n7\\n7\\n', \"Incorrect output for test case 2\"\nassert solution('5 3') == '7\\n7\\n4\\n7\\n7\\n', \"Incorrect output for test case 3\"\nassert solution('6 3') == '7\\n7\\n4\\n7\\n7\\n', \"Incorrect output for test case 4\"\nassert solution('7 3') == '7\\n7\\n4\\n7\\n7\\n', \"Incorrect output for test case 5\""
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 3') == '7\\n7\\n4\\n7\\n7\\n'\nassert solution('10 3') == '4\\n4\\n3\\n4\\n4\\n'\nassert solution('10 5') == '4\\n4\\n4\\n3\\n4\\n4\\n'\nassert solution('10 7') == '4\\n4\\n4\\n3\\n4\\n4\\n'\nassert solution('10 10') == '4\\n4\\n4\\n3\\n4\\n4\\n'\nassert solution('10 11') == '4\\n4\\n4\\n3\\n4\\n4\\n'"
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"2 3\") == \"7\"\nassert solution(\"4 3\") == \"4\"\nassert solution(\"1 3\") == \"7\"\nassert solution(\"2 10\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"2 20\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"1 1\") == \"7\"\nassert solution(\"10 1\") == \"7\"\nassert solution(\"1 1\") == \"7\"\nassert solution(\"1 1\") == \"7\"\n"
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 3') == '7\\n7\\n4\\n7\\n7'\nassert solution('10 5') == '15\\n15\\n20\\n15\\n15'\nassert solution('10 10') == '20\\n20\\n30\\n20\\n20'\nassert solution('5 5') == '1\\n1\\n2\\n1\\n1'\nassert solution('5 4') == '4\\n4\\n3\\n4\\n4'\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"\"\"7\n7\n4\n7\n7\"\"\""
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\") == \"7\\n7\\n4\\n7\\n7\\n\"\nassert solution(\"4 4\") == \"7\\n7\\n4\\n7\\n7\\n\"\nassert solution(\"5 6\") == \"7\\n7\\n4\\n7\\n7\\n\"\nassert solution(\"10 11\") == \"7\\n7\\n4\\n7\\n7\\n\"\nassert solution(\"2 2\") == \"7\\n7\\n4\\n7\\n7\\n\""
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"4 4\") == \"1\\n4\\n1\\n4\"\nassert solution(\"1 1\") == \"1\\n1\\n1\\n1\"\nassert solution(\"1 2\") == \"1\\n1\\n1\\n2\"\nassert solution(\"2 2\") == \"7\\n7\\n4\\n7\\n7\""
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\") == \"7\\n7\\n4\\n7\\n7\\n\"\nassert solution(\"3 4\") == \"4\\n7\\n7\\n\"\nassert solution(\"2 3\") == \"7\\n7\\n4\\n7\\n7\\n\"\nassert solution(\"3 2\") == \"7\\n7\\n4\\n7\\n7\\n\"\nassert solution(\"4 1\") == \"4\\n7\\n7\\n\""
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"5 5\") == \"0\\n0\\n0\\n0\\n0\"\nassert solution(\"1 10\") == \"10\\n0\\n10\\n0\\n10\"\nassert solution(\"5 10\") == \"10\\n10\\n5\\n10\\n5\""
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '7\\n7\\n4\\n7\\n7\\n\\n', \"Test case failed\""
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 2\\n1 5 6 2\\n1 3\\n3 2\\n4 5\\n3 7\\n4 3\\n4 6\\n\") == \"6\\n\"\nassert solution(\"9 3\\n3 2 1 6 5 9\\n8 9\\n3 2\\n2 7\\n3 4\\n7 6\\n4 5\\n2 1\\n2 8\\n\") == \"9\\n\""
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 2\\n1 5 6 2\\n1 3\\n3 2\\n4 5\\n3 7\\n4 3\\n4 6\\n\") == \"6\\n\"\nassert solution(\"9 3\\n3 2 1 6 5 9\\n8 9\\n3 2\\n2 7\\n3 4\\n7 6\\n4 5\\n2 1\\n2 8\\n\") == \"9\\n\""
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 2\\n1 5 6 2\\n1 3\\n3 2\\n4 5\\n3 7\\n4 3\\n4 6\\n\") == \"6\"\nassert solution(\"9 3\\n3 2 1 6 5 9\\n8 9\\n3 2\\n2 7\\n3 4\\n7 6\\n4 5\\n2 1\\n2 8\\n\") == \"9\""
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"7 2\\n1 5 6 2\\n1 3\\n3 2\\n4 5\\n3 7\\n4 3\\n4 6\\n\"\n) == \"6\\n\"\n\nassert solution(\n    \"9 3\\n3 2 1 6 5 9\\n8 9\\n3 2\\n2 7\\n3 4\\n7 6\\n4 5\\n2 1\\n2 8\\n\"\n) == \"9\\n\""
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n7 2\n1 5 6 2\n1 3\n3 2\n4 5\n3 7\n4 3\n4 6\n''') == '6\\n'\nassert solution('''\n9 3\n3 2 1 6 5 9\n8 9\n3 2\n2 7\n3 4\n7 6\n4 5\n2 1\n2 8\n''') == '9\\n'\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('7 2\\n1 5 6 2\\n1 3\\n3 2\\n4 5\\n3 7\\n4 3\\n4 6') == '6\\n'\n\nassert solution('9 3\\n3 2 1 6 5 9\\n8 9\\n3 2\\n2 7\\n3 4\\n7 6\\n4 5\\n2 1\\n2 8') == '9\\n'"
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('7 2\\n1 5 6 2\\n1 3\\n3 2\\n4 5\\n3 7\\n4 3\\n4 6') == 6\nassert solution('9 3\\n3 2 1 6 5 9\\n8 9\\n3 2\\n2 7\\n3 4\\n7 6\\n4 5\\n2 1\\n2 8') == 9"
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input) == output, f\"Test case {i+1} failed: expected {output}, got {solution(input)}\""
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"6\"\n"
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 2\\n1 5 6 2\\n1 3\\n3 2\\n4 5\\n3 7\\n4 3\\n4 6\") == \"6\"\nassert solution(\"9 3\\n3 2 1 6 5 9\\n8 9\\n3 2\\n2 7\\n3 4\\n7 6\\n4 5\\n2 1\\n2 8\") == \"9\"\n"
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('0010100') == '3\\n3 1 3 4\\n3 2 5 6\\n1 7'\nassert solution('111') == '-1'"
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('0010100') == '3\\n3 1 3 4\\n3 2 5 6\\n1 7'\nassert solution('111') == '-1'"
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('0010100') == 3\nassert solution('111') == -1\n"
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\") == -1\nassert solution(\"0010100\") == 3\nassert solution(\"111\") == -1"
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0010100\") == \"3 1 3 4\\n3 2 5 6\\n1 7\"\nassert solution(\"111\") == \"-1\""
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('0010100') == '3\\n3 1 3 4\\n3 2 5 6\\n1 7\\n-1'\nassert solution('111') == '-1'"
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0010100\") == \"3\\n3 1 3 4\\n3 2 5 6\\n1 7\"\nassert solution(\"111\") == \"-1\""
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(b'0010100') == 3\nassert solution(b'111') == -1"
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0010100\") == \"3\\n3 1 3 4\\n3 2 5 6\\n1 7\"\nassert solution(\"111\") == \"-1\"\n"
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '3\\n3 1 3 4\\n3 2 5 6\\n1 7'"
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n2 1 2\\n2 2 3\") == \"1\\n\"\nassert solution(\"1 3\\n3 1 2 3\\n\") == \"6\\n\"\nassert solution(\"2 4\\n2 1 2\\n3 2 3 4\\n\") == \"2\\n\"\nassert solution(\"2 2\\n3 2 2 1\\n2 1 2\\n\") == \"1\\n\"\nassert solution(\"3 7\\n2 1 2\\n2 3 4\\n3 5 6 7\\n\") == \"24\\n\""
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n2 1 2\\n2 2 3\") == \"1\\n\"\nassert solution(\"1 3\\n3 1 2 3\\n\") == \"6\\n\"\nassert solution(\"2 4\\n2 1 2\\n3 2 3 4\\n\") == \"2\\n\"\nassert solution(\"2 2\\n3 2 2 1\\n2 1 2\\n\") == \"1\\n\"\nassert solution(\"3 7\\n2 1 2\\n2 3 4\\n3 5 6 7\\n\") == \"24\\n\""
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n2 1 2\\n2 2 3\") == \"1\\n\"\nassert solution(\"1 3\\n3 1 2 3\\n\") == \"6\\n\"\nassert solution(\"2 4\\n2 1 2\\n3 2 3 4\\n\") == \"2\\n\"\nassert solution(\"2 2\\n3 2 2 1\\n2 1 2\\n\") == \"1\\n\"\nassert solution(\"3 7\\n2 1 2\\n2 3 4\\n3 5 6 7\\n\") == \"24\\n\""
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 3\\n2 1 2\\n2 2 3\\n') == '1\\n'\nassert solution('1 3\\n3 1 2 3\\n') == '6\\n'\nassert solution('2 4\\n2 1 2\\n3 2 3 4\\n') == '2\\n'\nassert solution('2 2\\n3 2 2 1\\n2 1 2\\n') == '1\\n'\nassert solution('3 7\\n2 1 2\\n2 3 4\\n3 5 6 7\\n') == '24\\n'\n\nfrom typing import List"
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(2, 3) == 1\nassert solution(1, 3) == 6\nassert solution(2, 4) == 2\nassert solution(2, 2) == 1\nassert solution(3, 7) == 24"
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n2 1 2\\n2 2 3\") == \"1\"\nassert solution(\"1 3\\n3 1 2 3\\n\") == \"6\"\nassert solution(\"2 4\\n2 1 2\\n3 2 3 4\\n\") == \"2\"\nassert solution(\"2 2\\n3 2 2 1\\n2 1 2\\n\") == \"1\"\nassert solution(\"3 7\\n2 1 2\\n2 3 4\\n3 5 6 7\\n\") == \"24\""
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n    2 3\n    2 1 2\n    2 2 3\n    ''') == '1'\n\nassert solution('''\n    1 3\n    3 1 2 3\n    ''') == '6'\n\nassert solution('''\n    2 4\n    2 1 2\n    3 2 3 4\n    ''') == '2'\n\nassert solution('''\n    2 2\n    3 2 2 1\n    2 1 2\n    ''') == '1'\n\nassert solution('''\n    3 7\n    2 1 2\n    2 3 4\n    3 5 6 7\n    ''') == '24'"
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('Input\\n2 3\\n2 1 2\\n2 2 3\\n\\nInput\\n1 3\\n3 1 2 3\\n\\nInput\\n2 4\\n2 1 2\\n3 2 3 4\\n\\nInput\\n2 2\\n3 2 2 1\\n2 1 2\\n\\nInput\\n3 7\\n2 1 2\\n2 3 4\\n3 5 6 7\\n\\nOutput\\n1\\n\\nOutput\\n6\\n\\nOutput\\n2\\n\\nOutput\\n1\\n\\nOutput\\n24') == '1\\n\\n6\\n\\n2\\n\\n1\\n\\n24'"
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"1\" # Example 1\nassert solution() == \"6\" # Example 2\nassert solution() == \"2\" # Example 3\nassert solution() == \"1\" # Example 4\nassert solution() == \"24\" # Example 5"
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 4 2 3 1\\n4\\n1 5 4 7\") == \"3\"\nassert solution(\"4\\n1 5 4 7\") == \"6\"\n"
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 4 2 3 1\\n4\\n1 5 4 7\") == \"3\"\nassert solution(\"4\\n1 5 4 7\") == \"6\""
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 3, \"The code is incorrect. Please fix it.\""
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 4 2 3 1\\n\\n4\\n1 5 4 7\") == \"3\\n\"\nassert solution(\"4\\n1 5 4 7\") == \"6\\n\"\nassert solution(\"\") == \"Error: input expected\"\n\nfrom typing import List"
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"3\\n\"\nassert solution(stdin) == \"6\\n\""
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 4 2 3 1\\n\") == \"3\"\nassert solution(\"4\\n1 5 4 7\\n\") == \"6\""
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 4 2 3 1\\n\\n4\\n1 5 4 7\") == \"3\\n6\"\nassert solution(\"4\\n1 5 4 7\") == \"6\""
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5) == \"3\\n\"\nassert solution(4) == \"6\\n\""
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(5) == \"3\"\nassert solution(4) == \"6\""
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('Input\\n2\\n1 2\\n\\nOutput\\n4\\n\\nInput\\n4\\n1 1 2 3\\n\\nOutput\\n20\\n\\nInput\\n5\\n1 1 1 1 1\\n\\nOutput\\n62') == 'Output\\n20\\n'"
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"20\", \"Test case 1\"\nassert solution(stdin) == \"62\", \"Test case 2\""
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"4\", \"Test 1\"\nassert solution(\"4\") == \"20\", \"Test 2\"\nassert solution(\"5\") == \"62\", \"Test 3\""
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1 2\\n\") == 4\nassert solution(\"4\\n1 1 2 3\\n\") == 20\nassert solution(\"5\\n1 1 1 1 1\\n\") == 62"
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"4\\n20\\n62\", \"Test failed\""
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"Output\", \"Expected output: Output, but got: \" + solution(stdin)\n"
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == 4\nassert solution(2) == 4\nassert solution(3) == 20\nassert solution(4) == 62\n"
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 4\nassert solution(5) == 20\nassert solution(6) == 62"
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1 2\\n\\n4\\n1 1 2 3\\n\\n5\\n1 1 1 1 1\") == \"4\\n\"\nassert solution(\"4\\n1 1 2 3\\n\\n5\\n1 1 1 1 1\") == \"20\\n\"\nassert solution(\"5\\n1 1 1 1 1\\n\\n6\\n1 1 1 1 1\\n\\n7\\n1 1 1 1 1\\n\\n8\\n1 1 1 1 1\") == \"62\\n\""
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"4\" # pass\nassert solution(4) == \"20\" # pass\nassert solution(5) == \"62\" # pass"
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 1\\n1 1\\n1 1\") == \"6\"\nassert solution(\"4\\n1 2\\n2 1\\n3 5\\n5 3\") == \"15\"\nassert solution(\"1\\n5 6\") == \"7\""
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    '''3\n    1 1\n    1 1\n    1 1'''\n) == '6'\n\nassert solution(\n    '''4\n    1 2\n    2 1\n    3 5\n    5 3'''\n) == '15'\n\nassert solution(\n    '''1\n    5 6'''\n) == '7'"
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 1\\n1 1\\n1 1\") == \"6\\n\"\nassert solution(\"4\\n1 2\\n2 1\\n3 5\\n5 3\\n\") == \"15\\n\"\nassert solution(\"1\\n5 6\\n\") == \"7\\n\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"6\"\nassert solution(4) == \"15\"\nassert solution(1) == \"7\""
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == 6\nassert solution(4) == 15\nassert solution(1) == 7\n\nfrom typing import List"
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n1 1\\n1 1\\n1 1\\n') == '6\\n'\nassert solution('4\\n1 2\\n2 1\\n3 5\\n5 3\\n') == '15\\n'\nassert solution('1\\n5 6\\n') == '7\\n'"
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"Output\\n15\", \"The output is incorrect. Please provide the correct input.\""
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 1\\n1 1\\n1 1\") == \"6\"\nassert solution(\"4\\n1 2\\n2 1\\n3 5\\n5 3\\n\") == \"15\"\nassert solution(\"1\\n5 6\\n\") == \"7\""
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n1 1\\n1 1\\n1 1') == '6'\nassert solution('4\\n1 2\\n2 1\\n3 5\\n5 3') == '15'\nassert solution('1\\n5 6') == '7'\n"
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"The solution is {solution(input())}, but expected {expected_output}.\""
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Test case failed.\"\nfor i in range(1, n):\n    for j in range(i+1):\n        for k in range(i+1):\n            if a_i*a_j*b_k == a_i*a_j*(b_k+1) and b_k+1 <= 30000:\n                ways += (b_k+1)*j\nprint(ways % (10**9 + 7))"
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 6"
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), \"Incorrect output\""
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\"\n"
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"Output\\n1\\n\""
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n4\\n2\\n\") == \"1\\n\"\nassert solution(\"2\\n1\\n4 4\\n2\\n\") == \"3\\n\"\nassert solution(\"3\\n3 3\\n10 10 10\\n17\\n\") == \"6\\n\"\n"
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\\n\"\nassert solution(\"2\") == \"1\\n\"\nassert solution(\"3\") == \"1\\n\"\nassert solution(\"4\") == \"1\\n\"\nassert solution(\"5\") == \"1\\n\"\nassert solution(\"6\") == \"1\\n\""
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '1\\n' # Example 1\nassert solution() == '3\\n' # Example 2\nassert solution() == '6\\n' # Example 3\nassert solution() == '6\\n' # Example 4"
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3 3 100\\n1 1 1\") == \"10\"\nassert solution(\"3 6 5 1000000007\\n1 2 3\") == \"0\"\nassert solution(\"3 5 6 11\\n1 2 1\") == \"0\""
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"10\", \"Test case 1 failed.\"\nassert solution() == \"0\", \"Test case 2 failed.\"\nassert solution() == \"0\", \"Test case 3 failed.\"\nassert solution() == \"0\", \"Test case 4 failed.\"\nassert solution() == \"0\", \"Test case 5 failed.\""
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3 3 100\\n1 1 1\") == \"10\"\nassert solution(\"3 6 5 1000000007\\n1 2 3\") == \"0\"\nassert solution(\"3 5 6 11\\n1 2 1\") == \"0\""
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, \"Test case failed!\""
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3 3 100\\n1 1 1\\n\") == \"10\"\nassert solution(\"3 6 5 1000000007\\n1 2 3\\n\") == \"0\"\nassert solution(\"3 5 6 11\\n1 2 1\\n\") == \"0\""
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\""
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r')) == '10'\nassert solution(open('input.txt', 'r')) == '0'\nassert solution(open('input.txt', 'r')) == '0'"
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"10\"\nassert solution(input()) == \"0\"\nassert solution(input()) == \"0\""
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3 3 100\\n1 1 1\") == 10\nassert solution(\"3 6 5 1000000007\\n1 2 3\") == 0\nassert solution(\"3 5 6 11\\n1 2 1\") == 0\nassert solution(\"1\\n0\") == 0"
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2 2 3\\nintel\\ncode\\nch allenge\\n\") == \"YES\"\nassert solution(\"4\\n1 2 3 1\\na\\nbcdefghi\\njklmnopqrstu\\nvwxyz\\n\") == \"NO\"\nassert solution(\"4\\n13 11 15 15\\nto be or not to be that is the question\\nwhenever tis nobler in the mind to suffer\\nthe slings and arrows of outrageous fortune\\nor to take arms against a sea of troubles\\n\") == \"YES\"\n"
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2 2 3\\nintel\\ncode\\nch allenge\") == \"YES\"\nassert solution(\"4\\n1 2 3 1\\na\\nbcdefghijklmnopqrstuvwxyz\\njklmnopqrstuvwxyz\\nuvwxyz\") == \"NO\"\nassert solution(\"4\\n13 11 15 15\\nto be or not to be that is the question\\nwhether tis nobler in the mind to suffer\\the slings and arrows of outrageous fortune\\nor to take arms against a sea of troubles\") == \"YES\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Input\") == \"YES\", \"Output\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Input\") == \"YES\"\nassert solution(\"Input\") == \"NO\"\nassert solution(\"Input\") == \"YES\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n2 2 3\\nintel\\ncode\\nch allenge\") == \"YES\"\nassert solution(\"4\\n1 2 3 1\\na\\nbcdefghi\\njklmnopqrstu\\nvwxyz\") == \"NO\"\nassert solution(\"4\\n13 11 15 15\\ntis nobler in the mind to suffer\\nwhether tis nobler in the mind to suffer\\nthe slings and arrows of outrageous fortune\\nor to take arms against a sea of troubles\") == \"YES\"\n\nprint(\"All test cases pass.\")"
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Output: {solution(input())}, Expected Output: {expected_output}\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n2 2 3\\nintel\\ncode\\nch allenge\\n\") == \"YES\"\nassert solution(\"4\\n1 2 3 1\\na\\nbcdefghijklmnopqrstuvwxyz\\njklmnopqrstuvwxyz\\nuvwxyz\\n\") == \"NO\"\nassert solution(\"4\\n13 11 15 15\\nto be or not to be that is the question\\nwhether tis nobler in the mind to suffer\\the slings and arrows of outrageous fortune\\nor to take arms against a sea of troubles\\n\") == \"YES\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n2 2 3\\nintel\\ncode\\nch allenge\\n') == 'YES'\nassert solution('4\\n1 2 3 1\\na\\nbcdfghij\\nklmnopqrstuvwxyz\\n') == 'NO'\nassert solution('4\\n13 11 15 15\\nto be or not to be that is the question\\nwhether tis nobler in the mind to suffer\\nthe slings and arrows of outrageous fortune\\nor to take arms against a sea of troubles\\n') == 'YES'"
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n2 2 3\\nintel\\ncode\\nch allenge\") == \"YES\"\nassert solution(\"4\\n1 2 3 1\\na\\nbcdfghi\\njklmnopqrstu\\nvwxyz\\n\") == \"NO\"\nassert solution(\"4\\n13 11 15 15\\ntis nobler in the mind to suffer\\noutrageous fortune\\nagainst a sea of troubles\\n\") == \"YES\"\n"
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n2 2 3\\nintel\\ncode\\nch allenge') == 'YES'\nassert solution('4\\n1 2 3 1\\na\\nbcdfghij\\nklnprstuv\\nvwxyz') == 'NO'\nassert solution('4\\n13 11 15 15\\ntis nobler in the mind to suffer\\noutrageous fortune or to take arms against a sea of troubles') == 'YES'"
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3 1 5\") == \"26\\n\"\nassert solution(\"1\\n10\") == \"10\\n\""
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3 1 5\\n\") == \"26\\n\"\nassert solution(\"1\\n10\\n\") == \"10\\n\""
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n3 1 5\") == \"26\\n\"\nassert solution(\"1\\n10\") == \"10\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n3 1 5\") == \"26\"\nassert solution(\"1\\n10\") == \"10\""
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"26\\n\", \"Test case 1 failed\"\n\nassert solution(stdin) == \"10\\n\", \"Test case 2 failed\"\n\nassert solution(stdin) == \"50\\n\", \"Test case 3 failed\"\n\nassert solution(stdin) == \"100\\n\", \"Test case 4 failed\"\n\nassert solution(stdin) == \"500\\n\", \"Test case 5 failed\""
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n3 1 5\\n\") == \"26\\n\"\nassert solution(\"1\\n10\\n\") == \"10\\n\""
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n3 1 5\\n') == '26\\n'\nassert solution('1\\n10\\n') == '10\\n'"
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n3 1 5\\n\") == \"26\\n\"\nassert solution(\"1\\n10\\n\") == \"10\\n\""
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n3 1 5\\n\") == \"26\\n\"\nassert solution(\"1\\n10\\n\") == \"10\\n\""
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3 1 5\") == \"26\"\nassert solution(\"1\\n10\") == \"10\""
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 4\\n1 3 5\\n') == '3\\n'\nassert solution('3 40\\n10 30 50\\n') == '32\\n'"
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4\\n1 3 5\\n\") == \"3\\n\"\nassert solution(\"3 40\\n10 30 50\\n\") == \"32\\n\""
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4\\n1 3 5\") == \"3\"\nassert solution(\"3 40\\n10 30 50\") == \"32\""
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4\\n1 3 5\") == \"3\\n\"\nassert solution(\"3 40\\n10 30 50\") == \"32\\n\"\nassert solution(\"1 2 3 4 5\") == \"0\\n\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40\") == \"0\\n\""
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 4\\n1 3 5\\n') == '3\\n'\nassert solution('3 40\\n10 30 50\\n') == '32\\n'\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\n1 3 5\") == \"3\\n\"\nassert solution(\"3 40\\n10 30 50\") == \"32\\n\""
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4\\n1 3 5\\n\") == \"3\"\nassert solution(\"3 40\\n10 30 50\\n\") == \"32\""
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\n1 3 5\\n\") == \"3\\n\"\nassert solution(\"3 40\\n10 30 50\\n\") == \"32\\n\""
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4\\n1 3 5\\n\") == \"3\\n\"\nassert solution(\"3 40\\n10 30 50\\n\") == \"32\\n\"\n"
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4\\n1 3 5\\n\") == \"3\\n\"\nassert solution(\"3 40\\n10 30 50\\n\") == \"32\\n\""
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1, 1) == ['1', '4', '5', '6', '7', '8', '9']\nassert solution(2, 1) == ['1', '2', '4']\nassert solution(3, 1) == ['1', '2']\nassert solution(4, 1) == ['1', '2', '3', '4']\nassert solution(5, 1) == ['1', '2', '3', '4', '5']\nassert solution(6, 1) == ['1', '2', '3', '4', '5', '6']\nassert solution(7, 1) == ['1', '2', '3', '4', '5', '6', '7']\nassert solution(8, 1) == ['1', '2', '3', '4', '5', '6', '7', '8']\nassert solution(9, 1) == ['1', '2', '3', '4', '5', '6', '7', '8', '9']\n\nassert solution(1, 2) == ['1', '2', '4']\nassert solution(2, 2) == ['1', '2', '4']\nassert solution(3, 2) == ['1', '2', '4']\nassert solution(4, 2) == ['1', '2', '3', '4']\nassert solution(5, 2) == ['1', '2', '3', '4', '5']\nassert solution(6, 2) == ['1', '2', '3', '4', '5', '6']\nassert solution(7, 2) == ['1', '2', '3', '4', '5', '6', '7']\nassert solution(8, 2) == ['1', '2', '3', '4', '5', '6', '7', '8']\nassert solution(9, 2) == ['1', '2', '3', '4', '5', '6', '7', '8', '9']\n\nassert solution(1, 3) == ['1', '2', '4']\nassert solution(2, 3) == ['1', '2', '4']\nassert solution(3, 3) == ['1', '2', '4']\nassert solution(4, 3) == ['1', '2', '3', '4']\nassert solution(5, 3) == ['1', '2', '3', '4', '5']\nassert solution(6, 3) == ['1', '2', '3', '4', '5', '6']\nassert solution(7, 3) == ['1', '2', '3', '4', '5', '6', '7']\nassert solution(8, 3) == ['1', '2', '3', '4', '5', '6', '7', '8']\nassert solution(9, 3) == ['1', '2', '3', '4', '5', '6', '7', '8', '9']\n\nassert solution(1, 4) == ['1', '4', '5', '6', '7', '8', '9']\nassert solution(2, 4) == ['1', '4', '5', '6', '7', '8', '9']\nassert solution(3, 4) == ['1', '4', '5', '6', '7', '8', '9']\nassert solution(4, 4) == ['1', '4', '5', '6', '7', '8', '9']\nassert solution(5, 4) == ['1', '4', '5', '6', '7', '8', '9']\nassert solution(6, 4) == ['1', '4', '5', '6', '7', '8', '9']\nassert solution(7, 4) == ['1', '4', '5', '6', '7', '8', '9']\nassert solution(8, 4) == ['1', '4', '5', '6', '7', '8', '9']\nassert solution(9, 4) == ['1', '4', '5', '6', '7', '8', '9']\n\nassert solution(1, 5) == ['1', '2', '4']\nassert solution(2, 5) == ['1', '"
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''9 1\n1 1\n5 10\n1 3\n11 14\n5 5\n10 10\n3 6\n6 12\n7 7\n4 11''') == '''1 4 5 6 7 8 9'''\n\nassert solution('''5 1\n1 1\n3 3\n2 3\n1 2\n3 4\n4 5''') == '''1 2 4'''\n\nassert solution('''5 1\n1 1\n3 3\n3 3\n4 4\n4 4\n5 5''') == '''1 2'''\n\nfrom typing import List"
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n1\\n5 10\\n1 3\\n11 14\\n5 5\\n10 10\\n3 6\\n6 12\\n7 7\\n4 11\\n\") == \"1 4 5 6 7 8 9\\n\"\nassert solution(\"5 1\\n1 1\\n3 3\\n2 3\\n1 2\\n3 4\\n4 5\\n\") == \"1 2 4\\n\"\nassert solution(\"5 1\\n1 1\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5\\n\") == \"1 2\\n\"\nassert solution(\"1\\n5 1\\n1 1\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5\\n\") == \"1 2\\n\"\nassert solution(\"1\\n5 1\\n1 1\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5\\n\") == \"1 2\\n\"\nassert solution(\"5 1\\n1 1\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5\\n\") == \"1 2\\n\""
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"9 1\\n1 1\\n5 10\\n1 3\\n11 14\\n5 5\\n10 10\\n3 6\\n6 12\\n7 7\\n4 11\") == [\"1\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"]\nassert solution(\"5 1\\n1 1\\n3 3\\n2 3\\n1 2\\n3 4\\n4 5\\n4 5\\n5 5\\n5 5\") == [\"1\", \"2\", \"4\"]\nassert solution(\"5 1\\n1 1\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5\\n5 5\\n5 5\\n5 5\") == [\"1\", \"2\"]\nassert solution(\"5 1\\n1 1\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\") == [\"1\", \"2\", \"4\"]"
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    9 1\n    1 1\n    5 10\n    1 3\n    11 14\n    5 5\n    10 10\n    3 6\n    6 12\n    7 7\n    4 11\n    \"\"\"\n) == \"1 4 5 6 7 8 9\"\n\nassert solution(\n    \"\"\"\n    5 1\n    1 1\n    3 3\n    2 3\n    1 2\n    3 4\n    4 5\n    \"\"\"\n) == \"1 2 4\"\n\nassert solution(\n    \"\"\"\n    5 1\n    1 1\n    3 3\n    3 3\n    4 4\n    4 4\n    5 5\n    \"\"\"\n) == \"1 2\""
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"1 4 5 6 7 8 9\", \"Test 1 failed\""
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n9 1\n1 1\n5 10\n1 3\n11 14\n5 5\n10 10\n3 6\n6 12\n7 7\n4 11\n''') == ['1', '4', '5', '6', '7', '8', '9']\n\nassert solution('''\n5 1\n1 1\n3 3\n2 3\n1 2\n3 4\n4 5\n''') == ['1', '2', '4']\n\nassert solution('''\n5 1\n1 1\n3 3\n3 3\n4 4\n4 4\n5 5\n''') == ['1', '2']\n\nassert solution('''\n5 1\n1 1\n3 3\n3 3\n4 4\n4 4\n5 5\n''') == ['1', '2']"
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == output, f\"Test failed: {output}!= {solution(stdin)}\""
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('9 1\\n1 1\\n5 10\\n1 3\\n11 14\\n5 5\\n10 10\\n3 6\\n6 12\\n7 7\\n4 11') == '1 4 5 6 7 8 9'\nassert solution('5 1\\n1 1\\n3 3\\n2 3\\n1 2\\n3 4\\n4 5\\n') == '1 2 4'\nassert solution('5 1\\n1 1\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5\\n') == '1 2'\nassert solution('5 1\\n1 1\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5\\n') == '1 2'"
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 2\\n2 1\\n1 2.0\\n1 3.100\\n') == '1\\n'\nassert solution('3 3\\n1 5.0\\n2 5.5\\n3 6.0\\n') == '0\\n'\nassert solution('6 3\\n1 14.284235\\n2 17.921382\\n1 20.328172\\n3 20.842331\\n1 25.790145\\n1 27.204125\\n') == '2\\n'"
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == 1"
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 2\\n2 1\\n1 2.0\\n1 3.100\\n') == '1\\n'\nassert solution('3 3\\n1 5.0\\n2 5.5\\n3 6.0\\n') == '0\\n'\nassert solution('6 3\\n1 14.284235\\n2 17.921382\\n1 20.328172\\n3 20.842331\\n1 25.790145\\n1 27.204125\\n') == '2\\n'"
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 2\\n2 1\\n1 2.0\\n1 3.100') == '1\\n'\nassert solution('3 3\\n1 5.0\\n2 5.5\\n3 6.0') == '0\\n'\nassert solution('6 3\\n1 14.284235\\n2 17.921382\\n1 20.328172\\n3 20.842331\\n1 25.790145\\n1 27.204125') == '2\\n'"
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 2\\n2 1\\n1 2.0\\n1 3.100\\n\\n3 3\\n1 5.0\\n2 5.5\\n3 6.0\\n\\n6 3\\n1 14.284235\\n2 17.921382\\n1 20.328172\\n3 20.842331\\n1 25.790145\\n1 27.204125\\n') == '1'\nassert solution('3 3\\n1 5.0\\n2 5.5\\n3 6.0\\n\\n6 3\\n1 14.284235\\n2 17.921382\\n1 20.328172\\n3 20.842331\\n1 25.790145\\n1 27.204125\\n') == '0'\nassert solution('6 3\\n1 14.284235\\n2 17.921382\\n1 20.328172\\n3 20.842331\\n1 25.790145\\n1 27.204125\\n') == '2'"
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\nfor i, (stdin, expected) in enumerate(test_cases):\n    assert solution(stdin) == expected, f\"Test case {i+1} failed\"\n"
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 2\\n2 1\\n1 2.0\\n1 3.100') == '1'\nassert solution('3 3\\n1 5.0\\n2 5.5\\n3 6.0') == '0'\nassert solution('6 3\\n1 14.284235\\n2 17.921382\\n1 20.328172\\n3 20.842331\\n1 25.790145\\n1 27.204125') == '2'"
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\\n2 1\\n1 2.0\\n1 3.100\\n\") == 1\nassert solution(\"3 3\\n1 5.0\\n2 5.5\\n3 6.0\\n\") == 0\nassert solution(\"6 3\\n1 14.284235\\n2 17.921382\\n1 20.328172\\n3 20.842331\\n1 25.790145\\n1 27.204125\\n\") == 2"
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"1\"\nassert solution(stdin) == \"0\"\nassert solution(stdin) == \"2\""
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 2\\n2 3 6 5 4 10\") == \"3\\n\""
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"3\""
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 2\\n2 3 6 5 4 10\") == \"3\"\nassert solution(\"7 3\\n1 3 6 5 4 10\") == \"3\"\nassert solution(\"7 4\\n1 3 6 5 4 10\") == \"4\"\nassert solution(\"8 2\\n2 3 6 5 4 10\") == \"4\"\nassert solution(\"9 2\\n2 3 6 5 4 10\") == \"5\""
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 3\nassert solution == 2\nassert solution == 1\nassert solution == 0"
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n6 2\n2 3 6 5 4 10\n\"\"\".strip()\n) == \"3\\n\""
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"3\""
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"Test failed\""
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 2\\n2 3 6 5 4 10\\n\") == \"3\"\nassert solution(\"7 3\\n4 5 6 7 8 9\\n\") == \"4\""
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 2\\n2 3 6 5 4 10\") == \"3\\n\""
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 2\\n2 3 6 5 4 10\") == \"3\""
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(solution_input) == solution_output, f\"Test case {i+1} failed: expected output: {solution_output}, actual output: {solution(solution_input)}\"\n"
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\"\nassert solution(\"3\\n1 2 3\\n\") == \"4\\n\"\nassert solution(\"9\\n1 2 1 3 2 2 2 2 3\\n\") == \"10\\n\""
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\"\nassert solution(\"3\\n1 2 3\\n\") == \"4\\n\"\nassert solution(\"9\\n1 2 1 3 2 2 2 2 3\\n\") == \"10\\n\""
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Input\\n2\\n1 2\\nOutput\\n2\\n\\nInput\\n3\\n1 2 3\\nOutput\\n4\\n\\nInput\\n9\\n1 2 1 3 2 2 2 2 3\\nOutput\\n10\\n\") == \"Output\\n2\\n\\nOutput\\n4\\n\\nOutput\\n10\\n\"\nprint(\"All test cases pass\")"
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\"\n"
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\"\nassert solution(\"3\\n1 2 3\\n\") == \"4\\n\"\nassert solution(\"9\\n1 2 1 3 2 2 2 2 3\\n\") == \"10\\n\""
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed. Expected: {expected_output}, got: {solution(input())}\""
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '4'\nassert solution('9') == '10'"
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\"\nassert solution(\"3\\n1 2 3\\n\") == \"4\\n\"\nassert solution(\"9\\n1 2 1 3 2 2 2 2 3\\n\") == \"10\\n\""
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\"\nassert solution(\"3\\n1 2 3\\n\") == \"4\\n\"\nassert solution(\"9\\n1 2 1 3 2 2 2 2 3\\n\") == \"10\\n\"\nassert solution(\"1\\n2\\n\") == \"1\\n\"\nassert solution(\"1\\n\\n\") == \"1\\n\""
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n2\\n\") == \"4\"\n\nfor i in range(2, int(stdin.strip())+1):\n    for j in range(i):\n        if i < j < i+1:\n            continue\n        if sum(a_i for a_i in range(1, j+1)) == j:\n            print(i, end=\" \")\n    print()"
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"4\\n\", \"Test Failed\"\nprint(\"Test Passed\")\n"
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '4\\n', 'Incorrect output'"
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"4\\n\", \"Incorrect solution\"\n"
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '4', \"The correct output should be 4\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"4\\n\"\n"
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == '107465198'\nassert solution(4) == '215093774'\nassert solution(5) == '335544317'\nassert solution(6) == '461088633'\nassert solution(7) == '592277461'\nassert solution(8) == '729386290'\nassert solution(9) == '874695121'\nassert solution(10) == '1028570642'\nassert solution(11) == '1189341163'\nassert solution(12) == '1358062494'\nassert solution(13) == '1534844925'\nassert solution(14) == '1719788856'\nassert solution(15) == '1913195387'\nassert solution(16) == '2115300048'\nassert solution(17) == '2325515549'\nassert solution(18) == '2544852870'\nassert solution(19) == '2772523401'\nassert solution(20) == '3009649342'\nassert solution(21) == '3256560003'\nassert solution(22) == '3513575504'\nassert solution(23) == '3780919935'\nassert solution(24) == '4058804626'\nassert solution(25) == '4347440867'\nassert solution(26) == '4646940988'\nassert solution(27) == '4957436109'\nassert solution(28) == '5279049040'\nassert solution(29) == '5612000001'\nassert solution(30) == '5956410002'\nassert solution(31) == '6312480003'\nassert solution(32) == '6680320004'\nassert solution(33) == '7059940005'\nassert solution(34) == '7451560006'\nassert solution(35) == '7855300007'\nassert solution(36) == '8271360008'\nassert solution(37) == '8709950009'\nassert solution(38) == '9161270010'\nassert solution(39) == '9625440011'\nassert solution(40) == '10102680012'\nassert solution(41) == '10593090013'\nassert solution(42) == '11097880014'\nassert solution(43) == '11617150015'\nassert solution(44) == '12151000016'\nassert solution(45) == '12700540017'\nassert solution(46) == '13265970018'\nassert solution(47) == '13846300019'\nassert solution(48) == '14442640020'\nassert solution(49) == '15055100021'\nassert solution(50) == '15684880022'\nassert solution(51) == '16331100023'\nassert solution(52) == '16994970024'\nassert solution(53) == '17676500025'\nassert solution(54)"
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"4\\n\"\nprint(\"Correct!\")"
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"4\", \"The code is not correct.\""
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n\") == \"4\\n\", \"Input must be 2\"\n\nn = int(stdin.readline())\n\ncount = 0\nfor i in range(1, n + 1):\n    count += sum(1 for j in range(i) if a[i] == a[j]) % 1000000007\n\nprint(count)"
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 6\\n1 5 1 4\\n') == '5'\nassert solution('4 5\\n1 5 1 4\\n') == '10'\nassert solution('4 4\\n1 5 1 4\\n') == '10'\nassert solution('4 6\\n1 5 1 4\\n') == '10'"
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(b'4 6\\n1 5 1 4\\n') == '5'\nassert solution(b'5 5\\n2 3 1 1\\n') == '4'\nassert solution(b'3 10\\n1 1 2 3 4\\n') == '6'\nassert solution(b'6 6\\n4 3 2 1 3\\n') == '5'\nassert solution(b'6 10\\n1 5 1 4 6\\n') == '9'\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 6\\n1 5 1 4\") == \"5\"\nassert solution(\"5 3\\n2 5 2 3\") == \"7\"\nassert solution(\"5 6\\n1 5 1 4\") == \"5\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\"\nassert solution(\"5 3\\n2 5 2 3\") == \"7\"\n"
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 6\\n1 5 1 4\") == \"5\\n\"\nassert solution(\"8 9 7 5 6 9\\n\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\\n\"\nassert solution(\"2 5\\n4 3 1 2\") == \"2\\n\"\n"
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"5\", \"Expected output is 5, but got: \" + solution(input())"
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 6\\n1 5 1 4\\n\") == \"5\"\nassert solution(\"1 10\\n2 5 1 2\\n3 4 2 3\\n4 3 1 4\\n\") == \"1\"\nassert solution(\"2 5\\n1 1 1 1\\n2 2 2 2\\n3 3 3 3\\n\") == \"2\"\nassert solution(\"1 10\\n2 5 1 2\\n3 4 2 3\\n4 3 1 4\\n5 2 1 5\\n6 1 1 6\\n\") == \"2\""
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 6\\n1 5 1 4\\n\") == \"5\\n\"\nassert solution(\"5 6\\n1 5 1 4\\n\") == \"6\\n\"\nassert solution(\"4 6\\n1 4 2 3\\n\") == \"1\\n\"\nassert solution(\"5 6\\n1 4 2 3\\n\") == \"3\\n\"\nassert solution(\"4 6\\n1 4 2 3\\n\") == \"1\\n\"\nassert solution(\"5 6\\n1 5 2 3\\n\") == \"2\\n\"\nassert solution(\"5 6\\n1 5 2 3\\n\") == \"2\\n\"\nassert solution(\"5 6\\n1 5 2 3\\n\") == \"2\\n\"\nassert solution(\"5 6\\n1 5 2 3\\n\") == \"2\\n\"\nassert solution(\"5 6\\n1 5 2 3\\n\") == \"2\\n\"\nassert solution(\"5 6\\n1 5 2 3\\n\") == \"2\\n\"\nassert solution(\"5 6\\n1 5 2 3\\n\") == \"2\\n\"\nassert solution(\"5 6\\n1 5 2 3\\n\") == \"2\\n\"\nassert solution(\"5 6\\n1 5 2 3\\n\") == \"2\\n\""
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_data) == output_data, f\"Incorrect solution for the given constraints: {input_data}, {output_data}\"\n"
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 6\\n1 5 1 4\\n\") == \"5\\n\""
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 6\\n1 5 1 4\\n\") == \"5\"\n"
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"---\") == \"3\""
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('+-+-+') == '1'"
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"+-+-+\") == \"1\"\nassert solution(\"---\") == \"3\""
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"+-+-+\") == \"1\"\nassert solution(\"---\") == \"3\""
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"+-+-+\") == \"1\"\nassert solution(\"---\") == \"3\""
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"1\"  # Test case 1\nassert solution(\"---\") == \"3\"  # Test case 2"
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"+-+-+\") == \"1\"\nassert solution(\"---\") == \"3\""
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('+-+-+') == 1\nassert solution('---') == 3"
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"+-+-+\") == \"1\\n\", \"Test 1\"\nassert solution(\"---\") == \"3\\n\", \"Test 2\""
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"1\\n\"\nassert solution(\"---\") == \"3\\n\""
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\\n\") == \"10110\""
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\\n') == '10110'\n\nassert solution('10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\\n') == '10110'\n\nassert solution('10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\\n') == '10110'\n\nassert solution('10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\\n') == '10110'\n\nassert solution('10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\\n') == '10110'\n\nassert solution('10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\\n') == '10110'"
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\\n\") == \"10110\", \"Test failed\"\n"
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\\n') == '10110'"
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\") == \"10110\", \"Test Case 1 Failed\"\n\nassert solution(\"10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\") == \"10110\", \"Test Case 2 Failed\"\n\nassert solution(\"10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\") == \"10110\", \"Test Case 3 Failed\"\n\nassert solution(\"10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\") == \"10110\", \"Test Case 4 Failed\"\n\nassert solution(\"10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\") == \"10110\", \"Test Case 5 Failed\"\n\nassert solution(\"10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\") == \"10110\", \"Test Case 6 Failed\"\n\nassert solution(\"10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\") == \"10110\", \"Test Case 7 Failed\"\n\nassert solution(\"10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\") == \"10110\", \"Test Case 8 Failed\"\n\nassert solution(\"10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\") == \"10110\", \"Test Case 9 Failed\"\n\nassert solution(\"10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\") == \"10110\", \"Test Case 10 Failed\""
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8') == '10110'"
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\\n\") == \"10110\", \"Incorrect output\"\n"
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\") == \"10110\"  # Add your solution here"
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\\n') == '10110'\n"
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\\n') == '10110\\n'"
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\") == \"2\"\nassert solution(\"6 3 2\\n1 3 2 2 3 1\\n1 2 3\") == \"2\"\n"
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\") == \"2\"\nassert solution(\"6 3 2\\n1 3 2 2 3 1\\n1 2 3\") == \"2\""
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2\\n1 3\""
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == output, f\"Expected: {output}, got: {solution(stdin)}\""
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\") == 2\nassert solution(\"6 3 2\\n1 3 2 2 3 1\\n1 2 3\") == 2\nassert solution(\"5 1 1\\n1 2 3\\n2 3 4\") == 1\nassert solution(\"6 2 2\\n1 3 2 2 3 1\\n1 2 3\") == 0\nassert solution(\"7 2 2\\n1 3 2 2 3 1\\n1 2 3\") == 0"
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\\n\") == \"2\\n1 3\\n\"\nassert solution(\"6 3 2\\n1 3 2 2 3 1\\n1 2 3\\n\") == \"2\\n1 2\\n\""
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\") == 2\nassert solution(\"6 3 2\\n1 3 2 2 3 1\\n1 2 3\") == 2\nassert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\") == 2\nassert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\") == 2\nassert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\") == 2\nassert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\") == 2\nassert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\") == 2"
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\") == \"2\"\nassert solution(\"6 3 2\\n1 3 2 2 3 1\\n1 2 3\") == \"2\"\nassert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\") == \"2\"\nassert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\") == \"2\"\nassert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\") == \"2\"\nassert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\") == \"2\""
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\") == 2\nassert solution(\"6 3 2\\n1 3 2 2 3 1\\n1 2 3\") == 2"
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 1 2\\n1 3\\n1 2\\n\\n3 3 1\\n2\\n1 2\\n1 3\\n2 3\\n\") == \"2\\n\"\nassert solution(\"3 3 1\\n2\\n1 2\\n1 3\\n2 3\\n\") == \"0\\n\"\nassert solution(\"5 1 4\\n2\\n1 2\\n\\n4 3\\n3\\n1 3\\n\\n2 4\\n1 2\\n\") == \"2\\n\""
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 1 2\\n1 3\\n1 2\\n\\n3 3 1\\n2\\n1 2\\n1 3\\n2 3\\n\") == \"2\"\nassert solution(\"3 3 1\\n2\\n1 2\\n1 3\\n2 3\\n\") == \"0\"\n\nprint(\"All test cases passed\")"
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Test failed for {input()} and output {output}.\""
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 1 2\\n1 3\\n1 2\\n\") == \"2\"\n\nassert solution(\"3 3 1\\n2\\n1 2\\n1 3\\n2 3\\n\") == \"0\""
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, but got: {solution(stdin)}\""
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 2, \"Please provide the correct solution\"\n"
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n4 1 2\n1 3\n1 2\n''') == '2'\n\nassert solution('''\n3 3 1\n2\n1 2\n1 3\n2 3\n''') == '0'\n\nassert solution('''\n4 1 2\n1 3\n1 2\n''') == '2'"
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Input\") == \"Output\"\n"
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Input\\n4 1 2\\n1 3\\n1 2\\n\\nInput\\n3 3 1\\n2\\n1 2\\n1 3\\n2 3\\n\") == \"Output\\n2\\n\\n\"\n"
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n4 1 2\n1 3\n1 2\n\"\"\"\n) == \"2\"\n\nassert solution(\n\"\"\"\n3 3 1\n2\n1 2\n1 3\n2 3\n\"\"\"\n) == \"0\""
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n10 2 3 5 4 2\\n\") == \"3\"\nassert solution(\"4\\n100 100 100 100\\n\") == \"1\"\nassert solution(\"8\\n7 6 5 4 3 2 2 3\\n\") == \"4\""
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n10 2 3 5 4 2\") == \"3\", \"Test 1 failed\"\nassert solution(\"4\\n100 100 100 100\") == \"1\", \"Test 2 failed\"\nassert solution(\"8\\n7 6 5 4 3 2 2 3\") == \"4\", \"Test 3 failed\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n10 2 3 5 4 2\\n\\n4\\n100 100 100 100\\n\\n8\\n7 6 5 4 3 2 2 3\\n\") == \"3\\n\"\nassert solution(\"4\\n100 100 100 100\\n\\n8\\n7 6 5 4 3 2 2 3\\n\") == \"1\\n\"\nassert solution(\"6\\n10 2 3 5 4 2\\n\\n4\\n100 100 100 100\\n\\n8\\n7 6 5 4 3 2 2 3\\n\") == \"3\\n\""
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n10 2 3 5 4 2\") == \"3\\n\", \"Output: {}\".format(solution(\"6\\n10 2 3 5 4 2\"))\nassert solution(\"4\\n100 100 100 100\") == \"1\\n\", \"Output: {}\".format(solution(\"4\\n100 100 100 100\"))\nassert solution(\"8\\n7 6 5 4 3 2 2 3\") == \"4\\n\", \"Output: {}\".format(solution(\"8\\n7 6 5 4 3 2 2 3\"))"
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(6, \"10 2 3 5 4 2\") == \"3\"\nassert solution(4, \"100 100 100 100\") == \"1\"\nassert solution(8, \"7 6 5 4 3 2 2 3\") == \"4\""
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n10 2 3 5 4 2\") == \"3\"\nassert solution(\"4\\n100 100 100 100\") == \"1\"\nassert solution(\"8\\n7 6 5 4 3 2 2 3\") == \"4\""
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n10 2 3 5 4 2\") == \"3\\n\", \"Test 1\"\nassert solution(\"4\\n100 100 100 100\") == \"1\\n\", \"Test 2\"\nassert solution(\"8\\n7 6 5 4 3 2 2 3\") == \"4\\n\", \"Test 3\""
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n10 2 3 5 4 2\\n\\n4\\n100 100 100 100\\n\\n8\\n7 6 5 4 3 2 2 3\\n\") == \"3\\n\\n1\\n\"\nassert solution(\"4\\n100 100 100 100\\n\\n8\\n7 6 5 4 3 2 2 3\\n\") == \"1\\n\"\nassert solution(\"6\\n10 2 3 5 4 2\\n\\n4\\n100 100 100 100\\n\\n8\\n7 6 5 4 3 2 2 3\\n\") == \"3\\n\\n1\\n\""
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 5"
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n10 2 3 5 4 2\") == \"3\"\nassert solution(\"4\\n100 100 100 100\") == \"1\"\nassert solution(\"8\\n7 6 5 4 3 2 2 3\") == \"4\""
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 3\\n1 2\\n1 1\\n3 1 3 2\\n2 1 1') == 'Yes\\n2\\n2 3 '\nassert solution('6 5\\n2 1 2\\n2 1 2\\n3 1 2 3\\n2 1 5\\n2 4 4\\n2 4 4') == 'Yes\\n0'\nassert solution('4 3\\n4 3 2 2 1\\n3 1 1 3\\n3 2 3 3\\n2 3 1') == 'No'"
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2\\n1 1\\n3 1 3 2\\n2 1 1\") == \"Yes\\n2\\n2 3\"\nassert solution(\"6 5\\n2 1 2\\n2 1 2\\n3 1 2 3\\n2 1 5\\n2 4 4\\n2 4 4\") == \"Yes\\n0\"\nassert solution(\"4 3\\n4 3 2 2 1\\n3 1 1 3\\n3 2 3 3\\n2 3 1\") == \"No\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"test_input.txt\", \"r\").read()) == \"Yes\\n2\\n2 3\"\nassert solution(open(\"test_input.txt\", \"r\").read()) == \"Yes\\n0\"\nassert solution(open(\"test_input.txt\", \"r\").read()) == \"No\""
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 3\\n1 2\\n1 1\\n3 1 3 2\\n2 1 1') == 'No'\nassert solution('6 5\\n2 1 2\\n2 1 2\\n3 1 2 3\\n2 1 5\\n2 4 4\\n2 4 4') == 'No'\nassert solution('4 3\\n4 3 2 2 1\\n3 1 1 3\\n3 2 3 3\\n2 3 1') == 'No'\nprint('All tests passed!')"
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 5\\n2 1 2\\n2 1 2\\n3 1 2 3\\n2 1 5\\n2 4 4\\n2 4 4\") == \"Yes\\n0\"\n\nassert solution(\"4 3\\n4 3 2 2 1\\n3 1 1 3\\n3 2 3 3\\n2 3 1\") == \"No\"\n\nassert solution(\"4 3\\n1 2\\n1 1\\n3 1 3 2\") == \"Yes\"\n\nassert solution(\"4 3\\n1 2\\n1 1\\n3 1 3 2\") == \"No\""
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n1 2\\n1 1\\n3 1 3 2\\n2 1 1\") == \"Yes\\n2\\n2 3\"\nassert solution(\"6 5\\n2 1 2\\n2 1 2\\n3 1 2 3\\n2 1 5\\n2 4 4\\n2 4 4\") == \"Yes\\n0\"\nassert solution(\"4 3\\n4 3 2 2 1\\n3 1 1 3\\n3 2 3 3\\n2 3 1\") == \"No\""
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    4 3\n    1 2\n    1 1\n    3 1 3 2\n    2 1 1\n    \"\"\"\n) == \"Yes\\n2\\n2 3 \"\n\nassert solution(\n    \"\"\"\n    6 5\n    2 1 2\n    2 1 2\n    3 1 2 3\n    2 1 5\n    2 4 4\n    2 4 4\n    \"\"\"\n) == \"Yes\\n0\"\n\nassert solution(\n    \"\"\"\n    4 3\n    4 3 2 2 1\n    3 1 1 3\n    3 2 3 3\n    2 3 1\n    \"\"\"\n) == \"No\""
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n1 2\\n1 1\\n3 1 3 2\\n2 1 1\") == \"Yes\\n2\\n2 3\"\nassert solution(\"6 5\\n2 1 2\\n2 1 2\\n3 1 2 3\\n2 1 5\\n2 4 4\\n2 4 4\") == \"Yes\\n0\"\nassert solution(\"4 3\\n4 3 2 2 1\\n3 1 1 3\\n3 2 3 3\\n2 3 1\") == \"No\""
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"No\""
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n1 2\\n1 1\\n3 1 3 2\\n2 1 1\") == \"Yes\\n2\\n2 3 \"\nassert solution(\"6 5\\n2 1 2\\n2 1 2\\n3 1 2 3\\n2 1 5\\n2 4 4\\n2 4 4\") == \"Yes\\n0\"\nassert solution(\"4 3\\n4 3 2 2 1\\n3 1 1 3\\n3 2 3 3\\n2 3 1\") == \"No\""
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(4) == '20'\n"
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\") == 20, \"Test Case 1 failed\"\nassert solution(\"6\") == 20, \"Test Case 2 failed\"\nassert solution(\"7\") == 20, \"Test Case 3 failed\"\nassert solution(\"9\") == 10, \"Test Case 4 failed\"\nassert solution(\"10\") == 10, \"Test Case 5 failed\""
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"20\\n0 2 1 4 3\" # correct output\n"
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\") == \"20\"\nassert solution(\"5\") == \"0 2 1 4 3\""
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\") == \"20\\n0 2 1 4 3\"\nassert solution(\"6\") == \"15\\n0 1 3 5 4 2\"\nassert solution(\"1\") == \"1\\n0\"\nassert solution(\"3\") == \"4\\n2 0\"\nassert solution(\"5\") == \"20\\n3 0 1 4 2\"\n"
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\") == \"20\\n0 2 1 4 3\""
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4') == '20\\n0 2 1 4 3'\nassert solution('6') == '20\\n0 2 3 1 4 5 6'\nassert solution('10') == '20\\n0 2 3 4 5 6 7 8 9'\nassert solution('15') == '15\\n0 1 2 3 4 5'\nassert solution('20') == '15\\n0 1 2 3 4 5'"
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n') == '20\\n0 2 1 4 3'\nassert solution('10\\n') == '20\\n0 1 3 5 7 9 6 8 4'\nassert solution('100\\n') == '20\\n1 7 9 6 8 4 3 2 0'\nassert solution('1000000000\\n') == '20\\n9 4 3 7 2 8 1 0 5 6'\nassert solution('100000000000000000000000000000000\\n') == '20\\n9 7 8 3 2 1 0 6 4 5'"
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"20\\n0 2 1 4 3\""
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"20\"\nassert solution(4) == \"0 2 1 4 3\"\nprint(\"All test cases pass\")"
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n0 0\") == \"YES\"\nassert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\") == \"NO\""
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n') == 'YES'\nassert solution('3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n') == 'NO'"
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n') == 'YES'\nassert solution('3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n') == 'NO'"
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n1 1\\n\") == \"YES\"\nassert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n1 1\\n\") == \"NO\""
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n0 0\n''') == 'YES'\nassert solution('''3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n0 0\n''') == 'NO'"
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n1 1\") == \"YES\"\nassert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\") == \"NO\"\n\nassert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\") == \"NO\"\nassert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\") == \"YES\""
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n1 1\\n') == 'YES'\nassert solution('3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n') == 'NO'"
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n0 0\n''') == 'YES'\nassert solution('''\n3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n0 0\n''') == 'NO'"
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n1 1\") == \"YES\"\nassert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\") == \"NO\""
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n0 0\\n1 1\\n\") == \"YES\""
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"11\") == \"11\"\nassert solution(\"111\") == \"111\"\nassert solution(\"0\") == \"0\"\nassert solution(\"10\") == \"10\"\nassert solution(\"010\") == \"010\"\nassert solution(\"0011\") == \"0011\"\nassert solution(\"0101\") == \"0101\"\nassert solution(\"1110\") == \"1110\"\nassert solution(\"1111\") == \"1111\"\n\nimport itertools"
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n1\\n1\\n1') == '1\\n3\\n7'\nassert solution('5\\n1\\n0\\n1\\n0\\n1') == '1\\n4\\n10\\n22\\n43'\nassert solution('9\\n1\\n1\\n0\\n0\\n0\\n1\\n1\\n0\\n1\\n1') == '1\\n3\\n10\\n24\\n51\\n109\\n213\\n421\\n833'"
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n1\\n1\\n\") == 1\nassert solution(\"1\\n1\\n0\\n1\\n\") == 3\nassert solution(\"1\\n0\\n1\\n0\\n1\\n\") == 7\nassert solution(\"1\\n1\\n1\\n1\\n1\\n\") == 1\nassert solution(\"1\\n1\\n0\\n1\\n1\\n\") == 4\nassert solution(\"1\\n0\\n1\\n0\\n1\\n1\\n1\\n1\\n1\\n\") == 10\nassert solution(\"1\\n0\\n0\\n1\\n1\\n0\\n0\\n0\\n0\\n1\\n1\\n1\\n\") == 22\nassert solution(\"1\\n0\\n1\\n0\\n0\\n1\\n1\\n1\\n1\\n1\\n0\\n0\\n0\\n1\\n1\\n1\\n1\\n\") == 43\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n1\\n1\\n1\") == \"1\\n3\\n7\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\\n4\\n10\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\\n3\\n10\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\\n4\\n22\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\\n3\\n51\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\\n4\\n109\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\\n3\\n213\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\\n4\\n421\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\\n3\\n833\""
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n1\\n1\") == \"1\\n3\\n7\"\nassert solution(\"1\\n0\\n1\") == \"1\\n4\\n10\"\nassert solution(\"1\\n1\\n0\") == \"1\\n3\\n10\"\nassert solution(\"1\\n0\\n0\") == \"1\\n4\\n22\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\\n3\\n10\\n24\\n51\\n109\\n213\\n421\\n833\""
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n1\\n1\\n') == '1\\n3\\n7\\n'\nassert solution('1\\n1\\n0\\n1\\n') == '1\\n4\\n10\\n22\\n'\nassert solution('1\\n1\\n1\\n0\\n1\\n') == '1\\n3\\n10\\n24\\n'\nassert solution('1\\n1\\n1\\n1\\n') == '1\\n3\\n10\\n24\\n'\n"
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n1\\n1\\n\") == \"1\\n3\\n7\"\nassert solution(\"5\\n1\\n0\\n1\\n0\\n1\\n\") == \"1\\n4\\n10\\n22\\n43\\n\"\nassert solution(\"9\\n1\\n1\\n0\\n0\\n0\\n1\\n1\\n0\\n1\\n\") == \"1\\n3\\n10\\n24\\n51\\n109\\n213\\n421\\n833\\n\""
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1\\n1\\n1\") == \"1\\n3\\n7\"\nassert solution(\"5\\n1\\n0\\n1\\n0\") == \"1\\n4\\n10\\n22\\n43\"\nassert solution(\"9\\n1\\n1\\n0\\n0\\n0\\n1\\n1\\n0\\n1\\n\") == \"1\\n3\\n10\\n24\\n51\\n109\\n213\\n421\\n833\""
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"11\") == \"11\"\nassert solution(\"111\") == \"111\""
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\") == 1\nassert solution(\"5\") == 1\nassert solution(\"9\") == 1"
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2') == 'First\\nSecond'\nassert solution('3\\n3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\\n1\\n1') == 'First'\nassert solution('3\\n3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\\n1\\n1\\n1') == 'Second'"
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\\n\") == \"First\\nFirst\\n\"\nassert solution(\"3\\n3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\\n2\\n1\\nFirst\\nSecond\\nSecond\\nFirst\\nFirst\\nFirst\\n\" == \"First\\nFirst\\nSecond\\nSecond\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\nFirst\\n"
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n    3 0\n    6 2\n    1 2\n    2 3\n    15 10\n    12 14\n    8 3\n    10 1\n    14 6\n    12 6\n    1 9\n    13 1\n    2 5\n    3 9\n    7 2\n    ''') == 'First\\nSecond\\nFirst\\n'"
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3, 0, 6, 2, 1, 2, 2, 3, 15, 12, 8, 10, 14, 12, 6, 1, 9, 13, 1, 2, 5, 3, 9, 7, 2) == \"First\\nSecond\"\nassert solution(1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,"
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\\n\") == \"First\\nSecond\\nFirst\""
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 'First\\nSecond\\nFirst\\n'\n"
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\") == \"First\\nSecond\\nFirst\\n\"\nassert solution(\"3\\n3 1\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\") == \"Second\\nFirst\\nSecond\"\nassert solution(\"2\\n3 0\\n1 1\\n1 2\\n2 3\\n2 4\\n3 5\\n3 6\\n4 5\\n\") == \"First\\nSecond\\nFirst\\nSecond\\nFirst\\nSecond\\nFirst\\nSecond\"\n\nfrom typing import List"
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n3\n3 0\n6 2\n1 2\n2 3\n15 10\n12 14\n8 3\n10 1\n14 6\n12 6\n1 9\n13 1\n2 5\n3 9\n7 2\n\"\"\") == \"First\\nSecond\\nFirst\"\n\nassert solution(\n\"\"\"\n2\n2 0\n1 1\n2 3\n\"\"\") == \"First\\nSecond\\nFirst\"\n\nassert solution(\n\"\"\"\n3\n3 1\n5 1\n1 2\n2 3\n2 4\n\"\"\") == \"First\\nSecond\\nFirst\"\n\nassert solution(\n\"\"\"\n4\n4 0\n1 2\n2 3\n3 4\n\"\"\") == \"First\\nSecond\\nFirst\"\n\nassert solution(\n\"\"\"\n3\n3 1\n5 1\n1 2\n2 3\n2 4\n\"\"\") == \"First\\nSecond\\nFirst\"\n\nassert solution(\n\"\"\"\n1\n1 0\n1 1\n\"\"\") == \"First\"\n\nassert solution(\n\"\"\"\n2\n2 1\n1 1\n2 3\n\"\"\") == \"First\\nSecond\\nFirst\""
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input(\"T\\ncase_1\\na_1 b_1\\na_2 b_2\\ncase_2\\na_3 b_3\\na_4 b_4\\ncase_3\\na_5 b_5\\na_6 b_6\\ncase_4\\na_7 b_7\\na_8 b_8\\ncase_5\\na_9 b_9\\na_10 b_10\\ncase_6\\na_11 b_11\\na_12 b_12\\ncase_7\\na_13 b_13\\na_14 b_14\\ncase_8\\na_15 b_15\\na_16 b_16\\ncase_9\\na_17 b_17\\na_18 b_18\\ncase_10\\na_19 b_19\\na_20 b_20\\ncase_11\\na_21 b_21\\na_22 b_22\\ncase_12\\na_23 b_23\\na_24 b_24\\ncase_13\\na_25 b_25\\na_26 b_26\\ncase_14\\na_27 b_27\\na_28 b_28\\ncase_15\\na_29 b_29\\na_30 b_30\\ncase_16\\na_31 b_31\\na_32 b_32\\ncase_17\\na_33 b_33\\na_34 b_34\\ncase_18\\na_35 b_35\\na_36 b_36\\ncase_19\\na_37 b_37\\na_38 b_38\\ncase_20\\na_39 b_39\\na_40 b_40\\ncase_21\\na_41 b_41\\na_42 b_42\\ncase_22\\na_43 b_43\\na_44 b_44\\ncase_23\\na_45 b_45\\na_46 b_46\\ncase_24\\na_47 b_47\\na_48 b_48\\ncase_25\\na_49 b_49\\na_50 b_50\\n\") == \"First\\nSecond\\nFirst\\n\"), \"Test case 1\") == \"First\\n\"\nassert solution(input(\"T\\ncase_1\\na_1 b_1\\na_2 b_2\\ncase_2\\na_3 b_3\\na_4 b_4\\ncase_3\\na_5 b_5\\na_6 b_6\\ncase_4\\na_7 b_7\\na_8 b_8\\ncase_5\\na_9 b_9\\na_10 b_10\\ncase_6\\na_11 b_11\\na_12 b_12\\ncase_7\\na_13 b_13\\na_14 b_14\\ncase_8\\na_15 b_15\\na_16 b_16\\ncase_9\\na_17 b_17\\na_18 b_18\\ncase_10\\na_19 b_19\\na_20 b_20\\ncase_11\\na_21 b_21\\na_22 b_22\\ncase_12\\na_23 b_23\\na_24 b_24\\ncase_13\\na_25 b_25\\na_26 b_26\\ncase_14\\na_27 b_27\\na_28 b_28\\ncase_15\\na_29 b_29\\na_30 b_30\\ncase_16\\na_31 b_31\\na_32 b_32\\ncase_17\\na_33 b_33\\na_34 b_34\\ncase_18\\na_35 b_35\\na_36 b_36\\ncase_19\\na"
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\"\n"
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abba\") == \"Mike\\nAnn\\nAnn\"\nassert solution(\"cba\") == \"Mike\\nMike\\nMike\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"abcdefghijklmnopqrstuvwxyz\") == \"Mike\\nAnn\\nAnn\"\n"
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abba\") == \"Mike\\nAnn\"\nassert solution(\"cba\") == \"Mike\\nMike\\nMike\\ndef solution(stdin: str) -> str:\n    pass\"\n"
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abba\") == \"Mike\\nAnn\"\nassert solution(\"cba\") == \"Mike\\nMike\\nMike\\ndef solution(stdin: str) -> str:\n    pass\""
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"Mike\\nAnn\\nAnn\\nMike\""
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abba\") == \"Mike\"\nassert solution(\"cba\") == \"Mike\""
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abba\") == \"Mike\\nAnn\"\nassert solution(\"cba\") == \"Mike\\nMike\\nMike\\ndef solution(stdin: str) -> str: pass\""
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, but got {solution(input())}.\"\n"
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abba\") == [\"Mike\"]\nassert solution(\"cba\") == [\"Mike\", \"Mike\", \"Mike\", \"def\"]"
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('abba') == 'Mike\\nAnn\\nAnn\\nMike'\nassert solution('cba') == 'Mike\\nMike\\nMike\\ndef solution(stdin: str) -> str:\\n\\tpass'"
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('abba') == 'Mike'\nassert solution('cba') == 'Mike'"
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n8 3 8\\n1 2\\n2 3\") == 0\nassert solution(\"3 2\\n8 12 8\\n1 2\\n2 3\") == 2"
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '0\\n', \"The maximum number of operations is 0.\""
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"0\""
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 2\\n8 3 8\\n1 2\\n2 3') == '0'\nassert solution('3 2\\n8 12 8\\n1 2\\n2 3') == '2'"
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"0\""
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2\\n8 3 8\\n1 2\\n2 3\") == \"0\"\nassert solution(\"3 2\\n8 12 8\\n1 2\\n2 3\") == \"2\""
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '0'\nassert solution(input()) == '2'"
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, but got: {solution(input())}\""
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 2\\n8 3 8\\n1 2\\n2 3\\n') == '0'\nassert solution('3 2\\n8 12 8\\n1 2\\n2 3\\n') == '2'"
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"0\\n\"\nassert solution(stdin) == \"2\\n\""
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 4\") == \"ababacd\"\nassert solution(\"4 7\") == \"-1\"\n\nfrom typing import List"
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 4\") == \"ababacd\"\nassert solution(\"4 7\") == \"-1\""
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"ababacd\"\nassert solution(input()) == \"-1\""
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('7 4') == 'ababacd'\nassert solution('4 7') == '-1'"
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 4\") == \"ababacd\"\nassert solution(\"4 7\") == \"-1\""
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 'ababacd'\nassert solution(input()) == '-1'"
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 4) == 'ababacd'\nassert solution(4, 7) == '-1'"
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"ababacd\"\nassert solution(input()) == \"-1\""
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"ababacd\"\nassert solution(input()) == \"-1\"\n\nfrom typing import List"
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 4\") == \"ababacd\"\nassert solution(\"4 7\") == \"-1\""
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2 1 2\\n\\n10\\n1 1 2 2 2 1 1 2 2 1\\n\") == \"4\\n\"\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\\n\") == \"9\\n\""
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 2 1 2\\n\") == \"4\\n\"\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\\n\") == \"9\\n\"\n"
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 2 1 2\\n\\n10\\n1 1 2 2 2 1 1 2 2 1\\n\\n\") == \"4\\n\"\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\\n\\n\") == \"9\\n\""
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 1 2\") == \"4\"\nassert solution(\"10 1 1 2 2 1 1 2 2 1\") == \"9\"\nassert solution(\"1 2 3\") == \"4\"\nassert solution(\"10 1 1 2 2 1 1 2 2 1\") == \"9\"\nassert solution(\"1 2 3 2 1 1 3 4 2 2\") == \"3\"\nassert solution(\"10 1 1 2 2 1 1 2 2 1 3 4 5 6 7 8 9\") == \"15\"\nassert solution(\"1 2 3 2 1 1 3 4 2 2 1 3 4 5 6 7 8 9\") == \"15\"\nassert solution(\"1 2 3 2 1 1 3 4 2 2 1 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\") == \"21\"\nassert solution(\"1 2 3 2 1 1 3 4 2 2 1 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\") == \"21\""
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 2 1 2\\n\") == \"4\\n\"\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\\n\") == \"9\\n\""
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_str) == expected_output, f\"Your solution is incorrect. Please check the example inputs and the expected outputs.\""
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 4\nassert solution == 9"
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2 1 2\\n\") == \"4\\n\"\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\\n\") == \"9\\n\"\nassert solution(\"4\\n1 2 3\\n\") == \"4\\n\"\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\\n\") == \"9\\n\"\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\\n\") == \"9\\n\"\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\\n\") == \"9\\n\"\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\\n\") == \"9\\n\""
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"4\"\nassert solution() == \"9\""
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(str(int(input())) + \"\\n\" + input()) == str(4)\nassert solution(str(int(input())) + \"\\n\" + input()) == str(9)"
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\\n-+\\n2\\n+-+\"\nassert solution(input()) == \"6\\n++-\\n2\\n+-+\""
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 2 1\\n1 1 2\\n2 2 1') == '2\\n-\\n2\\n+'\n\nassert solution('6 6 3\\n2 2 6\\n1 4 5\\n2 3 4\\n1 4 1\\n1 3 1\\n2 2 3') == '6\\n++-\\n2\\n+-+'"
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 2 1\\n1 1 2\\n2 2 1') == '2\\n-\\n2\\n+'\nassert solution('6 6 3\\n2 2 6\\n1 4 5\\n2 3 4\\n1 4 1\\n1 3 1\\n2 2 3') == '6\\n++-\\n2\\n+-+'\n\nfrom typing import List"
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\\n- \\n2\\n+ \\n\""
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(str(input())) == \"2\\n-2\\n2\\n+2\""
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2 1\\n1 1 2\\n2 2 1\") == \"2\\n-\\n2\"\n\nassert solution(\"6 6 3\\n2 2 6\\n1 4 5\\n2 3 4\\n1 4 1\\n1 3 1\\n2 2 3\") == \"6\\n++-\\n2\\n+-+def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"2\\n++-2\\n+-+def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2 1\\n1 1 2\\n2 2 1\") == 2\nassert solution(\"6 6 3\\n2 2 6\\n1 4 5\\n2 3 4\\n1 4 1\\n1 3 1\\n2 2 3\") == 6"
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 2 1\\n1 1 2\\n2 2 1') == '2\\n-\\n2\\n+'\nassert solution('6 6 3\\n2 2 6\\n1 4 5\\n2 3 4\\n1 4 1\\n1 3 1\\n2 2 3') == '6\\n++-\\n2\\n+-+'"
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2 1\\n1 1 2\\n2 2 1\") == \"2\\n-\\n2\"\nassert solution(\"6 6 3\\n2 2 6\\n1 4 5\\n2 3 4\\n1 4 1\\n1 3 1\\n2 2 3\") == \"6\\n++-\\n2\\n+-+\""
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1689\") == \"1869\", \"1689\"\nassert solution(\"18906\") == \"18690\", \"18906\"\nassert solution(\"12345\") == \"0\", \"12345\"\nassert solution(\"00000\") == \"0\", \"00000\"\nassert solution(\"10\") == \"0\", \"10\"\nassert solution(\"1\") == \"0\", \"1\"\nassert solution(\"9\") == \"1\", \"9\"\nassert solution(\"6\") == \"6\", \"6\"\nassert solution(\"8\") == \"8\", \"8\"\nassert solution(\"19\") == \"18\", \"19\"\nassert solution(\"56\") == \"56\", \"56\"\nassert solution(\"345\") == \"345\", \"345\"\nassert solution(\"9876543210\") == \"9876543210\", \"9876543210\""
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1689') == '1869', \"Test 1 failed\"\nassert solution('18906') == '18690', \"Test 2 failed\"\nassert solution('1789') == '1789', \"Test 3 failed\"\nassert solution('19809') == '19809', \"Test 4 failed\"\nassert solution('1690') == '1690', \"Test 5 failed\""
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1689\") == \"1869\"\nassert solution(\"18906\") == \"18690\""
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1689\") == \"1869\"\nassert solution(\"18906\") == \"18690\"\nassert solution(\"123456789012345\") == \"0\"\nassert solution(\"0\") == \"0\"\nassert solution(\"123456789012346\") == \"0\"\nassert solution(\"123456789012347\") == \"0\"\nassert solution(\"123456789012348\") == \"0\"\nassert solution(\"123456789012349\") == \"0\""
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1689\") == \"1869\", \"The first example should output 1869, but it actually outputs {}\".format(solution(\"1689\"))\nassert solution(\"18906\") == \"18690\", \"The second example should output 18690, but it actually outputs {}\".format(solution(\"18906\"))"
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1689\") == \"1869\", \"Input 1 failed\"\nassert solution(\"18906\") == \"18690\", \"Input 2 failed\""
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1689) == 1869\nassert solution(18906) == 18690\n"
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1689\") == \"1869\", \"Incorrect output for example 1\"\nassert solution(\"18906\") == \"18690\", \"Incorrect output for example 2\""
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), \"Test failed\"\nelse:\n    print(\"Test passed\")"
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1689\") == \"1869\"\nassert solution(\"18906\") == \"18690\"\nassert solution(\"abc123\") == \"0\"\nassert solution(\"12345\") == \"0\""
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2\"\nassert solution() == \"3\"\nassert solution() == \"-1\""
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\n1 3\\n3 4\\n\") == 2\nassert solution(\"4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n5 1\\n1 2\\n\") == -1\nassert solution(\"5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n\") == 3"
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"The output does not match the expected output.\""
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(4, 2) == 2\nassert solution(4, 6) == -1\nassert solution(5, 5) == 3\n"
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 2\\n1 3\\n3 4\\n\\n4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n4 5\\n5 1\\n1 2\\n\\n5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2') == 2\nassert solution('4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n4 5\\n5 1\\n1 2\\n\\n5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2') == -1\nassert solution('5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n\\n5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2') == 3"
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\n1 3\\n3 4\\n\") == \"2\"\nassert solution(\"4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n\") == \"-1\"\nassert solution(\"5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n\") == \"3\""
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''4 2\n1 3\n3 4\n''') == '2'\n\nassert solution('''4 6\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n''') == '-1'\n\nassert solution('''5 5\n4 2\n3 5\n4 5\n5 1\n1 2\n''') == '3'"
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n1 3\\n3 4\\n\") == \"2\"\nassert solution(\"4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n\") == \"-1\"\nassert solution(\"5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n\") == \"3\""
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 2\\n1 3\\n3 4') == '2'\nassert solution('4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n5 1\\n1 2') == '-1'\nassert solution('5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n2 3') == '3'"
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n4 7\\n\") == \"3\\n\"\nassert solution(\"3\\n4 3 1\\n\") == \"9\\n\""
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n4 7\") == \"3\\n\"\nassert solution(\"3\\n4 3 1\") == \"9\\n\""
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '3\\n'"
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n4 7\\n') == '3\\n'\nassert solution('3\\n4 3 1\\n') == '9\\n'"
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '3'"
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n4 7\") == \"3\\n\"\nassert solution(\"3\\n4 3 1\") == \"9\\n\"\nassert solution(\"\") == \"\"\n"
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n4 7\\n\") == \"3\\n\"\nassert solution(\"3\\n4 3 1\\n\") == \"9\\n\""
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=None) == '3\\n'"
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"2\\n4 7\\n\") == \"3\\n\"\nassert solution(stdin=\"3\\n4 3 1\\n\") == \"9\\n\""
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == expected"
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Test case {test_case} failed. Expected output: {expected}, Received output: {solution(input())}\""
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n4 8 5\") == \"9\"\nassert solution(\"5\\n3 10 2 1 5\") == \"2\"\nassert solution(\"4\\n0 5 15 10\") == \"0\"\nassert solution(\"1\\n1\") == \"-1\""
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"9\"\nassert solution(\"5\") == \"2\"\nassert solution(\"4\") == \"0\"\nassert solution(\"1\") == \"-1\""
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n4 8 5\\n\\n5\\n3 10 2 1 5\\n\\n4\\n0 5 15 10\\n\\n1\\n1\\n\") == \"9\"\nassert solution(\"5\\n3 10 2 1 5\\n\\n4\\n0 5 15 10\\n\\n1\\n1\\n\") == \"2\"\nassert solution(\"4\\n0 5 15 10\\n\\n1\\n1\\n\") == \"0\"\nassert solution(\"1\\n1\\n\") == \"-1\""
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"9\"\nassert solution(5) == \"2\"\nassert solution(4) == \"0\"\nassert solution(1) == \"-1\"\n"
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n4 8 5\") == \"9\"\nassert solution(\"5\\n3 10 2 1 5\") == \"2\"\nassert solution(\"4\\n0 5 15 10\") == \"0\"\nassert solution(\"1\\n1\") == \"-1\"\nassert solution(\"\") == \"-1\""
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n4 8 5\") == \"9\"\nassert solution(\"5\\n3 10 2 1 5\") == \"2\"\nassert solution(\"4\\n0 5 15 10\") == \"0\"\nassert solution(\"1\\n1\") == \"-1\""
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n4 8 5\\n5\\n4\\n0 5 15 10\\n1\\n1\\n') == '9\\n'\nassert solution('5\\n3 10 2 1 5\\n2\\n4\\n0 5 15 10\\n1\\n1\\n') == '2\\n'\nassert solution('4\\n0 5 15 10\\n0\\n4\\n0 5 15 10\\n1\\n1\\n') == '0\\n'\nassert solution('1\\n1\\n') == '-1\\n'"
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n4 8 5\\n\") == \"9\\n\"\nassert solution(\"5\\n3 10 2 1 5\\n\") == \"2\\n\"\nassert solution(\"4\\n0 5 15 10\\n\") == \"0\\n\"\nassert solution(\"1\\n1\\n\") == \"-1\\n\""
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n4 8 5\\n\\n5\\n3 10 2 1 5\\n\\n4\\n0 5 15 10\\n\\n1\\n1\\n\\n-1') == '9'\nassert solution('5\\n3 10 2 1 5\\n\\n4\\n0 5 15 10\\n\\n1\\n1\\n\\n-1') == '2'\nassert solution('4\\n0 5 15 10\\n\\n1\\n1\\n\\n-1') == '0'\nassert solution('1\\n1\\n\\n-1') == '-1'"
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\\n\""
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == 'Solution'"
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"The solution function should return '{output}', but it returned '{solution(input())}'\"\n"
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 4 5\\n3 5 7 10\\n\") == \"3\\n\"\nassert solution(\"13 4 5\\n7 8 9 10\\n\") == \"1\\n\""
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 4 5\\n3 5 7 10\") == \"3\\n\"\nassert solution(\"13 4 5\\n7 8 9 10\") == \"1\\n\"\nassert solution(\"\") == \"0\\n\""
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 4 5\\n3 5 7 10\\n\") == \"3\\n\"\nassert solution(\"13 4 5\\n7 8 9 10\\n\") == \"1\\n\""
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 4 5\\n3 5 7 10\") == \"3\\n\"\nassert solution(\"13 4 5\\n7 8 9 10\") == \"1\\n\""
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n10 4 5\n3 5 7 10\n''') == '3'\n\nassert solution('''\n13 4 5\n7 8 9 10\n''') == '1'\n\nassert solution('''\n5 3 4\n''') == '0'"
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 4 5\\n3 5 7 10\\n\") == \"3\\n\"\nassert solution(\"13 4 5\\n7 8 9 10\\n\") == \"1\\n\""
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"3\"\nassert solution() == \"1\""
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n101\\n3 3\\n3 2\\n3 1') == '2\\n'\nassert solution('4\\n1111\\n3 4\\n5 2\\n3 1\\n3 2\\n\\n1 5\\n2 4\\n3 5\\n4 2\\n011100') == '4\\n'\nassert solution('6\\n011100\\n5 3\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n2 3\\n3 4\\n5 1\\n') == '6\\n'"
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n101\\n3 3\\n3 2\\n3 1\") == \"2\\n\"\nassert solution(\"4\\n1111\\n3 4\\n5 2\\n3 1\\n3 2\\n\") == \"4\\n\"\nassert solution(\"6\\n011100\\n5 3\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n\") == \"6\\n\""
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input(\"3\\n101\\n3 3\\n3 2\\n3 1\\n\")) == \"2\"\nassert solution(input(\"4\\n1111\\n3 4\\n5 2\\n3 1\\n3 2\\n\")) == \"4\"\nassert solution(input(\"6\\n011100\\n5 3\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n\")) == \"6\""
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3') == 2\nassert solution('4') == 4\nassert solution('6') == 6"
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n101\\n3 3\\n3 2\\n3 1\\n\") == \"2\"\nassert solution(\"4\\n1111\\n3 4\\n5 2\\n3 1\\n3 2\\n\") == \"4\"\nassert solution(\"6\\n011100\\n5 3\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n\") == \"6\""
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n101\\n3 3\\n3 2\\n3 1\") == 2\nassert solution(\"4\\n1111\\n3 4\\n5 2\\n3 1\\n3 2\") == 4\nassert solution(\"6\\n011100\\n5 3\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\") == 6"
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"The function should return {expected_output}, but it returned {solution(input())}.\""
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n101\\n3 3\\n3 2\\n3 1\\n') == '2\\n'\nassert solution('4\\n1111\\n3 4\\n5 2\\n3 1\\n3 2\\n') == '4\\n'\nassert solution('6\\n011100\\n5 3\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n') == '6\\n'"
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n3\n101\n3 3\n3 2\n3 1\n''') == '2'\n\nassert solution('''\n4\n1111\n3 4\n5 2\n3 1\n3 2\n''') == '4'\n\nassert solution('''\n6\n011100\n5 3\n5 5\n2 4\n3 5\n4 2\n1 5\n''') == '6'"
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n101\\n3 3\\n3 2\\n3 1\") == \"2\"\nassert solution(\"4\\n1111\\n3 4\\n5 2\\n3 1\\n3 2\") == \"4\"\nassert solution(\"6\\n011100\\n5 3\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\") == \"6\""
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output() for input, output in [\n    (\"4 4\", \"1111\"),\n    (\"5 3\", \"01010\"),\n    (\"7 3\", \"1011011\")\n]"
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4\") == \"1111\"\nassert solution(\"5 3\") == \"01010\"\nassert solution(\"7 3\") == \"1011011\""
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4\") == \"1111\"\nassert solution(\"5 3\") == \"01010\"\nassert solution(\"7 3\") == \"1011011\"\n"
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '1111'\nassert solution(input()) == '01010'\nassert solution(input()) == '1011011'"
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(str(input())) == \"1111\"\nassert solution(str(input())) == \"01010\"\nassert solution(str(input())) == \"1011011\""
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4\") == \"1111\"\nassert solution(\"5 3\") == \"01010\"\nassert solution(\"7 3\") == \"1011011\"\n"
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(r\"4 4\") == \"1111\"\nassert solution(r\"5 3\") == \"01010\"\nassert solution(r\"7 3\") == \"1011011\""
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 4') == '1111'\nassert solution('5 3') == '01010'\nassert solution('7 3') == '1011011'"
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"Test case {test_case} failed.\" for test_case, input_, output_ in [\n    (0, 1),\n    (1, 1),\n    (2, 3),\n    (3, 3),\n    (4, 3),\n    (5, 4),\n    (6, 4),\n    (7, 4),\n]"
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\") == \"1111\"\nassert solution(\"5 3\") == \"01010\"\nassert solution(\"7 3\") == \"1011011\""
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n2\\n\") == \"1/2\\n\"\nassert solution(\"3\\n1 1 1\\n\") == \"0/1\\n\""
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Test failed: solution() should return '{output}', but returned '{solution(input())}'\""
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n2\\n\") == \"1/2\\n\"\nassert solution(\"3\\n1 1 1\\n\") == \"0/1\\n\""
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=3) == \"0/1\", \"Test failed\""
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 1 1\") == \"0/1\\n\"\nassert solution(\"5\\n1 1 2 3 4\") == \"1/2\\n0/1\\n\"\nassert solution(\"10\\n1 1 2 3 4 5 6 7 8 9\") == \"0/1\\n0/1\\n0/1\\n0/1\\n\""
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Test failed\"\nprint(\"Test passed\")"
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1/2\"\nassert solution(\"3\") == \"0/1\""
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n') == '1/2\\n'\nassert solution('3\\n1 1 1\\n') == '0/1\\n'"
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), \"The solution is incorrect. Please check your code and try again.\""
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n') == '1/2\\n'\nassert solution('3\\n1 1 1\\n') == '0/1\\n'"
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\\n\") == \"1 0 1 0 0\\n\"\nassert solution(\"5\\n9 7 8 6 5\\n1 1\\n2 1\\n3 1\\n4 1\\n\") == \"4 3 2 1 0\\n\""
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\\n\") == \"1 0 1 0 0\\n\"\nassert solution(\"5\\n9 7 8 6 5\\n1 1\\n2 1\\n3 1\\n4 1\\n\") == \"4 3 2 1 0\\n\""
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"\"\"1 0 1 0 0\"\"\""
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"\"\"\n1 0 1 0 0\n4 3 2 1 0\n\"\"\""
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6') == ['1 0 1 0 0', '4 3 2 1 0']\nassert solution('5\\n9 7 8 6 5\\n1 1\\n2 1\\n3 1\\n4 1') == ['4 3 2 1 0', '3 2 1 0 0']\nassert solution('5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\\n4 5\\n4 3\\n4 2\\n4 1') == ['1 0 1 0 0', '4 3 2 1 0', '3 2 1 0 0', '2 1 0 0 0']"
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '''1 0 1 0 0\n'''"
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == [1, 0, 1, 0, 0]"
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == [1, 0, 1, 0, 0]"
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\\n\") == \"1 0 1 0 0\"\nassert solution(\"5\\n9 7 8 6 5\\n1 1\\n2 1\\n3 1\\n4 1\\n\") == \"4 3 2 1 0\""
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Input\\n5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\\n\") == \"1 0 1 0 0\\n\"\nassert solution(\"Input\\n5\\n9 7 8 6 5\\n1 1\\n2 1\\n3 1\\n4 1\\n\") == \"4 3 2 1 0\\n\""
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"0\\n2\\n11\\n11\\n\"\nassert solution(\"3\\n1 1 1\\n\") == \"1\\n0\\n11\\n11\\n11\\n\""
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"5\\n4 5 1 7 4\") == \"1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000\"\nassert solution(\"2\\n1 2\") == \"0\\n2\\n11\\n11\"\nassert solution(\"3\\n1 1 1\") == \"1\\n0\\n11\\n11\""
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"0\\n111011\\n010101\\n100101\\n010101\""
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n4 5 1 7 4\") == \"1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000\""
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n4 5 1 7 4\\n\") == \"1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000\"\nassert solution(\"2\\n1 2\\n\") == \"0\\n2\\n11\\n11\"\nassert solution(\"3\\n1 1 1\\n\") == \"1\\n0\\n11\\n11\""
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n4 5 1 7 4\") == \"1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000\"\nassert solution(\"2\\n1 2\") == \"0\\n2\\n11\\n11\"\nassert solution(\"3\\n1 1 1\") == \"1\\n0\\n0\\n0\""
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n4 5 1 7 4\\n\\n\\n1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000\\n\") == \"1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000\\n\"\n\nassert solution(\"2\\n1 2\\n\\n0\\n2\\n11\\n11\\n\") == \"0\\n2\\n11\\n11\\n\"\n\nassert solution(\"3\\n1 1 1\\n\\n1\\n0\\n\") == \"1\\n0\\n\""
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\n4 5 1 7 4\\n') == '1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000\\n'\nassert solution('2\\n1 2\\n') == '0\\n2\\n11\\n11\\n'\nassert solution('3\\n1 1 1\\n') == '1\\n0\\n11\\n11\\n'"
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"0\\n2\\n11\\n11\"\nassert solution(stdin) == \"0\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000\""
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\\n\") == \"1\""
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1\\n\", \"Expected output: 1\\nGot: {}\".format(solution())"
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == \"1\"\nprint(\"All test cases pass!\")"
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == \"1\"\n"
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == \"1\\n\"\n"
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == \"1\"\nassert solution(\"10\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\") == \"13\"\nassert solution(\"10\\n0 1 0 0\\n0 1 0 0\\n0 1 0 0\\n0 1 0 0\\n0 1 0 0\\n0 1 0 0\\n0 1 0 0\\n0 1 0 0\\n0 1 0 0\") == \"20\"\nassert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == \"1\"\nassert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == \"1\"\nassert solution(\"5\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == \"3\""
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == \"1\""
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == 1, \"The cube below can be constructed.\""
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"1\""
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == \"1\\n\""
    }
]