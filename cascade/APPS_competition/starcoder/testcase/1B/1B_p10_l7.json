[
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n2 3\\n\") == \"5\\n\"\nassert solution(\"8\\n( 2 ( 2 1 ) ) 3\\n\") == \"9\\n\"\nassert solution(\"4\\n( 12 3 )\\n\") == \"36\\n\"\nassert solution(\"6\\n( 2 ) ( 3 )\\n\") == \"5\\n\"\nassert solution(\"6\\n( ( 2 3 ) )\\n\") == \"5\\n\""
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n2 3\") == \"5\"\nassert solution(\"8\\n( 2 ( 2 1 ) ) 3\") == \"9\"\nassert solution(\"4\\n( 12 3 )\") == \"36\"\nassert solution(\"6\\n( 2 ) ( 3 )\") == \"5\"\nassert solution(\"6\\n( ( 2 3 ) )\") == \"5\""
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\n2 3\\n') == '5\\n'\nassert solution('8\\n( 2 ( 2 1 ) ) 3\\n') == '9\\n'\nassert solution('4\\n( 12 3 )\\n') == '36\\n'\nassert solution('6\\n( 2 ) ( 3 )\\n') == '5\\n'\nassert solution('6\\n( ( 2 3 ) )\\n') == '5\\n'\n\nfrom functools import reduce"
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n2 3\\n\") == \"5\\n\", \"Test 1\"\nassert solution(\"8\\n( 2 ( 2 1 ) ) 3\\n\") == \"9\\n\", \"Test 2\"\nassert solution(\"4\\n( 12 3 )\\n\") == \"36\\n\", \"Test 3\"\nassert solution(\"6\\n( 2 ) ( 3 )\\n\") == \"5\\n\", \"Test 4\"\nassert solution(\"6\\n( ( 2 3 ) )\\n\") == \"5\\n\", \"Test 5\""
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), \"The output and input are not matching.\""
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"5\", \"Test 1\"\nassert solution(\"8 ( 2 ( 2 1 ) ) 3\") == \"9\", \"Test 2\"\nassert solution(\"4 ( 12 3 )\") == \"36\", \"Test 3\"\nassert solution(\"6 ( 2 ) ( 3 )\") == \"5\", \"Test 4\"\nassert solution(\"6 ( ( 2 3 ) )\") == \"5\", \"Test 5\"\n"
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Test failed with output: {output}, expected: {output}\""
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"5\"\nassert solution() == \"9\"\nassert solution() == \"36\"\nassert solution() == \"5\"\nassert solution() == \"5\""
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n2 3\") == \"5\"\nassert solution(\"8\\n( 2 ( 2 1 ) ) 3\") == \"9\"\nassert solution(\"4\\n( 12 3 )\") == \"36\"\nassert solution(\"6\\n( 2 ) ( 3 )\") == \"5\"\nassert solution(\"6\\n( ( 2 3 ) )\") == \"5\""
    },
    {
        "number": 3000,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n2 3\") == \"5\", \"Test 1\"\nassert solution(\"8\\n( 2 ( 2 1 ) ) 3\") == \"9\", \"Test 2\"\nassert solution(\"4\\n( 12 3 )\") == \"36\", \"Test 3\"\nassert solution(\"6\\n( 2 ) ( 3 )\") == \"5\", \"Test 4\"\nassert solution(\"6\\n( ( 2 3 ) )\") == \"5\", \"Test 5\""
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0\") == \"0\", \"Expected: 0, Actual: {}.\".format(solution(\"0\"))\nassert solution(\"009990001\") == \"3\", \"Expected: 3, Actual: {}.\".format(solution(\"009990001\"))\nassert solution(\"29998\") == \"5\", \"Expected: 5, Actual: {}.\".format(solution(\"29998\"))\nassert solution(\"610\") == \"4\", \"Expected: 4, Actual: {}.\".format(solution(\"610\"))\nassert solution(\"981\") == \"2\", \"Expected: 2, Actual: {}.\".format(solution(\"981\"))"
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"009990001\") == \"3\"\nassert solution(\"29998\") == \"5\"\nassert solution(\"610\") == \"4\"\nassert solution(\"981\") == \"2\"\n"
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Test failed. Expected {output}, got {solution(input())}\"\n"
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0\") == \"0\", \"Sabotage! exclaimed J.R. Diddly, president and founder of Diddly Widgets Inc.\"\n\nassert solution(\"009990001\") == \"3\", \"Vandalism, perhaps. Nothing\u2019s actually been damaged.\"\n\nassert solution(\"29998\") == \"5\", \"It\u2019s a palindrome.\"\n\nassert solution(\"610\") == \"4\", \"No. It\u2019s a palindrome.\"\n\nassert solution(\"981\") == \"2\", \"It\u2019s a palindrome.\""
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), \"Test failed\"\n"
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"009990001\") == \"3\"\nassert solution(\"29998\") == \"5\"\nassert solution(\"610\") == \"4\"\nassert solution(\"981\") == \"2\""
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output\n"
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0\") == \"0\", \"Test case 1\"\nassert solution(\"009990001\") == \"3\", \"Test case 2\"\nassert solution(\"29998\") == \"5\", \"Test case 3\"\nassert solution(\"610\") == \"4\", \"Test case 4\"\nassert solution(\"981\") == \"2\", \"Test case 5\""
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0\") == 0\nassert solution(\"009990001\") == 3\nassert solution(\"29998\") == 5\nassert solution(\"610\") == 4\nassert solution(\"981\") == 2"
    },
    {
        "number": 3001,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0\") == 0, \"Sample Input 1\"\nassert solution(\"009990001\") == 3, \"Sample Input 2\"\nassert solution(\"29998\") == 5, \"Sample Input 3\"\nassert solution(\"610\") == 4, \"Sample Input 4\"\nassert solution(\"981\") == 2, \"Sample Input 5\""
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(None) == \"tampered odometer\", \"Incorrect output\"\nassert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42000\\n\") == \"seems legit\", \"Incorrect output\"\nassert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42001\\n\") == \"insufficient service\", \"Incorrect output\"\nassert solution(\"2\\n2017 11 0\\n2018 1 1000\\n\") == \"tampered odometer\", \"Incorrect output\"\nassert solution(\"2\\n2013 1 0\\n2013 2 0\\n\") == \"seems legit\", \"Incorrect output\""
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n2017 4 0\\n2017 8 12000\\n2018 8 42000') =='seems legit'\nassert solution('3\\n2017 4 0\\n2017 8 12000\\n2018 8 42001') == 'insufficient service'\nassert solution('2\\n2017 11 0\\n2018 1 1000') == 'tampered odometer'\nassert solution('2\\n2013 1 0\\n2013 2 0') =='seems legit'\n\nfrom collections import defaultdict\n"
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    '''\n    3\n    2017 4 0\n    2017 8 12000\n    2018 8 42000\n    '''\n) =='seems legit'\n\nassert solution(\n    '''\n    3\n    2017 4 0\n    2017 8 12000\n    2018 8 42001\n    '''\n) == 'insufficient service'\n\nassert solution(\n    '''\n    2\n    2017 11 0\n    2018 1 1000\n    '''\n) == 'tampered odometer'\n\nassert solution(\n    '''\n    2\n    2013 1 0\n    2013 2 0\n    '''\n) =='seems legit'"
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n2017 4 0\\n2017 8 12000\\n2018 8 42000\\n') =='seems legit\\n'\nassert solution('3\\n2017 4 0\\n2017 8 12000\\n2018 8 42001\\n') == 'insufficient service\\n'\nassert solution('2\\n2017 11 0\\n2018 1 1000\\n') == 'tampered odometer\\n'\nassert solution('2\\n2013 1 0\\n2013 2 0\\n') =='seems legit\\n'"
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n2017 4 0\\n2017 8 12000\\n2018 8 42000') =='seems legit'\nassert solution('3\\n2017 4 0\\n2017 8 12000\\n2018 8 42001') == 'insufficient service'\nassert solution('2\\n2017 11 0\\n2018 1 1000') == 'tampered odometer'\nassert solution('2\\n2013 1 0\\n2013 2 0') =='seems legit'"
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == \"seems legit\"\nassert solution(sample_input_2) == \"insufficient service\"\nassert solution(sample_input_3) == \"tampered odometer\"\nassert solution(sample_input_4) == \"seems legit\""
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    3\n    2017 4 0\n    2017 8 12000\n    2018 8 42000\n    \"\"\"\n) == \"seems legit\"\n\nassert solution(\n    \"\"\"\n    3\n    2017 4 0\n    2017 8 12000\n    2018 8 42001\n    \"\"\"\n) == \"insufficient service\"\n\nassert solution(\n    \"\"\"\n    2\n    2017 11 0\n    2018 1 1000\n    \"\"\"\n) == \"tampered odometer\"\n\nassert solution(\n    \"\"\"\n    2\n    2013 1 0\n    2013 2 0\n    \"\"\"\n) == \"seems legit\""
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == \"seems legit\"\nassert solution(sample_input_2) == \"insufficient service\"\nassert solution(sample_input_3) == \"tampered odometer\"\nassert solution(sample_input_4) == \"seems legit\""
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42000\") == \"seems legit\"\nassert solution(\"3\\n2017 4 0\\n2017 8 12000\\n2018 8 42001\") == \"insufficient service\"\nassert solution(\"2\\n2017 11 0\\n2018 1 1000\") == \"tampered odometer\"\nassert solution(\"2\\n2013 1 0\\n2013 2 0\") == \"seems legit\""
    },
    {
        "number": 3002,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed: {input()}, expected output: {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n1 2\\n0 2 3\\n0 1\\n1\\n\\n5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\n\\n6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\n\\n4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\n\\n2\\n3\\n4\\n2\\n4\\n3\\n2\\n') == '3\\n'\nassert solution('5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\n\\n6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\n\\n4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\n\\n2\\n3\\n4\\n2\\n4\\n3\\n2\\n') == '2\\n'\nassert solution('6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\n\\n4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\n\\n2\\n3\\n4\\n2\\n4\\n3\\n2\\n') == '2\\n'\nassert solution('4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\n\\n2\\n3\\n4\\n2\\n4\\n3\\n2\\n') == '4\\n'"
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input1) == \"3\\n\", \"Sample Output 1: Wrong answer\"\nassert solution(input2) == \"2\\n\", \"Sample Output 2: Wrong answer\"\nassert solution(input3) == \"2\\n\", \"Sample Output 3: Wrong answer\"\nassert solution(input4) == \"4\\n\", \"Sample Output 4: Wrong answer\""
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 2\\n0 2 3\\n0 1\\n1\\n\\n\\n5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\n\\n\\n6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\n\\n\\n4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\n\\n\\n2\\n1\\n\\n3\\n2\\n4\\n2\\n4\\n\") == 3\nassert solution(\"5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\n\\n\\n6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\n\\n\\n4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\n\\n\\n2\\n1\\n\\n3\\n2\\n4\\n2\\n4\\n\") == 2\nassert solution(\"6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\n\\n\\n4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\n\\n\\n2\\n1\\n\\n3\\n2\\n4\\n2\\n4\\n\") == 2\nassert solution(\"4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\\n\\n\\n2\\n1\\n\\n3\\n2\\n4\\n2\\n4\\n\") == 4"
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 2\\n0 2 3\\n0 1\\n1\") == \"3\\n\"\nassert solution(\"5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\") == \"2\\n\"\nassert solution(\"6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\") == \"2\\n\"\nassert solution(\"4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\") == \"4\\n\""
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    '''\n    4\n    1 2\n    0 2 3\n    0 1\n    1\n    '''\n) == '3\\n'\n\nassert solution(\n    '''\n    5\n    2 3 4\n    2 3 4\n    0 1\n    0 1\n    0 1\n    '''\n) == '2\\n'\n\nassert solution(\n    '''\n    6\n    1 3\n    0 2 4\n    1 5\n    0 4\n    1 3 5\n    2 4\n    '''\n) == '2\\n'\n\nassert solution(\n    '''\n    4\n    1 2 3\n    0 2 3\n    0 1 3\n    0 1 2\n    '''\n) == '4\\n'"
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"Output: 2\\n\"\n"
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 2\\n0 2 3\\n0 1\\n1\") == \"3\\n\"\nassert solution(\"5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\") == \"2\\n\"\nassert solution(\"6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\") == \"2\\n\"\nassert solution(\"4\\n1 2 3\\n0 2 3\\n0 1 3\\n0 1 2\") == \"4\\n\""
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"2\\n\", \"Incorrect Output\""
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"3\\n\""
    },
    {
        "number": 3003,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}\\nGot: {solution(input())}\""
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2\\nBLUE 1 5000\\nRED 5001 10000') == '2\\n'\nassert solution('3\\nBLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000') == '3\\n'\nassert solution('4\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000') == 'IMPOSSIBLE\\n'"
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"\"\"\n    2\n    BLUE 1 5000\n    RED 5001 10000\n\"\"\") == \"2\\n\"\n\nassert solution(stdin=\"\"\"\n    3\n    BLUE 1 6000\n    RED 2000 8000\n    WHITE 7000 10000\n\"\"\") == \"3\\n\"\n\nassert solution(stdin=\"\"\"\n    4\n    BLUE 1 3000\n    RED 2000 5000\n    ORANGE 4000 8000\n    GREEN 7000 10000\n\"\"\") == \"IMPOSSIBLE\\n\""
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\nBLUE 1 5000\\nRED 5001 10000\\n\") == \"2\\n\"\nassert solution(\"3\\nBLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000\\n\") == \"3\\n\"\nassert solution(\"4\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000\\n\") == \"IMPOSSIBLE\\n\"\nassert solution(\"2\\nBLUE 1 4000\\nRED 4002 10000\\n\") == \"IMPOSSIBLE\\n\""
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Sample Input 1\\n2\\nBLUE 1 5000\\nRED 5001 10000\\nSample Output 1\\n2\\n\\nSample Input 2\\n3\\nBLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000\\nSample Output 2\\n3\\n\\nSample Input 3\\n4\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000\\nSample Output 3\\nIMPOSSIBLE\\n\\nSample Input 4\\n2\\nBLUE 1 4000\\nRED 4002 10000\\nSample Output 4\\nIMPOSSIBLE\\n\") == \"2\\n3\\nIMPOSSIBLE\\nIMPOSSIBLE\\n\"\n"
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output() for input, output in [\n    (\"2\", \"2\"),\n    (\"3\", \"3\"),\n    (\"4\", \"IMPOSSIBLE\"),\n    (\"2\", \"IMPOSSIBLE\"),\n    (\"3\", \"IMPOSSIBLE\"),\n    (\"4\", \"IMPOSSIBLE\"),\n    (\"2\", \"IMPOSSIBLE\"),\n    (\"3\", \"IMPOSSIBLE\"),\n    (\"4\", \"IMPOSSIBLE\"),\n    (\"2\", \"IMPOSSIBLE\"),\n    (\"3\", \"IMPOSSIBLE\"),\n    (\"4\", \"IMPOSSIBLE\"),\n    (\"2\", \"IMPOSSIBLE\"),\n    (\"3\", \"IMPOSSIBLE\"),\n    (\"4\", \"IMPOSSIBLE\"),\n    (\"2\", \"IMPOSSIBLE\"),\n    (\"3\", \"IMPOSSIBLE\"),\n    (\"4\", \"IMPOSSIBLE\"),\n    (\"2\", \"IMPOSSIBLE\"),\n    (\"3\", \"IMPOSSIBLE\"),\n    (\"4\", \"IMPOSSIBLE\"),\n    (\"2\", \"IMPOSSIBLE\"),\n    (\"3\", \"IMPOSSIBLE\"),\n    (\"4\", \"IMPOSSIBLE\"),\n    (\"2\", \"IMPOSSIBLE\"),\n    (\"3\", \"IMPOSSIBLE\"),\n    (\"4\", \"IMPOSSIBLE\"),\n    (\"2\", \"IMPOSSIBLE\"),\n    (\"3\", \"IMPOSSIBLE\"),\n    (\"4\", \"IMPOSSIBLE\"),\n    (\"2\", \"IMPOSSIBLE\"),\n    (\"3\", \"IMPOSSIBLE\"),\n    (\"4\", \"IMPOSSIBLE\"),\n    (\"2\", \"IMPOSSIBLE\"),\n    (\"3\", \"IMPOSSIBLE\"),\n    (\"4\", \"IMPOSSIBLE\"),\n    (\"2\", \"IMPOSSIBLE\"),\n    (\"3\", \"IMPOSSIBLE\"),\n    (\"4\", \"IMPOSSIBLE\"),\n    (\"2\", \"IMPOSSIBLE\"),\n    (\"3\", \"IMPOSSIBLE\"),\n    (\"4\", \"IMPOSSIBLE\"),\n    (\"2\", \"IMPOSSIBLE\"),\n    (\"3\", \"IMPOSSIBLE\"),\n    (\"4\", \"IMPOSSIBLE\"),\n    (\"2\", \"IMPOSSIBLE\"),\n    (\"3\", \"IMPOSSIBLE\"),\n    (\"4\", \"IMPOSSIBLE\"),\n    (\"2\", \"IMPOSSIBLE\"),\n    (\"3\", \"IMPOSSIBLE\"),\n    (\"4\", \"IMPOSSIBLE\"),\n    (\"2\", \"IMPOSSIBLE\"),\n    (\"3\", \"IMPOSSIBLE\"),\n    (\"4\", \"IMPOSSIBLE\"),\n    (\"2\", \"IMPOSSIBLE\"),\n    (\"3\", \"IMPOSSIBLE\"),\n    (\"4\", \"IMPOSSIBLE\"),\n    (\"2\", \"IMPOSSIBLE\"),\n    (\"3\", \"IMPOSSIBLE\"),\n    (\"4\", \"IMPOSSIBLE\"),\n    (\"2\", \"IMPOSSIBLE\"),\n    (\"3\", \"IMPOSSIBLE\"),\n    (\"4\", \"IMPOSSIBLE\"),\n    (\"2\", \"IMPOSSIBLE\"),\n    (\"3\", \"IMPOSSIBLE\"),\n    (\"4\", \"IMPOSSIBLE\"),\n    (\"2\", \"IMPOSSIBLE\"),\n    (\"3\", \"IMPOSSIBLE\"),\n    (\"4\", \"IMPOSSIBLE\"),\n    (\"2\", \"IMPOSSIBLE\"),\n    (\"3\", \"IMPOSSIBLE\"),\n    (\"4\", \"IMPOSSIBLE\"),\n    (\"2\", \"IMPOSSIBLE\"),\n    (\"3\", \"IMPOSSIBLE\"),\n    (\"4\", \"IMPOSSIBLE\"),\n    (\"2\", \"IMPOSSIBLE\"),\n    (\"3\", \"IMPOSSIBLE\"),\n    (\"4\", \"IMPOSSIBLE\"),\n    (\"2\", \"IMPOSSIBLE\"),\n    (\"3\", \"IMPOSSIBLE\"),\n    (\"4\", \"IMPOSSIBLE\"),\n    (\"2\", \"IMPOSSIBLE\"),\n    (\"3\", \"IMPOSSIBLE\"),\n    (\"4\", \"IMPOSSIBLE\"),\n    (\"2\", \"IMPOSSIBLE\"),\n    (\"3\", \"IMPOSSIBLE\"),\n    (\"4\", \"IMPOSSIBLE\"),\n    (\"2\", \"IMPOSSIBLE\"),\n    (\"3\", \"IMPOSSIBLE\"),\n    (\"4\", \"IMPOSSIBLE\"),\n    (\"2\", \"IMPOSSIBLE\"),\n    (\"3\", \"IMPOSSIBLE\"),\n    (\"4\", \"IMPOSSIBLE\"),\n    (\"2\", \"IMPOSSIBLE\"),\n    (\"3\", \"IMPOSSIBLE\"),\n    (\"4\", \"IMPOSSIBLE\"),\n    (\"2\", \"IMPOSSIBLE\"),\n    (\"3\", \"IMPOSSIBLE\"),\n    (\"4\", \"IMPOSSIBLE\"),\n    (\"2\", \"IMPOSSIBLE\"),\n    (\"3\", \"IMPOSSIBLE\"),\n    (\"4\", \"IMPOSSIBLE\"),\n    (\"2\", \"IMPOSSIBLE\"),\n    (\"3\", \"IMPOSSIBLE\"),\n    (\"4\", \"IMPOSSIBLE\"),\n    (\"2\", \"IMPOSSIBLE\"),\n    (\"3\", \"IMPOSSIBLE\"),\n    (\"4\", \"IMPOSSIBLE\"),\n    (\"2\", \"IMPOSSIBLE\"),\n    (\"3\", \"IMPOSSIBLE\"),\n    (\"4\", \"IMPOSSIBLE\"),\n    (\"2\", \"IMPOSSIBLE\"),\n    (\"3\", \"IMPOSSIBLE"
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"IMPOSSIBLE\""
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\nBLUE 1 5000\\nRED 5001 10000\") == \"2\"\nassert solution(\"3\\nBLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000\") == \"3\"\nassert solution(\"4\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input1) == \"2\", \"Test 1 failed\"\nassert solution(sample_input2) == \"3\", \"Test 2 failed\"\nassert solution(sample_input3) == \"IMPOSSIBLE\", \"Test 3 failed\"\nassert solution(sample_input4) == \"IMPOSSIBLE\", \"Test 4 failed\""
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Incorrect output: expected '{output}', got '{solution(input())}'\""
    },
    {
        "number": 3004,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == output, f\"Solution is incorrect. Please check the given examples and the provided code.\""
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\", \"Incorrect output. Expected '6', but got '{}' instead.\".format(solution(\"PRATTATTATTIC\"))\nassert solution(\"GGGGGGGGG\") == \"1\", \"Incorrect output. Expected '1', but got '{}' instead.\".format(solution(\"GGGGGGGGG\"))\nassert solution(\"PRIME\") == \"5\", \"Incorrect output. Expected '5', but got '{}' instead.\".format(solution(\"PRIME\"))\nassert solution(\"BABBABABBABBA\") == \"6\", \"Incorrect output. Expected '6', but got '{}' instead.\".format(solution(\"BABBABABBABBA\"))"
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\", \"Test 1\"\nassert solution(\"GGGGGGGGG\") == \"1\", \"Test 2\"\nassert solution(\"PRIME\") == \"5\", \"Test 3\"\nassert solution(\"BABBABABBABBA\") == \"6\", \"Test 4\""
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\"\nassert solution(\"GGGGGGGGG\") == \"1\"\nassert solution(\"PRIME\") == \"5\"\nassert solution(\"BABBABABBABBA\") == \"6\""
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"PRATTATTATTIC\") == 6, \"Test failed\"\nassert solution(\"GGGGGGGGG\") == 1, \"Test failed\"\nassert solution(\"PRIME\") == 5, \"Test failed\"\nassert solution(\"BABBABABBABBA\") == 6, \"Test failed\""
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"PRATTATTATTIC\") == 6, \"Solution is incorrect.\"\nassert solution(\"GGGGGGGGG\") == 1, \"Solution is incorrect.\"\nassert solution(\"PRIME\") == 5, \"Solution is incorrect.\"\nassert solution(\"BABBABABBABBA\") == 6, \"Solution is incorrect.\""
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\"\nassert solution(\"GGGGGGGGG\") == \"1\"\nassert solution(\"PRIME\") == \"5\"\nassert solution(\"BABBABABBABBA\") == \"6\""
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"PRATTATTATTIC\") == 6, \"Error: Test failed\"\nassert solution(\"GGGGGGGGG\") == 1, \"Error: Test failed\"\nassert solution(\"PRIME\") == 5, \"Error: Test failed\"\nassert solution(\"BABBABABBABBA\") == 6, \"Error: Test failed\"\n\nprint(\"All test cases passed\")"
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\", \"Expected '6' but got '{}'\".format(solution(\"PRATTATTATTIC\"))\nassert solution(\"GGGGGGGGG\") == \"1\", \"Expected '1' but got '{}'\".format(solution(\"GGGGGGGGG\"))\nassert solution(\"PRIME\") == \"5\", \"Expected '5' but got '{}'\".format(solution(\"PRIME\"))\nassert solution(\"BABBABABBABBA\") == \"6\", \"Expected '6' but got '{}'\".format(solution(\"BABBABABBABBA\"))\n\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\", \"Incorrect solution for sample input 1\"\nassert solution(\"GGGGGGGGG\") == \"1\", \"Incorrect solution for sample input 2\"\nassert solution(\"PRIME\") == \"5\", \"Incorrect solution for sample input 3\"\nassert solution(\"BABBABABBABBA\") == \"6\", \"Incorrect solution for sample input 4\""
    },
    {
        "number": 3005,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\", \"Test 1\"\nassert solution(\"GGGGGGGGG\") == \"1\", \"Test 2\"\nassert solution(\"PRIME\") == \"5\", \"Test 3\"\nassert solution(\"BABBABABBABBA\") == \"6\", \"Test 4\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\\n\") == \"0\\n\"\nassert solution(\"D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\\n\") == \"1\\n\"\nassert solution(\"I 1 X\\nD 1\\nE\\nE\\n\") == \"0\\n\"\nassert solution(\"I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\\n\") == \"0\\n\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\\n') == 0\nassert solution('D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\\n') == 1\nassert solution('I 1 X\\nD 1\\nE\\nE\\n') == 0\nassert solution('I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\\n') == 0"
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\\n\") == \"0\\n\"\nassert solution(\"D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\\n\") == \"1\\n\"\nassert solution(\"I 1 X\\nD 1\\nE\\nE\\n\") == \"0\\n\"\nassert solution(\"I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\\n\") == \"0\\n\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('D 1\\nD 2\\nE\\nD 3\\nD 1\\nE') == '0\\n', \"Test Case 1 failed.\"\nassert solution('D 2\\nD 1\\nE\\nD 1\\nD 2\\nE') == '1\\n', \"Test Case 2 failed.\"\nassert solution('I 1 X\\nD 1\\nE\\nE') == '0\\n', \"Test Case 3 failed.\"\nassert solution('I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE') == '0\\n', \"Test Case 4 failed.\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\") == \"0\", \"1\"\nassert solution(\"D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\") == \"1\", \"2\"\nassert solution(\"I 1 X\\nD 1\\nE\\nE\") == \"0\", \"3\"\nassert solution(\"I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\") == \"0\", \"4\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\\n\") == \"0\\n\"\nassert solution(\"D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\\n\") == \"1\\n\"\nassert solution(\"I 1 X\\nD 1\\nE\\nE\\n\") == \"0\\n\"\nassert solution(\"I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\\n\") == \"0\\n\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"D 1\\nD 2\\nE\") == \"0\\n\", \"Incorrect result for sample input 1\"\nassert solution(\"D 2\\nD 1\\nE\") == \"1\\n\", \"Incorrect result for sample input 2\"\nassert solution(\"I 1 X\\nD 1\\nE\") == \"0\\n\", \"Incorrect result for sample input 3\"\nassert solution(\"I 14 B\\nI 14 A\\nE\") == \"0\\n\", \"Incorrect result for sample input 4\""
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\") == 0\nassert solution(\"D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\") == 1\nassert solution(\"I 1 X\\nD 1\\nE\\nE\") == 0\nassert solution(\"I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\") == 0"
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\\n') == '0\\n', 'Sample Input 1'\nassert solution('D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\\n') == '1\\n', 'Sample Input 2'\nassert solution('I 1 X\\nD 1\\nE\\nE\\n') == '0\\n', 'Sample Input 3'\nassert solution('I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\\n') == '0\\n', 'Sample Input 4'"
    },
    {
        "number": 3006,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\\n\") == \"0\", \"Test case 1 failed\"\nassert solution(\"D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\\n\") == \"1\", \"Test case 2 failed\"\nassert solution(\"I 1 X\\nD 1\\nE\\nE\\n\") == \"0\", \"Test case 3 failed\"\nassert solution(\"I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\\n\") == \"0\", \"Test case 4 failed\""
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test failed: \\nInput: \\n{input()}\\nExpected Output: \\n{expected_output}\\nActual Output: \\n{solution(input())}\""
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    4 0 1 0 0 0\n    \"\"\"\n) == \"300\"\n\nassert solution(\n    \"\"\"\n    5 0 1 0 1 0\n    \"\"\"\n) == \"1900\"\n\nassert solution(\n    \"\"\"\n    6 0 1 1 0 0\n    \"\"\"\n) == \"2300\"\n\nassert solution(\n    \"\"\"\n    10 399 0 0 0 0\n    \"\"\"\n) == \"399\""
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 0 1 0 0 0\") == 300\nassert solution(\"5 0 1 0 1 0\") == 1900\nassert solution(\"6 0 1 1 0 0\") == 2300\nassert solution(\"10 399 0 0 0 0\") == 399\nassert solution(\"6 0 1 1 0 0 0 0 0 0\") == 4120\nassert solution(\"5 0 1 0 1 0 0 0 0 0\") == 2700\nassert solution(\"4 0 1 0 0 0 0 0 0 0 0\") == 2200\nassert solution(\"10 399 0 0 0 0 0 0 0 0\") == 5400\nassert solution(\"5 0 1 0 1 0 0 0 0 0 0 0\") == 3500\nassert solution(\"4 0 1 0 0 0 0 0 0 0 0 0 0\") == 3000\nassert solution(\"6 0 1 1 0 0 0 0 0 0 0 0 0\") == 4600\nassert solution(\"5 0 1 0 1 0 0 0 0 0 0 0 0 0\") == 3100\nassert solution(\"4 0 1 0 0 0 0 0 0 0 0 0 0 0 0\") == 2600\nassert solution(\"6 0 1 1 0 0 0 0 0 0 0 0 0 0 0\") == 5200\nassert solution(\"5 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0\") == 3700\nassert solution(\"4 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0\") == 3200\nassert solution(\"6 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0\") == 5800\nassert solution(\"5 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0\") == 3300\nassert solution(\"4 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\") == 2800\nassert solution(\"6 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\") == 5400\nassert solution(\"5 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\") == 3500\nassert solution(\"4 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\") == 3000\nassert solution(\"6 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\") == 4600\nassert solution(\"5 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\") == 3100\nassert solution(\"4 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\") == 2600\nassert solution(\"6 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == \"300\", \"Test Input 1 failed.\"\nassert solution(sample_input_2) == \"1900\", \"Test Input 2 failed.\"\nassert solution(sample_input_3) == \"2300\", \"Test Input 3 failed.\"\nassert solution(sample_input_4) == \"399\", \"Test Input 4 failed.\""
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 0 1 0 0 0\") == \"300\"\nassert solution(\"5 0 1 0 1 0\") == \"1900\"\nassert solution(\"6 0 1 1 0 0\") == \"2300\"\nassert solution(\"10 399 0 0 0 0\") == \"399\"\nassert solution(\"\") == \"0\"\nassert solution(\"10 399 0 0 0 0\") == \"0\"\n"
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 0 1 0 0 0') == '300'\nassert solution('5 0 1 0 1 0') == '1900'\nassert solution('6 0 1 1 0 0') == '2300'\nassert solution('10 399 0 0 0 0') == '399'"
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 0 1 0 0 0') == '300'\nassert solution('5 0 1 0 1 0') == '1900'\nassert solution('6 0 1 1 0 0') == '2300'\nassert solution('10 399 0 0 0 0') == '399'"
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(str(4) +'' + str(0) +'' + str(1) +'' + str(0) +'' + str(0) +'' + str(0)) == '300', \"The correct answer for sample input 1 is 300. Actual: \" + solution(str(4) +'' + str(0) +'' + str(1) +'' + str(0) +'' + str(0) +'' + str(0)))\n\nassert solution(str(5) +'' + str(0) +'' + str(1) +'' + str(0) +'' + str(1) +'' + str(0)) == '1900', \"The correct answer for sample input 2 is 1900. Actual: \" + solution(str(5) +'' + str(0) +'' + str(1) +'' + str(0) +'' + str(1) +'' + str(0)))\n\nassert solution(str(6) +'' + str(0) +'' + str(1) +'' + str(1) +'' + str(0) +'' + str(0)) == '2300', \"The correct answer for sample input 3 is 2300. Actual: \" + solution(str(6) +'' + str(0) +'' + str(1) +'' + str(1) +'' + str(0) +'' + str(0)))\n\nassert solution(str(10) +'' + str(399) +'' + str(0) +'' + str(0) +'' + str(0) +'' + str(0)) == '399', \"The correct answer for sample input 4 is 399. Actual: \" + solution(str(10) +'' + str(399) +'' + str(0) +'' + str(0) +'' + str(0) +'' + str(0)))"
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 0 1 0 0 0\") == \"300\\n\"\nassert solution(\"5 0 1 0 1 0\") == \"1900\\n\"\nassert solution(\"6 0 1 1 0 0\") == \"2300\\n\"\nassert solution(\"10 399 0 0 0 0\") == \"399\\n\"\n"
    },
    {
        "number": 3007,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 0 1 0 0 0\") == \"300\\n\"\nassert solution(\"5 0 1 0 1 0\") == \"1900\\n\"\nassert solution(\"6 0 1 1 0 0\") == \"2300\\n\"\nassert solution(\"10 399 0 0 0 0\") == \"399\\n\""
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 10\\n1 12\\n1 13') == '2\\n'\nassert solution('2 10\\n1 5\\n1 12') == '2\\n'\nassert solution('2 10\\n1 5\\n1 4') == '2\\n'\nassert solution('2 10\\n1 5\\n4 1') == '2\\n'"
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Output a single integer: the maximum number of distinct ranks.\""
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 10\\n1 12\\n1 13\\n\") == \"2\"\nassert solution(\"2 10\\n1 5\\n1 12\\n\") == \"2\"\nassert solution(\"2 10\\n1 5\\n4 1\\n\") == \"2\""
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 10\\n1 12\\n1 13\\n\") == \"2\\n\"\nassert solution(\"2 10\\n1 5\\n1 12\\n\") == \"2\\n\"\nassert solution(\"2 10\\n1 5\\n1 4\\n\") == \"2\\n\"\nassert solution(\"2 10\\n1 5\\n4 1\\n\") == \"2\\n\""
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 10\\n1 12\\n1 13') == '2'\nassert solution('2 10\\n1 5\\n1 12') == '2'\nassert solution('2 10\\n1 5\\n1 4') == '2'\nassert solution('2 10\\n1 5\\n4 1') == '2'\nassert solution('2 10\\n1 5\\n1 12 1 13 1 14 1 15 1 16') == '2'"
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 12\\n1 13\\n\") == \"2\\n\"\nassert solution(\"1 5\\n1 12\\n\") == \"2\\n\"\nassert solution(\"1 5\\n4 1\\n\") == \"2\\n\"\nassert solution(\"1 5\\n1 4\\n\") == \"2\\n\"\nassert solution(\"2 10\\n1 12\\n1 13\\n\") == \"2\\n\""
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\""
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Expected output: {output()}, but got: {solution(input())}\""
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 10\\n1 12\\n1 13\") == \"2\\n\"\nassert solution(\"2 10\\n1 5\\n1 12\") == \"2\\n\"\nassert solution(\"2 10\\n1 5\\n4 1\") == \"2\\n\""
    },
    {
        "number": 3008,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input(1)) == \"2\"\nassert solution(sample_input(2)) == \"2\"\nassert solution(sample_input(3)) == \"2\"\nassert solution(sample_input(4)) == \"2\""
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(4) == \"28.0\"\nassert solution(6) == \"28.97\"\nassert solution(8) == \"32.0\""
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2\nassert solution(input3) == output3\nassert solution(input4) == output4"
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n4\n10 10 5\n10 20 5\n20 10 5\n20 20 5\n\"\"\") == \"28\"\n\nassert solution(\"\"\"\n4\n10 10 5\n10 20 1\n20 10 12\n20 20 8\n\"\"\") == \"36.2842712475\"\n\nassert solution(\"\"\"\n6\n1 1 15\n5 1 100\n9 1 56\n1 5 1\n5 5 33\n9 5 3\n\"\"\") == \"28.970562748\"\n\nassert solution(\"\"\"\n8\n4 4 1\n4 6 1\n4 8 1\n6 6 14\n8 4 1\n8 6 1\n8 8 1\n99 6 -8\n\"\"\") == \"32\""
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == \"28\"\nassert solution(sample_input2) == \"36.2842712475\"\nassert solution(sample_input3) == \"28.970562748\"\nassert solution(sample_input4) == \"32\""
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n10 10 5\\n10 20 5\\n20 10 5\\n20 20 5\\n\") == \"28\"\nassert solution(\"4\\n10 10 5\\n10 20 1\\n20 10 12\\n20 20 8\\n\") == \"36.2842712475\"\nassert solution(\"6\\n1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\\n\") == \"28.970562748\"\nassert solution(\"8\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8\\n\") == \"32\"\nassert solution(\"4\\n10 10 5\\n10 20 1\\n20 10 12\\n20 20 8\\n\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n10 10 5\\n10 20 5\\n20 10 5\\n20 20 5\") == \"28\", \"Test 1 failed\"\nassert solution(\"4\\n10 10 5\\n10 20 1\\n20 10 12\\n20 20 8\") == \"36.2842712475\", \"Test 2 failed\"\nassert solution(\"6\\n1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\") == \"28.970562748\", \"Test 3 failed\"\nassert solution(\"8\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8\") == \"32\", \"Test 4 failed\""
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input1) == 28.0\nassert solution(sample_input2) == 36.2842712475\nassert solution(sample_input3) == 28.970562748\nassert solution(sample_input4) == 32.0"
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution(4) == \"28\"\nassert solution("
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"\"\"\n4\n10 10 5\n10 20 5\n20 10 5\n20 20 5\n\"\"\") == \"28\"\n\nassert solution(stdin=\"\"\"\n4\n10 10 5\n10 20 1\n20 10 12\n20 20 8\n\"\"\") == \"36.2842712475\"\n\nassert solution(stdin=\"\"\"\n6\n1 1 15\n5 1 100\n9 1 56\n1 5 1\n5 5 33\n9 5 3\n\"\"\") == \"28.970562748\"\n\nassert solution(stdin=\"\"\"\n8\n4 4 1\n4 6 1\n4 8 1\n6 6 14\n8 4 1\n8 6 1\n8 8 1\n99 6 -8\n\"\"\") == \"32\""
    },
    {
        "number": 3009,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input1) == output1, \"Incorrect output\"\nassert solution(input2) == output2, \"Incorrect output\"\nassert solution(input3) == output3, \"Incorrect output\"\nassert solution(input4) == output4, \"Incorrect output\""
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 3 9 5\\n2 2 6 8\\n4 8 9 3\") == \"3\\n1\\n1\\n1\""
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 'Output: 1\\n'"
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1\\n\", \"Your solution is incorrect.\"\n"
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1\\n1\\n1\\n\", \"Test 1 failed\""
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"3\n1 3 9 5\n2 2 6 8\n4 8 9 3\"\"\") == \"3\"\nassert solution(\"\"\"3\n5 2 7 10\n7 4 4 10\n2 4 10 8\"\"\") == \"1\"\nassert solution(\"\"\"3\n2 1 6 5\n2 5 5 4\n5 1 7 7\"\"\") == \"1\"\nassert solution(\"\"\"2\n-1 -2 -1 -1\n-1 2 -1 -1\"\"\") == \"1\"\n\nfrom typing import List\nfrom collections import Counter"
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 3 9 5\\n2 2 6 8\\n4 8 9 3\") == \"3\\n\"\nassert solution(\"3\\n5 2 7 10\\n7 4 4 10\\n2 4 10 8\") == \"1\\n\"\nassert solution(\"3\\n2 1 6 5\\n2 5 5 4\\n5 1 7 7\") == \"1\\n\"\nassert solution(\"2\\n-1 -2 -1 -1\\n-1 2 -1 -1\") == \"1\\n\""
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 3 9 5\\n2 2 6 8\\n4 8 9 3\") == \"3\"\nassert solution(\"5 2 7 10\\n7 4 4 10\\n2 4 10 8\") == \"1\"\nassert solution(\"2 1 6 5\\n2 5 5 4\\n5 1 7 7\") == \"1\"\nassert solution(\"-1 -2 -1 -1\\n-1 2 -1 -1\") == \"-1\""
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1\", \"Please provide the correct input\""
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('sample_input1.txt').read()) == \"3\\n\"\nassert solution(open('sample_input2.txt').read()) == \"1\\n\"\nassert solution(open('sample_input3.txt').read()) == \"1\\n\"\nassert solution(open('sample_input4.txt').read()) == \"1\\n\""
    },
    {
        "number": 3010,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n1 3 9 5\\n2 2 6 8\\n4 8 9 3\\n') == '3\\n'\nassert solution('3\\n5 2 7 10\\n7 4 4 10\\n2 4 10 8\\n') == '1\\n'\nassert solution('3\\n2 1 6 5\\n2 5 5 4\\n5 1 7 7\\n') == '1\\n'\nassert solution('2\\n-1 -2 -1 -1\\n-1 2 -1 -1\\n') == '1\\n'\nassert solution('3\\n2 1 6 5\\n2 5 5 4\\n5 1 7 7\\n') == '-1\\n'"
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(55) == 55, \"55 is not a hill number\"\nassert solution(101) == -1, \"101 is not a hill number\"\nassert solution(1234321) == 94708, \"1234321 is not a hill number\""
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(10) == \"10\"\nassert solution(55) == \"55\"\nassert solution(101) == \"-1\"\nassert solution(1234321) == \"94708\""
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(10) == \"10\"\nassert solution(55) == \"55\"\nassert solution(101) == \"-1\"\nassert solution(1234321) == \"94708\""
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10\") == 10\nassert solution(\"55\") == 55\nassert solution(\"101\") == -1\nassert solution(\"1234321\") == 94708"
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(10) == '10'\nassert solution(55) == '55'\nassert solution(101) == '-1'\nassert solution(1234321) == '94708'"
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(10) == 10\nassert solution(55) == 55\nassert solution(101) == -1\nassert solution(1234321) == 94708"
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10\") == \"10\"\nassert solution(\"55\") == \"55\"\nassert solution(\"101\") == \"-1\"\nassert solution(\"1234321\") == \"94708\""
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(10) == 10\nassert solution(55) == 55\nassert solution(101) == -1\nassert solution(1234321) == 94708"
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, \"Test Case #{} failed\".format(i+1) for i, (input, output) in enumerate(tests)\n"
    },
    {
        "number": 3011,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(10) == 10\nassert solution(55) == 55\nassert solution(101) == -1\nassert solution(1234321) == 94708"
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 0 0 0 3\") == \"6\"\nassert solution(\"1 2 0 0 5\") == \"2\"\nassert solution(\"1 2 0 0 4\") == \"4\"\nassert solution(\"1 2 0 0 6\") == \"0\""
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == 'Output the number of length-N sequences of moves, modulo 1000000007.'\nassert solution(input()) == '6'\nassert solution(input()) == '2'\nassert solution(input()) == '4'\nassert solution(input()) == '0'"
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 0 0 0 3') == '6'\nassert solution('1 2 0 0 5') == '2'\nassert solution('1 2 0 0 4') == '4'\nassert solution('1 2 0 0 6') == '0'\n"
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 0 0 0 3\\n') == '6'\nassert solution('1 2 0 0 5\\n') == '2'\nassert solution('1 2 0 0 4\\n') == '4'\nassert solution('1 2 0 0 6\\n') == '0'"
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"6\", \"Output incorrect\""
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, 0, 0, 0, 3) == 6\nassert solution(1, 2, 0, 0, 5) == 2\nassert solution(1, 2, 0, 0, 4) == 4\nassert solution(1, 2, 0, 0, 6) == 0"
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 0 0 0 3\") == \"6\"\nassert solution(\"1 2 0 0 5\") == \"2\"\nassert solution(\"1 2 0 0 4\") == \"4\"\nassert solution(\"1 2 0 0 6\") == \"0\""
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    3 0 0 0 3\n    \"\"\"\n) == '6\\n'\n\nassert solution(\n    \"\"\"\n    1 2 0 0 5\n    \"\"\"\n) == '2\\n'\n\nassert solution(\n    \"\"\"\n    1 2 0 0 4\n    \"\"\"\n) == '4\\n'\n\nassert solution(\n    \"\"\"\n    1 2 0 0 6\n    \"\"\"\n) == '0\\n'"
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 0 0 0 3\\n') == '6\\n'\nassert solution('1 2 0 0 5\\n') == '2\\n'\nassert solution('1 2 0 0 4\\n') == '4\\n'\nassert solution('1 2 0 0 6\\n') == '0\\n'"
    },
    {
        "number": 3012,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 6\nassert solution() == 2\nassert solution() == 4\nassert solution() == 0"
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('0.5 -5.301 3.098') == '-1.26167861 3.88425357'\nassert solution('0.5 8 8') == '9.21068947 2.56226688'\nassert solution('1 8 8') == '6.22375968 -0.31921472'\nassert solution('0.5 -8 8') == '-4.36385220 9.46891588'\n"
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0.5 -5.301 3.098\") == \" -1.26167861 3.88425357\"\nassert solution(\"0.5 8 8\") == \"9.21068947 2.56226688\"\nassert solution(\"1 8 8\") == \"6.22375968 -0.31921472\"\nassert solution(\"0.5 -8 8\") == \"-4.36385220 9.46891588\""
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Input: {stdin}\\nOutput: {output()}\""
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0.5 -5.301 3.098\\n\") == \"(-1.26167861, 3.88425357)\"\nassert solution(\"0.5 8 8\\n\") == \"9.21068947 2.56226688\"\nassert solution(\"1 8 8\\n\") == \"6.22375968 -0.31921472\"\nassert solution(\"0.5 -8 8\\n\") == \"-4.36385220 9.46891588\""
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0.5 -5.301 3.098\") == \"-1.26167861 3.88425357\", \"Test 1 failed\"\nassert solution(\"0.5 8 8\") == \"9.21068947 2.56226688\", \"Test 2 failed\"\nassert solution(\"1 8 8\") == \"6.22375968 -0.31921472\", \"Test 3 failed\"\nassert solution(\"0.5 -8 8\") == \"-4.36385220 9.46891588\", \"Test 4 failed\""
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('0.5 -5.301 3.098') == '-1.26167861 3.88425357'\nassert solution('0.5 8 8') == '9.21068947 2.56226688'\nassert solution('1 8 8') == '6.22375968 -0.31921472'\nassert solution('0.5 -8 8') == '-4.36385220 9.46891588'"
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"0.5 -5.301 3.098\"\"\"\n) == \"\"\"-1.26167861 3.88425357\"\"\"\n\nassert solution(\n    \"\"\"0.5 8 8\"\"\"\n) == \"\"\"9.21068947 2.56226688\"\"\"\n\nassert solution(\n    \"\"\"1 8 8\"\"\"\n) == \"\"\"6.22375968 -0.31921472\"\"\"\n\nassert solution(\n    \"\"\"0.5 -8 8\"\"\"\n) == \"\"\"-4.36385220 9.46891588\"\"\""
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected, f\"Expected output: {expected}\\nGot output: {solution(stdin)}\""
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('0.5 -5.301 3.098') == '-1.26167861 3.88425357\\n'\nassert solution('0.5 8 8') == '9.21068947 2.56226688\\n'\nassert solution('1 8 8') == '6.22375968 -0.31921472\\n'\nassert solution('0.5 -8 8') == '-4.36385220 9.46891588\\n'"
    },
    {
        "number": 3013,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0.5 -5.301 3.098\") == \"-1.26167861 3.88425357\"\nassert solution(\"0.5 8 8\") == \"9.21068947 2.56226688\"\nassert solution(\"1 8 8\") == \"6.22375968 -0.31921472\"\nassert solution(\"0.5 -8 8\") == \"-4.36385220 9.46891588\""
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n1 2\\n2 1\\n\") == \"1\\n2\\n\"\nassert solution(\"3 3\\n1 2\\n2 3\\n3 1\\n\") == \"1\\n1\\n\"\nassert solution(\"4 5\\n1 2\\n1 3\\n3 2\\n2 4\\n3 4\\n\") == \"0\\n2\\n4\\n5\\n\""
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\n1 2\\n2 1\\n\") == \"1\\n2\"\nassert solution(\"3 3\\n1 2\\n2 3\\n3 1\\n\") == \"1\\n1\"\nassert solution(\"4 5\\n1 2\\n1 3\\n3 2\\n2 4\\n3 4\\n\") == \"0\\n2\\n4\\n5\""
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\n1 2\\n2 1\") == \"1\\n2\"\nassert solution(\"3 3\\n1 2\\n2 3\\n3 1\") == \"1\\n1\"\nassert solution(\"4 5\\n1 2\\n1 3\\n3 2\\n2 4\\n3 4\") == \"0\\n2\\n4\\n5\""
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\n1 2\\n2 1\\n\") == \"1\\n2\\n\"\nassert solution(\"3 3\\n1 2\\n2 3\\n3 1\\n\") == \"1\\n1\\n\"\nassert solution(\"4 5\\n1 2\\n1 3\\n3 2\\n2 4\\n3 4\\n\") == \"0\\n2\\n4\\n5\\n\""
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == [0, 2]\nassert solution() == [0, 1]\nassert solution() == [0, 1]\nassert solution() == [0, 1]\nassert solution() == [0, 1]"
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\n1 2\\n2 1\\n\") == \"1\\n2\"\nassert solution(\"3 3\\n1 2\\n2 3\\n3 1\\n\") == \"1\\n1\"\nassert solution(\"4 5\\n1 2\\n1 3\\n3 2\\n2 4\\n3 4\\n\") == \"0\\n2\\n4\\n5\""
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"\"\"\\\n1\n2\n1\n1\n2\n1\n1\n2\n1\n2\n1\n2\n2\n1\n1\n2\n2\n2\n1\n1\n1\n1\n2\n2\n2\n1\n1\n2\n2\n1\n1\n1\n2\n2\n2\n2\n2\n1\n1\n2\n2\n2\n2\n2\n2\n1\n1\n1\n1\n1\n1\n2\n2\n1\n1\n1\n2\n2\n1\n1\n1\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n1\n1\n1\n2\n2\n2\n1\n1\n1\n1\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n1\n1\n1\n1\n1\n2\n2\n1\n1\n1\n1\n2\n2\n2\n2\n2\n2\n2\n2\n1\n1\n1\n1\n1\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n1\n1\n1\n1\n2\n2\n1\n1\n1\n1\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n1\n1\n1\n2\n2\n2\n1\n1\n1\n1\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n"
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\n1 2\\n2 1\\n\") == \"1\\n2\\n\"\nassert solution(\"3 3\\n1 2\\n2 3\\n3 1\\n\") == \"1\\n1\\n\"\nassert solution(\"4 5\\n1 2\\n1 3\\n3 2\\n2 4\\n3 4\\n\") == \"0\\n2\\n4\\n5\\n\""
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\n1 2\\n2 1\\n\") == \"1\\n2\\n\"\nassert solution(\"3 3\\n1 2\\n2 3\\n3 1\\n\") == \"1\\n1\\n\"\nassert solution(\"4 5\\n1 2\\n1 3\\n3 2\\n2 4\\n3 4\\n\") == \"0\\n2\\n4\\n5\\n\""
    },
    {
        "number": 3014,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n1 2\\n2 1\\n\") == \"1\\n2\\n\"\nassert solution(\"3 3\\n1 2\\n2 3\\n3 1\\n\") == \"1\\n1\\n\"\nassert solution(\"4 5\\n1 2\\n1 3\\n3 2\\n2 4\\n3 4\\n\") == \"0\\n2\\n4\\n5\\n\"\n"
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\\n\") == \"11\"\nassert solution(\"5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\\n\") == \"infinity\"\nassert solution(\"2 1 0 1\\n0 1 2\\n\") == \"2\"\nassert solution(\"3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\\n\") == \"infinity\"\n"
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n4 5 0 3\n0 1 1\n1 2 2\n2 0 4\n2 3 1\n2 3 3\n''') == '11\\n'\n\nassert solution('''\n5 5 0 4\n0 1 1\n1 2 1\n2 3 1\n3 0 1\n2 4 1\n''') == 'infinity\\n'\n\nassert solution('''\n2 1 0 1\n0 1 2\n''') == '2\\n'\n\nassert solution('''\n3 3 1 2\n0 1 1\n1 0 1\n1 2 1\n''') == 'infinity\\n'"
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '11'\nassert solution() == 'infinity'\nassert solution() == '2'\nassert solution() == 'infinity'"
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\\n\") == \"11\\n\"\nassert solution(\"5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\\n\") == \"infinity\\n\"\nassert solution(\"2 1 0 1\\n0 1 2\\n\") == \"2\\n\"\nassert solution(\"3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\\n\") == \"infinity\\n\"\nassert solution(\"3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\\n\") == \"3\\n\""
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3') == '11\\n'\nassert solution('5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1') == 'infinity\\n'\nassert solution('2 1 0 1\\n0 1 2') == '2\\n'\nassert solution('3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1') == 'infinity\\n'"
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input1) == '11\\n', 'Test 1 Failed'\nassert solution(input2) == 'infinity\\n', 'Test 2 Failed'\nassert solution(input3) == '2\\n', 'Test 3 Failed'\nassert solution(input4) == 'infinity\\n', 'Test 4 Failed'"
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\\n\") == \"11\\n\"\nassert solution(\"5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\\n\") == \"infinity\\n\"\nassert solution(\"2 1 0 1\\n0 1 2\\n\") == \"2\\n\"\nassert solution(\"3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\\n\") == \"infinity\\n\"\n"
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n\\tpass\\n\\n# Test cases\\n# Test case 1\\n# Test case 2\\n# Test case 3\\n# Test case 4\\n# Test case 5\\n# Test case 6\\n# Test case 7\\n# Test case 8\\n# Test case 9\\n# Test case 10\\n# Test case 11\\n# Test case 12\\n# Test case 13\\n# Test case 14\\n# Test case 15\\n# Test case 16\\n# Test case 17\\n# Test case 18\\n# Test case 19\\n# Test case 20\\n# Test case 21\\n# Test case 22\\n# Test case 23\\n# Test case 24\\n# Test case 25\\n# Test case 26\\n# Test case 27\\n# Test case 28\\n# Test case 29\\n# Test case 30\\n# Test case 31\\n# Test case 32\\n# Test case 33\\n# Test case 34\\n# Test case 35\\n# Test case 36\\n# Test case 37\\n# Test case 38\\n# Test case 39\\n# Test case 40\\n# Test case 41\\n# Test case 42\\n# Test case 43\\n# Test case 44\\n# Test case 45\\n# Test case 46\\n# Test case 47\\n# Test case 48\\n# Test case 49\\n# Test case 50\\n# Test case 51\\n# Test case 52\\n# Test case 53\\n# Test case 54\\n# Test case 55\\n# Test case 56\\n# Test case 57\\n# Test case 58\\n# Test case 59\\n# Test case 60\\n# Test case 61\\n# Test case 62\\n# Test case 63\\n# Test case 64\\n# Test case 65\\n# Test case 66\\n# Test case 67\\n# Test case 68\\n# Test case 69\\n# Test case 70\\n# Test case 71\\n# Test case 72\\n# Test case 73\\n# Test case 74\\n# Test case 75\\n# Test case 76\\n# Test case 77\\n# Test case 78\\n# Test case 79\\n# Test case 80\\n# Test case 81\\n# Test case 82\\n# Test case 83\\n# Test case 84\\n# Test case 85\\n# Test case 86\\n# Test case 87\\n# Test case 88\\n# Test case 89\\n# Test case 90\\n# Test case 91\\n# Test case 92\\n# Test case 93\\n# Test case 94\\n# Test case 95\\n# Test case 96\\n# Test case 97\\n# Test case 98\\n# Test case 99\\n# Test case 100\\n# Test case 101\\n# Test case 102\\n# Test case 103\\n# Test case 104\\n# Test case 105\\n# Test case 106\\n# Test case 107\\n# Test case 108\\n# Test case 109\\n# Test case 110\\n# Test case 111\\n# Test case 112\\n# Test case 113\\n# Test case 114\\n# Test case 115\\n# Test case 116\\n# Test case 117\\n# Test case 118\\n# Test case 119\\n# Test case 120\\n# Test case 121\\n# Test case 122\\n# Test case 123\\n"
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3\\n\") == \"11\\n\"\nassert solution(\"5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1\\n\") == \"infinity\\n\"\nassert solution(\"2 1 0 1\\n0 1 2\\n\") == \"2\\n\"\nassert solution(\"3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\\n\") == \"infinity\\n\""
    },
    {
        "number": 3015,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n4 5 0 3\n0 1 1\n1 2 2\n2 0 4\n2 3 1\n2 3 3\n''') == '11'\n\nassert solution('''\n5 5 0 4\n0 1 1\n1 2 1\n2 3 1\n3 0 1\n2 4 1\n''') == 'infinity'\n\nassert solution('''\n2 1 0 1\n0 1 2\n''') == '2'\n\nassert solution('''\n3 3 1 2\n0 1 1\n1 0 1\n1 2 1\n''') == 'infinity'"
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2 1 2 1\\n2 1 2\\n2 3 4\") == \"6\\n\"\nassert solution(\"3 3 1 1\\n1 1\\n2 2 3\") == \"0\\n\"\nassert solution(\"3 2 2 3\\n1 1\\n2 2 3\") == \"18\\n\"\nassert solution(\"3 1 2 3\\n2 1 2\\n0\") == \"12\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 2 1 2 1\\n2 1 2\\n2 3 4') == '6\\n'\nassert solution('3 3 1 1\\n1 1\\n2 2 3') == '0\\n'\nassert solution('3 2 2 3\\n1 1\\n2 2 3') == '18\\n'\nassert solution('3 1 2 3\\n2 1 2\\n0') == '12\\n'"
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2 1 2 1\\n2 1 2\\n2 3 4\") == \"6\\n\"\nassert solution(\"3 3 1 1\\n1 1\\n2 2 3\") == \"0\\n\"\nassert solution(\"3 2 2 3\\n1 1\\n2 2 3\") == \"18\\n\"\nassert solution(\"3 1 2 3\\n2 1 2\\n0\") == \"12\\n\""
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2 1 2 1\\n2 1 2\\n2 3 4\\n\") == \"6\"\nassert solution(\"3 3 1 1\\n1 1\\n2 2 3\\n\") == \"0\"\nassert solution(\"3 2 2 3\\n1 1\\n2 2 3\\n\") == \"18\"\nassert solution(\"3 1 2 3\\n2 1 2\\n0\\n\") == \"12\""
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 2 1 2 1\\n2 1 2\\n2 3 4') == '6'\nassert solution('3 3 1 1\\n1 1\\n2 2 3') == '0'\nassert solution('3 2 2 3\\n1 1\\n2 2 3') == '18'\nassert solution('3 1 2 3\\n2 1 2\\n0') == '12'\n"
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2 1 2 1\\n2 1 2\\n2 3 4\\n\") == \"6\\n\"\nassert solution(\"3 3 1 1\\n1 1\\n2 2 3\\n\") == \"0\\n\"\nassert solution(\"3 2 2 3\\n1 1\\n2 2 3\\n\") == \"18\\n\"\nassert solution(\"3 1 2 3\\n2 1 2\\n0\\n\") == \"12\\n\""
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2 1 2 1\\n2 1 2\\n2 3 4\") == \"6\\n\"\nassert solution(\"3 3 1 1\\n1 1\\n2 2 3\") == \"0\\n\"\nassert solution(\"3 2 2 3\\n1 1\\n2 2 3\") == \"18\\n\"\nassert solution(\"3 1 2 3\\n2 1 2\\n0\") == \"12\\n\""
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n4 2 1 2 1\n2 1 2\n2 3 4\n\"\"\") == \"6\"\n\nassert solution(\"\"\"\n3 3 1 1\n1 1\n2 2 3\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n3 2 2 3\n1 1\n2 2 3\n\"\"\") == \"18\"\n\nassert solution(\"\"\"\n3 1 2 3\n2 1 2\n0\n\"\"\") == \"12\""
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"6\", \"The output must be '6'.\"\nassert solution() == \"0\", \"The output must be '0'.\"\nassert solution() == \"18\", \"The output must be '18'.\"\nassert solution() == \"12\", \"The output must be '12'.\"\n"
    },
    {
        "number": 3016,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2 1 2 1\\n2 1 2\\n2 3 4\") == \"6\"\nassert solution(\"3 3 1 1\\n1 1\\n2 2 3\") == \"0\"\nassert solution(\"3 2 2 3\\n1 1\\n2 2 3\") == \"18\"\nassert solution(\"3 1 2 3\\n2 1 2\\n0\") == \"12\"\n"
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1000000 1\") == \"468559\"\nassert solution(\"1000000 5\") == \"49401\"\nassert solution(\"1000000 16\") == \"20\"\nassert solution(\"9000000000000000000 62\") == \"1\"\n\nfrom typing import List"
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(str(input())) == str(output()), \"Solution doesn't match expected output.\""
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1000000 1\") == \"468559\"\nassert solution(\"1000000 5\") == \"49401\"\nassert solution(\"1000000 16\") == \"20\"\nassert solution(\"9000000000000000000 62\") == \"1\""
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\nassert solution(sample_input_3) == sample_output_3\nassert solution(sample_input_4) == sample_output_4"
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"20\", \"Please provide valid input.\"\n"
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1000000 1\") == \"468559\"\nassert solution(\"1000000 5\") == \"49401\"\nassert solution(\"1000000 16\") == \"20\"\nassert solution(\"9000000000000000000 62\") == \"1\""
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1000000 1\") == \"468559\"\nassert solution(\"1000000 5\") == \"49401\"\nassert solution(\"1000000 16\") == \"20\"\nassert solution(\"9000000000000000000 62\") == \"1\"\n"
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1000000 1\") == 468559\nassert solution(\"1000000 5\") == 49401\nassert solution(\"1000000 16\") == 20\nassert solution(\"9000000000000000000 62\") == 1"
    },
    {
        "number": 3017,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 468559\n"
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 9\\n5 4 1\\n4 13\\n18 90\\n1 2 3 4 5 6 1 2 3 4 5 6\") == \"1\\n\"\nassert solution(\"4 13\\n2 2 2 2\\n3 11\") == \"3\\n\"\nassert solution(\"18 90\\n1 2 3 4 5 6 1 2 3 4 5 6\") == \"12\\n\""
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output, f\"Solution mismatch for input {stdin}\"\nfor i in range(2):\n    assert input().strip() == f\"Sample Input {i+1}\", f\"Input for sample case {i+1} is incorrect\"\n    expected_output = f\"Sample Output {i+1}\"\n    assert solution(input().strip()) == expected_output, f\"Solution mismatch for input {input().strip()}\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 9\\n5 4 1\") == \"1\\n\", \"The correct solution is: 1\"\nassert solution(\"4 13\\n2 2 2 2\") == \"3\\n\", \"The correct solution is: 3\"\nassert solution(\"18 90\\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\") == \"12\\n\", \"The correct solution is: 12\""
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, 9) == 1\nassert solution(4, 13) == 3\nassert solution(18, 90) == 12\n\nfrom typing import List"
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == \"1\", \"Test 1\"\nassert solution(sample_input_2) == \"3\", \"Test 2\"\nassert solution(sample_input_3) == \"12\", \"Test 3\"\n\nsample_input_1 = \"\"\"\n3 9\n5 4 1\n\"\"\"\n\nsample_input_2 = \"\"\"\n4 13\n2 2 2 2\n\"\"\"\n\nsample_input_3 = \"\"\"\n18 90\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\n\"\"\""
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('sample_input1.txt', 'r')) == '1'\nassert solution(open('sample_input2.txt', 'r')) == '3'\nassert solution(open('sample_input3.txt', 'r')) == '12'"
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 9\\n5 4 1\\n\") == \"1\\n\"\nassert solution(\"4 13\\n2 2 2 2\\n\") == \"3\\n\"\nassert solution(\"18 90\\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\\n\") == \"12\\n\"\nassert solution(\"2 1\\n1 1\\n\") == \"1\\n\"\nassert solution(\"10 2\\n5 4\\n10 8\\n\") == \"2\\n\"\nassert solution(\"10 10\\n5 4 1\\n\") == \"12\\n\"\nassert solution(\"10 10\\n1 2 3 4 5 6\\n\") == \"10\\n\""
    },
    {
        "number": 3018,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"3 9\\n5 4 1\") == \"1\\n\"\nassert solution(stdin=\"4 13\\n2 2 2 2\") == \"3\\n\"\nassert solution(stdin=\"18 90\\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\") == \"12\\n\""
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 3\nassert solution(100) == 0\nassert solution(101) == 0\nassert solution(102) == 1\nassert solution(103) == 1\nassert solution(104) == 2\nassert solution(105) == 2\nassert solution(106) == 3\nassert solution(107) == 3\nassert solution(108) == 4\nassert solution(109) == 4\nassert solution(110) == 5\nassert solution(111) == 5\nassert solution(112) == 6\nassert solution(113) == 6\nassert solution(114) == 7\nassert solution(115) == 7\nassert solution(116) == 8\nassert solution(117) == 8\nassert solution(118) == 9\nassert solution(119) == 9\nassert solution(120) == 10\nassert solution(121) == 10\nassert solution(122) == 11\nassert solution(123) == 11\nassert solution(124) == 12\nassert solution(125) == 12\nassert solution(126) == 13\nassert solution(127) == 13\nassert solution(128) == 14\nassert solution(129) == 14\nassert solution(130) == 15\nassert solution(131) == 15\nassert solution(132) == 16\nassert solution(133) == 16\nassert solution(134) == 17\nassert solution(135) == 17\nassert solution(136) == 18\nassert solution(137) == 18\nassert solution(138) == 19\nassert solution(139) == 19\nassert solution(140) == 20\nassert solution(141) == 20\nassert solution(142) == 21\nassert solution(143) == 21\nassert solution(144) == 22\nassert solution(145) == 22\nassert solution(146) == 23\nassert solution(147) == 23\nassert solution(148) == 24\nassert solution(149) == 24\nassert solution(150) == 25\nassert solution(151) == 25\nassert solution(152) == 26\nassert solution(153) == 26\nassert solution(154) == 27\nassert solution(155) == 27\nassert solution(156) == 28\nassert solution(157) == 28\nassert solution(158) == 29\nassert solution(159) == 29\nassert solution(160) == 30\nassert solution(161) == 30\nassert solution(162) == 31\nassert solution(163) == 31\nassert solution(164) == 32\nassert solution(165) == 32\nassert solution(166) == 33\nassert solution(167) == 33\nassert solution(168) == 34\nassert solution(169) == 34\nassert solution(170) == 35\nassert solution(171) == 35\nassert solution(172) == 36\nassert solution(173) == 36\nassert solution(174) == 37\nassert solution(175) == 37\nassert solution(176) == 38\nassert solution(177) == 38\nassert solution(178) == 39\nassert solution(179) == 39\nassert solution(180) == 40\nassert solution(181) == 40\nassert solution(182) == 41\nassert solution(183) == 41\nassert solution(184) == 42\nassert solution(185) == 42\nassert solution(18"
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected, f\"Test failed with input: {stdin}, expected output: {expected}\""
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 0\nassert solution(1) == 0\nassert solution(4) == 3\nassert solution(5) == 5"
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 5, \"Your implementation for solution 3 is not correct.\""
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == 0\nassert solution(2) == 0\nassert solution(3) == 3\nassert solution(4) == 3\nassert solution(5) == 5"
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"0\\n\""
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 5\nassert solution(5) == 5"
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n1\\n2\\n2\\n3\\n3\\n4\\n4\\n5\\n5\\n6\\n6\\n7\\n7\\n8\\n8\\n9\\n9\\n10\\n10\") == 0\nassert solution(\"3\\n4 7 8\\n5\\n2 3 4 5 8\") == 3\nassert solution(\"5\\n2 3 4 5 8\\n7\\n11 13 17 19 23 29\\n10 12 14 16 18 20 22 24 26 28 30 32 34 36 38 40 42 44 46 48 50 52 54 56 58 60 62 64 66 68 70 72 74 76 78 80 82 84 86 88 90 92 94 96 98 100\") == 5"
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n2\\n2\\n3\\n3\\n4\\n4\\n5\\n5\\n6\\n6\\n7\\n7\\n8\\n8\\n9\\n9\\n10\\n10\\n11\\n11\\n12\\n12\\n13\\n13\\n14\\n14\\n') == 0\nassert solution('3\\n4 7 8\\n5\\n2 3 4 5 8\\n6\\n1 2 3 4 5 6 7 8\\n7\\n9 5 3 10 13 7 5 10 10\\n8\\n14 12 11 12 14 10 10 12 14\\n9\\n1 2 3 4 5 6 7 8 9 10\\n10\\n11 12 13 14 15 16 17 18 19 20\\n11\\n12 13 14 15 16 17 18 19 20 21\\n12\\n13 14 15 16 17 18 19 20 21 22\\n13\\n14 15 16 17 18 19 20 21 22 23\\n14\\n15 16 17 18 19 20 21 22 23 24\\n15\\n16 17 18 19 20 21 22 23 24 25\\n16\\n17 18 19 20 21 22 23 24 25 26\\n17\\n18 19 20 21 22 23 24 25 26 27\\n18\\n19 20 21 22 23 24 25 26 27 28\\n19\\n20 21 22 23 24 25 26 27 28 29\\n20\\n21 22 23 24 25 26 27 28 29 30\\n21\\n22 23 24 25 26 27 28 29 30 31\\n22\\n23 24 25 26 27 28 29 30 31 32\\n23\\n24 25 26 27 28 29 30 31 32 33\\n24\\n25 26 27 28 29 30 31 32 33 34\\n25\\n26 27 28 29 30 31 32 33 34 35\\n26\\n27 28 29 30 31 32 33 34 35 36\\n27\\n28 29 30 31 32 33 34 35 36 37\\n28\\n29 30 31 32 33 34 35 36 37 38\\n29\\n30 31 32 33 34 35 36 37 38 39\\n30\\n31 32 33 34 35 36 37 38 39 40\\n31\\n32 33 34 35 36 37 38 39 40 41\\n32\\n33 34 35 36 37 38 39 "
    },
    {
        "number": 3019,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '0', \"Expected 0, but got {}\".format(solution(stdin))  # expected output: 0\nassert solution(stdin) == '3', \"Expected 3, but got {}\".format(solution(stdin))  # expected output: 3\nassert solution(stdin) == '5', \"Expected 5, but got {}\".format(solution(stdin))  # expected output: 5\nassert solution(stdin) == '0', \"Expected 0, but got {}\".format(solution(stdin))  # expected output: 0"
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"The output is {solution(input())}, but you expected {expected_output}.\""
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"149\") == \"17\"\nassert solution(\"123476544\") == \"11112\""
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"149\") == \"17\"\nassert solution(\"123476544\") == \"11112\""
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"149\") == \"17\"\nassert solution(\"123476544\") == \"11112\"\n\nprint(\"-1\")"
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\") == \"4\\n\"\nassert solution(\"149\") == \"17\\n\"\nassert solution(\"123476544\") == \"11112\\n\""
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"149\") == \"17\"\nassert solution(\"123476544\") == \"11112\""
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\") == \"4\\n\", \"Test 1 failed\"\nassert solution(\"149\") == \"17\\n\", \"Test 2 failed\"\nassert solution(\"123476544\") == \"11112\\n\", \"Test 3 failed\""
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"149\") == \"17\"\nassert solution(\"123476544\") == \"11112\""
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(6) == 4\nassert solution(149) == 17\nassert solution(123476544) == 11112"
    },
    {
        "number": 3020,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"149\") == \"17\"\nassert solution(\"123476544\") == \"11112\""
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('d 4\\ncaeb\\n') == 'adcb'\nassert solution('c 4\\naabc\\nbbca\\ncabc\\n') == 'IMPOSSIBLE'\nassert solution('f 2\\ndea\\ncfb\\n') == 'AMBIGUOUS'"
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"d 4\\ncab\\ncda\\nccc\\nbadca\") == \"adcb\"\nassert solution(\"c 4\\nabc\\nbca\\ncab\\naca\") == \"IMPOSSIBLE\"\nassert solution(\"f 2\\ndea\\ncfb\") == \"AMBIGUOUS\"\n"
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('d 4\\ncab\\ncda\\nccc\\nbadca') == 'adcb'\nassert solution('c 4\\nabc\\nbca\\ncab\\naca') == 'IMPOSSIBLE'\nassert solution('f 2\\ndea\\ncfb') == 'AMBIGUOUS'"
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed. Expected output: {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"d 4\\ncab\\ncda\\nccc\\nbadca\") == \"adcb\\n\"\nassert solution(\"c 4\\nabc\\nbca\\ncab\\naca\") == \"IMPOSSIBLE\\n\"\nassert solution(\"f 2\\ndea\\ncfb\") == \"AMBIGUOUS\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"d 4\\ncab\\ncda\\nccc\\nbadca\") == \"adcb\\n\"\nassert solution(\"c 4\\nabc\\nbca\\ncab\\naca\") == \"IMPOSSIBLE\\n\"\nassert solution(\"f 2\\ndea\\ncfb\") == \"AMBIGUOUS\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('d 4\\ncab\\ncda\\nccc\\nbadca') == 'adcb'\nassert solution('c 4\\nabc\\nbca\\ncab\\naca') == 'IMPOSSIBLE'\nassert solution('f 2\\ndea\\ncfb') == 'AMBIGUOUS'\n"
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('tests/test_alphabet_order.txt', 'r')) == 'IMPOSSIBLE'\nassert solution(open('tests/test_alphabet_order.txt', 'r')) == 'AMBIGUOUS'"
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"d 4\\ncab\\ncda\\nccc\\nbadca\\n\") == \"adcb\\n\"\nassert solution(\"c 4\\nabc\\nbca\\ncab\\naca\\n\") == \"IMPOSSIBLE\\n\"\nassert solution(\"f 2\\ndea\\ncfb\\n\") == \"AMBIGUOUS\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3021,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"d 4\\ncab\\ncda\\nccc\\nbadca\\n\") == \"adcb\\n\"\n\nassert solution(\"c 4\\nabc\\nbca\\ncab\\naca\\n\") == \"IMPOSSIBLE\\n\"\n\nassert solution(\"f 2\\ndea\\ncfb\\n\") == \"AMBIGUOUS\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3 3 3\\n10 20 0 0\\n100 20 543 12\") == \"9\\n\", \"The output is incorrect\"\n\nassert solution(\"10 20 0 0\\n2 3 3 3\\n100 20 543 12\") == \"10\\n\", \"The output is incorrect\"\n\nassert solution(\"100 20 543 12\\n2 3 3 3\\n10 20 0 0\") == \"164\\n\", \"The output is incorrect\""
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=input()) == \"164\""
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3 3 3\") == 9\nassert solution(\"10 20 0 0\") == 10\nassert solution(\"100 20 543 12\") == 164"
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3 3 3\\n10 20 0 0\\n100 20 543 12\") == \"9\\n10\\n164\" # correct"
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3 3 3\\n10 20 0 0\\n100 20 543 12\") == \"9\"\nassert solution(\"2 3 3 3\\n2 3 3 3\\n2 3 3 3\\n2 3 3 3\") == \"9\"\nassert solution(\"10 20 0 0\\n100 20 543 12\\n100 20 543 12\\n100 20 543 12\\n100 20 543 12\\n100 20 543 12\\n100 20 543 12\\n100 20 543 12\\n100 20 543 12\\n100 20 543 12\\n100 20 543 12\\n100 20 543 12\\n100 20 543 12\\n100 20 543 12\\n100 20 543 12\\n100 20 543 12\\n100 20 543 12\\n100 20 543 12\\n100 20 543 12\\n100 20 543 12\\n100 20 543 12\\n100 20 543 12\\n100 20 543 12\\n100 20 543 12\\n100 20 543 12\\n100 20 543 12\\n100 20 543 12\\n100 20 543 12\\n100 20 543 12\\n100 20 543 12\\n100 20 543 12\\n100 20 543 12\\n100 20 543 12\\n100 20 543 12\\n100 20 543 12\\n100 20 543 12\\n100 20 543 12\\n100 20 543 12\\n100 20 543 12\\n100 20 543 12\\n100 20 543 12\\n100 20 543 12\\n100 20 543 12\\n100 20 543 12\\n100 20 543 12\\n100 20 543 12\\n100 20 543 12\\n100 20 543 12\\n100 20 543 12\\n100 20 543 12\\n100 20 543 12\\n100 20 543 12\\n100 20 543 12\\n100 20 543 12\\n100 20 543 12\\n100 20 543 12\\n100 20 543 12\\n100 20 543 12\\n100 20 543 12\\n100 20 543 12\\n100 20 543 12\\n100 20 543 12\\n100 20 543 1"
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"9\", \"Incorrect output\"\nassert solution() == \"10\", \"Incorrect output\"\nassert solution() == \"164\", \"Incorrect output\"\n"
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 3 3 3') == '9', \"Expected output: 9, but got: {}\".format(solution('2 3 3 3'))\nassert solution('10 20 0 0') == '10', \"Expected output: 10, but got: {}\".format(solution('10 20 0 0'))\nassert solution('100 20 543 12') == '164', \"Expected output: 164, but got: {}\".format(solution('100 20 543 12'))"
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"9\"\nassert solution() == \"10\"\nassert solution() == \"164\""
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3 3 3\") == \"9\", \"Test 1 failed\"\nassert solution(\"10 20 0 0\") == \"10\", \"Test 2 failed\"\nassert solution(\"100 20 543 12\") == \"164\", \"Test 3 failed\""
    },
    {
        "number": 3022,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3 3 3\") == \"9\"\nassert solution(\"10 20 0 0\") == \"10\"\nassert solution(\"100 20 543 12\") == \"164\"\n"
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 'yes'\nprint(\"yes\")\n\nassert solution() == 'no'\nprint(\"no\")"
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2\nassert solution(sample_input_3) == expected_output_3"
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n2 1 0\") == \"yes\", \"First example\"\nassert solution(\"4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\") == \"no\", \"Second example\"\nassert solution(\"3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\") == \"yes\", \"Third example\""
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"yes\"\n"
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n2 1 0\") == \"yes\"\nassert solution(\"4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\") == \"no\"\nassert solution(\"3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\") == \"yes\""
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n2 1 0\") == \"yes\", \"Sample Input 1 failed.\"\nassert solution(\"4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\") == \"no\", \"Sample Input 2 failed.\"\nassert solution(\"3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\") == \"yes\", \"Sample Input 3 failed.\""
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n2 1 0') == 'yes'\nassert solution('4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0') == 'no'\nassert solution('3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12') == 'yes'"
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected, f\"Expected output {expected}, but got {solution(stdin)}\""
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n2 1 0\") == \"yes\"\nassert solution(\"4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\") == \"no\"\nassert solution(\"3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\") == \"yes\""
    },
    {
        "number": 3023,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n2 1 0\") == \"yes\", \"Expected 'yes' but got '{}'\".format(solution(\"4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 0\\n2 1 0\"))\nassert solution(\"4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\") == \"no\", \"Expected 'no' but got '{}'\".format(solution(\"4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\"))\nassert solution(\"3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\") == \"yes\", \"Expected 'yes' but got '{}'\".format(solution(\"3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\"))"
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"652526\") == \"4\"\nassert solution(\"12121131221\") == \"7\"\nassert solution(\"123456789\") == \"1\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"652526\") == \"4\", \"The given string should split the string 652526 into 4 parts as 6|52|52|6, and these parts together form a palindrome.\"\n\nassert solution(\"12121131221\") == \"7\", \"The given string should split the string 12121131221 into 7 parts as 1|2|2|1|3|1, and these parts together form a palindrome.\"\n\nassert solution(\"123456789\") == \"1\", \"The given string should split the string 123456789 into 1 parts as 123456789. The parts together form a palindrome.\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('652526') == '4'\nassert solution('12121131221') == '7'\nassert solution('123456789') == '1'"
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"652526\") == \"4\", \"Invalid input\"\nassert solution(\"12121131221\") == \"7\", \"Invalid input\"\nassert solution(\"123456789\") == \"1\", \"Invalid input\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"652526\") == \"4\", \"Case 1\"\nassert solution(\"12121131221\") == \"7\", \"Case 2\"\nassert solution(\"123456789\") == \"1\", \"Case 3\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('652526') == '4'\nassert solution('12121131221') == '7'\nassert solution('123456789') == '1'"
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"652526\") == \"4\"\nassert solution(\"12121131221\") == \"7\"\nassert solution(\"123456789\") == \"1\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"652526\") == \"4\"\nassert solution(\"12121131221\") == \"7\"\nassert solution(\"123456789\") == \"1\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"652526\") == \"4\"\nassert solution(\"12121131221\") == \"7\"\nassert solution(\"123456789\") == \"1\""
    },
    {
        "number": 3024,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(652526) == 4, \"Expected 4, got {}\".format(solution(652526))\nassert solution(12121131221) == 7, \"Expected 7, got {}\".format(solution(12121131221))\nassert solution(123456789) == 1, \"Expected 1, got {}\".format(solution(123456789))"
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n1\\n1 2\\n2 3\\n1 3\\n\") == \"0\"\nassert solution(\"4 4\\n24 10\\n1 3\\n2 3\\n2 4\\n1 4\\n\") == \"24\"\nassert solution(\"6 8\\n100 500 300 75\\n1 3\\n1 4\\n3 6\\n4 5\\n3 5\\n4 6\\n2 5\\n2 6\\n\") == \"800\"\n"
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    3 3\n    1\n    1 2\n    2 3\n    1 3\n    \"\"\"\n) == \"0\\n\"\n\nassert solution(\n    \"\"\"\n    4 4\n    24 10\n    1 3\n    2 3\n    2 4\n    1 4\n    \"\"\"\n) == \"24\\n\"\n\nassert solution(\n    \"\"\"\n    6 8\n    100 500 300 75\n    1 3\n    1 4\n    3 6\n    4 5\n    3 5\n    4 6\n    2 5\n    2 6\n    \"\"\"\n) == \"800\\n\""
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3 3\n1\n1 2\n2 3\n1 3\n\"\"\") == \"0\\n\"\n\nassert solution(\"\"\"\n4 4\n24 10\n1 3\n2 3\n2 4\n1 4\n\"\"\") == \"24\\n\"\n\nassert solution(\"\"\"\n6 8\n100 500 300 75\n1 3\n1 4\n3 6\n4 5\n3 5\n4 6\n2 5\n2 6\n\"\"\") == \"800\\n\""
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n1\\n1 2\\n2 3\\n1 3\\n\") == \"0\\n\"\nassert solution(\"4 4\\n24 10\\n1 3\\n2 3\\n2 4\\n1 4\\n\") == \"24\\n\"\nassert solution(\"6 8\\n100 500 300 75\\n1 3\\n1 4\\n3 6\\n4 5\\n3 5\\n4 6\\n2 5\\n2 6\\n\") == \"800\\n\""
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"0\""
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n1\\n1 2\\n2 3\\n1 3\\n\") == \"0\\n\"\nassert solution(\"4 4\\n24 10\\n1 3\\n2 3\\n2 4\\n1 4\\n\") == \"24\\n\"\nassert solution(\"6 8\\n100 500 300 75\\n1 3\\n1 4\\n3 6\\n4 5\\n3 5\\n4 6\\n2 5\\n2 6\\n\") == \"800\\n\""
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n1\\n1 2\\n2 3\\n1 3\\n\") == \"0\\n\"\nassert solution(\"4 4\\n24 10\\n1 3\\n2 3\\n2 4\\n1 4\\n\") == \"24\\n\"\nassert solution(\"6 8\\n100 500 300 75\\n1 3\\n1 4\\n3 6\\n4 5\\n3 5\\n4 6\\n2 5\\n2 6\\n\") == \"800\\n\""
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n1\\n1 2\\n2 3\\n1 3\\n\\n4 4\\n24 10\\n1 3\\n2 3\\n2 4\\n1 4\\n\\n6 8\\n100 500 300 75\\n1 3\\n1 4\\n3 6\\n4 5\\n3 5\\n4 6\\n2 5\\n2 6\\n\") == \"0\\n\"\nassert solution(\"4 4\\n24 10\\n1 3\\n2 3\\n2 4\\n1 4\\n\\n6 8\\n100 500 300 75\\n1 3\\n1 4\\n3 6\\n4 5\\n3 5\\n4 6\\n2 5\\n2 6\\n\") == \"24\\n\"\nassert solution(\"6 8\\n100 500 300 75\\n1 3\\n1 4\\n3 6\\n4 5\\n3 5\\n4 6\\n2 5\\n2 6\\n\") == \"800\\n\""
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"0\"\nassert solution() == \"24\"\nassert solution() == \"800\""
    },
    {
        "number": 3025,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input1) == sample_output1, f\"Test 1 failed. Expected {sample_output1}, got {solution(sample_input1)}\"\nassert solution(sample_input2) == sample_output2, f\"Test 2 failed. Expected {sample_output2}, got {solution(sample_input2)}\"\nassert solution(sample_input3) == sample_output3, f\"Test 3 failed. Expected {sample_output3}, got {solution(sample_input3)}\""
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test failed: solution({input()})!= expected_output\"\n"
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 3 2 4\") == \"1 4\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1 2 3 4 5\"\nassert solution(\"4\\n2 1 4 3\") == \"-1\""
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n1 3 2 4\\n') == ['1', '4']\nassert solution('5\\n1 2 3 4 5\\n') == ['1', '2', '3', '4', '5']\nassert solution('4\\n2 1 4 3\\n') == [-1]"
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), \"Test failed\""
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin_str=\"4\\n1 3 2 4\") == \"1 4\"\nassert solution(stdin_str=\"5\\n1 2 3 4 5\") == \"1 2 3 4 5\"\nassert solution(stdin_str=\"4\\n2 1 4 3\") == \"-1\""
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Test case failed: {solution(input())}!= {output()}\""
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 3 2 4\\n\") == \"1 4\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"1 2 3 4 5\"\nassert solution(\"4\\n2 1 4 3\\n\") == \"-1\"\n"
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output"
    },
    {
        "number": 3026,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 3 2 4\") == \"1 4\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1 2 3 4 5\"\nassert solution(\"4\\n2 1 4 3\") == \"-1\""
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '8', 'Input 1 is not correct'\nassert solution(input()) == '1', 'Input 2 is not correct'\nassert solution(input()) == '5', 'Input 3 is not correct'"
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} is incorrect.\""
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Test case {test_case} failed\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"8\\n\", \"Test case 1 failed\"\nassert solution(input()) == \"8\\n\", \"Test case 2 failed\"\nassert solution(input()) == \"1\\n\", \"Test case 3 failed\"\nassert solution(input()) == \"5\\n\", \"Test case 4 failed\""
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"8\", \"Expected output: 8. Got: {}.\".format(solution(input()))"
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\nassert solution(sample_input_3) == sample_output_3"
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Test Case {t+1} failed. Expected output: {output}, but got: {solution(input())}\""
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == 8, \"Your solution is incorrect\"\nprint(\"Correct\")"
    },
    {
        "number": 3027,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"..#..#..\") == 8\nassert solution(\"..#..\") == 8\nassert solution(\"..#..#..\") == 8\nassert solution(\"...#.#.#\") == 1\nassert solution(\".#.#.#.#\") == 3\nassert solution(\"..#.#..#\") == 5"
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''4 5 5\n2 1 1 1 2\n5 3 4 4 3\n4 3 3 3 2\n3 1 3 3 1''') == '6\\n19 12 2 18 5 5\\n'\nassert solution('''3 3 3\n3 1 1\n1 3 2\n3 2 3''') == '13\\n4 2 6 1 9 7 5 5 7 1 2 3 3\\n'\nassert solution('''3 2 2\n1 2\n2 1\n1 2''') == '-1\\n'"
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\\n\") == \"6\\n19 12 2 18 5 5\"\nassert solution(\"3 3 3\\n3 1 1\\n1 3 2\\n3 2 3\\n\") == \"13\\n4 2 6 1 9 7 5 5 7 1 2 3 3\"\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\\n\") == \"-1\""
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Incorrect output: {solution(input())}\""
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input(\"4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\\n\")) == 6\nassert solution(input(\"3 3 3\\n3 1 1\\n1 3 2\\n3 2 3\\n\")) == 13\nassert solution(input(\"3 2 2\\n1 2\\n2 1\\n1 2\\n\")) == -1"
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1') == '6\\n19 12 2 18 5 5'\nassert solution('3 3 3\\n3 1 1\\n1 3 2\\n3 2 3') == '13\\n4 2 6 1 9 7 5 5 7 1 2 3 3'\nassert solution('3 2 2\\n1 2\\n2 1\\n1 2') == '-1'"
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\") == \"6\\n19 12 2 18 5 5\"\nassert solution(\"3 3 3\\n3 1 1\\n1 3 2\\n3 2 3\") == \"13\\n4 2 6 1 9 7 5 5 7 1 2 3 3\"\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\") == \"-1\""
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\") == \"6\\n19 12 2 18 5 5\"\nassert solution(\"3 3 3\\n3 1 1\\n1 3 2\\n3 2 3\") == \"13\\n4 2 6 1 9 7 5 5 7 1 2 3 3\"\nassert solution(\"3 2 2\\n1 2\\n2 1\\n1 2\") == \"-1\""
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test case {case + 1} failed. Expected output: {expected_output}, but got: {solution(input())}\""
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"primonimo.input\", \"r\").read()) == \"19 12 2 18 5 5\"\nassert solution(open(\"primonimo.input\", \"r\").read()) == \"4 2 6 1 9 7 5 5 7 1 2 3 3\"\nassert solution(open(\"primonimo.input\", \"r\").read()) == \"-1\""
    },
    {
        "number": 3028,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\\n') == 6\nassert solution('3 3 3\\n3 1 1\\n1 3 2\\n3 2 3\\n') == 13\nassert solution('3 2 2\\n1 2\\n2 1\\n1 2\\n') == -1"
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n3\\n3\\n3\\n3\\n3\\n1\\n2\\n3\\n4\\n\") == \"5 1\"\nassert solution(\"5\\n4\\n3\\n2\\n1\\n0\\n1\\n2\\n3\\n4\\n\") == \"1 5\"\nassert solution(\"4\\n1\\n5\\n3\\n6\\n1\\n2\\n3\\n\") == \"3 2\""
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == [\"5 1\", \"1 5\"]"
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n3\\n3\\n3\\n3\\n3\\n1\\n2\\n3\\n4\\n\") == \"5 1\\n\"\nassert solution(\"5\\n4\\n3\\n2\\n1\\n0\\n1\\n2\\n3\\n4\\n\") == \"1 5\\n\"\nassert solution(\"4\\n1\\n5\\n3\\n6\\n1\\n2\\n3\\n\") == \"3 2\\n\""
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == \"5 1\"\nassert solution(2) == \"1 5\"\nassert solution(3) == \"3 2\"\nassert solution(4) == \"3 2\""
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n3\\n3\\n3\\n3\\n3\\n1\\n2\\n3\\n4\") == \"5 1\\n\"\nassert solution(\"5\\n4\\n3\\n2\\n1\\n0\\n1\\n2\\n3\\n4\") == \"1 5\\n\"\nassert solution(\"4\\n1\\n5\\n3\\n6\\n1\\n2\\n3\") == \"3 2\\n\""
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\nassert solution(sample_input_3) == sample_output_3"
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == expected, f\"Expected {expected}, got {solution()}\""
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n\\tpass\\n\"\nassert \"\\n\" in solution"
    },
    {
        "number": 3029,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3\\n3\\n3\\n3\\n3\\n1\\n2\\n3\\n4\") == \"5 1\"\nassert solution(\"5\\n4\\n3\\n2\\n1\\n0\\n1\\n2\\n3\\n4\") == \"1 5\"\nassert solution(\"4\\n1\\n5\\n3\\n6\\n1\\n2\\n3\") == \"3 2\"\n\nfrom math import isqrt, gcd"
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input) == expected, f\"Expected: {expected}\\nGot: {solution(input)}\""
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"0\", \"The function should return '0' when given an empty input.\"\nassert solution(\"1\") == \"1\", \"The function should return '1' when given a single node.\""
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 0\\n3 1\\n3 2\\n3 3\\n3 4\") == \"1\\n\"\nassert solution(\"5\\n4 0\\n3 1\\n2 2\\n1 3\\n0 4\") == \"5\\n\"\nassert solution(\"6\\n3 0\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\") == \"5\\n\"\nassert solution(\"5\\n4 0\\n3 1\\n2 2\\n1 3\\n0 4\") == \"5\\n\""
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == sample_output\n\nfor _ in range(test_cases):\n    n = int(stdin.readline().strip())\n    graph = [[] for _ in range(n)]\n    for _ in range(n - 1):\n        u, v = map(int, stdin.readline().strip().split())\n        graph[u - 1].append((v - 1, 1))\n        graph[v - 1].append((u - 1, 1))\n\n    answer = solution(n)\n    assert answer == expected_output"
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 1\nassert solution(5) == 5\n\nfrom heapq import heappush, heappop"
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Sample Input 1\", \"Sample Output 1\") == \"1\"\nassert solution(\"Sample Input 2\", \"Sample Output 2\") == \"5\"\nassert solution(\"Sample Input 3\", \"Sample Output 3\") == \"5\"\n"
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output"
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 1\nassert solution(5) == 5\nassert solution(6) == 5\nassert solution(7) == 5\nassert solution(8) == 5"
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n5\n3 0\n3 1\n3 2\n3 3\n3 4\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"\n5\n4 0\n3 1\n2 2\n1 3\n0 4\n\"\"\") == \"5\"\n\nassert solution(\n\"\"\"\n6\n3 0\n1 1\n2 1\n3 1\n4 1\n5 1\n\"\"\") == \"5\""
    },
    {
        "number": 3030,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n3 0\\n3 1\\n3 2\\n3 3\\n3 4\") == 1\nassert solution(\"5\\n4 0\\n3 1\\n2 2\\n1 3\\n0 4\") == 5\nassert solution(\"6\\n3 0\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\") == 5"
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Test case failed. Expected: {output()}, Got: {solution(input())}\""
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution\nprint(solution())"
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"The solution provided does not match the expected output.\"\n"
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '0\\n5\\n1\\n2\\n3\\n6\\n7\\n'"
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt').read()) == '''\n4\n3\n4\n5\n6\n'''"
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '''\n0\n5\n1\n2\n3\n6\n7\n'''\n\nimport random"
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '4\\n3\\n4\\n5\\n6\\n'\n"
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution\n\nfrom itertools import combinations\n\nn = int(stdin.readline())\na = list(map(int, stdin.readline().split()))\nb = list(map(int, stdin.readline().split()))\nc = list(map(int, stdin.readline().split()))\n\ngraph = list()\n\nfor i in range(n):\n    graph.append([set(), set()])\n\nfor i in range(n - 1):\n    graph[a[i]].append(i)\n    graph[b[i]].append(i)"
    },
    {
        "number": 3031,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8\\n1 3 1\\n2 3 1\\n3 4 3\\n4 5 4\\n5 6 3\\n6 7 2\\n6 8 2\") == \"4\\n3\\n4\\n5\\n6\\n6\\n\"\nassert solution(\"8\\n1 2 2\\n1 3 1\\n2 4 3\\n2 7 1\\n3 5 2\\n5 6 2\\n7 8 1\") == \"0\\n\"\nassert solution(\"9\\n1 2 2\\n1 3 1\\n1 4 5\\n1 5 5\\n2 6 3\\n3 7 3\\n4 8 1\\n5 9 2\") == \"5\\n1\\n2\\n3\\n6\\n7\\n7\\n\""
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output\n\nimport math"
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 'Output', 'The solution does not match the expected output.'"
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Test case failed: {input()}!= {output}\"\n"
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2\\nV1 V2 V1 V1 V2\\n\") == \"5\\n\"\nassert solution(\"2 1\\nV1 V2 V1 V1 V2\\n\") == \"6\\n\"\nassert solution(\"1 2\\nR10 V1 V2 V1 E\\n\") == \"30\\n\""
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2\\nV1 V2 V1 V1 V2\\n\") == \"5\"\nassert solution(\"2 1\\nV1 V2 V1 V1 V2\\n\") == \"6\"\nassert solution(\"1 2\\nR10 V1 V2 V1 E\\n\") == \"30\""
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2\\nV1 V2 V1 V1 V2\") == \"5\\n\"\nassert solution(\"2 1\\nV1 V2 V1 V1 V2\") == \"6\\n\"\nassert solution(\"1 2\\nR10 V1 V2 V1 E\") == \"30\\n\"\n"
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2\\nV1 V2 V1 V1 V2\\n\") == \"5\"\nassert solution(\"2 1\\nV1 V2 V1 V1 V2\\n\") == \"6\"\nassert solution(\"1 2\\nR10 V1 V2 V1 E\\n\") == \"30\"\n\nfrom typing import List"
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"The minimum number of instructions that must be executed to complete the program is: 5\"\nprint(\"The minimum number of instructions that must be executed to complete the program is: 5\")"
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2\\nV1 V2 V1 V1 V2\") == 5\nassert solution(\"2 1\\nV1 V2 V1 V1 V2\") == 6\nassert solution(\"1 2\\nR10 V1 V2 V1 E\") == 30"
    },
    {
        "number": 3032,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output\nprint(\"Passed\")"
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=None) == \"impossible\""
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 24\") == \"38\", \"Test 1\"\nassert solution(\"10 11\") == \"impossible\", \"Test 2\"\nassert solution(\"9 216\") == \"546\", \"Test 3\""
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input(1)) == \"38\"\nassert solution(sample_input(2)) == \"impossible\"\nassert solution(sample_input(3)) == \"546\""
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == \"38\"\nassert solution(sample_input_2) == \"impossible\"\nassert solution(sample_input_3) == \"546\""
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 24\") == \"38\"\nassert solution(\"10 11\") == \"impossible\"\nassert solution(\"9 216\") == \"546\""
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(10, 24) == 38\nassert solution(10, 11) == \"impossible\"\nassert solution(9, 216) == 546"
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 24\") == \"38\\n\"\nassert solution(\"10 11\") == \"impossible\\n\"\nassert solution(\"9 216\") == \"546\\n\""
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Solution does not match. Expected: {output()}, Received: {solution(input())}\"\n\ninput_ = input().split()\nB = int(input_[0])\nN = int(input_[1])"
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 24\") == \"38\"\nassert solution(\"10 11\") == \"impossible\"\nassert solution(\"9 216\") == \"546\""
    },
    {
        "number": 3033,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 24\") == 38\nassert solution(\"10 11\") == \"impossible\"\nassert solution(\"9 216\") == 546"
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Input: {stdin}\\nOutput: {solution(stdin)}\\nExpected output: {output}\\n\""
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"20 60 2 1\\n5 15 0.33333 30\\n22 60 0.66666 70\\n0 10\") == 466.662\nassert solution(\"3 4 2 1\\n1 3 0.25 8\\n2 4 0.66667 15\\n1 2\") == 10.00005\nassert solution(\"3 4 1 0\\n0 2 0.25 8\") == 2.0\n\nfrom typing import List"
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"20 60 2 1\\n5 15 0.33333 30\\n22 60 0.66666 70\\n0 10\") == 466.662\nassert solution(\"3 4 2 1\\n1 3 0.25 8\\n2 4 0.66667 15\\n1 2\") == 10.00005\nassert solution(\"3 4 1 0\\n0 2 0.25 8\") == 2.0"
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n20 60 2 1\n5 15 0.33333 30\n22 60 0.66666 70\n0 10\n''') == 466.662\n\nassert solution('''\n3 4 2 1\n1 3 0.25 8\n2 4 0.66667 15\n1 2\n''') == 10.00005\n\nassert solution('''\n3 4 1 0\n0 2 0.25 8\n''') == 2.0"
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"Output 1: 466.662\\n\"\nassert solution(open(\"input1.txt\", \"r\").read()) == \"Output 2: 10.00005\\n\"\nassert solution(open(\"input2.txt\", \"r\").read()) == \"Output 3: 2.0\\n\""
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"20 60 2 1\\n5 15 0.33333 30\\n22 60 0.66666 70\\n0 10\") == \"466.662\"\nassert solution(\"3 4 2 1\\n1 3 0.25 8\\n2 4 0.66667 15\\n1 2\") == \"10.00005\"\nassert solution(\"3 4 1 0\\n0 2 0.25 8\") == \"2.0\""
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('20 60 2 1\\n5 15 0.33333 30\\n22 60 0.66666 70\\n0 10') == 466.662\nassert solution('3 4 2 1\\n1 3 0.25 8\\n2 4 0.66667 15\\n1 2') == 10.00005\nassert solution('3 4 1 0\\n0 2 0.25 8') == 2.0"
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"20 60 2 1\\n5 15 0.33333 30\\n22 60 0.66666 70\\n0 10\") == \"466.662\"\nassert solution(\"3 4 2 1\\n1 3 0.25 8\\n2 4 0.66667 15\\n1 2\") == \"10.00005\"\nassert solution(\"3 4 1 0\\n0 2 0.25 8\") == \"2.0\""
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r')) == 466.662\nassert solution(open('input1.txt', 'r')) == 10.00005\nassert solution(open('input2.txt', 'r')) == 2.0"
    },
    {
        "number": 3034,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"466.662\\n\"\nassert solution(open(\"input1.txt\", \"r\").read()) == \"10.00005\\n\"\nassert solution(open(\"input2.txt\", \"r\").read()) == \"2.0\\n\"\nassert solution(open(\"input3.txt\", \"r\").read()) == \"2.0\\n\""
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == expected_output, f\"Solution incorrect: {solution} should be equal to {expected_output}.\""
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"blue pink 1.0\\nred pink 1.5\\nblue red 1.0\") == \"1.5\"\nassert solution(\"blue pink 1.0\\nblue red 1.0\\nred pink 1.5\") == \"1.5\"\nassert solution(\"blue pink 1.0\\nblue red 1.0\\nred pink 1.5\\nblue pink 1.0\\nblue red 1.0\\nred pink 1.5\") == \"1.5\"\nassert solution(\"blue pink 1.0\\nblue red 1.0\\nred pink 1.5\\nblue pink 1.0\\nblue red 1.0\\nred pink 1.5\\nblue pink 1.0\\nblue red 1.0\\nred pink 1.5\") == \"1.5\""
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 1.5000000000000000\nprint(\"Test Passed\")"
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Solution error: {solution(input())}!= {output}\""
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Sample Input 1\") == \"1.500000000000000\"\nassert solution(\"Sample Input 2\") == \"0.000000000000000\"\nassert solution(\"Sample Input 3\") == \"10.000000000000000\""
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"blue pink 1.0\") == \"1.5\"\nassert solution(\"red pink 1.5\") == \"1.5\"\nassert solution(\"blue red 1.0\") == \"1.5\"\nassert solution(\"orange pink 1.9\") == \"1.9\"\nassert solution(\"yellow orange 1.9\") == \"1.9\"\nassert solution(\"green yellow 1.9\") == \"1.9\"\nassert solution(\"blue green 1.9\") == \"1.9\""
    },
    {
        "number": 3035,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '1.500000000000000'\nassert solution(input()) == '0.000000000000000'\nassert solution(input()) == '10.000000000000000'"
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2 2 1 1\\n2 3 2\\n1 1\\n1 2\\n1 2\\n1 3\\n1 1\\n2 3\\n\") == \"22\"\nassert solution(\"6 1 1 1 0\\n2 3 1 5 3 2\\n2 1 2\\n3 3 4 5\\n1 6\\n\") == \"180\"\nassert solution(\"3 1 1 1 1\\n5 5 5\\n3 1 2 3\\n3 1 2 3\\n3 1 2 3\\n2 1\\n\") == \"0\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input1) == output1, f\"Test case 1 failed: {solution(input1)}!= {output1}\"\nassert solution(input2) == output2, f\"Test case 2 failed: {solution(input2)}!= {output2}\"\nassert solution(input3) == output3, f\"Test case 3 failed: {solution(input3)}!= {output3}\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 1 1 1 0\\n2 3 1 5 3 2\\n2 1 2\\n3 3 4 5\\n1 6\\n\") == \"180\\n\"\nassert solution(\"3 2 2 1 1\\n2 3 2\\n1 1\\n1 2\\n1 2\\n1 3\\n1 1\\n2 3\\n\") == \"22\\n\"\nassert solution(\"3 1 1 1 1\\n5 5 5\\n3 1 2 3\\n3 1 2 3\\n3 1 2 3\\n2 1\\n\") == \"0\\n\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"For input {input()}, expected output {expected_output}, but got {solution(input())}\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 1 1 1 0\\n2 3 1 5 3 2\\n2 1 2\\n3 3 4 5\\n1 6\\n\") == \"180\"\nassert solution(\"3 2 2 1 1\\n2 3 2\\n1 1\\n1 2\\n1 2\\n1 3\\n1 1\\n2 3\\n\") == \"22\"\nassert solution(\"3 1 1 1 1\\n5 5 5\\n3 1 2 3\\n3 1 2 3\\n3 1 2 3\\n2 1\\n\") == \"0\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 1 1 1 0\\n2 3 1 5 3 2\\n2 1 2\\n3 3 4 5\\n1 6\\n\") == \"180\"\nassert solution(\"3 2 2 1 1\\n2 3 2\\n1 1\\n1 2\\n1 2\\n1 3\\n1 1\\n2 3\\n\") == \"22\"\nassert solution(\"3 1 1 1 1\\n5 5 5\\n3 1 2 3\\n3 1 2 3\\n3 1 2 3\\n2 1\\n\") == \"0\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 1 1 1 0\\n2 3 1 5 3 2\\n2 1 2\\n3 3 4 5\\n1 6\\n\") == \"180\"\nassert solution(\"3 2 2 1 1\\n2 3 2\\n1 1\\n1 2\\n1 2\\n1 3\\n1 1\\n2 3\\n\") == \"22\"\nassert solution(\"3 1 1 1 1\\n5 5 5\\n3 1 2 3\\n3 1 2 3\\n3 1 2 3\\n2 1\\n\") == \"0\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6 1 1 1 0\\n2 3 1 5 3 2\\n2 1 2\\n3 3 4 5\\n1 6\\n') == '180'\nassert solution('3 2 2 1 1\\n2 3 2\\n1 1\\n1 2\\n1 2\\n1 3\\n1 1\\n2 3\\n') == '22'\nassert solution('3 1 1 1 1\\n5 5 5\\n3 1 2 3\\n3 1 2 3\\n3 1 2 3\\n2 1\\n') == '0'\nassert solution('1\\n') == 'too many'"
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"Solution not provided.\""
    },
    {
        "number": 3036,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 1 1 1 0\\n2 3 1 5 3 2\\n2 1 2\\n3 3 4 5\\n1 6\\n\") == \"180\"\nassert solution(\"3 2 2 1 1\\n2 3 2\\n1 1\\n1 2\\n1 2\\n1 3\\n1 1\\n2 3\\n\") == \"22\"\nassert solution(\"3 1 1 1 1\\n5 5 5\\n3 1 2 3\\n3 1 2 3\\n3 1 2 3\\n2 1\\n\") == \"0\""
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 1: 20 20\\n\\nSample Input 2: 6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 2: 17 17\\n\\nSample Input 3: 3 3 2\\n...\\n.#. \\n... \\nup 2\\nright 2\\nSample Output 3: -1 -1\\n\") == \"20 20\"\nassert solution(\"6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 1: -1 -1\\n\\nSample Input 2: 6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 2: 17 17\\n\\nSample Input 3: 3 3 2\\n... \\n.#. \\n... \\nup 2\\nright 2\\nSample Output 3: -1 -1\\n\") == \"17 17\"\nassert solution(\"3 3 2\\n... \\n.#. \\n... \\nup 2\\nright 2\\nSample Output 3: -1 -1\\n\") == \"-1 -1\""
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Input 1\\n6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 1\\n20 20\\nSample Input 2\\n6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 2\\n17 17\\nSample Input 3\\n3 3 2\\n...\\n.#.\\n...\\nup 2\\nright 2\\nSample Output 3\\n-1 -1\") == (20, 20)\nassert solution(\"6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Input 1\\n6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 1\\n20 20\\nSample Input 2\\n6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 2\\n17 17\\nSample Input 3\\n3 3 2\\n...\\n.#.\\n...\\nup 2\\nright 2\\nSample Output 3\\n-1 -1\") == (17, 17)\nassert solution(\"3 3 2\\n...\\n.#.\\n...\\nup 2\\nright 2\\nSample Input 1\\n6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 1\\n20 20\\nSample Input 2\\n6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 2\\n17 17\\nSample Input 3\\n3 3 2\\n...\\n.#.\\n...\\nup 2\\nright 2\\nSample Output 3\\n-1 -1\") == (-1, -1)"
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\n\") == \"20 20\\n\"\n\nassert solution(\"6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\n\") == \"17 17\\n\"\n\nassert solution(\"3 3 2\\n...\\n.#.\\n...\\nup 2\\nright 2\\n\") == \"-1 -1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n###\\n\") == \"-1 -1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n###\\n\""
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 1:\\n20 20\\n\\nSample Input 2:\\n6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 2:\\n17 17\\n\\nSample Input 3:\\n3 3 2\\n...\\n.#. \\n... \\nup 2\\nright 2\\nSample Output 3:\\n-1 -1\\n\") == (\"20 20\\n\", \"17 17\\n\")\nassert solution(\"3 3 2\\n...\\n.#. \\n... \\nup 2\\nright 2\\nSample Output 3:\\n-1 -1\\n\") == (\"-1 -1\\ndef solution(stdin: str) -> str:\\n    pass\\n\")\n"
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\n\") == \"20 20\\n\"\nassert solution(\"6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\n\") == \"17 17\\n\"\nassert solution(\"3 3 2\\n...\\n.#. \\n... \\nup 2\\nright 2\\n\") == \"-1 -1\\n\""
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 1:\\n20 20\\n\\nSample Input 2:\\n6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 2:\\n17 17\\n\\nSample Input 3:\\n3 3 2\\n...\\n.#."
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 1:\\n20 20\\n\\nSample Input 2:\\n6 8 5\\n........\\n........\\n###.####\\n#......#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 2:\\n17 17\\n\\nSample Input 3:\\n3 3 2\\n...\\n.#.\n...\nup 2\nright 2\\nSample Output 3:\\n-1 -1\\ndef solution(stdin: str) -> str:\\npass\\n\\n### Solution\\nThe earliest and latest time that the marker can dry out can be found by considering the whiteboard as a matrix. We can define a coordinate system to be the top left corner of the whiteboard, with the row number starting from 0, and the column number starting from 0. The time step is the number of steps from the origin to the current position. Here's the matrix of the whiteboard, with each cell being a character:"
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    6 8 5\n   ........\n   ........\n    ###.####\n    #......#\n    #..#####\n    #.......\n    up 3\n    right 7\n    down 2\n    left 4\n    up 3\n    \"\"\"\n) == \"20 20\"\n\nassert solution(\n    \"\"\"\n    6 8 5\n   ........\n   ........\n    ###.####\n    #......#\n    #..#####\n    #.......\n    up 3\n    right 7\n    down 2\n    left 4\n    up 3\n    \"\"\"\n) == \"17 17\"\n\nassert solution(\n    \"\"\"\n    3 3 2\n   ...\n   .#.\n   ...\n    up 2\n    right 2\n    \"\"\"\n) == \"-1 -1\""
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"Input {stdin} expected output {expected}\""
    },
    {
        "number": 3037,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Input 1:\\n6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\\nSample Output 1:\\n20 20\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n"
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"371\\n3\\n2 40 65\\n2 100 150\\n2 300 320\\n\") == \"impossible\\n\"\nassert solution(\"310\\n3\\n2 40 65\\n2 100 150\\n2 300 320\\n\") == \"300\\n\"\nassert solution(\"90\\n2\\n2 20 35\\n2 88 200\\n\") == \"88\\n\"\n"
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"371\\n3\\n2 40 65\\n2 100 150\\n2 300 320\") == \"impossible\\n\", \"Test case 1 failed\"\nassert solution(\"310\\n3\\n2 40 65\\n2 100 150\\n2 300 320\") == \"300\\n\", \"Test case 2 failed\"\nassert solution(\"90\\n2\\n2 20 35\\n2 88 200\") == \"88\\n\", \"Test case 3 failed\""
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"371\\n3\\n2 40 65\\n2 100 150\\n2 300 320\") == \"impossible\\n\"\nassert solution(\"310\\n3\\n2 40 65\\n2 100 150\\n2 300 320\") == \"300\\n\"\nassert solution(\"90\\n2\\n2 20 35\\n2 88 200\") == \"88\\n\"\nassert solution(\"310\\n10\\n1 1\\n2 2\\n2 3 4\\n2 4 5\\n3 6\\n4 7\\n5 8\\n6 9\\n7 10\\n8 11\\n9 12\\n10 13\\n11 14\\n12 15\\n13 16\\n14 17\\n15 18\\n16 19\\n17 20\\n18 21\\n19 22\\n20 23\\n21 24\\n22 25\\n23 26\\n24 27\\n25 28\\n26 29\\n27 30\\n28 31\\n29 32\\n30 33\\n31 34\\n32 35\\n33 36\\n34 37\\n35 38\\n36 39\\n37 40\\n38 41\\n39 42\\n40 43\\n41 44\\n42 45\\n43 46\\n44 47\\n45 48\\n46 49\\n47 50\\n48 51\\n49 52\\n50 53\\n51 54\\n52 55\\n53 56\\n54 57\\n55 58\\n56 59\\n57 60\\n58 61\\n59 62\\n60 63\\n61 64\\n62 65\\n63 66\\n64 67\\n65 68\\n66 69\\n67 70\\n68 71\\n69 72\\n70 73\\n71 74\\n72 75\\n73 76\\n74 77\\n75 78\\n76 79\\n77 80\\n78 81\\n79 82\\n80 83\\n81 84\\n82 85\\n83 86\\n84 87\\n85 88\\n86 89\\n87 90\\n88 91\\n89 92\\n90 93\\n91 94\\n92 95\\n93 96\\n94 97\\n95 98\\n96 99\\n97 100\\n98 101\\n99 102\\n100 103\\n101 104\\n102 105\\n103 106\\n104 107\\n105 108\\n106 109\\n107 110\\n108 111\\n109 112\\n110 113\\n111 114\\n112 115\\n113 116\\n114 117\\n115 118\\n116 119\\n117 120\\n118 121\\n119 122\\n120 "
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"impossible\", \"Solution for the given problem is: {}\".format(solution(stdin))"
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"371\\n3\\n2 40 65\\n2 100 150\\n2 300 320\") == \"impossible\"\\nassert solution(\"310\\n3\\n2 40 65\\n2 100 150\\n2 300 320\") == \"300\"\\nassert solution(\"90\\n2\\n2 20 35\\n2 88 200\") == \"88\""
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input1) == \"impossible\", \"Sample Output 1\"\nassert solution(sample_input2) == \"300\", \"Sample Output 2\"\nassert solution(sample_input3) == \"88\", \"Sample Output 3\""
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"impossible\"\n"
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(371) == 'impossible'\nassert solution(310) == '300'\nassert solution(90) == '88'"
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == 'impossible'"
    },
    {
        "number": 3038,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(371) == \"impossible\"\nassert solution(310) == \"300\"\nassert solution(90) == \"88\""
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"......\\n......\\n######\\n......\\n......\\n......\") == \"can fold\"\n\nassert solution(\"......\\n#.....\\n####..\\n#.....\\n......\\n......\") == \"cannot fold\"\n\nassert solution(\"..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\") == \"cannot fold\"\n\nassert solution(\"......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......\\n......"
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2\nassert solution(sample_input3) == sample_output3"
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n......\n......\n######\n......\n......\n......\n''') == 'can fold'\n\nassert solution('''\n......\n"
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input1) == output1, f\"Test {1} failed\"\nassert solution(input2) == output2, f\"Test {2} failed\"\nassert solution(input3) == output3, f\"Test {3} failed\""
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('......\\n......\\n######\\n......\\n......\\n......') == 'cannot fold\\n'\nassert solution('......\\n#.....\\n####..\\n#.....\\n......\\n......\\n......') == 'can fold\\n'\nassert solution('..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\\n......') == 'cannot fold\\n'\n"
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"......\\n......\\n######\\n......\\n......\\n......\\n\") == \"can fold\"\nassert solution(\"......\\n#.....\\n####..\\n#.....\\n......\\n......\\n......\\n\") == \"cannot fold\"\nassert solution(\"..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\\n......\\n\") == \"cannot fold\"\n\nfor _ in range(10):\n    stdin = input()\n    print(solution(stdin))"
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"......\\n......\\n######\\n......\\n......\\n......\") == \"cannot fold\"\nassert solution(\"......\\n#.....\\n####..\\n#.....\\n......\\n......\") == \"can fold\"\nassert solution(\"..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\") == \"cannot fold\""
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"......\\n......\\n######\\n......\\n......\\n......\\n\") == \"cannot fold\"\nassert solution(\"......\\n#.....\\n####..\\n#.....\\n......\\n......\\n\") == \"can fold\"\nassert solution(\"..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\\n\") == \"cannot fold\""
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n......\n......\n######\n......\n......\n......\nSample Input 1:\n......\n......\n######\n......\n......\n......\n......\nSample Output 1:\ncannot fold\n\"\"\") == \"cannot fold\"\n\nassert solution(\"\"\"\n......\n"
    },
    {
        "number": 3039,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"......\\n......\\n######\\n......\\n......\\n......\\n\") == \"cannot fold\"\nassert solution(\"......\\n#.....\\n####..\\n#.....\\n......\\n......\\n\") == \"can fold\"\nassert solution(\"..##..\\n...#..\\n..##..\\n...#..\\n......\\n......\\n\") == \"cannot fold\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('abcefgabc') == 'abc', \"The output should be 'abc'.\"\nassert solution('abcbabcba') == 'abcba', \"The output should be 'abcba'.\"\nassert solution('aaaa') == 'aaa', \"The output should be 'aaa'.\"\n\nfrom typing import List"
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abcefgabc\") == \"abc\", \"Test 1 failed\"\nassert solution(\"abcbabcba\") == \"abcba\", \"Test 2 failed\"\nassert solution(\"aaaa\") == \"aaa\", \"Test 3 failed\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('abcefgabc') == 'abc'\nassert solution('abcbabcba') == 'abcba'\nassert solution('aaaa') == 'aaa'"
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\""
    },
    {
        "number": 3040,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('abcefgabc') == 'abc'\nassert solution('abcbabcba') == 'abcba'\nassert solution('aaaa') == 'aaa'"
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == \"4\\n\"\nassert solution(sample_input_2) == \"6\\n\"\nassert solution(sample_input_3) == \"4\\n\""
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution([1, 4, 2, 5]) == 4\nassert solution([1, 4, 2, 10005]) == 6\nassert solution([1, 4, 2, 0, 15]) == 4"
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1 4\\n2 5\\n\") == \"4\"\nassert solution(\"2\\n1 4\\n2 10005\\n\") == \"6\"\nassert solution(\"3\\n1 4\\n2 10\\n0 15\\n\") == \"4\""
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1 4\\n2 5\") == 4\nassert solution(\"2\\n1 4\\n2 10005\") == 6\nassert solution(\"3\\n1 4\\n2 10\\n0 15\") == 4"
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1 4\\n2 5\") == \"4\\n\"\nassert solution(\"2\\n1 4\\n2 10005\") == \"6\\n\"\nassert solution(\"3\\n1 4\\n2 10\\n0 15\") == \"4\\n\"\n"
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\""
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"4\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"4\""
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '4'\n"
    },
    {
        "number": 3041,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 4, \"Expected 4, got {}\".format(solution())\n\nassert solution() == 6, \"Expected 6, got {}\".format(solution())\n\nassert solution() == 4, \"Expected 4, got {}\".format(solution())"
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n'7\\n2 3 4 4 8 12 24'\n) == '2\\n'\n\nassert solution(\n'3\\n7 7 7'\n) == '3\\n'\n\nassert solution(\n'5\\n1 2 3 2 1'\n) == '0\\n'"
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(2) == 2\nassert solution(3) == 3\nassert solution(5) == 0\n\nfrom functools import lcm\n"
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2\\n\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"Output the number of ways to arrange the given nodes into an LCM tree, modulo 10^9 + 7.\\n2\\n\"\n"
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(b'3\\n7 7 7') == '3\\n'\nassert solution(b'5\\n1 2 3 2 1') == '0\\n'"
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '2', 'The solution is incorrect.'\nassert solution() == '3', 'The solution is incorrect.'\nassert solution() == '0', 'The solution is incorrect.'"
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2\", \"Sample Output 1\"\nassert solution(stdin) == \"3\", \"Sample Output 2\"\nassert solution(stdin) == \"0\", \"Sample Output 3\"\n\nfrom typing import List"
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 0\n"
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"Output the number of ways to arrange the given nodes into an LCM tree, modulo 10^9 + 7.\\n\"\n"
    },
    {
        "number": 3042,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7\\n2 3 4 4 8 12 24\\n\") == \"2\"\nassert solution(\"3\\n7 7 7\\n\") == \"3\"\nassert solution(\"5\\n1 2 3 2 1\\n\") == \"0\""
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 5 4\\nS#.F.\\n.MFMG\\nSample Output 1: 3\\n\\nSample Input 2: 1 2 1\\nGS\\nSample Output 2: 1\\n\\nSample Input 3: 2 2 10\\nS#\\n#G\\nSample Output 3: -1\") == \"3\\n\\n1\\n\\n1\\n\"\nassert solution(\"1 2 1\\nGS\\nSample Output 2: 1\\n\\n2 2 10\\nS#\\n#G\\nSample Output 3: -1\") == \"1\\n\\n\"\nassert solution(\"2 2 10\\nS#\\n#G\\nSample Output 3: -1\") == \"-1\\n\"\n"
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 5 4\\nS#.F.\\n.MFMG\") == \"3\\n\"\nassert solution(\"1 2 1\\nGS\") == \"1\\n\"\nassert solution(\"2 2 10\\nS#\") == \"-1\\n\""
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 5 4\\nS#.F.\\n.MFMG') == '3'\nassert solution('1 2 1\\nGS') == '1'\nassert solution('2 2 10\\nS#') == '-1'"
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 5 4\\nS#.F.\\n.MFMG\\n') == '3'\nassert solution('1 2 1\\nGS\\n') == '1'\nassert solution('2 2 10\\nS#') == '-1'\n"
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 5 4\\nS#.F.\\n.MFMG\") == 3\nassert solution(\"1 2 1\\nGS\") == 1\nassert solution(\"2 2 10\\nS#\") == -1"
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r')) == '3'\nassert solution(open('sample_input1.txt', 'r')) == '3'\nassert solution(open('sample_input2.txt', 'r')) == '1'\nassert solution(open('sample_input3.txt', 'r')) == '-1'\n"
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"3\", \"The output should be 3.\"\nassert solution() == \"1\", \"The output should be 1.\"\nassert solution() == \"-1\", \"The output should be -1.\"\n"
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 5 4\\nS#.F.\\n.MFMG\") == 3\nassert solution(\"1 2 1\\nGS\") == 1\nassert solution(\"2 2 10\\nS#\") == -1"
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 5 4\\nS#.F.\\n.MFMG\") == 3\nassert solution(\"1 2 1\\nGS\") == 1\nassert solution(\"2 2 10\\nS#\") == -1"
    },
    {
        "number": 3043,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 5 4\\nS#.F.\\n.MFMG\") == \"3\\n\"\nassert solution(\"1 2 1\\nGS\") == \"1\\n\"\nassert solution(\"2 2 10\\nS#\") == \"-1\\n\""
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\nS..#\\nG..G\\nDRRDD\\n\") == \"1\\n\"\nassert solution(\"3 7\\n..#....#\\n.G.##S.#\\n..#....#\\nLDLDLLDR\\n\") == \"1\\n\"\nassert solution(\"3 7\\n..#....#\\n.G.##S.#\\n..#....#\\nULDLDLLDR\\n\") == \"2\\n\"\n"
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == 1, \"Expected Output 1, got {}\".format(solution(input()))\nassert solution(input()) == 2, \"Expected Output 2, got {}\".format(solution(input()))\nassert solution(input()) == 3, \"Expected Output 3, got {}\".format(solution(input()))"
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\nS..\\n.#.\\n..G\\nDRRDD\\n\") == \"1\\n\"\nassert solution(\"3 7\\n.......\\n.G.#.S.\\n.......\\nLDLDLLDR\\n\") == \"1\\n\"\nassert solution(\"3 7\\n.#.....\\n.G.##S.\\n.......\\nLDLDLLDR\\n\") == \"2\\n\""
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"sample_input1.txt\", \"r\").read()) == \"1\\n\"\nassert solution(open(\"sample_input2.txt\", \"r\").read()) == \"1\\n\"\nassert solution(open(\"sample_input3.txt\", \"r\").read()) == \"2\\n\""
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 3\\nS..\\n.#. \\n..G\\nDRRDD') == '1'\nassert solution('3 7\\n.......\\n.G.#.S.\\n.......\\nLDLDLLDR') == '1'\nassert solution('3 7\\n.#.....\\n.G.##S.\\n.......\\nLDLDLLDR') == '2'\n"
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 3\\nS..\\n.#.\\n..G\\nDRRDD') == '1\\n'\nassert solution('3 7\\n.......\\n.G.#.S.\\n.......\\nLDLDLLDR') == '1\\n'\nassert solution('3 7\\n.#.....\\n.G.##S.\\n.......\\nLDLDLLDR') == '2\\n'"
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\nS..\\n.#. \\n..G\\nDRRDD\\n\") == 1\nassert solution(\"3 7\\n.......\\n.G.#.S.\\n.......\\nLDLDLLDR\\n\") == 1\nassert solution(\"3 7\\n.#.....\\n.G.##S.\\n.......\\nLDLDLLDR\\n\") == 2\n"
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\nS..\\n.#.\\n..G\\nDRRDD\\nSample Output 1: 1\\n\") == \"1\\n\"\nassert solution(\"3 7\\n.......\\n.G.#.S.\\n.......\\nLDLDLLDR\\nSample Output 2: 1\\n\") == \"1\\n\"\nassert solution(\"3 7\\n.#.....\\n.G.##S.\\n.......\\nLDLDLLDR\\nSample Output 3: 2\\n\") == \"2\\n\""
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Solution for Input {input()} is {solution(input())}, not {expected_output}\""
    },
    {
        "number": 3044,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 3\\nS..\\n.#.\\n..G\\nDRRDD') == '1\\n'\nassert solution('3 7\\n.......\\n.G.#.S.\\n.......\\nLDLDLLDR') == '1\\n'\nassert solution('3 7\\n.#.....\\n.G.##S.\\n.......\\nLDLDLLDR') == '2\\n'"
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '1000200 799'\nassert solution() == 'uncertain'\nassert solution() == 'impossible'"
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1000200 799\", \"Error in the given code\""
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n999999 0 1000\\n999900 950 451\\n987654 123 13222') == '1000200 799'\nassert solution('2\\n100 0 101\\n0 200 199') == 'uncertain'\nassert solution('2\\n100 0 100\\n0 200 199') == 'impossible'"
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n999999 0 1000\\n999900 950 451\\n987654 123 13222\\n\") == \"1000200 799\\n\"\nassert solution(\"2\\n100 0 101\\n0 200 199\\n\") == \"uncertain\\n\"\nassert solution(\"2\\n100 0 100\\n0 200 199\\n\") == \"impossible\\n\""
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1000200 799\\n\"\nassert solution() == \"uncertain\\n\"\nassert solution() == \"impossible\\n\""
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected, f\"Test failed. Expected: {expected}, Received: {solution(stdin)}\""
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n999999 0 1000\\n999900 950 451\\n987654 123 13222\") == \"1000200 799\\n\"\nassert solution(\"2\\n100 0 101\\n0 200 199\") == \"uncertain\\n\"\nassert solution(\"2\\n100 0 100\\n0 200 199\") == \"impossible\\n\""
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"999999 0 1000\\n999900 950 451\\n987654 123 13222\") == \"1000200 799\"\nassert solution(\"2\\n100 0 101\\n0 200 199\") == \"uncertain\"\nassert solution(\"2\\n100 0 100\\n0 200 199\") == \"impossible\""
    },
    {
        "number": 3045,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n999999 0 1000\\n999900 950 451\\n987654 123 13222\") == \"1000200 799\\n\"\nassert solution(\"2\\n100 0 101\\n0 200 199\") == \"uncertain\\n\"\nassert solution(\"2\\n100 0 100\\n0 200 199\") == \"impossible\\n\""
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n4 7\\n9 8\\n14 17\\n19 18\\n\") == \"2\\n1\\n\"\nassert solution(\"2\\n4 7\\n14 17\\n9 8\\n19 18\\n\") == \"1\\n2\\n\"\nassert solution(\"2\\n4 8\\n9 7\\n14 18\\n19 17\\n\") == \"syntax error\\n\""
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\n4 7\\n9 8\\n14 17\\n19 18\\n') == [2, 1]\nassert solution('2\\n4 7\\n14 17\\n9 8\\n19 18\\n') == [1, 2]\nassert solution('2\\n4 8\\n9 7\\n14 18\\n19 17\\n') =='syntax error'"
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n4 7\\n9 8\\n14 17\\n19 18\") == \"2\\n1\\n\"\nassert solution(\"2\\n4 7\\n14 17\\n9 8\\n19 18\") == \"1\\n2\\n\"\nassert solution(\"2\\n4 8\\n9 7\\n14 18\\n19 17\") == \"syntax error\\n\""
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == [2, 1]\nassert solution(stdin) == [1, 2]\nassert solution(stdin) == [2, 2]\nassert solution(stdin) == [1, 1]"
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2\\n1\\n\"\nassert solution() == \"1\\n2\\n\""
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output1, f\"Input: {input()}, Output: {output1}\"\nassert solution(input()) == output2, f\"Input: {input()}, Output: {output2}\"\nassert solution(input()) == output3, f\"Input: {input()}, Output: {output3}\""
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n4 7\\n9 8\\n14 17\\n19 18\") == \"2\\n1\\n\"\nassert solution(\"2\\n4 7\\n14 17\\n9 8\\n19 18\") == \"1\\n2\\n\"\nassert solution(\"2\\n4 8\\n9 7\\n14 18\\n19 17\") == \"syntax error\""
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2\\n4 7\\n9 8\\n14 17\\n19 18\\n') == [1, 2]\nassert solution('2\\n4 7\\n14 17\\n9 8\\n19 18\\n') == [1, 2]"
    },
    {
        "number": 3046,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n4 7\\n9 8\\n14 17\\n19 18\") == \"2\\n1\\n\"\nassert solution(\"2\\n4 7\\n14 17\\n9 8\\n19 18\") == \"1\\n2\\n\""
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input1) == \"1\"\nassert solution(sample_input2) == \"1\"\nassert solution(sample_input3) == \"8640\"\n\nfrom typing import List"
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(''), 'Output an empty string'  # Test 1\nassert solution('90 22 _ 6 _ _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _'), 'Output correct number of solutions'  # Test 2\nassert solution('85 55 _ 99 51 _ _ _ _ _\\n_ _ _ _ _ _ _ 85 63 153'), 'Output correct number of solutions'  # Test 3\nassert solution('160 _ _ 136 _ _ _ _ _ 170\\n_ _ _ _ 120 _ _ 144 _ _'), 'Output correct number of solutions'  # Test 4"
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"many\""
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == \"1\"\nassert solution(sample_input2) == \"1\"\nassert solution(sample_input3) == \"8640\""
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_data) == output_data, f\"Test failed for {input_data}\\nExpected: {output_data}\\nGot: {solution(input_data)}\""
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1\\n_ 90 22 _ 6 _ _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _\\n') == '1\\n'\nassert solution('1\\n_ 85 55 _ 99 51 _ _ _ _ _\\n_ _ _ _ _ _ _ 85 63 153\\n') == '1\\n'\nassert solution('1\\n_ 160 _ _ 136 _ _ _ _ _ 170\\n_ _ _ _ 120 _ _ 144 _ _\\n') == '8640\\n'"
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n_ 90 22 _ 6 _ _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _\") == \"1\"\nassert solution(\"85 55 _ 99 51 _ _ _ _ _\\n_ _ _ _ _ _ _ 85 63 153\") == \"1\"\nassert solution(\"160 _ _ 136 _ _ _ _ _ 170\\n_ _ _ _ 120 _ _ 144 _ _\") == \"8640\""
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"90 22 _ 6 _ _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _\") == \"1\\n\", \"Incorrect solution 1\"\nassert solution(\"85 55 _ 99 51 _ _ _ _ _\\n_ _ _ _ _ _ _ 85 63 153\") == \"1\\n\", \"Incorrect solution 2\"\nassert solution(\"160 _ _ 136 _ _ _ _ _ 170\\n_ _ _ _ 120 _ _ 144 _ _\") == \"8640\\n\", \"Incorrect solution 3\""
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('_ 90 22 _ 6 _ _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _') == '1\\n'\nassert solution('85 55 _ 99 51 _ _ _ _ _\\n_ _ _ _ _ _ _ 85 63 153') == '1\\n'\nassert solution('160 _ _ 136 _ _ _ _ _ 170\\n_ _ _ _ 120 _ _ 144 _ _') == '8640\\n'"
    },
    {
        "number": 3047,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"many\""
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 2\\n1 3\") == \"2\"\nassert solution(\"5\\n2 1\\n1 5\\n3 1\\n4 3\") == \"8\"\nassert solution(\"10\\n1 2\\n2 3\\n2 4\\n1 5\\n3 6\\n2 7\\n7 8\\n5 9\\n5 10\") == \"24\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5') == '2'\nassert solution('10') == '24'"
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 2\\n1 3\") == \"2\\n\"\nassert solution(\"5\\n2 1\\n1 5\\n3 1\\n4 3\") == \"8\\n\"\nassert solution(\"10\\n1 2\\n2 3\\n2 4\\n1 5\\n3 6\\n2 7\\n7 8\\n5 9\\n5 10\") == \"24\\n\""
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\", \"Test Case 1\"\n\nassert solution(input()) == \"8\", \"Test Case 2\"\n\nassert solution(input()) == \"24\", \"Test Case 3\""
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n2\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n3\\n1\\n"
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == 2\nassert solution(2) == 2\nassert solution(3) == 3\nassert solution(4) == 3\nassert solution(5) == 3\nassert solution(6) == 2\nassert solution(7) == 2\nassert solution(8) == 2\nassert solution(9) == 2\nassert solution(10) == 2\nassert solution(11) == 2\nassert solution(12) == 1\nassert solution(13) == 1\nassert solution(14) == 1\nassert solution(15) == 1\nassert solution(16) == 1\nassert solution(17) == 1\nassert solution(18) == 1\nassert solution(19) == 1\nassert solution(20) == 1\nassert solution(21) == 1\nassert solution(22) == 1\nassert solution(23) == 1\nassert solution(24) == 1\nassert solution(25) == 1\nassert solution(26) == 1\nassert solution(27) == 1\nassert solution(28) == 1\nassert solution(29) == 1\nassert solution(30) == 1\nassert solution(31) == 1\nassert solution(32) == 1\nassert solution(33) == 1\nassert solution(34) == 1\nassert solution(35) == 1\nassert solution(36) == 1\nassert solution(37) == 1\nassert solution(38) == 1\nassert solution(39) == 1\nassert solution(40) == 1\nassert solution(41) == 1\nassert solution(42) == 1\nassert solution(43) == 1\nassert solution(44) == 1\nassert solution(45) == 1\nassert solution(46) == 1\nassert solution(47) == 1\nassert solution(48) == 1\nassert solution(49) == 1\nassert solution(50) == 1\nassert solution(51) == 1\nassert solution(52) == 1\nassert solution(53) == 1\nassert solution(54) == 1\nassert solution(55) == 1\nassert solution(56) == 1\nassert solution(57) == 1\nassert solution(58) == 1\nassert solution(59) == 1\nassert solution(60) == 1\nassert solution(61) == 1\nassert solution(62) == 1\nassert solution(63) == 1\nassert solution(64) == 1\nassert solution(65) == 1\nassert solution(66) == 1\nassert solution(67) == 1\nassert solution(68) == 1\nassert solution(69) == 1\nassert solution(70) == 1\nassert solution(71) == 1\nassert solution(72) == 1\nassert solution(73) == 1\nassert solution(74) == 1\nassert solution(75) == 1\nassert solution(76) == 1\nassert solution(77) == 1\nassert solution(78) == 1\nassert solution(79) == 1\nassert solution(80) == 1\nassert solution(81) == 1\nassert solution(82) == 1\nassert solution(83) == 1\nassert solution(84) == 1\nassert solution(85) == 1\nassert solution(86) == 1\nassert solution(87) == 1\nassert solution(88) == 1\nassert solution(89) == 1\nassert solution(90) == 1\nassert solution(91) == 1\nassert solution(92) == 1\nassert solution(93) == 1\nassert solution(94) == 1\nassert solution(95) == 1\nassert solution(96) == 1\nassert solution(97) == 1\nassert solution(98) == 1\nassert solution(99) == 1\nassert solution(100) == 1\nassert solution(101) == 1\nassert solution(102) == 1\nassert solution(103) == 1\n"
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    3\n    1 2\n    1 3\n    \"\"\"\n) == \"2\\n\"\n\nassert solution(\n    \"\"\"\n    5\n    2 1\n    1 5\n    3 1\n    4 3\n    \"\"\"\n) == \"8\\n\"\n\nassert solution(\n    \"\"\"\n    10\n    1 2\n    2 3\n    2 4\n    1 5\n    3 6\n    2 7\n    7 8\n    5 9\n    5 10\n    \"\"\"\n) == \"24\\n\""
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 2\\n1 3\") == \"2\\n\", \"Test case 1 failed\"\nassert solution(\"5\\n2 1\\n1 5\\n3 1\\n4 3\") == \"8\\n\", \"Test case 2 failed\"\nassert solution(\"10\\n1 2\\n2 3\\n2 4\\n1 5\\n3 6\\n2 7\\n7 8\\n5 9\\n5 10\") == \"24\\n\", \"Test case 3 failed\""
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, \"Expected output: {}\\nGot output: {}\".format(expected_output, solution(input()))"
    },
    {
        "number": 3048,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n3\n1 2\n1 3\n''') == '2\\n'\n\nassert solution('''\n5\n2 1\n1 5\n3 1\n4 3\n''') == '8\\n'\n\nassert solution('''\n10\n1 2\n2 3\n2 4\n1 5\n3 6\n2 7\n7 8\n5 9\n5 10\n''') == '24\\n'"
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"secretmessage\") == \"essa\", \"Test 1 failed\"\nassert solution(\"treetreetreetree\") == \"3\", \"Test 2 failed\"\nassert solution(\"oranges\") == \"0\", \"Test 3 failed\""
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == \"essa\", \"Sample Input 1\"\nassert solution(sample_input2) == \"3\", \"Sample Input 2\"\nassert solution(sample_input3) == \"0\", \"Sample Input 3\""
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('secretmessage') == 'essa', 'The secret message is not found in the encrypted message.'"
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"secretmessage\") == \"essa\"\nassert solution(\"treetreetreetree\") == \"3\"\nassert solution(\"oranges\") == \"0\""
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('secretmessage') == 'essa'\nassert solution('treetreetreetree') == '3'\nassert solution('oranges') == '0'"
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"essa\"\nassert solution(open(\"input2.txt\", \"r\").read()) == \"3\"\nassert solution(open(\"input3.txt\", \"r\").read()) == \"0\""
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"secretmessage\") == \"essa\"\nassert solution(\"treetreetreetree\") == \"3\"\nassert solution(\"oranges\") == \"0\""
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"secretmessage\") == \"essa\"\nassert solution(\"treetreetreetree\") == \"3\"\nassert solution(\"oranges\") == \"0\""
    },
    {
        "number": 3049,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"secretmessage\\nboot\") == \"essa\"\nassert solution(\"treetreetreetree\\nwood\") == \"3\"\nassert solution(\"oranges\\napples\") == \"0\"\n\nfrom typing import List"
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == solution(\"3\\n>^<^\\n######\\n#.#..#\\n#....#\\n#..R.#\\n#....#\\n######\") == 2\nassert solution(stdin) == solution(\"4\\nv<^>\\n####\\n#.R#\\n#..#\\n####\") == 4\nassert solution(stdin) == solution(\"4\\n<<<\\n####\\n#.R#\\n#..#\\n####\") == 1"
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test failed with output: {solution(input())}, expected output: {expected_output}\""
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n>^<^\\n######\\n#.#..#\\n#....#\\n#..R.#\\n#....#\\n######\") == \"2\"\nassert solution(\"4\\nv<^>\\n####\\n#.R#\\n#..#\\n####\\n\") == \"4\"\nassert solution(\"4\\n<<<\\n####\\n#.R#\\n#..#\\n####\\n\") == \"1\""
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"6\\n>^<^\\n######\\n#.#..#\\n#....#\\n#..R.#\\n#....#\\n######\") == \"2\"\nassert solution(stdin=\"4\\nv<^>\\n####\\n#.R#\\n#..#\\n####\\n\") == \"4\"\nassert solution(stdin=\"4\\n<<<\\n####\\n#.R#\\n#..#\\n####\\n\") == \"1\"\n\nfrom typing import List"
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\n>>>>>>') == '1\\n'\nassert solution('4\\n^<^>^<^>^<^>') == '1\\n'\nassert solution('4\\n>^<^>^<^>^<^>') == '2\\n'\nassert solution('4\\n<^<^>^<^>^<^>') == '3\\n'\n"
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output, \"Test case not passed. Please check the problem statement and the given examples.\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n>^<^\\n######\\n#.#..#\\n#....#\\n#..R.#\\n#....#\\n######\") == \"2\"\nassert solution(\"4\\nv<^>\\n####\\n#.R#\\n#..#\\n####\") == \"4\"\nassert solution(\"4\\n<<<\\n####\\n#.R#\\n#..#\\n####\") == \"1\""
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n>^<^\\n######\\n#.#..#\\n#....#\\n#..R.#\\n#....#\\n######\") == \"2\"\nassert solution(\"4\\nv<^>\\n####\\n#.R#\\n#..#\\n####\\n\") == \"4\"\nassert solution(\"4\\n<<<\\n####\\n#.R#\\n#..#\\n####\\n\") == \"1\""
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1\" or solution(stdin) == \"2\" or solution(stdin) == \"4\""
    },
    {
        "number": 3050,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n>^<^\\n######\\n#.#..#\\n#....#\\n#..R.#\\n#....#\\n######\") == 2\nassert solution(\"4\\nv<^>\\n####\\n#.R#\\n#..#\\n####\") == 4\nassert solution(\"4\\n<<<\\n####\\n#.R#\\n#..#\\n####\") == 1"
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"3\\n6\\n11\""
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 3\nassert solution() == 6\nassert solution() == 11"
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n2 3 0 2 9 2 3 0\\n1 6 1 4 6 3 -1 -2\") == 3\nassert solution(\"3\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\") == 6\nassert solution(\"2\\n7 0 0 20 10 3 0 10\\n10 1 0 2 5 2 2 7\") == 11"
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n2 3 0 2 9 2 3 0\\n1 6 1 4 6 3 -1 -2\\n\") == \"3\\n\"\nassert solution(\"3\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\\n\") == \"6\\n\"\nassert solution(\"2\\n7 0 0 20 10 3 0 10\\n10 1 0 2 5 2 2 7\\n\") == \"11\\n\""
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n2 3 0 2 9 2 3 0\\n1 6 1 4 6 3 -1 -2\") == \"3\\n\"\nassert solution(\"3\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\") == \"6\\n\"\nassert solution(\"2\\n7 0 0 20 10 3 0 10\\n10 1 0 2 5 2 2 7\") == \"11\\n\"\n"
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 3, \"Incorrect output\""
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n2 3 0 2 9 2 3 0\\n1 6 1 4 6 3 -1 -2\") == \"3\"\nassert solution(\"3\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\") == \"6\"\nassert solution(\"2\\n7 0 0 20 10 3 0 10\\n10 1 0 2 5 2 2 7\") == \"11\""
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"2\n2 3 0 2 9 2 3 0\n1 6 1 4 6 3 -1 -2\"\"\") == \"3\"\nassert solution(\"\"\"3\n4 0 0 10 10 1 15 0\n3 5 50 55 8 1 -16 2\n3 10 7 10 4 1 8 -1\"\"\") == \"6\"\nassert solution(\"\"\"2\n7 0 0 20 10 3 0 10\n10 1 0 2 5 2 2 7\"\"\") == \"11\""
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n2 3 0 2 9 2 3 0\\n1 6 1 4 6 3 -1 -2\\n\") == 3\nassert solution(\"3\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\\n\") == 6\nassert solution(\"2\\n7 0 0 20 10 3 0 10\\n10 1 0 2 5 2 2 7\\n\") == 11\n"
    },
    {
        "number": 3051,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input1) == '3'\nassert solution(sample_input2) == '6'\nassert solution(sample_input3) == '11'"
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\") == \"168.7916512460\"\nassert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\") == \"163.5274740179\"\nassert solution(\"0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\") == \"3.7320508076\""
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}, got: {solution(stdin)}\""
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input) == expected, f\"Test case failed: {solution(input)}!= {expected}\"\n"
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"168.7916512460\""
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input1) == \"168.7916512460\", \"Incorrect output 1\"\nassert solution(sample_input2) == \"163.5274740179\", \"Incorrect output 2\"\nassert solution(sample_input3) == \"3.7320508076\", \"Incorrect output 3\""
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\") == \"168.7916512460\"\nassert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\") == \"163.5274740179\"\nassert solution(\"0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\") == \"3.7320508076\"\n"
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 168.7916512460, \"Expected output 168.7916512460, got \" + str(solution())\nassert solution() == 163.5274740179, \"Expected output 163.5274740179, got \" + str(solution())\nassert solution() == 3.7320508076, \"Expected output 3.7320508076, got \" + str(solution())"
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\") == \"168.7916512460\", \"Test 1 failed\"\nassert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\") == \"163.5274740179\", \"Test 2 failed\"\nassert solution(\"0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0\") == \"3.7320508076\", \"Test 3 failed\""
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 80.0''') == 168.7916512460\nassert solution('''60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 100.0''') == 163.5274740179\nassert solution('''0.0 1.0 4.0 1.0\n1\n0.0 0.0 4.0 0.0''') == 3.7320508076"
    },
    {
        "number": 3052,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0') == '168.7916512460'\nassert solution('60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0') == '163.5274740179'\nassert solution('0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0') == '3.7320508076'"
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"6 5 3\"\"\"\n) == \"rarity\"\n\nassert solution(\n    \"\"\"9 8 1\"\"\"\n) == \"canterlot\"\n\nassert solution(\n    \"\"\"5 3 5\"\"\"\n) == \"madam\""
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(6, 5, 3) == \"rarity\"\nassert solution(9, 8, 1) == \"canterlot\"\nassert solution(5, 3, 5) == \"madam\""
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"rarity\"\n\nfrom typing import List"
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == 'rarity', 'Your code is not correct. Please check your code and try again.'"
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"rarity\", \"Incorrect output.\"\n\nfrom typing import List"
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 'rarity'\nassert solution(input()) == 'canterlot'\nassert solution(input()) =='madam'"
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(2, 3, 2) == \"madam\"\nassert solution(10, 25, 6) == \"defied\"\nassert solution(10, 25, 4) == \"defied\""
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 5 3\") == \"rarity\"\nassert solution(\"9 8 1\") == \"canterlot\"\nassert solution(\"5 3 5\") == \"madam\""
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == 'rarity\\n','sample output 1'\n\nassert solution(stdin) == 'canterlot\\n','sample output 2'\n\nassert solution(stdin) =='madam\\n','sample output 3'"
    },
    {
        "number": 3053,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(6, 5, 3) == \"rarity\"\nassert solution(9, 8, 1) == \"canterlot\"\nassert solution(5, 3, 5) == \"madam\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road. \\nLeaves, glowing in autumn sun, \\nfall in Virginia.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\\n\"\nassert solution(\"International contest- motivation high Programmers have fun!. def solution(stdin: str) -> str:\\n    pass\") == \"International contest- motivation high \\nProgrammers have fun! \\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road.Leaves, glowing in autumn sun.fall in Virginia.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\"\nassert solution(\"International contest- motivation high Programmers have fun!\") == \"International contest- motivation high Programmers have fun!\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\"\nassert solution(\"International contest- motivation high Programmers have fun!\") == \"International contest- motivation high Programmers have fun!\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\"\nassert solution(\"International contest- motivation high Programmers have fun!\") == \"International contest- motivation high Programmers have fun!\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\"\nassert solution(\"International contest- motivation high Programmers have fun!\") == \"International contest- motivation high Programmers have fun!\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road.Leaves, glowing in autumn sun,fall in Virginia.\"\nassert solution(\"International contest- motivation high Programmers have fun!\") == \"International contest- motivation high Programmers have fun!\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road.\\nLeaves, glowing in autumn sun,\\nfall in Virginia.\\n\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\\n\"\nassert solution(\"International contest- motivation high Programmers have fun!.\") == \"International\\ncontest- motivation high\\nProgrammers have fun!\\n\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.') == 'Blue Ridge mountain road. \\nLeaves, glowing in autumn sun, \\nfall in Virginia.'\nassert solution('Who would know if we had too few syllables?') == 'Who would know if we had too few syllables?'\nassert solution('International contest- motivation high Programmers have fun!') == 'International\\ncontest- motivation high\\nProgrammers have fun!\\n'\n\nfrom typing import List\n"
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\"\nassert solution(\"International contest- motivation high Programmers have fun!.\") == \"International contest- motivation high Programmers have fun!\""
    },
    {
        "number": 3054,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road.\" + \"\\n\" + \"Leaves, glowing in autumn sun,\\n\" + \"fall in Virginia.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\\n\"\nassert solution(\"International contest- motivation high Programmers have fun!\") == \"International\" + \"\\n\" + \"contest- motivation high\" + \"\\n\" + \"Programmers have fun!\\n\""
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('sample_input.txt', 'r')) == \"ThoreH\"\nassert solution(open('sample_input.txt', 'r')) == \"Thore is awesome\"\nassert solution(open('sample_input.txt', 'r')) == \"Thore sucks\""
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"ThoreH\"\nassert solution(\"2\\nThoreTiemann\\nThoreHusfeldt\\n\") == \"ThoreH\"\nassert solution(\"2\\nThoreHusfeldt\\nJohanSannemo\\n\") == \"Thore is awesome\"\nassert solution(\"2\\nThoreHusfeldter\\nThoreHusfeldt\\n\") == \"Thore sucks\""
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"ThoreHusfeldt\""
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\nThoreTiemann\\nThoreHusfeldt\") == \"ThoreH\"\nassert solution(\"2\\nThoreHusfeldt\\nJohanSannemo\") == \"Thore is awesome\"\nassert solution(\"2\\nThoreHusfeldter\\nThoreHusfeldt\") == \"Thore sucks\""
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\nThoreTiemann\\nThoreHusfeldt\\nSample Output 1:\\nThoreH\\n\") == \"ThoreH\"\nassert solution(\"2\\nThoreHusfeldt\\nJohanSannemo\\nSample Output 2:\\nThore is awesome\\n\") == \"Thore is awesome\"\nassert solution(\"2\\nThoreHusfeldter\\nThoreHusfeldt\\nSample Output 3:\\nThore sucks\\ndef solution(stdin: str) -> str:\\n    pass\\n\") == \"Thore sucks\""
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\nThoreTiemann\\nThoreHusfeldt\\n\") == \"ThoreH\"\nassert solution(\"2\\nThoreHusfeldt\\nJohanSannemo\\n\") == \"Thore is awesome\"\nassert solution(\"2\\nThoreHusfeldter\\nThoreHusfeldt\\n\") == \"Thore sucks\""
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == \"ThoreH\"\nassert solution(2) == \"Thore is awesome\"\nassert solution(3) == \"Thore sucks\"\n\nfrom typing import List"
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Input {input()}: expected {output}, got {solution(input())}\"\n"
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1\\nThoreTiemann\\nThoreHusfeldt\\n') == 'ThoreH'\nassert solution('2\\nThoreHusfeldt\\nJohanSannemo\\n') == 'Thore is awesome'\nassert solution('3\\nThoreHusfeldter\\nThoreHusfeldt\\n') == 'Thore sucks'"
    },
    {
        "number": 3055,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\nThoreTiemann\\nThoreHusfeldt\\n\") == \"ThoreH\"\nassert solution(\"2\\nThoreHusfeldt\\nJohanSannemo\\n\") == \"Thore is awesome\"\nassert solution(\"2\\nThoreHusfeldter\\nThoreHusfeldt\\n\") == \"Thore sucks\""
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"P*P\") == 6, \"Incorrect output for sample input 1\"\nassert solution(\"L*R\") == 25, \"Incorrect output for sample input 2\"\nassert solution(\"**\") == 33, \"Incorrect output for sample input 3\"\n\nfrom typing import List"
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"P*P\") == 6, \"Incorrect output\"\nassert solution(\"L*R\") == 25, \"Incorrect output\"\nassert solution(\"**\") == 33, \"Incorrect output\""
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"P*P\") == 6\nassert solution(\"L*R\") == 25\nassert solution(\"**\") == 33"
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"P*P\") == 6\nassert solution(\"L*R\") == 25\nassert solution(\"**\") == 33"
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('P*P') == 6, 'Expected 6, but got {}'.format(solution('P*P'))\nassert solution('L*R') == 25, 'Expected 25, but got {}'.format(solution('L*R'))\nassert solution('**') == 33, 'Expected 33, but got {}'.format(solution('**'))"
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"P*P\") == 6\nassert solution(\"L*R\") == 25\nassert solution(\"**\") == 33\n\nfrom typing import List"
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"P*P\") == \"6\"\nassert solution(\"L*R\") == \"25\"\nassert solution(\"**\") == \"33\""
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"P*P\") == 6, \"Your solution is incorrect\"\nassert solution(\"L*R\") == 25, \"Your solution is incorrect\"\nassert solution(\"**\") == 33, \"Your solution is incorrect\"\n"
    },
    {
        "number": 3056,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"P*P\") == \"6\", \"Expected '6', got '{}'.\".format(solution(\"P*P\"))\nassert solution(\"L*R\") == \"25\", \"Expected '25', got '{}'.\".format(solution(\"L*R\"))\nassert solution(\"**\") == \"33\", \"Expected '33', got '{}'.\".format(solution(\"**\"))"
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"herp is derp\\nderp is herp\\nderp is herp\\nherp is herp\\nderp is derp\") == \"yes\", \"Input 2\"\nassert solution(\"oskar not lukas\\nospark is poptart\\nlukas is smart\\n\") == \"wait what?\", \"Input 3\""
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(read_input()) == \"wait what?\"\nassert solution(read_input()) == \"yes\"\nassert solution(read_input()) == \"yes\"\nassert solution(read_input()) == \"wait what?\"\nassert solution(read_input()) == \"wait what?\""
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == 'yes'\n\nassert solution(stdin) == 'wait what?'"
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"herp is derp\\nderp is herp\\nherp is herp\\nderp is derp\") == \"yes\"\nassert solution(\"oskar not lukas\\noskar is poptart\\nlukas is smart\") == \"wait what?\"\nassert solution(\"moo not foo\") == \"yes\""
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"herp is derp\") == \"yes\"\nassert solution(\"derp is herp\") == \"yes\"\nassert solution(\"herp is herp\") == \"yes\"\nassert solution(\"derp is derp\") == \"yes\""
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('herp is derp\\nderp is herp\\nherp is herp\\nderp is derp') == 'yes'\nassert solution('oskar not lukas\\nospkar is poptart\\nlukas is smart') == 'wait what?'\nassert solution('moo not foo') == 'yes'"
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"herp is derp\") == \"yes\"\nassert solution(\"derp is herp\") == \"yes\"\nassert solution(\"herp is herp\") == \"yes\"\nassert solution(\"derp is derp\") == \"yes\"\n\nassert solution(\"oskar not lukas\") == \"wait what?\"\nassert solution(\"oskar is poptart\") == \"yes\"\nassert solution(\"lukas is smart\") == \"yes\"\n\nassert solution(\"moo not foo\") == \"yes\"\n"
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"yes\"\nassert solution(open(\"input_2.txt\", \"r\")) == \"wait what?\"\nassert solution(open(\"input_3.txt\", \"r\")) == \"yes\""
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=r\"\"\"\n4\nherp is derp\nderp is herp\nherp is herp\nderp is derp\n\"\"\") == \"yes\"\n\nassert solution(stdin=r\"\"\"\n3\noskar not lukas\noskar is poptart\nlukas is smart\n\"\"\") == \"wait what?\"\n\nassert solution(stdin=r\"\"\"\n1\nmoo not foo\n\"\"\") == \"yes\""
    },
    {
        "number": 3057,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"herp is derp\") == \"wait what?\"\nassert solution(\"derp is herp\") == \"wait what?\"\nassert solution(\"herp is herp\") == \"wait what?\"\nassert solution(\"derp is derp\") == \"wait what?\"\nassert solution(\"oskar not lukas\") == \"yes\"\nassert solution(\"oskar is poptart\") == \"yes\"\nassert solution(\"lukas is smart\") == \"yes\"\nassert solution(\"moo not foo\") == \"yes\""
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    '''\n    5\n    AACCMMAA\n    ACA\n    MM\n    ACMAA\n    AA\n    A\n    '''\n) == '''\n1 4\nMM\nA\nAA\nACA\nACMAA\n'''\n\nassert solution(\n    '''\n    3\n    ACMA\n    ACM\n    ACA\n    AMA\n    '''\n) == '''\nimpossible\n'''\n\nassert solution(\n    '''\n    1\n    AM\n    MA\n    '''\n) == '''\nimpossible\n'''"
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '''\n1 4\nMM\nA\nAA\nACA\nACMAA\n'''\n\nassert solution(stdin) == '''\nimpossible\n'''\n\nassert solution(stdin) == '''\nimpossible\n'''"
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\nAACCMMAA\\nACA\\nMM\\nACMAA\\nAA\\nA\") == \"1 4\\nMM\\nA\\nAA\\nACA\\nACMAA\\n\", \"Example 1\"\nassert solution(\"3\\nACMA\\ACM\\ACA\\AMA\\n\") == \"impossible\\n\", \"Example 2\"\nassert solution(\"1\\nAM\\nMA\\n\") == \"impossible\\n\", \"Example 3\""
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\nAACCMMAA\\nACA\\nMM\\nACMAA\\nAA\\nA\\n') == '1 4\\nMM\\nA\\nAA\\nACA\\nACMAA\\n'\nassert solution('3\\nACMA\\ACM\\ACA\\AMA\\n') == 'impossible'\nassert solution('1\\nAM\\nMA\\n') == 'impossible'"
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == '1 4\\nMM\\nA\\nAA\\nACA\\nACMAA\\n'\nassert solution(sample_input_2) == 'impossible\\n'\nassert solution(sample_input_3) == 'impossible\\n'\n\nsample_input_1 = '5\\nAACCMMMAA\\nACA\\nMM\\nACMAA\\nAA\\nA\\n'\nsample_input_2 = '3\\nACMA\\ACM\\nACA\\nAMA\\n'\nsample_input_3 = '1\\nAM\\nMA\\n'"
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\nAACCMMAA\\nACA\\nMM\\nACMAA\\nAA\\nA\\n') == '1 4\\nMM\\nA\\nAA\\nACA\\nACMAA\\n\\nimpossible\\n\\n\\n'\nassert solution('3\\nACMA\\ACM\\ACA\\AMA\\n') == 'impossible\\n\\n'\nassert solution('1\\nAM\\nMA\\n') == 'impossible\\n\\n'\n\nimport re"
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"impossible\", \"Expected impossible but got %s.\" % solution(input())"
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=input()) == expected, f\"Got {solution(stdin=input())}, expected {expected}\""
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\nAACC\\nACCA\\nMM\\nACMAA\\nAA\\nA\\nSample Output 1:\\n1 4\\nMM\\nA\\nAA\\nACA\\nACMAA\\n\\nSample Input 2:\\n3\\nACMA\\ACM\\ACA\\nAMA\\nSample Output 2:\\nimpossible\\n\\nSample Input 3:\\n1\\nAM\\nMA\\nSample Output 3:\\nimpossible') == '1 4\\nMM\\nA\\nAA\\nACA\\nACMAA\\n\\nimpossible'"
    },
    {
        "number": 3058,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1\\nA\\n\\n\\n2\\nC\\n\\n\\n3\\nA\\n\\n\\n4\\nC\\n\\n\\n5\\nA\\n\\n\\n6\\nC\\n\\n\\n7\\nA\\n\\n\\n8\\nC\\n\\n\\n9\\nA\\n\\n\\n10\\nC\\n\\n\\n11\\nA\\n\\n\\n12\\nC\\n\\n\\n13\\nA\\n\\n\\n14\\nC\\n\\n\\n15\\nA\\n\\n\\n16\\nC\\n\\n\\n17\\nA\\n\\n\\n18\\nC\\n\\n\\n19\\nA\\n\\n\\n20\\nC\\n\\n\\n21\\nA\\n\\n\\n22\\nC\\n\\n\\n23\\nA\\n\\n\\n24\\nC\\n\\n\\n25\\nA\\n\\n\\n26\\nC\\n\\n\\n27\\nA\\n\\n\\n28\\nC\\n\\n\\n29\\nA\\n\\n\\n30\\nC\\n\\n\\n31\\nA\\n\\n\\n32\\nC\\n\\n\\n33\\nA\\n\\n\\n34\\nC\\n\\n\\n35\\nA\\n\\n\\n36\\nC\\n\\n\\n37\\nA\\n\\n\\n38\\nC\\n\\n\\n39\\nA\\n\\n\\n40\\nC\\n\\n\\n41\\nA\\n\\n\\n42\\nC\\n\\n\\n43\\nA\\n\\n\\n44\\nC\\n\\n\\n45\\nA\\n\\n\\n46\\nC\\n\\n\\n47\\nA\\n\\n\\n48\\nC\\n\\n\\n49\\nA\\n\\n\\n50\\nC\\n\\n\\n51\\nA\\n\\n\\n52\\nC\\n\\n\\n53\\nA\\n\\n\\n54\\nC\\n\\n\\n55\\nA\\n\\n\\n56\\nC\\n\\n\\n57\\nA\\n\\n\\n58\\nC\\n\\n\\n59\\nA\\n\\n\\n60\\nC\\n\\n\\n61\\nA\\n\\n\\n62\\nC\\n\\n\\n63\\nA\\n\\n\\n64\\nC\\n\\n\\n65\\nA\\n\\n\\n66\\nC\\n\\n\\n67\\nA\\n\\n\\n68\\nC\\n\\n\\n69\\nA\\n\\n\\n70\\nC\\n\\n\\n71\\nA\\n\\n\\n72\\nC\\n\\n\\n73\\nA\\n\\n\\n74\\nC\\n\\n\\n75\\nA\\n\\n\\n76\\nC\\n\\n\\n77\\nA\\n\\n\\n78\\nC\\n\\n\\n79\\nA\\n\\n\\n80\\nC\\n\\n\\n81\\nA\\n\\n\\n82\\nC\\n\\n\\n83\\nA\\n\\n\\n84\\nC\\n\\n\\n85\\nA\\n\\n\\n86\\nC\\n\\n\\n87\\nA\\n\\n\\n88\\nC\\n\\n\\n89\\nA\\n\\n\\n90\\nC\\n\\n\\n91\\nA\\n\\n\\n92\\nC\\n\\n\\n93\\nA\\n\\n\\n94\\nC\\n\\n\\n95\\nA\\n\\n\\n96\\nC\\n\\n\\n97\\nA\\n\\n\\n98\\nC\\n\\n\\n99\\"
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"Output the expected time you will have to play the game to set a new record, assuming an optimal strategy is used.\\nExplanation of Sample Input 1\\nThe record for this game is 111 seconds, and your route takes 100 seconds if everything goes right.\\nAfter playing for 20 seconds, there is a trick with a 50% success rate. If it succeeds, you keep playing. If it fails, you incur a 10 second time loss: now the run will take at least 110 seconds. It is still possible to set a record, but every other trick in the run has to be successful. It turns out to be faster on average to reset after failing the first trick.\\nOnce you have successfully performed the first trick, you want to finish the run no matter the result of the other tricks: it takes 80 seconds, plus on average 1 second loss from each of the remaining 4 tricks. So the expected time until you set a record is 124 seconds.\\nSample Input 1:\\n100 111 5\\n20 0.5 10\\n80 0.5 2\\n85 0.5 2\\n90 0.5 2\\n95 0.5 2\\nSample Output 1:\\n124\\n\\nSample Input 2:\\n2 4 1\\n1 0.5 5\\nSample Output 2:\\n3\\n\\nSample Input 3:\\n10 20 3\\n5 0.3 8\\n6 0.8 3\\n8 0.9 3\\nSample Output 3:\\n18.9029850746\""
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"3\"\n"
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == expected, f\"Solution {solution} does not match expected {expected}\"\n"
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt').read()) == '3.9029850746'  # Explanation: The expected time to set a new record is 124 seconds."
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n100 111 5\n20 0.5 10\n80 0.5 2\n85 0.5 2\n90 0.5 2\n95 0.5 2\n''') == '124'\n\nassert solution('''\n2 4 1\n1 0.5 5\n''') == '3'\n\nassert solution('''\n10 20 3\n5 0.3 8\n6 0.8 3\n8 0.9 3\n''') == '18.9029850746'"
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n    100 111 5\n    20 0.5 10\n    80 0.5 2\n    85 0.5 2\n    90 0.5 2\n    95 0.5 2\n\"\"\") == \"124\"\n\nassert solution(\"\"\"\n    2 4 1\n    1 0.5 5\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n    10 20 3\n    5 0.3 8\n    6 0.8 3\n    8 0.9 3\n\"\"\") == \"18.9029850746\""
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r').read()) == 'Output 1\\n'\nassert solution(open('input2.txt', 'r').read()) == 'Output 2\\n'\nassert solution(open('input3.txt', 'r').read()) == 'Output 3\\n'"
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('sample_input_1.txt', 'r')) == '124'\nassert solution(open('sample_input_2.txt', 'r')) == '3'\nassert solution(open('sample_input_3.txt', 'r')) == '18.9029850746'\n"
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('sample_input1.txt', 'r')) == '124\\n'\nassert solution(open('sample_input2.txt', 'r')) == '3\\n'\nassert solution(open('sample_input3.txt', 'r')) == '18.9029850746\\n'"
    },
    {
        "number": 3059,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"100 111 5\\n20 0.5 10\\n80 0.5 2\\n85 0.5 2\\n90 0.5 2\\n95 0.5 2\") == \"124\\n\"\nassert solution(\"2 4 1\\n1 0.5 5\\n\") == \"3\\n\"\nassert solution(\"10 20 3\\n5 0.3 8\\n6 0.8 3\\n8 0.9 3\\n\") == \"18.9029850746\\n\""
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 3\\n2 1\\n5 22\\n') == '4 3 4 2'"
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, \"Your solution is incorrect. Please check the provided test cases and the problem statement.\""
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 3') == '2 1 2'\nassert solution('2 1') == '1'\nassert solution('5 22') == '4 3 4 2'"
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2 1 2\""
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 3\\n2 1\\n5 22') == '4 3 4 2'"
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\") == \"2 1 2\", \"Test case 1 failed\"\nassert solution(\"2 1\") == \"1\", \"Test case 2 failed\"\nassert solution(\"5 22\") == \"4 3 4 2\", \"Test case 3 failed\""
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\") == \"2 1 2\\n\"\nassert solution(\"2 1\") == \"1\\n\"\nassert solution(\"5 22\") == \"4 3 4 2\\n\"\nassert solution(\"\") == \"\"\nassert solution(\"4 3 4 2\") == \"4 3 4 2\\n\"\nassert solution(\"2 1 2 4 3\") == \"2 1 2\\n\""
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input1) == output1, f\"Test Input 1: {input1}, Output 1: {output1}\"\nassert solution(input2) == output2, f\"Test Input 2: {input2}, Output 2: {output2}\"\nassert solution(input3) == output3, f\"Test Input 3: {input3}, Output 3: {output3}\""
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Sample Output 3\""
    },
    {
        "number": 3060,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 3') == '2 1 2'\nassert solution('2 1') == '1'\nassert solution('5 22') == '4 3 4 2'"
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(''), \"Empty input\"\nassert solution('1 2\\n1 3\\n3 4\\n2 4\\n'), \"Invalid input\"\nassert solution('5 4\\n1 2\\n1 3\\n3 4\\n2 4\\n'), \"Invalid input\"\nassert solution('1 2\\n1 3\\n3 4\\n2 4\\n'), \"Invalid input\"\nassert solution('1 2\\n1 3\\n3 4\\n2 4\\n5 6\\n'), \"Invalid input\"\nassert solution('1 2\\n1 3\\n3 4\\n2 4\\n'), \"Invalid input\""
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n4 4\n1 2\n1 3\n3 4\n2 4\n''') == '2\\n'\n\nassert solution('''\n7 6\n1 2\n2 3\n2 5\n6 3\n7 2\n3 4\n''') == '2\\n'\n\nassert solution('''\n7 5\n1 2\n2 3\n3 4\n5 6\n6 7\n''') == '0\\n'"
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\n1 2\\n1 3\\n3 4\\n2 4\\n\") == \"2\\n\"\nassert solution(\"7 6\\n1 2\\n2 3\\n2 5\\n6 3\\n7 2\\n3 4\\n\") == \"2\\n\"\nassert solution(\"7 5\\n1 2\\n2 3\\n3 4\\n5 6\\n6 7\\n\") == \"0\\n\""
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 4\\n1 2\\n1 3\\n3 4\\n2 4\\n') == '2'\nassert solution('7 6\\n1 2\\n2 3\\n2 5\\n6 3\\n7 2\\n3 4\\n') == '2'\nassert solution('7 5\\n1 2\\n2 3\\n3 4\\n5 6\\n6 7\\n') == '0'"
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 0"
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(r'''\n4 4\n1 2\n1 3\n3 4\n2 4\n''') == '2'\n\nassert solution(r'''\n7 6\n1 2\n2 3\n2 5\n6 3\n7 2\n3 4\n''') == '2'\n\nassert solution(r'''\n7 5\n1 2\n2 3\n3 4\n5 6\n6 7\n''') == '0'"
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n1 2\\n1 3\\n3 4\\n2 4\") == \"2\"\nassert solution(\"7 6\\n1 2\\n2 3\\n2 5\\n6 3\\n7 2\\n3 4\") == \"2\"\nassert solution(\"7 5\\n1 2\\n2 3\\n3 4\\n5 6\\n6 7\") == \"0\"\n"
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(33) == \"2\", \"Test 33 Failed\"\nassert solution(44) == \"2\", \"Test 44 Failed\"\nassert solution(55) == \"0\", \"Test 55 Failed\""
    },
    {
        "number": 3061,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2\\n\" # expected output: 2\nassert solution(stdin) == \"2\\n\" # expected output: 2\nassert solution(stdin) == \"0\\n\" # expected output: 0"
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('20 0\\n1.00 0.10') == '20.00000000', \"Expected 20.00000000, got {}\".format(solution('20 0\\n1.00 0.10'))\nassert solution('-10 10\\n10.00 1.00') == '3.14159265', \"Expected 3.14159265, got {}\".format(solution('-10 10\\n10.00 1.00'))\nassert solution('0 20\\n1.00 0.10') == '28.26445910', \"Expected 28.26445910, got {}\".format(solution('0 20\\n1.00 0.10'))"
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '20.00000000\\n'\nassert solution(stdin) == '3.14159265\\n'\nassert solution(stdin) == '28.26445910\\n'"
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"20 0\\n1.00 0.10\\n\") == \"20.00000000\"\nassert solution(\"-10 10\\n10.00 1.00\\n\") == \"3.14159265\"\nassert solution(\"0 20\\n1.00 0.10\\n\") == \"28.26445910\""
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"20 0\\n1.00 0.10\") == 20.00000000\nassert solution(\"-10 10\\n10.00 1.00\") == 3.14159265\nassert solution(\"0 20\\n1.00 0.10\") == 28.26445910\n"
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n20 0\n1.00 0.10\n''') == '20.00000000'\n\nassert solution('''\n-10 10\n10.00 1.00\n''') == '3.14159265'\n\nassert solution('''\n0 20\n1.00 0.10\n''') == '28.26445910'"
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input1) == '20.00000000'\nassert solution(input2) == '3.14159265'\nassert solution(input3) == '28.26445910'"
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"3.14159265\", \"Your code is incorrect. Please check if you have implemented the correct solution.\""
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"3.14159265\"\n"
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), \"Test failed for input: {}, output: {}\".format(input(), output())"
    },
    {
        "number": 3062,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('20 0\\n1.00 0.10\\n') == '20.00000000\\n'\nassert solution('-10 10\\n10.00 1.00\\n') == '3.14159265\\n'\nassert solution('0 20\\n1.00 0.10\\n') == '28.26445910\\n'"
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 100\\n1 100\\n4 70\\n3 70\\n\") == \"170\"\nassert solution(\"3\\n2 120\\n3 50\\n2 80\\n\") == \"150\""
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"170\""
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n2 100\\n1 100\\n4 70\\n3 70\") == \"170\"\nassert solution(\"3\\n2 120\\n3 50\\n2 80\") == \"150\""
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"170\"\n"
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n100\\n1\\n100\\n4\\n70\\n3\\n70\\n2\\n120\\n3\\n50\\n2\\n80\\n\") == 170"
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == '''\n170\n'''"
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 100\\n4 70\\n3 70\\n1 100\\n4 70\\n3 70\") == \"170\"\nassert solution(\"2 120\\n3 50\\n2 80\") == \"150\""
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1 100\\n1 100\\n4 70\\n3 70\") == \"170\"\nassert solution(\"3\\n2 120\\n3 50\\n2 80\") == \"150\""
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\").read()) == \"170\""
    },
    {
        "number": 3063,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(4) == 170\nassert solution(3) == 150"
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n1 2\\n1 3\\n2 4\\n\") == \"2\\n\"\nassert solution(\"6 6\\n1 2\\n1 3\\n2 4\\n3 4\\n3 5\\n5 6\\n\") == \"5\\n\""
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n1 2\\n1 3\\n2 4\\n\") == \"2\"\nassert solution(\"6 6\\n1 2\\n1 3\\n2 4\\n3 4\\n3 5\\n5 6\\n\") == \"5\""
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"2\\n\""
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 3\\n1 2\\n1 3\\n2 4\\n') == '2\\n'\nassert solution('6 6\\n1 2\\n1 3\\n2 4\\n3 4\\n3 5\\n5 6\\n') == '5\\n'"
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"2\\n\"\nassert solution(open(\"sample_input1.txt\", \"r\")) == \"2\\n\"\nassert solution(open(\"sample_input2.txt\", \"r\")) == \"5\\n\""
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2\\n\""
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n1 2\\n1 3\\n2 4\\n\\n6 6\\n1 2\\n1 3\\n2 4\\n3 4\\n3 5\\n5 6\\n\") == \"2\"\nassert solution(\"4 3\\n1 2\\n1 3\\n2 4\\n\\n6 6\\n1 2\\n1 3\\n2 4\\n3 4\\n3 5\\n5 6\\n6 5\\n\") == \"5\""
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 3\\n1 2\\n1 3\\n2 4\\n') == '2\\n'\nassert solution('6 6\\n1 2\\n1 3\\n2 4\\n3 4\\n3 5\\n5 6\\n') == '5\\n'"
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"Output the length of the longest race path on a single line.\""
    },
    {
        "number": 3064,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r')) == '2'"
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"0.5\""
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n1\\n0\\n2 1 2\\n1 0\\n1 0\\n') == '0.5'\nassert solution('8\\n6\\n1 0 2 3 0 1\\n7 1 2 3 4 5 6 7\\n1 0\\n2 0 3\\n2 0 2\\n1 0\\n1 0\\n1 0\\n1 0\\n') == '0.0446429'"
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '0.5', \"The chance the captain will be able to complete his mission without being discovered by the Borg sentry should be 0.5.\""
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Test failed for input {input()} and expected output {output}\"\n"
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n1\\n0\\n2 1 2\\n1 0\\n1 0\\n') == 0.5\nassert solution('8\\n6\\n1 0 2 3 0 1\\n7 1 2 3 4 5 6 7\\n1 0\\n2 0 3\\n2 0 2\\n1 0\\n1 0\\n1 0\\n1 0\\n') == 0.0446429\n"
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1\\n0\\n2 1 2\\n1 0\\n1 0\\n\") == \"0.5\"\nassert solution(\"8\\n6\\n1 0 2 3 0 1\\n7 1 2 3 4 5 6 7\\n1 0\\n2 0 3\\n2 0 2\\n1 0\\n1 0\\n1 0\\n1 0\\n\") == \"0.0446429\""
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"0.5\\n\", \"The output should be 0.5\""
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n1\\n0\\n2 1 2\\n1 0\\n1 0\\n') == '0.5\\n'\nassert solution('8\\n6\\n1 0 2 3 0 1\\n7 1 2 3 4 5 6 7\\n1 0\\n2 0 3\\n2 0 2\\n1 0\\n1 0\\n1 0\\n1 0\\n') == '0.0446429\\n'"
    },
    {
        "number": 3065,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1\\n0\\n2 1 2\\n1 0\\n1 0\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    '''\n    6\n    1 2 3 3 2 1\n    '''\n) == '''\n3\n1 6 1\n2 5 2\n3 4 3\n'''\n\nassert solution(\n    '''\n    4\n    1 2 1 2\n    '''\n) == '''\nIMPOSSIBLE\n'''"
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Expected output: {}\\nGot output: {}\".format(output(), solution(input()))"
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Test failed: {output}, expected: {output}\""
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}, Got: {solution(input())}\""
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n1 2 3 3 2 1\\n4\\n1 2 1 2\\n\") == \"3\\n1 6 1\\n2 5 2\\n3 4 3\\n\"\nassert solution(\"5\\n1 2 2 1\\n3\\n1 2 1 2\\n\") == \"IMPOSSIBLE\\n\""
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == sample_output_1, \"Test case 1 failed: Solution is incorrect.\"\nassert solution(sample_input_2) == sample_output_2, \"Test case 2 failed: Solution is incorrect.\""
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 2 3 3 2 1') == '3\\n1 6 1\\n2 5 2\\n3 4 3'\nassert solution('4 1 2 1 2') == 'IMPOSSIBLE'"
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n1 2 3 3 2 1\\n\") == \"3\\n1 6 1\\n2 5 2\\n3 4 3\\nIMPOSSIBLE\\n\"\nassert solution(\"4\\n1 2 1 2\\n\") == \"IMPOSSIBLE\\n\""
    },
    {
        "number": 3066,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input1) == ['1 6 1', '2 5 2', '3 4 3']\nassert solution(sample_input2) == ['IMPOSSIBLE']"
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Test failed. Expected output: {output()}, Received: {solution(input())}\""
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2\\n1 100\\n1 1\\n2\\n5 10 20 30 40 50\\n2 28 27\\n\") == \"1 2 100\\n1 100 1\\n1 1 28 27\\n10 20 28 27 30 40 50\\n\""
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 2\\n1 100\\n1 1\") == \"1 2 100\"\nassert solution(\"2\\n5 10 20 30 40 50\\n2 28 27\") == \"10 20 28 27 30 40 50\"\n\nfrom typing import List"
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1 2 100\\n\""
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2\\n1 100\\n1 1\\n2\\n5 10 20 30 40 50\\n2 28 27\") == \"1 2 100\\n1 100 20\\n2 28 27 10 20 30 40 50\"\nassert solution(\"3\\n1 2\\n1 100\\n1 1\\n2\\n5 10 20 30 40 50\\n2 28 27\") == \"1 2 100\\n1 100 20\\n2 28 27 10 20 30 40 50\"\nassert solution(\"2\\n5 10 20 30 40 50\\n2 28 27\\n\") == \"10 20 28 27 30 40 50\""
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '1 2 100', \"The best possible solution sequence is not 1 2 100.\""
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('sample_input.txt', 'r')) == '1 2 100\\n10 20 28 27 30 40 50'\n\nfrom typing import List"
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 2\\n1 100\\n1 1\\n\") == \"1 2 100\"\nassert solution(\"2\\n5 10 20 30 40 50\\n2 28 27\\n\") == \"10 20 28 27 30 40 50\""
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2\\n1 100\\n1 1\\n2\\n5 10 20 30 40 50\\n2 28 27\\n\") == \"1 2 100\\n1 100 28\\n1 20 27\\n20 30 40 50\\n\""
    },
    {
        "number": 3067,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2\\n1 100\\n1 1\\n2 28\\n2 27\\n3 100\") == \"1 2 100\\n10 20 28 27 30 40 50\""
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2600\""
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0\\nSample Input 1\\nSample Output 1\\n0\\nSample Input 2\\nSample Output 2\\n0\\nSample Input 3\\nSample Output 3\\n0\\nSample Input 4\\nSample Output 4\\n0\\nSample Input 5\\nSample Output 5\\n0\\nSample Input 6\\nSample Output 6\\n0\\nSample Input 7\\nSample Output 7\\n0\\nSample Input 8\\nSample Output 8\\n0\\nSample Input 9\\nSample Output 9\\n0\\nSample Input 10\\nSample Output 10\\n0\\nSample Input 11\\nSample Output 11\\n0\\nSample Input 12\\nSample Output 12\\n0\\nSample Input 13\\nSample Output 13\\n0\\nSample Input 14\\nSample Output 14\\n0\\nSample Input 15\\nSample Output 15\\n0\\nSample Input 16\\nSample Output 16\\n0\\nSample Input 17\\nSample Output 17\\n0\\nSample Input 18\\nSample Output 18\\n0\\nSample Input 19\\nSample Output 19\\n0\\nSample Input 20\\nSample Output 20\\n0\\nSample Input 21\\nSample Output 21\\n0\\nSample Input 22\\nSample Output 22\\n0\\nSample Input 23\\nSample Output 23\\n0\\nSample Input 24\\nSample Output 24\\n0\\nSample Input 25\\nSample Output 25\\n0\\nSample Input 26\\nSample Output 26\\n0\") == 2600"
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == sample_output_1, f\"Sample Input 1 failed. Expected {sample_output_1}, got {solution(sample_input_1)}\"\nassert solution(sample_input_2) == sample_output_2, f\"Sample Input 2 failed. Expected {sample_output_2}, got {solution(sample_input_2)}\""
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0\") == \"2600\"\nassert solution(\"3\\nAB 1 1\\nAC 2 1\\nBC 2 1\") == \"506\""
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"2600\", \"Sample Output 1: Incorrect output.\""
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin='Sample Input 1') == '2600', \"The expected output is incorrect for the given input.\""
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 506"
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"Test failed: Solution {solution(input())} does not match the expected output.\""
    },
    {
        "number": 3068,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution([1, 2, 1]) == 506\nassert solution([2, 1, 1]) == 506\nassert solution([2, 1, 2]) == 506\nassert solution([2, 2, 1]) == 100000\nassert solution([1, 1, 1, 1, 2]) == 1500000\nassert solution([1, 1, 2, 2, 2]) == 1500000\n"
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(r'(())') == 'possible', '(())')\nassert solution(r'())') == 'impossible', '())')\nassert solution(r'(()))') == 'possible', '(()))')\nassert solution(r'(())(())') == 'impossible', '(())(())')\nassert solution(r'(()()))') == 'possible', '(()()))')\nassert solution(r'(()(()))') == 'possible', '(()(()))')\nassert solution(r'(()(())()))') == 'possible', '(()(())()))')\nassert solution(r'(()))(())') == 'possible', '(()))(())')\nassert solution(r'(()())(())') == 'possible', '(()())(())')\nassert solution(r'(())))') == 'possible', '(())))')\nassert solution(r'(()()))(())') == 'possible', '(()()))(())')\nassert solution(r'(()((()))))') == 'possible', '(()((()))))')\nassert solution(r'(()()))(())') == 'possible', '(()()))(())')\nassert solution(r'(()()))()') == 'possible', '(()()))()')\nassert solution(r'(()())))') == 'possible', '(()())))')\nassert solution(r'(()())(())') == 'possible', '(()())(())')\nassert solution(r'(()())())') == 'possible', '(()())())')\nassert solution(r'(()()())') == 'possible', '(()()())')\nassert solution(r'(()())())') == 'possible', '(()()())')\nassert solution(r'(()(()))(())') == 'possible', '(()(()))(())')\nassert solution(r'(()())(()')) == 'possible', '(()())(()')\nassert solution(r'(()())(())()') == 'possible', '(()())(())()')\nassert solution(r'(()())(())()()') == 'possible', '(()())(())()()')\nassert solution(r'(()())(())()(()')) == 'possible', '(()())(())()(()')\nassert solution(r'(()())(())()())') == 'possible', '(()())(())()())')\nassert solution(r'(()())(())()()))') == 'possible', '(()())(())()()))')\nassert solution(r'(()())(())()())') == 'possible', '(()())(())()())')\nassert solution(r'(()())(())()())') == 'possible', '(()())(())()())')\nassert solution(r'(()())(())()())') == 'possible', '(()())(())()())')\nassert solution(r'(()())(())()())') == 'possible', '(()())(())()())')\nassert solution(r'(()())(())()())') == 'possible', '(()())(())()())')\nassert solution(r'(()())(())()())') == 'possible', '(()())(())()())')\nassert solution(r'(()())(())()())') == 'possible', '(()())(())()())')\nassert solution(r'(()())(())()())') == 'possible', '(()())(())()())')\nassert solution(r'(()())(())()())') == 'possible', '(()())(())()())')\nassert solution(r'(()())(())()())') == 'possible', '(()())(())()())')\nassert solution(r'(()())(())()())') == 'possible', '(()())(())()())')\nassert solution(r'(()())(())()())') == 'possible', '(()())(())()())')\nassert solution(r'(()())(())()())') == 'possible', '(()())(())()())')\nassert solution(r'(()())(())()())') == 'possible', '(()())(())()())')\nassert solution(r'(()())(())()())') == 'possible', '(()())(())()())')\nassert solution(r'(()())(())()())') == 'possible', '(()())(())()())')\nassert solution(r'(()())(())()())') == 'possible', '(()())(())()())')\nassert solution(r'(()())(())()())') == 'possible', '(()())(())()())')\nassert solution(r'(()())(())()())') == 'possible', '(()())(())()())')\nassert solution(r'(()())(())()())') == 'possible', '(()())(())()())')\nassert solution(r'(()())(())()())') == 'possible', '(()())(())()())')\nassert solution(r'(()())(())()())') == 'possible', '(()())(())()())')\nassert solution(r'(()())(())()())') == 'possible', '(()())"
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('()))') == 'possible'\nassert solution('())))') == 'impossible'"
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('()))') == 'possible', 'Solution should return \"possible\"'\nassert solution(')))') == 'possible', 'Solution should return \"possible\"'\nassert solution('((()))') == 'impossible', 'Solution should return \"impossible\"'\nassert solution('(((((())))))') == 'possible', 'Solution should return \"possible\"'"
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"()))\") == \"possible\"\nassert solution(\")))(\") == \"possible\"\nassert solution(\"))(())())\") == \"impossible\""
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"())\") == \"possible\"\nassert solution(\"()()\") == \"possible\"\nassert solution(\"(()())()\") == \"possible\"\nassert solution(\"()\") == \"impossible\"\nassert solution(\"(())\") == \"impossible\"\nassert solution(\"()()()\") == \"impossible\"\nassert solution(\"()())\") == \"impossible\"\nassert solution(\"()()(())\") == \"impossible\"\nassert solution(\"(())\") == \"impossible\"\nassert solution(\"(())(()))\") == \"impossible\"\nassert solution(\"()())(())\") == \"impossible\"\nassert solution(\"()()())\") == \"impossible\"\nassert solution(\"()(())\") == \"impossible\"\nassert solution(\"()())(())\") == \"impossible\"\nassert solution(\"()())(())\") == \"impossible\"\nassert solution(\"())(())\") == \"impossible\"\nassert solution(\"())(())(())\") == \"impossible\"\nassert solution(\"(())())(())\") == \"impossible\"\nassert solution(\"())(())(())\") == \"impossible\"\nassert solution(\"()())(())()\") == \"possible\"\nassert solution(\"())(())(())()\") == \"possible\"\nassert solution(\"()())(())()()\") == \"possible\"\nassert solution(\"()(())(())()\") == \"possible\"\nassert solution(\"()())(())()()\") == \"possible\"\nassert solution(\"())(())(())()()\") == \"possible\"\nassert solution(\"()())(())()()(())\") == \"possible\"\nassert solution(\"()())(())()())()\") == \"possible\"\nassert solution(\"()())(())())(())()\") == \"possible\"\nassert solution(\"()())(())())(())())\") == \"possible\"\nassert solution(\"()())(())())(())())\") == \"possible\"\nassert solution(\"()())(())())(())())(())\") == \"possible\"\nassert solution(\"()())(())())(())())(())(())\") == \"possible\"\nassert solution(\"()())(())())(())())(())())\") == \"possible\"\nassert solution(\"()())(())())(())())(())())(())())\") == \"possible\"\nassert solution(\"()())(())())(())())(())())(())())\") == \"possible\"\nassert solution(\"()())(())())(())())(())())(())())\") == \"possible\"\nassert solution(\"()())(())())(())())(())())(())())())\") == \"possible\"\nassert solution(\"()())(())())(())())(())())(())())(()\")) == \"possible\"\nassert solution(\"()())(())())(())())(())())(())())(())())\")) == \"possible\"\nassert solution(\"()())(())())(())())(())())(())())(()()))()\") == \"possible\"\nassert solution(\"()())(())())(())())(())())(())())(()()))()()\") == \"possible\"\nassert solution(\"()())(())())(())())(())())(())())(()()))()()()\") == \"possible\"\nassert solution(\"()())(())())(())())(())())(())())(()()))()()()()\") == \"possible\"\nassert solution(\"()())(())())(())())(())())(())())(()()))()()()()()()\") == \"possible\"\nassert solution(\"()())(())())(())())(())())(())())(()()))()()()()()()()()\") == \"possible\"\nassert solution(\"()())(())())(())())(())())(())())(()()))()()()()()()()()()\") == \"possible\"\nassert solution(\"()())(())())(())())(())())(())())(()()))()()()()()()()()()()\") == \"possible\"\nassert solution(\"()())(())())(())())(())())(())())(()()))()()()()()()()()()()()()\") == \"possible\"\nassert solution(\"()())(())())(())())(())())(())())(()()))()()()()()()()()()()()()()()\") == \"possible\"\nassert solution(\"()())(())())(())())(())())(())())(()()))()()()()()()()()()()()()()()()\") == \"possible\"\nassert solution(\"()())(())())(())())(())())(())())(()()))()()()()()()()()()()()()()()()()()()\") == \"possible\"\nassert solution(\"()())(())())(())())(())())(())())(()()))()()()()()()()()()()()()()()()()()()()\") == \"possible\"\nassert solution(\"()())(())())(())())(())())(())())(()()))()()()()()()()()()()()()()()()()()()()()()()()()\") == \"possible\"\nassert solution(\"()())(())())(())())(())())(())())(()()))()()()()()()()()()()()()()()()()"
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"())\") == \"possible\"\nassert solution(\"())())\") == \"impossible\""
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('()))') == 'possible', \"Sample Input 1: ((())\\nSample Output 1: possible\"\nassert solution('())())') == 'impossible', \"Sample Input 2: )())\\nSample Output 2: impossible\""
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"()))\") == \"possible\", \"Test 1 failed\"\nassert solution(\"())))\") == \"impossible\", \"Test 2 failed\"\nassert solution(\"(abc)\") == \"impossible\", \"Test 3 failed\"\nassert solution(\"()())\") == \"impossible\", \"Test 4 failed\"\nassert solution(\"(())\") == \"possible\", \"Test 5 failed\""
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"(()())(())(()())(())(()))(()))\") == \"possible\"\nassert solution(\"(()())(())(()())(())(()))(()))\") == \"impossible\""
    },
    {
        "number": 3069,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"()))\") == \"possible\"\nassert solution(\"()))())\") == \"impossible\""
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution\n"
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1800 9000 1800\\n1 2000 9200 1600\\n1 2200 9400 1400\") == \"1800\\n\"\nassert solution(\"2 2\\n1 1800 3600 1800\\n1 1900 3600 1600\") == \"impossible\""
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == expected_output1, f\"Test case 1 failed: {solution(sample_input1)}!= {expected_output1}\"\nassert solution(sample_input2) == expected_output2, f\"Test case 2 failed: {solution(sample_input2)}!= {expected_output2}\""
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\n    pass\""
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n1 1800 9000 1800\\n1 2000 9200 1600\\n1 2200 9400 1400\\n\") == \"1800\"\nassert solution(\"2 2\\n1 1800 3600 1800\\n1 1900 3600 1600\\n\") == \"impossible\""
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n1 1800 9000 1800\\n1 2000 9200 1600\\n1 2200 9400 1400\") == 1800\nassert solution(\"2 2\\n1 1800 3600 1800\\n1 1900 3600 1600\") == \"impossible\""
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n1 1800 9000 1800\\n1 2000 9200 1600\\n1 2200 9400 1400\") == \"1800\"\nassert solution(\"2 2\\n1 1800 3600 1800\\n1 1900 3600 1600\") == \"impossible\""
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n1 1800 9000 1800\\n1 2000 9200 1600\\n1 2200 9400 1400\") == \"1800\\n\"\nassert solution(\"2 2\\n1 1800 3600 1800\\n1 1900 3600 1600\") == \"impossible\""
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n1 1800 9000 1800\\n1 2000 9200 1600\\n1 2200 9400 1400\") == \"1800\\n\""
    },
    {
        "number": 3070,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"1800\"\nassert solution() == \"impossible\""
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\") == \"A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2\"\nassert solution(\"2 3\") == \"A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2\\nA1-C2 A2-B2 B1-C1\"\n"
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 2\\n2 3\\n') == 'A1-B2 B1-A2 A3-B3 A2-B3 B2-A3 A1-B1 A3-B1 A2-B2\\n'"
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 2') == 'A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2\\n'\n\nassert solution('2 3') == 'A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2\\nA1-C2 A2-B2 B1-C1\\n'"
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"\"\"A1-B2 B1-A2 A3-B3\nA2-B3 B2-A3 A1-B1\nA3-B1 B3-A1 A2-B2\n\"\"\""
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '''\nA1-B2 B1-A2 A3-B3\nA2-B3 B2-A3 A1-B1\nA3-B1 B3-A1 A2-B2\n'''"
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\\n2 3\\n\") == \"A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2\\n\"\nassert solution(\"2 3\\n\") == \"A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2\\nA1-C2 A2-B2 B1-C1\\n\""
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2\\n\", \"The output is incorrect.\""
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\") == \"A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2\\n\"\nassert solution(\"2 3\") == \"A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2\\nA1-C2 A2-B2 B1-C1\\n\""
    },
    {
        "number": 3071,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\\n2 3\\n\") == \"A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2\\nA1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2\\nA1-C2 A2-B2 B1-C1\"\nassert solution(\"2 3\\n3 2\\n\") == \"A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2\\nA1-C2 A2-B2 B1-C1\""
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 2\\n..\\n..\\n') == '7'\nassert solution('4 4\\nX.XX\\nX..X\\n..X. \\n..XX\\n') == '9'"
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Input {input()}, Output {output} are not matching.\""
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4\\nX.XX\\nX..X\\n..X. \\n..XX\\n\") == \"9\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 2\\n..\\n..') == '7'\nassert solution('4 4\\nX.XX\\nX..X\\n..X. \\n..XX') == '9'"
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\n..\\n..\") == \"7\"\nassert solution(\"4 4\\nX.XX\\nX..X\\n..X. \\n..XX\") == \"9\""
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"7\\n\"\nassert solution(open(\"input2.txt\", \"r\")) == \"9\\n\""
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input1) == '7'\nassert solution(sample_input2) == '9'"
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\n..\\n..\") == \"7\"\nassert solution(\"4 4\\nX.XX\\nX..X\\n..X.\\n..XX\") == \"9\""
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3072,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Test {id(input())} failed: Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n3 3 2 2 100\\n1 1 1 1 500\\n\") == 600\nassert solution(\"2\\n2 0 2 1 100\\n6 0 8 1 1\\n\") == 100"
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"Output a single integer, which is the minimum cost for the knight to reach the goal at (0,0).\\n\"\n"
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n3 3 2 2 100\\n1 1 1 1 500\\n\") == \"600\"\nassert solution(\"2\\n2 0 2 1 100\\n6 0 8 1 1\\n\") == \"100\""
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"600\", \"The solution is incorrect.\""
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"416\"\n"
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == '600'\nassert solution(sample_input_2) == '100'\n\nfrom typing import List"
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 600, \"Incorrect output for sample input 1\"\n\nassert solution() == 100, \"Incorrect output for sample input 2\""
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n3 3 2 2 100\\n1 1 1 1 500\\n\") == 600\nassert solution(\"2\\n2 0 2 1 100\\n6 0 8 1 1\\n\") == 100"
    },
    {
        "number": 3073,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == \"600\", solution(sample_input_1)\nassert solution(sample_input_2) == \"100\", solution(sample_input_2)"
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 3\nassert solution(2) == 0"
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n361\") == \"3\\n\"\nassert solution(\"2\\n11\") == \"0\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output, f\"Your solution is incorrect. Expected output: {expected_output}, but got: {solution(stdin)}\""
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n361') == 3\nassert solution('2\\n11') == 0"
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n361\") == \"3\"\nassert solution(\"2\\n11\") == \"0\""
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n361') == '3'\nassert solution('2\\n11') == '0'"
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"3\\n\" # Solution 1\nassert solution(input()) == \"2\\n\" # Solution 2"
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3, 361) == 3\nassert solution(2, 11) == 0"
    },
    {
        "number": 3074,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n361\") == \"3\\n\"\nassert solution(\"2\\n11\") == \"0\\n\""
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''3 10\n2 100\n1 10\n11 5''') == '10'\n\nassert solution('''3 10\n2 100\n1 10\n13 5''') == 'cancel road trip'\n\nsolution = \"\"\"\nimport math"
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 10\\n2 100\\n1 10\\n11 5') == '10'\nassert solution('3 10\\n2 100\\n1 10\\n13 5') == 'cancel road trip'"
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt', 'r')) == '10'\nassert solution(open('input2.txt', 'r')) == 'cancel road trip'"
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n3 10\n2 100\n1 10\n11 5\n''') == '10'\nassert solution('''\n3 10\n2 100\n1 10\n13 5\n''') == 'cancel road trip'"
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''3 10\n2 100\n1 10\n11 5''') == '10'\n\nassert solution('''3 10\n2 100\n1 10\n13 5''') == 'cancel road trip'"
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"10\"\nassert solution() == \"cancel road trip\"\n\nfrom typing import List"
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 10\\n2 100\\n1 10\\n11 5\") == \"10\"\nassert solution(\"3 10\\n2 100\\n1 10\\n13 5\") == \"cancel road trip\""
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 10\\n2 100\\n1 10\\n11 5\") == \"10\\n\"\nassert solution(\"3 10\\n2 100\\n1 10\\n13 5\") == \"cancel road trip\\n\""
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Test failed. Expected: {output}, Actual: {solution(input())}\"\n"
    },
    {
        "number": 3075,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '10\\n'"
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n4 9\n2 8\n1 1\n3 4\n5 100\n\"\"\") == \"\"\"\n1 8 9 9 100 101 108 109 109\n\"\"\"\n\nassert solution(\"\"\"\n5 7\n2 2\n3 8\n2 7\n2 4\n3 8\n\"\"\") == \"\"\"\n0 7 8 11 15 16 19\n\"\"\""
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 9\\n2 8\\n1 1\\n3 4\\n5 100\") == \"1 8 9 9 100 101 108 109 109\"\nassert solution(\"5 7\\n2 2\\n3 8\\n2 7\\n2 4\\n3 8\") == \"0 7 8 11 15 16 19\""
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"1 8 9 9 100 101 108 109 109\\n\""
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n4 9\n2 8\n1 1\n3 4\n5 100\n''') == '''\n1 8 9 9 100 101 108 109 109\n'''\n\nassert solution('''\n5 7\n2 2\n3 8\n2 7\n2 4\n3 8\n''') == '''\n0 7 8 11 15 16 19\n'''"
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 9\\n2 8\\n1 1\\n3 4\\n5 100\") == \"1 8 9 9 100 101 108 109 109\\n\"\nassert solution(\"5 7\\n2 2\\n3 8\\n2 7\\n2 4\\n3 8\") == \"0 7 8 11 15 16 19\\n\""
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt').read()) == solution(\n    '''\n    4 9\n    2 8\n    1 1\n    3 4\n    5 100\n    ''')"
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 9\\n2 8\\n1 1\\n3 4\\n5 100\") == \"1 8 9 9 100 101 108 109 109\\n\"\nassert solution(\"5 7\\n2 2\\n3 8\\n2 7\\n2 4\\n3 8\") == \"0 7 8 11 15 16 19\\n\""
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == expected_output_1, \"Test 1 failed\"\nassert solution(sample_input_2) == expected_output_2, \"Test 2 failed\""
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n4 9\n2 8\n1 1\n3 4\n5 100\n\"\"\") == \"1 8 9 9 100 101 108 109 109\"\n\nassert solution(\n\"\"\"\n5 7\n2 2\n3 8\n2 7\n2 4\n3 8\n\"\"\") == \"0 7 8 11 15 16 19\""
    },
    {
        "number": 3076,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '1 2 3 9 100 101 108 109 109', \"Test case 1 failed.\"\nassert solution(stdin) == '0 7 8 11 15 16 19', \"Test case 2 failed.\"\nassert solution(stdin) == '1000000', \"Test case 3 failed.\"\nassert solution(stdin) == '0', \"Test case 4 failed.\"\nassert solution(stdin) == '1', \"Test case 5 failed.\""
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"Got '{solution(stdin)}', expected '{expected}'\" for stdin, expected in [\n    ('1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3', '1'),\n    ('1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3', '3'),\n]"
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\\n\") == \"1\\n\", \"Test 1 failed\"\n\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\\n\") == \"3\\n\", \"Test 2 failed\""
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == \"1\\n\"\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == \"3\\n\""
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == 1\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == 3"
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\\n\") == \"1\\n\"\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\\n\") == \"3\\n\""
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == \"1\"\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == \"3\""
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == \"1\\n\"\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 0\\n0 3\") == \"3\\n\""
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == \"1\\n\"\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == \"3\\n\""
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n1 3 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3\n''') == '1\\n'\n\nassert solution('''\n1 5 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3\n''') == '3\\n'"
    },
    {
        "number": 3077,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\\n\") == \"1\""
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n5 10000\n1\n1\n1\n1\n1\n''') == '''\n4\n4\n2\n2\n0\n'''\n\nassert solution('''\n5 9\n1\n1\n10\n1\n9\n''') == '''\n2\n0\n0\n2\n0\n'''"
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, \"The output does not match the expected output.\""
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"Sample Output 1\\n4\\n4\\n2\\n2\\n0\\n\""
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 10000\\n1\\n1\\n1\\n1\\n1') == '4\\n4\\n2\\n2\\n0\\n'\nassert solution('5 9\\n1\\n1\\n10\\n1\\n9') == '2\\n0\\n0\\n2\\n0\\n'"
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(str(input())) == expected_output, f\"Test case {test_case_id} failed: {solution(str(input()))}!= {expected_output}\""
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 10000\\n1\\n1\\n1\\n1\\n1\") == \"4\\n4\\n2\\n2\\n0\"\nassert solution(\"5 9\\n1\\n1\\n10\\n1\\n9\") == \"2\\n0\\n0\\n2\\n0\""
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 10000\\n1\\n1\\n1\\n1\\n1\\n\") == \"4\\n4\\n2\\n2\\n0\\n\"\nassert solution(\"5 9\\n1\\n1\\n10\\n1\\n9\\n\") == \"2\\n0\\n0\\n2\\n0\\n\""
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"\"\"\n"
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 10000\\n1\\n1\\n1\\n1\\n1\") == \"4\\n4\\n2\\n2\\n0\\n\"\nassert solution(\"5 9\\n1\\n1\\n10\\n1\\n9\") == \"2\\n0\\n0\\n2\\n0\\n\""
    },
    {
        "number": 3078,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 10000\\n1\\n1\\n1\\n1\\n1\\n') == '4\\n4\\n2\\n2\\n0\\n'\nassert solution('5 9\\n1\\n1\\n10\\n1\\n9\\n') == '2\\n0\\n0\\n2\\n0\\n'\n\nfrom typing import List"
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\nne\") == \"NE\\n\"\nassert solution(\"4\\nkava\") == \"DA\\nak\\n\""
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == 'NE'\nassert solution(stdin) == 'DA'"
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Sample Input 1\\n2\\nSample Output 1\\nNE\\nSample Input 2\\n4\\nkava\\nSample Output 2\\nDA\\nak\\ndef solution(stdin: str) -> str:\\n    pass\") == \"NE\\nak\\n\"\n\nassert solution(\"Sample Input 1\\n2\\nSample Output 1\\nNE\\nSample Input 2\\n4\\nkava\\nSample Output 2\\nDA\\nak\\ndef solution(stdin: str) -> str:\\n    pass\") == \"NE\\nak\\n\"\n\nassert solution(\"Sample Input 1\\n2\\nSample Output 1\\nNE\\nSample Input 2\\n4\\nkava\\nSample Output 2\\nDA\\nak\\ndef solution(stdin: str) -> str:\\n    pass\") == \"NE\\nak\\n\""
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\nne\") == \"NE\"\nassert solution(\"4\\nkava\") == \"DA\""
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\ne\\n\") == \"NE\\n\"\nassert solution(\"4\\nkava\\n\") == \"DA\\nak\\ndef solution(stdin: str) -> str:\n    pass"
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"2\\nne\\n\") == \"NE\"\nassert solution(stdin=\"4\\nkava\\n\") == \"DA\""
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\ne\\n\") == \"NE\\n\"\nassert solution(\"4\\nkava\\n\") == \"DA\\nak\\ndef solution(stdin: str) -> str:\n    pass\""
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\nne\") == \"NE\"\nassert solution(\"4\\nkava\") == \"DA\"\n\nfrom typing import List"
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Sample Input 1\") == \"NE\"\nassert solution(\"Sample Input 2\") == \"DA\""
    },
    {
        "number": 3079,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\nne\") == \"NE\"\nassert solution(\"4\\nkava\") == \"DA\""
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4 4\\n1 2\\n1 3\\n2 4\\n3 4\\n1 1 4\\n2 1 4\\n1 1 3\\n2 2 3 2\") == \"2\\n0\\n2\\n1\\n\"\nassert solution(\"8 10 4\\n1 2\\n2 3\\n1 3\\n3 6\\n6 8\\n2 4\\n2 5\\n4 7\\n5 7\\n7 8\\n2 3 4 5 6\\n2 2 6 8\\n1 1 6\\n1 1 8\") == \"0\\n0\\n3\\n2\\n\""
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4 4\\n1 2\\n1 3\\n2 4\\n3 4\\n1 1 4\\n2 1 4\\n1 1 3\\n2 2 3 2\") == \"2\\n0\\n2\\n1\"\nassert solution(\"8 10 4\\n1 2\\n2 3\\n1 3\\n3 6\\n6 8\\n2 4\\n2 5\\n4 7\\n5 7\\n7 8\\n2 3 4 5 6\\n2 2 6 8\\n1 1 6\\n1 1 8\") == \"0\\n0\\n3\\n2\""
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2\\n0\\n2\\n1\\n\"\n"
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    4 4 4\n    1 2\n    1 3\n    2 4\n    3 4\n    1 1 4\n    2 1 4\n    1 1 3\n    2 2 3 2\n    \"\"\"\n) == \"2\\n0\\n2\\n1\\n\"\n\nassert solution(\n    \"\"\"\n    8 10 4\n    1 2\n    2 3\n    1 3\n    3 6\n    6 8\n    2 4\n    2 5\n    4 7\n    5 7\n    7 8\n    2 3 4 5 6\n    2 2 6 8\n    1 1 6\n    1 1 8\n    \"\"\"\n) == \"0\\n0\\n3\\n2\\n\""
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4 4\\n1 2\\n1 3\\n2 4\\n3 4\\n1 1 4\\n2 1 4\\n1 1 3\\n2 2 3 2\") == \"2\\n0\\n2\\n1\"\nassert solution(\"8 10 4\\n1 2\\n2 3\\n1 3\\n3 6\\n6 8\\n2 4\\n2 5\\n4 7\\n5 7\\n7 8\\n2 3 4 5 6\\n2 2 6 8\\n1 1 6\\n1 1 8\") == \"0\\n0\\n3\\n2\""
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 2\nassert solution() == 0\nassert solution() == 3\nassert solution() == 2\nassert solution() == 1\n"
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4 4\\n1 2\\n1 3\\n2 4\\n3 4\\n1 1 4\\n2 1 4\\n1 1 3\\n2 2 3 2\") == \"2\\n0\\n2\\n1\\n\"\nassert solution(\"8 10 4\\n1 2\\n2 3\\n1 3\\n3 6\\n6 8\\n2 4\\n2 5\\n4 7\\n5 7\\n7 8\\n2 3 4 5 6\\n2 2 6 8\\n1 1 6\\n1 1 8\") == \"0\\n0\\n3\\n2\\n\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3080,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    4 4 4\n    1 2\n    1 3\n    2 4\n    3 4\n    1 1 4\n    2 1 4\n    1 1 3\n    2 2 3 2\n    \"\"\"\n) == \"2\\n0\\n2\\n1\\n\"\n\nassert solution(\n    \"\"\"\n    8 10 4\n    1 2\n    2 3\n    1 3\n    3 6\n    6 8\n    2 4\n    2 5\n    4 7\n    5 7\n    7 8\n    2 3 4 5 6\n    2 2 6 8\n    1 1 6\n    1 1 8\n    \"\"\"\n) == \"0\\n0\\n3\\n2\\n\"\n\nassert solution(\n    \"\"\"\n    4 6 4\n    1 2\n    1 3\n    2 4\n    3 4\n    1 1 4\n    2 1 4\n    1 1 3\n    2 2 3 2\n    3 2 4 4\n    4 4 6\n    5 3 5 5\n    5 3 7\n    6 3 8\n    7 3 9\n    8 3 10\n    \"\"\"\n) == \"0\\n2\\n2\\n1\\n1\\n1\\n0\\n1\\n\"\n\nassert solution(\n    \"\"\"\n    2 2\n    1 1\n    1 2\n    1 3\n    1 4\n    \"\"\"\n) == \"0\\n0\\n0\\n1\\n1\\n\"\n\nassert solution(\n    \"\"\"\n    5 3 5 5\n    5 3 7\n    6 3 8\n    7 3 9\n    8 3 10\n    \"\"\"\n) == \"2\\n2\\n0\\n1\\n\"\n\nassert solution(\n    \"\"\"\n    5 3 5 5\n    5 3 7\n    6 3 8\n    7 3 9\n    8 3 10\n    \"\"\"\n) == \"2\\n2\\n0\\n1\\n\"\n\nassert solution(\n    \"\"\"\n    2 2\n    1 1\n    1 2\n    1 3\n    1 4\n    2 2 4 4\n    3 2 5 5\n    4 2 6 6\n    5 2 7 7\n    6 2 8 8\n    7 2 9 9\n    8 2 10 10\n    \"\"\"\n) == \"0\\n1\\n1\\n1\\n1\\n\"\n\nassert solution(\n    \"\"\"\n    4 4 4\n    1 2\n    1 3\n    2 4\n    3 4\n    1 1 4\n    2 1 4\n    1 1 3\n    2 2 3 2\n    3 2 4 4\n    4 4 6\n    5 3 5 5\n    5 3 7\n    6 3 8\n    7 3 9\n    8 3 10\n    \"\"\"\n) == \"2\\n0\\n2\\n1\\n\"\n\nassert solution(\n    \"\"\"\n    5 3 5 5\n    5 3 7\n    6 3 8\n    7 3 9\n    8 3 10\n    \"\"\"\n) == \"2\\n2\\n0\\n1\\n\"\n\nassert solution(\n    \"\"\"\n    4 4 4\n    1 2\n    1 3\n    2 4\n    3 4\n    1 1 4\n    2 1 4\n    1 1 3\n    2 2 3 2\n    3 2 4 4\n    4 4 6\n    5 3 5 5\n    5 3 7\n    6 3 8\n    7 3 9\n    8 3 10\n    \"\"\"\n) == \"2\\n0\\n2\\n1\\n\"\n\nassert solution(\n    \"\"\"\n    2 2\n    1 1\n    1 2\n    1 3\n    1 4\n    2 2 4 4\n    3 2 5 5\n    4 2 6 6\n    5 2 7 7\n    6 2 8 8\n    7 2 9 9\n    8 2 10 10\n    \"\"\"\n) == \"0\\n1\\n1\\n1\\n1\\n\"\n\nassert solution(\n    \"\"\"\n    2 2\n    1 1\n    1 2\n    1 3\n    1 4\n    2 2 4 4\n    "
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 1') == 2\nassert solution('2 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 3') == 1"
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 1\\n2 1 3\") == \"2\""
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2\\n\"\nassert solution() == \"1\\n\""
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 2, \"The output should be 2\"\nassert solution() == 1, \"The output should be 1\""
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(str(input())) == \"2\\n\"\nassert solution(str(input())) == \"1\\n\""
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 2, \"Expected output: 2\"\n"
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1\\n\"\n"
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input1) == expected1, f\"Expected output: {expected1}, Actual output: {solution(sample_input1)}\"\nassert solution(sample_input2) == expected2, f\"Expected output: {expected2}, Actual output: {solution(sample_input2)}\""
    },
    {
        "number": 3081,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 2"
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == \"40.500000000\", \"Error in test case 1.\"\nassert solution(sample_input_2) == \"49.000000000\", \"Error in test case 2.\""
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == '40.500000000', 'The output of sample input 1 should be 40.500000000.'\nassert solution(sample_input2) == '49.000000000', 'The output of sample input 2 should be 49.000000000.'"
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 15\\nD 4 10 1\\nC 6 1\\n\") == \"40.500000000\\n\"\nassert solution(\"3 15\\nD 4 10 1\\nC 6 1\\nC 9 3\\n\") == \"49.000000000\\n\"\nassert solution(\"\") == \"impossible\\n\"\nassert solution(\"2 15\\nD 4 10 1\\nC 6 1\\nC 6 1\\n\") == \"impossible\\n\"\nassert solution(\"2 15\\nD 4 10 1\\nC 6 1\\nC 6 2\\n\") == \"impossible\\n\""
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 15\\nD 4 10 1\\nC 6 1\\n') == '40.500000000'\nassert solution('3 15\\nD 4 10 1\\nC 6 1\\nC 9 3\\n') == '49.000000000'"
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 15\\nD 4 10 1\\nC 6 1\\nSample Input 1:\\n2 15\\nD 4 10 1\\nC 6 1\\nSample Output 1:\\n40.500000000\\n\\nSample Input 2:\\n3 15\\nD 4 10 1\\nC 6 1\\nC 9 3\\nSample Output 2:\\n49.000000000\") == \"40.500000000\\n\\n49.000000000\"\n"
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 15\\nD 4 10 1\\nC 6 1\\n\") == \"40.500000000\\n\"\nassert solution(\"3 15\\nD 4 10 1\\nC 6 1\\nC 9 3\\n\") == \"49.000000000\\n\"\n\nimport math\n"
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 15\\nD 4 10 1\\nC 6 1\") == \"40.500000000\"\nassert solution(\"3 15\\nD 4 10 1\\nC 6 1\\nC 9 3\") == \"49.000000000\""
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 15\\nD 4 10 1\\nC 6 1\\n\") == \"40.500000000\\n\"\nassert solution(\"3 15\\nD 4 10 1\\nC 6 1\\nC 9 3\\n\") == \"49.000000000\\n\""
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"\"\"40.500000000\"\"\"\n\nassert solution(stdin) == \"\"\"49.000000000\"\"\""
    },
    {
        "number": 3082,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 15\\nD 4 10 1\\nC 6 1\\nSample Input 1:\\n2 15\\nD 4 10 1\\nC 6 1\\nSample Output 1:\\n40.500000000\\n\\nSample Input 2:\\n3 15\\nD 4 10 1\\nC 6 1\\nC 9 3\\nSample Output 2:\\n49.000000000\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution('2 15\\nD 4 10 1\\nC 6 1\\nSample Input 1:\\n2 15\\nD 4 10 1\\nC 6 1\\nSample Output 1:\\n40.500000000\\n\\nSample Input 2:\\n3 15\\nD 4 10 1\\nC 6 1\\nC 9 3\\nSample Output 2:\\n49.000000000\\n\\n\\n# Test cases\\nassert solution('4 10\\nD 1 2 10\\nC 1 2\\nC 3 1\\nSample Input 3:\\n4 10\\nD 1 2 10\\nC 1 2\\nC 3 1\\nSample Output 3:\\n11.000000000\\n\\nSample Input 4:\\n4 10\\nD 1 2 10\\nC 1 2\\nC 3 1\\nSample Output 4:\\n0.000000000\\n\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution('4 10\\nD 1 2 10\\nC 1 2\\nC 3 1\\nSample Input 3:\\n4 10\\nD 1 2 10\\nC 1 2\\nC 3 1\\nSample Output 3:\\n11.000000000\\n\\nSample Input 4:\\n4 10\\nD 1 2 10\\nC 1 2\\nC 3 1\\nSample Output 4:\\n0.000000000\\n\\n\") == \"40.500000000\\n49.000000000\\n11.000000000\\n0.000000000\\n\\n\""
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r').read()) == '''\n5 4 9 3 1 10 7 6 2\n'''"
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == expected_output1\nassert solution(sample_input2) == expected_output2\n\nfrom typing import List"
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('10\\na 2 10 3\\nb 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7') == '5 4 9 3 1 10 7 6 2'\nassert solution('10\\na 2 10 3\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7') == 'fail'"
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('10\\na 2 10 3\\nb 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7') == '5 4 9 3 1 10 7 6 2\\n'\n\nfrom typing import List"
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10\\na 2 10 3\\nb 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\") == \"5 4 9 3 1 10 7 6 2\"\nassert solution(\"10\\na 2 10 3\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\") == \"fail\""
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10\\na 2 10 3\\nb 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\") == \"5 4 9 3 1 10 7 6 2\"\nassert solution(\"10\\na 2 10 3\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\") == \"fail\""
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"5 4 9 3 1 10 7 6 2\"\n\nfrom typing import List"
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(data) == expected, f\"Expected {expected}, but got {solution(data)}\"\n"
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"5 4 9 3 1 10 7 6 2\"\nassert solution(open(\"input.txt\", \"r\")) == \"fail\"\nassert solution(open(\"input.txt\", \"r\")) == \"fail\"\nassert solution(open(\"input.txt\", \"r\")) == \"5 4 9 3 1 10 7 6 2\"\n"
    },
    {
        "number": 3083,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"a 2 10 3\\nb 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\n\") == \"5 4 9 3 1 10 7 6 2\"\nassert solution(\"a 2 10 3\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\n\") == \"fail\""
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"00:00\\n01:01\") == \"3\\n00:00\\n01:00\\n01:01\"\nassert solution(\"00:08\\n00:00\") == \"3\\n00:08\\n00:09\\n00:00\""
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('00:00') == 3\nassert solution('01:01') == 3\nassert solution('00:08') == 3"
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"00:00\") == \"3\\n00:00\\n01:01\"\nassert solution(\"00:08\") == \"3\\n00:08\\n00:09\\n00:00\""
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"00:00\") == \"3\\n00:00\\n01:01\"\nassert solution(\"00:08\") == \"3\\n00:08\\n00:09\\n00:00\""
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"00:00\\n01:01\") == \"3\\n00:00\\n01:00\\n01:01\"\nassert solution(\"00:08\\n00:00\") == \"3\\n00:08\\n00:09\\n00:00\""
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('00:00') == '3'\nassert solution('01:01') == '3'\nassert solution('00:08') == '3'\n\nfrom typing import List"
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"00:00\") == \"3\\n00:00\\n01:00\", \"Incorrect result for sample input 1\"\nassert solution(\"00:08\") == \"3\\n00:08\\n00:09\\n00:00\", \"Incorrect result for sample input 2\""
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('00:00\\n01:01') == '3\\n00:00\\n01:00\\n01:01'\nassert solution('00:08\\n00:00') == '3\\n00:08\\n00:09\\n00:00'"
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"00:00\\n01:01\") == \"3\\n00:00\\n01:00\\n01:01\"\nassert solution(\"00:08\\n00:00\") == \"3\\n00:08\\n00:09\\n00:00\""
    },
    {
        "number": 3084,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input(\"Enter the original time: \")) == \"3\\n00:00\\n01:00\\n01:01\"\nassert solution(input(\"Enter the current time: \")) == \"3\\n00:08\\n00:09\\n00:00\""
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"(())\"\"\"\n) == \"4,8:8,8:\"\n\nassert solution(\n    \"\"\"()\"\"\"\n) == \"4,4:\""
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"(())\") == \"4,8:8,8:\"\nassert solution(\"()\") == \"4,4:\""
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"(())\") == \"4,8:8,8:\"\nassert solution(\"()\") == \"4,4:\""
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"(())\") == \"4,8:8,8:\"\nassert solution(\"(())\") == \"4,4:\"\nassert solution(\"()\") == \"4,4:\""
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == sample_output"
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"(())\") == \"4,8:8,8:\"\nassert solution(\"()\") == \"4,4:\"\nassert solution(\"(abc)\") == \"4,8:6:4:8:12:6:\"\nassert solution(\"()a\") == \"4,4:a:\"\nassert solution(\"abc\") == \"4,8:6:4:8:12:6:\""
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('(())') == '4,8:8,8:'\nassert solution('()') == '4,4:'\nassert solution('()()') == '4,8:8,8:'\nassert solution('(())()()') == '4,8:8,8:'\n\nfrom typing import List"
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"(())\") == \"4,8:8,8:\"\nassert solution(\"(())\") == \"4,8:8,8:\"\nassert solution(\"(1+2*3)\") == \"4,12:12,12:24,12:12,24,12:24,12:12\""
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('(())') == '4,8:8,8:'\nassert solution('()') == '4,4:'\nassert solution('()())') == '4,8:8,8:'\nassert solution('()((())()))') == '4,8:8,8:'\nassert solution(')()()()') == '4,8:8,8:'"
    },
    {
        "number": 3085,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('(())') == '4,8:8,8:'\nassert solution('()') == '4,4:'\nassert solution('(())(())') == '4,8:8,8:8,8:8:'\nassert solution('()()') == '4,4:'"
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input1) == \"5\", \"Sample Input 1 failed\"\nassert solution(sample_input2) == \"185\", \"Sample Input 2 failed\""
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == expected_output_1, f\"Test Case 1: {sample_input_1} should return {expected_output_1}\"\nassert solution(sample_input_2) == expected_output_2, f\"Test Case 2: {sample_input_2} should return {expected_output_2}\"\n\nsample_input_1 = \"\"\"\n1 1\n26 02 03 03 1\n\"\"\"\n\nsample_input_2 = \"\"\"\n1 1\n26 02 03 03 2\n\"\"\"\n\nexpected_output_1 = 5\nexpected_output_2 = 185"
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''1 1\n26 02 03 03 1\n26 02 03 03 2\n''') == '5\\n185'"
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(solution_input1) == 5\nassert solution(solution_input2) == 185"
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"5\\n\", \"Sample Output 1:\\n\" + solution(stdin)"
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\\n26 02 03 03 1\\n26 02 03 03 2\\n\") == \"5\\n185\"\nassert solution(\"1 2\\n26 02 03 03 1\\n26 02 03 03 3\\n\") == \"-1\""
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1,1) == 5\nassert solution(1,2) == 185"
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input1) == expected_output1\nassert solution(sample_input2) == expected_output2"
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input1) == '5'\nassert solution(sample_input2) == '185'"
    },
    {
        "number": 3086,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 1\\n26 02 03 03 1\\n') == '5'\nassert solution('1 1\\n26 02 03 03 2\\n') == '185'"
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\"\nassert solution(\"4 2\\n3 4 1 2\") == \"2 3 4 1\""
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\\n\") == \"5 6 1 2 3 4 \"\nassert solution(\"4 2\\n3 4 1 2\\n\") == \"2 3 4 1\"\nassert solution(\"6 2\\n3 4 5 6 1 2\\n\") == \"5 6 1 2 3 4 \"\nassert solution(\"4 2\\n3 4 1 2\\n\") == \"2 3 4 1\""
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"Marek loves dancing and he has danced a lot in the last couple of years. He has actually danced so much that he became too good in all of the traditional dances like swing, salsa, ballroom and hip-hop and now all partners he dances with can not keep up with him. Therefore he started to invent his own dances and even tries to convince other people to dance these new dances with him.\"\n"
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\\n\") == \"5 6 1 2 3 4 \"\nassert solution(\"4 2\\n3 4 1 2\\n\") == \"2 3 4 1\""
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output, f\"Input: {stdin}\\nOutput: {solution(stdin)}\\nExpected Output: {expected_output}\""
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\"\nassert solution(\"4 2\\n3 4 1 2\") == \"2 3 4 1\"\nassert solution(\"5 6 1 2 3 4\") == \"Impossible\""
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n6 2\n3 4 5 6 1 2\n\"\"\") == \"\"\"\n5 6 1 2 3 4 \n\"\"\"\n\nassert solution(\"\"\"\n4 2\n3 4 1 2\n\"\"\") == \"\"\"\n2 3 4 1 \n\"\"\""
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\\n\") == \"5 6 1 2 3 4 \"\nassert solution(\"4 2\\n3 4 1 2\\n\") == \"2 3 4 1\"\nassert solution(\"6 2\\n3 4 5 6 1 2\\n\") == \"5 6 1 2 3 4 \"\nassert solution(\"4 2\\n3 4 1 2\\n\") == \"2 3 4 1\""
    },
    {
        "number": 3087,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('6 2\\n3 4 5 6 1 2\\n') == '5 6 1 2 3 4 \\n'\nassert solution('4 2\\n3 4 1 2\\n') == '2 3 4 1 \\n'\n"
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1374 2\") == \"7413\"\nassert solution(\"210 1\") == \"201\""
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    1374 2\n    \"\"\"\n) == \"7413\"\n\nassert solution(\n    \"\"\"\n    210 1\n    \"\"\"\n) == \"201\""
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1374 2\") == \"7413\"\nassert solution(\"210 1\") == \"201\""
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1374 2\") == \"7413\"\nassert solution(\"210 1\") == \"201\""
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1374 2\") == \"7413\"\nassert solution(\"210 1\") == \"201\""
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1374 2') == '7413', \"Incorrect output 1\"\nassert solution('210 1') == '201', \"Incorrect output 2\""
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), \"Test failed\""
    },
    {
        "number": 3088,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"7413\""
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 0\\n0 1\\n1 1\\n1 0\") == \"0.666666666666667\"\nassert solution(\"0 0\\n1 1\\n2 0\") == \"0.733333333333333\""
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 1\\n1 0\\n\") == \"0.666666666666667\"\nassert solution(\"3\\n0 0\\n1 1\\n2 0\\n\") == \"0.733333333333333\""
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 1\\n1 0\\n\") == \"0.666666666666667\"\nassert solution(\"3\\n0 0\\n1 1\\n2 0\\n\") == \"0.733333333333333\""
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '0.666666666666667'\nassert solution() == '0.733333333333333'"
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_1) == expected_output_1, \"The given solution is incorrect. Expected output: '{}', but got: '{}'.\".format(expected_output_1, solution(input_1))\nassert solution(input_2) == expected_output_2, \"The given solution is incorrect. Expected output: '{}', but got: '{}'.\".format(expected_output_2, solution(input_2))\n\ninput_1 = \"4\\n0 0\\n0 1\\n1 1\\n1 0\"\ninput_2 = \"3\\n0 0\\n1 1\\n2 0\"\nexpected_output_1 = \"0.666666666666667\"\nexpected_output_2 = \"0.733333333333333\""
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n0 0\\n0 1\\n1 1\\n1 0\\n') == '0.666666666666667'\nassert solution('3\\n0 0\\n1 1\\n2 0\\n') == '0.733333333333333'"
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"0.666666666666667\"\nassert solution() == \"0.733333333333333\""
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"tests/input.txt\", \"r\")) == \"0.666666666666667\\n\""
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution([3, 0, 1, 1, 2, 0, 0]) == '0.733333333333333'"
    },
    {
        "number": 3089,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '0.666666666666667', \"Solution not correct.\"\nassert solution(input()) == '0.733333333333333', \"Solution not correct.\""
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin: str) == \"10\\n\"\nassert solution(stdin: str) == \"21\\n\"\nassert solution(stdin: str) == \"23\\n\""
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3 4\\n10 1 3\\n0 1 20\") == \"9\\n\"\nassert solution(\"2 3 100\\n10 1 10\\n10 1 10\") == \"21\\n\""
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 3 4\\n10 1 3\\n0 1 20\\n2 3 100\\n10 1 10\\n10 1 10\\n') == '9\\n'\nassert solution('2 3 100\\n10 1 10\\n10 1 10\\n') == '21\\n'"
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"9\\n\""
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3 4\\n10 1 3\\n0 1 20\") == \"9\\n\"\nassert solution(\"2 3 100\\n10 1 10\\n10 1 10\") == \"21\\n\""
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3 4\\n10 1 3\\n0 1 20\") == \"9\"\nassert solution(\"2 3 100\\n10 1 10\\n10 1 10\") == \"21\""
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3 4\\n10 1 3\\n0 1 20\") == \"9\"\nassert solution(\"2 3 100\\n10 1 10\\n10 1 10\") == \"21\""
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"9\"\nassert solution() == \"21\"\n\nfrom typing import List"
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"Output the minimum total cost (in dollars) to provide a wireless network that covers every corridor.\\n\""
    },
    {
        "number": 3090,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3 4\\n10 1 3\\n0 1 20\") == \"9\\n\"\nassert solution(\"2 3 100\\n10 1 10\\n10 1 10\") == \"21\\n\""
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 2 7 -\\n1 1 1 2\") == \"2\"\nassert solution(\"9 2 7 -\\n1 1 1 2\") == \"4\"\n"
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == \"2\"\nassert solution(sample_input_2) == \"4\""
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 2 7 -\\n1 1 1 2\") == \"2\"\nassert solution(\"9 2 7 -\\n1 1 1 2\") == \"4\""
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 2 7 -\\n1 1 1 2\") == \"2\"\nassert solution(\"9 2 7 -\\n1 1 1 2\") == \"4\""
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Test failed. Expected: {expected}, Actual: {solution(stdin)}\""
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Actual output: {solution(input())}\""
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('8 2 7 -\\n1 1 1 2') == '2'\nassert solution('9 2 7 -\\n1 1 1 2') == '4'\n"
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 2\nassert solution() == 4"
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"Please implement the solution for KenKen.\""
    },
    {
        "number": 3091,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 2 7 -\\n1 1 1 2\\n\") == \"2\"\nassert solution(\"9 2 7 -\\n1 1 1 2\\n\") == \"4\""
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n1 2 5\\n2 3 5\\n3 4 5\\n\") == \"3\\n4\\n3\\n\"\nassert solution(\"4 4\\n1 2 5\\n2 3 5\\n3 4 5\\n1 4 8\\n\") == \"2\\n3\\n2\\n1\\n\""
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n1 2 5\\n2 3 5\\n3 4 5\\n\") == \"3\\n4\\n3\\n2\\n1\\n\"\nassert solution(\"4 4\\n1 2 5\\n2 3 5\\n3 4 5\\n1 4 8\\n\") == \"2\\n3\\n2\\n1\\n\""
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 3\\n1 2 5\\n2 3 5\\n3 4 5\\n4 4\\n1 2 5\\n2 3 5\\n3 4 5\\n1 4 8\\n') == '3\\n4\\n3\\n2\\n1\\n'"
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3\\n1 2 5\\n2 3 5\\n3 4 5\\n4 4\\n1 2 5\\n2 3 5\\n3 4 5\\n1 4 8\") == \"3\\n4\\n3\\n2\\n1\""
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"TODO\""
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r')) == '''2\n1\n3'''\n\nfrom typing import List"
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n    return 'Output n integers each on its own line, for each road, the number of different shortest paths containing it, modulo 1000000007. The order of these numbers should match the order of roads in the input.'\"\nassert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n    return '3\\n4\\n3\\n'\\n\\n    return '2\\n3\\n2\\n1\\n'\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n    return '3\\n4\\n3\\n'\\n\\n    return '2\\n3\\n2\\n1\\n'\""
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n1 2 5\\n2 3 5\\n3 4 5\\n4 3\\n1 4 8\") == \"3\\n4\\n3\\n2\\n1\""
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 3\\n1 2 5\\n2 3 5\\n3 4 5') == '3\\n4\\n3\\n2'\nassert solution('4 4\\n1 2 5\\n2 3 5\\n3 4 5\\n1 4 8') == '2\\n3\\n2\\n1'\n\nsolution('4 3\\n1 2 5\\n2 3 5\\n3 4 5')  # Output: '3\\n4\\n3\\n2'\nsolution('4 4\\n1 2 5\\n2 3 5\\n3 4 5\\n1 4 8')  # Output: '2\\n3\\n2\\n1'"
    },
    {
        "number": 3092,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 3\\n1 2 5\\n2 3 5\\n3 4 5\\n4 4\\n1 2 5\\n2 3 5\\n3 4 5\\n1 4 8') == '3\\n4\\n3\\n2\\n1'"
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"6\", \"The output is incorrect\"\nprint(6)"
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"6\", \"Sample Output 1 should be '6'.\"\nassert solution(stdin) == \"24\", \"Sample Output 2 should be '24'.\""
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 6\nassert solution() == 24"
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == \"6\", \"Test 1: Expected output: '6', got: '{}'\".format(solution(sample_input_1))\nassert solution(sample_input_2) == \"24\", \"Test 2: Expected output: '24', got: '{}'\".format(solution(sample_input_2))"
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n2 1\") == \"6\\n\"\nassert solution(\"3 4\\n2 3 1\") == \"24\\n\""
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    2 3\n    2 1\n    \"\"\"\n) == \"6\"\n\nassert solution(\n    \"\"\"\n    3 4\n    2 3 1\n    \"\"\"\n) == \"24\""
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"6\\n24\""
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 6, \"The solution is incorrect.\""
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"6\""
    },
    {
        "number": 3093,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 6\nassert solution(4) == 24"
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == expected_output, f\"Actual output: {solution}, Expected output: {expected_output}\""
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2') == 2\nassert solution('5\\n3 4 5 1 2') == 1"
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\n1 2\\n') == '2\\n'\nassert solution('5\\n3 4 5 1 2\\n') == '1\\n'"
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"2\", \"Sample Output 1\""
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 2, \"Expected 2, but got {}\".format(solution(3))  # expected output: 2\nassert solution(6) == 1, \"Expected 1, but got {}\".format(solution(6))  # expected output: 1"
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1 2\") == \"2\"\nassert solution(\"5\\n3 4 5 1 2\") == \"1\""
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\n1 2\\n') == '2\\n'\nassert solution('5\\n3 4 5 1 2\\n') == '1\\n'"
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\"\nassert solution(\"5\\n3 4 5 1 2\\n\") == \"1\\n\""
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\n3 4 5 1 2') == '1\\n', 'Test case 1 failed'"
    },
    {
        "number": 3094,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\n1 2') == 2\nassert solution('5\\n3 4 5 1 2') == 1"
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 9, \"Incorrect output\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"The expected output is '{expected_output}', but instead got '{solution(input())}'\""
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"Output 1\\n9\\n\"\nassert solution(stdin) == \"Output 2\\n4\\n\"\n"
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt').read()) == \"9\\n\"\n"
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"9\"\nassert solution(open(\"test_case1.txt\", \"r\")) == \"9\"\nassert solution(open(\"test_case2.txt\", \"r\")) == \"4\""
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n3 3\n1 4 10\n5 2 6\n11 1 3\n''') == '9'\n\nassert solution('''\n3 3\n1 3 1\n2 1 2\n1 1 1\n''') == '4'\n\nfrom typing import List"
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input) == output, \"Test case failed\""
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input_1) == 9\nassert solution(sample_input_2) == 4"
    },
    {
        "number": 3095,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '9'"
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n2 1 3 4\\n1 2\\n1 3\\n3 4\\n') == '6\\n'\n\nassert solution('4\\n3 4 5 6\\n1 2\\n1 3\\n2 4\\n') == '3\\n'"
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n2 1 3 4\\n1 2\\n1 3\\n3 4\") == \"6\\n\"\nassert solution(\"4\\n3 4 5 6\\n1 2\\n1 3\\n2 4\") == \"3\\n\""
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"6\\n\", \"Sample Output 1 is not as expected\""
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 6\nassert solution() == 3"
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n2 1 3 4\\n1 2\\n1 3\\n3 4\\n\") == \"6\"\n\nassert solution(\"4\\n3 4 5 6\\n1 2\\n1 3\\n2 4\\n\") == \"3\""
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n2 1 3 4\\n1 2\\n1 3\\n3 4\\n\") == 6\nassert solution(\"4\\n3 4 5 6\\n1 2\\n1 3\\n2 4\\n\") == 3"
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"6\", \"Test failed\""
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Input: {input()}, Expected Output: {expected_output}, Actual Output: {solution(input())}\""
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"4\\n2 1 3 4\\n1 2\\n1 3\\n3 4\\n\"\n) == \"6\\n\"\n\nassert solution(\n    \"4\\n3 4 5 6\\n1 2\\n1 3\\n2 4\\n\"\n) == \"3\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3096,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n2 1 3 4\\n1 2\\n1 3\\n3 4\\n\") == \"6\\n\"\nassert solution(\"4\\n3 4 5 6\\n1 2\\n1 3\\n2 4\\n\") == \"3\\n\""
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"The output {output} is not correct. Please check the solution.\""
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == solution(stdin2) for stdin, stdin2 in [(\"Input 1:\\n2\\n1 10\\n5 8\\n\", \"Output 1:\\n18\\n8\\n\\nInput 2:\\n3\\n17 144\\n121 121\\n89 98\\n\"), (\"Input 1:\\n2\\n1 10\\n5 8\\n\", \"Output 1:\\n18\\n8\\n\\nInput 2:\\n3\\n17 144\\n121 121\\n89 98\\n\", \"Input 3:\\n123 789\\n567 432\\n345 123\\n\", \"Output 3:\\n265\\n25\\n10\\n\")]"
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1 10\\n5 8\\n\") == \"18\\n8\\n\"\nassert solution(\"3\\n17 144\\n121 121\\n89 98\\n\") == \"265\\n25\\n10\\n\"\n"
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1 10\\n5 8\\n\") == \"18\\n8\\n\"\nassert solution(\"3\\n17 144\\n121 121\\n89 98\\n\") == \"265\\n25\\n10\\n\"\n"
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(data) == expected, f\"The given solution {solution(data)} is incorrect. Expected {expected}, but got {solution(data)}\""
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Test {test_case_number} failed: Expected {expected}, got {solution(input())}\"\ntest_case_number += 1"
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"Please enter the number of queries: 2\\n2\\n1\\n5\\n8\\n3\\n17\\n144\\n121\\n98\\nPlease enter the number of queries: 3\\n1\\n17\\n144\\n121\\n98\\n\""
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1 10\\n5 8\\n\") == \"18\\n8\\n\"\nassert solution(\"3\\n17 144\\n121 121\\n89 98\\n\") == \"265\\n25\\n10\\n\""
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1 10\\n5 8\") == \"18\"\nassert solution(\"3\\n17 144\\n121 121\\n89 98\") == \"265\""
    },
    {
        "number": 3097,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 10\\n5 8\") == \"18\\n8\"\nassert solution(\"17 144\\n121 121\\n89 98\") == \"265\\n25\\n10\"\n"
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 3\\n0 0\\n1 1\\n2 1\\n1 0') == 0.5\nassert solution('5 5\\n0 4\\n4 2\\n4 1\\n3 -1\\n-2 4') == 12.5"
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n0 0\\n1 1\\n2 1\\n1 0\") == \"0.50000000\\n\"\nassert solution(\"5 5\\n0 4\\n4 2\\n4 1\\n3 -1\\n-2 4\") == \"12.50000000\\n\""
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n0 0\\n1 1\\n2 1\\n1 0\") == 0.5\nassert solution(\"5 5\\n0 4\\n4 2\\n4 1\\n3 -1\\n-2 4\") == 12.5"
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"0.50000000\", \"Test case 1 failed\"\n\nassert solution(stdin) == \"12.50000000\", \"Test case 2 failed\""
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\"\n"
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n0 0\\n1 1\\n2 1\\n1 0\") == \"0.50000000\"\nassert solution(\"5 5\\n0 4\\n4 2\\n4 1\\n3 -1\\n-2 4\") == \"12.50000000\"\n"
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 0.50000000, \"Expected result: 0.50000000, Actual result: {}\".format(solution())"
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n0 0\\n1 1\\n2 1\\n1 0\\n\") == \"0.50000000\"\nassert solution(\"5 5\\n0 4\\n4 2\\n4 1\\n3 -1\\n-2 4\\n\") == \"12.50000000\""
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n0 0\\n1 1\\n2 1\\n1 0\") == \"0.50000000\"\nassert solution(\"5 5\\n0 4\\n4 2\\n4 1\\n3 -1\\n-2 4\") == \"12.50000000\"\n\nfrom typing import List"
    },
    {
        "number": 3098,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n0 0\\n1 1\\n2 1\\n1 0\") == 0.5\nassert solution(\"5 5\\n0 4\\n4 2\\n4 1\\n3 -1\\n-2 4\") == 12.5"
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\", \"Testcase 1\""
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"0\""
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 1"
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 1 3\\n0 1\\n1 2\\n2 3\\n1\\n\") == \"2\"\nassert solution(\"4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\\n\") == \"1\""
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 1 3\\n0 1\\n1 2\\n2 3\\n1\") == \"2\\n\"\nassert solution(\"4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\") == \"1\\n\""
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 1 3\\n0 1\\n1 2\\n2 3\\n1') == '2\\n'\nassert solution('4 0 4\\n0 2\\n0 1\\n2 1\\n2 3') == '1\\n'"
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 1 3\\n0 1\\n1 2\\n2 3\\n1') == '2\\n'\nassert solution('4 0 4\\n0 2\\n0 1\\n2 1\\n2 3') == '1\\n'"
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 2, \"Your solution should return 2.\""
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 1 3\\n0 1\\n1 2\\n2 3\\n1\\n\") == \"2\\n\"\nassert solution(\"4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\\n\") == \"1\\n\""
    },
    {
        "number": 3099,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\", \"The output is not as expected. Please check the given code.\""
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1 2 1) == 6\nassert solution(2 2 2) == 30"
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2 1\") == \"6\"\nassert solution(\"2 2 2\") == \"30\""
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=sample_input_1) == str(6)\nassert solution(stdin=sample_input_2) == str(30)"
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"30\""
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 1\") == \"6\\n\"\nassert solution(\"2 2 2\") == \"30\\n\""
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"6\\n30\""
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 1\") == \"6\"\nassert solution(\"2 2 2\") == \"30\""
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == output, f\"Input '{stdin}' should output '{output}', but it returns '{solution(stdin=input())}'.\""
    },
    {
        "number": 3100,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1, 2, 1) == 6\nassert solution(2, 2, 2) == 30"
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2020 2020 2020\") == \"2021 2020 2020\"\nassert solution(\"1 9999999\") == \"impossible\""
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2020 2020 2020\") == \"2021 2020 2020\"\nassert solution(\"2\\n1 9999999\") == \"impossible\"\n"
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Expected output: {}\\nGot: {}\".format(output(), solution(input()))"
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"2021 2020 2020\\n\"\nassert solution(open(\"input2.txt\", \"r\")) == \"impossible\\n\""
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"impossible\"  # example 1\nassert solution(stdin) == \"2021 2020 2020\"  # example 2\n"
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Sample Input 1\", \"Sample Output 1\") == \"2021 2020 2020\\n\"\nassert solution(\"Sample Input 2\", \"Sample Output 2\") == \"impossible\\n\""
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2"
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Error: {solution(input())}!= {expected_output}\"\n"
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(str(input())) == expected"
    },
    {
        "number": 3101,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"30 70\") == \"11\"\nassert solution(\"66 69\") == \"2\""
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"30 70\") == \"11\", \"The correct output is: '11'\"\nassert solution(\"66 69\") == \"2\", \"The correct output is: '2'\""
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 11"
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"11\\n\", \"Test case 1 failed\"\nassert solution() == \"2\\n\", \"Test case 2 failed\""
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('30 70') == '11'\nassert solution('66 69') == '2'"
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '11'\nprint('Passed')"
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('30 70') == '11'\nassert solution('66 69') == '2'"
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"11\""
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('30 70') == '11'\nassert solution('66 69') == '2'"
    },
    {
        "number": 3102,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"30 70\") == \"11\"\nassert solution(\"66 69\") == \"2\"\n"
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Expected output {output}, got {solution(input())}\""
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 2 0\\n>@\\n>~') == '2'\nassert solution('3 5 1\\n>>@<<\\n>~#\\n>>>>~') == '4'"
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == expected, f\"Your solution is not correct. Expected: {expected}, Received: {solution}\"\n"
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 2 0\\n>@\\n>~') == '2'\nassert solution('3 5 1\\n>>@<<\\n>~#~<\\n>>>>~') == '4'\n"
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2\\n\"\nassert solution() == \"4\\n\""
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n2 2 0\n>@\n>~\n''') == '2\\n'\nassert solution('''\n3 5 1\n>>@<<\n>~#~<\n>>>>~\n''') == '4\\n'\n\nfrom typing import List"
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2\\n4\""
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2 0\\n>@\\n>~\") == \"2\\n\"\nassert solution(\"3 5 1\\n>>@<<\\n>~#~<\\n>>>>~\") == \"4\\n\""
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"4\"\n"
    },
    {
        "number": 3103,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2 0\\n>@\\n>~\") == \"2\\n\"\nassert solution(\"3 5 1\\n>>@<<\\n>~#~<\\n>>>>~\") == \"4\\n\""
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\""
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"143175=120\\n5025=30\") == \"14+31+75=120\\n5+025=30\"\nassert solution(\"4711=24\\n1234=56\\n7890=90\\n\") == \"4+711=24\\n12+34=56\\n7+890=90\""
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\""
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\\n\", \"Test 1: Corrected equation\"\n\nassert solution(\"5025=30\") == \"5+025=30\\n\", \"Test 2: Corrected equation\""
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Test Failed: {solution(input())}!= {output()}\""
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"143175=120\\n\") == \"14+31+75=120\\n\"\nassert solution(\"5025=30\\n\") == \"5+025=30\\n\""
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\""
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\\n\"\nassert solution(\"5025=30\") == \"5+025=30\\n\""
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\\n\"\nassert solution(\"5025=30\") == \"5+025=30\\n\""
    },
    {
        "number": 3104,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\"\n\nfrom typing import List"
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8\\n1\\n3\\n2\\n4\\n1\\n5\\n2\\n4\\n\") == \"1 2\\n\"\nassert solution(\"8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n1\\n\") == \"-1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(solution_input1) == expected_output1\nassert solution(solution_input2) == expected_output2"
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8\\n1\\n3\\n2\\n4\\n1\\n5\\n2\\n4\\n\") == \"1 2\"\nassert solution(\"8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n1\\n\") == \"-1\"\nassert solution(\"8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n\") == \"-1\"\n"
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('8\\n1\\n3\\n2\\n4\\n1\\n5\\n2\\n4\\n') == '1 2\\n'\nassert solution('8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n1\\n') == '-1\\ndef solution(stdin: str) -> str:\n    pass'"
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1 2\\n\"\nprint(\"Success!\")"
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"1 2\""
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('8\\n1\\n3\\n2\\n4\\n1\\n5\\n2\\n4\\n') == '1 2'\nassert solution('8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n1\\n') == '-1'"
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1 2\"\nassert solution() == \"-1\"\n"
    },
    {
        "number": 3105,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input1) == \"1 2\"\nassert solution(sample_input2) == \"-1\""
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1101') == '1', 'Test case 1 failed'\nassert solution('1') == '0', 'Test case 2 failed'"
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 0, \"Solution should return 0 for the given inputs.\"\n"
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Your solution is incorrect. Please check the sample input and output.\""
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1101') == '1\\n', \"Test Case 1 failed.\"\nassert solution('1') == '0\\n', \"Test Case 2 failed.\""
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1101') == 1\nassert solution('1') == 0"
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Test failed for {input()} and expected {output()}\""
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1101') == '1', \"1\"\nassert solution('1') == '0', \"0\""
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1101\") == \"1\"\nassert solution(\"1\") == \"0\""
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1101\") == \"1\", \"Expected 1, but got {}\".format(solution(\"1101\"))\nassert solution(\"1\") == \"0\", \"Expected 0, but got {}\".format(solution(\"1\"))"
    },
    {
        "number": 3106,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1101') == '1'\nassert solution('1') == '0'\n"
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"3 3\n3 1 3 1\n2 2 1\n3 3 1 3\n1 2\n2 3\n3 1\"\"\") == \"\"\"1\n0\n2\"\"\"\n\nassert solution(\"\"\"2 1\n4 1 6 3 6\n7 3 4 2 6 5 6 1\n1 2\n\"\"\") == \"\"\"3\n1\"\"\""
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    3 3\n    3 1 3 1\n    2 2 1\n    3 3 1 3\n    1 2\n    2 3\n    3 1\n    \"\"\"\n) == \"1\\n0\\n2\\n\"\n\nassert solution(\n    \"\"\"\n    2 1\n    4 1 6 3 6\n    7 3 4 2 6 5 6 1\n    1 2\n    \"\"\"\n) == \"3\\n\""
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == \"1\"\nassert solution(sample_input_2) == \"3\\n2\""
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"\"\"\n1\n0\n2\n\n\"\"\""
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 3\\n3 1 3 1\\n2 2 1\\n3 3 1 3\\n1 2\\n2 3\\n3 1\\n') == '1\\n0\\n2\\n\\n3\\n1\\n\\n'"
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"Expected output\"\n"
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == expected_output, f\"Expected output: {expected_output}, but got: {solution()}\""
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_string) == output_string, f\"Test {test_num} failed: {output_string}!= {input_string}\" for test_num, (input_string, output_string) in enumerate(zip(input_strings, output_strings))"
    },
    {
        "number": 3107,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n3 1 3 1\\n2 2 1\\n3 3 1 3\\n1 2\\n2 3\\n3 1\") == \"1\\n0\\n2\\n\\n3\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == expected_output"
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"4.000000\"\nassert solution() == \"3.666666\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Input and output are not matching.\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('test_input.txt', 'r').read()) == '4.000000\\n'"
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), \"Test failed. Please check the output and the function definition.\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input(1)) == \"4.000000\"\nassert solution(sample_input(2)) == \"3.666666\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    4 1\n    1 2 3 4\n    \"\"\"\n) == \"4.000000\\n\"\n\nassert solution(\n    \"\"\"\n    4 2\n    2 4 3 4\n    \"\"\"\n) == \"3.666666\\n\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 1\\n1 2 3 4\") == \"4.000000\"\nassert solution(\"4 2\\n2 4 3 4\") == \"3.666666\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"4.000000\", \"You should implement this function.\""
    },
    {
        "number": 3108,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 1\\n1 2 3 4\\n\") == \"4.000000\\n\"\n\nassert solution(\"4 2\\n2 4 3 4\\n\") == \"3.666666\\n\""
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.0 0.0\\n0.0 2.0\") == 0.750\nassert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0\") == 0.625"
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.0 0.0\\n0.0 2.0\") == \"0.750\", \"Test case 1 failed\"\nassert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0\") == \"0.625\", \"Test case 2 failed\""
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 0.75\nassert solution() == 0.625"
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 0.750\n"
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(solution_input) == solution_output, f\"The provided solution is incorrect. Please see the given examples and the function signature to understand the problem.\"\nelse:\n    print(\"The provided solution is correct.\")"
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"0.750\"\n"
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 0.75\nassert solution() == 0.625"
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"test_input.txt\", \"r\").read()) == \"0.750\"\n"
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"0.750\", \"Test case 1 failed\"\nassert solution(stdin) == \"0.625\", \"Test case 2 failed\""
    },
    {
        "number": 3109,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"Test Case Failed\""
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 3\\n1 2 4\\n0 3 6\\n4 0 3') == '2'\nassert solution('3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0') == '37'\n"
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n1 2 4\\n0 3 6\\n4 0 3\\n\") == \"2\"\nassert solution(\"3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0\\n\") == \"37\"\nassert solution(\"3 5\\n1 1 1\\n2 3 2\\n2 1 4\\n\") == \"47\""
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n1 2 4\\n0 3 6\\n4 0 3\") == \"2\\n\", \"Test 1 failed\"\nassert solution(\"3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0\") == \"37\\n\", \"Test 2 failed\""
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n1 2 4\\n0 3 6\\n4 0 3\") == \"2\\n\", \"Test 1 failed\"\n\nassert solution(\"3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0\") == \"37\\n\", \"Test 2 failed\""
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n1 2 4\\n0 3 6\\n4 0 3\\n\") == 2\nassert solution(\"3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0\\n\") == 37"
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=input()) == expected_output, f\"Solution does not match expected output. Input: {stdin}, Output: {solution(stdin=input())}, Expected Output: {expected_output}\""
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n    3 3\n    1 2 4\n    0 3 6\n    4 0 3\n    ''') == '2'\n\nassert solution('''\n    3 4\n    2 3 0 7\n    0 0 2 1\n    0 0 3 0\n    ''') == '37'"
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n1 2 4\\n0 3 6\\n4 0 3\") == \"2\\n\"\nassert solution(\"3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0\") == \"37\\n\""
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"3 3\n1 2 4\n0 3 6\n4 0 3\n\"\"\"\n) == \"2\\n\"\n\nassert solution(\n    \"\"\"3 4\n2 3 0 7\n0 0 2 1\n0 0 3 0\n\"\"\"\n) == \"37\\n\""
    },
    {
        "number": 3110,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n1 2 4\\n0 3 6\\n4 0 3\") == \"2\"\nassert solution(\"3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0\") == \"37\""
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input) == expected\n"
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('test_inputs/test1.txt', 'r')) == '10\\n14\\n18\\n'\nassert solution(open('test_inputs/test2.txt', 'r')) == '1\\n4\\n9\\n16\\n'"
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n1234\\n1 4\\n1 4\\n1 4\") == \"10\\n14\\n18\\n\"\nassert solution(\"4 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\") == \"1\\n4\\n9\\n16\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input1) == \"10\\n14\\n18\\n\"\nassert solution(input2) == \"1\\n4\\n9\\n16\\n\""
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, \"Expected output: {}, Actual output: {}\".format(expected_output, solution(input()))"
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n1234\\n1 4\\n1 4\\n1 4\") == \"10\\n14\\n18\\n\", \"Luka is paying attention in class again, while the teacher is explaining redox reactions.\""
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n1234\\n1 4\\n1 4\\n1 4\") == [\"10\", \"14\", \"18\"]"
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n1234\\n1 4\\n1 4\\n1 4\\n\") == \"10\\n14\\n18\\n\"\nassert solution(\"4 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\\n\") == \"1\\n4\\n9\\n16\\n\""
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Solution {solution(input())} should be {expected_output}\""
    },
    {
        "number": 3111,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n1234\\n1 4\\n1 4\\n1 4\") == \"10\\n14\\n18\""
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 'You can implement this function'\n"
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 2 3\\n1 3\\n2 3\\n3 4') == '2'\nassert solution('5 2 4\\n1 3\\n3 4\\n2 4\\n4 5') == '1'\n"
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2 3\\n1 3\\n2 3\\n3 4\\n\") == \"2\"\nassert solution(\"5 2 4\\n1 3\\n3 4\\n2 4\\n4 5\\n\") == \"1\""
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_str) == output_str, f\"Expected {output_str}, got {solution(input_str)}\"\n\nfrom typing import List"
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n4 2 3\\n1 3\\n2 3\\n3 4\\n2\\n4\\n5 2 4\\n1 3\\n3 4\\n2 4\\n4 5\\n\") == \"2\"\nassert solution(\"2\\n5 2 4\\n1 3\\n3 4\\n2 4\\n4 5\\n1\\n\") == \"1\""
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 2, \"Expected output 2, got {}\".format(solution())"
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"2\\n\""
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2\", \"Test failed\""
    },
    {
        "number": 3112,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 2, \"The expected output is not 2. Please check the solution.\""
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0\") == \"no\"\nassert solution(\"2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\") == \"no\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == \"no\", \"Garry and Jerry saw different cloud covers.\"\nassert solution(sample_input_2) == \"no\", \"Garry and Jerry saw different cloud covers.\"\n\nsample_input_1 = '''\n1\n10000 0 10000 10000 0 10000\n3\n10000 0 10000 10000 5000 5000\n5000 5000 10000 10000 0 10000\n0 0 0 1000 1000 0\n'''\n\nsample_input_2 = '''\n2\n9996 0 9997 0 0 1\n9999 0 10000 0 0 1\n2\n9997 0 9998 0 0 1\n9998 0 9999 0 0 1\n'''"
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n1\n10000 0 10000 10000 0 10000\n3\n10000 0 10000 10000 5000 5000\n5000 5000 10000 10000 0 10000\n0 0 0 1000 1000 0\n''') == 'yes'\n\nassert solution('''\n2\n9996 0 9997 0 0 1\n9999 0 10000 0 0 1\n2\n9997 0 9998 0 0 1\n9998 0 9999 0 0 1\n''') == 'no'"
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0\\n\") == \"no\"\n\nassert solution(\"2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\\n\") == \"no\""
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0\") == \"no\", \"Sample Input 1\"\nassert solution(\"2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\") == \"no\", \"Sample Input 2\"\n"
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0\\n\") == \"no\", \"Test case 1 failed.\"\nassert solution(\"2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\\n\") == \"no\", \"Test case 2 failed.\""
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0\") == \"no\\n\", \"Test case 1 failed\"\nassert solution(\"2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\") == \"no\\n\", \"Test case 2 failed\""
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"yes\""
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"no\" # sample input 1\n\nassert solution(stdin) == \"no\" # sample input 2"
    },
    {
        "number": 3113,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0') == 'no', 'Test case 1 failed'\n\nassert solution('2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1') == 'no', 'Test case 2 failed'"
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"YES\\n1 3\\n2 1\\n3 2\\n\"\n"
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == sample_output_1, \"Test case 1 failed\"\nassert solution(sample_input_2) == sample_output_2, \"Test case 2 failed\""
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected, f\"The given solution {solution(stdin)} is not correct. Expected output: {expected}, but got: {solution(stdin)}\""
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n1 2\\n2 3\\n1 3\") == \"YES\\n1 3\\n2 1\\n3 2\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\") == \"NO\"\n"
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Error: solution({input()})!= expected_output({expected_output})\""
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n1 2\\n2 3\\n1 3\\n\") == \"YES\\n1 3\\n2 1\\n3 2\\n\""
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution([3, 3, 1, 2, 2, 3, 1, 3, 1, 4]) == \"YES\\n1 3\\n2 1\\n3 2\"\nassert solution([4, 3, 1, 2, 1, 3, 1, 4]) == \"NO\""
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2"
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n1 2\\n2 3\\n1 3\\n\") == \"YES\\n1 3\\n2 1\\n3 2\\n\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\\n\") == \"NO\\ndef solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3114,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n1 2\\n2 3\\n1 3\\n\") == \"YES\\n1 3\\n2 1\\n3 2\\n\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\\n\") == \"NO\"\n"
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == 'consistent'"
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n0 > 1\\n1 = 2\\n0 = 2\") == \"inconsistent\"\nassert solution(\"5 5\\n0 = 1\\n1 = 2\\n3 = 4\\n0 > 3\\n1 > 4\") == \"consistent\""
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"consistent\""
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"inconsistent\", \"Test case 1 failed\"\nassert solution() == \"consistent\", \"Test case 2 failed\"\n\nsolution = input()\n\nreported_matches = []\nfor i in range(int(solution.split()[-1])):\n    match_info = list(map(int, input().split()))\n    if match_info[0] > match_info[1]:\n        reported_matches.append(match_info)"
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"consistent\""
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected_output, f\"Solution returned {solution(stdin)}, but expected {expected_output}\""
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"consistent\""
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"inconsistent\"\nassert solution(input()) == \"consistent\""
    },
    {
        "number": 3115,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input1) == '1.57079633', \"Your solution is incorrect.\"\nassert solution(input2) == '41938.65135885', \"Your solution is incorrect.\""
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 0 0\\n1 1 0\\n0 0 0\\n0 0 1\") == 1.57079633\nassert solution(\"4\\n-100 0 0\\n10 0 10\\n-10 -10 -10\\n0 0 0\") == 41938.65135885"
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 0 0\\n1 1 0\\n0 0 0\\n0 0 1\") == \"1.57079633\"\nassert solution(\"4\\n-100 0 0\\n10 0 10\\n-10 -10 -10\\n0 0 0\") == \"41938.65135885\""
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 0 0\\n1 1 0\\n0 0 0\\n0 0 1\\n\") == 1.57079633\nassert solution(\"4\\n-100 0 0\\n10 0 10\\n-10 -10 -10\\n0 0 0\\n\") == 41938.65135885\n"
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 1.57079633, \"Please provide the correct output for the given input.\""
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 0 0\\n1 1 0\\n0 0 0\\n0 0 1\") == 1.57079633\nassert solution(\"4\\n-100 0 0\\n10 0 10\\n-10 -10 -10\\n0 0 0\") == 41938.65135885"
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input1) == '1.57079633', \"Vera is an astronomer studying locality of nearby star systems. The star systems can be thought of as 3D points in space. Vera would like to place a can around the stars. In other words, she would like to know what is the smallest volume cylinder that encloses the stars. The cylinder can be oriented in any direction. At least one base of the cylinder must have at least three stars.\"\n\nassert solution(sample_input2) == '41938.65135885', \"Vera is an astronomer studying locality of nearby star systems. The star systems can be thought of as 3D points in space. Vera would like to place a can around the stars. In other words, she would like to know what is the smallest volume cylinder that encloses the stars. The cylinder can be oriented in any direction. At least one base of the cylinder must have at least three stars.\""
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == '1.57079633'\nassert solution(sample_input_2) == '41938.65135885'"
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 1.57079633, \"Expected result is 1.57079633, but got {} instead.\".format(solution())"
    },
    {
        "number": 3116,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('11\\nsabcabcfabc') == 3\nassert solution('18\\ntrutrutiktiktappop') == 4"
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"11\\nsabcabcfabc\") == 3\nassert solution(\"18\\ntrutrutiktiktappop\") == 4"
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2"
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=open(\"input.txt\")) == \"3\\n\"\nassert solution(stdin=open(\"input2.txt\")) == \"4\\n\""
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"11\\nsabcabcfabc\") == 3\nassert solution(\"18\\ntrutrutiktiktappop\") == 4"
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=open('input.txt', 'r').read()) == '3\\n4\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"11\\nsabcabcfabc\") == \"3\\n\", \"Ivana won the bet (Zvonko hadn\u2019t foreseen this and suspects that it is due to outside interference) and now Zvonko is waiting for her at the movies.\"\nassert solution(stdin=\"18\\ntrutrutiktiktappop\") == \"4\\ndef solution(stdin: str) -> str: pass\\n\", \"The length of the longest string that appears twice on a single line is 4.\""
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(solution) == \"3\"\nassert solution(solution) == \"4\""
    },
    {
        "number": 3117,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"11\\nsabcabcfabc\") == 3, \"Expected 3, got {}\".format(solution(\"11\\nsabcabcfabc\"))\nassert solution(\"18\\ntrutrutiktiktappop\") == 4, \"Expected 4, got {}\".format(solution(\"18\\ntrutrutiktiktappop\"))"
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_data) == expected_output, f\"Test failed: {solution(input_data)}!= {expected_output}\""
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n2 3 1\\n3 1 2') == '2\\n'\nassert solution('6\\n5 1 6 3 2 4\\n4 6 5 1 3 2') == '5\\n'"
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n2 3 1\\n3 1 2\") == 2\nassert solution(\"6\\n5 1 6 3 2 4\\n4 6 5 1 3 2\") == 5"
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n2 3 1\\n3 1 2') == '2'\nassert solution('6\\n5 1 6 3 2 4\\n4 6 5 1 3 2') == '5'\n"
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2\""
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '2'"
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input1) == \"2\"\nassert solution(sample_input2) == \"5\""
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n2 3 1\\n3 1 2\") == \"2\\n\"\nassert solution(\"6\\n5 1 6 3 2 4\\n4 6 5 1 3 2\") == \"5\\n\""
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n2 3 1\\n3 1 2\") == 2\nassert solution(\"6\\n5 1 6 3 2 4\\n4 6 5 1 3 2\") == 5"
    },
    {
        "number": 3118,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n2 3 1\\n3 1 2\") == 2\nassert solution(\"6\\n5 1 6 3 2 4\\n4 6 5 1 3 2\") == 5"
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1\\n0 10 20\\n0 10\") == \"4\"\nassert solution(\"6 1\\n0 10 20 26 40 50\\n0 40\") == \"9\""
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Testcase failed with input {input()}\""
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"4\", \"Incorrect output\""
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\npass\\n\""
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n3 1\n0 10 20\n0 10\n''') == '4'\n\nassert solution('''\n6 1\n0 10 20 26 40 50\n0 40\n''') == '9'"
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"Please enter a valid input\", \"The function should return 'Please enter a valid input'\"\n"
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"Output here\""
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 4\nassert solution() == 9\n"
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\""
    },
    {
        "number": 3119,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=input()) == \"Output goes here\"\n"
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\\nshuffle([1,2,1,2])\") == \"not equal\"\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\\n[1,2,3,4,5,6]\") == \"equal\""
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\\nshuffle([1,2,1,2])\\nSample Output 1: not equal\") == \"not equal\"\nassert solution(\"concat(sorted(concat([3,2,1],[4,5,6]))),concat(sorted(concat([3,2,1],[4,5,6]))))\\nconcat(concat([3,2,1],[4,5,6]))\\nconcat(concat([3,2,1],[4,5,6]))\\nconcat(concat([3,2,1],[4,5,6]))\\nconcat(concat([3,2,1],[4,5,6]))\\nconcat(concat([3,2,1],[4,5,6]))\\nconcat(concat([3,2,1],[4,5,6]))\\nconcat(concat([3,2,1],[4,5,6]))\\nconcat(concat([3,2,1],[4,5,6]))\\nconcat(concat([3,2,1],[4,5,6]))\\nconcat(concat([3,2,1],[4,5,6]))\\nconcat(concat([3,2,1],[4,5,6]))\\nconcat(concat([3,2,1],[4,5,6]))\\nconcat(concat([3,2,1],[4,5,6]))\\nconcat(concat([3,2,1],[4,5,6]))\\nconcat(concat([3,2,1],[4,5,6]))\\nconcat(concat([3,2,1],[4,5,6]))\\nconcat(concat([3,2,1],[4,5,6]))\\nconcat(concat([3,2,1],[4,5,6]))\\nconcat(concat([3,2,1],[4,5,6]))\\nconcat(concat([3,2,1],[4,5,6]))\\nconcat(concat([3,2,1],[4,5,6]))\\nconcat(concat([3,2,1],[4,5,6]))\\nconcat(concat([3,2,1],[4,5,6]))\\nconcat(concat([3,2,1],[4,5,6]))\\nconcat(concat([3,2,1],[4,5,6]))\\nconcat(concat([3,2,1],[4,5,6]))\\nconcat(concat([3,2,1],[4,5,6]))\\nconcat(concat([3,2,1],[4,5,6]))\\nconcat(concat([3,2,1],[4,5,6]))\\nconcat(concat([3,2,1],[4,5,6]))\\nconcat(concat([3,2,1],[4,5,6]))\\nconcat(concat([3,2,1],[4,5,6]))\\nconcat(concat([3,2,1],[4,5,6]))\\nconcat(concat([3,2,1],[4,5,6]))\\nconcat(concat([3,2,1],[4,5,6]))\\nconcat(concat([3,2,1],[4,5,6]))\\nconcat(concat([3,2,1],[4,5,6]))\\nconcat(concat([3,2,1],[4,5,6]))\\nconcat(concat([3,2,1],[4,5,6]))\\nconcat(concat([3,2,1],[4,5,6]))\\nconcat(concat([3,2,1],[4,5,6]))\\nconcat(concat([3,2,1],[4,5,6]))\\nconcat(concat([3,2,1],[4,5,6]))\\nconcat(concat([3,2,1],[4,5,6]))\\nconcat(concat([3,2,1],[4,5,6]))\\nconcat(concat([3,2,1],[4,5,6]))\\nconcat(concat([3,2,1],[4,5,6]))\\nconcat(concat([3,2,1],[4,5,6]))\\nconcat(concat([3,2,1],[4,5,6]))\\nconcat(concat([3,2,1],[4,5,6]))\\nconcat(concat([3,2,1],[4,5,6]))\\nconcat(concat([3,2,1],[4,5,6]))\\nconcat("
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"not equal\", \"The given Balloon programs are not equivalent.\"\nassert solution(input()) == \"equal\", \"The given Balloon programs are equivalent.\""
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\nconcat(shuffle([1,2]),shuffle([1,2]))\nshuffle([1,2,1,2])\n\"\"\") == \"equal\\n\"\n\nassert solution(\"\"\"\nsorted(concat([3,2,1],[4,5,6]))\n[1,2,3,4,5,6]\n\"\"\") == \"equal\\n\"\n\nassert solution(\"\"\"\nconcat(concat([1,2,3],[4,5,6]),concat([7,8,9],[10,11,12]))\nshuffle([1,2,3,4,5,6,7,8,9,10,11,12])\n\"\"\") == \"equal\\n\"\n\nassert solution(\"\"\"\nconcat(concat([1,2,3],[4,5,6]),concat([7,8,9],[10,11,12]))\nconcat(concat([13,14,15],[16,17,18]),concat([19,20,21],[22,23,24]))\nconcat(concat([25,26,27],[28,29,30]),concat([31,32,33],[34,35,36]))\nconcat(concat([37,38,39],[40,41,42]),concat([43,44,45],[46,47,48]))\nconcat(concat([49,50,51],[52,53,54]),concat([55,56,57],[58,59,60]))\nconcat(concat([61,62,63],[64,65,66]),concat([67,68,69],[70,71,72]))\nconcat(concat([73,74,75],[76,77,78]),concat([79,80,81],[82,83,84]))\nconcat(concat([85,86,87],[88,89,90]),concat([91,92,93],[94,95,96]))\nconcat(concat([97,98,99],[100,101,102]),concat([103,104,105],[106,107,108]))\nconcat(concat([109,110,111],[112,113,114]),concat([115,116,117],[118,119,120]))\nconcat(concat([121,122,123],[124,125,126]),concat([127,128,129],[130,131,132]))\nconcat(concat([133,134,135],[136,137,138]),concat([139,140,141],[142,143,144]))\nconcat(concat([145,146,147],[148,149,150]),concat([151,152,153],[154,155,156]))\nconcat(concat([157,158,159],[160,161,162]),concat([163,164,165],[166,167,168]))\nconcat(concat([169,170,171],[172,173,174]),concat([175,176,177],[178,179,180]))\nconcat(concat([181,182,183],[184,185,186]),concat([187,188,189],[190,191,192]))\nconcat(concat([193,194,195],[196,197,198]),concat([199,200,201],[202,203,204]))\nconcat(concat([205,206,207],[208,209,210]),concat([211,2"
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\\nshuffle([1,2,1,2])\") == \"not equal\"\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\\n[1,2,3,4,5,6]\") == \"equal\""
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\") == \"not equal\"\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\") == \"equal\""
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\") == \"not equal\"\nassert solution(\"concat(sorted([3,2,1],[4,5,6]))\") == \"equal\""
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\\nshuffle([1,2,1,2])\\n\") == \"not equal\\n\"\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\\n[1,2,3,4,5,6]\\n\") == \"equal\\n\"\n\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\\nshuffle([1,2,1,2])\") == \"equal\"\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\\n[1,2,3,4,5,6]\") == \"equal\""
    },
    {
        "number": 3120,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\") == \"not equal\\n\"\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\") == \"equal\\n\"\nassert solution(\"def solution(stdin: str) -> str:\\n    pass\\n\") == \"equal\\n\""
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2\\n3 2\\n1 2 1 2\\n2 3 1 2\") == \"Oh no\"\nassert solution(\"1 3\\n3 2\\n1 2 1 2\\n2 3 1 2\") == \"1\""
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 2\\n3 2\\n1 2 1 2\\n2 3 1 2') == 'Oh no'\nassert solution('1 3\\n3 2\\n1 2 1 2\\n2 3 1 2') == '1'"
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2\\n3 2\\n1 2 1 2\\n2 3 1 2\") == \"Oh no\\n1\"\nassert solution(\"1 3\\n3 2\\n1 2 1 2\\n2 3 1 2\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2\\n3 2\\n1 2 1 2\\n2 3 1 2\") == \"Oh no\"\nassert solution(\"1 3\\n3 2\\n1 2 1 2\\n2 3 1 2\") == \"1\"\n"
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r')) == 'Oh no\\n', 'Test case 1 failed'\nassert solution(open('input2.txt', 'r')) == '1\\n', 'Test case 2 failed'"
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2\\n3 2\\n1 2 1 2\\n2 3 1 2\") == \"Oh no\"\nassert solution(\"1 3\\n3 2\\n1 2 1 2\\n2 3 1 2\") == \"1\""
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2\\n3 2\\n1 2 1 2\\n2 3 1 2\") == \"Oh no\"\nassert solution(\"1 3\\n3 2\\n1 2 1 2\\n2 3 1 2\") == \"1\""
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 2\\n3 2\\n1 2 1 2\\n2 3 1 2') == 'Oh no'\nassert solution('1 3\\n3 2\\n1 2 1 2\\n2 3 1 2') == '1'\n\nfrom typing import List\n\nclass CaveSystem:\n    def __init__(self, ares: List[int], passages: List[List[int]]) -> None:\n        self.ares = ares\n        self.passages = passages\n\n    def can_reach(self, pos: int, target: int, attack: int, health: int) -> bool:\n        return (pos, target) in self.passages and self.passages[(pos, target)][1] <= pos\n\n    def can_reach_anywhere(self, pos: int, target: int, attack: int, health: int) -> bool:\n        return True\n\n    def get_health_after_reach(self, pos: int, target: int, attack: int, health: int) -> int:\n        return health\n\nclass Passage:\n    def __init__(self, e: int, b: int, a: int, h: int) -> None:\n        self.e = e\n        self.b = b\n        self.a = a\n        self.h = h"
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_str) == output_str, f\"Expected {output_str}, got {solution(input_str)}\" for input_str, output_str in [\n    (\"\\n\", \"Oh no\\n\"),\n    (\"\\n\", \"Oh no\\n\"),\n]"
    },
    {
        "number": 3121,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"Oh no\"\n\n```python\n"
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(solution_input_1) == solution_output_1\nassert solution(solution_input_2) == solution_output_2"
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == '3\\n'\nassert solution(open('input_example1.txt', 'r')) == '3\\n'\nassert solution(open('input_example2.txt', 'r')) == 'impossible\\n'"
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4\\n1 2 2\\n2 3 1\\n3 4 1\\n4 1 2\\n\") == \"3\"\nassert solution(\"5 5\\n1 2 1\\n2 3 1\\n2 4 1\\n2 5 1\\n4 5 1\\n\") == \"impossible\""
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10\") == \"impossible\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\") == \"3\\n\"\n"
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input1) == expected_output1, \"The solution is incorrect.\"\nassert solution(sample_input2) == expected_output2, \"The solution is incorrect.\""
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n1 2 2\\n2 3 1\\n3 4 1\\n4 1 2\") == 3\nassert solution(\"5 5\\n1 2 1\\n2 3 1\\n2 4 1\\n2 5 1\\n4 5 1\") == \"impossible\""
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1\\n4 4\\n1 2 2\\n2 3 1\\n3 4 1\\n4 1 2\\n') == '3\\n'\nassert solution('1\\n5 5\\n1 2 1\\n2 3 1\\n2 4 1\\n2 5 1\\n4 5 1\\n') == 'impossible\\n'"
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(solution_input_1) == solution_output_1, solution_input_1\nassert solution(solution_input_2) == solution_output_2, solution_input_2"
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"3\""
    },
    {
        "number": 3122,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r')) == '3'"
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n2 1 1 1 3\\n') == '2\\n'\nassert solution('1\\n22\\n') == '4\\n'"
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '4'"
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == output, f\"The solution is incorrect. Expected output: {output}, but got {solution(stdin)}.\""
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_string) == expected_output, f\"Incorrect output. Received '{solution(input_string)}', expected '{expected_output}'.\"\nassert solution(input_string_2) == expected_output_2, f\"Incorrect output. Received '{solution(input_string_2)}', expected '{expected_output_2}'.\""
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n2 1 1 1 3') == '2'\nassert solution('1\\n22') == '4'"
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n2 1 1 1 3\") == \"2\\n\"\nassert solution(\"1\\n22\") == \"4\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Error: {input()} should return {output()}\""
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed. Expected output: {expected_output}, Actual output: {solution(input())}\""
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, \"Test Failed\""
    },
    {
        "number": 3123,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2 1 1 1 3\\n\") == \"2\\n\"\nassert solution(\"1\\n22\\n\") == \"4\\n\""
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"3\\n\", \"Solution should return 3\"\nassert solution() == \"2\\n\", \"Solution should return 2\""
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3 1 5\\n\") == \"3\\n\"\nassert solution(\"4\\n1 2 3 4\\n\") == \"2\\n\""
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed for input {stdin}, expected output {expected_output}\""
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == \"3\\n\", \"The output should be '3'\\n\"\nassert solution(sample_input2) == \"2\\n\", \"The output should be '2'\\n\""
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"3\\n3 1 5\\n4\\n1 2 3 4\") == \"3\\n\", \"Expected output: 3\\n\"\nassert solution(stdin=\"4\\n1 2 3 4\") == \"2\\n\", \"Expected output: 2\\n\""
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n3 1 5') == '3\\n', 'Test 1 failed'\nassert solution('4\\n1 2 3 4') == '2\\n', 'Test 2 failed'"
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"3\\n\", \"Test 1 failed\"\nassert solution() == \"2\\n\", \"Test 2 failed\"\n\nfrom typing import List"
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"Test case {i+1} failed. Expected output: {expected}, got {solution(input())}\""
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n3 1 5\") == \"3\\n\", \"Output 1: 3\\n\"\nassert solution(\"4\\n1 2 3 4\") == \"2\\n\", \"Output 2: 2\\n\""
    },
    {
        "number": 3124,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1 5\") == 3, \"Expected output: 3\"\nassert solution(\"4 1 2 3 4\") == 2, \"Expected output: 2\""
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"<any>\"\nassert solution(\"a-b+d-c\") == \"- +d-\"\nassert solution(\"knuth-morris-pratt\") == \"def <empty>\"\n\nfrom typing import List"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('a+b-c\\na-b+d-c') == '- +d-'\nassert solution('knuth-morris-pratt\\knuthmorrispratt') == '<empty> <any>'"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"\"\"- +d-\n"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input('a+b-c\\na-b+d-c\\n')) == ['- +d-', '<any> <empty>']\nassert solution(input('knuth-morris-pratt\\nknuthmorrispratt\\n')) == ['<any> <empty>', '<any> <empty>']"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('a+b-c') == '- +d-'\nassert solution('a-b+d-c') == '- +d-'\nassert solution('knuth-morris-pratt') == '<any> <empty>'"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('a+b-c\\na-b+d-c') == '- +d-'\nassert solution('knuth-morris-pratt\\knuthmorrispratt') == '<any> <empty>'"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('a+b-c') == '- +d-'\nassert solution('knuth-morris-pratt') == '<any> <empty>'\n\nfrom typing import List"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('') == '<empty>'\nassert solution('a+b-c') == '- +d-'\nassert solution('knuth-morris-pratt') == '<any> <empty>'"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('a+b-c') == '- +d-', 'Incorrect output'\nassert solution('a-b+d-c') == '- +d-', 'Incorrect output'"
    },
    {
        "number": 3125,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_str=\"a+b-c\\na-b+d-c\") == output_str=\"- +d-\""
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 1\\n0\\n7\\nt 0\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6') == '0\\n1\\n3\\n2\\n3\\n5\\n3\\n'\nassert solution('3 0\\n2 6 6\\n10\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\nt 7\\nt 8\\nt 9\\nt 10') == '11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\\n'"
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1\\n0\\n7\\nt 0\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\") == \"0\\n1\\n3\\n2\\n3\\n5\\n3\\n\"\nassert solution(\"3 0\\n2 6 6\\n10\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\nt 7\\nt 8\\nt 9\\nt 10\") == \"11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\""
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 1\\n0\\n7\\nt 0\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\n') == '0\\n1\\n3\\n2\\n3\\n5\\n3\\n'\nassert solution('3 0\\n2 6 6\\n10\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\nt 7\\nt 8\\nt 9\\nt 10\\n') == '11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\\n'"
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1\\n0\\n7\\nt 0\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\n\") == \"0\\n1\\n3\\n2\\n3\\n5\\n3\\n\"\nassert solution(\"3 0\\n2 6 6\\n10\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\nt 7\\nt 8\\nt 9\\nt 10\\n\") == \"11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\\n\""
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1\\n0\\n7\\nt 0\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\") == \"0\\n1\\n3\\n2\\n3\\n5\\n3\\n\"\nassert solution(\"3 0\\n2 6 6\\n10\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\nt 7\\nt 8\\nt 9\\nt 10\") == \"11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\""
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\\n0\\n7\\nt 0\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\n\") == \"0\\n1\\n3\\n2\\n3\\n5\\n3\\n\"\nassert solution(\"3 0\\n2 6 6\\n10\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\nt 7\\nt 8\\nt 9\\nt 10\\n\") == \"11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\\n\""
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1\\n0\\n7\\nt 0\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\") == \"0\\n1\\n3\\n2\\n3\\n5\\n3\\n\"\nassert solution(\"3 0\\n2 6 6\\n10\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\nt 7\\nt 8\\nt 9\\nt 10\") == \"11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\\n\""
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"0\\n1\\n3\\n2\\n3\\n5\\n3\\n\"\nassert solution() == \"11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\\n\""
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3126,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\\n0\\n7\\nt 0\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\n\") == \"0\\n1\\n3\\n2\\n3\\n5\\n3\\n\""
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('7 8\\n1 2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1') == ['2', '4 6']"
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 8\\n1 2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1\") == \"2\\n4 6\"\n\nassert solution(\"5 6\\n1 2 2\\n2 3 2\\n3 5 2\\n1 4 3\\n4 5 3\\n1 5 6\") == \"0\""
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Test failed: Expected output '{expected_output}', got '{solution(input())}'\""
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 8\\n1 2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1\") == \"2\\n4 6\""
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"2\\n4 6\\n\""
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1\") == \"2\\n4 6\""
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"\"\"2\n4 6\n\"\"\""
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '''2\n4 6'''"
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt').read()) == \"Output 1\\n4 6\"\nassert solution(open('input2.txt').read()) == \"Output 2\\n0\""
    },
    {
        "number": 3127,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('7 8\\n1 2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1') == '2\\n4 6'"
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"12\\n1 1\\n1 2\\n1 3\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n2 6\\n\") == \"4\\n5\\n6\\n1\\n2\\n3\\n\""
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(None) == \"\""
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"12\\n1 1\\n1 2\\n1 3\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n2 6\\n\") == \"4\\n5\\n6\\n1\\n2\\n3\\n\""
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"12\\n1 1\\n1 2\\n1 3\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n2 6\") == \"4\\n5\\n6\\n1\\n2\\n3\""
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"12\\n1 1\\n1 2\\n1 3\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n2 6\\n\") == \"4\\n5\\n6\\n1\\n2\\n3\\n\"\nassert solution(\"6\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n\") == \"1\\n2\\n3\\n\""
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Solution does not match expected output: \\nExpected: {output()} \\nActual: {solution(input())}\""
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == \"4\\n5\\n6\\n1\\n2\\n3\\n\"\nassert solution(2) == \"1\\n2\\n3\\n\""
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"12\\n1 1\\n1 2\\n1 3\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n2 6\") == \"4\\n5\\n6\\n1\\n2\\n3\"\nassert solution(\"6\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\") == \"1\\n2\\n3\""
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, \"Expected {}, got {}\".format(output, solution(input()))"
    },
    {
        "number": 3128,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == solution()"
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"CPCC\") == \"1\"\nassert solution(\"PPPPCCCC\") == \"8\""
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"CPCC\") == \"1\"\nassert solution(\"PPPPCCCC\") == \"8\""
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"CPCC\") == \"1\", \"Test Case 1 failed\"\nassert solution(\"PPPPCCCC\") == \"8\", \"Test Case 2 failed\""
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"CPCC\") == \"1\"\nassert solution(\"PPPPCCCC\") == \"8\""
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"CPCC\") == 1\nassert solution(\"PPPPCCCC\") == 8\n"
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"CPCC\") == \"1\"\nassert solution(\"PPPPCCCC\") == \"8\""
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('CPCC') == 1, \"The output should be 1, but is: \" + solution('CPCC')\nassert solution('PPPPCCCC') == 8, \"The output should be 8, but is: \" + solution('PPPPCCCC')"
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"PPPPCCCC\") == \"8\", \"Invalid output.\""
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"CPCC\") == 1\nassert solution(\"PPPPCCCC\") == 8"
    },
    {
        "number": 3129,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"CPCC\") == 1\nassert solution(\"PPPPCCCC\") == 8"
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == [1, 2, 3], \"The solution should return [1, 2, 3]\""
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2 1\\n1 2\\n2 3\\n2\") == \"1 2 3\\n\""
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''3 2 1\n1 2\n2 3\n2''') == '''1 2 3'''\nassert solution('''3 2 1\n1 3\n2 3\n3''') == '''3'''\nassert solution('''3 2 1\n1 2\n2 3\n4''') == ''''''"
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('sherlock_holmes.in', 'r')) == ['1', '2', '3']\nassert solution(open('sherlock_holmes.in', 'r')) == ['3']"
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == [3], \"The expected output is: [3]\"\nassert solution(2) == [2, 3], \"The expected output is: [2, 3]\"\nassert solution(1) == [1, 2, 3], \"The expected output is: [1, 2, 3]\"\nassert solution(4) == [2], \"The expected output is: [2]\"\nassert solution(5) == [3], \"The expected output is: [3]\"\nassert solution(6) == [1], \"The expected output is: [1]\"\nassert solution(7) == [2], \"The expected output is: [2]\""
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('sherlock_holmes.in', 'r')) == ['3']\n"
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(Sample Input 1) == [1, 2, 3]\nassert solution(Sample Input 2) == [3]"
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, but got {solution(input())}\""
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input1) == expected_output1\nassert solution(sample_input2) == expected_output2\n\nsample_input1 = \"\"\"3 2 1\n1 2\n2 3\n2\"\"\"\n\nexpected_output1 = \"\"\"1 2 3\"\"\"\n\nsample_input2 = \"\"\"3 2 1\n1 3\n2 3\n3\"\"\"\n\nexpected_output2 = \"\"\"3\"\"\""
    },
    {
        "number": 3130,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 2 1\\n1 2\\n2 3\\n2\\n') == ['1', '2', '3']\nassert solution('3 2 1\\n1 3\\n2 3\\n3\\n') == ['3']\nassert solution('3 2 1\\n1 4\\n2 3\\n4\\n') == ['1', '2', '3']\nassert solution('3 2 1\\n1 2\\n2 3\\n2\\n') == ['1', '2', '3']\n"
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"5 3\\n2 4 2 3 4\\n\") == 39\n\nassert solution(\n    \"5 1\\n1 0 1 1 1\\n\") == 4"
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n2 4 2 3 4\\n\") == \"39\", \"Solution for sample input 1 should be 39\"\nassert solution(\"5 1\\n1 0 1 1 1\\n\") == \"4\", \"Solution for sample input 2 should be 4\""
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"test_case.txt\", \"r\")) == \"39\", \"Incorrect output\""
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n2 4 2 3 4\") == \"39\"\nassert solution(\"5 1\\n1 0 1 1 1\") == \"4\""
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n2 4 2 3 4\\n\") == \"39\", \"Test case 1 failed\"\nassert solution(\"5 1\\n1 0 1 1 1\\n\") == \"4\", \"Test case 2 failed\""
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n2 4 2 3 4\") == \"39\\n\"\nassert solution(\"5 1\\n1 0 1 1 1\") == \"4\\n\""
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n2 4 2 3 4\") == 39\nassert solution(\"5 1\\n1 0 1 1 1\") == 4"
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n2 4 2 3 4\") == 39\nassert solution(\"5 1\\n1 0 1 1 1\") == 4"
    },
    {
        "number": 3131,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"39\", \"The expected output is not correct.\"\nassert solution(input()) == \"4\", \"The expected output is not correct.\""
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n3 3\nxx.\nxxx\n...\n''') == '''\n1 1 2\n2 3 1\n'''\n\nassert solution('''\n4 6\nxx....\nxx.xxx\n...xxx\n...xxx\n''') == '''\n1 1 2\n2 4 3\n'''"
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\nxx.\\nxxx\\n...\\n4 6\\nxx....\\nxx.xxx\\n...xxx\\n...xxx\") == \"1 1 2\\n2 4 3\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 3\\nxx.\\nxxx\\n...\\n4 6\\nxx....\\nxx.xxx\\n...xxx\\n...\\n') == '\\n\\n\\n\\n'\nassert solution('4 6\\nxx....\\nxx.xxx\\n...xxx\\n...xxx\\n') == '\\n\\n\\n\\n'"
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(samples[0]) == '1 1 2'\nassert solution(samples[1]) == '2 4 3'"
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n'3 3\\nxx.\\nxxx\\n...') == '1 1 2\\n2 3 1\\n'\n\nassert solution(\n'4 6\\nxx....\\nxx.xxx\\n...xxx\\n...xxx') == '1 1 2\\n2 4 3\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == sample_output, f\"The output is incorrect. Please check the input and the problem statement.\""
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1 1 2\\n2 3 1\"\nassert solution() == \"1 1 2\\n2 4 3\""
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('test_input.txt', 'r').read()) == '''\n1 1 2\n2 3 1\n'''\n\nassert solution(open('test_input.txt', 'r').read()) == '''\n1 1 2\n2 4 3\n'''"
    },
    {
        "number": 3132,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"\"\"1 1 2\n2 3 1\n\"\"\"\n\nassert solution() == \"\"\"1 1 2\n2 4 3\n\"\"\""
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"3 1 2\n1 2 1\n0 2 0\n0 1 0\n\"\"\") == \"indistinguishable\"\n\nassert solution(\"\"\"2 0 1\n1 1 1\n0 0 0\n\"\"\") == \"0\""
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1 2\\n1 2 1\\n0 2 0\\n0 1 0\") == \"indistinguishable\""
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1 2\\n1 2 1\\n0 2 0\\n0 1 0\") == \"indistinguishable\"\nassert solution(\"2 0 1\\n1 1 1\\n0 0 0\") == \"0\""
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"indistinguishable\""
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n3 1 2\n1 2 1\n0 2 0\n0 1 0\n''') == 'indistinguishable'\n\nassert solution('''\n2 0 1\n1 1 1\n0 0 0\n''') == '0'"
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n3 1 2\n1 2 1\n0 2 0\n0 1 0\n''') == 'indistinguishable'"
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n3 1 2\n1 2 1\n0 2 0\n0 1 0\n''') == 'indistinguishable'\n\nassert solution('''\n2 0 1\n1 1 1\n0 0 0\n''') == '0'\n\nfrom typing import List"
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"indistinguishable\"\n"
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1 2\\n1 2 1\\n0 2 0\\n0 1 0\") == \"indistinguishable\"\nassert solution(\"2 0 1\\n1 1 1\\n0 0 0\") == \"0\""
    },
    {
        "number": 3133,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input1) == \"indistinguishable\"\nassert solution(input2) == \"0\""
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('0110\\n1001') == '1111\\n0111\\n1110\\n1111\\n'\nassert solution('0\\n1') == '-1\\n'"
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed: {input()}!= {expected_output}\""
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0110\\n1001\") == \"1111\\n0111\\n1110\\n1111\"\nassert solution(\"0\\n1\") == \"-1\""
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0110\") == \"1111\\n0111\\n1110\\n1111\"\nassert solution(\"0\") == \"-1\""
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('0110\\n1001') == '1111\\n0111\\n1110\\n1111'\nassert solution('0\\n1') == '-1'\n"
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('0110') == '1111\\n0111\\n1110\\n1111'\nassert solution('0') == '-1'"
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input1) == \"1111\\n0111\\n1110\\n1111\\n\"\nassert solution(input2) == \"-1\""
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0110\") == \"1111\\n0111\\n1110\\n1111\"\nassert solution(\"0\") == \"-1\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0110\\n1001\") == \"1111\\n0111\\n1110\\n1111\"\nassert solution(\"0\") == \"0\\n0\\n0\\n0\"\nassert solution(\"1\") == \"1\\n1\\n1\\n1\"\nassert solution(\"00\") == \"00\\n00\\n00\\n00\"\nassert solution(\"01\") == \"00\\n01\\n00\\n01\"\nassert solution(\"11\") == \"11\\n11\\n11\\n11\"\nassert solution(\"0000\") == \"-1\""
    },
    {
        "number": 3134,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0110\\n1001\") == \"1111\\n0111\\n1110\\n1111\"\nassert solution(\"0\") == \"-1\"\nassert solution(\"1111\") == \"1111\""
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test failed: {solution(input())}!= {expected_output}\""
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(10000) == \"+0000\"\nassert solution(1111) == \"+000-\"\n"
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10000\") == \"+0000\"\nassert solution(\"1111\") == \"+000-\""
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10000\") == \"+0000\"\nassert solution(\"1111\") == \"+000-\"\n"
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10000\") == \"+0000\", \"Invalid input 1\"\nassert solution(\"1111\") == \"+000-\", \"Invalid input 2\""
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(10000) == '+0000'\nassert solution(1111) == '+000-'"
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10000\") == \"+0000\"\nassert solution(\"1111\") == \"+000-\""
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10000\") == \"+0000\"\nassert solution(\"1111\") == \"+000-\""
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10000\") == \"+0000\"\nassert solution(\"1111\") == \"+000-\""
    },
    {
        "number": 3135,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(10000) == '+0000', \"Test 1 failed\"\nassert solution(1111) == '+000-', \"Test 2 failed\""
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 8 3 2\\n1 2\\n7 3 4\\n5 6\\n1 3 2\\n1 4 1\\n1 5 1\\n1 6 6\\n2 3 9\\n2 4 2\\n2 6 4\\n7 6 5\\n\") == \"9\""
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 8 3 2\\n1 2\\n7 3 4\\n5 6\\n1 3 2\\n1 4 1\\n1 5 1\\n1 6 6\\n2 3 9\\n2 4 2\\n2 6 4\\n7 6 5\") == \"9\", \"Test failed\""
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(), \"No solution found\"\nprint(solution())"
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n7 8 3 2\n1 2\n7 3 4\n5 6\n1 3 2\n1 4 1\n1 5 1\n1 6 6\n2 3 9\n2 4 2\n2 6 4\n7 6 5\n''') == '9\\n'\n\nassert solution('''\n2 1 1 1\n2 2\n1\n1\n1 2 1\n''') == '2\\n'"
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 8 3 2\\n1 2\\n7 3 4\\n5 6\\n1 3 2\\n1 4 1\\n1 5 1\\n1 6 6\\n2 3 9\\n2 4 2\\n2 6 4\\n7 6 5\\n\") == \"9\\n\"\nassert solution(\"2 1 1 1\\n2 2\\n1\\n1\\n1 2 1\\n\") == \"2\\n\""
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"example1.txt\", \"r\").read()) == \"9\"\nassert solution(open(\"example2.txt\", \"r\").read()) == \"2\""
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 8 3 2\\n1 2\\n7 3 4\\n5 6\\n1 3 2\\n1 4 1\\n1 5 1\\n1 6 6\\n2 3 9\\n2 4 2\\n2 6 4\\n7 6 5\\n\") == \"9\\n\""
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('7 8 3 2\\n1 2\\n7 3 4\\n5 6\\n1 3 2\\n1 4 1\\n1 5 1\\n1 6 6\\n2 3 9\\n2 4 2\\n2 6 4\\n7 6 5') == 9\nassert solution('2 1 1 1\\n2 2\\n1\\n1\\n1 2 1') == 2"
    },
    {
        "number": 3136,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('test_case.txt').read()) == '9'\n"
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 3 1\\n2 2\\n1 1 R\\n010\\n000\\n000') == 2\nassert solution('3 4 2\\n2 2\\n3 4 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301') == 7\nassert solution('3 3 1\\n2 2\\n1 1 U\\n1 1 U\\n1 1 U') == -1"
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == \"2\", \"Solution should return 2.\"\nassert solution(sample_input2) == \"7\", \"Solution should return 7.\""
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3, 3, 1) == 2\nassert solution(3, 4, 2) == 7"
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 2, \"Test case 1 failed\"\nassert solution() == 7, \"Test case 2 failed\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3 1\\n2 2\\n1 1 R\\n010\\n000\\n000\") == 2\nassert solution(\"3 4 2\\n2 2\\n3 4 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301\") == 7"
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3 3 1\n2 2\n1 1 R\n010\n000\n000\n\"\"\") == 2\n\nassert solution(\"\"\"\n3 4 2\n2 2\n3 4 R\n2327\n6009\n2112\n3 2 R\n1310\n2101\n1301\n\"\"\") == 7"
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n    3 3 1\n    2 2\n    1 1 R\n    010\n    000\n    000\n    ''') == '2\\n'\n\nassert solution('''\n    3 4 2\n    2 2\n    3 4 R\n    2327\n    6009\n    2112\n    3 2 R\n    1310\n    2101\n    1301\n    ''') == '7\\n'\n\nassert solution('''\n    2\n    1 1 1\n    ''') == '-1\\n'"
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3 1\\n2 2\\n1 1 R\\n010\\n000\\n000\") == \"2\"\nassert solution(\"3 4 2\\n2 2\\n3 4 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301\") == \"7\""
    },
    {
        "number": 3137,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3 1\\n2 2\\n1 1 R\\n010\\n000\\n000\") == 2\nassert solution(\"3 4 2\\n2 2\\n3 4 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301\") == 7\nprint(\"All test cases pass\")"
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r').read()) == '2'\nassert solution(open('input2.txt', 'r').read()) == '4'"
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"2\\n\"\nassert solution(open(\"sample_input_1.txt\", \"r\").read()) == \"2\\n\"\nassert solution(open(\"sample_input_2.txt\", \"r\").read()) == \"4\\n\""
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    5\n    2 2 1 2 3\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    8\n    1 2 4 1 1 2 5 1\n    \"\"\"\n) == \"4\"\n\nassert solution(\n    \"\"\"\n    5\n    1 1 1 1 1 1 1\n    \"\"\"\n) == \"5\"\n\nassert solution(\n    \"\"\"\n    10\n    2 3 5 7 11 13 17 19\n    \"\"\"\n) == \"17\"\n\nassert solution(\n    \"\"\"\n    1000\n    1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\n    \"\"\"\n) == \"1\""
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n2 2 1 2 3\\n\") == \"2\\n\"\nassert solution(\"8\\n1 2 4 1 1 2 5 1\\n\") == \"4\\n\""
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n2 2 1 2 3') == '2\\n'\nassert solution('8\\n1 2 4 1 1 2 5 1') == '4\\n'\n"
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input1) == 2\nassert solution(sample_input2) == 4"
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n2 2 1 2 3\") == \"2\"\nassert solution(\"8\\n1 2 4 1 1 2 5 1\") == \"4\""
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\""
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\n2 2 1 2 3') == 2\nassert solution('8\\n1 2 4 1 1 2 5 1') == 4"
    },
    {
        "number": 3138,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n2 2 1 2 3\\n') == '2\\n'\nassert solution('8\\n1 2 4 1 1 2 5 1\\n') == '4\\n'"
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('D 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3') == ['NE', 'NE', 'NE']\nassert solution('D 8 8\\nD 2 4\\nD 5 6\\nP 2\\nP 4') == ['3', '1', 'def solution(stdin: str) -> str:']"
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == expected_output1, f\"The output of the first example {sample_input1} is not as expected. Expected: {expected_output1}, but got: {solution(sample_input1)}\"\nassert solution(sample_input2) == expected_output2, f\"The output of the second example {sample_input2} is not as expected. Expected: {expected_output2}, but got: {solution(sample_input2)}\""
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == \"NE\\nNE\\nNE\"\nassert solution(sample_input2) == \"3\\n1\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"D 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3\") == \"NE\\nNE\\nNE\"\n\nassert solution(\"D 8 8\\nD 2 4\\nD 5 6\\nP 2\\nP 4\") == \"3\\n1\\ndef solution(stdin: str) -> str:\\n    pass\"\n\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"NE\\nNE\\nNE\" # correct\nassert solution() == \"3\\n1\\ndef solution(stdin: str) -> str: pass\" # correct"
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('6\\nD 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3') == 'NE\\nNE\\nNE'\n"
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\nD 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3\\n\") == \"NE\\NE\\NE\\n\"\nassert solution(\"6\\nD 8 8\\nD 2 4\\nD 5 6\\nP 2\\nD 6 2\\nP 4\\n\") == \"3\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(None) == \"\"\nassert solution(\"D 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3\") == \"NE\\nNE\\nNE\\n3\\n1\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"D 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3\\n\") == \"NE\\nNE\\nNE\"\nassert solution(\"D 8 8\\nD 2 4\\nD 5 6\\nP 2\\nD 6 2\\nP 4\\n\") == \"3\\n1\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3139,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == 'NE'"
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Expected: {output}\\nGot: {solution(input())}\""
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 2 1 10\\n0 0\\n1 4\\n3 2') == '2'\nassert solution('2 3 5 6\\n1 1\\n1 1 6\\n1 2 2') == '5'\n"
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2 1 10\\n0 0\\n1 4\\n3 2\") == \"2\\n\"\nassert solution(\"2 3 5 6\\n1 1\\n1 1 6\\n1 2 2\") == \"5\\n\""
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n2 2 1 10\n0 0\n1 4\n3 2\n''') == '2\\n'\n\nassert solution('''\n2 3 5 6\n1 1\n1 1 6\n1 2 2\n''') == '5\\n'"
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2 1 10\\n0 0\\n1 4\\n3 2\") == 2\nassert solution(\"2 3 5 6\\n1 1\\n1 1 6\\n1 2 2\") == 5\n"
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, \"Incorrect output.\\nGot: {}\\nExpected: {}\".format(solution(input()), expected_output)"
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2 1 10\\n0 0\\n1 4\\n3 2\") == \"2\"\nassert solution(\"2 3 5 6\\n1 1\\n1 1 6\\n1 2 2\") == \"5\""
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 2 1 10\\n0 0\\n1 4\\n3 2') == '2'\nassert solution('2 3 5 6\\n1 1\\n1 1 6\\n1 2 2') == '5'"
    },
    {
        "number": 3140,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 2, \"Sample Output 1: 2\"\n\nassert solution() == 5, \"Sample Output 2: 5\""
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1.0 0.0 1.4\\n-1.0 0.0 -1.4\\n0.0 1.0 -0.2\") == \"2.0000000000\"\nassert solution(\"5\\n1.4 1.0 0.0\\n-0.4 -1.0 0.0\\n-0.1 -0.25 -0.5\\n-1.2 0.0 0.9\\n0.2 0.5 0.5\") == \"2.0000000000\""
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == '2.0000000000', 'The output is not correct.'"
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1.0 0.0 1.4\\n-1.0 0.0 -1.4\\n0.0 1.0 -0.2\") == \"2.0000000000\"\nassert solution(\"5\\n1.4 1.0 0.0\\n-0.4 -1.0 0.0\\n-0.1 -0.25 -0.5\\n-1.2 0.0 0.9\\n0.2 0.5 0.5\") == \"2.0000000000\"\nassert solution(\"10\\n0.0 0.0 0.0\\n0.0 0.0 0.0\\n0.0 0.0 0.0\\n0.0 0.0 0.0\\n0.0 0.0 0.0\") == \"0.0000000000\""
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == output, f\"The output for the given input is '{output}', but the function should return '{output}'.\"\n"
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == '2.0000000000\\n'\nassert solution(2) == '2.0000000000\\n'\nassert solution(3) == '2.0000000000\\n'\nassert solution(4) == '2.0000000000\\n'\nassert solution(5) == '2.0000000000\\n'"
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n1.0 0.0 1.4\\n-1.0 0.0 -1.4\\n0.0 1.0 -0.2') == '2.0000000000'\nassert solution('5\\n1.4 1.0 0.0\\n-0.4 -1.0 0.0\\n-0.1 -0.25 -0.5\\n-1.2 0.0 0.9\\n0.2 0.5 0.5') == '2.0000000000'\n\nfrom typing import List"
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n1.0 0.0 1.4\\n-1.0 0.0 -1.4\\n0.0 1.0 -0.2') == '2.0000000000\\n'\nassert solution('5\\n1.4 1.0 0.0\\n-0.4 -1.0 0.0\\n-0.1 -0.25 -0.5\\n-1.2 0.0 0.9\\n0.2 0.5 0.5') == '2.0000000000\\n'"
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"2.0000000000\", \"Solution is incorrect\""
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"Test case {i+1} failed.\" for i, (stdin, expected) in enumerate([\n    (\"3\\n1.0 0.0 1.4\\n-1.0 0.0 -1.4\\n0.0 1.0 -0.2\", \"2.0000000000\"),\n    (\"5\\n1.4 1.0 0.0\\n-0.4 -1.0 0.0\\n-0.1 -0.25 -0.5\\n-1.2 0.0 0.9\\n0.2 0.5 0.5\", \"2.0000000000\"),\n])"
    },
    {
        "number": 3141,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1.0 0.0 1.4\\n-1.0 0.0 -1.4\\n0.0 1.0 -0.2\") == \"2.0000000000\"\nassert solution(\"5\\n1.4 1.0 0.0\\n-0.4 -1.0 0.0\\n-0.1 -0.25 -0.5\\n-1.2 0.0 0.9\\n0.2 0.5 0.5\") == \"2.0000000000\""
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 9 5\") == \"1\\n5\"\nassert solution(\"1 100 10\") == \"9\\n19\""
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 9 5\\n1 100 10\") == \"1\\n5\\n9\\n19\\n\""
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Test case {i + 1} failed: {solution(input())}!= {output}\\n\" for i, (input, output) in enumerate([(\"1 9 5\", \"1\\n5\\n\"), (\"1 100 10\", \"9\\n19\\n\")])\nprint(\"All tests passed!\")"
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 9 5\") == \"1\\n5\"\nassert solution(\"1 100 10\") == \"9\\n19\""
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"1\\n5\\n\"\nassert solution(open(\"input2.txt\", \"r\")) == \"9\\n19\\n\""
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\").read()) == \"1\\n5\\n\", \"Please solve the problem\"\n"
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 9 5\") == \"1\\n5\\n\"\nassert solution(\"1 100 10\") == \"9\\n19\\n\""
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 9 5') == '1', \"The output should be '1'\"\nassert solution('1 100 10') == '9', \"The output should be '9'\""
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 9 5\\n1 100 10\") == \"1\\n9\\n19\""
    },
    {
        "number": 3142,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 9 5\") == \"1\"\nassert solution(\"1 100 10\") == \"9\""
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin='1 1\\n1\\n1\\n') == '1\\n1\\n'"
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1\\n1\\n1\") == \"1\\n1\"\nassert solution(\"4 5\\n4 1 2 4 4\\n4 3 2 1\") == \"7\\n4 4 2 4 4 1 4\""
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"1\\n1\\n\"\nassert solution(stdin) == \"7\\n4 4 2 4 4 1 4\"\n"
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1\\n1\\n1\\n\") == \"1\\n1\\n\"\nassert solution(\"4 5\\n4 1 2 4 4\\n4 3 2 1\\n\") == \"7\\n4 4 2 4 4 1 4\\n\"\n"
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 1\\n1\\n1\\n') == '1\\n1\\n'\nassert solution('4 5\\n4 1 2 4 4\\n4 3 2 1\\n') == '7\\n4 4 2 4 4 1 4\\n'\n"
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\\n1\\n1\") == \"1\\n1\"\nassert solution(\"4 5\\n4 1 2 4 4\\n4 3 2 1\") == \"7\\n4 4 2 4 4 1 4\"\n\nfrom typing import List"
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input1) == output1, f\"Test Case 1 failed. Expected: {output1}, got: {solution(input1)}\"\nassert solution(input2) == output2, f\"Test Case 2 failed. Expected: {output2}, got: {solution(input2)}\""
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt').read()) == '7\\n4 4 2 4 4 1 4'\nassert solution(open('input2.txt').read()) == '4\\n4 4 2 4 4'"
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '''7\n4 4 2 4 4 1 4'''\nassert solution() == '''1\n1'''\n"
    },
    {
        "number": 3143,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '4'"
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\""
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 10 3 2\\n') == '4\\n'\nassert solution('10 10 5 0\\n') == '10\\n'"
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == expected\n"
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 10 3 2\") == \"4\\n\"\nassert solution(\"10 10 5 0\") == \"10\\n\"\n"
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 10 3 2\") == \"4\\n\"\nassert solution(\"10 10 5 0\") == \"10\\n\"\n"
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 10 3 2\\n10 10 5 0\") == \"4\\n\""
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 10 3 2') == '4\\n'\nassert solution('10 10 5 0') == '10\\n'"
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 10 3 2\\n10 10 5 0\") == \"4\\n\"\nassert solution(\"10 10 5 0\\n10 10 5 0\") == \"10\\n\"\nassert solution(\"2 10 3 2\\n10 10 5 0\") == \"4\\n\"\nassert solution(\"2 10 3 2\\n10 10 5 0\") == \"4\\n\"\nassert solution(\"2 10 3 2\\n10 10 5 0\") == \"4\\n\"\nassert solution(\"2 10 3 2\\n10 10 5 0\") == \"4\\n\"\nassert solution(\"2 10 3 2\\n10 10 5 0\") == \"4\\n\"\nassert solution(\"2 10 3 2\\n10 10 5 0\") == \"4\\n\"\nassert solution(\"2 10 3 2\\n10 10 5 0\") == \"4\\n\"\nassert solution(\"2 10 3 2\\n10 10 5 0\") == \"4\\n\"\nassert solution(\"2 10 3 2\\n10 10 5 0\") == \"4\\n\"\nassert solution(\"2 10 3 2\\n10 10 5 0\") == \"4\\n\"\nassert solution(\"2 10 3 2\\n10 10 5 0\") == \"4\\n\"\nassert solution(\"2 10 3 2\\n10 10 5 0\") == \"4\\n\"\nassert solution(\"2 10 3 2\\n10 10 5 0\") == \"4\\n\"\nassert solution(\"2 10 3 2\\n10 10 5 0\") == \"4\\n\"\nassert solution(\"2 10 3 2\\n10 10 5 0\") == \"4\\n\"\nassert solution(\"2 10 3 2\\n10 10 5 0\") == \"4\\n\"\nassert solution(\"2 10 3 2\\n10 10 5 0\") == \"4\\n\"\nassert solution(\"2 10 3 2\\n10 10 5 0\") == \"4\\n\"\nassert solution(\"2 10 3 2\\n10 10 5 0\") == \"4\\n\"\nassert solution(\"2 10 3 2\\n10 10 5 0\") == \"4\\n\"\nassert solution(\"2 10 3 2\\n10 10 5 0\") == \"4\\n\"\nassert solution(\"2 10 3 2\\n10 10 5 0\") == \"4\\n\"\nassert solution(\"2 10 3 2\\n10 10 5 0\") == \"4\\n\"\nassert solution(\"2 10 3 2\\n10 10 5 0\") == \"4\\n\"\nassert solution(\"2 10 3 2\\n10 10 5 0\") == \"4\\n\"\nassert solution(\"2 10 3 2\\n10 10 5 0\") == \"4\\n\"\nassert solution(\"2 10 3 2\\n10 10 5 0\") == \"4\\n\"\nassert solution(\"2 10 3 2\\n10 10 5 0\") == \"4\\n\"\nassert solution(\"2 10 3 2\\n10 10 5 0\") == \"4\\n\"\nassert solution(\"2 10 3 2\\n10 10 5 0\") == \"4\\n\"\nassert solution(\"2 10 3 2\\n10 10 5 0\") == \"4\\n\"\nassert solution(\"2 10 3 2\\n10 10 5 0\") == \"4\\n\"\nassert solution(\"2"
    },
    {
        "number": 3144,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == output, f\"Expected {output}, got {solution(stdin)}\""
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"111\", \"Your solution is incorrect. Please see the problem statement.\""
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1 20\\n0123456789\\n\") == \"10\"\nassert solution(\"6 100 9294\\n23689\\n\") == \"111\""
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed. Input: {stdin}, Output: {solution(stdin)}, Expected Output: {expected_output}\""
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1 20\\n0123456789\") == \"10\"\nassert solution(\"6 100 9294\\n23689\") == \"111\""
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1 20\\n0123456789\") == \"10\"\nassert solution(\"6 100 9294\\n23689\") == \"111\""
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1 20\\n0123456789\") == \"10\"\nassert solution(\"6 100 9294\\n23689\") == \"111\""
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1 20\\n0123456789\\n\") == 10\nassert solution(\"6 100 9294\\n23689\\n\") == 111\n\nfrom collections import Counter"
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1 20\\n0123456789\") == \"10\"\nassert solution(\"6 100 9294\\n23689\") == \"111\""
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1 20\\n0123456789\\n\") == \"10\"\nassert solution(\"6 100 9294\\n23689\\n\") == \"111\""
    },
    {
        "number": 3145,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    input(\"Enter the values of X, A and B: \").split()) == (\n        input(\"Enter the allowed digits: \").strip()\n    ), \"Input values are not valid.\""
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\\n\") == \"1.500000 2.666667\\n\"\nassert solution(\"5 2\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\\n\") == \"1.500000 3.666667\\n\""
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\\n\") == \"1.500000 2.666667\\n\"\nassert solution(\"5 2\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\\n\") == \"1.500000 3.666667\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Solution does not match expected output. Expected: {expected_output}, Actual: {solution(input())}\"\n"
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '''1.5 2.6'''"
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Test case {test_case_id+1} failed. Expected output: {expected_output}, Received output: {solution(input())}\"\n"
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output\n"
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == '1.500000 2.666667'"
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=f\"\"\"\n5 3\n1 R 4\n2 R 2\n3 R 2\n4 S 2\n5 S 1\n\"\"\") == \"1.500000 2.666667\\n\"\n\nassert solution(stdin=f\"\"\"\n5 2\n1 R 4\n2 R 2\n3 R 2\n4 S 2\n5 S 1\n\"\"\") == \"1.500000 3.666667\\n\""
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected_output, f\"The output is incorrect. Received: {solution(stdin)}, but expected: {expected_output}\""
    },
    {
        "number": 3146,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\") == \"1.500000 2.666667\", \"Testcase 1 Failed\"\nassert solution(\"5 2\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\") == \"1.500000 3.666667\", \"Testcase 2 Failed\""
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 6\\n101010\\n111001\\n101001\") == \"3\"\nassert solution(\"4 5\\n10010\\n01010\\n10101\\n01001\") == \"3\"\nassert solution(\"3 6\\n101010\\n111001\\n101001\\n2 2\\n101010\\n111001\\n101001\") == \"-1\""
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"The output is {solution(input())}, not {expected_output}\"\n"
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(r\"3 6\\n101010\\n111001\\n101001\") == \"3\"\nassert solution(r\"4 5\\n10010\\n01010\\n10101\\n01001\") == \"3\"\nassert solution(r\"5 5\\n11111\\n11111\\n11111\\n11111\") == \"1\""
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2"
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"3 6\n101010\n111001\n101001\n\"\"\") == \"3\"\nassert solution(\"\"\"4 5\n10010\n01010\n10101\n01001\n\"\"\") == \"3\""
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"Test failed for input {input()}, expected {expected}\""
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1\") == \"1\\n\"\nassert solution(\"1 2\") == \"1\\n\"\nassert solution(\"2 1\") == \"1\\n\"\nassert solution(\"2 2\") == \"1\\n\"\nassert solution(\"3 1\") == \"1\\n\"\nassert solution(\"4 1\") == \"1\\n\"\nassert solution(\"5 1\") == \"1\\n\"\nassert solution(\"6 1\") == \"1\\n\"\nassert solution(\"7 1\") == \"1\\n\"\nassert solution(\"8 1\") == \"1\\n\"\nassert solution(\"9 1\") == \"1\\n\"\nassert solution(\"10 1\") == \"1\\n\"\nassert solution(\"11 1\") == \"1\\n\"\nassert solution(\"12 1\") == \"1\\n\"\nassert solution(\"13 1\") == \"1\\n\"\nassert solution(\"14 1\") == \"1\\n\"\nassert solution(\"15 1\") == \"1\\n\"\nassert solution(\"16 1\") == \"1\\n\"\nassert solution(\"17 1\") == \"1\\n\"\nassert solution(\"18 1\") == \"1\\n\"\nassert solution(\"19 1\") == \"1\\n\"\nassert solution(\"20 1\") == \"1\\n\"\nassert solution(\"21 1\") == \"1\\n\"\nassert solution(\"22 1\") == \"1\\n\"\nassert solution(\"23 1\") == \"1\\n\"\nassert solution(\"24 1\") == \"1\\n\"\nassert solution(\"25 1\") == \"1\\n\"\nassert solution(\"26 1\") == \"1\\n\"\nassert solution(\"27 1\") == \"1\\n\"\nassert solution(\"28 1\") == \"1\\n\"\nassert solution(\"29 1\") == \"1\\n\"\nassert solution(\"30 1\") == \"1\\n\"\nassert solution(\"31 1\") == \"1\\n\"\nassert solution(\"32 1\") == \"1\\n\"\nassert solution(\"33 1\") == \"1\\n\"\nassert solution(\"34 1\") == \"1\\n\"\nassert solution(\"35 1\") == \"1\\n\"\nassert solution(\"36 1\") == \"1\\n\"\nassert solution(\"37 1\") == \"1\\n\"\nassert solution(\"38 1\") == \"1\\n\"\nassert solution(\"39 1\") == \"1\\n\"\nassert solution(\"40 1\") == \"1\\n\"\nassert solution(\"41 1\") == \"1\\n\"\nassert solution(\"42 1\") == \"1\\n\"\nassert solution(\"43 1\") == \"1\\n\"\nassert solution(\"44 1\") == \"1\\n\"\nassert solution(\"45 1\") == \"1\\n\"\nassert solution(\"46 1\") == \"1\\n\"\nassert solution(\"47 1\") == \"1\\n\"\nassert solution(\"48 1\") == \"1\\n\"\nassert solution(\"49 1\") == \"1\\n\"\nassert solution(\"50 1\") == \"1\\n\"\nassert solution(\"51 1\") == \"1\\n\"\nassert solution(\"52 1\") == \"1\\n\"\nassert solution(\"53 1\") == \"1\\n\"\nassert solution(\"54 1\") == \"1\\n\"\nassert solution(\"55 1\") == \"1\\n\"\nassert solution(\"56 1\") == \"1\\n\"\nassert solution(\"57 1\") == \"1\\n\"\nassert solution(\"58 1\") == \"1\\n\"\nassert solution(\"59 1\") == \"1\\n\"\nassert solution(\"60 1\") == \"1\\n\"\nassert solution(\"61 1\") == \"1\\n\"\nassert solution(\"62 1\") == \"1\\n\"\nassert solution(\"63 1\") == \"1\\n\"\nassert solution(\"64 1\") == \"1\\n\"\nassert solution(\"65 1\") == \"1\\n\"\nassert solution(\"66 1\") == \"1\\n\"\nassert solution(\"67 1\") == \"1\\n\"\nassert solution"
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(r'3 6\\n101010\\n111001\\n101001') == '3'\nassert solution(r'4 5\\n10010\\n01010\\n10101\\n01001') == '3'"
    },
    {
        "number": 3147,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3 6\n101010\n111001\n101001\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n4 5\n10010\n01010\n10101\n01001\n\"\"\") == \"3\""
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '3 -1'"
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n0 0\\n0 1\\n1 0\\n0 -1\\n-1 0\") == \"3 -1\\n3 1\""
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n0 0\\n0 1\\n1 0\\n0 -1\\n-1 0\") == \"-3 -1\\n3 1\"\nassert solution(\"4\\n2 4\\n6 -1\\n3 5\\n-1 -1\") == \"3 4\\n3 -1\""
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n0 0\\n0 1\\n1 0\\n0 -1\\n-1 0') == '-3 -1\\n3 1'\nassert solution('4\\n2 4\\n6 -1\\n3 5\\n-1 -1') == '3 4\\n3 -1'"
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n0 0\\n0 1\\n1 0\\n0 -1\\n-1 0\") == \"-3 -1\\n3 1\"\nassert solution(\"4\\n2 4\\n6 -1\\n3 5\\n-1 -1\") == \"3 4\\n3 -1\""
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n0 0\\n0 1\\n1 0\\n0 -1\\n-1 0\") == \"-3 -1\\n3 1\"\nassert solution(\"4\\n2 4\\n6 -1\\n3 5\\n-1 -1\") == \"3 4\\n3 -1\""
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 0\\n0 1\\n1 0\\n0 -1\\n-1 0\") == \"-3 -1\\n3 1\"\nassert solution(\"4\\n2 4\\n6 -1\\n3 5\\n-1 -1\") == \"3 4\\n3 -1\""
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"TODO\" # Add your solution here"
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"3 4\\n3 -1\", \"Expected output: 3 4\\n3 -1\""
    },
    {
        "number": 3148,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n0 0\\n0 1\\n1 0\\n0 -1\\n-1 0\") == \"-3 -1\\n3 1\"\nassert solution(\"4\\n2 4\\n6 -1\\n3 5\\n-1 -1\") == \"3 4\\n3 -1\""
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected_output, f\"Your solution is incorrect. Expected output: {expected_output}, but got: {solution(stdin)}\""
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 6 5 45 20\\n0 0\\n2 0\\n1 1.5\\n') == '2 5.086781\\n'\nassert solution('3 0.25 2 45 20\\n0 0\\n2 0\\n1 1.5\\n') == '1 12.715255\\n'"
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"Sample Output 1\\n2 5.086781\\n\""
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2 5.086781\""
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"Output two numbers 2 and 12.715255\\n\""
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 6 5 45 20 0 0 2 0 1 1.5\\n0 0 2 0 1 1.5\\n2 0 1 1.5\") == \"2 5.086781\""
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 6 5 45 20\\n0 0\\n2 0\\n1 1.5\\n') == '2 5.086781'\n\nassert solution('3 0.25 2 45 20\\n0 0\\n2 0\\n1 1.5\\n') == '1 12.715255'"
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    3 6 5 45 20\n    0 0\n    2 0\n    1 1.5\n    \"\"\"\n) == \"\"\"\n2 5.086781\n\"\"\"\n\nassert solution(\n    \"\"\"\n    3 0.25 2 45 20\n    0 0\n    2 0\n    1 1.5\n    \"\"\"\n) == \"\"\"\n1 12.715255\n\"\"\""
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2\n\ninput1 = \"\"\"\n3 6 5 45 20\n0 0\n2 0\n1 1.5\n\"\"\"\n\noutput1 = \"\"\"\n2 5.086781\n\"\"\"\n\ninput2 = \"\"\"\n3 0.25 2 45 20\n0 0\n2 0\n1 1.5\n\"\"\"\n\noutput2 = \"\"\"\n1 12.715255\n\"\"\""
    },
    {
        "number": 3149,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2 5.086781\""
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 8, \"Your solution is incorrect\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2"
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\\n\") == \"8\", \"Sample Output 1\"\n\nassert solution(\"4\\n5 1 7 1\\n1 1 5 1\\n4 0 4 4\\n7 0 3 4\\n\") == \"1\", \"Sample Output 2\"\n\nfrom typing import List"
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\\nSample Input 1\\n5\\n0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\\nSample Output 1\\n8\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n"
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 8, \"Wrong output: expected 8, got {}.\".format(solution())"
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=open(\"input.txt\", \"r\").read()) == \"8\\n\""
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\\n\") == \"8\"\nassert solution(\"4\\n5 1 7 1\\n1 1 5 1\\n4 0 4 4\\n7 0 3 4\\n\") == \"1\""
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input1) == '8'\nassert solution(sample_input2) == '1'"
    },
    {
        "number": 3150,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\") == \"8\"\nassert solution(\"4\\n5 1 7 1\\n1 1 5 1\\n4 0 4 4\\n7 0 3 4\") == \"1\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7\") == \"4 3\"\nassert solution(\"10\") == \"impossible\""
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"impossible\""
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7\") == \"4 3\\n\"\nassert solution(\"10\") == \"impossible\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(2) == \"4 3\"\nassert solution(4) == \"4 3\"\nassert solution(10) == \"impossible\""
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == \"impossible\"  # impossible"
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(7) == [\"4 3\"]\nassert solution(10) == [\"impossible\"]"
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(7) == \"4 3\"\nassert solution(10) == \"impossible\""
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 4\nassert solution(5) == 3\nassert solution(10) == 4\nassert solution(12) == 4\nassert solution(20) == 4\nassert solution(25) == 4"
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(7) == [4, 3], \"Example 1\"\nassert solution(10) == \"impossible\", \"Example 2\""
    },
    {
        "number": 3151,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7\") == 4, \"Output should be 4\"\nassert solution(\"10\") == \"impossible\", \"Output should be impossible\""
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input) == expected_output, f\"Test case failed: {solution(input)}, expected {expected_output}\""
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '109', \"Please fix the given code\""
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == 16\nassert solution(sample_input2) == 109"
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(solution(stdin)) == \"109\" # test case 1"
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1\\n3\\n\") == \"16\\n\"\nassert solution(\"4\\n2\\n4\\n1\\n4\\n\") == \"109\\n\"\nassert solution(\"5\\n1\\n2\\n3\\n4\\n5\\n\") == \"995\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('Input 1\\n2\\n1\\n3\\nInput 2\\n4\\n2\\n4\\n1\\n4\\nSample Input 3\\n5\\n3\\n1\\n4\\n2\\n5\\n3\\n1\\n4\\nSample Output 3\\n16\\nSample Input 4\\n6\\n4\\n1\\n4\\n2\\n5\\n3\\n1\\n4\\nSample Output 4\\n109\\n') == 16, \"Test failed\"\nassert solution('Input 2\\n4\\n2\\n4\\n1\\n4\\nSample Input 5\\n6\\n4\\n1\\n4\\n2\\n5\\n3\\n1\\n4\\nSample Output 5\\n109\\n') == 109, \"Test failed\"\n"
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"16\""
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"16\", \"Expected output: 16\""
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1\\n3\\n\") == \"16\"\nassert solution(\"4\\n2\\n4\\n1\\n4\\n\") == \"109\"\nassert solution(\"1\\n2\\n3\\n4\\n\") == \"000016\""
    },
    {
        "number": 3152,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Test failed. Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '''3\n1 2 1\n1 2 2\n1 2 2\n'''\n\nfrom typing import List"
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n5 1\\n1 2\\n1 2\\n1 2\") == \"3\\n1 2 1\\n1 2 2\\n1 2 2\"\nassert solution(\"4 3\\n5 3 1 1\\n1 3\\n2 3\\n4 1\") == \"5\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1\\n3 1 0\""
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n5 1\\n1 2\\n1 2\\n1 2\\n\") == \"3\\n1 2 1\\n1 2 2\\n1 2 2\\n\"\nassert solution(\"4 3\\n5 3 1 1\\n1 3\\n2 3\\n4 1\\n\") == \"5\\n1 3 1\\n2 3 2\\n4 1 0\\n2 4 1\\n3 1 0\\n\""
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\n5 1\\n1 2\\n1 2\\n1 2\") == \"3\\n1 2 1\\n1 2 2\\n1 2 2\""
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input1) == output1, \"Incorrect output for sample input 1\"\nassert solution(input2) == output2, \"Incorrect output for sample input 2\""
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Incorrect output: {solution(input())}!= {output}\"\n"
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"\"\"3\n1 2 1\n1 2 2\n1 2 2\n\"\"\""
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"\"\"3\n1 2 1\n1 2 2\n1 2 2\"\"\"\n\nimport math"
    },
    {
        "number": 3153,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n3 2\n5 1\n1 2\n1 2\n1 2\n''') == '''\n3\n1 2 1\n1 2 2\n1 2 2\n'''"
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(None) == \"impossible\""
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1 2\"\nassert solution() == \"impossible\""
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"impossible\""
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2"
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"impossible\" # input is wrong\nassert solution(open(\"test_input.txt\", \"r\")) == \"1 2\" # output is wrong\nprint(\"All test cases pass\")"
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n6 7\\n0 1 1\\n0 2 2\\n1 1 3\\n2 1 2\\n2 2 1\\n3 2 3\\n4 2 1\") == \"1 2\"\nassert solution(\"2 1\\n20 3\\n0 1 1\\n10 1 0\\n10 2 1\") == \"impossible\""
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    2 3\n    6 7\n    0 1 1\n    0 2 2\n    1 1 3\n    2 1 2\n    2 2 1\n    3 2 3\n    4 2 1\n    \"\"\"\n) == \"1 2\\n\"\n\nassert solution(\n    \"\"\"\n    2 1\n    20 3\n    0 1 1\n    10 1 0\n    10 2 1\n    \"\"\"\n) == \"impossible\\n\""
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n6 7\\n0 1 1\\n0 2 2\\n1 1 3\\n2 1 2\\n2 2 1\\n3 2 3\\n4 2 1\") == \"1 2\"\nassert solution(\"2 1\\n20 3\\n0 1 1\\n10 1 0\\n10 2 1\") == \"impossible\""
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n6 7\\n0 1 1\\n0 2 2\\n1 1 3\\n2 1 2\\n2 2 1\\n3 2 3\\n4 2 1\") == \"1 2\\n\"\nassert solution(\"2 1\\n20 3\\n0 1 1\\n10 1 0\\n10 2 1\") == \"impossible\""
    },
    {
        "number": 3154,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '1 2'\nassert solution() == 'impossible'\n"
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(10) == (5, 2)\nassert solution(2020) == (2020, 1)"
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(10) == (5, 2)\nassert solution(2020) == (2020, 1)"
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(10) == [5, 2]\nassert solution(2020) == [2020, 1]"
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(10) == (5, 2)\nassert solution(2020) == (2020, 1)"
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(10) == \"5 2\", \"Sample Input 1: 10\"\nassert solution(2020) == \"2020 1\", \"Sample Input 2: 2020\""
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(10) == [5, 2], \"Incorrect output for sample 1.\"\nassert solution(2020) == [2020, 1], \"Incorrect output for sample 2.\""
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10\") == \"5 2\"\nassert solution(\"2020\") == \"2020 1\""
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10\") == \"5 2\"\nassert solution(\"2020\") == \"2020 1\""
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('10') == '5 2'\nassert solution('2020') == '2020 1'"
    },
    {
        "number": 3155,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(10) == (5, 2)\nassert solution(2020) == (2020, 1)"
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\") == \"impossible\"\nassert solution(\"3\\n4\\n0 chocolate\\n1 icecream\\n2 cookies\\n2 chocolate\\n3\\nchocolate\\nicecream\\ncookies\") == \"unique\""
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\\n\") == \"impossible\"\nassert solution(\"3\\n4\\n0 chocolate\\n1 icecream\\n2 cookies\\n2 chocolate\\n3\\nchocolate\\nicecream\\ncookies\\n\") == \"unique\"\nassert solution(\"3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\\n3\\nchocolate\\nicecream\\n\") == \"ambiguous\"\n"
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"impossible\"\nassert solution() == \"unique\"\nassert solution() == \"ambiguous\"\n"
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n    3\n    3\n    0 chocolate\n    1 icecream\n    2 cookies\n''') == 'unique'\n\nassert solution('''\n    3\n    4\n    0 chocolate\n    1 icecream\n    2 cookies\n    2 chocolate\n''') == 'unique'\n\nassert solution('''\n    3\n    3\n    0 chocolate\n    1 icecream\n    2 cookies\n''') == 'impossible'"
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\") == \"impossible\"\nassert solution(\"3\\n4\\n0 chocolate\\n1 icecream\\n2 cookies\\n2 chocolate\\n3\\nchocolate\\nicecream\") == \"unique\""
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output, f\"Expected: {expected_output}, Actual: {solution(stdin)}\""
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\\n') == 'impossible'\nassert solution('3\\n4\\n0 chocolate\\n1 icecream\\n2 cookies\\n2 chocolate\\n3\\nchocolate\\nicecream\\ncookies\\n') == 'unique'\nassert solution('3\\n3\\n1 banana\\n2 cherry\\n3 peach\\n4 apple\\n5 pineapple\\n6 orange\\n7 grapefruit\\n8 blueberry\\n9 strawberry\\n10 avocado\\n11 peach\\n12 banana\\n13 cherry\\n14 peach\\n15 orange\\n16 grapefruit\\n17 blueberry\\n18 strawberry\\n19 avocado\\n20 peach\\n21 banana\\n22 cherry\\n23 peach\\n24 orange\\n25 grapefruit\\n26 blueberry\\n27 strawberry\\n28 avocado\\n29 peach\\n30 banana\\n31 cherry\\n32 peach\\n33 orange\\n34 grapefruit\\n35 blueberry\\n36 strawberry\\n37 avocado\\n38 peach\\n39 banana\\n40 cherry\\n41 peach\\n42 orange\\n43 grapefruit\\n44 blueberry\\n45 strawberry\\n46 avocado\\n47 peach\\n48 banana\\n49 cherry\\n50 peach\\n51 orange\\n52 grapefruit\\n53 blueberry\\n54 strawberry\\n55 avocado\\n56 peach\\n57 banana\\n58 cherry\\n59 peach\\n60 orange\\n61 grapefruit\\n62 blueberry\\n63 strawberry\\n64 avocado\\n65 peach\\n66 banana\\n67 cherry\\n68 peach\\n69 orange\\n70 grapefruit\\n71 blueberry\\n72 strawberry\\n73 avocado\\n74 peach\\n75 banana\\n76 cherry\\n77 peach\\n78 orange\\n79 grapefruit\\n80 blueberry\\n81 strawberry\\n82 avocado\\n83 peach\\n84 banana\\n85 cherry\\n86 peach\\n87 orange\\n88 grapefruit\\n89 blueberry\\n90 strawberry\\n91 avocado\\n92 peach\\n93 banana\\n94 cherry\\n95 peach\\n96 orange\\n97 grapefruit\\n98 blueberry\\n99 strawberry\\n100 avocado\\n101 peach\\n102 banana\\n103 cherry\\n104 peach\\n105 orange\\n106 grapefruit\\n107 blueberry\\n108 strawberry\\n109 avocado\\n110 peach\\n111 banana\\n112 cherry\\n113 peach\\n114 orange\\n115 grapefruit\\n116 blueberry\\n117 strawberry\\n118 avocado\\n119 peach\\n120 banana\\n121 cherry\\n122 peach\\n123 orange\\n124 grapefruit\\n125 blueberry\\n126 strawberry\\n127 avocado\\n128 peach\\n129 banana\\n130 cherry\\n131 peach\\n132 orange\\n133 grapefruit\\n134 blueberry\\n135 strawberry\\n136 avocado\\n137 peach\\n138 banana\\n139 cherry\\n140 peach\\n141 orange\\n142 grapefruit\\n143 blueberry\\n144 strawberry\\n145 avocado"
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\ncookies\\nicecream\\nSample Output 1:\\nimpossible\\n\") == \"impossible\"\nassert solution(\"3\\n4\\n0 chocolate\\n1 icecream\\n2 cookies\\n2 chocolate\\n3\\nchocolate\\nicecream\\ncookies\\nSample Output 2:\\nunique\\ndef solution(stdin: str) -> str:\\n    pass\\n\") == \"unique\""
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input1) == \"impossible\"\nassert solution(sample_input2) == \"unique\""
    },
    {
        "number": 3156,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"impossible\""
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Test failed. Input: {input()}, Output: {output}, Received: {solution(input())}\"\n"
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 0"
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 0 10\") == \"0\\n\"\nassert solution(\"1 2 10\") == \"1\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 0 10') == '0\\n'\nassert solution('1 2 10') == '1\\n'"
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 0 10\") == 0, \"Test 1 failed\"\nassert solution(\"1 2 10\") == 1, \"Test 2 failed\""
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 0 10') == '0\\n', \"The correct output for sample input 1 is not as expected.\"\nassert solution('1 2 10') == '1\\n', \"The correct output for sample input 2 is not as expected.\""
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 0 10\") == \"0\"\nassert solution(\"1 2 10\") == \"1\""
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 0 10\") == 0\nassert solution(\"1 2 10\") == 1"
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 0 10\") == 0\nassert solution(\"1 2 10\") == 1"
    },
    {
        "number": 3157,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, but got {solution(input())}\""
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r').read()) == '1 pan\\n'"
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n............................................................\n............................................................\n....XXXX....................................................\n....XXXX..................................XXXX..............\n....XXXX...................................XXX..............\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n\"\"\") == \"1 pan\\n\", \"Test 1 failed\"\n\nassert solution(\"\"\"\n............................................................\n............................................................\n...............................................XX...........\n.....................................XXX......XXXX..........\n....................................XXXX........X...........\n........XXX....XXX....................X.....................\n.........XXX...XX...........................................\n............................................................\n............XX..............................................\n...........XXX..............................................\n............................................................\n............................................XX..............\n...........................................XXXX.............\n.............................................XX.............\n............................................................\n\"\"\") == \"3 zoom out\\ndef solution(stdin: str) -> str:\n    pass\n\nassert solution(\"\"\"\n............................................................\n............................................................\n...............................................XX...........\n.....................................XXX......XXXX..........\n....................................XXXX........X...........\n........XXX....XXX....................X.....................\n.........XXX...XX...........................................\n............................................................\n............XX..............................................\n...........XXX..............................................\n............................................................\n............................................XX..............\n...........................................XXXX.............\n.............................................XX.............\n............................................................\n\"\"\") == \"1 pan\\n2 zoom in\\nrotate clockwise\\ndef solution(stdin: str) -> str:\n    pass\n\nassert solution(\"\"\"\n............................................................\n............................................................\n...............................................XX...........\n.....................................XXX......XXXX..........\n....................................XXXX........X...........\n........XXX....XXX....................X.....................\n.........XXX...XX...........................................\n............................................................\n............XX..............................................\n...........XXX..............................................\n............................................................\n............................................XX..............\n...........................................XXXX.............\n.............................................XX.............\n............................................................\n\"\"\") == \"2 rotate clockwise\\ndef solution(stdin: str) -> str:\n    pass\n\nassert solution(\"\"\"\n............................................................\n............................................................\n...............................................XX...........\n.....................................XXX......XXXX..........\n....................................XXXX........X...........\n........XXX....XXX....................X.....................\n.........XXX...XX...........................................\n............................................................\n............XX..............................................\n...........XXX..............................................\n............................................................\n............................................XX..............\n...........................................XXXX.............\n.............................................XX.............\n............................................................\n\"\"\") == \"1 pan\\n1 zoom in\\nrotate counter-clockwise\\ndef solution(stdin: str) -> str:\n    pass\n\nassert solution(\"\"\"\n............................................................\n............................................................\n...............................................XX...........\n.....................................XXX......XXXX..........\n....................................XXXX........X...........\n........XXX....XXX....................X.....................\n.........XXX...XX...........................................\n............................................................\n............XX..............................................\n...........XXX..............................................\n............................................................\n............................................XX..............\n...........................................XXXX.............\n.............................................XX.............\n............................................................\n\"\"\") == \"1 pan\\n2 zoom out\\nrotate counter-clockwise\\n"
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n..............XXXXXXXXX..\n"
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input1) == output1, f\"Expected output1 but got {solution(input1)}\"\nassert solution(input2) == output2, f\"Expected output2 but got {solution(input2)}\""
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('sample_input_1.txt', 'r')) == '1 pan'\nassert solution(open('sample_input_2.txt', 'r')) == '3 zoom out'"
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2"
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('....XXXX....................................................\\n....XXXX..................................XXXX..............\\n....XXXX...................................XXX..............\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n..............XX......................................................\\n.............XXXX.............................................\\n..............XXX.................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n........................"
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n............................................................\n............................................................\n....XXXX....................................................\n....XXXX..................................XXXX..............\n....XXXX...................................XXX..............\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................"
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"....XXXX....................................................\\n....XXXX..................................XXXX..............\\n....XXXX...................................XXX..............\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\n............................................................\\"
    },
    {
        "number": 3158,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('8 20\\napples are great!\\n++++++++++++++++++++\\n+ oranges are    +\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++\\n check out our\\n fresh apples!\\n') =='apples are great!\\n fresh apples!\\n'\nassert solution('7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n') == '+++++++\\n'\nassert solution('6 6\\nxxxxxxx\\n+ xxxx x\\n+ xxxxx x\\n+ xxxxx x\\n+ xxxxx x\\n') == 'xxxxxxx\\n'"
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received: {solution(input())}\""
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input1) == output1, \"Test 1 failed\"\nassert solution(input2) == output2, \"Test 2 failed\"\n\ninput1 = '''\n8 20\napples are great!  \n++++++++++++++++++++\n+ oranges are      +\n+ way better!      +\n+ #oranges>apples  +\n++++++++++++++++++++\n check out our      \n fresh apples!      \n'''\n\ninput2 = '''\n7 7\n+++++++\n+  =  +\n+ +++ +\n+ + + +\n+ +++ +\n+     +\n+++++++\n'''\n\noutput1 = '''\napples are great!  \n                    \n                    \n                    \n                    \n                    \n check out our      \n fresh apples!      \n\n'''\n\noutput2 = '''\n       \n       \n       \n       \n       \n       \n'''"
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 20\\napples are great!\\n++++++++++++++++++++\\n+ oranges are      +\\n+ way better!      +\\n+ #oranges>apples  +\\n++++++++++++++++++++\\n check out our\\nfresh apples!\\n\") == \" apples are great!\\nfresh apples!\\n\"\n\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n\"\n\nassert solution(\"8 30\\napples are great!\\n++++++++++++++++++++\\n+ oranges are      +\\n+ way better!      +\\n+ #oranges>apples  +\\n++++++++++++++++++++\\n check out our\\nfresh apples!\\n\") == \" apples are great!\\nfresh apples!\\n\"\n\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n\"\n\nassert solution(\"8 20\\napples are great!\\n++++++++++++++++++++\\n+ oranges are      +\\n+ way better!      +\\n+ #oranges>apples  +\\n++++++++++++++++++++\\n check out our\\nfresh apples!\\n\") == \" apples are great!\\nfresh apples!\\n\"\n\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n\"\n\nassert solution(\"8 20\\napples are great!\\n++++++++++++++++++++\\n+ oranges are      +\\n+ way better!      +\\n+ #oranges>apples  +\\n++++++++++++++++++++\\n check out our\\nfresh apples!\\n\") == \" apples are great!\\nfresh apples!\\n\"\n\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n\""
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\", \"Test 1: Should return empty string\"\nassert solution(\"8 20\\napples are great!\\n++++++++++++++++++++\\n+ oranges are\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++\\n check out our\\nfresh apples!\\n\") == \" apples are great!\\n fresh apples!\\n\", \"Test 2: Should return expected output\"\n\nfor _ in range(2):\n    stdin = input()\n    stdout = solution(stdin)\n    assert stdout == input(), f\"Test {len(stdout)-1}: Should return same output as input for input: {stdin}, output: {stdout}\""
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 20\\napples are great!\\n++++++++++++++++++++++++++++++++++++\\n+ oranges are\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++++++++++++++++++\\n check out our\\nfresh apples!\\n\") == \" apples are great!\\n\\n check out our\\nfresh apples!\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"+++++++\\n\\n+++++++\\n\"\nassert solution(\"8 20\\napples are great!\\n++++++++++++++++++++++++++++++++++++\\n+ oranges are\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++++++++++++++++++\\n check out our\\nfresh apples!\\n\") == \" apples are great!\\n\\n check out our\\nfresh apples!\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"+++++++\\n\\n+++++++\\n\"\nassert solution(\"8 20\\napples are great!\\n++++++++++++++++++++++++++++++++++++\\n+ oranges are\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++++++++++++++++++\\n check out our\\nfresh apples!\\n\") == \" apples are great!\\n\\n check out our\\nfresh apples!\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"+++++++\\n\\n+++++++\\n\"\nassert solution(\"8 20\\napples are great!\\n++++++++++++++++++++++++++++++++++++\\n+ oranges are\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++++++++++++++++++\\n check out our\\nfresh apples!\\n\") == \" apples are great!\\n\\n check out our\\nfresh apples!\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"+++++++\\n\\n+++++++\\n\"\nassert solution(\"8 20\\napples are great!\\n++++++++++++++++++++++++++++++++++++\\n+ oranges are\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++++++++++++++++++\\n check out our\\nfresh apples!\\n\") == \" apples are great!\\n\\n check out our\\nfresh apples!\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"+++++++\\n\\n+++++++\\n\"\nassert solution(\"8 20\\napples are great!\\n++++++++++++++++++++++++++++++++++++\\n+ oranges are\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++++++++++++++++++\\n check out our\\nfresh apples!\\n\") == \" apples are great!\\n\\n check out our\\nfresh apples!\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"+++++++\\n\\n+++++++\\n\"\nassert solution(\"8 20\\napples are great!\\n++++++++++++++++++++++++++++++++++++\\n+ oranges are\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++++++++++++++++++\\n check out our\\nfresh apples!\\n\") == \" apples are great!\\n\\n check out our\\nfresh apples!\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"+++++++\\n\\n+++++++\\n\"\nassert solution(\"8 20\\napples are great!\\n++++++++++++++++++++++++++++++++++++\\n+ oranges are\\n+ way better!\\n+ #oranges>apples\\n++++++++++++++++++++++++++++++++++++\\n check out our\\nfresh apples!\\n\") == \" apples are great!\\n\\n check out our"
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 20\\napples are great!\\n++++++++++++++++++++\\n+ oranges are      +\\n+ way better!      +\\n+ #oranges>apples  +\\n++++++++++++++++++++\\n check out our\\nfresh apples!\\n\") == \" apples are great!\\n fresh apples!\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \" =  +\\n +++++\\n\"\nassert solution(\"8 20\\napples are great!\\n++++++++++++++++++++\\n+ oranges are      +\\n+ way better!      +\\n+ #oranges>apples  +\\n++++++++++++++++++++\\n check out our\\nfresh apples!\\n\") == \" apples are great!\\n fresh apples!\\n\""
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"apples are great!\\n++++++++++++++++++++++++++++++++++++\\n+ oranges are        +\\n+ way better!        +\\n+ #oranges>apples        +\\n++++++++++++++++++++++++++++++++++++\\n check out our    fresh apples!\\n\") == \" apples are great!\\n++++++++++++++++++++++++++++++++++++\\n+ oranges are        +\\n+ way better!        +\\n+ #oranges>apples        +\\n++++++++++++++++++++++++++++++++++++\\n check out our    fresh apples!\\n\"\n\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"+++++++\\n+++++++\\n+++++++\\n+++++++\\n+++++++\\n\""
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 20\\napples are great!\\n++++++++++++++++++++\\n+ oranges are      +\\n+ way better!      +\\n+ #oranges>apples  +\\n++++++++++++++++++++\\n check out our    \\nfresh apples!\\n\") == \" apples are great!\\n check out our    \\nfresh apples!\\n\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\") == \"+++++++\\n\"\n"
    },
    {
        "number": 3159,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input_1.txt').read()) =='apples are great!  \n                    \n                    \n                    \n                    \n                    \n check out our      \n fresh apples!      \n\nassert solution(open('input_2.txt').read()) == '       \n       \n       \n       \n       \n       \n       \n'"
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('HH') == '2.0', \"The expected output is '2.0', but instead got '{}'\".format(solution('HH'))\nassert solution('H?') == '1.5', \"The expected output is '1.5', but instead got '{}'\".format(solution('H?'))"
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('HH') == '2.0', \"The solution is incorrect\"\nassert solution('H?') == '1.5', \"The solution is incorrect\"\nassert solution('') == '0.0', \"The solution is incorrect\""
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('HH') == '2.0', 'Invalid output'\nassert solution('H?') == '1.5', 'Invalid output'"
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"HH\") == 2.0\nassert solution(\"H?\") == 1.5"
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('HH') == '2.0', \"Incorrect output: expected '2.0', but got '{}'.\".format(solution('HH'))\nassert solution('H?') == '1.5', \"Incorrect output: expected '1.5', but got '{}'.\".format(solution('H?'))"
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('HH') == 2.0\nassert solution('H?') == 1.5"
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('HH') == '2.0'\nassert solution('H?') == '1.5'"
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"HH\") == \"2.0\", \"Test case 1 failed\"\nassert solution(\"H?\") == \"1.5\", \"Test case 2 failed\""
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('HH') == 2.0, \"Solution 1 failed: \" + str(solution('HH'))\nassert solution('H?') == 1.5, \"Solution 2 failed: \" + str(solution('H?'))"
    },
    {
        "number": 3160,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"HH\") == \"2.0\"\nassert solution(\"H?\") == \"1.5\""
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n0001\\n0001\\n0011\\n1110\") == \"1\\n0001\\n0001\\n0011\\n1111\\n\"\nassert solution(\"4\\n1111\\n1111\\n1111\\n1111\") == \"6\\n0011\\n0011\\n0111\\n1101\\n\""
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Output 1\"\n\ninput1 = \"\"\"4\n0001\n0001\n0011\n1110\"\"\"\n\noutput1 = \"\"\"1\n0001\n0001\n0011\n1111\"\"\"\n\nprint(output1)\n\ninput2 = \"\"\"4\n1111\n1111\n1111\n1111\"\"\"\n\noutput2 = \"\"\"6\n0011\n0011\n0111\n1101\"\"\"\n\nprint(output2)"
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n0001\\n0001\\n0011\\n1110\") == \"1\\n0001\\n0001\\n0011\\n1111\"\nassert solution(\"4\\n1111\\n1111\\n1111\\n1111\") == \"6\\n0011\\n0011\\n0111\\n1101\"\nassert solution(\"\") == \"\"\nassert solution(\"4\\n0001\\n0001\\n0011\\n1110\\n4\\n1111\\n1111\\n1111\\n1111\\n1111\") == \"1\\n0001\\n0001\\n0011\\n1111\""
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r')) == ['1', '0001', '0001', '0011', '1111', '0011', '0011', '0111', '1101']\n"
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n0001\\n0001\\n0011\\n1110\") == \"1\\n0001\\n0001\\n0011\\n1111\"\nassert solution(\"4\\n1111\\n1111\\n1111\\n1111\") == \"6\\n0011\\n0011\\n0111\\n1101\"\n"
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()\nfor input_, output_ in zip(inputs, outputs):\n    assert solution(input_) == output_\n"
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n0001\\n0001\\n0011\\n1110\\n\") == \"1\\n0001\\n0001\\n0011\\n1111\\n\""
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n0001\\n0001\\n0011\\n1110') == '1\\n0001\\n0001\\n0011\\n1111\\n'\nassert solution('4\\n1111\\n1111\\n1111\\n1111') == '6\\n0011\\n0011\\n0111\\n1101\\n'"
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n0001\\n0001\\n0011\\n1110') == '1\\n0001\\n0001\\n0011\\n1111'\nassert solution('4\\n1111\\n1111\\n1111\\n1111') == '6\\n0011\\n0011\\n0111\\n1101'"
    },
    {
        "number": 3161,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n0001\\n0001\\n0011\\n1110\") == \"1\\n0001\\n0001\\n0011\\n1111\"\nassert solution(\"4\\n1111\\n1111\\n1111\\n1111\") == \"6\\n0011\\n0011\\n0111\\n1101\"\n"
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\").read()) == 2"
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2\\n\", \"Test case 1 failed\"\nassert solution() == \"4\\n\", \"Test case 2 failed\""
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"h 1 4 1\\nv 2 4 2\\nh 10 2 2\\nv 11 2 3\") == \"2\"\nassert solution(\"h 1 10 1\\nh 5 10 2\\nv 1 10 1\\nv 5 10 3\") == \"4\"\n"
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\nh 1 4 1\\nv 2 4 2\\nh 10 2 2\\nv 11 2 3\") == \"2\\n\"\nassert solution(\"4\\nh 1 10 1\\nh 5 10 2\\nv 1 10 1\\nv 5 10 3\") == \"4\\n\""
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == expected, f\"The solution is incorrect. Expected {expected}, but got {solution}.\""
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"h 1 4 1\\nv 2 4 2\\nh 10 2 2\\nv 11 2 3\") == \"2\"\nassert solution(\"h 1 10 1\\nh 5 10 2\\nv 1 10 1\\nv 5 10 3\") == \"4\""
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2\"\nassert solution(stdin) == \"4\""
    },
    {
        "number": 3162,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    2 4\n    1 0 2 0\n    3 5 4 0\n    2 1 0 0\n    3 0 4 5\n    \"\"\"\n) == \"2\\n\"\n\nassert solution(\n    \"\"\"\n    3 3\n    1 2 3\n    4 5 6\n    7 8 0\n    4 2 3\n    6 5 1\n    0 7 8\n    \"\"\"\n) == \"4\\n\""
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_1) == expected_output_1\nassert solution(input_2) == expected_output_2"
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5\") == 2\nassert solution(\"3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8\") == 4"
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == sample_output"
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5') == '2\\n'\nassert solution('3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8') == '4\\n'"
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2\\n\""
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1\\n2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5\\n') == '2\\n'\nassert solution('2\\n3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8\\n') == '4\\n'"
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5\") == \"2\\n\"\nassert solution(\"3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8\") == \"4\\n\""
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5\") == \"2\"\nassert solution(\"3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8\") == \"4\""
    },
    {
        "number": 3163,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2\", \"Test failed\""
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n1 2 3 3 4 2\") == \"2\"\nassert solution(\"8\\n1 2 1 3 1 3 1 2\") == \"4\""
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n1 2 3 3 4 2\\n\") == \"2\\n\"\nassert solution(\"8\\n1 2 1 3 1 3 1 2\\n\") == \"4\\n\""
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2\\n\", \"Expected output: 2\\n\"\n"
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"The output is incorrect. Expected {output()}, but got {solution(input())}\""
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 4"
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Test failed for input {input()}, expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 2\n"
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n1 2 3 3 4 2\\n\") == 2\nassert solution(\"8\\n1 2 1 3 1 3 1 2\\n\") == 4"
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    6\n    1 2 3 3 4 2\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    8\n    1 2 1 3 1 3 1 2\n    \"\"\"\n) == \"4\""
    },
    {
        "number": 3164,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin: str) == 'Output the length of the longest sub-array so that each element in the sub-array appears exactly twice.\\n', 'Function implementation failed'\n"
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2 2\\n1 1 1\\n2 2 1\\n2 2 2 1\\n1 1 1 2\\n\") == \"4\\n0\\n\"\nassert solution(\"2 2 2\\n1 1 1\\n2 2 2\\n2 2 2 1\\n1 1 1 2\\n\") == \"4\\n2\\n\""
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2 2\\n1 1 1\\n2 2 1\\n2 2 2 1\\n1 1 1 2\") == \"4\\n0\\n\"\nassert solution(\"2 2 2\\n1 1 1\\n2 2 2\\n2 2 2 1\\n1 1 1 2\") == \"4\\n2\\n\""
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2 2\\n1 1 1\\n2 2 1\\n2 2 2 1\\n1 1 1 2\") == \"4\\n0\\n\"\nassert solution(\"2 2 2\\n1 1 1\\n2 2 2\\n2 2 2 1\\n1 1 1 2\") == \"4\\n2\\n\""
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"4\\n0\""
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 4"
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r').read()) == '4\\n2'\nassert solution(open('input2.txt', 'r').read()) == '4\\n2'"
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"4\\n0\\n\"\n"
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_1) == output_1, \"The solution provided is incorrect.\"\nassert solution(input_2) == output_2, \"The solution provided is incorrect.\""
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"4\\n0\\n\""
    },
    {
        "number": 3165,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 2 2\\n1 1 1\\n2 2 1\\n2 2 2 1\\n1 1 1 2\\n') == '4\\n0\\n'"
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2\\n\") == 1\nassert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n1 2\\n\") == \"impossible\"\n\nfrom typing import List"
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2') == 1\nassert solution('4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n1 2') == 'impossible'"
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2\\n\") == \"1\\n\"\nassert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n1 2\\n\") == \"impossible\\n\""
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2\\n') == '1\\n'\nassert solution('4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n1 2\\n') == 'impossible\\n'\n"
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2') == 1\nassert solution('4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n1 2') == 'impossible'"
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2\\n\") == \"1\\n\"\nassert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n1 2\\n\") == \"impossible\\n\""
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2\") == \"1\"\nassert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n1 2\") == \"impossible\""
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2\") == \"1\\n\"\nassert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n1 2\") == \"impossible\\n\""
    },
    {
        "number": 3166,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input1) == '1'\nassert solution(sample_input2) == 'impossible'"
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == '35\\n18\\n3\\n8\\n2\\n1'\n"
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}, Diff: {abs(output - solution(input()))}\"\n"
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == expected_output1, \"Incorrect output 1\"\nassert solution(sample_input2) == expected_output2, \"Incorrect output 2\""
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 4\\n1 1 2 1\\n3\\n0 9\\n2 6\\n7 7\\nSample Input 1\\n10 4\\n1 1 2 1\\n3\\n0 9\\n2 6\\n7 7\\nSample Output 1\\n35\\n18\\n3\\n\\nSample Input 2\\n11 3\\n3 7 10\\n3\\n0 10\\n2 6\\n7 7\\nSample Output 2\\n8\\n2\\n1\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\") == \"35\\n18\\n3\\n\\n8\\n2\\n1\\n\""
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 4\\n1 1 2 1\\n3\\n0 9\\n2 6\\n7 7\") == \"35\\n18\\n3\\n\\n8\\n2\\n1\""
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Actual output: {solution(input())}\""
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == 'output'\n"
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('10 4\\n1 1 2 1\\n3\\n0 9\\n2 6\\n7 7\\n') == '35\\n18\\n3\\n8\\n2\\n1\\n'"
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r')) == '35\\n18\\n3\\n8\\n2\\n1\\n'"
    },
    {
        "number": 3167,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '35'\nassert solution() == '18'\nassert solution() == '8'\n"
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1\\n2\\n3\\n4\\n\") == \"0\\n1\\n3\\n6\\n\"\nassert solution(\"5\\n3\\n2\\n4\\n1\\n5\\n\") == \"0\\n1\\n2\\n4\\n6\\n\""
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"test_input.txt\", \"r\").read()) == \"0\\n1\\n3\\n6\"\nassert solution(open(\"test_input2.txt\", \"r\").read()) == \"0\\n1\\n2\\n4\\n6\""
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1\\n2\\n3\\n4\\n\") == \"0\\n1\\n3\\n6\\n\"\nassert solution(\"5\\n3\\n2\\n4\\n1\\n5\\n\") == \"0\\n1\\n2\\n4\\n6\\n\""
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1\\n2\\n3\\n4\\n5\\n3\\n2\\n4\\n1\\n5\\n5\\n\") == \"0\\n1\\n2\\n4\\n6\"\nassert solution(\"5\\n3\\n2\\n4\\n1\\n5\\n\") == \"0\\n1\\n2\\n4\\n6\""
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt').read()) == solution_part2(open('input.txt').read())\nprint(solution(open('input.txt').read()))"
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n\") == \"0\\n1\\n3\\n6\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n\") == \"0\\n1\\n2\\n4\\n6\\n\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n\") == \"0\\n1\\n1\\n1\\n1\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n\") == \"0\\n1\\n3\\n6\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n\") == \"0\\n1\\n2\\n4\\n6\\n\""
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Output the values of the counter C after each number is inserted into the tree.\\n0\\n1\\n3\\n6\\n\"\n"
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n3\\n2\\n4\\n1\\n5\") == \"0\\n1\\n2\\n4\\n6\\n\", \"Test 1 failed\"\nassert solution(\"4\\n1\\n2\\n3\\n4\") == \"0\\n1\\n3\\n6\\n\", \"Test 2 failed\""
    },
    {
        "number": 3168,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"0\\n1\\n3\\n6\\n\""
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 3 2 2\\n1 1 3 2\\n2 4 7 3\\n3 3 5 3\") == \"2 4 1 3\"\nassert solution(\"0 0 1 1\\n1 2 0 3\\n2 2 3 3\\n4 0 3 1\") == \"4 3 1 2\""
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 3 2 2\\n1 1 3 2\\n2 4 7 3\\n3 3 5 3') == '2 4 1 3\\n4 3 1 2'\nassert solution('0 0 1 1\\n1 2 0 3\\n2 2 3 3\\n4 0 3 1') == '4 3 1 2'\nassert solution('1 0 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1') == '2 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1'\n\nfrom typing import List"
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''4\n1 3 2 2\n1 1 3 2\n2 4 7 3\n3 3 5 3''') == '''2 4 1 3'''\nassert solution('''4\n0 0 1 1\n1 2 0 3\n2 2 3 3\n4 0 3 1''') == '''4 3 1 2'''"
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"2 4 1 3\"\n"
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n4\n1 3 2 2\n1 1 3 2\n2 4 7 3\n3 3 5 3\n\"\"\"\n) == \"\"\"\n2 4 1 3\n\"\"\"\n\nassert solution(\n\"\"\"\n4\n0 0 1 1\n1 2 0 3\n2 2 3 3\n4 0 3 1\n\"\"\"\n) == \"\"\"\n4 3 1 2\n\"\"\"\n\nassert solution(\n\"\"\"\n4\n1 3 2 2\n1 1 3 2\n2 4 7 3\n3 3 5 3\n\"\"\"\n) == \"\"\"\n2 4 1 3\n\"\"\""
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n1 3 2 2\\n1 1 3 2\\n2 4 7 3\\n3 3 5 3') == '2 4 1 3'\nassert solution('4\\n0 0 1 1\\n1 2 0 3\\n2 2 3 3\\n4 0 3 1') == '4 3 1 2'"
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 3 2 2\\n1 1 3 2\\n2 4 7 3\\n3 3 5 3\") == \"2 4 1 3\\n4 3 1 2\"\nassert solution(\"4\\n0 0 1 1\\n1 2 0 3\\n2 2 3 3\\n4 0 3 1\") == \"4 3 1 2\""
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == \"2 4 1 3\", \"The expected output should be '2 4 1 3', but it is '{}'\".format(solution(sample_input_1))\nassert solution(sample_input_2) == \"4 3 1 2\", \"The expected output should be '4 3 1 2', but it is '{}'\".format(solution(sample_input_2))"
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3169,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n1 3 2 2\\n1 1 3 2\\n2 4 7 3\\n3 3 5 3') == '2 4 1 3\\n4 3 1 2'"
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Theta wins\", \"Test Failed\""
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\""
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5') == 'Theta wins'\nassert solution('89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49') == 'Theta wins'"
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\"\nassert solution(\"\") == \"Theta loses\"\nassert solution(\"6789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123"
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5') == 'Theta wins'\nassert solution('89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49') == 'Theta wins'"
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\""
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\"\n"
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\""
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\", \"Incorrect output. Expected 'Theta wins', got: \" + solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\")"
    },
    {
        "number": 3170,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\""
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(r'''\n1 2\n1 charlatan 1\n1 not charlatan 1\n''') == 'charlatan\\n'\n\nassert solution(r'''\n2 1\n1 and fabulist 1 fabulist 2\n''') == 'fabulist\\n'\n\nassert solution(r'''\n3 4\n1 truther 1 truther 2 truther 3\n2 charlatan 1 charlatan 2 charlatan 3\n3 not truther 1 not truther 2 not truther 3\n4 not charlatan 1 not charlatan 2 not charlatan 3\n''') == 'truther\\ndefining truther'\n\nassert solution(r'''\n4 5\n1 charlatan 1 charlatan 2 charlatan 3 charlatan 4 charlatan 5\n2 truther 1 truther 2 truther 3 truther 4 truther 5\n3 fabulist 1 fabulist 2 fabulist 3 fabulist 4 fabulist 5\n4 not charlatan 1 not charlatan 2 not charlatan 3 not charlatan 4 not charlatan 5\n5 not truther 1 not truther 2 not truther 3 not truther 4 not truther 5\n6 truther 1 truther 2 truther 3 truther 4 truther 5 truther 6 truther 7 truther 8 truther 9 truther 10 truther 11 truther 12 truther 13 truther 14 truther 15 truther 16 truther 17 truther 18 truther 19 truther 20 truther 21 truther 22 truther 23 truther 24 truther 25 truther 26 truther 27 truther 28 truther 29 truther 30 truther 31 truther 32 truther 33 truther 34 truther 35 truther 36 truther 37 truther 38 truther 39 truther 40 truther 41 truther 42 truther 43 truther 44 truther 45 truther 46 truther 47 truther 48 truther 49 truther 50 truther 51 truther 52 truther 53 truther 54 truther 55 truther 56 truther 57 truther 58 truther 59 truther 60 truther 61 truther 62 truther 63 truther 64 truther 65 truther 66 truther 67 truther 68 truther 69 truther 70 truther 71 truther 72 truther 73 truther 74 truther 75 truther 76 truther 77 truther 78 truther 79 truther 80 truther 81 truther 82 truther 83 truther 84 truther 85 truther 86 truther 87 truther 88 truther 89 truther 90 truther 91 truther 92 truther 93 truther 94 truther 95 truther 96 truther 97 truther 98 truther 99 truther 100 truther 101 truther 102 truther 103 truther 104 truther 105 truther 106 truther 107 truther 108 truther 109 truther 110 truther 111 truther 112 truther 113 truther 114 truther 115 truther 116 truther 117 truther 118 truther 119 truther 120 truther 121 truther 122 truther 123 truther 124 truther 125 truther 126 truther 127 truther 128 truther 129 truther 130 truther 131 truther 132 truther 133 truther 134 truther 135 truther 136 truther 137 truther"
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input1) == output1, \"Incorrect solution for problem 1.\"\nassert solution(input2) == output2, \"Incorrect solution for problem 2.\""
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Your solution is incorrect. Expected output: {output}, but got: {solution(input())}\""
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2\\n1 charlatan 1\\n1 not charlatan 1\\n\") == \"charlatan\\n\"\nassert solution(\"2 1\\n1 and fabulist 1 fabulist 2\\n\") == \"fabulist\\ntruther\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r').read()) == 'charlatan\\n'\nprint('All tests passed')"
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Test failed: solution({input()})!= expected\"\n"
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2"
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2\\n1 charlatan 1\\n1 not charlatan 1\") == \"charlatan\\n\"\nassert solution(\"2 1\\n1 and fabulist 1 fabulist 2\") == \"fabulist\\ntruther\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"charlatan\\n\"\n"
    },
    {
        "number": 3171,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2\\n1 charlatan 1\\n1 not charlatan 1\") == [\"charlatan\"]\nassert solution(\"2 1\\n1 and fabulist 1 fabulist 2\") == [\"fabulist\", \"truther\"]\n"
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=open('test_input.txt', 'r')) == '4'\nassert solution(stdin=open('test_input2.txt', 'r')) == '3'\n"
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Incorrect output for input {input()}, expected {output}.\""
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2\n\nsample_input_1 = \"\"\"5\n1.00 5.00\n3.00 3.00\n4.00 2.00\n6.00 4.50\n7.00 1.00\n\"\"\"\nsample_input_2 = \"\"\"3\n-1.50 -1.00\n1.50 -1.00\n0.00 1.00\n\"\"\"\n\nexpected_output_1 = \"\"\"4\"\"\"\nexpected_output_2 = \"\"\"3\"\"\""
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=open(\"input.txt\", \"r\")) == \"4\\n\"\n"
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"4\\n\", \"Test 1: Expected output: 4\\nGot: \" + solution(stdin)\n\nassert solution(stdin) == \"3\\n\", \"Test 2: Expected output: 3\\nGot: \" + solution(stdin)"
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''5\n1.00 5.00\n3.00 3.00\n4.00 2.00\n6.00 4.50\n7.00 1.00''') == '4'\n\nassert solution('''3\n-1.50 -1.00\n1.50 -1.00\n0.00 1.00''') == '3'"
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected, f\"Expected '{expected}', got '{solution(stdin)}'.\""
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"4\", \"Your solution is not correct\""
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3172,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n1.00 5.00\\n3.00 3.00\\n4.00 2.00\\n6.00 4.50\\n7.00 1.00') == '4\\n'\nassert solution('3\\n-1.50 -1.00\\n1.50 -1.00\\n0.00 1.00') == '3\\n'"
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 5 2\\nR..?\\n.X...\\n100 100 7 100 8\\n') == '16'\nassert solution('2 3 1\\nX..\\n.?.\\n10 1000 1\\n') == '10'"
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 5 2\\nR..?.\\n.X...\\n100 100 7 100 8\") == \"16\"\nassert solution(\"2 3 1\\nX..\\n.?.\\n10 1000 1\") == \"10\""
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"16\", \"Your solution is incorrect!\""
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 5 2\\nR..?\\n.X...\\n100 100 7 100 8\") == \"16\\n\"\nassert solution(\"2 3 1\\nX..\\n.?.\\n10 1000 1\") == \"10\\n\""
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 5 2\\nR..?.\\n.X...\\n100 100 7 100 8\") == \"16\"\nassert solution(\"2 3 1\\nX..\\n.?.\\n10 1000 1\") == \"10\""
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r')) == 16, \"The solution is incorrect\""
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 5 2\\nR..?\\n.X...\\n100 100 7 100 8\") == \"16\"\nassert solution(\"2 3 1\\nX..\\n.?.\\n10 1000 1\") == \"10\""
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 5 2\\nR..?.\\n.X...\\n100 100 7 100 8\\nSample Output 1: 16\\n\\nSample Input 2: 2 3 1\\nX..\\n.?.\\n10 1000 1\\nSample Output 2: 10') == '16'\n\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 5 2\\nR..?.\\n.X...\\n100 100 7 100 8\") == \"16\"\nassert solution(\"2 3 1\\nX..\\n.?.\\n10 1000 1\") == \"10\""
    },
    {
        "number": 3173,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 5 2\\nR..?.\\n.X...\\n100 100 7 100 8\\n2 3 1\\nX..\\n.?.\\n10 1000 1\\n') == '16'\n"
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '1.414', 'Your solution is incorrect'"
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n0 4 4\\n1 5 1\\n2 6 1\\n\") == \"1.414\\n\"\nassert solution(\"6 11\\n0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10\\n\") == \"5.657\\n\""
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1.414\""
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1.414\"\nassert solution(stdin) == \"5.657\""
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n0 4 4\\n1 5 1\\n2 6 1\\n\") == \"1.4140\"\nassert solution(\"6 11\\n0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10\\n\") == \"5.6567\""
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n0 4 4\\n1 5 1\\n2 6 1\\n\") == \"1.414\"\nassert solution(\"6 11\\n0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10\\n\") == \"5.657\""
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n0 4 4\\n1 5 1\\n2 6 1\") == \"1.414\\n\"\nassert solution(\"6 11\\n0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10\") == \"5.657\\n\""
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input1) == '1.414'\nassert solution(sample_input2) == '5.657'"
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n0 4 4\\n1 5 1\\n2 6 1\") == \"1.414\"\nassert solution(\"6 11\\n0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10\") == \"5.657\""
    },
    {
        "number": 3174,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n0 4 4\\n1 5 1\\n2 6 1\") == \"1.414\\n\"\nassert solution(\"6 11\\n0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10\") == \"5.657\\n\"\n"
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1.0\""
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == output, f\"Expected: {output}, Received: {solution(stdin)}\""
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 1 1 1 1') == '1.0'\nassert solution('3 1 1 1') == '0.433'"
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"1.0\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '0.433'\n"
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\") == 0"
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 1 1 1 1\") == \"1.0\\n\"\nassert solution(\"3 1 1 1\") == \"0.433\\n\""
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 1 1 1 1\") == 1.0, \"Expected output: 1.0\"\nassert solution(\"3 1 1 1\") == 0.433, \"Expected output: 0.433\""
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 1 1 1 1\") == \"1.0\"\nassert solution(\"3 1 1 1\") == \"0.433\""
    },
    {
        "number": 3175,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 1 1 1 1\") == \"1.0\", \"Test Case 1\"\nassert solution(\"3 1 1 1\") == \"0.433\", \"Test Case 2\""
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 5\\n1 1 5\\n2 1 5\\n1 2 4\\n2 3 5\\n3 2 30\\n3 3 5\") == \"5\\n4\\n1 1\\n2 1\\n2 3\\n3 3\\n\"\nassert solution(\"8 10\\n1 1 15\\n2 2 30\\n1 2 8\\n2 1 7\\n3 2 8\\n2 3 7\\n4 2 100\\n3 3 15\") == \"36\\n5\\n1 1\\n1 2\\n2 2\\n3 2\\n3 3\\n\""
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected, f\"Test failed: got {solution(stdin)}, expected {expected}\""
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2"
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n    6 5\n    1 1 5\n    2 1 5\n    1 2 4\n    2 3 5\n    3 2 30\n    3 3 5\n''') == '5\\n4\\n1 1\\n2 1\\n2 3\\n3 3'\n\nassert solution('''\n    8 10\n    1 1 15\n    2 2 30\n    1 2 8\n    2 1 7\n    3 2 8\n    2 3 7\n    4 2 100\n    3 3 15\n''') == '36\\n5\\n1 1\\n1 2\\n2 2\\n3 2\\n3 3'"
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input) == output, f\"Test failed for input: {input}, expected output: {output}\""
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed for input {stdin}.\""
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"100 100\\n1 1 5\\n2 1 5\\n1 2 4\\n2 3 5\\n3 2 30\\n3 3 5\") == \"5\\n4\\n1 1\\n2 1\\n2 3\\n3 3\\n\"\nassert solution(\"8 10\\n1 1 15\\n2 2 30\\n1 2 8\\n2 1 7\\n3 2 8\\n2 3 7\\n4 2 100\\n3 3 15\") == \"36\\n5\\n1 1\\n1 2\\n2 2\\n3 2\\n3 3\\n\""
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"\"\"5\n4\n1 1\n2 1\n2 3\n3 3\"\"\""
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 5\\n1 1 5\\n2 1 5\\n1 2 4\\n2 3 5\\n3 2 30\\n3 3 5\") == \"5\\n4\\n1 1\\n2 1\\n2 3\\n3 3\\n\"\nassert solution(\"8 10\\n1 1 15\\n2 2 30\\n1 2 8\\n2 1 7\\n3 2 8\\n2 3 7\\n4 2 100\\n3 3 15\") == \"36\\n5\\n1 1\\n1 2\\n2 2\\n3 2\\n3 3\\n\""
    },
    {
        "number": 3176,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 5\\n1 1 5\\n2 1 5\\n1 2 4\\n2 3 5\\n3 2 30\\n3 3 5\\n\") == \"5\\n4\\n1 1\\n2 1\\n2 3\\n3 3\\n\", \"The given solution is incorrect.\"\nassert solution(\"8 10\\n1 1 15\\n2 2 30\\n1 2 8\\n2 1 7\\n3 2 8\\n2 3 7\\n4 2 100\\n3 3 15\\n\") == \"36\\n5\\n1 1\\n1 2\\n2 2\\n3 2\\n3 3\\n\", \"The given solution is incorrect.\""
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1\\n2 1\\n1 2\\n\") == \"1\\n\", \"Input 1 failed\"\nassert solution(\"3 2\\n2 1 3\\n1 3\\n2 3\\n\") == \"3\\n\", \"Input 2 failed\""
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1\\n2 1\\n1 2\\n\") == \"1\\n\", \"Arrange\""
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1\\n2 1\\n1 2\\n\") == \"1\\n\"\nassert solution(\"3 2\\n2 1 3\\n1 3\\n2 3\\n\") == \"3\\n\""
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Arrange\\n2 1\\n2 1\\n1 2\\nSample Input 1:\\n2 1\\n2 1\\n1 2\\nSample Output 1:\\n1\\n\") == \"1\\n\"\nassert solution(\"Arrange\\n3 2\\n2 1 3\\n1 3\\n2 3\\nSample Input 2:\\n3 2\\n2 1 3\\n1 3\\n2 3\\nSample Output 2:\\n3\\n\") == \"3\\n\"\n"
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1\\n2 1\\n1 2\\n\") == \"1\\n\"\nassert solution(\"3 2\\n2 1 3\\n1 3\\n2 3\\n\") == \"3\\n\"\nassert solution(\"2 2\\n1 1\\n2 2\\n1 1\\n\") == \"2\\n\"\nassert solution(\"3 1\\n1 3\\n1 2\\n\") == \"3\\n\"\n"
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1\\n2 1\\n1 2\\n\") == \"1\\n\"\nassert solution(\"3 2\\n2 1 3\\n1 3\\n2 3\\n\") == \"3\\n\""
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1\\n2 1\\n1 2\\n\") == \"1\\n\"\nassert solution(\"3 2\\n2 1 3\\n1 3\\n2 3\\n\") == \"3\\n\""
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1\\n2 1\\n1 2\\n2 3\\n1 3\\n2 3\") == \"1\\n\"\nassert solution(\"3 2\\n2 1 3\\n1 3\\n2 3\") == \"3\\n\""
    },
    {
        "number": 3177,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: '{expected_output}', but got '{solution(stdin)}'.\""
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 8\\n1 4\\n4 5\\n1 5\\n1 2\\n1 3\\n2 3\\n3 5\\n2 5\") == -1, \"Incorrect output\"\nassert solution(\"6 5\\n2 4\\n3 5\\n1 5\\n3 6\\n1 6\") == 5, \"Incorrect output\""
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 8\\n1 4\\n4 5\\n1 5\\n1 2\\n1 3\\n2 3\\n3 5\\n2 5\") == -1\nassert solution(\"6 5\\n2 4\\n3 5\\n1 5\\n3 6\\n1 6\") == 5"
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 8\\n1 4\\n4 5\\n1 5\\n1 2\\n1 3\\n2 3\\n3 5\\n2 5\") == -1 # This test case has a cycle, so the minimum cost would be -1."
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(str(input())) == output, f\"Test {i+1} failed\""
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin: str) == expected, f\"Test case {test_case} failed. Expected output: {expected}, actual output: {solution(stdin)}.\""
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2"
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == -1"
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 8\\n1 4\\n4 5\\n1 5\\n1 2\\n1 3\\n2 3\\n3 5\\n2 5\\n\") == -1, \"Peter's favorite season is winter.\"\nassert solution(\"6 5\\n2 4\\n3 5\\n1 5\\n3 6\\n1 6\\n\") == 5, \"The sum of costs along any cycle must be an odd number.\"\n"
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 8\\n1 4\\n4 5\\n1 5\\n1 2\\n1 3\\n2 3\\n3 5\\n2 5\\n') == -1\n\nassert solution('6 5\\n2 4\\n3 5\\n1 5\\n3 6\\n1 6\\n') == 5"
    },
    {
        "number": 3178,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"5\", \"Test 1 failed\"\nassert solution(stdin) == \"5\", \"Test 2 failed\""
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == '4.00', 'Incorrect output for sample input 1'\nassert solution(sample_input_2) == '9.00', 'Incorrect output for sample input 2'"
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == \"4.00\"\nassert solution(sample_input_2) == \"9.00\""
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 1\\n1 1\\n5 1\\n5 5\\n4 2\\n') == 4.0\nassert solution('6 3\\n-8 -8\\n0 -1\\n8 -8\\n1 0\\n0 10\\n-1 0\\n') == 9.0"
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 1\\n1 1\\n5 1\\n5 5\\n4 2\\n\") == \"4.00\\n\"\nassert solution(\"6 3\\n-8 -8\\n0 -1\\n8 -8\\n1 0\\n0 10\\n-1 0\\n\") == \"9.00\\n\""
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r')) == '4.00\\n'\n"
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 4.00"
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"1\\n4 1\\n1 1\\n5 1\\n5 5\\n4 2\\n2\\n3\\n4\\n5\\n6\\n3\\n0\\n1\\n1\\n0\\n0\\n0\\n10\\n0\\n10\\n-1 0\\n0 10\\n10\\n10 10\\n10 0\\n10 10\\n0 10\\n10\\n0\\n0 0\\n-1 0\\n1 0\\n0 -1\\n1 0\\n0 10\\n10 0\\n0 10\\n-1 0\\n0 10\\n10 0\\n0 10\\n10 10\\n0 0\\n10\\n0\\n0 10\\n10 10\\n0 10\\n10 0\\n0 10\\n10\\n0\\n0 10\\n10 10\\n0 10\\n10 0\\n0 10\\n10\\n0\\n0 10\\n10 10\\n0 10\\n10 0\\n0 10\\n10\\n0\\n0 10\\n10 10\\n0 10\\n10 0\\n0 10\\n10\\n0\\n0 10\\n10 10\\n0 10\\n10 0\\n0 10\\n10\\n0\\n0 10\\n10 10\\n0 10\\n10 0\\n0 10\\n10\\n0\\n0 10\\n10 10\\n0 10\\n10 0\\n0 10\\n10\\n0\\n0 10\\n10 10\\n0 10\\n10 0\\n0 10\\n10\\n0\\n0 10\\n10 10\\n0 10\\n10 0\\n0 10\\n10\\n0\\n0 10\\n10 10\\n0 10\\n10 0\\n0 10\\n10\\n0\\n0 10\\n10 10\\n0 10\\n10 0\\n0 10\\n10\\n0\\n0 10\\n10 10\\n0 10\\n10 0\\n0 10\\n10\\n0\\n0 10\\n10 10\\n0 10\\n10 0\\n0 10\\n10\\n0\\n0 10\\n10 10\\n0 10\\n10 0\\n0 10\\n10\\n0\\n0 10\\n10 10\\n0 10\\n10 0\\n0 10\\n10\\n0\\n0 10\\n10 10\\n0 10\\n10 0\\n0 10\\n10\\n0\\n0 10\\n10 10\\n0 10\\n10 0\\n0 10\\n10\\n0\\n0 10\\n10 10\\n0 10\\n10 0\\n0 10\\n10\\n0\\n0 10\\n10 10\\n0 10\\n10 0\\n0 10\\n10\\n0\\n0 10\\n10 10\\n0 10\\n10 0\\n0 10\\n10\\n0\\n0 10\\n10 10\\n0 10\\n10 0\\n0 10\\n10\\n0\\n0 10\\n10 10\\"
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2"
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 1\\n1 1\\n5 1\\n5 5\\n4 2\") == 4.0\nassert solution(\"6 3\\n-8 -8\\n0 -1\\n8 -8\\n1 0\\n0 10\\n-1 0\") == 9.0"
    },
    {
        "number": 3179,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r')) == '4.00\\n'\nassert solution(open('input2.txt', 'r')) == '9.00\\n'"
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3 2\\nPAINT 2 0 0 3 3\\nPAINT 3 0 3 3 3\\n\") == \"2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\\n\"\nassert solution(\"3 3 4\\nPAINT 3 0 0 1 1\\nSAVE\\nPAINT 2 1 1 2 2\\nLOAD 1\\n\") == \"3 1 1\\n1 3 1\\n1 1 1\\n\""
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3 2\\nPAINT 2 0 0 3 3\\nPAINT 3 0 3 3 3\\n\") == [\"2 1 2 3\", \"1 2 1 2\", \"2 1 2 3\", \"1 2 1 2\"]\nassert solution(\"3 3 4\\nPAINT 3 0 0 1 1\\nSAVE\\nPAINT 2 1 1 2 2\\nLOAD 1\\n\") == [\"3 1 1\", \"1 3 1\", \"1 1 1\"]"
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\\n\", \"Test case 1 failed\"\n\nassert solution(stdin) == \"3 1 1\\n1 3 1\\n1 1 1\\n\", \"Test case 2 failed\"\n\nsolution(stdin)"
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output() for input, output in [\n    (\n        \"\"\"\n        4 3 2\n        PAINT 2 0 0 3 3\n        PAINT 3 0 3 3 3\n        \"\"\".strip(),\n        \"\"\"\n        2 1 2 3\n        1 2 1 2\n        2 1 2 3\n        1 2 1 2\n        \"\"\".strip(),\n    ),\n    (\n        \"\"\"\n        3 3 4\n        PAINT 3 0 0 1 1\n        LOAD\n        PAINT 2 1 1 2 2\n        \"\"\".strip(),\n        \"\"\"\n        3 1 1\n        1 3 1\n        1 1 1\n        \"\"\".strip(),\n    ),\n]"
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == expected, f\"Expected: {expected}\\nGot: {solution(open(\"input.txt\", \"r\"))}\""
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\\n', 'The solution should return the expected output.'"
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3 2\\nPAINT 2 0 0 3 3\\nPAINT 3 0 3 3 3\\n\") == \"2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\\n\"\n\nassert solution(\"3 3 4\\nPAINT 3 0 0 1 1\\nSAVE\\nPAINT 2 1 1 2 2\\nLOAD 1\\n\") == \"3 1 1\\n1 3 1\\n1 1 1\\n\""
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3 2\\nPAINT 2 0 0 3 3\\nPAINT 3 0 3 3 3\\n\") == \"2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\\n\"\nassert solution(\"3 3 4\\nPAINT 3 0 0 1 1\\nSAVE\\nPAINT 2 1 1 2 2\\nLOAD 1\\n\") == \"3 1 1\\n1 3 1\\n1 1 1\\n\""
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 3 2\\nPAINT 2 0 0 3 3\\nPAINT 3 0 3 3 3\\n') == '2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2'\nassert solution('3 3 4\\nPAINT 3 0 0 1 1\\nSAVE\\nPAINT 2 1 1 2 2\\nLOAD 1\\n') == '3 1 1\\n1 3 1\\n1 1 1'"
    },
    {
        "number": 3180,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 3 2\\nPAINT 2 0 0 3 3\\nPAINT 3 0 3 3 3') == '2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2'"
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == output, \"Expected output: \" + output + \", but got: \" + solution(stdin)\nfor test_case in tests:\n    assert solution(test_case[0]) == test_case[1], \"Test case \" + str(test_case[0]) + \" failed\""
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 3\\n5 1') == '1 4 2 3\\n'\nassert solution('5 1\\n') == '-1\\n'"
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == expected_solution, f\"Expected solution: {expected_solution}, but got: {solution}\""
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"Test failed\""
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '1 4 2 3'\n"
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n4 3\n1 4 2 3\n5 1\n\"\"\") == \"1 4 2 3\"\n\nassert solution(\n\"\"\"\n6 3\n1 2 3 4 5 6\n5 3\n\"\"\") == \"-1\""
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"1 4 2 3\\n-1\"\n"
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"\"\"\n"
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 3\\n5 1') == '1 4 2 3\\n'\nassert solution('4 3\\n5 1\\n3 4') == '-1\\n'"
    },
    {
        "number": 3181,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Test case failed: {input()} -> {solution(input())}\"\n"
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n4 2\\n2 1\\n1 3\\n\") == \"1\"\n\nassert solution(\"4\\n5 0\\n2 6\\n8 6\\n5 7\\n\") == \"0\""
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(), \"Solution not correct.\"\nprint(1)"
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\n2 1\\n1 3\") == \"1\"\nassert solution(\"4\\n5 0\\n2 6\\n8 6\\n5 7\") == \"0\"\n"
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == output, \"Expected: {}, Got: {}\".format(output, solution(stdin))"
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 1"
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, \"\"\"\n4 2\n2 1\n1 3\n\"\"\") == \"1\\n\"\n\nassert solution(4, \"\"\"\n5 0\n2 6\n8 6\n5 7\n\"\"\") == \"0\\n\""
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n4 2\\n2 1\\n1 3\\n\") == \"1\"\nassert solution(\"4\\n5 0\\n2 6\\n8 6\\n5 7\\n\") == \"0\""
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(None) == \"No solution\"\n\nfrom typing import List"
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input1) == sample_output1, \"Test 1: Incorrect output\"\n\nassert solution(sample_input2) == sample_output2, \"Test 2: Incorrect output\""
    },
    {
        "number": 3182,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(r'3\\n4 2\\n2 1\\n1 3') == '1\\n'\nassert solution(r'4\\n5 0\\n2 6\\n8 6\\n5 7') == '0\\n'"
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10\") == \"4 140\\n\"\nassert solution(\"2 1 0 1\\n0 1 1000 100\") == \"1000 100000\\n\""
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10\\n\") == \"4 140\"\nassert solution(\"2 1 0 1\\n0 1 1000 100\\n\") == \"1000 100000\"\n"
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"4 140\\n1000 100000\\n\""
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10\") == \"4 140\\n\"\nassert solution(\"2 1 0 1\\n0 1 1000 100\") == \"1000 100000\\n\""
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10') == '4 140\\n'\n\nassert solution('2 1 0 1\\n0 1 1000 100') == '1000 100000\\n'"
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"4 140\\n100000 100000\", \"Test case 1 failed\"\n\nassert solution(\"4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10\") == \"4 140\\n100000 100000\", \"Test case 2 failed\""
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n4 4 0 3\n0 1 4 10\n1 2 2 10\n0 2 4 30\n2 3 4 10\n\"\"\") == \"4 140\\n\"\n\nassert solution(\"\"\"\n2 1 0 1\n0 1 1000 100\n\"\"\") == \"1000 100000\\n\""
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10\\n\") == \"4 140\\n\"\nassert solution(\"2 1 0 1\\n0 1 1000 100\\n\") == \"1000 100000\\n\""
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10') == '4 140\\n'"
    },
    {
        "number": 3183,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input) == output, f\"Test case {i+1} failed\""
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"100 7\\n1 50\\n50 70\\n70 90\\n90 40\\n20 60\\n60 80\\n80 20\") == \"3\""
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == '3\\n'\nassert solution(open('sample_input1.txt', 'r')) == '3\\n'\nassert solution(open('sample_input2.txt', 'r')) == 'impossible\\n'\n"
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Solution: {solution(input())}, Output: {output}\"\n"
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"100 7\\n1 50\\n50 70\\n70 90\\n90 40\\n20 60\\n60 80\\n80 20\") == 3\nassert solution(\"8 2\\n8 3\\n5 7\") == \"impossible\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"3\""
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\n    pass\""
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input) == output"
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"100 7\\n1 50\\n50 70\\n70 90\\n90 40\\n20 60\\n60 80\\n80 20\") == 3, \"Expected output: 3\\nActual output: \" + str(solution(\"100 7\\n1 50\\n50 70\\n70 90\\n90 40\\n20 60\\n60 80\\n80 20\"))"
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"100 7\\n1 50\\n50 70\\n70 90\\n90 40\\n20 60\\n60 80\\n80 20\") == \"3\"\nassert solution(\"8 2\\n8 3\\n5 7\") == \"impossible\""
    },
    {
        "number": 3184,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('100 7\\n1 50\\n50 70\\n70 90\\n90 40\\n20 60\\n60 80\\n80 20') == '3\\nimpossible'\n\nassert solution('8 2\\n8 3\\n5 7') == 'impossible'"
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"120\") == \"5\"\nassert solution(\"51090942171709440000\") == \"21\""
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('120') == '5', \"The solution is incorrect.\"\nassert solution('51090942171709440000') == '21', \"The solution is incorrect.\""
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"120\") == \"5\", \"Solution 1 failed\"\nassert solution(\"51090942171709440000\") == \"21\", \"Solution 2 failed\""
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"120\") == \"5\", \"120 is not equal to 5.\"\nassert solution(\"51090942171709440000\") == \"21\", \"51090942171709440000 is not equal to 21.\""
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(120) == 5, \"120 is not equal to 5\"\nassert solution(51090942171709440000) == 21, \"51090942171709440000 is not equal to 21\""
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('120') == '5', 'Sample Input 1'\nassert solution('51090942171709440000') == '21', 'Sample Input 2'"
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(120) == 5, \"The correct value is 5.\"\nassert solution(51090942171709440000) == 21, \"The correct value is 21.\""
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(120) == 5, \"Test case 1 failed\"\nassert solution(51090942171709440000) == 21, \"Test case 2 failed\""
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"120\") == 5, \"Test Input 1 failed\"\nassert solution(\"51090942171709440000\") == 21, \"Test Input 2 failed\""
    },
    {
        "number": 3185,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(120) == 5, \"Incorrect output. Expected 5, got: \" + str(solution(120))\nassert solution(51090942171709440000) == 21, \"Incorrect output. Expected 21, got: \" + str(solution(51090942171709440000))"
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 1 2\") == \"45\\n\"\nassert solution(\"3 3 3\") == \"10\\n\""
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution.__name__ == \"solution\""
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '45', \"The correct solution should be 45.\""
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected, f\"Test case failed. Expected {expected}, got {solution(stdin)}\""
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected_output, f\"Test case failed with input {stdin} and expected output {expected_output}\""
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 1 2\") == 45\nassert solution(\"3 3 3\") == 10"
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '45'"
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 1 2\") == \"45\"\nassert solution(\"3 3 3\") == \"10\"\n"
    },
    {
        "number": 3186,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == solution(stdin)\nassert solution(stdin) == solution(stdin)"
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n\") == \"20\"\nassert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n\") == \"impossible\"\nassert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n10\\n\") == \"18\"\n"
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"18\", \"Test case 1 failed\"\nassert solution(stdin) == \"20\", \"Test case 2 failed\"\nassert solution(stdin) == \"impossible\", \"Test case 3 failed\""
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output\n"
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n\") == \"20\"\nassert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n10\\n\") == \"impossible\"\nassert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n\") == \"impossible\""
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\").read()) == \"18\"\nassert solution(open(\"input2.txt\").read()) == \"20\""
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n') == 'impossible'\nassert solution('5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n10\\n') == '18'"
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n\") == \"18\"\nassert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n\") == \"20\"\nassert solution(\"3\\n1 1\\n4 1\\n5 9\\n2 6\\n5 3\\n\") == \"impossible\""
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n\") == \"18\\n\"\nassert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n\") == \"20\\n\""
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n') == '20'"
    },
    {
        "number": 3187,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n\") == \"20\"\nassert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n3\\n\") == \"impossible\""
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1 5 10\\n7 8 2\") == \"3\\n\"\nassert solution(\"3\\n-1 -1 -1\\n5 5 5\\n10 10 10\") == \"11\\n\""
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"3\\n1 5 10\\n7 8 2\\n\""
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == expected, f\"Your solution is incorrect. Expected {expected}, but got {solution()}\""
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n1 5 10\\n7 8 2\\n') == '3\\n'\nassert solution('3\\n-1 -1 -1\\n5 5 5\\n10 10 10\\n') == '11\\n'"
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"2\\n1 5 10\\n7 8 2\"\n) == \"3\\n\"\n\nassert solution(\n    \"3\\n-1 -1 -1\\n5 5 5\\n10 10 10\"\n) == \"11\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected, f\"Test case failed. Expected: {expected}, but got: {solution(stdin)}\""
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 5 10\\n7 8 2\\n3\\n-1 -1 -1\\n5 5 5\\n10 10 10\\n\") == \"3\\n\", \"Incorrect output\""
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"3\", \"The solution is not correct.\""
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('test_input.txt').read()) == '3\\n'\nprint(\"All tests passed!\")"
    },
    {
        "number": 3188,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=None) == '''\n3\n-1 -1 -1\n5 5 5\n10 10 10\n'''"
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"0\"\n"
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '2', 'Your code is not correct'"
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"3 1\\n110\\n011\\n4 2\\n1000\\n1000\\n0000\\n0010\\n\") == \"2\"\n"
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '2', 'Please implement the solution correctly.'"
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(str(input())) == expected_output, f\"Your solution is incorrect. Please check the code and make sure to test it with the given examples.\""
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == expected, \"Your solution is incorrect.\""
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1\\n110\\n011\\n\") == \"2\\n\"\nassert solution(\"4 2\\n1000\\n1000\\n0000\\n0010\\n\") == \"0\\n\""
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1\\n110\\n011\\n\") == \"2\"\nassert solution(\"4 2\\n1000\\n1000\\n0000\\n0010\\n\") == \"0\""
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}\\nGot: {solution(stdin)}\""
    },
    {
        "number": 3189,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == 2\nassert solution(sample_input_2) == 0"
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n2\\n\") == \"1\\n\"\nassert solution(\"3\\n1 3 2\\n2\\n\") == \"5\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1\\n\"\nassert solution(stdin) == \"5\\n\""
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == \"1\\n\"\nassert solution(sample_input_2) == \"5\\n\""
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n\") == \"1\\n\", \"Test 1 failed\"\nassert solution(\"3\\n1 3 2\\n2\\n\") == \"5\\n\", \"Test 2 failed\""
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n2\\n\") == \"1\\n\"\nassert solution(\"3\\n1 3 2\\n2\\n\") == \"5\\n\""
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n1 2 3\\n3\\nSample Input 1\\n3\\nSample Output 1\\n1\\n\\nSample Input 2\\n3\\nSample Output 2\\n5') == '1\\n\\n'\nassert solution('3\\n1 3 2\\n2\\nSample Input 2\\n3\\nSample Output 2\\n5') == '5\\n'"
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '1\\n'\n"
    },
    {
        "number": 3190,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n1 2 3\\n3\\n2\\n').strip() == '1'\nassert solution('3\\n1 3 2\\n2\\n').strip() == '5'"
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"def solution(stdin: str) -> str: pass\") == 19\nprint(solution(\"def solution(stdin: str) -> str: pass\"))"
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"0\""
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\\n\"\n"
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abc\") == \"abc\""
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=input()) == '0'\n\nprint(min(int(input()) for _ in range(int(input()))))"
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=input()) == 0, \"The program did not crash.\"\n\nimport time"
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin='1 100 20') == '0'\nassert solution(stdin='10 10 1') == '19'"
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 19, \"The solution should be 19.\""
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == '0', 'Expected \"0\", got \"{}\"'.format(solution(stdin=input()))"
    },
    {
        "number": 3191,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin='1 100 20') == '0\\n'\nassert solution(stdin='10 10 1') == '19\\n'\n"
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"sample_input1.txt\").read()) == \"c\"\nassert solution(open(\"sample_input2.txt\").read()) == \"SHIP IT\""
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('classa classb myfilec execd libe') == 'c'\nassert solution('classa 2 import classb import myfilec import libe classb 1 import execd myfilec 1 import libe 0') == 'SHIP IT'"
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == \"SHIP IT\"\nassert solution(sample_input_2) == \"SHIP IT\""
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\na b c d\\na 1\\nimport d, b, c\\nb 2\\nimport d\\nimport c\\nc 1\\nimport c\\nd 0\\n\") == \"c\\n\"\nassert solution(\"5\\nclassa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0\\n\") == \"SHIP IT\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nfrom collections import deque"
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('sample_input1.txt', 'r').read()) == 'c'\nassert solution(open('sample_input2.txt', 'r').read()) == 'SHIP IT'"
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('sample_input1.txt', 'r')) == 'c'\nassert solution(open('sample_input2.txt', 'r')) == 'SHIP IT'\n\nfrom collections import deque"
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input1) == \"c\"\nassert solution(input2) == \"SHIP IT\""
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == \"c\"\nassert solution(sample_input_2) == \"SHIP IT\""
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"classa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\") == \"c\"\nassert solution(\"a b c d\\nimport d, b, c\\nb 2\\nimport d\\nimport c\\nc 1\\nimport c\\nd 0\") == \"SHIP IT\""
    },
    {
        "number": 3192,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2"
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5+3+x\\n9 10') == '1', 'Test 1'\nassert solution('20+3+x\\n0 5') == '2', 'Test 2'"
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5+3+x\\n9 10\") == \"1\", \"Sample Input 1\"\nassert solution(\"20+3+x\\n0 5\") == \"2\", \"Sample Input 2\""
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5+3+x\\n9 10') == '1', \"The solution should be 1.\"\nassert solution('20+3+x\\n0 5') == '2', \"The solution should be 2.\"\n"
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5+3+x\") == \"1\"\nassert solution(\"9 10\") == \"1\"\nassert solution(\"20+3+x\") == \"2\"\nassert solution(\"5-3-x\") == \"3\"\nassert solution(\"2*x\") == \"0\"\nassert solution(\"4*x\") == \"0\"\nassert solution(\"(5+3)*(2+x-2*x)\") == \"0\"\nassert solution(\"x*x\") == \"0\"\nassert solution(\"(x+2)*(x+2)*x\") == \"1\"\nassert solution(\"x^2\") == \"0\"\nassert solution(\"x^x\") == \"1\"\nassert solution(\"x^-1\") == \"1\"\nassert solution(\"x^2+2x\") == \"0\"\nassert solution(\"x^3-2x^2\") == \"0\"\nassert solution(\"x^4-4x^3+6x^2-4x+1\") == \"0\"\nassert solution(\"x^5-10x^4+10x^3-20x^2+20x+10\") == \"0\"\nassert solution(\"x^10-50x^9+50x^8-100x^7+100x^6-50x^5+50x^4-100x^3+100x^2-50x+10\") == \"0\"\nassert solution(\"x^20-500x^19+500x^18-1000x^17+1000x^16-500x^15+500x^14-1000x^13+1000x^12-500x+50\") == \"0\"\nassert solution(\"x^200-4999x^199+4999x^198-10000x^197+10000x^196-4999x^195+4999x^194-10000x^193+10000x^192-4999x^191+4999x^190-10000x^189+10000x^188-4999x^187+4999x^186-10000x^185+10000x^184-4999x^183+4999x^182-10000x^181+10000x^180-4999x^179+4999x^178-10000x^177+10000x^176-4999x^175+4999x^174-10000x^173+10000x^172-4999x^171+4999x^170-10000x^169+10000x^168-4999x^167+4999x^166-10000x^165+10000x^164-4999x^163+4999x^162-10000x^161+10000x^160-4999x^159+4999x^158-10000x^157+10000x^156-4999x^155+4999x^154-10000x^153+10000x^152-4999x^151+4999x^150-10000x^149+10000x^148-4999x^147+4999x^146-10000x^145+10000x^144-4999x"
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5+3+x\\n9 10\") == \"1\\n\"\nassert solution(\"20+3+x\\n0 5\") == \"2\\n\""
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 1"
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Test failed. Expected output: {output()}, but got: {solution(input())}\"\n\ninput = \"\"\"\n5+3+x\n9 10\n\"\"\"\noutput = \"1\\n\"\n\ninput = \"\"\"\n20+3+x\n0 5\n\"\"\"\noutput = \"2\\n\""
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5+3+x\\n9 10\") == \"1\"\nassert solution(\"20+3+x\\n0 5\") == \"2\""
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5+3+x\") == \"1\", \"Test case 1: 5+3+x should be 1.\"\nassert solution(\"9 10\") == \"1\", \"Test case 2: 9 10 should be 1.\"\nassert solution(\"20+3+x\") == \"2\", \"Test case 3: 20+3+x should be 2.\"\n"
    },
    {
        "number": 3193,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5+3+x\\n9 10\") == \"1\\n\", \"The solution for the given expression is incorrect.\"\nassert solution(\"20+3+x\\n0 5\") == \"2\\n\", \"The solution for the given expression is incorrect.\""
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"The output does not match the expected output for the given sample inputs.\\nInput: {stdin}\\nExpected Output: {expected}\\nActual Output: {solution(stdin)}\""
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == \"yes\"\nassert solution(sample_input_2) == \"no\""
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 10\\n0 15\\n5 20\") == \"yes\\n\"\nassert solution(\"2 10\\n1 15\\n0 20\") == \"no\\n\""
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"yes\"\nassert solution == \"no\"\n"
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"yes\""
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"yes\""
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"yes\"\n"
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Sample Input 1\") == \"yes\"\nassert solution(\"Sample Input 2\") == \"no\""
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n2 10\n0 15\n5 20\n''') == 'yes\\n'\n\nassert solution('''\n2 10\n1 15\n0 20\n''') == 'no\\n'"
    },
    {
        "number": 3194,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 10\\n0 15\\n5 20\") == \"yes\\n\"\nassert solution(\"2 10\\n1 15\\n0 20\") == \"no\\n\""
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''4 4 4\n3\n2 green\n18 yellow\n34 red\n5 green''') == '0.25'\n\nassert solution('''4 4 4\n4\n2 green\n6 yellow\n10 red\n14 green\n4 red''') == '0'"
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 4 4\\n3\\n2 green\\n18 yellow\\n34 red\\n5 green') == '0.25'\nassert solution('4 4 4\\n4\\n2 green\\n6 yellow\\n10 red\\n14 green\\n4 red') == '0'"
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 4 4\\n3\\n2 green\\n18 yellow\\n34 red\\n5 green') == '0.25'\n\nassert solution('4 4 4\\n4\\n2 green\\n6 yellow\\n10 red\\n14 green\\n4 red') == '0'"
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=input()) == '0.25'"
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input) == output, f\"The solution is incorrect. Expected {output}, but got {solution(input)}.\"\n"
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input1) == \"0.25\\n\"\nassert solution(input2) == \"0\\n\""
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4 4\\n3\\n2 green\\n18 yellow\\n34 red\\n5 green\") == \"0.25\"\nassert solution(\"4 4 4\\n4\\n2 green\\n6 yellow\\n10 red\\n14 green\\n4 red\") == \"0\"\n\nimport random"
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4 4\\n3\\n2 green\\n18 yellow\\n34 red\\n5 green\") == \"0.25\"\nassert solution(\"4 4 4\\n4\\n2 green\\n6 yellow\\n10 red\\n14 green\\n4 red\") == \"0\""
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '0.25', 'Test case 1 failed'"
    },
    {
        "number": 3195,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    4 4 4\n    \"\"\"\n) == \"0.25\"\n\nassert solution(\n    \"\"\"\n    4 4 4\n    4\n    \"\"\"\n) == \"0\"\n\nassert solution(\n    \"\"\"\n    4 4 4\n    4\n    green\n    6 yellow\n    10 red\n    14 green\n    4 red\n    \"\"\"\n) == \"0\"\n\nassert solution(\n    \"\"\"\n    4 4 4\n    4\n    green\n    6 yellow\n    10 red\n    14 green\n    4 red\n    green\n    6 yellow\n    10 red\n    14 green\n    4 red\n    \"\"\"\n) == \"0.25\"\n\nassert solution(\n    \"\"\"\n    4 4 4\n    4\n    green\n    6 yellow\n    10 red\n    14 green\n    4 red\n    green\n    6 yellow\n    10 red\n    14 green\n    4 red\n    green\n    6 yellow\n    10 red\n    14 green\n    4 red\n    \"\"\"\n) == \"0.25\"\n\nassert solution(\n    \"\"\"\n    4 4 4\n    4\n    green\n    6 yellow\n    10 red\n    14 green\n    4 red\n    green\n    6 yellow\n    10 red\n    14 green\n    4 red\n    green\n    6 yellow\n    10 red\n    14 green\n    4 red\n    green\n    6 yellow\n    10 red\n    14 green\n    4 red\n    green\n    6 yellow\n    10 red\n    14 green\n    4 red\n    green\n    6 yellow\n    10 red\n    14 green\n    4 red\n    green\n    6 yellow\n    10 red\n    14 green\n    4 red\n    green\n    6 yellow\n    10 red\n    14 green\n    4 red\n    green\n    6 yellow\n    10 red\n    14 green\n    4 red\n    green\n    6 yellow\n    10 red\n    14 green\n    4 red\n    green\n    6 yellow\n    10 red\n    14 green\n    4 red\n    green\n    6 yellow\n    10 red\n    14 green\n    4 red\n    green\n    6 yellow\n    10 red\n    14 green\n    4 red\n    green\n    6 yellow\n    10 red\n    14 green\n    4 red\n    green\n    6 yellow\n    10 red\n    14 green\n    4 red\n    green\n    6 yellow\n    10 red\n    14 green\n    4 red\n    green\n    6 yellow\n    10 red\n    14 green\n    4 red\n    green\n    6 yellow\n    10 red\n    14 green\n    4 red\n    green\n    6 yellow\n    10 red\n    14 green\n    4 red\n    green\n    6 yellow\n    10 red\n    14 green\n    4 red\n    green\n    6 yellow\n    10 red\n    14 green\n    4 red\n    green\n    6 yellow\n    10 red\n    14 green\n    4 red\n    green\n    6 yellow\n    10 red\n    14 green\n    4 red\n    green\n    6 yellow\n    10 red\n    14 green\n    4 red\n    green\n    6 yellow\n    10 red\n    14 green\n    4 red\n    green\n    6 yellow\n    10 red\n    14 green\n    4 red\n    green\n    6 yellow\n    10 red\n    14 green\n    4 red\n    green\n    6 yellow\n    10 red\n    14 green\n    4 red\n    green\n    6 yellow\n    10 red\n    14 green\n    4 red\n    green\n    6 yellow\n    10 red\n    14 green\n    4 red\n    green\n    6 yellow\n    10 red\n    14 green\n    4 red\n    green\n    6 yellow\n    10 red\n    14 green\n    4 red\n    green\n    6 yellow\n    10 red\n    14 green\n    4 red\n    green\n    6 yellow\n    10 red\n    14 green\n    4 red\n    green\n    6 yellow\n    10 red\n    14 green\n    4 red\n    green\n    6 yellow\n    10 red\n    14 green\n    4 red\n    green\n    6 yellow\n    10 red\n    14 green\n    4 red\n    green\n    6 yellow\n    10 red\n    14 green\n    4 red\n    green\n    6 yellow\n    10 red\n    14 green\n    4 red\n    green\n    6 yellow\n    10 red\n    14 green\n    4 red\n    green\n    6 yellow\n    10 red\n    14 green\n    4 red\n    green\n    6 yellow\n    10 red\n    14 green\n    4 red\n    green\n    6 yellow\n    10 red\n    14 green\n    4 red\n    green\n    6 yellow\n    10 red\n    14 green\n    4 red\n    green\n    6 yellow\n    10 red\n    14 green\n    4 red\n    green\n    6 yellow\n    10 red\n    14 green\n    4 red\n    green\n    6 yellow\n    10 red\n    14 green\n    4 red\n    green\n    6 yellow\n    10 red\n    14 green\n    4 red\n    green\n    6 yellow\n    10 red\n    14 green\n    4 red\n    green\n    6 yellow\n    10 red\n    1"
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\\n') == 3\nassert solution('1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\\n10000 10000\\n') == \"inf\""
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('6 7\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3') == '3'\nassert solution('6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3') == 'inf'"
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 7\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\") == \"3\"\nassert solution(\"6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\") == \"inf\""
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 7\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\") == \"3\"\nassert solution(\"6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\") == \"inf\""
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 7\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\\n\") == \"3\"\nassert solution(\"6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\\n\") == \"inf\""
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input1) == '3'\nassert solution(sample_input2) == 'inf'"
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 7\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\") == 3\nassert solution(\"6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\") == \"inf\""
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('sample_input_1.txt', 'r')) == '3\\n'\nassert solution(open('sample_input_2.txt', 'r')) == 'inf\\n'"
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(solution.input1) == \"3\"\nassert solution(solution.input2) == \"inf\""
    },
    {
        "number": 3196,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 'inf', 'Please implement the function'"
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n1 2 3 4\\nSample Output 1: 4\\n\\nSample Input 2: 12 3\\n2 3 4 5 6 7 4 7 8 8 12 12\\nSample Output 2: 2\") == \"4\\n\"\n"
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"3\"\nassert solution() == \"4\"\nassert solution() == \"3\"\nassert solution() == \"4\""
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed. Expected output: {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(str(input())) == str(output()), \"Output does not match expected output.\""
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\n1 2 3 4\") == \"4\"\nassert solution(\"12 3\\n2 3 4 5 6 7 4 7 8 8 12 12\") == \"2\""
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Test failed\"\n"
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\n1 2 3 4\") == \"4\\n\"\nassert solution(\"12 3\\n2 3 4 5 6 7 4 7 8 8 12 12\") == \"2\\n\"\n"
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n1 2 3 4\") == 4\nassert solution(\"12 3\\n2 3 4 5 6 7 4 7 8 8 12 12\") == 2"
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"4\\n\"\nassert solution(open(\"input2.txt\", \"r\")) == \"2\\n\""
    },
    {
        "number": 3197,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"4\", \"Test 1 failed\"\n\nfrom typing import List"
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"hoose\\nnoises\\nnoise\"\nassert solution() == \"hoose\\nmoose\\ndef solution(stdin: str) -> str: \\n    pass\""
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(r\"\"\"\n    5\n    1\n    2\n    3\n    4\n\"\"\") == \"hoose\\nnoises\\nnoise\\n\", \"Sample Input 1\"\nassert solution(r\"\"\"\n    4\n    1\n    2\n    3\n\"\"\") == \"hose\\nmoose\\ndef solution(stdin: str) -> str:\\n    pass\\ndef main() -> None:\\n    print('hose')\\n    print('moose')\\n    main()\\n    return\\n    \\ndef main() -> None:\\n    print('hose')\\n    print('moose')\\n    return\\n    \\ndef main() -> None:\\n    print('hose')\\n    print('moose')\\n    return\\n\", \"Sample Input 2\""
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n\\tpass\\n\\treturn 'NO TYPOS'\\n\\n\"\n"
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('sample_input.txt', 'r')) == ['hoose', 'noises', 'noise']\nassert solution(open('sample_input2.txt', 'r')) == ['hoose','moose']"
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\nhoose\\nhose\\nnose\\nnoises\\nnoise\\n') == ['hoose', 'noises', 'noise']\nassert solution('4\\nhose\\nhoose\\noose\\nmoose\\n') == ['hoose','moose']"
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\nhoose\\nhose\\nnose\\nnoises\\noise\\n\") == \"hoose\\noises\\noise\""
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('Sample Input 1\\n5\\nhoose\\nhose\\nose\\noises\\noise\\nSample Output 1\\nhoose\\noises\\noise\\n\\nSample Input 2\\n4\\nhose\\hoose\\oose\\moose\\nSample Output 2\\nhoose\\moose\\def solution(stdin: str) -> str:\\n    pass\\n\\n') == '\\nhoose\\noises\\noise\\n\\nmoose\\n\\n'"
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\nhoose\\nhose\\nnose\\nnoises\\nnoise\\n') == 'hoose\\noises\\noise\\n'\nassert solution('4\\nhose\\nhoose\\oose\\moose\\n') == 'hoose\\moose\\n'"
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n5\nhoose\nhose\nnose\nnoises\nnoise\n\"\"\") == ['hoose', 'noises', 'noise']\n\nassert solution(\"\"\"\n4\nhose\nhoose\noose\nmoose\n\"\"\") == ['hose', 'hoose', 'oose','moose']\n\nassert solution(\"\"\"\n5\nhoose\nhose\nnose\nnoises\nnoise\n\"\"\") == ['hoose', 'noises', 'noise']"
    },
    {
        "number": 3198,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, \"Test failed\""
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == \"2\\n2\\n5\"\nassert solution(sample_input_2) == \"0\\n16\\n8\""
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1\\n3\") == \"2\\n2\\n5\\n\"\nassert solution(\"2 3\\n4\") == \"0\\n16\\n8\\n\""
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1\\n3\\n\") == \"2\\n2\\n5\\n\", \"Test 1\"\nassert solution(\"2 3\\n4\\n\") == \"0\\n16\\n8\\n\", \"Test 2\""
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r')) == '0\\n16\\n8'\n"
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_1) == output_1, f\"Test Case 1 failed: {solution(input_1)}\\nExpected Output: {output_1}\\nActual Output: {solution(input_1)}\"\nassert solution(input_2) == output_2, f\"Test Case 2 failed: {solution(input_2)}\\nExpected Output: {output_2}\\nActual Output: {solution(input_2)}\"\n\ninput_1 = \"1 1\\n3\"\ninput_2 = \"2 3\\n4\"\n\noutput_1 = \"2\"\noutput_2 = \"0\\n16\\n8\""
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input1) == output1, f\"Test 1 failed. Expected: {output1}, Got: {solution(input1)}\"\nassert solution(input2) == output2, f\"Test 2 failed. Expected: {output2}, Got: {solution(input2)}\""
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input1) == '2\\n2\\n5'\nassert solution(sample_input2) == '0\\n16\\n8'"
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == [2, 2, 5]\n\nassert solution(sample_input_2) == [0, 16, 8]\n\nsample_input_1 = \"1 1\\n3\"\nsample_input_2 = \"2 3\\n4\""
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1\\n3\") == \"2\\n2\\n5\\n\"\nassert solution(\"2 3\\n4\") == \"0\\n16\\n8\\n\"\n"
    },
    {
        "number": 3199,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\""
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected\nassert solution(stdin2) == expected2\nassert solution(stdin3) == expected3\nassert solution(stdin4) == expected4\nassert solution(stdin5) == expected5\n"
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == output, f\"Solution does not match expected output: {solution(stdin)}!= {output}\""
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\nSample Input 1\\nSample Output 1\\n1\\n2\\n50 45 45\\nSample Output 2\\n\") == \"44.72135955\"\nassert solution(\"2\\nSample Input 2\\nSample Output 2\\n2\\n50 45 45\\nSample Output 2\\n\") == \"68.52419365\""
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == expected_output, f\"Your solution is incorrect. Please check the output provided and the examples provided in the problem statement.\""
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1\\nSample Input 1:1\\n2\\n50 45 45\\nSample Output 2:68.52419365\\n') == '68.52419365'\nassert solution('2\\nSample Input 1:2\\n2\\n50 45 45\\nSample Output 2:68.52419365\\n') == '68.52419365'"
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"44.72135955\""
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"Output the minimum time required to reach the end of the road. Answers within a relative or absolute error of $10^{-6}$ will be accepted.\\n\", \"Incorrect solution!\""
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"44.72135955\", \"The correctness of the solution is not yet known.\""
    },
    {
        "number": 3200,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == expected_output, f\"Test failed for sample input {sample_input}, expected output {expected_output}\""
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    2 3 1 5\n    1 2\n    \"\"\"\n) == \"1\\n3\\n2\\n\"\n\nassert solution(\n    \"\"\"\n    3 4 2 3\n    1 3 1\n    \"\"\"\n) == \"1\\n1\\n0\\n2\\n\"\n\nassert solution(\n    \"\"\"\n    2 2 3 3\n    1 2 1\n    \"\"\"\n) == \"1\\n2\\n\""
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2"
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3 1 5\\n1 2\\n\") == \"1\\n3\\n2\\n\"\nassert solution(\"3 4 2 3\\n1 3 1\\n\") == \"1\\n1\\n0\\n2\\n\""
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 3 1 5\\n1 2\\n3 4 2 3\\n1 3 1') == '1\\n3\\n2\\n1\\n1\\n0'\n\nfrom collections import defaultdict"
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input) == expected_output, f\"Test failed with input {input} and expected output {expected_output}\""
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Error: Solution is incorrect. Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3 1 5\\n1 2\\n\") == \"1\\n3\\n2\\n\"\nassert solution(\"3 4 2 3\\n1 3 1\\n\") == \"1\\n1\\n0\\n2\\n\""
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n2 3 1 5\n1 2\n\"\"\") == \"1\\n3\\n2\"\n\nassert solution(\"\"\"\n3 4 2 3\n1 3 1\n\"\"\") == \"1\\n1\\n0\\n2\"\n\nassert solution(\"\"\"\n3 2 1 4\n1 2 3\n\"\"\") == \"1\\n1\\n0\\n2\"\n\nassert solution(\"\"\"\n3 2 1 5\n2 3 4\n\"\"\") == \"2\\n0\\n2\"\n\nassert solution(\"\"\"\n2 3 1 4\n1 2 3\n\"\"\") == \"1\\n1\\n0\\n2\"\n\nassert solution(\"\"\"\n3 4 2 1\n1 2 3\n\"\"\") == \"1\\n1\\n0\\n2\"\n\nassert solution(\"\"\"\n3 4 2 3\n1 3 2\n\"\"\") == \"1\\n1\\n0\\n2\"\n\nassert solution(\"\"\"\n4 2 3 1\n1 2 3\n\"\"\") == \"1\\n1\\n0\\n2\"\n\nassert solution(\"\"\"\n2 3 1 2\n1 2 3\n\"\"\") == \"1\\n1\\n0\\n2\""
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3 1 5\\n1 2\\n3 4 2 3\\n1 3 1\") == [1, 3, 2]\nassert solution(\"3 4 2 3\\n1 3 1\\n1 1 0\\n2 2\") == [1, 1]"
    },
    {
        "number": 3201,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3 1 5\\n1 2\") == \"1\\n3\\n2\\n\"\nassert solution(\"3 4 2 3\\n1 3 1\") == \"1\\n1\\n0\\n2\\n\""
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(str(input())) == \"The smallest number of marbles Mirko has to insert to achieve the desired effect is 3.\""
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 5\\n1 1\\nSample Input 1\\nSample Output 1\\nSample Input 2\\nSample Output 2\\n') == '3\\n2\\n'"
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 5\\n1 1\\n\") == 3\nassert solution(\"5 3\\n2 2 3 2 2\\n\") == 2"
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Output\", \"Test failed.\"\n"
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"3\", \"Solution does not work.\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 5\\n1 1\") == \"3\\n\"\nassert solution(\"5 3\\n2 2 3 2 2\") == \"2\\n\""
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 5\\n1 1\") == \"3\\n\"\nassert solution(\"5 3\\n2 2 3 2 2\") == \"2\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 5\\n1 1\\n\") == 3\nassert solution(\"5 3\\n2 2 3 2 2\\n\") == 2"
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 5\\n1 1\\n') == '3'\nassert solution('5 3\\n2 2 3 2 2\\n') == '2'"
    },
    {
        "number": 3202,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"3\""
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, \"Test failed\""
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == 50\n"
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"50\""
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"50\"\n"
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n100 100\\n50 50\\n') == 50.0\n\nassert solution('2\\n0 50\\n50 0\\n') == 25.0"
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    2\n    100 100\n    50 50\n    \"\"\"\n) == \"50\"\n\nassert solution(\n    \"\"\"\n    2\n    0 50\n    50 0\n    \"\"\"\n) == \"25\""
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n100 100\\n50 50\\n2\\n0 50\\n50 0\\n\") == \"50\"\nassert solution(\"2\\n0 50\\n50 0\\n\") == \"25\"\n"
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n100 100\\n50 50\\n\") == 50\nassert solution(\"2\\n0 50\\n50 0\\n\") == 25"
    },
    {
        "number": 3203,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"50\"\nassert solution(\"2\") == \"25\""
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"250\""
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected, f\"Your solution is incorrect. Expected {expected}, but got {solution(stdin)}\""
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"250\\n\", \"Test failed.\""
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 250"
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 250"
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n100\\n200\\n') == '160\\n'\nassert solution('3\\n100\\n200\\n2010\\n') == '250\\n'\n\nfrom typing import List\n"
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected_output, f\"For example, for input {stdin}, expected output {expected_output}, but got {solution(stdin)}\""
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n100\\n200\\n\") == \"160\\n\"\nassert solution(\"3\\n100\\n200\\n2010\\n\") == \"250\\n\""
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('def solution(stdin: str) -> str:') == 'def solution(stdin: str) -> str:\\n    pass\\n\\n'"
    },
    {
        "number": 3204,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"250\"\nassert solution() == \"250\""
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n0 1 1\\n2 3 1\") == \"2\"\nassert solution(\"5 5\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\") == \"0\""
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2\\n\", \"You can't solve this problem\""
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n4 2\n0 1 1\n2 3 1\n\"\"\") == \"2\\n\"\n\nassert solution(\"\"\"\n5 5\n0 1 3\n1 2 3\n2 3 3\n3 4 3\n4 0 3\n\"\"\") == \"0\\n\""
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Test {test_case} failed: {solution(input())}!= {expected_output}\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\n0 1 1\\n2 3 1\\n\") == \"2\\n\"\nassert solution(\"5 5\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n\") == \"0\\n\""
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n0 1 1\\n2 3 1\\n\") == \"2\"\nassert solution(\"5 5\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n\") == \"0\""
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 2, \"The solution for this problem is incorrect.\""
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n5 5\n0 1 3\n1 2 3\n2 3 3\n3 4 3\n4 0 3\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n4 2\n0 1 1\n2 3 1\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n4 2\n0 1 1\n2 3 1\n\"\"\") == \"2\""
    },
    {
        "number": 3205,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n0 1 1\\n2 3 1\\n\") == \"2\"\nassert solution(\"5 5\\n0 1 3\\n1 2 3\\n2 3 3\\n3 4 3\\n4 0 3\\n\") == \"0\""
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n3 3 2 1\\n3 3 3\\n\") == [1, 1]\nassert solution(\"4 2\\n3 3 2 2\\n6 3\\n\") == [-1]\n"
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"\"\"\n1 1\n1 2\n2 3 4\n\"\"\"\n"
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == expected_output, f\"The output {solution} is not the expected output {expected_output}.\""
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"The solution is incorrect. Expected: {output}, Received: {solution(input())}\""
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin='4 3\\n3 3 2 1\\n3 3 3') == ['1 1', '1 2', '2 3 4']\nassert solution(stdin='4 2\\n3 3 2 2\\n6 3') == '-1'"
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n3 3 2 1\\n3 3 3\") == [\"1 1\", \"1 2\", \"2 3 4\"]\nassert solution(\"4 2\\n3 3 2 2\\n6 3\") == [-1]"
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n4 3\n3 3 2 1\n3 3 3\n''') == '''\n1 1\n1 2\n2 3 4\n'''\n\nassert solution('''\n4 2\n3 3 2 2\n6 3\n''') == '''\n-1\n'''"
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == sample_output_1, \"Function should return the expected result.\"\nassert solution(sample_input_2) == sample_output_2, \"Function should return the expected result.\""
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"Test case {i+1} failed: solution({stdin})!= expected\" for i, (stdin, expected) in enumerate(tests)"
    },
    {
        "number": 3206,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == '1 1'\nassert solution(2) == '-1'\n"
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3 10\\n0 0 D\\n10 1 L\") == \"10.0\\n10.0\\n0.0\"\nassert solution(\"4 3 7\\n1 0 D\\n3 0 D\\n4 1 L\\n6 2 D\") == \"10.0\\n4.0\\n1.0\""
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3 10\\n0 0 D\\n10 1 L\\n\") == \"10.0\\n10.0\\n0.0\\n\"\nassert solution(\"4 3 7\\n1 0 D\\n3 0 D\\n4 1 L\\n6 2 D\\n\") == \"10.0\\n4.0\\n1.0\\n\""
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"example_input.txt\", \"r\")) == \"10.0\\n10.0\\n0.0\\n\", \"Example 1\"\nassert solution(open(\"input.txt\", \"r\")) == \"10.0\\n10.0\\n0.0\\n\", \"Example 2\""
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"10.0\\n10.0\\n0.0\\n\""
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed: {solution(input())}!= {expected_output}\"\n"
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3 10\\n0 0 D\\n10 1 L\\n\") == \"10.0\\n10.0\\n0.0\\n\"\nassert solution(\"4 3 7\\n1 0 D\\n3 0 D\\n4 1 L\\n6 2 D\\n\") == \"10.0\\n4.0\\n1.0\\n\""
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 3 10\\n0 0 D\\n10 1 L\\n') == '10.0\\n10.0\\n0.0\\n'\nassert solution('4 3 7\\n1 0 D\\n3 0 D\\n4 1 L\\n6 2 D\\n') == '10.0\\n4.0\\n1.0\\n'\n"
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3 10\\n0 0 D\\n10 1 L\\nSample Output 1: 10.0\\n10.0\\n0.0\\n\\nSample Input 2: 4 3 7\\n1 0 D\\n3 0 D\\n4 1 L\\n6 2 D\\nSample Output 2: 10.0\\n4.0\\n1.0\\ndef solution(stdin: str) -> str:\\n    pass\") == \"10.0\\n10.0\\n0.0\\n\\n10.0\\n4.0\\n1.0\"\nassert solution(\"4 3 7\\n1 0 D\\n3 0 D\\n4 1 L\\n6 2 D\\nSample Output 2: 10.0\\n4.0\\n1.0\\ndef solution(stdin: str) -> str:\\n    pass\") == \"10.0\\n4.0\\n1.0\""
    },
    {
        "number": 3207,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n    2 3 10\n    0 0 D\n    10 1 L\n    \"\"\"), \"Input 1 failed\"\n\nassert solution(\"\"\"\n    4 3 7\n    1 0 D\n    3 0 D\n    4 1 L\n    6 2 D\n    \"\"\"), \"Input 2 failed\""
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\""
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('ex eoii jpxbmx cvz uxju sjzzcn jzz') == 'we will avenge our dead parrot arr'\nassert solution('wl jkd') == 'Impossible'\n\nSolution:\n\nHere's the code to solve the problem:\n\n```python\n"
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\""
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\""
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\"\n\nfrom typing import List"
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\""
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    'ex eoii jpxbmx cvz uxju sjzzcn jzz'\n) == 'we will avenge our dead parrot arr'\n\nassert solution(\n    'wl jkd'\n) == 'Impossible'"
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('sample_input1.txt', 'r').read()) == 'we will avenge our dead parrot arr'\nassert solution(open('sample_input2.txt', 'r').read()) == 'Impossible'"
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\""
    },
    {
        "number": 3208,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\""
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Hamburg Bremen\") == 68.3\nassert solution(\"Amsterdam Rotterdam\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('Hamburg Bremen\\n3\\nHamburg Bremen 15 68 10 5\\nHamburg Bremen 46 55 50 60\\nBremen Frankfurt 14 226 10 120\\n', '') == 68.3\nassert solution('Amsterdam Rotterdam\\n1\\nAmsterdam Utrecht 10 22 5 10\\n', '') == 'IMPOSSIBLE'"
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Hamburg Bremen\", 3, \"Hamburg Bremen 15 68 10 5\", \"Hamburg Bremen 46 55 50 60\", \"Bremen Frankfurt 14 226 10 120\") == 68.3, \"Expected: 68.3, got: {}\".format(solution(\"Hamburg Bremen\", 3, \"Hamburg Bremen 15 68 10 5\", \"Hamburg Bremen 46 55 50 60\", \"Bremen Frankfurt 14 226 10 120\"))\nassert solution(\"Amsterdam Rotterdam\", 1, \"Amsterdam Utrecht 10 22 5 10\") == \"IMPOSSIBLE\", \"Expected: IMPOSSIBLE, got: {}\".format(solution(\"Amsterdam Rotterdam\", 1, \"Amsterdam Utrecht 10 22 5 10\"))"
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == expected_output_1\nassert solution(sample_input_2) == expected_output_2\n\nfrom typing import List"
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 'impossible'"
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Hamburg Bremen\\n3\\nHamburg Bremen 15 68 10 5\\nHamburg Bremen 46 55 50 60\\nBremen Frankfurt 14 226 10 120\\nSample Input 1\\nHamburg Bremen\\n3\\nHamburg Bremen 15 68 10 5\\nHamburg Bremen 46 55 50 60\\nBremen Frankfurt 14 226 10 120\\nSample Output 1\\n68.3\\n\") == 68.3\nassert solution(\"Amsterdam Rotterdam\\n1\\nAmsterdam Utrecht 10 22 5 10\\nSample Input 2\\nAmsterdam Rotterdam\\n1\\nAmsterdam Utrecht 10 22 5 10\\nSample Output 2\\nIMPOSSIBLE\\n\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('Hamburg Bremen\\n3\\nHamburg Bremen 15 68 10 5\\nHamburg Bremen 46 55 50 60\\nBremen Frankfurt 14 226 10 120\\nAmsterdam Rotterdam\\n1\\nAmsterdam Utrecht 10 22 5 10\\n') == '68.3'\nassert solution('Amsterdam Rotterdam\\n1\\nAmsterdam Utrecht 10 22 5 10\\n') == 'IMPOSSIBLE'"
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Hamburg Bremen\") == 68.3\nassert solution(\"Amsterdam Rotterdam\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"\"\"\n"
    },
    {
        "number": 3209,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('Hamburg Bremen\\n3\\nHamburg Bremen 15 68 10 5\\nHamburg Bremen 46 55 50 60\\nBremen Frankfurt 14 226 10 120') == 68.3\nassert solution('Amsterdam Rotterdam\\n1\\nAmsterdam Utrecht 10 22 5 10') == 'IMPOSSIBLE'"
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n*-*.*\\n|.|.|\\n*.*-*\\n|...|\\n*.*.*') == '3\\n'\nassert solution('2\\n*.*\\n...\\n*.*') == '4\\n'"
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_str), \"Test failed\""
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n*-*.*\\n|.|.|\\n*.*-*\\n|...|\\n*.*.*\\n\") == \"3\\n4\\n\", \"Test case 1 failed\"\nassert solution(\"2\\n*.*\\n...\\n*.*\\n\") == \"4\\n\", \"Test case 2 failed\""
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"3\", \"Expected output is 3, but got {}\".format(solution())"
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\npass\\n\""
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n*-*.*\\n|.|.|\\n*.*-*\\n|...|\\n*.*.*\") == \"3\\n\"\nassert solution(\"2\\n*.*\\n...\\n*.*\") == \"4\\n\""
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"3\""
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n*-*.*\\n|.|.|\\n*.*-*\\n|...|\\n*.*.*\") == \"3\\n\", \"Expected output is '3\\n', but got '{}'.\".format(solution(\"3\\n*-*.*\\n|.|.|\\n*.*-*\\n|...|\\n*.*.*\"))\nassert solution(\"2\\n*.*\\n...\\n*.*\") == \"4\\ndef solution(stdin: str) -> str:\\n    pass\", \"Expected output is '4\\ndef solution(stdin: str) -> str:\\n    pass', but got '{}'.\".format(solution(\"2\\n*.*\\n...\\n*.*\")))"
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input1) == expected_output1, f\"Expected output: {expected_output1}\\nGot: {solution(sample_input1)}\"\nassert solution(sample_input2) == expected_output2, f\"Expected output: {expected_output2}\\nGot: {solution(sample_input2)}\""
    },
    {
        "number": 3210,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == \"3\", \"Alice and Bob are playing Dots and Boxes.\"\nassert solution(sample_input_2) == \"4\", \"Alice and Bob are playing Dots and Boxes.\"\n\nsample_input_1 = \"3\\n*-*.*\\n|.|.|\\n*.*-*\\n|...|\\n*.*.*\"\nsample_input_2 = \"2\\n*.*\\n...\\n*.*\""
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8\\n12210020\\n4\\n1111\") == \"4\\n\"\nassert solution(\"4\\n1111\") == \"impossible\""
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('8\\n12210020') == 4, \"Test case 1 failed\"\nassert solution('4\\n1111') == 'impossible', \"Test case 2 failed\""
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"impossible\"  # put your code here\nassert solution() == \"impossible\"  # put your code here\nassert solution() == \"impossible\"  # put your code here\nassert solution() == \"impossible\"  # put your code here\nassert solution() == \"impossible\"  # put your code here\nassert solution() == \"impossible\"  # put your code here\nassert solution() == \"impossible\"  # put your code here\nassert solution() == \"impossible\"  # put your code here\nassert solution() == \"impossible\"  # put your code here\nassert solution() == \"impossible\"  # put your code here\nassert solution() == \"impossible\"  # put your code here\nassert solution() == \"impossible\"  # put your code here\nassert solution() == \"impossible\"  # put your code here\nassert solution() == \"impossible\"  # put your code here\nassert solution() == \"impossible\"  # put your code here\nassert solution() == \"impossible\"  # put your code here\nassert solution() == \"impossible\"  # put your code here\nassert solution() == \"impossible\"  # put your code here\nassert solution() == \"impossible\"  # put your code here\nassert solution() == \"impossible\"  # put your code here\nassert solution() == \"impossible\"  # put your code here\nassert solution() == \"impossible\"  # put your code here\nassert solution() == \"impossible\"  # put your code here\nassert solution() == \"impossible\"  # put your code here\nassert solution() == \"impossible\"  # put your code here\nassert solution() == \"impossible\"  # put your code here\nassert solution() == \"impossible\"  # put your code here\nassert solution() == \"impossible\"  # put your code here\nassert solution() == \"impossible\"  # put your code here\nassert solution() == \"impossible\"  # put your code here\nassert solution() == \"impossible\"  # put your code here\nassert solution() == \"impossible\"  # put your code here\nassert solution() == \"impossible\"  # put your code here\nassert solution() == \"impossible\"  # put your code here\nassert solution() == \"impossible\"  # put your code here\nassert solution() == \"impossible\"  # put your code here\nassert solution() == \"impossible\"  # put your code here\nassert solution() == \"impossible\"  # put your code here\nassert solution() == \"impossible\"  # put your code here\nassert solution() == \"impossible\"  # put your code here\nassert solution() == \"impossible\"  # put your code here\nassert solution() == \"impossible\"  # put your code here\nassert solution() == \"impossible\"  # put your code here\nassert solution() == \"impossible\"  # put your code here\nassert solution() == \"impossible\"  # put your code here\nassert solution() == \"impossible\"  # put your code here\nassert solution() == \"impossible\"  # put your code here\nassert solution() == \"impossible\"  # put your code here\nassert solution() == \"impossible\"  # put your code here\nassert solution() == \"impossible\"  # put your code here\nassert solution() == \"impossible\"  # put your code here\nassert solution() == \"impossible\"  # put your code here\nassert solution() == \"impossible\"  # put your code here\nassert solution() == \"impossible\"  # put your code here\nassert solution() == \"impossible\"  # put your code here\nassert solution() == \"impossible\"  # put your code here\nassert solution() == \"impossible\"  # put your code here\nassert solution() == \"impossible\"  # put your code here\nassert solution() == \"impossible\"  # put your code here\nassert solution() == \"impossible\"  # put your code here\nassert solution() == \"impossible\"  # put your code here\nassert solution() == \"impossible\"  # put your code here\nassert solution() == \"impossible\"  # put your code here\nassert solution() == \"impossible\"  # put your code here\nassert solution() == \"impossible\"  # put your code here\nassert solution() == \"impossible\"  # put your code here\nassert solution() == \"impossible\"  # put your code here\nassert solution() == \"impossible\"  # put your code here\nassert solution() == \"imp"
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8\\n12210020\\n\") == \"4\"\nassert solution(\"4\\n1111\\n\") == \"impossible\""
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"4\\n\", \"Expected output: 4\\n, but got: {}\".format(solution())"
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8\\n12210020\\n\") == \"4\\n\"\nassert solution(\"4\\n1111\\n\") == \"impossible\\n\""
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('8\\n12210020\\n4\\n1111') == '4'\nassert solution('4\\n1111') == 'impossible'"
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('8\\n12210020\\n4\\n1111\\n') == '4\\n'\nassert solution('4\\n1111\\n') == 'impossible\\n'\n"
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('8\\n12210020') == 4, \"The correct result is 4, but the function returned '{}' instead.\".format(solution('8\\n12210020'))\nassert solution('4\\n1111') == 'impossible', \"The correct result is impossible, but the function returned '{}' instead.\".format(solution('4\\n1111'))"
    },
    {
        "number": 3211,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8\\n12210020\") == \"4\"\nassert solution(\"4\\n1111\") == \"impossible\"\n\nfrom typing import List"
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n500 500 499\\n0 0 999\\n1000 1000 200') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\\n'\n\nassert solution('4\\n250 250 300\\n750 250 300\\n250 750 300\\n750 750 300') == 'Bill will be bitten.\\n'"
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\\n\"\nprint(\"Bill will be bitten.\")"
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n500 500 499\\n0 0 999\\n1000 1000 200') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).'\nassert solution('4\\n250 250 300\\n750 250 300\\n250 750 300\\n750 750 300') == 'Bill will be bitten.'\n"
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\\n\"\nassert solution() == \"Bill will be bitten.\\n\"\nassert solution() == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\\n\"\nassert solution() == \"Bill will be bitten.\\n\"\nassert solution() == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\\n\""
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n500 500 499\\n0 0 999\\n1000 1000 200\") == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\"\nassert solution(\"4\\n250 250 300\\n750 250 300\\n250 750 300\\n750 750 300\") == \"Bill will be bitten.\""
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n500 500 499\\n0 0 999\\n1000 1000 200') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\\n'\nassert solution('4\\n250 250 300\\n750 250 300\\n250 750 300\\n750 750 300') == 'Bill will be bitten.\\n'"
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\\n\""
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\\n\"\n\nassert solution(input()) == \"Bill will be bitten.\\n\"\n\nassert solution(input()) == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\\n\""
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n500 500 499\\n0 0 999\\n1000 1000 200\") == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\\n\"\nassert solution(\"4\\n250 250 300\\n750 250 300\\n250 750 300\\n750 750 300\") == \"Bill will be bitten.\\n\"\nassert solution(\"5\\n1000 1000 1000\\n1000 500 1000\\n500 1000 1000\\n500 500 1000\") == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 500.00).\\n\""
    },
    {
        "number": 3212,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n500 500 499\\n0 0 999\\n1000 1000 200\") == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\\n\"\nassert solution(\"4\\n250 250 300\\n750 250 300\\n250 750 300\\n750 750 300\") == \"Bill will be bitten.\\n\""
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 3\\n++xx+x++\") == \"++xx+o++\"\nassert solution(\"8 3\\nxxxxxxxx\") == \"xxoooooo\""
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('8 3\\n++xx+x++\\n') == '++xx+o++\\n'\nassert solution('8 3\\nxxxxxxxx\\n') == 'xxoooooo\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('8 3\\n++xx+x++') == '++xx+o++'\nassert solution('8 3\\nxxxxxxxx') == 'xxoooooo'"
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"xxoooooo\"\n"
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 3\\n++xx+x++\") == \"++xx+o++\", \"Test 1 failed\"\nassert solution(\"8 3\\nxxxxxxxx\") == \"xxoooooo\", \"Test 2 failed\""
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('8 3\\n++xx+x++') == '++xx+o++'\nassert solution('8 3\\nxxxxxxxx') == 'xxoooooo'"
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"Sample Input 1\") == \"Sample Output 1\"\nassert solution(\"Sample Input 2\") == \"Sample Output 2\""
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution"
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 3\\n++xx+x++\") == \"++xx+o++\"\nassert solution(\"8 3\\nxxxxxxxx\") == \"xxoooooo\""
    },
    {
        "number": 3213,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"tests/test_solution.txt\").read()) == \"xooooo\""
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Lost is Close to Lose\") == \"close: lose\\nhe: the\\nin: inc is\\ninc: in\\nis: in\\nlose: close lost\\nlost: lose\\nthe: he\\n\"\nassert solution(\"The fox said, \\\"When?\\\" \\\"Not till 12 o'clock\\\", replied the hen. \\\"That clock is stopped, it will never strike.\\\"\") == \"clock: oclock\\nhe: hen the\\nen: en the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe: hen the\\nhe"
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Lost is Close to Lose\\n\\n\"\n                   \"Better Documents Inc. wants to add Typo Checking in to the\\n\"\n                   \"next generation of word processors,\\n\"\n                   \"he said.\\n\\n\"\n                   \"Sample Output 1: close: lose\\nhe: the\\ninc: inc is\\ninc: in\\nis: in\\nlose: close lost\\nlost: lose\\nthe: he\\n\\n\"\n                   \"Sample Input 2: The fox said, \\\"When?\\\"\\n\"\n                   \"\\\"Not till 12 o'clock\\\", replied the hen.\\n\"\n                   \"\\\"That clock is stopped, it will never strike.\\\",\\n\"\n                   \"he said.\\n\\n\"\n                   \"Sample Output 2: clock: oclock\\nhe: hen the\\nhen: he when\\nis: it\\nit: is\\noclock: clock\\nthe: he\\ntill: will\\nwhen: hen\\nwill: till\\ndef solution(stdin: str) -> str:\\n    pass\\n\") == \"\"\"\nclose: lose\nhe: the\ninc: inc is\ninc: in\nis: in\nlose: close lost\nlost: lose\nthe: he\n\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Lost is Close to Lose\\n\\n\"\n                 \"Better Documents Inc. wants to add Typo Checking in to the next generation of word processors,\\n\"\n                 \"he said.***\\n\"\n                 \"Sample Input 1:\\n\"\n                 \"Lost is Close to Lose\\n\"\n                 \"***\\n\"\n                 \"Sample Output 1:\\n\"\n                 \"close: lose\\n\"\n                 \"he: the\\n\"\n                 \"in: inc is\\n\"\n                 \"inc: in\\n\"\n                 \"is: in\\n\"\n                 \"lose: close lost\\n\"\n                 \"lost: lose\\n\"\n                 \"the: he\\n\") == \"close: lose\\nhe: the\\nin: inc is\\ninc: in\\nis: in\\nlose: close lost\\nlost: lose\\nthe: he\\n\"\n\nassert solution(\"The fox said, \\\"When?\\\"\\n\"\n                 \"Not till 12 o'clock, replied the hen.\\n\"\n                 \"That clock is stopped, it will never strike.\\n\"\n                 \"***\\n\"\n                 \"Sample Input 2:\\n\"\n                 \"The fox said, \\\"When?\\\"\\n\"\n                 \"***\\n\"\n                 \"Sample Output 2:\\n\"\n                 \"clock: oclock\\n\"\n                 \"he: hen the\\n\"\n                 \"hen: he when\\n\"\n                 \"is: it\\n\"\n                 \"it: is\\n\"\n                 \"oclock: clock\\n\"\n                 \"the: he\\n\"\n                 \"till: will\\n\"\n                 \"when: hen\\n\"\n                 \"will: till\\n\"\n                 \"def solution(stdin: str) -> str: pass\\n\") == \"clock: oclock\\nhe: hen the\\nhen: he when\\nis: it\\nit: is\\noclock: clock\\nthe: he\\ntill: will\\nwhen: hen\\nwill: till\\n\""
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Lost is Close to Lose\\n\\n\" +\n                 \"Better Documents Inc. wants to add Typo Checking in to the\\n\" +\n                 \"next generation of word processors,\\n\" +\n                 \"he said. BetterDocuments Inc. is contemplating the next generation of word processors.\\n\" +\n                 \"Now, nearly every word processor includes a Spell Checker.\\n\" +\n                 \"BDI, however, is looking forward to replacing that with a true Typo Checker.\\n\" +\n                 \"We've all been caught, after relying on a spell checker, by typing mistakes (\\\"typos\\\") that just happen to wind up as a correctly spelled word, just not the word we intended.\\n\" +\n                 \"BDI hopes to use AI to determine when a word's context suggests that it is out of place and probably should have been a different, but similarly spelled, word.\\n\" +\n                 \"As a first step in this process, they want to see how common such similar words really are in ordinary text.\\n\" +\n                 \"Write a program to read in paragraphs of text and to produce a list of similarly spelled words occurring in that text.\\n\" +\n                 \"For the purpose of this program, a word is any maximal string of non-whitespace characters containing at least one alphabetic character.\\n\" +\n                 \"Whitespace can be either blanks or line terminators (\\\"\\\\r\\\" or \\\"\\\\n\\\").\\n\" +\n                 \"The core of a word is what you have left after removing any non-alphabetic characters and replacing any upper-case alphabetic characters to their lower-case equivalents.\\n\" +\n                 \"Two words are considered to be similarly spelled if the core of one word can be converted to the core of the other word by a single application of any one of the following transformations:\\n\" +\n                 \" - Delete a single character.\\n\" +\n                 \" - Insert a single alphabetic character.\\n\" +\n                 \" - Replace a single character by a different alphabetic character.\\n\" +\n                 \" - Transpose (exchange) any two adjacent characters.\\n\" +\n                 \"\\n\" +\n                 \"-----Input-----\\n\" +\n                 \"Input consists of $1$ to $100$ lines of text, followed by an end of input marker in the form of a line containing only the string \\\"***\\\".\\n\" +\n                 \"\\n\" +\n                 \"Each line of text will contain $0$ to $80$ ASCII characters (not counting line terminators).\\n\" +\n                 \"\\n\" +\n                 \"-----Output-----\\n\" +\n                 \"For each word core in the text that has one or more similarly spelled words, print a line consisting of\\n\" +\n                 \" - That word core\\n\" +\n                 \" - A colon (\\\":\\\") followed by a blank\\n\" +\n                 \" - A list of all similarly spelled word cores (with no duplicates and not containing the core to the left of the colons), in alphabetic order, separated by single spaces.\\n\" +\n                 \"The lines printed should be in alphabetic order of the word cores to the left of the colon.\\n\" +\n                 \"If there are no similarly spelled words in the input, print a single line containing the string \\\"***\\\".\\n\" +\n                 \"-----Examples-----\\n\" +\n                 \"Sample Input 1:\\n\" +\n                 \"Lost is Close to Lose\\n\" +\n                 \"-----Output 1:\\n\" +\n                 \"close: lose\\n\" +\n                 \"he: the\\n\" +\n                 \"in: inc is\\n\" +\n                 \"inc: in\\n\" +\n                 \"is: in\\n\" +\n                 \"lose: close lost\\n\" +\n                 \"lost: lose\\n\" +\n                 \"the: he\\n\" +\n                 \"\\n\" +\n                 \"Sample Input 2:\\n\" +\n                 \"The fox said, \\\"When?\\\"\\n\" +\n                 \"\\\"Not till 12 o'clock\\\", replied the hen.\\n\" +\n                 \"\\\"That clock is stopped, it will never strike.\\\",\\n\" +\n                 \"he said.\\n\" +\n                 \"-----Output 2:\\n\" +\n                 \"clock: oclock\\n\" +\n                 \"he: hen the\\n\" +\n                 \"hen: he when\\n\" +\n                 \"is: it\\n\" +\n                 \"it: is\\n\" +\n                 \"oclock: clock\\n\" +\n                 \"the: he\\n\" +\n                 \"till: will\\n\" +\n                 \"when: hen\\n\" +\n                 \"will: till\\n\") == \"close: lose\\nhe: the\\ninc: inc is"
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('Lost is Close to Lose') == 'close: lose'\nassert solution('The fox said, \"When?\"') == 'clock: oclock'\nassert solution('The fox said, \"When?\"') == 'clock: oclock'"
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '''\nclose: lose\nhe: the\nin: inc is\ninc: in\nis: in\nlose: close lost\nlost: lose\nthe: he\n'''\n\nimport re"
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input1) == output1, \"Test 1 failed.\"\nassert solution(input2) == output2, \"Test 2 failed.\""
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"sample_input1.txt\").read()) == \"close: lose\\nhe: the\\nin: inc is\\inc: in\\nis: in\\nlose: close lost\\nlost: lose\\nthe: he\\n\"\nassert solution(open(\"sample_input2.txt\").read()) == \"clock: oclock\\nhe: hen the\\nen: he when\\nis: it\\nit: is\\noclock: clock\\nthe: he\\nwill: till\\nwhen: hen\\nwill: till\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3214,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\nLost is Close to Lose\n''') == '''\nclose: lose\nhe: the\nin: inc is\ninc: in\nis: in\nlose: close lost\nlost: lose\nthe: he\n'''\n\nassert solution('''\nThe fox said, \"When?\"\n\"Not till 12 o'clock\", replied the hen.\n\"That clock is stopped, it will never strike.\", he said.\n''') == '''\nclock: oclock\nhe: hen the\nhen: he when\nis: it\nit: is\noclock: clock\nthe: he\ntill: will\nwhen: hen\nwill: till\n"
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\\n1 2 7 3 8 9 4 5 10 6\") == \"1\\n\"\nassert solution(\"10\\n3 8 1 9 4 5 2 7 10 6\") == \"2\\n\""
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output() # Replace this line with your code for the solution"
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"2\""
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '1', 'Your solution is incorrect.'"
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10\\n1 2 7 3 8 9 4 5 10 6\") == \"1\", \"Test Case 1 failed\"\nassert solution(\"10\\n3 8 1 9 4 5 2 7 10 6\") == \"2\", \"Test Case 2 failed\""
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10\\n1 2 7 3 8 9 4 5 10 6\") == \"1\\n\", \"Test case 1 failed\"\nassert solution(\"10\\n3 8 1 9 4 5 2 7 10 6\") == \"2\\n\", \"Test case 2 failed\""
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10\\n1 2 7 3 8 9 4 5 10 6\") == \"1\\n\", \"The output should be '1'\\n\"\nassert solution(\"10\\n3 8 1 9 4 5 2 7 10 6\") == \"2\\n\", \"The output should be '2'\\n\""
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10\\n1 2 7 3 8 9 4 5 10 6\") == \"1\\n\", \"Expected 1, but got: {}.\".format(solution(\"10\\n1 2 7 3 8 9 4 5 10 6\"))\n\nassert solution(\"10\\n3 8 1 9 4 5 2 7 10 6\") == \"2\\n\", \"Expected 2, but got: {}.\".format(solution(\"10\\n3 8 1 9 4 5 2 7 10 6\"))"
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Test case {test_case_num + 1} failed. Expected: {expected_output}, Received: {solution(input())}\""
    },
    {
        "number": 3215,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r').read()) == '1\\n'\nassert solution(open('input2.txt', 'r').read()) == '2\\n'"
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0.142857 6\") == \"1/7\"\nassert solution(\"1.6 1\") == \"5/3\""
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"$0.142857$ 6\") == \"1/7\"\nassert solution(\"$1.6 1\") == \"5/3\""
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"$0.142857$ 6\") == \"1/7\"\nassert solution(\"1.6 1\") == \"5/3\""
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0.142857 6\") == \"1/7\", \"Expected 1/7, got {}\".format(solution(\"0.142857 6\"))\nassert solution(\"1.6 1\") == \"5/3\", \"Expected 5/3, got {}\".format(solution(\"1.6 1\"))"
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0.142857 6\") == \"1/7\", \"Test case 1 failed\"\nassert solution(\"1.6 1\") == \"5/3\", \"Test case 2 failed\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0.142857 6\") == \"1/7\"\nassert solution(\"1.6 1\") == \"5/3\""
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0.142857 6\") == \"1/7\", \"Invalid output\"\nassert solution(\"1.6 1\") == \"5/3\", \"Invalid output\""
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"0.142857 6\n    \"\"\"\n) == \"\"\"1/7\n\"\"\"\n\nassert solution(\n    \"\"\"1.6 1\n    \"\"\"\n) == \"\"\"5/3\n\"\"\""
    },
    {
        "number": 3216,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0.142857 6\") == \"1/7\", \"Test 1 failed\"\nassert solution(\"1.6 1\") == \"5/3\", \"Test 2 failed\""
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=input()) == output(), f\"Expected {output()}, got {solution(stdin=input())}\"\n\nfrom typing import List"
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 0 0\\n0 0 1\\n\") == \"6\\n\"\nassert solution(\"2\\n0 0 0\\n0 0 1\\n\") == \"10\\n\""
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"6\\n\"\nassert solution(open(\"input2.txt\", \"r\")) == \"10\\n\""
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_str) == expected_output, f\"Test case {tc_num} failed. Expected output: {expected_output}, Got: {solution(input_str)}\""
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed for solution({stdin})\""
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 6, \"The correct answer is 6, but it is: {}\".format(solution())"
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == 11\nassert solution(open('input2.txt', 'r')) == 16"
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n1\n0 0 0\n''') == '6'\n\nassert solution('''\n2\n0 0 0\n0 0 1\n''') == '10'"
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"6\\n\"\nassert solution() == \"10\\n\""
    },
    {
        "number": 3217,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 0 0\\n0 0 1\") == \"6\"\nassert solution(\"0 0 0\\n0 0 1\\n0 0 2\") == \"10\""
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n-1 2 -1\\n2 2\\n1 -1 1\\n\") == 1, \"Error 1: Solution should return 1 for the given input.\"\nassert solution(\"7\\n-1 4 5 1 0 -1 -1\\n-1 3 2 0 0 1\\n-1 4 -1 1 0 -1 -1\\n1 3 4 2 2 4\\n0 2 3 -1 4 4 2\\n-1 4 4 3 3 2\\n1 -1 -1 -1 4 2 -1\\n\") == 1, \"Error 2: Solution should return 1 for the given input.\"\nassert solution(\"3\\n-1 2 -1\\n2 2\\n1 -1 1\\n\") == 1, \"Error 3: Solution should return 1 for the given input.\"\nassert solution(\"3\\n-1 2 -1\\n2 2\\n1 -1 1\\n\") == 1, \"Error 4: Solution should return 1 for the given input.\""
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == \"1\", \"Expected output 1, got: \" + solution(sample_input1)\nassert solution(sample_input2) == \"1\", \"Expected output 2, got: \" + solution(sample_input2)\n\nsample_input1 = \"\"\"3\n-1 2 -1\n2 2\n1 -1 1\n\"\"\"\n\nsample_input2 = \"\"\"7\n-1 4 5 1 0 -1 -1\n-1 3 2 0 0 1\n-1 4 -1 1 0 -1 -1\n1 3 4 2 2 4\n0 2 3 -1 4 4 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n\"\"\""
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"3\n-1 2 -1\n2 2\n1 -1 1\"\"\") == \"1\\n\"\nassert solution(\"\"\"7\n-1 4 5 1 0 -1 -1\n-1 3 2 0 0 1\n-1 4 -1 1 0 -1 -1\n1 3 4 2 2 4\n0 2 3 -1 4 4 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\"\"\") == \"1\\n\""
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n-1 2 -1\\n2 2\\n1 -1 1\\n\") == \"1\\n\"\nassert solution(\"7\\n-1 4 5 1 0 -1 -1\\n-1 3 2 0 0 1\\n-1 4 -1 1 0 -1 -1\\n1 3 4 2 2 4\\n0 2 3 -1 4 4 2\\n-1 4 4 3 3 2\\n1 -1 -1 -1 4 2 -1\\n\") == \"1\\n\""
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n-1 2 -1\\n2 2\\n1 -1 1\") == \"1\"\nassert solution(\"7\\n-1 4 5 1 0 -1 -1\\n-1 3 2 0 0 1\\n-1 4 -1 1 0 -1 -1\\n1 3 4 2 2 4\\n0 2 3 -1 4 4 2\\n-1 4 4 3 3 2\\n1 -1 -1 -1 4 2 -1\") == \"1\""
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n3\n-1 2 -1\n2 2\n1 -1 1\n''') == '''1'''\n\nassert solution('''\n7\n-1 4 5 1 0 -1 -1\n-1 3 2 0 0 1\n-1 4 -1 1 0 -1 -1\n1 3 4 2 2 4\n0 2 3 -1 4 4 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n''') == '''1'''"
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=input()) == \"1\"\nassert solution(stdin=\"-1 2 -1\\n2 2\\n1 -1 1\") == \"1\"\nassert solution(stdin=\"-1 4 5 1 0 -1 -1\\n-1 3 2 0 0 1\\n-1 4 -1 1 0 -1 -1\\n1 3 4 2 2 4\\n0 2 3 -1 4 4 2\\n-1 4 4 3 3 2\\n1 -1 -1 -1 4 2 -1\") == \"1\"\n"
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1\\n\", \"Expected output: 1, but got: \" + solution(stdin)"
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 1, \"Expected 1, but got: {}\".format(solution(3))  # Example 1\nassert solution(7) == 1, \"Expected 1, but got: {}\".format(solution(7))  # Example 2"
    },
    {
        "number": 3218,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 1, \"The given input is not correct.\"\nassert solution(7) == 1, \"The given input is not correct.\""
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1001\") == \"3\", \"Input 1 failed\"\nassert solution(\"1111\") == \"1\", \"Input 2 failed\""
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1001') == '3', '1001 should have 3 different representations with 2 as a digit'\nassert solution('1111') == '1', '1111 should have 1 different representation with 2 as a digit'"
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1001\") == \"3\"\nassert solution(\"1111\") == \"1\""
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1001') == '3', 'Test 1 failed'\nassert solution('1111') == '1', 'Test 2 failed'\n"
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1001') == '3'\nassert solution('1111') == '1'"
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1001\") == \"3\"\nassert solution(\"1111\") == \"1\""
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"3\", \"Incorrect output\"\n"
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1001\") == \"3\", \"Test case 1 failed\"\nassert solution(\"1111\") == \"1\", \"Test case 2 failed\""
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1001\") == \"3\", \"Test 1 failed\"\nassert solution(\"1111\") == \"1\", \"Test 2 failed\""
    },
    {
        "number": 3219,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1001\") == \"3\"\nassert solution(\"1111\") == \"1\""
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(Solution()) == Solution().solution()"
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, \"Test case failed\""
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 1 1\\n\") == \"LLL\"\nassert solution(\"5\\n1 2 2 1 2\\n\") == \"LLRLR\""
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 1 1\") == \"LLL\\n\"\nassert solution(\"5\\n1 2 2 1 2\") == \"LLRLR\\n\""
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n1 1 1\\n') == 'LLL\\n'\nassert solution('5\\n1 2 2 1 2\\n') == 'LLRLR\\n'"
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Actual output: {solution(input())}\""
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"3\\n1 1 1\\n\") == \"LLL\"\nassert solution(stdin=\"5\\n1 2 2 1 2\\n\") == \"LLRLR\""
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"LLL\", \"Output should be 'LLL'.\"\n"
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n1 1 1\\n') == 'LLL\\n'\nassert solution('5\\n1 2 2 1 2\\n') == 'LLRLR\\n'"
    },
    {
        "number": 3220,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"LLL\""
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"Test failed for input {stdin}, expected output {expected}, but got {solution(stdin)}\""
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('7 7 10\\n1 2 1000000\\n2 3 2000000\\n3 4 3000000\\n4 5 4000000\\n5 6 5000000\\n6 7 6000000\\n7 1 7000000\\n') == '49000000000070\\n'\nassert solution('6 6 7\\n1 3 1000000\\n3 5 3000000\\n5 1 5000000\\n2 4 2000000\\n4 6 4000000\\n6 2 6000000\\n') == '25000000000021\\n'"
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 49000000000070, \"Your solution is incorrect.\""
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 7 10\\n1 2 1000000\\n2 3 2000000\\n3 4 3000000\\n4 5 4000000\\n5 6 5000000\\n6 7 6000000\\n7 1 7000000\") == 49000000000070\nassert solution(\"6 6 7\\n1 3 1000000\\n3 5 3000000\\n5 1 5000000\\n2 4 2000000\\n4 6 4000000\\n6 2 6000000\") == 25000000000021"
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == expected_output, f\"The solution is incorrect. Expected {expected_output}, but got {solution}.\""
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 7 10\\n1 2 1000000\\n2 3 2000000\\n3 4 3000000\\n4 5 4000000\\n5 6 5000000\\n6 7 6000000\\n7 1 7000000\") == \"49000000000070\"\nassert solution(\"6 6 7\\n1 3 1000000\\n3 5 3000000\\n5 1 5000000\\n2 4 2000000\\n4 6 4000000\\n6 2 6000000\") == \"25000000000021\""
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('7 7 10\\n1 2 1000000\\n2 3 2000000\\n3 4 3000000\\n4 5 4000000\\n5 6 5000000\\n6 7 6000000\\n7 1 7000000') == '49000000000070'\nassert solution('6 6 7\\n1 3 1000000\\n3 5 3000000\\n5 1 5000000\\n2 4 2000000\\n4 6 4000000\\n6 2 6000000') == '25000000000021'"
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('7 7 10\\n1 2 1000000\\n2 3 2000000\\n3 4 3000000\\n4 5 4000000\\n5 6 5000000\\n6 7 6000000\\n7 1 7000000') == '49000000000070'\nassert solution('6 6 7\\n1 3 1000000\\n3 5 3000000\\n5 1 5000000\\n2 4 2000000\\n4 6 4000000\\n6 2 6000000') == '25000000000021'"
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('7 7 10\\n1 2 1000000\\n2 3 2000000\\n3 4 3000000\\n4 5 4000000\\n5 6 5000000\\n6 7 6000000\\n7 1 7000000') == 49000000000070\nassert solution('6 6 7\\n1 3 1000000\\n3 5 3000000\\n5 1 5000000\\n2 4 2000000\\n4 6 4000000\\n6 2 6000000') == 25000000000021"
    },
    {
        "number": 3221,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 49000000000070, \"Invalid output\""
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 2\\n\") == \"2\\n2\\n0\\n1\\n2\\n2\\n3\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 3\\n\") == \"Yeah!\""
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 2\") == 2\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 3\") == \"Yeah!\"\n"
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2"
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 2\") == \"2\\n2\\n0\\n1\\n2\\n2\\n3\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 3\") == \"Yeah!\\n\""
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('example1.txt', 'r')) == '2\\n2\\n0\\n1\\n2\\n2\\n3\\n'\nassert solution(open('example2.txt', 'r')) == 'Yeah!\\n'"
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 2\\n\") == \"2\\n2\\n0\\n1\\n2\\n2\\n3\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 3\\n\") == \"Yeah!\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 4\\n\") == \"Yeah!\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 0\\n\") == \"Yeah!\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 2\\n\") == \"2\\n2\\n0\\n1\\n2\\n2\\n3\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 1\\n\") == \"2\\n2\\n0\\n1\\n2\\n2\\n3\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 0\\n\") == \"2\\n2\\n0\\n1\\n2\\n2\\n3\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 0\\n\") == \"2\\n2\\n0\\n1\\n2\\n2\\n3\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 2\\n\") == \"2\\n2\\n0\\n1\\n2\\n2\\n3\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 1\\n\") == \"2\\n2\\n0\\n1\\n2\\n2\\n3\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 0\\n\") == \"2\\n2\\n0\\n1\\n2\\n2\\n3\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 0\\n\") == \"2\\n2\\n0\\n1\\n2\\n2\\n3\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 2\\n\") == \"2\\n2\\n0\\n1\\n2\\n2\\n3\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 1\\n\") == \"2\\n2\\n0\\n1\\n2\\n2\\n3\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 0\\n\") == \"2\\n2\\n0\\n1\\n2\\n2\\n3\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 0\\n\") == \"2\\n2\\n0\\n1\\n2\\n2\\n3\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 2\\n\") == \"2\\n2\\n0\\n1\\n2\\n2\\n3\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 1\\n\") == \"2\\n2\\n0\\n1\\n2\\n2\\n3\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 0\\n\") == \"2\\n2\\n0\\n1\\n2\\n2\\n3\\n\"\nassert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 0\\n\") == \"2\\n2\\n0\\n1\\n2\\n2\\n3\\n\"\nassert solution(\""
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\n0 1\\n1 0\\n2 3\\n3 2\") == \"2\\n2\\n0\\n1\\n2\\n2\\n3\""
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 4\\n0 1\\n1 0\\n2 3\\n3 2\\n') == ['2', '2', '0', '1', '2', '2', '3']\nassert solution('4 4\\n0 1\\n1 0\\n2 3\\n3 3\\n') == ['Yeah!']\n\nfrom typing import List"
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    4 4\n    0 1\n    1 0\n    2 3\n    3 2\n    \"\"\"\n) == \"\"\"\n2\n2\n0\n1\n2\n2\n3\n\"\"\"\n\nassert solution(\n    \"\"\"\n    4 4\n    0 1\n    1 0\n    2 3\n    3 3\n    \"\"\"\n) == \"Yeah!\""
    },
    {
        "number": 3222,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2"
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"POSSIBLE\\n1 3\\n2 3\\n\""
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 1 2\\n\") == \"POSSIBLE\\n1 3\\n2 3\"\nassert solution(\"2\\n1 2\\n\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == 'POSSIBLE\\n1 3\\n2 3\\n', \"Incorrect output\"\nassert solution(sample_input_2) == 'IMPOSSIBLE\\n', \"Incorrect output\""
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 1 2\\n\") == \"POSSIBLE\\n1 3\\n2 3\\n\"\n\nassert solution(\"2\\n1 2\\n\") == \"IMPOSSIBLE\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 'POSSIBLE\\n1 3\\n2 3'"
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin='3\\n1 1 2\\n2\\n1 2\\n') == 'POSSIBLE\\n1 3\\n2 3'\nassert solution(stdin='2\\n1 2\\n') == 'IMPOSSIBLE'"
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 1 2\\n2\\n1 2\\n\") == \"POSSIBLE\\n1 3\\n2 3\"\nassert solution(\"2\\n1 2\\n\") == \"IMPOSSIBLE\"\n\nfrom typing import List"
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 1 2\\n2\\n1 2\\n\") == \"POSSIBLE\\n1 3\\n2 3\\n\"\n\nassert solution(\"2\\n1 2\\n\") == \"IMPOSSIBLE\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3223,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '''POSSIBLE\n1 3\n2 3\n'''\n"
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input1) == \"0.5 0.5 0.5\"\nassert solution(input2) == \"0.0 0.0 -0.0\""
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"0.5 0.5 0.5\\n0.0 0.0 -0.0\"\n"
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == \"0.5 0.5 0.5\", \"Sample Output 1\"\nassert solution(sample_input2) == \"0.0 0.0 -0.0\", \"Sample Output 2\""
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '0.5 0.5 0.5'\nassert solution(stdin) == '0.0 0.0 -0.0'"
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Test {test_case} failed\""
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 0 0\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0.5 0.5 0.5\"\nassert solution(\"-1 0 0\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0.0 0.0 -0.0\""
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n\") == \"0.5 0.5 0.5\"\nassert solution(\"-1 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n\") == \"0.0 0.0 -0.0\""
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n0 0 0\n1 0 0\n0 1 0\n0 0 1\n''') == '0.5 0.5 0.5'\n\nassert solution('''\n-1 0 0\n1 0 0\n0 1 0\n0 0 1\n''') == '0.0 0.0 -0.0'"
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 0 0\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0.5 0.5 0.5\"\nassert solution(\"-1 0 0\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0.0 0.0 -0.0\""
    },
    {
        "number": 3224,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"Error: No solution for the given input.\""
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"\"\"\n0\n17 17 17\n\"\"\""
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3, [3, 6, 2, 3, 2, 2, 2, 1, 5, 6]) == \"2\"\nassert solution(2, [17, 17, 17]) == \"0\""
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10\\n3 6 2 3 2 2 2 1 5 6\\n\") == \"2\\n3 2 2 1 5\\n3 2 2\\n6 6\\n\"\nassert solution(\"3\\n17 17 17\\n\") == \"0\\n17 17 17\\n\""
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10\\n3 6 2 3 2 2 2 1 5 6\") == \"2\\n3 2 2 1 5\\n3 2 2\"\nassert solution(\"3\\n17 17 17\") == \"0\\n17 17 17\"\n"
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"Expected Output\\n\", \"The output is incorrect.\""
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"Output\", \"Expected Output but got {}\".format(solution(stdin))"
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10\\n3 6 2 3 2 2 2 1 5 6\") == \"2\\n3 2 2 1 5\\n3 2 2\\n6 6\"\nassert solution(\"3\\n17 17 17\") == \"0\\n17 17 17\""
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"Output\", \"Your solution is incorrect\""
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"\"\"\n2\n3 2 2 1 5\n3 2 2\n6 6\n\"\"\""
    },
    {
        "number": 3225,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\\n3 2 2 1 5\\n3 2 2\"\nassert solution() == \"0\\n17 17 17\""
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_1) == \"IMPOSSIBLE\"\nassert solution(input_2) == \"74.6666666667\"\n\nfrom typing import List"
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"IMPOSSIBLE\""
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\\n3 2\\n\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"IMPOSSIBLE\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 2 1\\n1 2 7\\n2 3 8\\n1\\n3 2\\n') == 'IMPOSSIBLE'\nassert solution('3 2 1\\n1 2 7\\n2 3 8\\n1\\n2 3\\n') == '74.6666666667'\n\nfrom typing import List"
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == IMPOSSIBLE\n"
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input1) == \"IMPOSSIBLE\"\nassert solution(sample_input2) == \"74.6666666667\"\n\nfrom typing import List"
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\\n3 2\\n\") == \"IMPOSSIBLE\"\nassert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\\n2 3\\n\") == \"74.6666666667\""
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3226,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"IMPOSSIBLE\""
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 6\\n1 2\\n2 3\\n3 1\\n3 4\\n1 4\\n4 5\\n\") == \"1\\n2\\n1\\n2\\n2\\n1\\n\"\nassert solution(\"7 7\\n1 2\\n2 3\\n3 1\\n4 5\\n5 6\\n6 7\\n7 4\\n\") == \"0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n\"\n\nfrom collections import defaultdict"
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Input: {input()}, Output: {solution(input())}\""
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"0\\n0\\n0\\n2\\n1\\n2\\n2\\n1\\n0\"\n\nfrom typing import List"
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 6\\n1 2\\n2 3\\n3 1\\n3 4\\n1 4\\n4 5\\n\") == \"1\\n2\\n1\\n2\\n2\\n1\""
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '0\\n1\\n2\\n1\\n2\\n2\\n1\\n'"
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"0\\n2\\n2\\n1\\n2\\n2\\n1\"\nassert solution(open(\"input.txt\", \"r\")) == \"1\\n2\\n2\\n1\\n2\\n2\\n1\"\nassert solution(open(\"input.txt\", \"r\")) == \"0\\n2\\n2\\n1\\n2\\n2\\n1\"\nassert solution(open(\"input.txt\", \"r\")) == \"1\\n2\\n2\\n1\\n2\\n2\\n1\"\nassert solution(open(\"input.txt\", \"r\")) == \"0\\n2\\n2\\n1\\n2\\n2\\n1\"\nassert solution(open(\"input.txt\", \"r\")) == \"1\\n2\\n2\\n1\\n2\\n2\\n1\""
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 6\\n1 2\\n2 3\\n3 1\\n3 4\\n1 4\\n4 5\\n\\n7 7\\n1 2\\n2 3\\n3 1\\n4 5\\n5 6\\n6 7\\n7 4') == '1\\n2\\n1\\n2\\n2\\n1\\n'"
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == {\n    # Example 1\n    \"1\": 1,\n    \"2\": 2,\n    \"1\": 1,\n    \"2\": 2,\n    \"1\": 1,\n    # Example 2\n    \"0\": 0,\n    \"def solution(stdin: str) -> str:\":\n        pass\n}"
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(None) == \"0\"\n\nfor _ in range(int(input())):\n    A, B = map(int, input().split())\n    if not A == B:\n        for i in range(A, B):\n            road = f\"{i} {i+1}\"\n            chains = [1, 2]\n            for j in range(i+1, B):\n                if i in chains:\n                    chains.append(2)\n                else:\n                    chains.append(1)\n            print(\"1\" if all(chain == chains[i] for i, chain in enumerate(chains)) else \"2\")"
    },
    {
        "number": 3227,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"1\\n2\\n1\\n2\\n2\\n1\\n\", \"Your solution is incorrect\""
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2"
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected_output, f\"Output {solution(stdin)} is not as expected. Expected {expected_output}.\""
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == '10'\nassert solution(sample_input_2) == '5'"
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 10 2\\n0\\n15\\n30\\n45\") == \"10\"\nassert solution(\"4 10 3\\n0\\n15\\n30\\n45\") == \"5\""
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"10\"\nassert solution(open(\"input_2.txt\", \"r\").read()) == \"5\""
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n4 10 2\n0\n15\n30\n45\n''') == '10'\n\nassert solution('''\n4 10 3\n0\n15\n30\n45\n''') == '5'"
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 10 2\\n0\\n15\\n30\\n45') == 10\nassert solution('4 10 3\\n0\\n15\\n30\\n45') == 5"
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 10 2\\n0\\n15\\n30\\n45\\n\") == \"10\\n\"\nassert solution(\"4 10 3\\n0\\n15\\n30\\n45\\n\") == \"5\\n\""
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 10 2\\n0\\n15\\n30\\n45\") == \"10\"\nassert solution(\"4 10 3\\n0\\n15\\n30\\n45\") == \"5\""
    },
    {
        "number": 3228,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 10 2\\n0\\n15\\n30\\n45\") == \"10\"\nassert solution(\"4 10 3\\n0\\n15\\n30\\n45\") == \"5\""
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"4 2\\n50 50 75\\n25 25 25\") == 2\nassert solution(stdin=\"5 2\\n50 50 50 50\\n25 25 25 25\") == 1\n\nfrom typing import List"
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"sample_input.txt\").read()) == \"2\"\nassert solution(open(\"sample_input.txt\").read()) == \"1\""
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 2\nassert solution() == 1"
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Test case failed. Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2\" # Correct output\nassert solution() == \"1\" # Correct output\nassert solution() == \"0\" # Correct output"
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n4 2\n50 50 75\n25 25 25\n''') == '2\\n'\nassert solution('''\n5 2\n50 50 50 50\n25 25 25 25\n''') == '1\\n'"
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"The output '{solution(input())}' is incorrect.\""
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n50 50 75\\n25 25 25\") == 2\nassert solution(\"5 2\\n50 50 50 50\\n25 25 25 25\") == 1\n"
    },
    {
        "number": 3229,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r').read()) == '2'\nassert solution(open('input2.txt', 'r').read()) == '1'\n"
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\\n2\\n\", \"Test case 1 failed\""
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''4 4\n.LX.\n.X..\n....\n.L..''') == '1'\n\nassert solution('''4 4\n.XLX\n.X..\n...L\n.X..''') == '2'"
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4\\n.LX.\\n.X..\\n....\\n.L..\") == \"1\"\nassert solution(\"4 4\\n.XLX\\n.X..\\n...L\\n.X..\") == \"2\""
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\n.LX.\\n.X..\\n....\\n.L..\") == \"1\\n\"\nassert solution(\"4 4\\n.XLX\\n.X..\\n...L\\n.X..\") == \"2\\n\""
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\n.LX.\\n.X..\\n....\\n.L..\") == \"1\\n\"\nassert solution(\"4 4\\n.XLX\\n.X..\\n...L\\n.X..\") == \"2\\n\"\n"
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 4\\n.LX.\\n.X..\\n....\\n.L..\\n') == '1\\n'\nassert solution('4 4\\n.XLX\\n.X..\\n...L\\n.X..\\n') == '2\\n'\n"
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"4 4\\n.LX.\\n.X..\\n....\\n.L..\") == \"1\"\nassert solution(\"4 4\\n.XLX\\n.X..\\n...L\\n.X..\") == \"2\""
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 4\\n.LX.\\n.X..\\n....\\n.L..\\n') == 1\nassert solution('4 4\\n.XLX\\n.X..\\n...L\\n.X..\\n') == 2"
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 4\\n.LX.\\n.X..\\n....\\n.L..\\n') == '1\\n'\nassert solution('4 4\\n.XLX\\n.X..\\n...L\\n.X..\\n') == '2\\n'"
    },
    {
        "number": 3230,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 4\\n.LX.\\n.X..\\n....\\n.L..\\n') == '1'\nassert solution('4 4\\n.XLX\\n.X..\\n...L\\n.X..\\n') == '2'\n\nfrom typing import List"
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == sample_output_1, \"The solution should return the correct output.\"\nassert solution(sample_input_2) == sample_output_2, \"The solution should return the correct output.\""
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\\n\\n5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n\\nSample Input 1:\\n4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\\n\\nSample Output 1:\\nhome\\n2\\n2 0 1\\n2 2 3\\n\\nSample Input 2:\\n5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n\\nSample Output 2:\\ndetention\\ndef solution(stdin: str) -> str:\\n    pass\\n') == 'home\\n2\\n2 0 1\\n2 2 3\\n'"
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2') == 'home\\n2\\n2 0 1\\n2 2 3\\n'\nassert solution('5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3') == 'detention\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('sample_input1.txt', 'r')) == 'home'\nassert solution(open('sample_input2.txt', 'r')) == 'detention'"
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == \"home\", \"Incorrect output. Expected 'home', but got '{}'.\"\n\nassert solution(sample_input_2) == \"detention\", \"Incorrect output. Expected 'detention', but got '{}'.\""
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('sample_input.txt')) == 'detention'"
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\\n\") == \"detention\"\nassert solution(\"5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n\") == \"home\""
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\\n\") == \"home\\n2\\n2 0 1\\n2 2 3\\n\"\nassert solution(\"5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n\") == \"detention\\n2\\n2 0 1\\n2 2 3\\n\""
    },
    {
        "number": 3231,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\\nSample Output 1:\\nhome\\n2\\n2 0 1\\n2 2 3\\n\\nSample Input 2:\\n5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\nSample Output 2:\\ndetention\\ndef solution(stdin: str) -> str:\\n    pass\\n') == 'home\\n2\\n2 0 1\\n2 2 3\\n'"
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == \"-1\""
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == -1"
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('tralalal') == 'allatral'\n\nassert solution('zzzz') == -1"
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input(\"Enter the string: \")) == \"allatral\"\nassert solution(input(\"Enter the string: \")) == \"def solution(stdin: str) -> str: pass\"\nassert solution(input(\"Enter the string: \")) == \"-1\""
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == \"-1\""
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"tralalal\") == \"allatral\", \"Example 1\"\nassert solution(\"zzzz\") == -1, \"Example 2\"\n\nfrom typing import List"
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('tralalal') == 'allatral'\nassert solution('zzzz') == '-1'"
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == \"-1\""
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"allatral\""
    },
    {
        "number": 3232,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"tralalal\") == \"allatral\", \"Sample Input 1\"\nassert solution(\"zzzz\") == \"-1\", \"Sample Input 2\""
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n1 2 3 4 5\\n6\\n3 2 1 6 4 5') == '5\\n6\\n8'"
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"Output one integer representing the number of scary subarrays.\""
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 2 3 4 5\") == \"5\\n\"\nassert solution(\"6\\n3 2 1 6 4 5\") == \"8\\n\"\n"
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 2 3 4 5\\n6\\n3 2 1 6 4 5\\n\") == 5\n\nassert solution(\"6\\n3 2 1 6 4 5\\n\") == 8"
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 2 3 4 5') == '5'\nassert solution('1 2 3 4 5 6') == '8'"
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 2 3 4 5\\n6\\n3 2 1 6 4 5\") == \"5\\n8\"\nassert solution(\"6\\n3 2 1 6 4 5\") == \"8\"\nassert solution(\"5\\n1 2 3 4 5\\n5\\n3 2 1 6 4 5\\n4\\n1 2 3 4 5\\n1\\n6 5 4 3 2 1\") == \"5\\n12\"\nassert solution(\"5\\n1 2 3 4 5\\n5\\n3 2 1 6 4 5\\n4\\n1 2 3 4 5\\n1\\n6 5 4 3 2 1\\n4\\n1 2 3 4 5\\n2\\n5 4 3 2 1\\n1\") == \"5\\n10\""
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input1) == 5, \"Invalid output\"\nassert solution(sample_input2) == 8, \"Invalid output\""
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == output, f\"Output does not match the expected output.\\nInput: {stdin}\\nOutput: {output}\""
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\n1 2 3 4 5') == '5'\nassert solution('6\\n3 2 1 6 4 5') == '8'"
    },
    {
        "number": 3233,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 2 3 4 5\\n\") == \"5\\n\"\nassert solution(\"6\\n3 2 1 6 4 5\\n\") == \"8\\n\""
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 2\nprint(\"Test Passed!\")"
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"47\") == 1\nassert solution(\"523\") == 2"
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(47) == 1\nassert solution(523) == 2"
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(47) == 1, \"Expected: 1, Got: {}\".format(solution(47))\nassert solution(523) == 2, \"Expected: 2, Got: {}\".format(solution(523))"
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(47) == 1\nassert solution(523) == 2"
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '1\\n'"
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(47) == 1\nassert solution(523) == 2\n\nfrom typing import List\n"
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1\"\nassert solution() == \"2\""
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"523\") == 2, \"Incorrect output\""
    },
    {
        "number": 3234,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\nfor i, example in enumerate(test_cases):\n    assert solution(example[0]) == example[1]"
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5\\n0 1 10\\n1 2 10\\n0 3 10\\n3 2 10\\n2 0 20\") == \"0\\n1\\n0 1 15\"\nprint(solution(\"2 2\\n0 1 20\\n1 0 5\"))"
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0\\n1 2 10\\n0 3 10\\n3 2 10\\n2 0 20\") == \"0\\n0 1 15\"\nassert solution(\"2\\n0 1 20\\n1 0 5\") == \"1\\n0 1 15\""
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"The solution is incorrect.\""
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5\\n0 1 10\\n1 2 10\\n0 3 10\\n3 2 10\\n2 0 20\\n\") == \"0\\n1\\n0\\n1\"\n\nassert solution(\"2 2\\n0 1 20\\n1 0 5\\n\") == \"1\\n0 1 15\\n\"\n\nfrom collections import defaultdict"
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('example1.txt').read()) == '0\\n'\nassert solution(open('example2.txt').read()) == '1\\n0 1 15\\n'"
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"5\\n\") == \"\"\nassert solution(\"5\\n1 2 10\\n0 3 10\\n3 2 10\\n2 0 20\\n\") == \"\""
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"0\\n\", \"Your solution is incorrect.\""
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input1) == output1, f\"Expected {output1}, got {solution(input1)}\"\nassert solution(input2) == output2, f\"Expected {output2}, got {solution(input2)}\""
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 5\\n0 1 10\\n1 2 10\\n0 3 10\\n3 2 10\\n2 0 20') == '0\\n1\\n0 1 15'"
    },
    {
        "number": 3235,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n    4 5\n    0 1 10\n    1 2 10\n    0 3 10\n    3 2 10\n    2 0 20\n    ''') == '0'\n\nassert solution('''\n    2 2\n    0 1 20\n    1 0 5\n    ''') == '1'"
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5\\n\") == 5\nassert solution(\"4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4\\n\") == 1"
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input1) == output1, \"Test 1 failed\"\nassert solution(input2) == output2, \"Test 2 failed\""
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5') == '5', \"Incorrect output: \\n\" + solution('5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5')\nassert solution('4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4') == '1', \"Incorrect output: \\n\" + solution('4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4')"
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output() for input, output in zip(input_data, output_data)\n\ninput_data = [\n    (5, 6),\n    (1, 3, 2, 1, 5),\n    (1, 3),\n    (2, 3),\n    (1, 4),\n    (3, 5),\n    (4, 5),\n    (2, 5),\n]\n\noutput_data = [\n    \"5\",\n    \"1\",\n    \"1\",\n    \"1\",\n    \"1\",\n    \"1\",\n    \"1\",\n    \"1\",\n    \"1\",\n]"
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5\") == 5\nassert solution(\"4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4\") == 1"
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"5\"\n"
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"5 6\n1 3 2 1 5\n1 3\n2 3\n1 4\n3 5\n4 5\n2 5\"\"\") == \"5\"\n\nassert solution(\"\"\"4 3\n4 4 8 12\n1 2\n2 3\n3 4\"\"\") == \"1\""
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5\") == \"5\"\nassert solution(\"4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4\") == \"1\""
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"5\\n\", \"The correct output should be: 5\\n\"\n"
    },
    {
        "number": 3236,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5\\n\") == \"5\\n\"\n\nassert solution(\"4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4\\n\") == \"1\\n\""
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"020302\") == \"7\"\nassert solution(\"1311\") == \"24\""
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"020302\") == \"7\"\nassert solution(\"1311\") == \"24\""
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"020302\") == \"7\", \"Expected output 7, got {}\".format(solution(\"020302\"))\nassert solution(\"1311\") == \"24\", \"Expected output 24, got {}\".format(solution(\"1311\"))\n"
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('020302') == 7\nassert solution('1311') == 24"
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"020302\") == \"7\"\nassert solution(\"1311\") == \"24\""
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"020302\") == \"7\"\nassert solution(\"1311\") == \"24\""
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"020302\") == \"7\"\nassert solution(\"1311\") == \"24\""
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('020302') == '7'\nassert solution('1311') == '24'"
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"020302\") == \"7\"\nassert solution(\"1311\") == \"24\""
    },
    {
        "number": 3237,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"020302\") == 7, \"Expected output 7, got {}\".format(solution(\"020302\"))\nassert solution(\"1311\") == 24, \"Expected output 24, got {}\".format(solution(\"1311\"))"
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\", \"Input expected empty string\""
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(solution_input1) == solution_output1\nassert solution(solution_input2) == solution_output2"
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, but got {solution(input())}\""
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n8 10\n"
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"8 10\n"
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n8 10\n"
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 10\\n#.#..##..#\\n####..####\\n###.##....\\n...#..####\\n....##....\\n.#.##..##. \\n########## \\n########## \\n\") == \"3 1 3 10\"\nassert solution(\"5 20\\n###########.#.#.#.#. \\n###########...#.###. \\n##########..##.#..## \\n###########..#.#.##. \\n###########.###...#. \\n\") == \"1 15 5 15\""
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 10\\n#.#..##..#\\n####..####\\n###.##....\\n...#..####\\n....##....\\n.#.##..##. \\n########## \\n########## \\n\") == \"3 1 3 10\\n\"\nassert solution(\"5 20\\n###########.#.#.#.#.\\n###########...#.###.\\n##########..##.#..##\\n###########..#.#.##.\\n###########.###...#. \\n\") == \"1 15 5 15\\n\""
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('8 10\\n#.#..##..#\\n####..####\\n###.##....\\n...#..####\\n....##....\\n.#.##..##. \\n##########\\n##########\\n') == '3 1 3 10\\n'\n\nassert solution('5 20\\n###########.#.#.#.#. \\n###########...#.###. \\n##########..##.#..## \\n###########..#.#.##. \\n###########.###...#. \\n') == '1 15 5 15\\n'"
    },
    {
        "number": 3238,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 10\\n#.#..##..#\\n####..####\\n###.##....\\n...#..####\\n....##....\\n.#.##..##. \\n##########\\n##########\\n\") == \"3 1 3 10\\n\"\n\nassert solution(\"5 20\\n###########.#.#.#.#. \\n###########...#.###. \\n##########..##.#..## \\n###########..#.#.##. \\n###########.###...#. \\n\") == \"1 15 5 15\\ndef solution(stdin: str) -> str: \\n    pass\""
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"50 0.125\") == \"16.339203308\"\nassert solution(\"201 1.000\") == \"5.000000000\""
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == sample_output1, \"Incorrect output for sample input 1.\"\nassert solution(sample_input2) == sample_output2, \"Incorrect output for sample input 2.\""
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"The correct output is {output}, but the output is {solution(input())}.\""
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3, 0.125) == '16.339203308'\nassert solution(50, 0.125) == '16.339203308'\nassert solution(100, 0.125) == '16.339203308'"
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"50 0.125\") == \"16.339203308\"\nassert solution(\"201 1.000\") == \"5.000000000\""
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('50 0.125') == '16.339203308'\nassert solution('201 1.000') == '5.000000000'"
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('50 0.125') == '16.339203308'\nassert solution('201 1.000') == '5.000000000'"
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('50 0.125') == '16.339203308'\nassert solution('201 1.000') == '5.000000000'"
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('50 0.125') == '16.339203308', \"Incorrect output. Expected 16.339203308, got {}.\".format(solution('50 0.125'))\nassert solution('201 1.000') == '5.000000000', \"Incorrect output. Expected 5.000000000, got {}.\".format(solution('201 1.000'))"
    },
    {
        "number": 3239,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"16.339203308\"\n"
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('tests/binary_town.txt', 'r').read()) == \"2\\n\"\nassert solution(open('tests/binary_town.txt', 'r').read()) == \"3\\n\"\n"
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2\\n0.5 1\\nSample Input 1:\\n2 2\\n0.5 1\\nSample Output 1:\\n2\\n\\n\\nSample Input 2:\\n4 3\\n1 11\\n0.4 1\\nSample Output 2:\\n3\\n\") == \"2\\n\""
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == # your solution here"
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2\\n\""
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    2 2\n    0.5 1\n    \"\"\"\n) == \"2\\n\"\n\nassert solution(\n    \"\"\"\n    4 3\n    1 11\n    0.4 1\n    \"\"\"\n) == \"3\\n\""
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == output\n"
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2\\n\""
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"2\\n\""
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\n0.5 1\\n\") == \"2\"\nassert solution(\"4 3\\n1 11\\n0.4 1\\n\") == \"3\""
    },
    {
        "number": 3240,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n0.5 1\\n\") == \"2\\n\"\nassert solution(\"4 3\\n1 11\\n0.4 1\\n\") == \"3\\n\""
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 10.5, \"Output does not match the expected output.\"\nassert solution() == -1, \"Output does not match the expected output.\""
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input1) == output1, f\"Output1 should be {output1}, but it is {solution(input1)}\"\nassert solution(input2) == output2, f\"Output2 should be {output2}, but it is {solution(input2)}\""
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(solution(open(\"input.txt\").read().splitlines())) == 10.5\n"
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n7 1\\n3 2\\n10 0') == '10.5\\n'\nassert solution('3\\n2 1\\n4 0\\n0 3') == '-1\\n'"
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''3\n7 1\n3 2\n10 0''') == '10.5'\nassert solution('''3\n2 1\n4 0\n0 3''') == '-1'"
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n7 1\\n3 2\\n10 0') == '10.5\\n'\nassert solution('3\\n2 1\\n4 0\\n0 3') == '-1\\n'\n\nfrom typing import List"
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n3\n7 1\n3 2\n10 0\n''') == '10.5\\n'\n\nassert solution('''\n3\n2 1\n4 0\n0 3\n''') == '-1\\n'"
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r')) == '10.5\\n'"
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"10.5\""
    },
    {
        "number": 3241,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"10.5\"\n"
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input1) == '1', \"The correct solution is: 1\"\nassert solution(sample_input2) == '2', \"The correct solution is: 2\""
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1\\n\", \"Test case 1\"\n\nassert solution() == \"2\\n\", \"Test case 2\""
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 0.5\\n2 0.5\\n1 0.5\") == \"1\\n\"\nassert solution(\"2 0.5\\n2 0.51\\n1 0.49\") == \"2\\n\""
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == expected_output1\nassert solution(sample_input2) == expected_output2"
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 0.5\\n2 0.5\\n1 0.5') == 1\nassert solution('2 0.5\\n2 0.51\\n1 0.49') == 2"
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n2 0.5\n2 0.5\n1 0.5\n''') == '''1'''\n\nassert solution('''\n2 0.5\n2 0.51\n1 0.49\n''') == '''2'''"
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n2 0.5\n2 0.5\n1 0.5\n\"\"\"\n) == \"1\\n\"\n\nassert solution(\n\"\"\"\n2 0.5\n2 0.51\n1 0.49\n\"\"\"\n) == \"2\\n\""
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 0.5\\n2 0.5\\n1 0.5\") == \"1\"\nassert solution(\"2 0.5\\n2 0.51\\n1 0.49\") == \"2\""
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 0.5\\n2 0.5\\n1 0.5\\n\") == \"1\\n\"\nassert solution(\"2 0.5\\n2 0.51\\n1 0.49\\n\") == \"2\\n\""
    },
    {
        "number": 3242,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"1\", \"The solution is incorrect.\""
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"yes\\n\", \"Input must be of the form n m c_0 c_1 \\n\""
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    4 5 2\n    3 3 3 3\n    0 1\n    0 3\n    1 3\n    1 2\n    2 3\n    \"\"\"\n) == \"yes\\n\"\n\nassert solution(\n    \"\"\"\n    5 4 4\n    1 1 2 2 2\n    0 1\n    2 3\n    3 4\n    4 2\n    \"\"\"\n) == \"no\\n\""
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(r'''\n    4 5 2\n    3 3 3 3\n    0 1\n    0 3\n    1 3\n    1 2\n    2 3\n    ''') == 'yes\\n'\n\nassert solution(r'''\n    5 4 4\n    1 1 2 2 2\n    0 1\n    2 3\n    3 4\n    4 2\n    ''') == 'no\\n'"
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"yes\\n\", \"Test failed.\""
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected"
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"yes\""
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"yes\", \"The solution is incorrect\""
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5 2\\n3 3 3 3\\n0 1\\n0 3\\n1 3\\n1 2\\n2 3\\n\") == \"yes\"\nassert solution(\"5 4 4\\n1 1 2 2 2\\n0 1\\n2 3\\n3 4\\n4 2\\n\") == \"yes\""
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5 2\\n3 3 3 3\\n0 1\\n0 3\\n1 3\\n1 2\\n2 3\\n\") == \"yes\"\nassert solution(\"5 4 4\\n1 1 2 2 2\\n0 1\\n2 3\\n3 4\\n4 2\\n\") == \"yes\""
    },
    {
        "number": 3243,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5 2\\n3 3 3 3\\n0 1\\n0 3\\n1 3\\n1 2\\n2 3\") == \"yes\\n\"\nassert solution(\"5 4 4\\n1 1 2 2 2\\n0 1\\n2 3\\n3 4\\n4 2\") == \"yes\\n\""
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == # Your code here"
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution, \"Solution not defined\"\n\nfrom typing import List"
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\n\nfrom typing import List"
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"Solution not available\""
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n5\\n5\\n5\") == \"2\\n1\\n2\\n\\n\"\nassert solution(\"4\\n20\\n15\\n17\\n14\") == \"5\\n8\\n2\\n7\\n\\n\""
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n5\\n5\\n5\") == \"2\\n1\\n2\\n\"\nassert solution(\"4\\n20\\n15\\n17\\n14\") == \"5\\n8\\n2\\n7\\n\"\n"
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n5\\n5\\n5\") == \"2\\n1\\n2\\n\"\nassert solution(\"4\\n20\\n15\\n17\\n14\") == \"5\\n8\\n2\\n7\\n\""
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"2\\n1\\n2\\n\"\nassert solution(4) == \"5\\n8\\n2\\n7\\n\""
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r')) == \"2\\n1\\n2\\n5\\n8\\n2\\n7\\n\"\n"
    },
    {
        "number": 3244,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r')) == \"\"\"2\n1\n2\n5\n8\"\"\""
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == 'python\\npython main.py\\npython main.py -n 10\\n'\n"
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 'python'\nassert solution(2) == 'java'\nassert solution(1) == 'python'"
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"python\") == \"python\"\nassert solution(\"p^ main.py\") == \"python\"\nassert solution(\"^ -n 10\") == \"python\""
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"python\") == \"python\"\nassert solution(\"python main.py\") == \"python main.py\"\nassert solution(\"python main.py -n 10\") == \"python main.py -n 10\"\nassert solution(\"\") == \"\"\nassert solution(\"python abc\") == \"python abc\"\nassert solution(\"^\") == \"^\"\nassert solution(\"^ py\") == \"py\"\nassert solution(\"^ py abc\") == \"py abc\"\nassert solution(\"^ -n 10\") == \"^ -n 10\"\nassert solution(\"^ -n 10 x\") == \"^ -n 10 x\"\nassert solution(\"^ -n 10 x abc\") == \"^ -n 10 x abc\"\nassert solution(\"^ x\") == \"^ x\"\nassert solution(\"^ x abc\") == \"^ x abc\"\nassert solution(\"^ x y\") == \"^ x y\"\nassert solution(\"^ x y abc\") == \"^ x y abc\"\nassert solution(\"^ x y ^\") == \"x y ^\"\nassert solution(\"^ x y ^ abc\") == \"x y ^ abc\"\nassert solution(\"^ ^\") == \"^\"\nassert solution(\"^ ^ abc\") == \"^ abc\"\nassert solution(\"^ abc\") == \"^ abc\"\nassert solution(\"^ abc x\") == \"^ abc x\"\nassert solution(\"^ abc x y\") == \"^ abc x y\"\nassert solution(\"^ abc x y abc\") == \"^ abc x y abc\"\nassert solution(\"^ abc x y ^\") == \"abc x y ^\"\nassert solution(\"^ abc x y ^ abc\") == \"abc x y ^ abc\"\nassert solution(\"^ abc x y ^ ^\") == \"abc x y ^ ^\"\nassert solution(\"^ abc x y ^ ^ abc\") == \"abc x y ^ ^ abc\"\nassert solution(\"^ abc x y ^ ^ abc def\") == \"abc x y ^ ^ abc def\"\nassert solution(\"^ abc x y ^ ^ abc def ghi\") == \"abc x y ^ ^ abc def ghi\"\nassert solution(\"^ abc x y ^ ^ abc def ghi jkl\") == \"abc x y ^ ^ abc def ghi jkl\"\nassert solution(\"^ abc x y ^ ^ abc def ghi jkl mno\") == \"abc x y ^ ^ abc def ghi jkl mno\"\nassert solution(\"^ abc x y ^ ^ abc def ghi jkl mno pqr\") == \"abc x y ^ ^ abc def ghi jkl mno pqr\"\nassert solution(\"^ abc x y ^ ^ abc def ghi jkl mno pqr qrs\") == \"abc x y ^ ^ abc def ghi jkl mno pqr qrs\"\nassert solution(\"^ abc x y ^ ^ abc def ghi jkl mno pqr qrs tuv\") == \"abc x y ^ ^ abc def ghi jkl mno pqr qrs tuv\"\nassert solution(\"^ abc x y ^ ^ abc def ghi jkl mno pqr qrs tuv wxyz\") == \"abc x y ^ ^ abc def ghi jkl mno pqr qrs tuv wxyz\"\nassert solution(\"^ abc x y ^ ^ abc def ghi jkl mno pqr qrs tuv wxyz z\") == \"abc x y ^ ^ abc def ghi jkl mno pqr qrs tuv wxyz z\"\nassert solution(\"^ abc x y ^ ^ abc def ghi jkl mno pqr qrs tuv wxyz z a\") == \"abc x y ^ ^ abc def ghi jkl mno pqr qrs tuv wxyz z a\"\nassert solution(\"^ abc x y ^ ^ abc def ghi jkl mno pqr qrs tuv wxyz z a b\") == \"abc x y ^ ^ abc def ghi jkl mno pqr qrs tuv wxyz z a b\"\nassert solution(\"^ abc x y ^ ^ abc def ghi jkl mno pqr qrs tuv wxyz z a b c\") == \"abc x y ^ ^ abc def ghi jkl mno pqr qrs tuv wxyz z a b c\"\nassert solution(\"^ abc x y ^ ^ abc def ghi jkl mno pqr qrs tuv wxyz z a b c d\") == \"abc x y ^ ^ abc def ghi jkl mno pqr qrs tuv wxyz z a b c d\"\nassert solution(\"^ abc x y ^ ^ abc def ghi jkl mno pqr qrs tuv wxyz z a b c d e\") == \"abc x y ^ ^ abc def ghi jkl mno pqr qrs tuv wxyz z a b c d e\"\nassert solution(\"^ abc x y ^ ^ abc def ghi jkl"
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"python\\npython main.py\\npython main.py -n 10\\njava\") == \"python\\npython main.py\\npython main.py -n 10\\njava\"\nassert solution(\"python\\npython main.py\\npython main.py -n 10\\njava\") == \"python\\npython main.py\\npython main.py -n 10\\njava\"\nassert solution(\"python\\npython main.py\\npython main.py -n 10\\njava\") == \"python\\npython main.py\\npython main.py -n 10\\njava\""
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"python\\np^ main.py\\n^ -n 10\") == \"python\\npython main.py\\npython main.py -n 10\"\nassert solution(\"python\\njava\\n^\") == \"python\\njava\\njava\\npython\\njava\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"python\\np^ main.py\\n^ -n 10\\njava\\n^\") == \"python\\njava\\njava\\npython\\njava\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"\") == \"\""
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == ['python', 'python main.py', 'python main.py -n 10', 'java', 'java', 'java']"
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"python\" + \" main.py\" + \" -n 10\""
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for {input()} and expected output {expected_output}\""
    },
    {
        "number": 3245,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"python\\npython main.py\\npython main.py -n 10\\njava\\njava\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('tihssnetnceemkaesprfecetsesne', 5,'makes', 'perfect','sense','sentence', 'this') == 'this sentence makes perfect sense'\nassert solution('hitehre', 2, 'there', 'hello') == 'impossible'"
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\", 5) == \"this sentence makes perfect sense\\n\"\nassert solution(\"hitehre\", 2) == \"impossible\\n\""
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\") == \"this sentence makes perfect sense\"\nassert solution(\"hitehre\") == \"impossible\"\nassert solution(\"hellothere\") == \"impossible\"\nassert solution(\"thissentencemakesperfectsense\") == \"this sentence makes perfect sense\""
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\", 5, \"makes\", \"perfect\", \"sense\", \"sentence\", \"this\") == \"this sentence makes perfect sense\""
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\") == \"this sentence makes perfect sense\"\nassert solution(\"hitehre\") == \"impossible\"\nassert solution(\"\") == \"impossible\""
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\") == \"this sentence makes perfect sense\"\nassert solution(\"hitehre\") == \"impossible\"\n\nfrom typing import List"
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\") == \"this sentence makes perfect sense\"\nassert solution(\"hitehre\") == \"impossible\"\n\nimport random"
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\") == \"this sentence makes perfect sense\", \"Test 1 Failed\"\nassert solution(\"hitehre\") == \"impossible\", \"Test 2 Failed\""
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"tihssnetnceemkaesprfecetsesne\\n5\\nmakes\\nperfect\\nsense\\nsentence\\nthis\\n\") == \"this sentence makes perfect sense\""
    },
    {
        "number": 3246,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\", 5) == \"this sentence makes perfect sense\"\nassert solution(\"hitehre\", 2) == \"impossible\""
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == 4\nassert solution(\"2 2\") == 16"
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 2') == '4'\nassert solution('2 2') == '16'"
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2\\n2 2\\n\") == \"4\\n\"\nassert solution(\"2 2\\n\") == \"16\\n\""
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2\\n2 2\\n\") == \"4\\n\"\nassert solution(\"2 2\\n2 2\\n\") == \"16\\n\""
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"4\"\nassert solution(\"2 2\") == \"16\"\n\nfrom typing import List"
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"1 2\\n2 2\") == \"4\\n\"\nassert solution(stdin=\"2 2\\n2 2\") == \"16\\n\""
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2\\n2 2\\n\") == \"4\"\nassert solution(\"2 2\\n1 2\\n\") == \"16\""
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"4\\n\", \"Expected output: 4\\nActual output: {}\".format(solution())"
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 2') == 4\nassert solution('2 2') == 16"
    },
    {
        "number": 3247,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"1 2\") == \"4\\n\"\nassert solution(stdin=\"2 2\") == \"16\\n\""
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"sample_input.txt\", \"r\")) == \"2\\n\""
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=input()) == '2', \"Incorrect output\"\n"
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abcbab\\n2\\ncb\\ncbab\\n\") == \"2\"\nassert solution(\"abab\\n2\\nbac\\nbaba\\n\") == \"4\""
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n6\nabcbab\n2\ncb\ncbab\n\"\"\"\n) == \"2\\n\"\n\nassert solution(\n\"\"\"\n4\nabab\n2\nbac\nbaba\n\"\"\"\n) == \"4\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"6\\nabcbab\\n2\\ncb\\ncbab\") == 2\nassert solution(stdin=\"4\\abab\\n2\\nbac\\nbaba\") == 4"
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"2\\n\""
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\nabcbab\\n2\\ncb\\ncbab\\n\") == \"2\"\nassert solution(\"4\\nabab\\n2\\nbac\\nbaba\\n\") == \"4\""
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\nabcbab\\n2\\ncb\\ncbab\\n\") == \"2\\n\""
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3248,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\nabcbab\\n2\\nc\\ncab\\n\") == \"2\"\nassert solution(\"2\\nabcbab\\n2\\nc\\ncab\\n\") == \"4\""
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"50\\n4\\n110 10\\n80 10\\n80 0\\n110 0\"\n) == \"6\\n85\\n90\\n95\\n100\\n105\"\nassert solution(\n    \"24\\n3\\n10 10\\n30 10\\n20 20\"\n) == \"4\\n17.071067\\n20\\n22.928932\""
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"\"\"\n6\n85\n90\n95\n100\n105\n\"\"\""
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2"
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"50\\n4\\n110 10\\n80 10\\n80 0\\n110 0\") == \"6\\n85\\n90\\n95\\n100\\n105\"\nassert solution(\"24\\n3\\n10 10\\n30 10\\n20 20\") == \"4\\n17.071067\\n20\\n22.928932\""
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n50\n4\n110 10\n80 10\n80 0\n110 0\n''') == '6\\n85\\n90\\n95\\n100\\n105\\n'\nassert solution('''\n24\n3\n10 10\n30 10\n20 20\n''') == '4\\n17.071067\\n20\\n22.928932\\n'"
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"50\\n4\\n110 10\\n80 10\\n80 0\\n110 0\\n\") == \"6\\n85\\n90\\n95\\n100\\n105\"\nassert solution(\"24\\n3\\n10 10\\n30 10\\n20 20\\n\") == \"4\\n17.071067\\n20\\n22.928932\""
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 6, \"Your implementation of the solution is incorrect.\"\n"
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"Sample Output 1:\\n6\\n85\\n90\\n95\\n100\\n105\\n\""
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2"
    },
    {
        "number": 3249,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(r\"\"\"\n50\n4\n110 10\n80 10\n80 0\n110 0\n\"\"\") == \"6\\n85\\n90\\n95\\n100\\n105\\n\"\n\nassert solution(r\"\"\"\n24\n3\n10 10\n30 10\n20 20\n\"\"\") == \"4\\n17.071067\\n20\\n22.928932\\n\""
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected, f\"got '{solution(stdin)}', expected '{expected}'\"\nfor i, example in enumerate([(\"10 11\", \"yes\"), (\"10 7\", \"yes\"), (\"10 13\", \"no\")]):\n    assert solution(example[0]) == example[1], f\"example {i} failed\""
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"yes\""
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 11\") == \"yes\"\nassert solution(\"10 7\") == \"yes\""
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('10 11') == 'yes'\nassert solution('10 7') == 'yes'"
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"10 11\") == \"yes\\n\"\nassert solution(stdin=\"10 7\") == \"yes\\n\"\nassert solution(stdin=\"5 7\") == \"no\\n\"\nassert solution(stdin=\"1 2\") == \"no\\n\"\nassert solution(stdin=\"9 11\") == \"yes\\n\""
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('10 11') == 'yes\\n'\nassert solution('10 7') == 'yes\\n'"
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin='10 11') == 'yes'\nassert solution(stdin='10 7') == 'yes'"
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(b=10, d=11) == \"yes\"\nassert solution(b=10, d=7) == \"yes\"\n"
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 11\") == \"yes\"\nassert solution(\"10 7\") == \"yes\"\n"
    },
    {
        "number": 3250,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 11\") == \"yes\\n\"\nassert solution(\"10 7\") == \"yes\\n\""
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n3\n3 4\n2 5\n1 6\n''') == '''\n3\n1 6\n2 5\n3 4\n'''\n\nassert solution('''\n5\n10 30\n20 40\n30 50\n10 60\n30 40\n''') == '''\n3\n10 60\n30 50\n30 40\n'''\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3 4\\n2 5\\n1 6\") == \"3\\n1 6\\n2 5\\n3 4\"\nassert solution(\"5\\n10 30\\n20 40\\n30 50\\n10 60\\n30 40\") == \"3\\n10 60\\n30 50\\n30 40\"\n"
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n3 4\\n2 5\\n1 6\") == \"3\\n1 6\\n2 5\\n3 4\\n\""
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed: {input()}, expected output: {expected_output}, got: {solution(input())}\"\n\nfrom typing import List"
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    3\n    3 4\n    2 5\n    1 6\n    \"\"\"\n) == \"\"\"\n    3\n    1 6\n    2 5\n    3 4\n    \"\"\"\n"
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n3 4\\n2 5\\n1 6\\n5\\n10 30\\n20 40\\n30 50\\n10 60\\n30 40') == '3\\n1 6\\n2 5\\n3 4\\n'\n"
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n3 4\\n2 5\\n1 6\\n\") == \"3\\n1 6\\n2 5\\n3 4\\n\"\nassert solution(\"5\\n10 30\\n20 40\\n30 50\\n10 60\\n30 40\\n\") == \"3\\n10 60\\n30 50\\n30 40\\n\"\n"
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n3 4\\n2 5\\n1 6\") == \"3\\n1 6\\n2 5\\n3 4\\n\"\nassert solution(\"5\\n10 30\\n20 40\\n30 50\\n10 60\\n30 40\") == \"3\\n10 60\\n30 50\\n30 40\\n\""
    },
    {
        "number": 3251,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"3\\n1 6\\n2 5\\n3 4\\n\"\n"
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == expected, f\"The solution is incorrect. Expected: {expected}, but got: {solution}\"\n"
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 1\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\") == \"5836\\n\"\nassert solution(\"5 2\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\") == \"1828\\n\"\n"
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"5836\", \"Expected output: 5836, but got {}\".format(solution())"
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"5836\"\n"
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '5836'"
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == 5836, \"Expected output: 5836, but got: \" + str(solution(stdin))"
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"5 1\n10 10 5\n9 8 10\n4 12 20\n12 4 8\n2 3 16\n\"\"\") == \"5836\\n\"\n\nassert solution(\n\"\"\"5 2\n10 10 5\n9 8 10\n4 12 20\n12 4 8\n2 3 16\n\"\"\") == \"1828\\n\""
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 1\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\") == \"5836\\n\", \"Test case 1 failed\"\nassert solution(\"5 2\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\") == \"1828\\n\", \"Test case 2 failed\"\n"
    },
    {
        "number": 3252,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 1\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\") == \"5836\\n\"\nassert solution(\"5 2\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\") == \"1828\\n\""
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"impossible\", \"Solution is not correct\""
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"impossible\""
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n7 2401 3299 0\\n6 2401 2399 0\\n2 750 750 99\") == \"50\\n\"\nassert solution(\"3\\n7 100 200 200\\n8 100 300 200\\n9 100 400 200\") == \"impossible\\n\""
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n7 2401 3299 0\\n6 2401 2399 0\\n2 750 750 99\") == 50\nassert solution(\"3\\n7 100 200 200\\n8 100 300 200\\n9 100 400 200\") == \"impossible\""
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n3\n7 2401 3299 0\n6 2401 2399 0\n2 750 750 99\n''') == 50\nassert solution('''\n3\n7 100 200 200\n8 100 300 200\n9 100 400 200\n''') == 'impossible'\n"
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"50\""
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"50\\n\", \"Invalid solution\""
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"50\\n\", solution(stdin)"
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(None) == 'impossible'"
    },
    {
        "number": 3253,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(12345) == \"0 0 0 0 1\", \"Test case 1 failed\"\nassert solution(456.78) == \"0 0 0 1 1\", \"Test case 2 failed\"\nassert solution(12.34) == \"0 0 0 1 1\", \"Test case 3 failed\"\nassert solution(2.7) == \"0 0 0 1 1\", \"Test case 4 failed\"\nassert solution(0.0) == \"0 0 0 1 1\", \"Test case 5 failed\""
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5.0') == '0 0 0 0 1'\nassert solution('4.5') == '0 0 0 1 1'"
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1.23) == [1, 0, 0, 0, 0]\nassert solution(1.5) == [1, 0, 0, 1, 1]\nassert solution(2.5) == [1, 0, 0, 1, 1]\nassert solution(3.0) == [1, 0, 0, 1, 1]\nassert solution(4.0) == [1, 0, 0, 1, 1]"
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(5.0) == '0 0 0 0 1'\nassert solution(4.5) == '0 0 0 1 1'"
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5.0\") == \"0 0 0 0 1\"\nassert solution(\"4.5\") == \"0 0 0 1 1\""
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Expected: '{output()}'\\nReceived: '{solution(input())}'\""
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"Input {input()} doesn't match expected output {expected}\""
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(5.0) == \"0 0 0 0 1\"\nassert solution(4.5) == \"0 0 0 1 1\""
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '''0 0 0 0 1\n0 0 0 1 1\n0 0 0 0 1\n0 0 0 1 1\n0 0 0 0 1'''"
    },
    {
        "number": 3254,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output\n"
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 3 1\\n1 7 8 2 6 4 3 5\") == \"8\"\nassert solution(\"8 2 1\\n1 7 8 2 6 4 3 5\") == \"3\""
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 3 1\\n1 7 8 2 6 4 3 5\") == \"8\"\nassert solution(\"8 2 1\\n1 7 8 2 6 4 3 5\") == \"3\""
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Test case {i+1} failed: Expected output '{expected}', got '{solution(input())}'\" for i, (input, expected) in enumerate([(input1, output1), (input2, output2)]), 1\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"3\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 3 1\\n1 7 8 2 6 4 3 5\") == \"8\"\nassert solution(\"8 2 1\\n1 7 8 2 6 4 3 5\") == \"3\""
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 3 1\\n1 7 8 2 6 4 3 5\") == \"8\"\nassert solution(\"8 2 1\\n1 7 8 2 6 4 3 5\") == \"3\""
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"3\", \"Your solution is incorrect. Expected output is '3', but got '{}' instead.\".format(solution())"
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 3 1\\n1 7 8 2 6 4 3 5\") == \"8\"\nassert solution(\"8 2 1\\n1 7 8 2 6 4 3 5\") == \"3\""
    },
    {
        "number": 3255,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output\n"
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 2\\n2 3 4 1\\n') == '3\\n'\nassert solution('6 3\\n2 2 2 4 4 4\\n') == '4\\n'"
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"4 2\\n2 3 4 1\\n6 3\\n2 2 2 4 4 4\"\n) == \"3\"\n\nassert solution(\n    \"4 3\\n3 4 5 2\\n4 6\\n2 2 2 4 4 4\"\n) == \"4\"\n\nassert solution(\n    \"2 1\\n1 2 3 4\\n3 4 5 6\"\n) == \"1\""
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\n2 3 4 1\\n\") == \"3\"\nassert solution(\"6 3\\n2 2 2 4 4 4\\n\") == \"4\""
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n2 3 4 1\") == \"3\\n\"\nassert solution(\"6 3\\n2 2 2 4 4 4\") == \"4\\n\""
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), f\"Testcase failed. Expected: {output()}, got: {solution(input())}\"\n"
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\n2 3 4 1\\n\") == \"3\\n\"\nassert solution(\"6 3\\n2 2 2 4 4 4\\n\") == \"4\\n\""
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n2 3 4 1\") == \"3\"\nassert solution(\"6 3\\n2 2 2 4 4 4\") == \"4\""
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 2\\n2 3 4 1\\n') == '3\\n'\nassert solution('6 3\\n2 2 2 4 4 4\\n') == '4\\n'"
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"3\\n\"\nassert solution() == \"4\\n\""
    },
    {
        "number": 3256,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n2 3 4 1\\nSample Output 1:\\n3\\n\\nSample Input 2:6 3\\n2 2 2 4 4 4\\nSample Output 2:\\n4\") == \"3\\n\""
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 1.732050808\nassert solution() == -1"
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 1 1.732050') == 1.732050808\nassert solution('1 1 3.0') == -1\n\nsolution = '''def solution(stdin: str) -> str:\n    a, b, c = map(float, stdin.split())\n    if a == 1 and b == 1 and c == 1.732050:\n        return 1.732050808\n    elif a == 1 and b == 1 and c == 3.0:\n        return -1\n    else:\n        return -1\n'''"
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin1) == '1.732050808', \"The carpet area does not satisfy the constraints\"\nassert solution(stdin2) == -1, \"The carpet area does not satisfy the constraints\""
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin: str) == \"1.732050808\\n\", \"Invalid input\""
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1.732050808\", \"Test 1 failed.\"\nassert solution(stdin) == \"-1\", \"Test 2 failed.\""
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input1) == 1.732050808\nassert solution(sample_input2) == -1"
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Solution: {solution(input())}, Expected Output: {expected_output}\""
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 1 1.732050') == '1.732050808'\nassert solution('1 1 3.0') == '-1'"
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"Test Case Failed: {input()} -> {output()}\""
    },
    {
        "number": 3257,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 1 1.732050') == '1.732050808'\nassert solution('1 1 3.0') == '-1'\n"
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n3 4 2\\n.75\\n\") == \"2.4999999987500003\\n\"\nassert solution(\"2\\n0 100 10\\n0 -100 100\\n.80\\n\") == \"9.999999999000002\\n\""
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n3 4 2\\n.75\\n\") == \"2.4999999987500003\\n\"\nassert solution(\"2\\n0 100 10\\n0 -100 100\\n.80\\n\") == \"9.999999999000002\\n\""
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"1\n3 4 2\n.75\"\"\") == \"2.4999999987500003\"\n\nassert solution(\"\"\"2\n0 100 10\n0 -100 100\n.80\"\"\") == \"9.999999999000002\""
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"2.4999999987500003\\n\"\nassert solution(stdin) == \"9.999999999000002\\n\""
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1\\n3 4 2\\n.75\\n') == '2.4999999987500003\\n'\nassert solution('2\\n0 100 10\\n0 -100 100\\n.80\\n') == '9.999999999000002\\n'"
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n3 4 2\\n.75\\n2.4999999987500003\\n1\\n0 100 10\\n0 -100 100\\n.80\") == \"2.4999999987500003\\n\"\nassert solution(\"2\\n0 100 10\\n0 -100 100\\n.80\") == \"9.999999999000002\\n\""
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1\\n3 4 2\\n.75\\n') == '2.4999999987500003\\n'\nassert solution('2\\n0 100 10\\n0 -100 100\\n.80\\n') == '9.999999999000002\\n'\n"
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1\\n3 4 2\\n.75\\n') == '2.4999999987500003\\n'\nassert solution('2\\n0 100 10\\n0 -100 100\\n.80\\n') == '9.999999999000002\\n'\n"
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 2.4999999987500003"
    },
    {
        "number": 3258,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2.4999999987500003\\n\", \"The correct answer is not provided.\\n\""
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 1 5 4\") == \"0\\n3\\n\", \"sample input 1\"\nassert solution(\"2 1 6\") == \"0\\n3\\n\", \"sample input 2\""
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2 1 5 2\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\nSample Input 2:4 5\\n1 1 4 3 4\\n2 1 1\\n2 2 2\\n2 3 3\\n2 4 4\") == \"0\\n3\\n2\\n1\\n0\"\nassert solution(\"6 3\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\nSample Input 1:6 3\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\nSample Output 1:0\\n3\\n\") == \"0\\n3\\n\""
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Solution is incorrect. Expected '{output}', but got '{solution(input())}'\"\n"
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('6 3\\n2 1 6\\n1 1 5 1 2\\n2 1 6') == '0\\n3\\n'\nassert solution('4 5\\n1 1 4 3 4\\n2 1 1\\n2 2 2\\n2 3 3\\n2 4 4') == '3\\n2\\n1\\n0\\n'"
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin='6 3\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n') == '0\\n3\\n'\nassert solution(stdin='4 5\\n1 1 4 3 4\\n2 1 1\\n2 2 2\\n2 3 3\\n2 4 4\\n') == '3\\n2\\n1\\n0\\n'"
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(10) == '0'\nassert solution(100) == '3'\nassert solution(1000) == '2'\nassert solution(10000) == '1'"
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Test {index + 1} failed. Expected: {output}, Received: {solution(input())}\""
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1 5 1 2\\n2 1 6\\n2 2 2\\n2 3 3\\n2 4 4\") == \"0\\n3\\n2\\n1\\n0\"\n\nassert solution(\"6 3\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n\") == \"0\\n3\\n2\\n1\\n0\"\n\nassert solution(\"4 5\\n1 1 4 3 4\\n2 1 1\\n2 2 2\\n2 3 3\\n2 4 4\") == \"3\\n2\\n1\\n0\""
    },
    {
        "number": 3259,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 3\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n\") == \"0\\n3\\n\"\nassert solution(\"4 5\\n1 1 4 3 4\\n2 1 1\\n2 2 2\\n2 3 3\\n2 4 4\\n\") == \"3\\n2\\n1\\n0\\n\""
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 1\nprint(\"Success!\")"
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 7 1000000007\") == \"1\\n\"\nassert solution(\"3 2 1000000007\") == \"4\\n\""
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"1 7 1000000007\") == \"1\"\nassert solution(stdin=\"3 2 1000000007\") == \"4\""
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 7 1000000007\") == \"1\\n\"\nassert solution(\"3 2 1000000007\") == \"4\\n\""
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1000000007) == 1\nassert solution(3000000007) == 4"
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == solution(stdin)"
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, \"The output is incorrect for the sample input.\"\n"
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 7 1000000007\") == \"1\"\nassert solution(\"3 2 1000000007\") == \"4\""
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n'\n\nprint('Success! Your solution is correct!')"
    },
    {
        "number": 3260,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 1\nprint(1)"
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 5, \"The function should return 5, not {}\".format(solution())"
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('10 10\\n6') == '5\\n'\nassert solution('3 5\\n11') == '8\\n'\n\nfrom typing import List"
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(None) == \"Error: Please provide the input.\\n\""
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 10\\n6\\n11\\n3 5\\n11\") == \"5\\n\"\nassert solution(\"3 5\\n11\") == \"8\\n\""
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 10\\n6\\n11\\n\") == \"5\\n\"\nassert solution(\"3 5\\n11\\n\") == \"8\\n\"\n"
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 10\\n6\\n11\\n3 5\\n8\\n\") == \"5\""
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('10 10\\n6\\n3 5\\n11\\n') == '5\\n'\nassert solution('10 10\\n3 1\\n3 2\\n3 3\\n') == '3\\n'\nassert solution('10 10\\n6 2\\n4 4\\n3 2\\n') == '1\\n'\nassert solution('10 10\\n6 2\\n4 4\\n3 3\\n') == '1\\n'\nassert solution('10 10\\n6 2\\n4 4\\n3 3\\n') == '0\\n'\nassert solution('10 10\\n6 2\\n4 4\\n3 3\\n') == '1\\n'\nassert solution('10 10\\n6 2\\n4 4\\n3 3\\n') == '0\\n'\nassert solution('10 10\\n6 2\\n4 4\\n3 3\\n') == '1\\n'\nassert solution('10 10\\n6 2\\n4 4\\n3 3\\n') == '0\\n'\nassert solution('10 10\\n6 2\\n4 4\\n3 3\\n') == '0\\n'\nassert solution('10 10\\n6 2\\n4 4\\n3 3\\n') == '1\\n'\nassert solution('10 10\\n6 2\\n4 4\\n3 3\\n') == '0\\n'\nassert solution('10 10\\n6 2\\n4 4\\n3 3\\n') == '1\\n'\nassert solution('10 10\\n6 2\\n4 4\\n3 3\\n') == '0\\n'\nassert solution('10 10\\n6 2\\n4 4\\n3 3\\n') == '0\\n'\nassert solution('10 10\\n6 2\\n4 4\\n3 3\\n') == '0\\n'\nassert solution('10 10\\n6 2\\n4 4\\n3 3\\n') == '0\\n'\nassert solution('10 10\\n6 2\\n4 4\\n3 3\\n') == '0\\n'\nassert solution('10 10\\n6 2\\n4 4\\n3 3\\n') == '0\\n'\nassert solution('10 10\\n6 2\\n4 4\\n3 3\\n') == '0\\n'\nassert solution('10 10\\n6 2\\n4 4\\n3 3\\n') == '1\\n'\nassert solution('10 10\\n6 2\\n4 4\\n3 3\\n') == '0\\n'\nassert solution('10 10\\n6 2\\n4 4\\n3 3\\n') == '0\\n'\nassert solution('10 10\\n6 2\\n4 4\\n3 3\\n') == '1\\n'\nassert solution('10 10\\n6 2\\n4 4\\n3 3\\n') == '0\\n'\nassert solution('10 10\\n6 2\\n4 4\\n3 3\\n') == '1\\n'\nassert solution('10 10\\n6 2\\n4 4\\n3 3\\n') == '1\\n'\nassert solution('10 10\\n6 2\\n4 4\\n3 3\\n') == '0\\n'\nassert solution('10 10\\n6 2\\n4 4\\n3 3\\n') == '0\\n'\nassert solution('10 10\\n6 2\\n4 4\\n3 3\\n') == '0\\n'\nassert solution('10 10\\n6 2\\n4 4\\n3 3\\n') == '0\\n'\nassert solution('10 "
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '5', \"The solution should return the value 5.\""
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed. Expected: {expected_output}, Received: {solution(stdin)}\""
    },
    {
        "number": 3261,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('10 10\\n6\\n3 5\\n11') == 5\nassert solution('5 5\\n7') == 3\nassert solution('1000000 1000000\\n1000000') == 1000000\nassert solution('1000000 1000000\\n1000001') == 1000000"
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Output a single integer that is the minimum number of vehicles required to ensure each client i is visited at time T_ i by some vehicle.\\n\"\nassert solution(stdin) == \"2\\n\"\nassert solution(stdin) == \"3\\n\""
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\") == \"2\"\nassert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\") == \"3\""
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 2\\n1 2 1\\n3 2 1') == '2'\nassert solution('4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1') == '3'"
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\nr\"\"\"\n4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 2\n1 2 1\n3 2 1\n\"\"\"\n) == \"2\"\n\nassert solution(\nr\"\"\"\n4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\n\"\"\"\n) == \"3\""
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 2\\n1 2 1\\n3 2 1\") == \"2\"\nassert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\") == \"3\""
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 2\\n1 2 1\\n3 2 1') == '2\\n'\nassert solution('4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1') == '3\\n'"
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 2\\n1 2 1\\n3 2 1') == '2'\nassert solution('4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1') == '3'"
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 2\\n1 2 1\\n3 2 1\\n') == '2\\n'\nassert solution('4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 2\\n1 2 1\\n3 2 1\\n') == '3\\n'"
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"2\", \"Your solution is incorrect!\""
    },
    {
        "number": 3262,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 2\\n1 2 1\\n3 2 1\") == \"2\"\nassert solution(\"4 5 3\\n1 2 3\\n0 1 1\\n0 3 1\\n0 2 1\\n1 2 1\\n3 2 1\") == \"3\""
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(30) == 3"
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n10 20 30\\n5 5 10\\n2 20\\n1 30\\n1 32\\n3 120\") == \"3\"\n\nassert solution(\"3 1\\n10\\n10\\n1 10\\n1 10\\n1 10\") == \"3\""
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n10 20 30\\n5 5 10\\n2 20\\n1 30\\n1 32\\n3 120\") == \"3\"\n\nassert solution(\"3 1\\n10\\n10\\n1 10\\n1 10\\n1 10\") == \"3\""
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"3\""
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n4 3\n10 20 30\n5 5 10\n2 20\n1 30\n1 32\n3 120\n''') == '3'"
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n4 3\n10 20 30\n5 5 10\n2 20\n1 30\n1 32\n3 120\n''') == '3\\n'\nassert solution('''\n3 1\n10\n10\n1 10\n1 10\n1 10\n''') == '3\\n'"
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(solution_input) == solution_output, \"Expected:\\n{}\\nGot:\\n{}\\n\".format(solution_output, solution(solution_input))"
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received: {solution(input())}\""
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"3\", \"Expected output to be 3, but got {}\".format(solution())"
    },
    {
        "number": 3263,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 3\\n10 20 30\\n5 5 10\\n2 20\\n1 30\\n1 32\\n3 120') == 3\n"
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\") == 1\nassert solution(\"3\") == 5"
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1\\n\"\n"
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"1\\n\"\nassert solution(stdin) == \"5\\n\""
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"5\"\nassert solution(10) == \"1\""
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    2\n    3\n    \"\"\"\n) == \"1\"\n\nassert solution(\n    \"\"\"\n    5\n    \"\"\"\n) == \"5\""
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"1\\n\", \"First test case failed\"\nassert solution(\"3\") == \"5\\n\", \"Second test case failed\""
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"1\", \"Your solution is incorrect.\"\n"
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=r'2\\n') == '1\\n'\nassert solution(stdin=r'3\\n') == '5\\n'"
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1\\n\", \"Test case 1 failed\"\nassert solution(stdin) == \"5\\n\", \"Test case 2 failed\""
    },
    {
        "number": 3264,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"2\\n3\") == \"1\\n\"\nassert solution(stdin=\"3\\n\") == \"5\\n\""
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1\\n0 11 9\\n1 0 10\\n0 0 0\") == \"2\"\nassert solution(\"4 3\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0\") == \"-1\""
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 1\\n0 11 9\\n1 0 10\\n0 0 0') == 2\nassert solution('4 3\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0') == -1"
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 1\\n0 11 9\\n1 0 10\\n0 0 0') == 2\nassert solution('4 3\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0') == -1\n"
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1\\n0 11 9\\n1 0 10\\n0 0 0\") == \"2\"\nassert solution(\"4 3\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0\") == \"-1\"\nassert solution(\"1 1\\n1 1 0\\n1 1 0\\n1 1 0\") == \"1\"\nassert solution(\"1 2\\n1 2 0\\n1 2 0\\n1 2 0\") == \"2\"\nassert solution(\"1 3\\n1 3 0\\n1 3 0\\n1 3 0\") == \"3\"\nassert solution(\"1 4\\n1 4 0\\n1 4 0\\n1 4 0\") == \"4\"\nassert solution(\"1 5\\n1 5 0\\n1 5 0\\n1 5 0\") == \"5\"\nassert solution(\"2 1\\n2 1 0\\n2 1 0\\n2 1 0\") == \"1\"\nassert solution(\"2 2\\n2 2 0\\n2 2 0\\n2 2 0\") == \"2\"\nassert solution(\"2 3\\n2 3 0\\n2 3 0\\n2 3 0\") == \"3\"\nassert solution(\"2 4\\n2 4 0\\n2 4 0\\n2 4 0\") == \"4\"\nassert solution(\"2 5\\n2 5 0\\n2 5 0\\n2 5 0\") == \"5\"\nassert solution(\"3 1\\n3 1 0\\n3 1 0\\n3 1 0\") == \"1\"\nassert solution(\"3 2\\n3 2 0\\n3 2 0\\n3 2 0\") == \"2\"\nassert solution(\"3 3\\n3 3 0\\n3 3 0\\n3 3 0\") == \"3\"\nassert solution(\"3 4\\n3 4 0\\n3 4 0\\n3 4 0\") == \"4\"\nassert solution(\"3 5\\n3 5 0\\n3 5 0\\n3 5 0\") == \"5\"\nassert solution(\"4 1\\n4 1 0\\n4 1 0\\n4 1 0\") == \"1\"\nassert solution(\"4 2\\n4 2 0\\n4 2 0\\n4 2 0\") == \"2\"\nassert solution(\"4 3\\n4 3 0\\n4 3 0\\n4 3 0\") == \"3\"\nassert solution(\"4 4\\n4 4 0\\n4 4 0\\n4 4 0\") == \"4\"\nassert solution(\"4 5\\n4 5 0\\n4 5 0\\n4 5 0\") == \"5\"\nassert solution(\"5 1\\n5 1 0\\n5 1 0\\n5 1 0\") == \"1\"\nassert solution(\"5 2\\n5 2 0\\n5 2 0\\n5 2 0\") == \"2\"\nassert solution(\"5 3\\n5 3 0\\n5 3 0\\n5 3 0\") == \"3\"\nassert solution(\"5 4\\n5 4 0\\n5 4 0\\n5 4 0\") == \"4\"\nassert solution(\"5 5\\n5 5 0\\n5 5 0\\n5 5 0\") == \"5\"\nassert solution(\"6 1\\n6 1 0\\n6 1 0\\n6 1 0\") == \"1\"\nassert solution(\"6 2\\n6 2 0\\n6 2 0\\n6 2 0\") == \"2\"\nassert solution(\"6 3\\n6 3 0\\n6 3 0\\n6 3 0\") == \"3\"\nassert solution(\"6 4\\n6 4 0\\n6 4"
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 2, \"Expected output: 2, but got: {}\".format(solution())"
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2\", \"Expected output '2', got '{}'.\".format(solution())\nassert solution() == \"-1\", \"Expected output '-1', got '{}'.\".format(solution())"
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 2\n\nassert solution() == -1"
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"\"\"\nAlice and Bob spend this summer planning next year\u2019s summer vacation. They want to travel from the old city of A-town to the popular summer resort B-ville, but they haven\u2019t yet decided which other places to visit en route. There are 4 places to visit in total, numbered from 1 to N. A-town is place number 1 and B-ville is place number N. Some places are linked by one-directional connections; a pair of places can be linked by multiple such connections.\n\nAlice and Bob are currently in A-town. Each day they will decide where to travel next by choosing uniformly at random among the connections leaving their current place. Once they reach B-ville, they stop.\n\nAlice and Bob want to book their trip back on a day where they are in B-ville with 95% probability. And they really mean exactly 95% \u2013 no more, no less! There is a 10 day window when train tickets are affordable; if their return trip does no occur within that window they might as well cancel the entire vacation.\n\nYou are given a positive integer L and have to find a number T with L <= T <= L + 9 such that the probability of Alice and Bob being in B-ville after T days is exactly 95%. If there is more than one valid T, report smallest one.\n\"\"\"\n"
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1\\n0 11 9\\n1 0 10\\n0 0 0\") == 2\nassert solution(\"4 3\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0\") == -1\nassert solution(\"5 1\\n0 0 0\") == -1\n"
    },
    {
        "number": 3265,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1\\n0 11 9\\n1 0 10\\n0 0 0\") == \"2\"\nassert solution(\"4 3\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0\") == \"-1\""
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10\") == \"4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\"\nassert solution(\"2 1 0 1\\n0 1 100000\") == \"2 100000 1\\n0 1 100000\""
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Test failed. Check the output.\"\n\ninput_1 = \"\"\"\n4 5 0 3\n0 1 10\n1 2 1\n1 3 1\n0 2 1\n2 3 10\n\"\"\"\n\noutput_1 = \"\"\"\n4 3 5\n0 1 2\n0 2 1\n1 2 1\n1 3 1\n2 3 2\n\"\"\"\n\nassert solution(input_1) == output_1, \"Test failed. Check the output.\"\n\ninput_2 = \"\"\"\n2 1 0 1\n0 1 100000\n\"\"\"\n\noutput_2 = \"\"\"\n2 100000 1\n0 1 100000\n\"\"\"\n\nassert solution(input_2) == output_2, \"Test failed. Check the output.\""
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == expected_output1\nassert solution(sample_input2) == expected_output2"
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10\\n\") == \"4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\\n\"\n\nassert solution(\"2 1 0 1\\n0 1 100000\\n\") == \"2 100000 1\\n0 1 100000\\n\""
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10\\n\") == \"4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\\n\""
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2"
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10\\n\") == \"4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\\n\"\nassert solution(\"2 1 0 1\\n0 1 100000\\n\") == \"2 100000 1\\n0 1 100000\\n\""
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10\\n\") == \"4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\\n\""
    },
    {
        "number": 3266,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input1) == solution_output1\nassert solution(sample_input2) == solution_output2"
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    2 3\n    SMS\n    MMS\n    \"\"\"\n) == \"\"\"\n    3 5\n    2 0\n    \"\"\"\n\nassert solution(\n    \"\"\"\n    2 3\n    S.M\n    M..\n    \"\"\"\n) == \"\"\"\n    2 0\n    0 2\n    \"\"\"\n\nassert solution(\n    \"\"\"\n    2 3\n    S.M\n    M..\n    \"\"\"\n) == \"\"\"\n    2 0\n    0 2\n    \"\"\""
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 3\\nSMS\\nMMS\\n') == '3 5\\n'\nassert solution('2 3\\nS.M\\nM..\\n') == '2 0\\n'"
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == \"3 5\", \"Expected Output 1: 3 5, but got {}\".format(solution(sample_input1))\nassert solution(sample_input2) == \"2 0\", \"Expected Output 2: 2 0, but got {}\".format(solution(sample_input2))"
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\nSMS\\nMMS\") == \"3 5\\n\", \"Sample Input 1\"\nassert solution(\"2 3\\nS.M\\nM..\") == \"2 0\\n\", \"Sample Input 2\""
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\nSMS\\nMMS\\n\") == \"3 5\\n\"\nassert solution(\"2 3\\nS.M\\nM..\\n\") == \"2 0\\n\"\n"
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\nSMS\\nMMS\\n\") == \"3 5\"\nassert solution(\"2 3\\nS.M\\nM..\") == \"2 0\""
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '3 5\\n2 0', \"Your solution is incorrect\""
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"3 5\\n2 0\"\n"
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\nSMS\\nMMS\") == \"3 5\\n\", \"Mirko and Slavko are playing a chess like game. The game is played on a non-standard chess board sized 2 rows by 3 columns. Each player starts with some number of chess kings. In chess kings can move from their current field to any of the 8 neighbouring fields. Player spread is defined as the complete sum of distances between all pairs of pieces of the given player. The distance between two pieces is the smallest number of moves required for both pieces to reach the same field. No actual moves are performed when calculating the distance and as such enemy pieces do not influence the result. Mirko knows that the spread is a vital piece of strategic information and would like you to make him a program that will calculate both his and Slavko\u2019s spread.\"\n\nassert solution(\"2 3\\nS.M\\nM..\") == \"2 0\\ndef solution(stdin: str) -> str: \\n    pass \\n\", \"Mirko and Slavko are playing a chess like game. The game is played on a non-standard chess board sized 2 rows by 3 columns. Each player starts with some number of chess kings. In chess kings can move from their current field to any of the 8 neighbouring fields. Player spread is defined as the complete sum of distances between all pairs of pieces of the given player. The distance between two pieces is the smallest number of moves required for both pieces to reach the same field. No actual moves are performed when calculating the distance and as such enemy pieces do not influence the result. Mirko knows that the spread is a vital piece of strategic information and would like you to make him a program that will calculate both his and Slavko\u2019s spread.\""
    },
    {
        "number": 3267,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\nSMS\\nMMS\\n2 3\\nS.M\\nM..\") == \"3 5\\n2 0\""
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"13\\n0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a\\n\") == \"2\\n3 c\\n6 c\\n\"\nassert solution(\"6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n\") == \"1\\n6 b\\ndef solution(stdin: str) -> str: pass\"\nassert solution(\"13\\n0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a\\n\") == \"2\\n3 c\\n6 c\\n\""
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('13\\n0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a\\n') == '2\\n3 c\\n6 c\\n'\nassert solution('6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n') == '1\\n6 b\\n'"
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('example1.in', 'r')) == '2\\n3 c\\n6 c\\n'\nassert solution(open('example2.in', 'r')) == '1\\n6 b\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"13\\n0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a\") == \"2\\n3 c\\n6 c\\n\"\nassert solution(\"6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n\") == \"1\\n6 b\\n\"\nassert solution(\"\") == \"\"\nassert solution(\"13\\n0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a\") == \"2\\n3 c\\n6 c\\n\"\nassert solution(\"6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n\") == \"1\\n6 b\\n\""
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"2\\n3 c\\n6 c\\n\"\nassert solution(open(\"input.txt\", \"r\")) == \"1\\n6 b\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"13\\n0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a\\n\") == \"2\\n3 c\\n6 c\\n\"\nassert solution(\"6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n\") == \"1\\n6 b\\n\"\nassert solution(\"6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n6 B\\n6 G a\\n6 T a\\n6 E a\\n6 E b\\n\") == \"1\\n6 b\\n\""
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"13\\n0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a\\n\") == \"2\\n3 c\\n6 c\\n\""
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"13\\n0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a\") == 2\nassert solution(\"6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\") == 1\nassert solution(\"\") == 1\nassert solution(\"1\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\") == 6\nassert solution(\"2\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\") == 6\nassert solution(\"1\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\") == 6\nassert solution(\"2\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\") == 6\nassert solution(\"1\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\") == 6\nassert solution(\"2\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\") == 6\nassert solution(\"1\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\") == 6\nassert solution(\"2\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\") == 6\nassert solution(\"1\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\") == 6\nassert solution(\"2\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\") == 6\nassert solution(\"1\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\") == 6\nassert solution(\"2\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\") == 6\nassert solution(\"1\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\") == 6\nassert solution(\"2\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\") == 6\nassert solution(\"1\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\") == 6\nassert solution(\"2\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\") == 6\nassert solution(\"1\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\") == 6\nassert solution(\"2\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\") == 6\nassert solution(\"1\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\") == 6\nassert solution(\"2\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\") == 6\nassert solution(\"1\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\") == 6\nassert solution(\"2\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\") == 6\nassert solution(\"1\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\") == 6\nassert solution(\"2\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\") == 6\nassert solution(\"1\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\") == 6\nassert solution(\"2\\n0 B\\n"
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r')) == \"\"\"2\n3 c\n6 c\n\"\"\"\n\nassert solution(open('input1.txt', 'r')) == \"\"\"1\n6 b\n\"\"\"\n\nassert solution(open('input2.txt', 'r')) == \"\"\"1\n6 b\n\"\"\""
    },
    {
        "number": 3268,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('13\\n0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a\\n') == '2\\n3 c\\n6 c\\n'\nassert solution('6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 T a\\n') == '1\\n6 b\\n'\nassert solution('13\\n0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a\\n') == '2\\n3 c\\n6 c\\n'"
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, \"Test case failed.\""
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 5') == '40'\nassert solution('288 291') == '76'"
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 5\") == \"40\\n\", \"Input 1\"\nassert solution(\"288 291\") == \"76\\n\", \"Input 2\""
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 5\") == \"40\\n\"\nassert solution(\"288 291\") == \"76\\n\""
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 5\\n288 291\") == \"76\"\nassert solution(\"1 1\\n1 1\") == \"2\"\nassert solution(\"0 1\\n1 1\") == \"0\"\nassert solution(\"0 0\\n1 1\") == \"0\"\nassert solution(\"1 1\\n1 0\") == \"1\"\nassert solution(\"9 9\") == \"1\"\nassert solution(\"1 9\") == \"1\"\nassert solution(\"10 9\") == \"1\"\nassert solution(\"0 1\\n0 1\") == \"0\"\nassert solution(\"0 0\\n0 1\") == \"0\"\nassert solution(\"0 0\\n0 0\") == \"0\"\nassert solution(\"0 1\\n1 1\") == \"1\"\nassert solution(\"0 1\\n0 0\") == \"0\"\nassert solution(\"1 1\\n1 1\") == \"2\"\nassert solution(\"0 0\\n0 0\") == \"0\"\nassert solution(\"0 1\\n1 1\") == \"1\"\nassert solution(\"0 1\\n0 0\") == \"0\"\nassert solution(\"0 0\\n0 1\") == \"0\"\nassert solution(\"0 0\\n0 0\") == \"0\"\nassert solution(\"0 1\\n1 1\") == \"1\"\nassert solution(\"0 1\\n0 0\") == \"0\"\nassert solution(\"0 0\\n0 1\") == \"0\"\nassert solution(\"0 0\\n0 0\") == \"0\"\nassert solution(\"0 1\\n1 1\") == \"1\"\nassert solution(\"0 1\\n0 0\") == \"0\"\nassert solution(\"0 0\\n0 1\") == \"0\"\nassert solution(\"0 0\\n0 0\") == \"0\"\nassert solution(\"0 1\\n1 1\") == \"1\"\nassert solution(\"0 1\\n0 0\") == \"0\"\nassert solution(\"0 0\\n0 1\") == \"0\"\nassert solution(\"0 0\\n0 0\") == \"0\"\nassert solution(\"0 1\\n1 1\") == \"1\"\nassert solution(\"0 1\\n0 0\") == \"0\"\nassert solution(\"0 0\\n0 1\") == \"0\"\nassert solution(\"0 0\\n0 0\") == \"0\"\nassert solution(\"0 1\\n1 1\") == \"1\"\nassert solution(\"0 1\\n0 0\") == \"0\"\nassert solution(\"0 0\\n0 1\") == \"0\"\nassert solution(\"0 0\\n0 0\") == \"0\"\nassert solution(\"0 1\\n1 1\") == \"1\"\nassert solution(\"0 1\\n0 0\") == \"0\"\nassert solution(\"0 0\\n0 1\") == \"0\"\nassert solution(\"0 0\\n0 0\") == \"0\"\nassert solution(\"0 1\\n1 1\") == \"1\"\nassert solution(\"0 1\\n0 0\") == \"0\"\nassert solution(\"0 0\\n0 1\") == \"0\"\nassert solution(\"0 0\\n0 0\") == \"0\"\nassert solution(\"0 1\\n1 1\") == \"1\"\nassert solution(\"0 1\\n0 0\") == \"0\"\nassert solution(\"0 0\\n0 1\") == \"0\"\nassert solution(\"0 0\\n0 0\") == \"0\"\nassert solution(\"0 1\\n1 1\") == \"1\"\nassert solution(\"0 1\\n0 0\") == \"0\"\nassert solution(\"0 0\\n0 1\") == \"0\"\nassert solution(\"0 0\\n0 0\") == \"0\"\nassert solution(\"0 1\\n1 1\") == \"1\"\nassert solution(\"0 1\\n0 0\") == \"0\"\nassert solution(\"0 0\\n0 1\") == \"0\"\nassert solution(\"0 0\\n0 0\") == \"0\"\nassert solution(\"0 1\\n1 1\") == \"1\"\nassert solution(\"0 1\\n0 0\") == \"0"
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\"\n"
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for {input()}, expected output: {expected_output}, got: {solution(input())}\""
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 5\\n288 291\\n\") == \"40\\n76\\n\"\n"
    },
    {
        "number": 3269,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 5\") == \"40\"\nassert solution(\"288 291\") == \"76\"\n\nfrom typing import List"
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Expected: {output()}, but got: {solution(input())}\"\n"
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 'COG'\nprint('COG')"
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"COG\", \"The solution is incorrect.\"\nassert solution(\"3\") == \"COG\", \"The solution is incorrect.\"\nassert solution(\"2\") == \"0\", \"The solution is incorrect.\"\nassert solution(\"1\") == \"0\", \"The solution is incorrect.\""
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\nCAT\\nDOG\\nCOT\\n\") == \"COG\\n3\\n\"\nassert solution(\"2\\nCAT\\nDOG\\n\") == \"0\\n-1\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\"\nassert solution(\"1\\nHELLO\\nWORLD\\n\") == \"0\\n-1\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\"\nassert solution(\"3\\nABCD\\nEFGH\\nHIJKL\\n\") == \"0\\n-1\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\"\nassert solution(\"4\\nA\\nB\\nC\\nD\\nE\\nF\\nG\\nH\\nI\\nJ\\nK\\nL\\nM\\nN\\nO\\nP\\nQ\\nR\\nS\\nT\\nU\\nV\\nW\\nX\\nY\\nZ\\n\") == \"0\\n-1\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\""
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input1) == sample_output1, \"Incorrect Output 1\"\nassert solution(sample_input2) == sample_output2, \"Incorrect Output 2\""
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"The solution is incorrect. Expected: {output()}, but got: {solution(input())}\""
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin='3\\nCAT\\nDOG\\nCOT\\n') == 'COG\\n3\\n'\n\nassert solution(stdin='2\\nCAT\\nDOG\\n') == '0\\n-1\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\nCAT\\nDOG\\nCOT\\n\") == \"COG\\n3\\n\"\nassert solution(\"2\\nCAT\\nDOG\\n\") == \"0\\n-1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3270,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 'COG', \"The expected output is not found.\""
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 1\\n4 3\\n\") == \"9\""
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 9, \"The solution is incorrect.\"\nassert solution == 6, \"The solution is incorrect.\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 1\\n\") == \"9\\n\"\nassert solution(\"4 3\\n\") == \"6\\n\""
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, \"Test case failed. Expected output: {}, got: {}\".format(output, solution(input()))"
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Testcase {case_id} failed.\""
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 'Output the number of sequences modulo 1000000007.'"
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received: {solution(input())}\""
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"9\"\nprint(\"All tests passed\")\n"
    },
    {
        "number": 3271,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 1\\n4 3\\n\") == \"9\\n6\\n\""
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 5\\n/.V.\\n./.V..#...V.#. \\.V./\") == 3\nassert solution(\"2 5\\nV...\\nH...V\") == -1"
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''5 5\n/.V.\\\n./.V.\n..#..\n.V.#.\n\\.V./\n''') == 3\n\nassert solution('''2 5\nV...\\\nH...V\n''') == -1"
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 5\\n/.V.\\n./.V. \\n..#.. \\n.V.#. \\n\\.V./\\n\") == 3\nassert solution(\"2 5\\nV...\\nH...V\\n\") == -1"
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 5\\n/.V.\\n./.V. \\n..#.. \\n.V.#. \\n\\.V./\") == 3\nassert solution(\"2 5\\nV...\\nH...V\") == -1"
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('sample_input.txt', 'r')) == '3'\nassert solution(open('sample_input2.txt', 'r')) == '-1'"
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 5\\n/.V.\\n./.V. \\n..#.. \\n.V.#. \\n\\.V./\\n\") == 3\nassert solution(\"2 5\\nV...\\nH...V\\n\") == -1\n"
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Test {test_case} failed. Expected output: {expected_output}, but got {solution(input())}\"\n\ntest_case += 1\n\nfor line in test_input:\n    n, m = map(int, line.split())\n    s = \"\"\n    for _ in range(n):\n        s += input().strip()\n    floorplan = [line.strip() for line in s.split(\"\\n\")]"
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 3\nassert solution == -1"
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 5\\n/.V.\\n./.V.\\n..#..\\n.V.#.\\\\\\n\\.V./') == 3\nassert solution('2 5\\nV...\\nH...V') == -1"
    },
    {
        "number": 3272,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"\n"
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == 'AMBIGUOUS'"
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"n fox jumps ove\\nuick brown f\\nThe quick b\\ny dog.\\rown fox\\mps over the l\\the lazy dog\\n\") == \"The quick brown fox jumps over the lazy dog.\"\nassert solution(\"cdefghi\\nefghijk\\nefghijx\\nabcdefg\\n\") == \"AMBIGUOUS\""
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"The quick brown fox jumps over the lazy dog.\""
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution([\n    'n', 'f', 'o', 'x', 'j', 'u', 'i', 'c', 'k',\n    'b', 'r', 'w', 'n', 'f', 'o', 'x', 'j', 'u', 'i', 'c', 'k',\n    'b', 'r', 'w', 'n', 'f', 'o', 'x', 'j', 'u', 'i', 'c', 'k',\n    'b', 'r', 'w', 'n', 'f', 'o', 'x', 'j', 'u', 'i', 'c', 'k',\n    'b', 'r', 'w', 'n', 'f', 'o', 'x', 'j', 'u', 'i', 'c', 'k',\n    'b', 'r', 'w', 'n', 'f', 'o', 'x', 'j', 'u', 'i', 'c', 'k',\n    'b', 'r', 'w', 'n', 'f', 'o', 'x', 'j', 'u', 'i', 'c', 'k',\n    'b', 'r', 'w', 'n', 'f', 'o', 'x', 'j', 'u', 'i', 'c', 'k',\n    'b', 'r', 'w', 'n', 'f', 'o', 'x', 'j', 'u', 'i', 'c', 'k',\n    'b', 'r', 'w', 'n', 'f', 'o', 'x', 'j', 'u', 'i', 'c', 'k',\n    'b', 'r', 'w', 'n', 'f', 'o', 'x', 'j', 'u', 'i', 'c', 'k',\n    'b', 'r', 'w', 'n', 'f', 'o', 'x', 'j', 'u', 'i', 'c', 'k',\n    'b', 'r', 'w', 'n', 'f', 'o', 'x', 'j', 'u', 'i', 'c', 'k',\n    'b', 'r', 'w', 'n', 'f', 'o', 'x', 'j', 'u', 'i', 'c', 'k',\n    'b', 'r', 'w', 'n', 'f', 'o', 'x', 'j', 'u', 'i', 'c', 'k',\n    'b', 'r', 'w', 'n', 'f', 'o', 'x', 'j', 'u', 'i', 'c', 'k',\n    'b', 'r', 'w', 'n', 'f', 'o', 'x', 'j', 'u', 'i', 'c', 'k',\n    'b', 'r', 'w', 'n', 'f', 'o', 'x', 'j', 'u', 'i', 'c', 'k',\n    'b', 'r', 'w', 'n', 'f', 'o', 'x', 'j', 'u', 'i', 'c', 'k',\n    'b', 'r', 'w', 'n', 'f', 'o', 'x', 'j', 'u', 'i', 'c', 'k',\n    'b', 'r', 'w', 'n', 'f', 'o', 'x', 'j', 'u', 'i', 'c', 'k',\n    'b', 'r', 'w', 'n', 'f', 'o', 'x', 'j', 'u', 'i', 'c', 'k',\n    'b', 'r', 'w', 'n', 'f', 'o', 'x', 'j', 'u', 'i', 'c', 'k',\n    'b', 'r', 'w', 'n', 'f', 'o', 'x', 'j', 'u', 'i', 'c', 'k',\n    'b', 'r', 'w', 'n', 'f', 'o', 'x', 'j', 'u', 'i', 'c', 'k',\n    'b', 'r', 'w', 'n', 'f', 'o', 'x', 'j', 'u', 'i', 'c', 'k',\n    'b', 'r', 'w', 'n', 'f', 'o', 'x', 'j', 'u', 'i', 'c', 'k',\n    'b', 'r', 'w', 'n', 'f', 'o', 'x', 'j', 'u', 'i', 'c"
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('7\\nn fox jumps ove\\nuick brown f\\nThe quick b\\ny dog.\\nrown fox\\mps over the l\\the lazy dog\\n') == 'The quick brown fox jumps over the lazy dog.'"
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"AMBIGUOUS\" # Your solution should work for this problem."
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"The quick brown fox jumps over the lazy dog.\"\n"
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"The quick brown fox jumps over the lazy dog.\") == \"The quick brown fox jumps over the lazy dog.\"\nassert solution(\"n fox jumps ove\") == \"AMBIGUOUS\"\nassert solution(\"uick brown f\") == \"uick brown f\"\nassert solution(\"The quick b\") == \"AMBIGUOUS\"\nassert solution(\"rown fox\") == \"AMBIGUOUS\"\nassert solution(\"mps over the l\") == \"mps over the l\"\nassert solution(\"the lazy dog\") == \"the lazy dog\"\nassert solution(\"cdefghi\") == \"AMBIGUOUS\"\nassert solution(\"efghijk\") == \"efghijk\"\nassert solution(\"efghijx\") == \"AMBIGUOUS\"\nassert solution(\"abcdefg\") == \"AMBIGUOUS\""
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Test case {t+1} failed. Expected output: {expected_output}, but got: {solution(input())}\"\nfor t in range(1, T+1):\n    expected_output = Solution().reconstruct_text(fragments)\n    assert solution(input()) == expected_output, f\"Test case {t+1} failed. Expected output: {expected_output}, but got: {solution(input())}\""
    },
    {
        "number": 3273,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"The quick brown fox jumps over the lazy dog.\") == \"The quick brown fox jumps over the lazy dog.\"\nassert solution(\"cdefghi\") == \"AMBIGUOUS\""
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1\\n\") == \"--+0-\"\nassert solution(\"3 2\\n1 2 1\\n-2 0 2\\n\") == \"0+-\"\nassert solution(\"5 1\\n-2 -1 2\\n1 -1 1\\n2 1 1\\n-3 -3 1\\n0 1 1\\n2 1 2\\n\") == \"impossible\""
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1\\n') == '--+0-'\nassert solution('3 2\\n1 2 1\\n-2 0 2\\n') == '0+-'"
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1\") == \"---\\n0+0\\n\"\nassert solution(\"3 2\\n1 2 1\\n-2 0 2\") == \"0+-\\n\"\nassert solution(\"5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1\") == \"---\\n0+0\\n\""
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1') == '--+0-'\nassert solution('3 2\\n1 2 1\\n-2 0 2') == '0+-'"
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1') == '--+0-'\nassert solution('3 2\\n1 2 1\\n-2 0 2') == '0+-'"
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(str(input())) == \"def solution(stdin: str) -> str:\\n    pass\\n\\nif __name__ == '__main__':\\n    solution(str(input()))\"\n"
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n    5 6\n    -3 -2 3\n    -2 -2 4\n    2 3 3\n    -1 1 2\n    0 1 4\n    2 5 1\n''') == '''\n--+0-\n'''\n\nassert solution('''\n    3 2\n    -2 0 2\n''') == '''\n0+-\n'''\n\nassert solution('''\n    5 6\n    -3 -2 3\n    -2 -2 4\n    2 3 3\n    -1 1 2\n    0 1 4\n    2 5 1\n    5 7\n    -4 -3 2\n    3 4 1\n    4 5 3\n    2 5 2\n''') == '''\n--+0-\n'''"
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1\") == \"0+-\"\nassert solution(\"3 2\\n1 2 1\\n-2 0 2\") == \"0+-\"\nassert solution(\"10 100\\n0 0 1\\n10 0 10\\n0 10 10\\n0 0 10\") == \"impossible\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1\\n') == '---+-\\n'\nassert solution('3 2\\n1 2 1\\n-2 0 2\\n') == '0+-\\n'\nassert solution('4 5\\n0 1 2\\n3 4 5\\n6 7 8\\n') == 'impossible\\n'\nassert solution('4 0\\n2 3 4\\n5 6 7\\n8 9 10\\n') == 'impossible\\n'\nassert solution('100 100\\n') == 'impossible\\n'"
    },
    {
        "number": 3274,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"0+-\", \"Please implement the solution.\""
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('Sample Input 1') == '1\\n'\nassert solution('Sample Input 2') == '4\\n4\\n'"
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\n1 1\\n1 1\\n1\\n1 1 1\") == \"1\\n\"\nassert solution(\"2 2\\n1 2\\n2 3\\n2\\n1 2 2\\n2 2 2\") == \"4\\n4\\n\"\n"
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1\\n\"\nassert solution(\"2 2\\n1 1\\n1 1\\n1\\n1 1 1\\n2 2 2\\n2 2 2\\n\") == \"1\\n4\\n4\""
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\n1 1\\n1 1\\n1\\n1 1 1\") == \"1\\n\"\nassert solution(\"2 2\\n1 2\\n2 3\\n2\\n1 2 2\\n2 2 2\") == \"4\\n4\\n\""
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1\\n\"\nassert solution() == \"4\\n4\\n\"\n\nsolution(open(\"input.txt\", \"r\").read())"
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '1'\n\nfrom typing import List"
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n1 1\\n1 1\\n1\\n1 1 1\") == \"1\"\nassert solution(\"2 2\\n1 2\\n2 3\\n2\\n1 2 2\\n2 2 2\") == \"4\"\nassert solution(\"\") == \"\""
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\n1 1\\n1 1\\n1\\n1 1 1\") == \"1\\n\"\nassert solution(\"2 2\\n1 2\\n2 3\\n2\\n1 2 2\\n2 2 2\") == \"4\\n4\\n\""
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\n1 1\\n1 1\\n1\\n1 1 1\") == \"1\"\nassert solution(\"2 2\\n1 2\\n2 3\\n2\\n1 2 2\\n2 2 2\") == \"4\\n4\""
    },
    {
        "number": 3275,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"1\\n\"\n"
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n4 5\nWRRRG\nWRRRG\nWRRRG\nWBBBB\n''') == \"YES\"\nassert solution('''\n3 4\nWWRR\nWRRR\nWRRR\n''') == \"NO\""
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\") == \"YES\"\nassert solution(\"3 4\\nWWRR\\nWRRR\\nWRRR\\n\") == \"NO\""
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"YES\"\n"
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\") == \"YES\"\nassert solution(\"3 4\\nWWRR\\nWRRR\\nWRRR\") == \"NO\""
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\") == \"YES\\n\"\nassert solution(\"3 4\\nWWRR\\nWRRR\\nWRRR\\n\") == \"NO\\n\""
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\") == \"YES\"\nassert solution(\"3 4\\nWWRR\\nWRRR\\nWRRR\\n\") == \"NO\""
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\") == \"YES\"\nassert solution(\"3 4\\nWWRR\\nWRRR\\nWRRR\\n\") == \"NO\""
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\") == \"YES\"\nassert solution(\"3 4\\nWWRR\\nWRRR\\nWRRR\") == \"NO\""
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"YES\""
    },
    {
        "number": 3276,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\\n\") == \"YES\"\nassert solution(\"3 4\\nWWRR\\nWRRR\\nWRRR\\n\") == \"NO\""
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 'Your program must output a single integer specifying the minimum number of changes that must be made in order to make the array K_ S smooth.\\n'"
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Test case failed\""
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == '1'\nassert solution(sample_input2) == '3'"
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1\""
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3 5\\n1\\n2\\n3\") == \"1\"\nassert solution(\"6 3 5\\n1\\n2\\n3\\n3\\n2\\n1\") == \"3\""
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 1\nassert solution(6) == 3\nassert solution(10) == 3"
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(read_input()) == expected_output, f\"Test {test_num}: expected output: {expected_output}, got: {solution(read_input())}\"\n"
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3 5\\n1\\n2\\n3\") == \"1\"\nassert solution(\"6 3 5\\n1\\n2\\n3\\n3\\n2\\n1\") == \"3\""
    },
    {
        "number": 3277,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3 3 5\n1\n2\n3) == 1\nassert solution(6 3 5\n1\n2\n3\n3\n2\n1) == 3"
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n0 2\\n1 2\\n3 3\\n\") == \"3 2\\n\", \"Sample Input 1\"\nassert solution(\"5\\n0 2\\n1 3\\n3 3\\n7 5\\n9 5\\n\") == \"12 3\\n\", \"Sample Input 2\""
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n0 2\\n1 2\\n3 3\\n\") == \"3 2\\n\", \"Sample Input 1\"\nassert solution(\"5\\n0 2\\n1 3\\n3 3\\n7 5\\n9 5\\n\") == \"12 3\\n\", \"Sample Input 2\"\nassert solution(\"\") == \"\", \"Sample Input 3\"\nassert solution(\"1\\n0 2\\n1 2\\n3 3\\n\") == \"1 2\\n\", \"Sample Input 4\"\nassert solution(\"5\\n0 2\\n1 3\\n3 3\\n7 5\\n9 5\\n\") == \"12 3\\n\", \"Sample Input 5\"\n"
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 2\\n1 2\\n3 3\\n5\\n0 2\\n1 3\\n3 3\\n7 5\\n9 5\") == \"12 3\"\n\nfrom typing import List"
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n0 2\\n1 2\\n3 3\\n\") == \"3 2\\n\"\nassert solution(\"5\\n0 2\\n1 3\\n3 3\\n7 5\\n9 5\\n\") == \"12 3\\n\""
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n0 2\\n1 2\\n3 3\\n\") == \"3 2\\n\"\nassert solution(\"5\\n0 2\\n1 3\\n3 3\\n7 5\\n9 5\\n\") == \"12 3\\n\""
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 2\\n1 2\\n3 3\\n0 2\\n1 3\\n3 3\\n7 5\\n9 5\\n\") == \"3 2\\n12 3\""
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 2\\n1 2\\n3 3\\n5\\n0 2\\n1 3\\n3 3\\n7 5\\n9 5\") == \"12 3\"\nassert solution(\"0 2\\n1 2\\n3 3\\n5\\n0 2\\n1 3\\n3 3\\n7 5\\n9 5\\n6\\n0 3\") == \"6 3\""
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n0 2\\n1 2\\n3 3\\n\") == \"3 2\\n\", \"The output should be '3 2\\n'.\"\nassert solution(\"5\\n0 2\\n1 3\\n3 3\\n7 5\\n9 5\\n\") == \"12 3\\n\", \"The output should be '12 3\\n'.\"\n"
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n0 2\\n1 2\\n3 3\\n5\\n0 2\\n1 3\\n3 3\\n7 5\\n9 5') == '3 2\\n12 3'"
    },
    {
        "number": 3278,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n0 2\\n1 2\\n3 3\\n\") == \"3 2\\n\"\nassert solution(\"5\\n0 2\\n1 3\\n3 3\\n7 5\\n9 5\\n\") == \"12 3\\n\""
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r').read()) == '100\\n000\\n01\\n01\\n01\\n'\nassert solution(open('input2.txt', 'r').read()) == '0000\\n1001\\n0010\\n101\\n010\\n000\\n100\\n'"
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}, Actual: {solution(input())}\""
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    2\n    1\n    0\n    0\n    3\n    \"\"\"\n) == \"100\\n000\\n01\\n01\\n01\"\n\nassert solution(\n    \"\"\"\n    3\n    0\n    1 1\n    1\n    1 1\n    1\n    1\n    \"\"\"\n) == \"0000\\n1001\\n0010\\n101\\n010\\n000\\n100\"\n\nassert solution(\n    \"\"\"\n    1\n    2 3\n    4 5 6\n    7 8 9\n    0\n    \"\"\"\n) == \"1\\n10\\n100\\n1000\\n10000\\n\"\n\nassert solution(\n    \"\"\"\n    2\n    1\n    0\n    0\n    3\n    2\n    1 1\n    1\n    1 1\n    1\n    1\n    1\n    \"\"\"\n) == \"1000\\n10000\\n100000\\n1000000\\n10000000\\n\""
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n1\\n0\\n0\\n3\\n') == '100\\n000\\n01\\n01\\n01\\n'\nassert solution('3\\n0\\n1 1\\n1\\n1 1\\n1\\n1\\n') == '0000\\n1001\\n0010\\n101\\n010\\n000\\n100\\n'"
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1\\n0\\n0\\n3\\n\") == \"100\\n000\\n01\\n01\\n01\\n\"\n\nassert solution(\"3\\n0\\n1 1\\n1\\n1 1\\n1\\n1\\n\") == \"0000\\n1001\\n0010\\n101\\n010\\n000\\n100\\n\"\n\nassert solution(\"10\\n10\\n10\\n10\\n10\\n\") == \"00000000\\n00000000\\n00000000\\n00000000\\n00000000\\n00000000\\n00000000\\n\"\n\nassert solution(\"6\\n2 2 2 2 2\\n2 2 2 2 2 2\\n2 2 2 2 2 2\\n2 2 2 2 2 2\\n2 2 2 2 2 2\\n2 2 2 2 2 2\\n
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n2\n1\n0\n0\n3\n\"\"\"\n) == \"100\\n000\\n01\\n01\\n01\\n\"\n\nassert solution(\n    \"\"\"\n3\n0\n1 1\n1\n1 1\n1\n1\n\"\"\"\n) == \"0000\\n1001\\n0010\\n101\\n010\\n000\\n100\\n\""
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(r\"2\\n1\\n0\\n0\\n3\") == \"100\\n000\\n01\\n01\\n01\""
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"100000\\n00000\\n01000\\n10101\\n01001\\n00001\\n\"\nassert solution() == \"100\\n000\\n010\\n101\\n010\\n000\\n100\\n\""
    },
    {
        "number": 3279,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n    2\n    1\n    0\n    0\n    3\n    ''') == '100\\n000\\n01\\n01\\n01\\n'\n\nassert solution('''\n    3\n    0\n    1 1\n    1\n    1 1\n    1\n    1\n    ''') == '0000\\n1001\\n0010\\n101\\n010\\n000\\n100\\n'"
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1\\n1 2\\n2 3\\n2 3\\n\") == \"2\"\nassert solution(\"4 1\\n1 3\\n4 6\\n7 8\\n2 5\\n\") == \"3\""
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\\n1 2\\n2 3\\n2 3\") == \"2\\n\"\nassert solution(\"4 1\\n1 3\\n4 6\\n7 8\\n2 5\") == \"3\\n\""
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1\\n1 2\\n2 3\\n2 3\\n\") == \"2\"\nassert solution(\"4 1\\n1 3\\n4 6\\n7 8\\n2 5\\n\") == \"3\""
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1\\n1 2\\n2 3\\n2 3\\n\") == \"2\\n\"\nassert solution(\"4 1\\n1 3\\n4 6\\n7 8\\n2 5\\n\") == \"3\\n\""
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 23"
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1\\n1 2\\n2 3\\n2 3\\n\") == \"2\\n\"\nassert solution(\"4 1\\n1 3\\n4 6\\n7 8\\n2 5\\n\") == \"3\\n\""
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 2, \"The output should be 2\""
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1\\n1 2\\n2 3\\n2 3\\n\") == \"2\"\nassert solution(\"4 1\\n1 3\\n4 6\\n7 8\\n2 5\\n\") == \"3\""
    },
    {
        "number": 3280,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1\\n1 2\\n2 3\\n2 3\\n\") == \"2\\n\"\nassert solution(\"4 1\\n1 3\\n4 6\\n7 8\\n2 5\\n\") == \"3\\n\""
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == expected, f\"Expected {expected}, got {solution}\""
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 6 500\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\\n\") == \"90.00000000\"\nassert solution(\"5 6 450\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\\n\") == \"126.86989765\""
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"90.00000000\\n\"\nassert solution(input()) == \"126.86989765\\n\""
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 6 500\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\") == \"90.00000000\"\nassert solution(\"5 6 450\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\") == \"126.86989765\"\nassert solution(\"5 6 500\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\") == \"Impossible\"\n"
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 6 500\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\\n\") == \"90.00000000\\n\"\nassert solution(\"5 6 450\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\\n\") == \"126.86989765\\n\""
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 6 500\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\\n\") == \"90.00000000\\n\"\nassert solution(\"5 6 450\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\\n\") == \"126.86989765\\n\"\nprint(\"All test cases pass!\")"
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_1) == \"90.00000000\\n\"\nassert solution(input_2) == \"126.86989765\\n\""
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n    5 6 500\n-100 0\n-100 100\n    0 200\n    100 100\n    100 0\n    1 2\n    1 3\n    2 3\n    3 4\n    3 5\n    4 5\n\"\"\") == \"90.00000000\\n\"\n\nassert solution(\"\"\"\n    5 6 450\n-100 0\n-100 100\n    0 200\n    100 100\n    100 0\n    1 2\n    1 3\n    2 3\n    3 4\n    3 5\n    4 5\n\"\"\") == \"126.86989765\\n\""
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n    5 6 500\n    -100 0\n    -100 100\n    0 200\n    100 100\n    100 0\n    1 2\n    1 3\n    2 3\n    3 4\n    3 5\n    4 5\n    \"\"\").strip() == \"90.00000000\"\n\nassert solution(\"\"\"\n    5 6 450\n    -100 0\n    -100 100\n    0 200\n    100 100\n    100 0\n    1 2\n    1 3\n    2 3\n    3 4\n    3 5\n    4 5\n    \"\"\").strip() == \"126.86989765\""
    },
    {
        "number": 3281,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n5 6 500\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\n''') == '90.00000000'\nassert solution('''\n5 6 450\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\n''') == '126.86989765'\n"
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"37\\n\") == \"4\\n8 29\\n9 28\\n11 26\\n15 22\"\nassert solution(\"30014\\n\") == \"7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225\"\nassert solution(\"10\\n20\\n30\\n40\\n50\\n60\\n70\\n80\\n90\\n100\\n110\\n120\\n130\\n140\\n150\\n160\\n170\\n180\\n190\\n200\\n210\\n220\\n230\\n240\\n250\\n260\\n270\\n280\\n290\\n300\\n310\\n320\\n330\\n340\\n350\\n360\\n370\\n380\\n390\\n400\\n410\\n420\\n430\\n440\\n450\\n460\\n470\\n480\\n490\\n500\\n510\\n520\\n530\\n540\\n550\\n560\\n570\\n580\\n590\\n600\\n610\\n620\\n630\\n640\\n650\\n660\\n670\\n680\\n690\\n700\\n710\\n720\\n730\\n740\\n750\\n760\\n770\\n780\\n790\\n800\\n810\\n820\\n830\\n840\\n850\\n860\\n870\\n880\\n890\\n900\\n910\\n920\\n930\\n940\\n950\\n960\\n970\\n980\\n990\\n1000\\n1010\\n1020\\n1030\\n1040\\n1050\\n1060\\n1070\\n1080\\n1090\\n1100\\n1110\\n1120\\n1130\\n1140\\n1150\\n1160\\n1170\\n1180\\n1190\\n1200\\n1210\\n1220\\n1230\\n1240\\n1250\\n1260\\n1270\\n1280\\n1290\\n1300\\n1310\\n1320\\n1330\\n1340\\n1350\\n1360\\n1370\\n1380\\n1390\\n1400\\n1410\\n1420\\n1430\\n1440\\n1450\\n1460\\n1470\\n1480\\n1490\\n1500\\n1510\\n1520\\n1530\\n1540\\n1550\\n1560\\n1570\\n1580\\n1590\\n1600\\n1610\\n1620\\n1630\\n1640\\n1650\\n1660\\n16"
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"37\") == \"4\\n8 29\\n9 28\\n11 26\\n15 22\"\nassert solution(\"30014\") == \"7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225\""
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('37') == '4\\n8 29\\n9 28\\n11 26\\n15 22'\nassert solution('30014') == '7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225'\nassert solution('') == '1\\n'"
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('37') == '4\\n8 29\\n9 28\\n11 26\\n15 22'\nassert solution('30014') == '7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225'"
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('37') == '4\\n8 29\\n9 28\\n11 26\\n15 22'\nassert solution('30014') == '7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225'"
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(37) == \"4\\n8 29\\n9 28\\n11 26\\n15 22\"\nassert solution(30014) == \"7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225\""
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"37\") == \"4\"\nassert solution(\"30014\") == \"7\"\nassert solution(\"\") == \"No solution\"\n\nprint(\"Sample Input 1:\")\nprint(\"37\")\nprint(\"Sample Output 1:\")\nprint(\"4\")\nprint(\"8 29\")\nprint(\"9 28\")\nprint(\"11 26\")\nprint(\"15 22\")\n\nprint(\"Sample Input 2:\")\nprint(\"30014\")\nprint(\"Sample Output 2:\")\nprint(\"7\")\nprint(\"85 29929\")\nprint(\"88 29926\")\nprint(\"785 29229\")\nprint(\"788 29226\")\nprint(\"7785 22229\")\nprint(\"7788 22226\")\nprint(\"7789 22225\")"
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input_1) == '4\\n8 29\\n9 28\\n11 26\\n15 22'\nassert solution(sample_input_2) == '7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225'"
    },
    {
        "number": 3282,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(37) == \"4\\n8 29\\n9 28\\n11 26\\n15 22\"\nassert solution(30014) == \"7\\n85 29929\\n88 29926\\n785 29229\\n788 29226\\n7785 22229\\n7788 22226\\n7789 22225\""
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Output not provided\""
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, got {solution(stdin)}\""
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input1) == \"3.5\", \"Output is incorrect\"\nassert solution(sample_input2) == \"4.9\", \"Output is incorrect\""
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, got {solution(stdin)}\"\n"
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin: str) == expected_output, f\"Test failed for input {stdin}, expected output {expected_output}, got {solution(stdin)}\""
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"3.5\", \"Please complete the code to solve the problem\"\n"
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3 1\") == \"3.5\"\nassert solution(\"3 3 2\") == \"4.9\""
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Your solution {output} does not match the expected output {expected}\""
    },
    {
        "number": 3283,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"3.5\", \"Test 1 Failed\"\nassert solution(\"2 3 1\") == \"3.5\", \"Test 2 Failed\"\nassert solution(\"3 3 2\") == \"4.9\", \"Test 3 Failed\""
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(str(input())) == str(output()), f\"Expected output: {output()}, Actual output: {solution(str(input()))}\""
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 5 1 5\") == \"19\"\nassert solution(\"12 12 1 12\") == \"4\""
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(b'1 5 1 5') == '19\\n'\nassert solution(b'12 12 1 12') == '4\\n'"
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 19, \"Incorrect output.\""
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 5 1 5\") == \"19\"\nassert solution(\"12 12 1 12\") == \"4\""
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 5 1 5\\n12 12 1 12\") == 19"
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 5 1 5\") == \"19\"\nassert solution(\"12 12 1 12\") == \"4\""
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"19\"\n"
    },
    {
        "number": 3284,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n1 5 1 5\n''') == '19'\n\nassert solution('''\n12 12 1 12\n''') == '4'"
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin='1 5\\n1 12') == '4'\nassert solution(stdin='1 13') == '0'\nassert solution(stdin='2 2\\n2 4\\n2 8') == '2'\nassert solution(stdin='1 1') == '1'\nassert solution(stdin='10000 10000') == '10000'"
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 5\\n\") == \"4\\n\"\nassert solution(\"1 12\\n\") == \"4\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 5\\n1 12\") == \"4\"\nassert solution(\"1 100\\n1 500\") == \"1\"\nassert solution(\"1 2000000\\n1 1000000\") == \"1\"\nassert solution(\"1 1000000000\\n1 1000000000\") == \"4\"\nassert solution(\"1 10000000000\\n1 10000000000\") == \"4\"\nassert solution(\"1 10000000000000\\n1 10000000000000\") == \"5\"\nassert solution(\"1 100000000000000\\n1 100000000000000\") == \"5\"\nassert solution(\"1 1000000000000000\\n1 1000000000000000\") == \"5\"\nassert solution(\"1 10000000000000000\\n1 100000000000000000\") == \"5\"\nassert solution(\"1 1000000000000000000\\n1 1000000000000000000\") == \"5\"\nassert solution(\"1 10000000000000000000\\n1 10000000000000000000\") == \"5\"\nassert solution(\"1 100000000000000000000\\n1 100000000000000000000\") == \"5\"\nassert solution(\"1 1000000000000000000000\\n1 10000000000000000000000\") == \"5\"\nassert solution(\"1 10000000000000000000000\\n1 100000000000000000000000\") == \"5\"\nassert solution(\"1 100000000000000000000000\\n1 10000000000000000000000000\") == \"5\"\nassert solution(\"1 1000000000000000000000000\\n1 10000000000000000000000000\") == \"5\"\nassert solution(\"1 10000000000000000000000000\\n1 1000000000000000000000000000\") == \"5\"\nassert solution(\"1 100000000000000000000000000\\n1 10000000000000000000000000000\") == \"5\"\nassert solution(\"1 100000000000000000000000000000\\n1 100000000000000000000000000000\") == \"5\"\nassert solution(\"1 1000000000000000000000000000000\\n1 1000000000000000000000000000"
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 5\") == \"4\"\nassert solution(\"1 12\") == \"4\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"5 1\") == \"1\"\nassert solution(\"10 1\") == \"2\""
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 5') == '4'\nassert solution('1 12') == '4'\n"
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 5\\n1 12\") == \"4\\n\""
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 5\") == \"4\", \"Test Case 1\"\nassert solution(\"1 12\") == \"4\", \"Test Case 2\""
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 5\") == \"4\", \"Sample Input 1\"\nassert solution(\"1 12\") == \"4\", \"Sample Input 2\""
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 5\\n\") == \"4\"\nassert solution(\"1 12\\n\") == \"4\"\n"
    },
    {
        "number": 3285,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1, 5) == 4\nassert solution(1, 12) == 4"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"car\") == 1\nassert solution(\"cocar\") == 2\n"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"car\") == 1\nassert solution(\"cocar\") == 2"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"car\") == \"1\"\nassert solution(\"cocar\") == \"2\""
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('car') == '1'\nassert solution('cocar') == '2'"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"car\") == 1\nassert solution(\"cocar\") == 2"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"car\") == 1\nassert solution(\"cocar\") == 2"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"car\") == \"1\"\nassert solution(\"cocar\") == \"2\""
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin='car') == 1\nassert solution(stdin='cocar') == 2"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"car\") == 1\nassert solution(\"cocar\") == 2"
    },
    {
        "number": 3286,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('car') == '1'\nassert solution('cocar') == '2'"
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"8\"\n"
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected, f\"Expected '{expected}', got '{solution(stdin)}'\""
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=input()) == output, \"Expected {}, got {} instead\".format(output, solution(stdin=input()))\nfor input_ in [(\"4\",), (\"5\",), (\"1000000 1 1 1 1\")]:\n    output = solution(*input_)\n    assert output == \"8\""
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(str(input())) == str(1)\nassert solution(str(input())) == str(8)\nassert solution(str(input())) == str(0)"
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"8\"\nassert solution(stdin) == \"0\""
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"8\\n\", \"Test case 1 failed\"\nassert solution(stdin) == \"0\\n\", \"Test case 2 failed\""
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=None) == '8\\n'\n\nassert solution(stdin=\"4\\n0 2 0 1\\n\") == '8\\n'\n\nassert solution(stdin=\"5\\n1000000 1 1 1 1\\n\") == '0\\n'"
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"4\\n0 2 0 1\") == \"8\\n\"\nassert solution(stdin=\"5\\n1000000 1 1 1 1\") == \"0\\n\""
    },
    {
        "number": 3287,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"0\\n\"  # correct output for sample input 2"
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 650\") == \"zyz\"\nassert solution(\"2 651\") == \"-1\""
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Sample Input {input()}:\\nOutput {output()}\\n\\nInput:\\n{input()}\""
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"zyz\"\n\nassert solution(stdin) == \"-1\""
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(str(input())) == str(input()), \"Expected output: {0} Received output: {1}\".format(str(input()), str(solution(str(input()))))"
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('sample_input.txt')) == 'zyz'\nassert solution(open('sample_input2.txt')) == -1"
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 650\") == \"zyz\"\nassert solution(\"2 651\") == \"-1\""
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input1) == \"zyz\"\nassert solution(sample_input2) == \"-1\"\n\nfrom typing import List"
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Test failed with input {input()}, expected output {output}\"\n"
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 650') == 'zyz'\nassert solution('2 651') == '-1'"
    },
    {
        "number": 3288,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n0 10 0\\n10 0 1\\n12 8 1\\n5 5 0\\n11 2 1\\n11 3 0\\n\") == \"4\\n\"\nassert solution(\"10\\n6 1 1\\n0 2 0\\n2 1 1\\n6 1 1\\n8 2 0\\n4 4 0\\n4 0 0\\n2 3 1\\n6 1 0\\n6 3 1\\n\") == \"8\\n\""
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('0 10 0\\n10 0 1\\n12 8 1\\n5 5 0\\n11 2 1\\n11 3 0') == '4\\n'\n\nassert solution('10\\n6 1 1\\n0 2 0\\n2 1 1\\n6 1 1\\n8 2 0\\n4 4 0\\n4 0 0\\n2 3 1\\n6 1 0\\n6 3 1\\n') == '8\\n'"
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"4\\n\", \"Your solution is incorrect.\"\n"
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=stdin) == expected, f\"Test case {i + 1} failed: expected {expected}, got {solution(stdin=stdin)}\""
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input1) == sample_output1\nassert solution(sample_input2) == sample_output2\n\nsample_input1 = \"\"\"6\n0 10 0\n10 0 1\n12 8 1\n5 5 0\n11 2 1\n11 3 0\"\"\"\n\nsample_output1 = \"\"\"4\"\"\"\n\nsample_input2 = \"\"\"10\n6 1 1\n0 2 0\n2 1 1\n6 1 1\n8 2 0\n4 4 0\n4 0 0\n2 3 1\n6 1 0\n6 3 1\"\"\"\n\nsample_output2 = \"\"\"8\"\"\""
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n0 10 0\\n10 0 1\\n12 8 1\\n5 5 0\\n11 2 1\\n11 3 0\") == \"4\\n\", \"The output is incorrect.\""
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"Output\\n8\"\nassert solution(open(\"input2.txt\", \"r\").read()) == \"Output\\n10\"\n"
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n0 10 0\\n10 0 1\\n12 8 1\\n5 5 0\\n11 2 1\\n11 3 0\\n\") == \"4\\n\"\n\nassert solution(\"10\\n6 1 1\\n0 2 0\\n2 1 1\\n6 1 1\\n8 2 0\\n4 4 0\\n4 0 0\\n2 3 1\\n6 1 0\\n6 3 1\\n\") == \"8\\n\"\n\nassert solution(\"6\\n0 10 0\\n10 0 1\\n12 8 1\\n5 5 0\\n11 2 1\\n11 3 0\\n\") == \"4\\n\"\n\nassert solution(\"10\\n6 1 1\\n0 2 0\\n2 1 1\\n6 1 1\\n8 2 0\\n4 4 0\\n4 0 0\\n2 3 1\\n6 1 0\\n6 3 1\\n\") == \"8\\n\""
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == 'Output', f\"Expected '{solution(stdin)}', got '{solution(stdin)}'\""
    },
    {
        "number": 3289,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected\nfor i, (a, b, c) in enumerate(data):\n    a_i, b_i = a, b\n    if c:\n        a_i = a_i + 1\n        b_i = b_i + 1\n    expected_output = answer[i]\n    assert solution(stdin) == expected_output, f\"Test case {i+1} failed\""
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '0'\nassert solution(stdin) == '2'\nassert solution(stdin) == '2'"
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == 0, \"Test failed\""
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 4 3\\n3 4 5 7\\n1 2 10') == 0\nassert solution('3 5 2\\n1 4 7 9 11\\n2 3') == 2\n"
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == '0\\n'\nassert solution(sample_input2) == '2\\n'"
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 4 3\\n3 4 5 7\\n1 2 10\") == 0\nassert solution(\"3 5 2\\n1 4 7 9 11\\n2 3\") == 2"
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n    2 4 3\n    3 4 5 7\n    1 2 10\n    \"\"\") == \"0\"\n\nassert solution(\"\"\"\n    3 5 2\n    1 4 7 9 11\n    2 3\n    \"\"\") == \"2\""
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 4, 3) == 0\nassert solution(3, 5, 2) == 2"
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''2 4 3\n3 4 5 7\n1 2 10''') == 0\nassert solution('''3 5 2\n1 4 7 9 11\n2 3''') == 2"
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n2 4 3\n3 4 5 7\n1 2 10\n\"\"\") == \"0\\n\"\n\nassert solution(\"\"\"\n3 5 2\n1 4 7 9 11\n2 3\n\"\"\") == \"2\\n\""
    },
    {
        "number": 3290,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 0, \"The solution should output 0\"\nassert solution() == 2, \"The solution should output 2\""
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 3\\n3 2\\n') == '1\\n-2 -1\\n'\nassert solution('1 2\\n3 4\\n') == '3\\n-1 1\\n2 1\\n0 -2\\n'\n"
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n3 2\") == \"1\\n-2 -1\"\nassert solution(\"1 2\\n3 4\") == \"3\\n-1 1\\n2 1\\n0 -2\""
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '''1\n-2 -1'''\n"
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '''\n1\n-2 -1\n3\n-1 1\n2\n1\n0\n-2\n'''"
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1\\n-2 -1\\n3\\n-1 1\\n2 1\\n0 -2\"\n"
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 3\\n3 2\\n') == '1\\n-2 -1\\n'\nassert solution('1 2\\n3 4\\n') == '3\\n-1 1\\n2 1\\n0 -2\\n'"
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 3\\n3 2\\n1 2\\n3 4\\n2 1\\n0 -2') == '1\\n-2 -1\\n3\\n-1 1\\n2 1\\n0 -2'"
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n3 2\\nSample Output 1:\\n1\\n-2 -1\\n\\nSample Input 2:\\n1 2\\n3 4\\nSample Output 2:\\n3\\n-1 1\\n2 1\\n0 -2\") == \"1\\n-2 -1\\n2 1\\n0 -2\""
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"\"\"1\n-2 -1\n3\n-1 1\n2 1\n0 -2\"\"\""
    },
    {
        "number": 3291,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 3\\n3 2\\n') == '1\\n-2 -1\\n'\nassert solution('1 2\\n3 4\\n') == '3\\n-1 1\\n2 1\\n0 -2\\n'"
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\nIVO\\nJASNA\\nJOSIPA\") == 4\nassert solution(\"5\\nMARICA\\nMARTA\\nMATO\\nMARA\\nMARTINA\") == 24"
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\nIVO\\nJASNA\\nJOSIPA\") == \"4\\n\"\nassert solution(\"5\\nMARICA\\nMARTA\\nMATO\\nMARA\\nMARTINA\") == \"24\\n\""
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\nIVO\\nJASNA\\nJOSIPA\\n\") == \"4\\n\"\nassert solution(\"5\\nMARICA\\nMARTA\\nMATO\\nMARA\\nMARTINA\\n\") == \"24\\n\"\nassert solution(\"5\\nMARIA\\nMARTA\\nMATTINA\\nMARA\\nMARTINA\\n\") == \"26\\n\""
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\nIVO\\nJASNA\\nJOSIPA\") == \"4\"\nassert solution(\"5\\nMARICA\\nMARTA\\nMATO\\nMARA\\nMARTINA\") == \"24\""
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output, f\"Incorrect output: {solution(stdin)}, expected: {expected_output}\""
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 4\nassert solution(5) == 24"
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Output: {output}, Expected Output: {output}\""
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\nIVO\\nJASNA\\nJOSIPA\") == \"4\\n\"\nassert solution(\"5\\nMARICA\\nMARTA\\nMATO\\nMARA\\nMARTINA\") == \"24\\n\""
    },
    {
        "number": 3292,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"4\" # Correct Output"
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n3\n1 2 3 1\n2 3 4 1\n3 4 5 1\n\"\"\"\n) == \"3\\n\"\n\nassert solution(\n\"\"\"\n3\n2 2 3 8\n3 1 5 6\n1 9 4 7\n\"\"\"\n) == \"39\\n\""
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"3\\n\""
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"3\", \"Your solution is incorrect. Please check the function signature and return type.\"\nassert solution() == \"39\", \"Your solution is incorrect. Please check the function signature and return type.\"\n"
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r').read()) == '3\\n'\nprint('All test cases passed.')"
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1') == 3, \"Sample Output 1\"\nassert solution('3\\n2 2 3 8\\n3 1 5 6\\n1 9 4 7') == 39, \"Sample Output 2\""
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_1) == \"3\"\nassert solution(input_2) == \"39\""
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"3\\n\", \"Expected output: 3\\n, Received: \" + solution(input())"
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1') == '3\\n'\nassert solution('3\\n2 2 3 8\\n3 1 5 6\\n1 9 4 7') == '39\\n'"
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1\") == \"3\"\nassert solution(\"3\\n2 2 3 8\\n3 1 5 6\\n1 9 4 7\") == \"39\""
    },
    {
        "number": 3293,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1\") == \"3\\n\", \"Expected output 3, but got: {}\".format(solution(\"3\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1\"))\nassert solution(\"3\\n2 2 3 8\\n3 1 5 6\\n1 9 4 7\") == \"39\\n\", \"Expected output 39, but got: {}\".format(solution(\"3\\n2 2 3 8\\n3 1 5 6\\n1 9 4 7\"))"
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\nr'''\n2\n5 8 4 -2 0 0 -3 2 0 0 3\n8 10 4 -1 -1 1 -1 1 1 -1 1\n'''\n) == 5.2696518641\n\nassert solution(\nr'''\n1\n8 9 3 -14 -14 14 -14 0 20\n'''\n) == 9"
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"5.2696518641\""
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 5.2696518641"
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n5 8 4 -2 0 0 -3 2 0 0 3\\n8 10 4 -1 -1 1 -1 1 1 -1 1\\n') == '5.2696518641\\n'\nassert solution('1\\n8 9 3 -14 -14 14 -14 0 20\\n') == '9\\n'"
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, \"Test failed.\""
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '5.2696518641', 'Incorrect output'"
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n5 8 4 -2 0 0 -3 2 0 0 3\\n8 10 4 -1 -1 1 -1 1 1 -1 1\") == 5.2696518641, \"Your solution is incorrect.\"\nassert solution(\"1\\n8 9 3 -14 -14 14 -14 0 20\") == 9, \"Your solution is incorrect.\""
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    '''\n    2\n    5 8 4 -2 0 0 -3 2 0 0 3\n    8 10 4 -1 -1 1 -1 1 1 -1 1\n    '''\n) == 5.2696518641\n\nassert solution(\n    '''\n    1\n    8 9 3 -14 -14 14 -14 0 20\n    '''\n) == 9"
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == expected_output, f\"Test case {sample_input} failed\"\n\nsample_input = \"\"\"\n2\n5 8 4 -2 0 0 -3 2 0 0 3\n8 10 4 -1 -1 1 -1 1 1 -1 1\n\"\"\"\nexpected_output = \"\"\"\n5.2696518641\n\"\"\""
    },
    {
        "number": 3294,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == 5.2696518641"
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1\\n8\\n4\\n\"\nassert solution() == \"6\\n4\\n24\\n\""
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 1 1\\n2 0 2\\n3 1 1\") == \"1\\n8\\n4\"\nassert solution(\"3\\n4 1 1\\n5 2 3\\n5 0 3\") == \"6\\n4\\n24\"\nassert solution(\"3\\n1 1 1\\n2 0 2\\n3 1 1\") == -1\nassert solution(\"3\\n4 1 1\\n5 2 3\\n5 0 3\\n6 1 1\") == \"6\\n4\\n24\""
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Test case {i+1} failed.\"\nprint(\"Test case passed.\")"
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Expected {output}, but got {solution(input())}\""
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Test failed: {input()}!= {output}\""
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 1 1\\n2 0 2\\n3 1 1\") == \"1\\n8\\n4\"\nassert solution(\"3\\n4 1 1\\n5 2 3\\n5 0 3\") == \"6\\n4\\n24\"\nassert solution(\"3\\n1 1 1\\n2 0 2\\n3 1 1\") == \"1\\n8\\n4\"\nassert solution(\"1\\n2 3 4 5 6 7 8 9 10\") == \"-1\"\nassert solution(\"3\\n4 1 2\") == \"-1\"\nassert solution(\"3\\n1 1 1\\n2 1 1\\n3 1 1\") == \"1\\n8\\n4\"\nassert solution(\"3\\n1 1 1\\n2 1 1\\n3 1 1\") == \"1\\n8\\n4\"\nassert solution(\"3\\n4 1 2\") == \"-1\""
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n1 1 1\\n2 0 2\\n3 1 1\\n\") == \"1\\n8\\n4\\n\"\nassert solution(\"1\\n1 1 1\\n2 0 2\\n3 1 1\\n4\\n\") == \"1\\n8\\n4\\n\"\nassert solution(\"1\\n2 0 2\\n3 1 1\\n4\\n5\\n6\\n7\\n8\\n\") == \"6\\n4\\n24\\n\"\nassert solution(\"1\\n2 0 2\\n3 1 1\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n\"\nassert solution(\"1\\n1 1 1\\n2 0 2\\n3 1 1\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n1"
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(r'3\\n1 1 1\\n2 0 2\\n3 1 1') == 1\nassert solution(r'3\\n4 1 1\\n5 2 3\\n5 0 3') == 6\nassert solution(r'3\\n1 1 1\\n1 2 3\\n2 2 1') == -1\nassert solution(r'3\\n1 1 1\\n1 2 3\\n2 2 4') == -1"
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 1 1\\n2 0 2\\n3 1 1\\n\") == \"1\\n8\\n4\\n\"\nassert solution(\"3\\n4 1 1\\n5 2 3\\n5 0 3\\n\") == \"6\\n4\\n24\\n\""
    },
    {
        "number": 3295,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n1 1 1\\n2 0 2\\n3 1 1\\n') == '1\\n8\\n4\\n'\nassert solution('3\\n4 1 1\\n5 2 3\\n5 0 3\\n') == '6\\n4\\n24\\n'"
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3, 2) == 3\nassert solution(6, 6) == 240\n"
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3, 2) == 3\nassert solution(6, 6) == 240"
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed: Expected output {expected_output}, but got {solution(stdin)}\""
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"3\\n\"\n"
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, 2) == 3\nassert solution(6, 6) == 240"
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=input()) == output, f\"Test failed. Expected output: {output}, but got: {solution(stdin=input())}\"\n"
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 3, \"Expected output 3, got {}\".format(solution())"
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3, 2) == 3\nassert solution(6, 6) == 240"
    },
    {
        "number": 3296,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3, 2) == 3\nassert solution(6, 6) == 240"
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"A+A=A\") == \"impossible\""
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"A+A=A\") == \"impossible\""
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"A+A=A\") == \"impossible\""
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\", \"Incorrect solution\"\nassert solution(\"A+A=A\") == \"impossible\", \"Incorrect solution\""
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('SEND+MORE=MONEY') == '9567+1085=10652', 'Test 1 failed'\nassert solution('A+A=A') == 'impossible', 'Test 2 failed'"
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"A+A=A\") == \"impossible\""
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"9567+1085=10652\" # Example 1\nassert solution(input()) == \"impossible\" # Example 2"
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"A+A=A\") == \"impossible\"\n"
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('SEND+MORE=MONEY') == '9567+1085=10652'\nassert solution('A+A=A') == 'impossible'"
    },
    {
        "number": 3297,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"A+A=A\") == \"impossible\""
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n0 1 2 3\") == \"14\"\nassert solution(\"5\\n1 1 2 1 1\") == \"1\""
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(4) == 14\nassert solution(5) == 1"
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n0 1 2 3') == '14'"
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(b\"0 1 2 3\") == 14\nassert solution(b\"5 1 1 2 1\") == 1"
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"14\", \"Test case 1 failed\""
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()\nfor i in range(1, n + 1):\n    if is_sorted(a[i - 1], a[i], a[i + 1]):\n        print(i)\n        break"
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"14\", \"Your code is incorrect!\""
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n0 1 2 3') == '14\\n'\nassert solution('5\\n1 1 2 1 1') == '1\\n'"
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(read_input()) == 14"
    },
    {
        "number": 3298,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 1 2 3\") == \"14\"\nassert solution(\"1 1 2 1 1\") == \"1\""
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 88\nassert solution() == -1"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"88\""
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\") == 88\nassert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\") == -1"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10') == '88'\nassert solution('4 4\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10') == '-1'"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\") == 88\nassert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\") == -1"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10') == 88\nassert solution('4 4\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10') == -1\n"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\") == 88\nassert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\") == -1"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 88\nassert solution() == -1"
    },
    {
        "number": 3299,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\") == \"88\"\nassert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\") == \"-1\"\n"
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '0.000', 'Your solution is incorrect. Please check the provided code.'\nprint('PASSED')"
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 0.000\nassert solution() == 9999700002.000"
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n1 1\\n1 1\") == \"0.000\"\nassert solution(\"2\\n1 99999\\n99999 99999\") == \"9999700002.000\""
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"0.000\""
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"0.000\"\nassert solution() == \"9999700002.000\""
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('sample_input.txt')) == '0.000\\n'\nprint(solution(open('sample_input.txt')))\n"
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 1\\n1 1\\n\") == \"0.000\\n\"\nassert solution(\"2\\n1 99999\\n99999 99999\\n\") == \"9999700002.000\\n\""
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"0.000\\n\"  # Correct answer\n"
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1 1\\n1 1\\n\") == \"0.000\"\nassert solution(\"2\\n1 99999\\n99999 99999\\n\") == \"9999700002.000\""
    },
    {
        "number": 3300,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"0.000\\n9999700002.000\", \"Expected output not found.\""
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''6 8 1 6\n1 2 5\n1 3 1\n2 6 6\n2 3 6\n4 2 3\n3 4 1\n4 5 1\n5 6 1\n5\n1 3 6 5 4''') == '3\\n'"
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"3\", \"Test Case 1 Failed\"\nassert solution() == \"Infinity\", \"Test Case 2 Failed\""
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 8 1 6\\n1 2 5\\n1 3 1\\n2 6 6\\n2 3 6\\n4 2 3\\n3 4 1\\n4 5 1\\n5 6 1\\n5\\n1 3 6 5 4\\n\") == \"3\"\n\nassert solution(\"3 4 1 2\\n1 2 6\\n1 3 2\\n1 2 7\\n2 3 3\\n2\\n1 2\\n\") == \"Infinity\""
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 8 1 6\\n1 2 5\\n1 3 1\\n2 6 6\\n2 3 6\\n4 2 3\\n3 4 1\\n4 5 1\\n5 6 1\\n5\\n1 3 6 5 4\") == \"3\", \"Incorrect output\"\n"
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 8 1 6\\n1 2 5\\n1 3 1\\n2 6 6\\n2 3 6\\n4 2 3\\n3 4 1\\n4 5 1\\n5 6 1\\n5\\n1 3 6 5 4\\n\") == \"3\\n\"\n\nassert solution(\"3 4 1 2\\n1 2 6\\n1 3 2\\n1 2 7\\n2 3 3\\n2\\n1 2\\n\") == \"Infinity\\n\"\n\nassert solution(\"6 10 1 1\\n1 2 5\\n1 3 1\\n2 4 3\\n2 5 2\\n3 4 1\\n4 5 1\\n5 6 1\\n5\\n1 3 6 5 4\\n\") == \"Infinity\\n\"\n\nassert solution(\"7 8 1 2\\n1 2 6\\n1 3 2\\n1 2 7\\n2 3 3\\n2\\n1 2\\n\") == \"Infinity\\n\"\n\nassert solution(\"6 10 1 1\\n1 2 5\\n1 3 1\\n2 4 3\\n2 5 2\\n3 4 1\\n4 5 1\\n5 6 1\\n5\\n1 3 6 5 4\\n6 7 2\\n1 2 6\\n\") == \"Infinity\\n\"\n\nassert solution(\"1 2 5\\n1 3 1\\n2 4 3\\n2 5 2\\n3 4 1\\n4 5 1\\n5 6 1\\n5\\n1 3 6 5 4\\n\") == \"3\\n\"\n\nassert solution(\"1 2 5\\n1 3 1\\n2 4 3\\n2 5 2\\n3 4 1\\n4 5 1\\n5 6 1\\n5\\n1 3 6 5 4\\n6 7 2\\n1 2 6\\n\") == \"Infinity\\n\"\n\nassert solution(\"2 3 4\\n1 2 5\\n1 3 1\\n2 4 3\\n2\\n1 2\\n\") == \"Infinity\\n\"\n\nassert solution(\"5 6 1\\n1 2 5\\n1 3 1\\n2 4 3\\n2 5 2\\n3 4 1\\n4 5 1\\n5 6 1\\n\") == \"Infinity\\n\"\n\nassert solution(\"5\\n1 2 5\\n1 3 1\\n2 4 3\\n2 5 2\\n3 4 1\\n4 5 1\\n5 6 1\\n\") == \"Infinity\\n\"\n\nassert solution(\"5\\n1 2 5\\n1 3 1\\n2 4 3\\n2 5 2\\n3 4 1\\n4 5 1\\n5 6 1\\n6 7 2\\n1 2 6\\n\") == \"Infinity\\n\""
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(r\"\"\"\n6 8 1 6\n1 2 5\n1 3 1\n2 6 6\n2 3 6\n4 2 3\n3 4 1\n4 5 1\n5 6 1\n5\n1 3 6 5 4\n\"\"\") == \"3\\n\"\n\nassert solution(r\"\"\"\n3 4 1 2\n1 2 6\n1 3 2\n1 2 7\n2 3 3\n2\n1 2\n\"\"\") == \"Infinity\\n\"\n\nassert solution(r\"\"\"\n6 8 1 6\n1 2 5\n1 3 1\n2 6 6\n2 3 6\n4 2 3\n3 4 1\n4 5 1\n5 6 1\n5\n1 3 6 5 4\n\"\"\") == \"Impossible\\n\"\n\nassert solution(r\"\"\"\n7 1 1 1 1 1\n1 2 3 4 5 6\n1 3 4 5 6 7\n2 4 5 6 7 8\n3 5 6 7 8 9\n4 6 7 8 9 10\n5 7 8 9 10 11\n6 8 9 10 11 12\n7 9 10 11 12 13\n8 10 11 12 13 14\n9 11 12 13 14 15\n10 12 13 14 15 16\n11 13 14 15 16 17\n12 14 15 16 17 18\n13 15 16 17 18 19\n14 16 17 18 19 20\n15 17 18 19 20 21\n16 18 19 20 21 22\n17 19 20 21 22 23\n18 20 21 22 23 24\n19 21 22 23 24 25\n20 22 23 24 25 26\n21 23 24 25 26 27\n22 24 25 26 27 28\n23 25 26 27 28 29\n24 26 27 28 29 30\n25 27 28 29 30 31\n26 28 29 30 31 32\n27 29 30 31 32 33\n28 30 31 32 33 34\n29 31 32 33 34 35\n30 32 33 34 35 36\n31 33 34 35 36 37\n32 34 35 36 37 38\n33 35 36 37 38 39\n34 36 37 38 39 40\n35 37 38 39 40 41\n36 38 39 40 41 42\n37 39 40 41 42 43\n38 40 41 42 43 44\n39 41 42 43 44 45\n40 42 43 44 45 46\n41 43 44 45 46 47\n42 44 45 46 47 48\n43 45 46 47 48 49\n44 46 47 48 49 50\n45 47 48 49 50 51\n"
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"3\", \"Expected output: 3, received: {}\".format(solution(stdin))"
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 8 1 6\\n1 2 5\\n1 3 1\\n2 6 6\\n2 3 6\\n4 2 3\\n3 4 1\\n4 5 1\\n5 6 1\\n5\\n1 3 6 5 4\\n\") == \"3\\n\"\nassert solution(\"3 4 1 2\\n1 2 6\\n1 3 2\\n1 2 7\\n2 3 3\\n2\\n1 2\\n\") == \"Infinity\\n\"\n"
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 8 1 6\\n1 2 5\\n1 3 1\\n2 6 6\\n2 3 6\\n4 2 3\\n3 4 1\\n4 5 1\\n5 6 1\\n5\\n1 3 6 5 4\") == \"3\"\nassert solution(\"3 4 1 2\\n1 2 6\\n1 3 2\\n1 2 7\\n2 3 3\\n2\\n1 2\\n\") == \"Infinity\""
    },
    {
        "number": 3301,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\npass\""
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6 1\\n6\\n') == 'impossible\\n'\nassert solution('3 1\\n1\\n') == '000\\n001\\n011\\n010\\n110\\n111\\n101\\n100\\n'\nprint('All test cases passed!')"
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"impossible\\n\""
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"impossible\""
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == \"impossible\"\nassert solution(2) == \"000\"\nassert solution(3) == \"000\"\nassert solution(4) == \"001\"\nassert solution(5) == \"011\"\nassert solution(6) == \"111\"\nassert solution(7) == \"010\"\nassert solution(8) == \"110\"\nassert solution(9) == \"101\"\nassert solution(10) == \"100\""
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input(1)) == \"impossible\"  # Sample Output 1\nassert solution(sample_input(2)) == \"000\"  # Sample Output 2"
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1\\n1\\n\") == \"000\"\nassert solution(\"6 1\\n6\\n
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"gray_code.txt\", \"r\").read()) == \"impossible\\n\"\n"
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'impossible'\nprint('success')"
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('6 1\\n6\\n') == 'impossible\\n'\nassert solution('3 1\\n1\\n') == '000\\n001\\n011\\n010\\n110\\n111\\n101\\n100\\n'"
    },
    {
        "number": 3302,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Test case {i+1} failed: expected {output}, got {solution(input())}\""
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\\n99\") == \"1\\n\"\nassert solution(\"90\\n10\") == \"10\\n\""
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10\\n99\") == \"1\"\nassert solution(\"90\\n10\") == \"10\""
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10\\n99\") == \"1\", \"First example\"\nassert solution(\"90\\n10\") == \"10\", \"Second example\""
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input1) == output1, f\"Test 1 failed. Output: {solution(input1)}, Expected: {output1}\"\nassert solution(input2) == output2, f\"Test 2 failed. Output: {solution(input2)}, Expected: {output2}\""
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('10\\n99') == '1\\n'\nassert solution('90\\n10') == '10\\n'"
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10\") == \"1\", \"The correct output should be '1'.\"\nassert solution(\"99\") == \"1\", \"The correct output should be '1'.\"\nassert solution(\"90\") == \"10\", \"The correct output should be '10'.\""
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10\\n99\\n\") == \"1\"\nassert solution(\"90\\n10\\n\") == \"10\""
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10\\n99\") == \"1\", \"Sample Input 1 failed.\"\nassert solution(\"90\\n10\") == \"10\", \"Sample Input 2 failed.\""
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10\\n99\") == \"1\\n\"\nassert solution(\"90\\n10\") == \"10\\n\""
    },
    {
        "number": 3303,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input(\"10\\n99\\n\")) == 1\nassert solution(input(\"90\\n10\\n\")) == 10"
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2 3 3\\n4 1 10\\n2 7 3\\n\") == \"2\\n\"\nassert solution(\"4\\n3 1 3 3\\n5 8 7 10\\n4 1 2 6\\n\") == \"1\\n\""
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2 3 3\\n4 1 10\\n2 7 3\\n\") == \"2\\n\", \"Test 1 failed\"\nassert solution(\"4\\n3 1 3 3\\n5 8 7 10\\n4 1 2 6\\n\") == \"1\\n\", \"Test 2 failed\"\n\nprint(\"All tests passed\")"
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n2 3 3\\n4 1 10\\n2 7 3') == '2\\n'\nassert solution('4\\n3 1 3 3\\n5 8 7 10\\n4 1 2 6') == '1\\n'"
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n2 3 3\\n4 1 10\\n2 7 3') == '2\\n'\nassert solution('4\\n3 1 3 3\\n5 8 7 10\\n4 1 2 6') == '1\\n'"
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=r\"3\n2 3 3\n4 1 10\n2 7 3\") == \"2\"\nassert solution(stdin=r\"4\n3 1 3 3\n5 8 7 10\n4 1 2 6\") == \"1\""
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2\", \"Expected output: 2, actual output: {}\".format(solution())"
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected\nfor stdin, expected in [\n    (\"3\\n2 3 3\\n4 1 10\\n2 7 3\", \"2\"),\n    (\"4\\n3 1 3 3\\n5 8 7 10\\n4 1 2 6\", \"1\"),\n]:\n    assert solution(stdin) == expected, f\"For input: {stdin}\""
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n2 3 3\\n4 1 10\\n2 7 3\\n\") == 2\nassert solution(\"4\\n3 1 3 3\\n5 8 7 10\\n4 1 2 6\\n\") == 1"
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), \"Test case failed.\"\n"
    },
    {
        "number": 3304,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''3\n2 3 3\n4 1 10\n2 7 3''') == '2\\n'\nassert solution('''4\n3 1 3 3\n5 8 7 10\n4 1 2 6''') == '1\\n'"
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"5\\n11\\n16\""
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('test_input.txt', 'r')) == \"5\\n11\\n16\"\nassert solution(open('test_input2.txt', 'r')) == \"7\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"beginning\") == \"5\"\nassert solution(\"1 5\") == \"11\"\nassert solution(\"4 8\") == \"16\"\nassert solution(\"1 9\") == \"7\"\nassert solution(\"velvet\") == \"def\""
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"The output is {solution(input())}, but expected {expected}\"\n"
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"beginning\") == \"5\"\nassert solution(\"1 5\") == \"11\"\nassert solution(\"4 8\") == \"16\"\nassert solution(\"1 9\") == \"16\"\nassert solution(\"velvet\") == \"7\"\nassert solution(\"\") == \"0\""
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('9 3\\nbeginning\\n1 5\\n4 8\\n1 9\\n') == '5\\n11\\n16\\n'"
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"beginning\") == 5\nassert solution(\"1 5\") == 11\nassert solution(\"4 8\") == 16"
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Expected: {output}\\nGot: {solution(input())}\""
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"never attribute to malice that which is adequately explained by stupidity.\") == 5\nassert solution(\"123abc\") == 0"
    },
    {
        "number": 3305,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"5\\n11\\n16\\n\"\n"
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\n3 1\\n2 2\\n1 1\\n\") == \"2\\n\"\nassert solution(\"2 3\\n1 23\\n2 17\\n\") == \"23\\n\""
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == expected, f\"The expected output is {expected}, but the output is {solution}\""
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 2, \"Test case 1 failed\"\n\nassert solution() == 23, \"Test case 2 failed\"\n\nprint(\"All test cases passed\")"
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == 2\nassert solution(sample_input2) == 23"
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed: Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\n3 1\\n2 2\\n1 1\\n\") == \"2\"\nassert solution(\"2 3\\n1 23\\n2 17\\n\") == \"23\"\nassert solution(\"3 4\\n3 1\\n2 2\\n1 1\\n\") == \"2\"\nassert solution(\"2 3\\n1 23\\n2 17\\n\") == \"23\""
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 'Output a single integer, the minimal number of phone calls made.'"
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"Test failed. Expected output: {expected}, Actual output: {solution(stdin)}\"\n"
    },
    {
        "number": 3306,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"sample_input.txt\", \"r\")) == \"0.0000000000\"\nassert solution(open(\"sample_input.txt\", \"r\")) == \"9.476048311178\""
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"0.0000000000\\n\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(None) == 'Please provide a valid input.\\n'\n\nimport sys"
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n0 0\\n2 0\\n2 2\\n0 2\\n0 -1 0 3\\n\") == 0.0000000000\nassert solution(\"6\\n0 1\\n0 4\\n3 6\\n7 5\\n4 2\\n7 0\\n5 7 2 0\\n\") == 9.476048311178"
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\n0 0\\n2 0\\n2 2\\n0 2\\n0 -1 0 3\\n') == '0.0000000000'\nassert solution('6\\n0 1\\n0 4\\n3 6\\n7 5\\n4 2\\n7 0\\n5 7 2 0\\n') == '9.476048311178'"
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 0\\n2 0\\n2 2\\n0 2\\n0 -1 0 3\\n\") == 0.0000000000\nassert solution(\"0 1\\n0 4\\n3 6\\n7 5\\n4 2\\n7 0\\n5 7 2 0\\n\") == 9.476048311178"
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n0 0\\n2 0\\n2 2\\n0 2\\n0 -1 0 3\\n\") == \"0.0000000000\"\nassert solution(\"6\\n0 1\\n0 4\\n3 6\\n7 5\\n4 2\\n7 0\\n5 7 2 0\\n\") == \"9.476048311178\"\nassert solution(\"\") == \"None\""
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r')) == \"0.0000000000\"\n"
    },
    {
        "number": 3307,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n0 0\\n2 0\\n2 2\\n0 2\\n0 -1 0 3\\n\") == \"0.0000000000\"\nassert solution(\"6\\n0 1\\n0 4\\n3 6\\n7 5\\n4 2\\n7 0\\n5 7 2 0\\n\") == \"9.476048311178\""
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt').read()) == \"8.0000000000\"\nassert solution(open('input2.txt').read()) == \"0.0200000000\""
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == expected_output, \"The solution is incorrect. Expected output: {}, Actual output: {}.\".format(expected_output, solution)\nprint(\"Test passed.\")"
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(SampleInput1) == Output1\nassert solution(SampleInput2) == Output2"
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n5\n2 0\n1 1\n0 2\n-2 0\n0 -2\n\"\"\") == \"8.0000000000\\n\"\n\nassert solution(\n\"\"\"\n5\n0.2 0.00\n0 -0.2\n0.0 0\n-0.2 0\n0 0.20\n\"\"\") == \"0.0200000000\\n\"\n\nassert solution(\n\"\"\"\n5\n0 0\n1 0\n1 1\n0 1\n-1 0\n-1 -1\n\"\"\") == \"0.0000000000\\n\"\n\nassert solution(\n\"\"\"\n5\n1.0000000000 2.0000000000\n1.0000000000 0.0000000000\n0.0000000000 1.0000000000\n0.0000000000 0.0000000000\n-1.0000000000 -1.0000000000\n-1.0000000000 -0.0000000000\n\"\"\") == \"2.0000000000\\n\""
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"8.0000000000\"\n"
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"5\\n2 0\\n1 1\\n0 2\\n-2 0\\n0 -2\"\n) == \"8.0000000000\\n0.0200000000\\n\""
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n2 0\\n1 1\\n0 2\\n-2 0\\n0 -2\\n') == '8.0000000000\\n'\nassert solution('5\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.20\\n') == '0.0200000000\\n'"
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == \"8.0000000000\", \"Test 1\"\nassert solution(sample_input_2) == \"0.0200000000\", \"Test 2\""
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == sample_output"
    },
    {
        "number": 3308,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\").read()) == \"8.0000000000\\n\""
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"9 4 3\\n1 1 9 9 1 6 6 39 9\") == \"2\\n\"\nassert solution(\"10 2 2\\n1 1 1 1 1 2 2 2 2 2\") == \"2\\n\"\n"
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"9 4 3\\n1 1 9 9 1 6 6 39 9\\n\") == \"2\"\nassert solution(\"10 2 2\\n1 1 1 1 1 2 2 2 2 2\\n\") == \"2\"\nassert solution(\"5 5 5\\n1 1 1 1 1\\n\") == \"1\"\nassert solution(\"3 2 2\\n1 1 1 1 1\\n\") == \"1\"\nassert solution(\"1 2 1\\n1 1 1\\n\") == \"1\"\nassert solution(\"3 2 1\\n1 1 1\\n\") == \"1\"\nassert solution(\"2 1 1\\n1 1 1\\n\") == \"1\"\nassert solution(\"2 1 1\\n1 1 1\\n\") == \"1\""
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"9 4 3\\n1 1 9 9 1 6 6 39 9\\n\") == \"2\\n\"\nassert solution(\"10 2 2\\n1 1 1 1 1 2 2 2 2 2\\n\") == \"2\\n\""
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"9 4 3\\n1 1 9 9 1 6 6 39 9\\n\") == \"2\\n\"\nassert solution(\"10 2 2\\n1 1 1 1 1 2 2 2 2 2\\n\") == \"2\\n\""
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 2, \"The result should be 2, but it is: \" + str(solution())"
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2\\n\"\nprint(\"Success!\")\n"
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"2\""
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('10 2 2\\n1 1 1 1 1 2 2 2 2 2') == '2\\n'\nassert solution('9 4 3\\n1 1 9 9 1 6 6 39 9') == '2\\n'"
    },
    {
        "number": 3309,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 3 2\\n1 2 3\\n') == '3.666666667'\nassert solution('4 11 4\\n10 10 10 10\\n') == '20.000000000'"
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 3 2\\n1 2 3\\n') == '3.666666667\\n'\nassert solution('4 11 4\\n10 10 10 10\\n') == '20.000000000\\n'"
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3 2\\n1 2 3\") == \"3.666666667\"\nassert solution(\"4 11 4\\n10 10 10 10\") == \"20.000000000\""
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3 2\\n1 2 3\\n\") == \"3.666666667\"\nassert solution(\"4 11 4\\n10 10 10 10\\n\") == \"20.000000000\""
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3 2\\n1 2 3\\n\") == \"3.666666667\\n\"\nassert solution(\"4 11 4\\n10 10 10 10\\n\") == \"20.000000000\\n\""
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3 2\\n1 2 3\") == \"3.666666667\"\nassert solution(\"4 11 4\\n10 10 10 10\") == \"20.000000000\""
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_data) == output_data, f\"Your solution for the problem is incorrect. Please check the problem statement and the input/output examples.\""
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 3 2\\n1 2 3\\nSample Output 1: 3.666666667\\n\\n4 11 4\\n10 10 10 10\\nSample Output 2: 20.000000000\\n') == '3.666666667\\n20.000000000'"
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3 2\\n1 2 3\\n\") == \"3.666666667\"\nassert solution(\"4 11 4\\n10 10 10 10\\n\") == \"20.000000000\""
    },
    {
        "number": 3310,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '20.000000000'"
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Expected {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == solution(stdin) == '2'\n"
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == output, f\"Test case failed. Input: {stdin}, Output: {output}\""
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(2, 42) == 2\nassert solution(5, 123456789) == 16317634"
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(2, 42) == 2\nassert solution(5, 123456789) == 16317634"
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n2\\n\") == \"2\\n\"\nassert solution(\"2\\n42\\n\") == \"2\\n\"\nassert solution(\"5\\n123456789\\n\") == \"16317634\\n\""
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"2 42\\n5 123456789\\n\") == [\"2\", \"16317634\"]\n"
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\\n\", \"The result should be 2, but it is %s\" % solution(stdin)"
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Test {i+1} failed. Got {output}, expected {output}\""
    },
    {
        "number": 3311,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(2, 42) == 2, \"Expected result: 2\"\nassert solution(5, 123456789) == 16317634, \"Expected result: 16317634\""
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for input {input()}\\nExpected output: {expected_output}\\nGot: {solution(input())}\""
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1 0 0 2\\n1 2 2\\n1 1 1\") == \"0\"\nassert solution(\"3 1 1 1 8\\n0 1 1\\n1 0 1\\n2 1 1\\n1 2 1\\n1 2 2\\n2 2 3\\n0 2 5\\n1 2 6\") == \"4\""
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Solution does not match the expected output.\\nExpected: {expected}\\nGot: {solution(input())}\"\n"
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3 1 0 0 2\n1 2 2\n1 1 1\n) == 0\n\nassert solution(3 1 1 1 8\n0 1 1\n1 0 1\n2 1 1\n1 2 1\n1 2 2\n2 2 3\n0 2 5\n1 2 6\n) == 4"
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1 0 0 2\\n1 2 2\\n1 1 1\") == \"0\\n\"\nassert solution(\"3 1 1 1 8\\n0 1 1\\n1 0 1\\n2 1 1\\n1 2 1\\n1 2 2\\n2 2 3\\n0 2 5\\n1 2 6\") == \"4\\n\""
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '0', \"Expected output: 0, but got: '{}'\".format(solution())"
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Test failed. Input: {input()}, Output: {output()}\"\n"
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1 0 0 2\\n1 2 2\\n1 1 1\") == \"0\\n\"\nassert solution(\"3 1 1 1 8\\n0 1 1\\n1 0 1\\n2 1 1\\n1 2 1\\n1 2 2\\n2 2 3\\n0 2 5\\n1 2 6\") == \"4\\n\""
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 1 0 0 2\\n1 2 2\\n1 1 1\\n') == '0\\n'\nassert solution('3 1 1 1 8\\n0 1 1\\n1 0 1\\n2 1 1\\n1 2 1\\n1 2 2\\n2 2 3\\n0 2 5\\n1 2 6\\n') == '4\\n'"
    },
    {
        "number": 3312,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1 0 0 2\\n1 2 2\\n1 1 1\") == 0\nassert solution(\"3 1 1 1 8\\n0 1 1\\n1 0 1\\n2 1 1\\n1 2 1\\n1 2 2\\n2 2 3\\n0 2 5\\n1 2 6\") == 4"
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 1 10 10\\n8 8\\n5 1\\n4 6\\n4 7\\n7 9\\n\") == \"3\\n\"\nassert solution(\"5 1 100 100\\n27 75\\n79 77\\n40 93\\n62 41\\n52 45\\n\") == \"3\\n\""
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == \"3\", \"Expected output: 3\\nActual output: \" + solution(sample_input1)\nassert solution(sample_input2) == \"3\", \"Expected output: 3\\nActual output: \" + solution(sample_input2)\n\nsample_input1 = \"\"\"\n5 1 10 10\n8 8\n5 1\n4 6\n4 7\n7 9\n\"\"\"\n\nsample_input2 = \"\"\"\n5 1 100 100\n27 75\n79 77\n40 93\n62 41\n52 45\n\"\"\""
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(None) == \"Invalid input\""
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 1 10 10\\n8 8\\n5 1\\n4 6\\n4 7\\n7 9\") == \"3\\n\"\nassert solution(\"5 1 100 100\\n27 75\\n79 77\\n40 93\\n62 41\\n52 45\") == \"3\\n\""
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 1 10 10\\n8 8\\n5 1\\n4 6\\n4 7\\n7 9\") == \"3\"\nassert solution(\"5 1 100 100\\n27 75\\n79 77\\n40 93\\n62 41\\n52 45\") == \"3\"\n"
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 1 10 10\\n8 8\\n5 1\\n4 6\\n4 7\\n7 9\") == \"3\\n\", \"Test 1 failed\"\nassert solution(\"5 1 100 100\\n27 75\\n79 77\\n40 93\\n62 41\\n52 45\") == \"3\\n\", \"Test 2 failed\""
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '3'"
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == \"3\\n\"\nassert solution(sample_input_2) == \"3\\n\""
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 1 10 10\\n8 8\\n5 1\\n4 6\\n4 7\\n7 9\") == \"3\"\nassert solution(\"5 1 100 100\\n27 75\\n79 77\\n40 93\\n62 41\\n52 45\") == \"3\"\nassert solution(\"5 1 10 100\\n8 8\\n5 1\\n4 6\\n4 7\\n7 9\") == \"3\""
    },
    {
        "number": 3313,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 1 10 10\\n8 8\\n5 1\\n4 6\\n4 7\\n7 9\") == \"3\\n\", \"Expected output '3', but got: '{}'\".format(solution(\"5 1 10 10\\n8 8\\n5 1\\n4 6\\n4 7\\n7 9\"))\n\nassert solution(\"5 1 100 100\\n27 75\\n79 77\\n40 93\\n62 41\\n52 45\") == \"3\\n\", \"Expected output '3', but got: '{}'\".format(solution(\"5 1 100 100\\n27 75\\n79 77\\n40 93\\n62 41\\n52 45\"))\n\nfrom typing import List"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == 3\n"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == 3"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('ABC') == 2\nassert solution('ABBBAAAA') == 3"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"ABC\n    ABC\n    ABC\"\"\"\n) == 2\n\nassert solution(\n    \"\"\"ABBBAAAA\n    BBBCCCBB\n    CCCAAAC\"\"\"\n) == 3"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == 3"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == 3"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('ABC') == 2\nassert solution('ABBBAAAA') == 3"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == 3"
    },
    {
        "number": 3314,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == 3"
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\nA\\nB\\nA\\nB\\n\") == \"3\"\nassert solution(\"5\\nA\\nABA\\nBBB\\nABABA\\nAAAAAB\\n\") == \"3\"\n\nfrom typing import List"
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\nA\\nB\\nA\\nB\\nA\") == \"3\""
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    '''\n    5\n    123456789ABCDEF\n    '''\n) == '3\\n'\n\nassert solution(\n    '''\n    5\n    1234567890ABCDEF\n    '''\n) == '2\\n'\n\nassert solution(\n    '''\n    5\n    0000000000ABCDEF\n    '''\n) == '0\\n'\n\nassert solution(\n    '''\n    5\n    111111111111ABCDEF\n    '''\n) == '1\\n'\n\nassert solution(\n    '''\n    5\n    12345678901234567890ABCDEF\n    '''\n) == '1\\n'\n\nassert solution(\n    '''\n    5\n    1111111111111111111111111111111ABCDEF\n    '''\n) == '1\\n'"
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\nA\\nB\\nAA\\nB\\nBBB\\nAAA\\n\") == \"3\"\nassert solution(\"5\\nA\\nABA\\nB\\nABABA\\nAAAAAB\\n\") == \"3\""
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\nA\\nB\\nA\\nA\\n\") == \"3\\n\"\nassert solution(\"5\\nA\\nA\\nA\\n\") == \"3\\n\"\nassert solution(\"5\\nABA\\nBBB\\nABABA\\nAAAAAB\\n\") == \"3\\n\""
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input1) == output1, \"Incorrect output\"\nassert solution(input2) == output2, \"Incorrect output\""
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"3\""
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '3\\n', 'Input must be a string of uppercase letters, separated by spaces, with 5 elements.'"
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r')) == '3\\n', 'Test 1'"
    },
    {
        "number": 3315,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(r\"\"\"\n    5\n    A\n    B\n    AA\n    BBB\n    AAA\n    \n\"\"\") == \"3\"\n\nassert solution(r\"\"\"\n    5\n    A\n    ABA\n    BBB\n    ABABA\n    AAAAAB\n    \n\"\"\") == \"3\""
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"0.1909090909\"\n"
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('100 10 2 1\\n100 10 2 2') == '0.1\\n0.1909090909\\n'\n"
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"100 10 2 1\") == \"0.1\", \"Incorrect output for 100 10 2 1\"\nassert solution(\"100 10 2 2\") == \"0.1909090909\", \"Incorrect output for 100 10 2 2\""
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(r'100 10 2 1') == '0.1'\nassert solution(r'100 10 2 2') == '0.1909090909'"
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"100 10 2 1\\n100 10 2 2\\n\") == \"0.1909090909\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == '0.1', \"Please provide the correct code.\""
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"100 10 2 1\\n100 10 2 2\\n\") == \"0.1\\n0.1909090909\\n\""
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"0.1\", \"Expected '0.1', but got '{}'.\".format(solution(stdin))"
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"100 10 2 1\") == \"0.1\", \"Test case 1 failed.\"\nassert solution(\"100 10 2 2\") == \"0.1909090909\", \"Test case 2 failed.\""
    },
    {
        "number": 3316,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == sample_output"
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == \"4\"\nassert solution(\"ABABABcABABAbAbab\") == \"0\"\nassert solution(\"ABABABcABABAbAbab\") == \"5\""
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 0\nassert solution(\"ABABABcABABAbAbab\") == 5"
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"AABABcABABAbcABAB\") == 3\nassert solution(\"AABABcABABABcABAB\") == 4\nassert solution(\"aababcccaaabcccaaaa\") == 4\nassert solution(\"\") == 0"
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('ABABABcABABAbAbab') == 4\nassert solution('ABABABcABABAbAbab') == 4\nassert solution('ABABABcABABAbAbab') == 4"
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == \"4\"\nassert solution(\"ABABABcABABAbAbab\") == \"4\"\nassert solution(\"ABABABcABABAbAbab\") == \"4\"\nassert solution(\"ABABABcABABAbAbab\") == \"4\"\nassert solution(\"ABABABcABABAbAbab\") == \"4\""
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABAB"
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 0\nassert solution(\"ABABABcABABAbAbab\") == 5\n"
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 5\nassert solution(\"ABCABABcABABAbAbab\") == 4\nassert solution(\"ABABABcABABAbAbab\") == 5"
    },
    {
        "number": 3317,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == 4\nassert solution(\"ABABAbAb\") == 0\nassert solution(\"AbcD\") == 1\nassert solution(\"\") == 0"
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n0\\n0\\n1\\n\") == \"2\\n\""
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n0\\n0\\n1\\n\") == 2"
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 3\\n0\\n0\\n1') == '2', \"Test failed\"\n"
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 3\\n0\\n0\\n1\\n') == '2'"
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n0\\n0\\n1\\n\") == \"2\"\nassert solution(\"2 2\\n0\\n1\\n1\\n\") == \"3\"\nassert solution(\"1 1\\n0\\n0\\n0\\n\") == \"1\""
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n0\\n0\\n1\\n\") == \"2\""
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n0\\n0\\n1\") == \"2\", \"Test 1\"\nassert solution(\"4 3\\n0\\n0\\n1\") == \"2\", \"Test 2\""
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n0\\n0\\n1\") == \"2\"\nassert solution(\"6 2\\n1 0\\n2 0\\n3 1\\n4 1\\n5 2\") == \"3\""
    },
    {
        "number": 3318,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n0\\n0\\n1\") == \"2\"\nassert solution(\"4 5\\n0\\n0\\n1\") == \"3\"\nassert solution(\"4 2\\n0\\n1\\n1\") == \"3\"\nassert solution(\"4 1\\n0\\n1\\n2\") == \"4\"\nassert solution(\"4 3\\n1\\n1\\n1\") == \"4\""
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == expected, \"Test case failed\"\n"
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n\") == \"1\\nP0: 22 1 4 2 6 -1 0\\n\"\n"
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n2 8 8 8\n12 4 1 4 5 3 -2\n10 1 2 1 8 -6 1\n''') == '1\\nP0: 22 1 4 2 6 -1 0'\n\nassert solution('''\n3 6 7 8\n11 3 4 1 2 3 -2\n7 9 2 6 5 4 -1\n''') == '1\\nP0: 22 1 4 2 6 -1 0\\nP1: 21 1 4 2 6 -1 0'\n\nassert solution('''\n5 5 5 5\n7 7 7 7\n10 10 10 10\n15 15 15 15\n20 20 20 20\n25 25 25 25\n''') == '2\\nP0: 25 25 25 25\\nP1: 25 25 25 25'"
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r').read()) == '1\\nP0: 22 1 4 2 6 -1 0\\n'"
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == expected_output\nprint(\"All tests passed!\")"
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1') == 1, \"Invalid output\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1') == '1\\nP0: 22 1 4 2 6 -1 0\\n'"
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == '''\n1\nP0: 22 1 4 2 6 -1 0\n'''"
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n\") == \"1\\nP0: 22 1 4 2 6 -1 0\\n\"\nassert solution(\"2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n\") == \"1\\nP0: 22 1 4 2 6 -1 0\\nP1: 22 1 4 2 6 -1 0\\n\"\nassert solution(\"2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n\") == \"1\\nP0: 22 1 4 2 6 -1 0\\nP1: 22 1 4 2 6 -1 0\\nP2: 22 1 4 2 6 -1 0\\n\"\nassert solution(\"2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n\") == \"1\\nP0: 22 1 4 2 6 -1 0\\nP1: 22 1 4 2 6 -1 0\\nP2: 22 1 4 2 6 -1 0\\nP3: 22 1 4 2 6 -1 0\\n\"\nassert solution(\"2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n\") == \"1\\n"
    },
    {
        "number": 3319,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"2 8 8 8\n12 4 1 4 5 3 -2\n10 1 2 1 8 -6 1\"\"\") == \"\"\"1\nP0: 22 1 4 2 6 -1 0\"\"\""
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4') == '1\\n2\\n3\\n'\nassert solution('1 1 2\\n1 1 3\\n1 2 2\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3 4 5\\n3 5 4\\n1 2\\n1 3\\n2 4\\n1 4\\n2 3\\n3 2\\n3 4\\n2 5\\n3 6') == '1\\n2\\n3\\n'\nassert solution('4 6\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3 5 4\\n3 6 4\\n1 2\\n1 3\\n2 4\\n1 4\\n2 3\\n3 2\\n3 4\\n2 5\\n3 6\\n4 5\\n1 2\\n1 3\\n3 4\\n2 5\\n1 4\\n2 3\\n4 2\\n4 5\\n2 6\\n4 7') == '1\\n2\\n3\\n'\nassert solution('3 4\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3 5 4\\n3 6 4\\n1 2\\n1 3\\n2 4\\n1 4\\n2 3\\n3 2\\n3 4\\n2 5\\n3 6\\n4 5\\n1 2\\n1 3\\n3 4\\n2 5\\n1 4\\n2 3\\n4 2\\n4 5\\n2 6\\n4 7\\n1 2\\n1 3\\n3 4\\n2 5\\n1 4\\n2 3\\n4 2\\n4 5\\n2 6\\n4 7\\n3 5\\n3 6\\n4 7') == '1\\n2\\n3\\n'\nassert solution('1 1 2\\n1 1 3\\n1 2 2\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3 5 4\\n3 6 4\\n1 2\\n1 3\\n2 4\\n1 4\\n2 3\\n3 2\\n3 4\\n2 5\\n3 6\\n4 5\\n1 2\\n1 3\\n3 4\\n2 5\\n1 4\\n2 3\\n4 2\\n4 5\\n2 6\\n4 7\\n1 2\\n1 3\\n3 4\\n2 5\\n1 4\\n2 3\\n4 2\\n4 5\\n2 6\\n4 7\\n3 5\\n3 6\\n4 7\\n1 2\\n1 3\\n3 4\\n2 5\\n1 4\\n2 3\\n4 2\\n4 5\\n2 6\\n4 7\\n3 5\\n3 6\\n4 7\\n4 6\\n4 7') == '1\\n2\\n3\\n'"
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=input()) == output # check if the output matches the expected output"
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == [1, 2, 3] # example output\n"
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n4 7\n1 2 1\n1 2 3\n1 3 2\n1 4 1\n2 3 4\n2 4 4\n3 4 4\n3\n1 2\n1 3\n3 4\n\"\"\") == '1\\n2\\n3\\n'\n\nassert solution(\n\"\"\"\n4 7\n1 2 1\n1 2 3\n1 3 2\n1 4 1\n2 3 4\n2 4 4\n3 4 4\n3\n1 2\n1 3\n3 4\n2\n\"\"\") == '1\\n2\\n3\\n'\n\nassert solution(\n\"\"\"\n4 7\n1 2 1\n1 2 3\n1 3 2\n1 4 1\n2 3 4\n2 4 4\n3 4 4\n3\n1 2\n1 3\n3 4\n2\n1\n\"\"\") == '1\\n2\\n3\\n'"
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1\\n2\\n3\\n\", \"Test failed for solution\""
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed with input {stdin}, expected output {expected_output}\"\n"
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == sample_output, \"Test case failed\"\n\nsample_input = \"\"\"\n4 7\n1 2 1\n1 2 3\n1 3 2\n1 4 1\n2 3 4\n2 4 4\n3 4 4\n3\n1 2\n1 3\n3 4\n\"\"\"\n\nsample_output = \"\"\"1\n2\n3\n\"\"\""
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\""
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5') == '1\\n2\\n3\\n4\\n5'\nassert solution('1\\n3\\n2\\n4\\n5') == '1\\n2\\n3\\n4\\n5'\nassert solution('1\\n2\\n1\\n3\\n2\\n4\\n5') == '1\\n2\\n3\\n4\\n5'"
    },
    {
        "number": 3320,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Solution: {solution(input())}\\nOutput: {output}\""
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2\\n\" + \"def solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"2\\n\" + \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"2\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\"\n\nimport itertools"
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6\\n1 5 4 3 2 6\\n1 2 5 4 3 6') == '2\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n\nfrom typing import List"
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2\""
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"def solution(stdin: str) -> str:\\n\\tpass\\n\\n\""
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2\\n2\\n\"\nassert solution(\"6\\n1 2 3 4 5 6\\n1 3 4 5 6 7\") == \"4\\n2\\n3\\n1\\n4\\n5\\n\"\nassert solution(\"6\\n1 2 3 4 5 6\\n1 4 5 6 7 8\") == \"6\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n\"\nassert solution(\"6\\n1 2 3 4 5 6\\n1 5 6 7 8 9\") == \"10\\n5\\n4\\n3\\n2\\n1\\n\"\nassert solution(\"6\\n1 2 3 4 5 6\\n1 6 7 8 9 10\") == \"12\\n2\\n3\\n4\\n5\\n6\\n\"\nassert solution(\"6\\n1 2 3 4 5 6\\n1 7 8 9 10 11\") == \"14\\n3\\n2\\n1\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\"\nassert solution(\"6\\n1 2 3 4 5 6\\n1 8 9 10 11 12\") == \"16\\n4\\n3\\n2\\n1\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n\"\nassert solution(\"6\\n1 2 3 4 5 6\\n1 9 10 11 12 13\") == \"18\\n5\\n4\\n3\\n2\\n1\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n\"\nassert solution(\"6\\n1 2 3 4 5 6\\n1 10 11 12 13 14\") == \"20\\n6\\n5\\n4\\n3\\n2\\n1\\n\"\nassert solution(\"6\\n1 2 3 4 5 6\\n1 11 12 13 14 15\") == \"22\\n7\\n6\\n5\\n4\\n3\\n2\\n\"\nassert solution(\"6\\n1 2 3 4 5 6\\n1 12 13 14 15 16\") == \"24\\n8\\n7\\n6\\n5\\n4\\n3\\n2\\n\"\nassert solution(\"6\\n1 2 3 4 5 6\\n1 13 14 15 16 17\") == \"26\\n9\\n8\\n7\\n6\\n5\\n4\\n3\\n2\\n\"\nassert solution(\"6\\n1 2 3 4 5 6\\n1 14 15 16 17 18\") == \"28\\n10\\n9\\n8\\n7\\n6\\n5\\n4\\n3\\n2\\n\"\nassert solution(\"6\\n1 2 3 4 5 6\\n1 15 16 17 18 19\") == \"30\\n11\\n10\\n9\\n8\\n7\\n6\\n5\\n4\\n3\\n2\\n\"\nassert solution(\"6\\n1 2 3 4 5 6\\n1 16 17 18 19 20\") == \"32\\n12\\n11\\n10\\n9\\n8\\n7\\n6\\n5\\n4\\n3\\n2\\n\"\nassert solution(\"6\\n1 2 3 4 5 6\\n1 17 18 19 20 21\") == \"34\\n13\\"
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3321,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('6\\n1 5 4 3 2 6\\n1 2 5 4 3 6') == '2\\ndef solution(stdin: str) -> str:\\n    pass'\n"
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == '60\\n'"
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == \"60\""
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"60\""
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80') == '60'\nassert solution('3 3 2\\n2 70 3 10\\n3 20 1 80\\n4 100 2 100') == '-1'"
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == 60, \"Expected 60, but got: \" + solution(\"3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\")"
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"60\\n\", solution(stdin)\n"
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, \"Expected: {}\\nActual: {}\".format(output, solution(input()))"
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80') == '60'\nassert solution('5 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80') == '-1'"
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80\") == 60\nassert solution(stdin=\"2 2 1\\n1 10 1 20\\n1 100 1 10\\n1 1000 1 5\") == -1"
    },
    {
        "number": 3322,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80') == '60\\n'\nassert solution('4 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80') == '-1\\n'\nassert solution('2 1 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80') == '-1\\n'\nassert solution('3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80') == '120\\n'\nassert solution('1 1 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80') == '120\\n'\nassert solution('1 1 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80') == '-1\\n'\nassert solution('3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80') == '60\\n'\nassert solution('2 1 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80') == '120\\n'\nassert solution('3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80') == '60\\n'\nassert solution('3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80') == '-1\\n'\nassert solution('3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80') == '60\\n'\nassert solution('3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80') == '60\\n'\nassert solution('3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80') == '60\\n'\nassert solution('3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80') == '60\\n'\nassert solution('3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80') == '60\\n'\nassert solution('3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80') == '60\\n'\nassert solution('3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80') == '60\\n'\nassert solution('3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80') == '60\\n'\nassert solution('3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80') == '60\\n'\nassert solution('3 3 2\\n1 30 2 50\\n2 70 3 10\\n3 20 1 80') == '60\\n'\nassert solution('3 3 2\\n1 30 2 50\\n2 70 3"
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_str) == output_str, f\"Test {i+1} failed: expected {output_str}, got {solution(input_str)}\" for i, (input_str, output_str) in enumerate(zip(inputs, outputs))"
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"Case #1: 1\\nCase #2: 2\""
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"Case #1: 1\\nCase #2: 2\\n\"\n"
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Test case {i+1} failed: {solution(input())}!= {output()}\""
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n3\\n10000 0 0\\n0 10000 0\\n0 0 10000\\n3\\n5000 0 0\\n0 2000 0\\n0 0 4000\\n\") == \"\"\"Case #1: 1\nCase #2: 2\"\"\"\n"
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 'Case #1: 1\\nCase #2: 2\\n'\n"
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"test_input.txt\", \"r\")) == \"Case #1: 1\\nCase #2: 2\"\n"
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"Case #1: 1\\nCase #2: 2\"\n"
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r')) == 'Case #1: 1\\nCase #2: 2\\n'\n"
    },
    {
        "number": 3323,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\n3\\n10000 0 0\\n0 10000 0\\n0 0 10000\\n3\\n5000 0 0\\n0 2000 0\\n0 0 4000') == 'Case #1: 1\\nCase #2: 2\\n'"
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0\"\"\") == \"6 6 6 1\""
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0\n''') == ['6', '6', '6', '1']\n\nassert solution('''\n+1 1 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0\n''') == ['6', '6', '6', '1']\n\nassert solution('''\n+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0\n''') == ['6', '6', '6', '1']\n\nassert solution('''\n+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0\n''') == ['6', '6', '6', '1']\n\nassert solution('''\n+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0\n''') == ['6', '6', '6', '1']\n\nassert solution('''\n+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0\n''') == ['6', '6', '6', '1']\n\nassert solution('''\n+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0\n''') == ['6', '6', '6', '1']\n\nassert solution('''\n+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0\n''') == ['6', '6', '6', '1']\n\nassert solution('''\n+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0\n''') == ['6', '6', '6', '1']\n\nassert solution('''\n+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0\n''') == ['6', '6', '6', '1']\n\nassert solution('''\n+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0\n''') == ['6', '6', '6', '1']\n\nassert solution('''\n+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0\n''') == ['6', '6', '6', '1']\n\nassert solution('''\n+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0\n''') == ['6', '6', '6', '1']\n\nassert solution('''\n+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0\n''') == ['6', '6', '6', '1']\n\nassert solution('''\n+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O"
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0') == '6 6 6 1'\n"
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\") == \"6 6 6 1\", \"The solution should be '6 6 6 1', but got '{0}' instead.\".format(solution(\"+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\"))\nassert solution(\"+1 2 H 2 O 1\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\") == \"2 2 2 1\", \"The solution should be '2 2 2 1', but got '{0}' instead.\".format(solution(\"+1 2 H 2 O 1\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\"))\nassert solution(\"+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n0 0\") == \"3 1 2 2\", \"The solution should be '3 1 2 2', but got '{0}' instead.\".format(solution(\"+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n0 0\"))\nassert solution(\"+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n0 0\\n0 0\\n0 0\") == \"6 6 6 1\", \"The solution should be '6 6 6 1', but got '{0}' instead.\".format(solution(\"+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n0 0\\n0 0\\n0 0\")))"
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\") == [\"6 6 6 1\"]"
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_str) == ['6 6 6 1']\n"
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(example) == expected\nassert solution(example) == expected2\nassert solution(example) == expected3\nassert solution(example) == expected4\nassert solution(example) == expected5\nassert solution(example) == expected6\nassert solution(example) == expected7\nassert solution(example) == expected8\nassert solution(example) == expected9\nassert solution(example) == expected10\nassert solution(example) == expected11\nassert solution(example) == expected12\nassert solution(example) == expected13\nassert solution(example) == expected14\nassert solution(example) == expected15\nassert solution(example) == expected16\nassert solution(example) == expected17\nassert solution(example) == expected18\nassert solution(example) == expected19\nassert solution(example) == expected20\nassert solution(example) == expected21\nassert solution(example) == expected22\nassert solution(example) == expected23\nassert solution(example) == expected24\nassert solution(example) == expected25\nassert solution(example) == expected26\nassert solution(example) == expected27\nassert solution(example) == expected28\nassert solution(example) == expected29\nassert solution(example) == expected30\nassert solution(example) == expected31\nassert solution(example) == expected32\nassert solution(example) == expected33\nassert solution(example) == expected34\nassert solution(example) == expected35\nassert solution(example) == expected36\nassert solution(example) == expected37\nassert solution(example) == expected38\nassert solution(example) == expected39\nassert solution(example) == expected40\nassert solution(example) == expected41\nassert solution(example) == expected42\nassert solution(example) == expected43\nassert solution(example) == expected44\nassert solution(example) == expected45\nassert solution(example) == expected46\nassert solution(example) == expected47\nassert solution(example) == expected48\nassert solution(example) == expected49\nassert solution(example) == expected50\nassert solution(example) == expected51\nassert solution(example) == expected52\nassert solution(example) == expected53\nassert solution(example) == expected54\nassert solution(example) == expected55\nassert solution(example) == expected56\nassert solution(example) == expected57\nassert solution(example) == expected58\nassert solution(example) == expected59\nassert solution(example) == expected60\nassert solution(example) == expected61\nassert solution(example) == expected62\nassert solution(example) == expected63\nassert solution(example) == expected64\nassert solution(example) == expected65\nassert solution(example) == expected66\nassert solution(example) == expected67\nassert solution(example) == expected68\nassert solution(example) == expected69\nassert solution(example) == expected70\nassert solution(example) == expected71\nassert solution(example) == expected72\nassert solution(example) == expected73\nassert solution(example) == expected74\nassert solution(example) == expected75\nassert solution(example) == expected76\nassert solution(example) == expected77\nassert solution(example) == expected78\nassert solution(example) == expected79\nassert solution(example) == expected80\nassert solution(example) == expected81\nassert solution(example) == expected82\nassert solution(example) == expected83\nassert solution(example) == expected84\nassert solution(example) == expected85\nassert solution(example) == expected86\nassert solution(example) == expected87\nassert solution(example) == expected88\nassert solution(example) == expected89\nassert solution(example) == expected90\nassert solution(example) == expected91\nassert solution(example) == expected92\nassert solution(example) == expected93\nassert solution(example) == expected94\nassert solution(example) == expected95\nassert solution(example) == expected96\nassert solution(example) == expected97\nassert solution(example) == expected98\nassert solution(example) == expected99\nassert solution(example) == expected100\nassert solution(example) == expected101\nassert solution(example) == expected102\nassert solution(example) == expected103\nassert solution"
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\") == \"6 6 6 1\""
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 0\") == [6, 6, 6, 1]\nassert solution(\"+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\") == [6, 6, 6, 1]\nassert solution(\"+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\") == [6, 6, 6, 1]\nassert solution(\"+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n-1 3 C 6 H 12 O 6\") == [6, 6, 6, 1]\nassert solution(\"+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n-1 3 C 6 H 12 O 6\") == [6, 6, 6, 1]\nassert solution(\"+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n-1 3 C 6 H 12 O 6\\n-1 3 C 6 H 12 O 6\\n-1 3 C 6 H 12 O 6\\n-1 3 C 6 H 12 O 6\\n-1 3 C 6 H 12 O 6\\n-1 3 C 6 H 12 O 6\\n-1 3 C 6 H 12 O 6\\n-1 3 C 6 H 12 O 6\\n-1 3 C 6 H 12 O 6\\n-1 3 C 6 H 12 O 6\\n-1 3 C 6 H 12 O 6\\n-1 3 C 6 H 12 O 6\\n-1 3 C 6 H 12 O 6\\n-1 3 C 6 H 12 O 6\\n-1 3 C 6 H 12 O 6\\n-1 3 C 6 H 12 O 6\\n-1 3 C 6 H 12 O 6\\n-1 3 C 6 H 12 O 6\\n-1 3 C 6 H 12 O 6\\n-1 3 C 6 H 12 O 6\\n-1 3 C 6 H 12 O 6\\n-1 3 C 6 H 12 O 6\\n-1 3 C 6 H 12 O 6\\n-1 3 C 6 H 12 O 6\\n-1 3 C 6 H 1"
    },
    {
        "number": 3324,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 0\\n+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\") == [\"6 6 6 1\"]\nassert solution(\"+1 6 C 1 H 5 C 1 O 1 O 1 H 1\\n+1 2 H 2 O 1\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n\") == [\"6 6 6 1\"]\nassert solution(\"+1 6 C 1 H 5 C 1 O 1 O 1 H 1\\n+1 2 H 2 O 1\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n+1 2 H 2 O 1\\n-1 1 O 2\\n+1 2 H 2 O 1\\n\") == [\"6 6 6 1\"]\nassert solution(\"+1 6 C 1 H 5 C 1 O 1 O 1 H 1\\n+1 2 H 2 O 1\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n+1 2 H 2 O 1\\n-1 1 O 2\\n+1 2 H 2 O 1\\n-1 1 O 2\\n\") == [\"6 6 6 1\"]"
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '20.83\\n', 'Testcase 1 failed'"
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"20.83\\n\"\n"
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"20.83\\n\""
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '20.83'"
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin='4\\n30 50\\n20 0\\n100 0\\n100 40\\n20 40\\n') == '20.83'\n"
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, \"Test failed\"\n"
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n4\n30 50\n20 0\n100 0\n100 40\n20 40\n\"\"\") == \"20.83\"\n\nassert solution(\"\"\"\n5\n40 50\n20 0\n100 0\n100 40\n20 40\n\"\"\") == \"20.83\"\n\nassert solution(\"\"\"\n3\n100 50\n20 0\n100 0\n100 40\n20 40\n\"\"\") == \"20.83\"\n\nassert solution(\"\"\"\n4\n30 50\n20 0\n100 0\n100 40\n20 40\n\"\"\") == \"20.83\"\n\nassert solution(\"\"\"\n5\n40 50\n20 0\n100 0\n100 40\n20 40\n\"\"\") == \"20.83\"\n\nassert solution(\"\"\"\n3\n100 50\n20 0\n100 0\n100 40\n20 40\n\"\"\") == \"20.83\""
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n30 50\\n20 0\\n100 0\\n100 40\\n20 40\") == \"20.83\\n\", \"Test case 1 failed\"\n\nassert solution(\"4\\n30 50\\n20 0\\n100 0\\n100 40\\n20 40\\n\") == \"20.83\\n\", \"Test case 2 failed\"\n\nassert solution(\"4\\n30 50\\n20 0\\n100 0\\n100 40\\n20 40\\n\") == \"20.83\\n\", \"Test case 3 failed\"\n\nassert solution(\"4\\n30 50\\n20 0\\n100 0\\n100 40\\n20 40\\n\") == \"20.83\\n\", \"Test case 4 failed\"\n\nassert solution(\"4\\n30 50\\n20 0\\n100 0\\n100 40\\n20 40\\n\") == \"20.83\\n\", \"Test case 5 failed\""
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n30 50\\n20 0\\n100 0\\n100 40\\n20 40\\n') == '20.83'"
    },
    {
        "number": 3325,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n30 50\\n20 0\\n100 0\\n100 40\\n20 40\") == \"20.83\""
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n1 2 5\\n7 6 4\\n9 8 3\") == \"49\"\n"
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 3\\n1 2 5\\n7 6 4\\n9 8 3') == 49\nprint(\"All tests passed!\")"
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n1 2 5\\n7 6 4\\n9 8 3\") == \"49\"\nassert solution(\"3 4\\n1 2 3\") == \"0\"\nassert solution(\"2 2\\n3 4 1\") == \"1\"\nassert solution(\"5 3\\n1 2 3 4 5\") == \"2\""
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n1 2 5\\n7 6 4\\n9 8 3\") == \"49\"\nassert solution(\"4 3\\n1 2 3\\n4 3 4\\n7 6 5\\n8 9 6\") == \"26\"\nassert solution(\"3 3\\n1 2 3\\n4 3 4\\n7 6 5\\n8 9 6\\n10 11 12\") == \"38\""
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n1 2 5\\n7 6 4\\n9 8 3\") == \"49\""
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_data) == output_data, f\"Incorrect output for the given test case. Expected {output_data}, but got {solution(input_data)}.\""
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"49\""
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == '49'\n"
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '49\\n', \"Test Failed\""
    },
    {
        "number": 3326,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n1 2 5\\n7 6 4\\n9 8 3\") == 49\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 15\\n##.........####\\n1\\nCROSSWORD\") == \"##CROSSWORD####\""
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 15\\n##.........####\\n1\\nCROSSWORD\") == \"##CROSSWORD####\""
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 15\\n##.........####\\n1\\nCROSSWORD\") == \"##CROSSWORD####\""
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 15\\n##.........####\\n1\\nCROSSWORD\") == \"##CROSSWORD####\"\n"
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n1 15\n##.........####\n1\nCROSSWORD\n\"\"\") == \"\"\"\n##CROSSWORD####\n"
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n    1 15\n    ##.........####\n    1\n        CROSSWORD\n        ''') == '''\n        CROSSWORD####\n        def solution(stdin: str) -> str:\n            pass\n        '''\n\nassert solution('''\n    1 15\n    ##.........####\n    1\n        CROSSWORD\n        ''') == '''\n        CROSSWORD####\n        def solution(stdin: str) -> str:\n            pass\n        '''\n\nassert solution('''\n    1 15\n    ##.........####\n    1\n        CROSSWORD\n        ''') == '''\n        CROSSWORD####\n        def solution(stdin: str) -> str:\n            pass\n        '''"
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 15\\n##.........####\\n1\\nCROSSWORD\\n\") == \"##CROSSWORD####\""
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '''\n##CROSSWORD####\n'''"
    },
    {
        "number": 3327,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '##CROSSWORD####'"
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"31\\n\"\nassert solution(stdin) == \"31\\n\"\nassert solution(stdin) == \"31\\n\"\nassert solution(stdin) == \"31\\n\"\nassert solution(stdin) == \"31\\n\""
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\\n2 7 6\\n9 5 1\\n4 3 8\") == 31"
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\\n2 7 6\\n9 5 1\\n4 3 8\\n\") == 31"
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1\\n2 7 6\\n9 5 1\\n4 3 8\") == 31"
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == \"31\""
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"31\""
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"31\\n\"\n"
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\"\n\nN, K = map(int, input().split())\ntable = []\nfor _ in range(N):\n    row = list(map(int, input().split()))\n    table.append(row)"
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"31\\n\""
    },
    {
        "number": 3328,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1\\n2 7 6\\n9 5 1\\n4 3 8\") == \"31\\n\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2\", \"Solution not implemented\""
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\\nBBW\") == \"2\"\nassert solution(\"4 3\\nBW\") == \"3\"\nassert solution(\"6 5\\nWW\") == \"4\""
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\\nBBW\") == \"2\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1\\nBBW\") == \"2\\n\"\nassert solution(\"4 2\\nBWBBW\") == \"6\\n\"\nassert solution(\"5 3\\nWBBBBBWW\") == \"10\\n\""
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2\\n\""
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == output, f\"Expected {output}, but got {solution(stdin)}\""
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1\\nBBW\") == \"2\\n\"\nassert solution(\"3 2\\nBW\") == \"1\\n\"\nassert solution(\"4 3\\nBWWWWWWW\") == \"1\\n\"\nassert solution(\"5 10\\nBWWWWWWWWW\") == \"1\\n\"\nassert solution(\"4 4\\nWW\") == \"0\\n\""
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1\\nBBW\") == 2, \"Incorrect output\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2\""
    },
    {
        "number": 3329,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2\""
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"0.556\"\nprint(solution)"
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    3 1\n    3 2 1\n    1 2 3\n    \"\"\"\n) == \"0.556\"\n\nassert solution(\n    \"\"\"\n    4 2\n    3 1 2\n    1 2 3 4 5\n    \"\"\"\n) == \"26.36\"\n\nassert solution(\n    \"\"\"\n    10 3\n    2 1 2 3\n    1 2 3 4 5 6 7 8 9 10\n    \"\"\"\n) == \"141.39\"\n\nassert solution(\n    \"\"\"\n    20 3\n    2 1 2 3\n    1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n    \"\"\"\n) == \"16565.48\""
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\\n3 2 1\\n1 2 3\") == \"0.556\\n\""
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '0.556'"
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 1\\n3 2 1\\n1 2 3') == 0.556"
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('sample_input.txt', 'r').read()) == '0.556'\n"
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 0.556, \"The output should be 0.556, but it is {}\".format(solution())"
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '0.556\\n'"
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1\\n3 2 1\\n1 2 3\") == \"0.556\"\nassert solution(\"4 5\\n2 3 4\\n1 5 1\") == \"1.703\""
    },
    {
        "number": 3330,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 0.556, \"Incorrect output.\""
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Test case {input()} failed. Expected: {output}, got: {solution(input())}\""
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1000, 4, 3, 2) == 3, \"The output is incorrect\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"3\\n\""
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 4 3 2\") == \"3\"\nassert solution(\"5 10 7 4\") == \"4\"\nassert solution(\"100 50 40 30\") == \"3\"\nassert solution(\"5 10 7 4 50 100 60 20\") == \"11\"\n"
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"3\\n\"\n"
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == '3\\n'  # The horse can be captured in 3 minutes."
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Your solution {solution(input())} does not match the expected output {expected_output}\""
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"3\\n\""
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3, 4, 3, 2) == 3\n"
    },
    {
        "number": 3331,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '3'"
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"13\""
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"13\", \"Output does not match expected output.\""
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, but got {solution(input())}.\""
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"13\", \"Test Case 1\""
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\") == \"13\"\n"
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\\n') == '13'\nassert solution('4\\n1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\\n2 4 7\\n') == '12'"
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\\n\") == \"13\"\n"
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '13', 'Incorrect output'"
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\") == 13"
    },
    {
        "number": 3332,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt').read()) == '13'\n"
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\\n\") == \"3.141593\\n\""
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\\n\") == \"3.141593\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 3.141593, \"Your code is not correct.\"\nprint(\"Test passed successfully!\")"
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\\n\") == 3.141593\nassert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\\n2\\n13.141593 20.123456\\n3\\n13.141593 20.123456\\n4\\n13.141593 20.123456\\n5\\n13.141593 20.123456\\n6\\n13.141593 20.123456\\n7\\n13.141593 20.123456\\n8\\n13.141593 20.123456\\n9\\n13.141593 20.123456\\n10\\n13.141593 20.123456\\n11\\n13.141593 20.123456\\n12\\n13.141593 20.123456\\n13\\n13.141593 20.123456\\n14\\n13.141593 20.123456\\n15\\n13.141593 20.123456\\n16\\n13.141593 20.123456\\n17\\n13.141593 20.123456\\n18\\n13.141593 20.123456\\n19\\n13.141593 20.123456\\n20\\n13.141593 20.123456\\n21\\n13.141593 20.123456\\n22\\n13.141593 20.123456\\n23\\n13.141593 20.123456\\n24\\n13.141593 20.123456\\n25\\n13.141593 20.123456\\n26\\n13.141593 20.123456\\n27\\n13.141593 20.123456\\n28\\n13.141593 20.123456\\n29\\n13.141593 20.123456\\n30\\n13.141593 20.123456\\n31\\n13.141593 20.123456\\n32\\n13.141593 20.123456\\n33\\n13.141593 20.123456\\n34\\n13.141593 20.123456\\n35\\n13.141593 20.123456\\n36\\n13.141593 20.123456\\n37\\n13.141593 20.123456\\n38\\n13.141593 20.123456\\n3"
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\") == 3.141593\nassert solution(\"10.000000 20.123456\\n2\\n13.141593 20.123456\") == 3.141593\nassert solution(\"10.000000 20.123456\\n3\\n13.141593 20.123456\") == 3.141593\nassert solution(\"10.000000 20.123456\\n4\\n13.141593 20.123456\") == 3.141593\nassert solution(\"10.000000 20.123456\\n5\\n13.141593 20.123456\") == 3.141593\nassert solution(\"10.000000 20.123456\\n6\\n13.141593 20.123456\") == 3.141593\nassert solution(\"10.000000 20.123456\\n7\\n13.141593 20.123456\") == 3.141593\nassert solution(\"10.000000 20.123456\\n8\\n13.141593 20.123456\") == 3.141593\nassert solution(\"10.000000 20.123456\\n9\\n13.141593 20.123456\") == 3.141593\nassert solution(\"10.000000 20.123456\\n10\\n13.141593 20.123456\") == 3.141593\nassert solution(\"10.000000 20.123456\\n11\\n13.141593 20.123456\") == 3.141593\nassert solution(\"10.000000 20.123456\\n12\\n13.141593 20.123456\") == 3.141593\nassert solution(\"10.000000 20.123456\\n13\\n13.141593 20.123456\") == 3.141593\nassert solution(\"10.000000 20.123456\\n14\\n13.141593 20.123456\") == 3.141593\nassert solution(\"10.000000 20.123456\\n15\\n13.141593 20.123456\") == 3.141593\nassert solution(\"10.000000 20.123456\\n16\\n13.141593 20.123456\") == 3.141593\nassert solution(\"10.000000 20.123456\\n17\\n13.141593 20.123456\") == 3.141593\nassert solution(\"10.000000 20.123456\\n18\\n13.1"
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\") == \"3.141593\", \"Incorrect output.\""
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Test failed: Expected '{output}', got '{solution(input())}'\""
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\") == \"3.141593\"\nassert solution(\"1.000000 1.000000 1.000000\") == \"0.0\"\nassert solution(\"20.000000 20.000000\") == \"0.0\"\nassert solution(\"1.111111 1.111111\") == \"0.0\"\nassert solution(\"1.000000 0.000000\") == \"0.0\"\nassert solution(\"1.000000 0.000000 0.000000\") == \"0.0\"\nassert solution(\"0.000000 1.000000 1.000000 1.000000\") == \"1.414213\"\nassert solution(\"0.000000 0.000000 0.000000 0.000000 0.000000\") == \"0.0\"\nassert solution(\"0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000\") == \"1.414213\""
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\") == 3.141593\nassert solution(\"10.000000 20.123456\\n2\\n13.141593 20.123456\") == 3.141593\nassert solution(\"10.000000 20.123456\\n1\\n10.000000 20.123456\") == 1.0\nassert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\\n2\\n13.141593 20.123456\") == 3.141593"
    },
    {
        "number": 3333,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\\n\") == \"3.141593\\n\", \"The correct answer is: 3.141593\""
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n2\\n\") == \"2.13333333333333\\n\"\nassert solution(\"10 10\\n10\\n1\\n2\\n3\\n4\\n5\\n\") == \"impossible\\n\"\nassert solution(\"5\\n2\\n3\\n4\\n5\\n\") == \"2.5\\n\"\nassert solution(\"10 10\\n10\\n1\\n2\\n3\\n4\\n5\\n\") == \"impossible\\n\"\nassert solution(\"6 6\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n1000000\\n\") == \"impossible\\n\""
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2.13333333333333\\n\", \"Test 1 failed\"\nassert solution() == \"impossible\\n\", \"Test 2 failed\"\nassert solution() == \"3.0\\n\", \"Test 3 failed\""
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2.13333333333333\\n\", \"Please fix the function's implementation.\""
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(None) == \"impossible\"\n\nfrom typing import List\nimport heapq"
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n4 4\\n2\\n') == '2.13333333333333'\nassert solution('3\\n4 4\\n5\\n') == 'impossible'\nassert solution('1\\n1 1\\n1\\n') == 'impossible'\nassert solution('5\\n1 1\\n1 1\\n1 1\\n') == 'impossible'\nassert solution('5\\n1 1\\n1 1\\n1 1\\n1 1\\n') == '2.0'\n"
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '2.13333333333333', \"Expected output: '2.13333333333333', got: '{}'.\".format(solution())\nprint(\"Correct!\")"
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n3\n4 4\n2\n''') == '2.13333333333333'\nassert solution('''\n4\n2 2\n2\n''') == 'impossible'\nassert solution('''\n3\n4 5\n1\n3\n4\n4\n3\n''') == '2.5'"
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n4 4\\n2\\n\") == \"2.13333333333333\\n\"\nassert solution(\"4\\n4 4\\n2\\n\") == \"2.13333333333333\\n\"\nassert solution(\"5\\n4 4 4\\n2\\n\") == \"impossible\\n\"\nassert solution(\"10\\n4 4\\n2\\n\") == \"impossible\\n\""
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 4\\n2\\n') == '2.13333333333333\\n'\nassert solution('4 4\\n2\\n1') == 'impossible\\n'\nassert solution('3\\n2\\n3') == '2.13333333333333\\n'\nassert solution('3\\n2\\n1') == 'impossible\\n'"
    },
    {
        "number": 3334,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n2\\n\") == \"2.13333333333333\\n\"\nassert solution(\"3 3\\n1\\n\") == \"impossible\\n\"\nassert solution(\"4 5\\n1\\n2\\n3\\n\") == \"impossible\\n\"\nassert solution(\"4 3\\n1\\n2\\n3\\n4\\n5\\n\") == \"impossible\\n\"\nassert solution(\"4 4\\n2\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\") == \"impossible\\n\"\nassert solution(\"4 2\\n1\\n2\\n3\\n4\\n\") == \"1\\n\"\nassert solution(\"4 3\\n1\\n2\\n3\\n\") == \"2\\n\"\nassert solution(\"3 4\\n1\\n2\\n3\\n\") == \"3\\n\"\nassert solution(\"3 4\\n1\\n2\\n3\\n\") == \"3\\n\"\nassert solution(\"5 5\\n1\\n2\\n3\\n4\\n\") == \"2.5\\n\"\nassert solution(\"5 5\\n1\\n2\\n3\\n4\\n\") == \"2.5\\n\"\nassert solution(\"4 5\\n1\\n2\\n3\\n\") == \"2.0\\n\"\nassert solution(\"4 5\\n1\\n2\\n3\\n\") == \"2.0\\n\"\nassert solution(\"4 5\\n1\\n2\\n3\\n\") == \"2.0\\n\"\nassert solution(\"4 5\\n1\\n2\\n3\\n\") == \"2.0\\n\"\nassert solution(\"4 5\\n1\\n2\\n3\\n\") == \"2.0\\n\"\nassert solution(\"4 5\\n1\\n2\\n3\\n\") == \"2.0\\n\"\nassert solution(\"4 5\\n1\\n2\\n3\\n\") == \"2.0\\n\"\nassert solution(\"4 5\\n1\\n2\\n3\\n\") == \"2.0\\n\"\nassert solution(\"4 5\\n1\\n2\\n3\\n\") == \"2.0\\n\"\nassert solution(\"4 5\\n1\\n2\\n3\\n\") == \"2.0\\n\"\nassert solution(\"4 5\\n1\\n2\\n3\\n\") == \"2.0\\n\"\nassert solution(\"4 5\\n1\\n2\\n3\\n\") == \"2.0\\n\"\nassert solution(\"4 5\\n1\\n2\\n3\\n\") == \"2.0\\n\"\nassert solution(\"4 5\\n1\\n2\\n3\\n\") == \"2.0\\n\"\nassert solution(\"4 5\\n1\\n2\\n3\\n\") == \"2.0\\n\"\nassert solution(\"4 5\\n1\\n2\\n3\\n\") == \"2.0\\n\"\nassert solution(\"4 5\\n1\\n2\\n3\\n\") == \"2.0\\n\"\nassert solution(\"4 5\\n1\\n2\\n3\\n\") == \"2.0\\n\"\nassert solution(\"4 5\\n1\\n2\\n3\\n\") == \"2.0\\n\"\nassert solution(\"4 5\\n1\\n2\\n3\\n\") == \"2.0\\n\"\nassert solution(\"4 5\\n1\\n2\\n3\\n\") == \"2.0\\n\"\nassert solution(\"4 5\\n1\\n2\\n3\\n\") == \"2.0\\n\"\nassert solution(\"4 5\\n1\\n2\\n3\\n\") == \"2.0\\n\"\nassert solution(\"4 5\\n1\\n2\\n3\\n\") == \"2.0\\n\"\nassert solution(\"4 5\\n1\\n2\\n3\\n\") == \"2.0\\n\"\nassert solution(\"4 5\\n1\\n2\\n3\\n\") == \"2.0\\n"
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(None) == \"The solution is incorrect.\"\n"
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(7) == \"18\"\nassert solution(10) == \"34\"\nassert solution(13) == \"37\"\nassert solution(25) == \"115\"\nassert solution(30) == \"121\""
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(7) == \"18\""
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(7) == \"18\"\n"
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(7) == \"18\""
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7\") == \"18\""
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(7) == \"18\""
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\\n\") == \"18\\n\""
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"7\") == \"18\"\nassert solution(stdin=\"13\") == \"3\""
    },
    {
        "number": 3335,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(7) == \"18\""
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n4\n35 M classicism programming\n0 M baroque skiing\n43 M baroque chess\n30 F baroque soccer\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n5\n17 M classicism programming\n20 M baroque skiing\n23 M baroque chess\n26 F baroque soccer\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n6\n48 M classicism programming\n30 M baroque skiing\n35 M baroque chess\n40 F baroque soccer\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n7\n28 M classicism programming\n19 M baroque skiing\n25 M baroque chess\n30 F baroque soccer\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n8\n15 M classicism programming\n14 M baroque skiing\n22 M baroque chess\n30 F baroque soccer\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n9\n15 M classicism programming\n14 M baroque skiing\n22 M baroque chess\n30 F baroque soccer\n\"\"\") == \"2\""
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '3'"
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"3\\n\"\n"
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3\nassert solution() == 3"
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_data) == expected_output, f\"Your solution is incorrect. Expected output: {expected_output}, but got {solution(input_data)}\""
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '3'\nassert solution(input()) == '5'"
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer') == '3\\n'\n"
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_str) == expected_output, f\"Expected output: {expected_output}, Received: {solution(input_str)}\""
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\") == \"3\"\nassert solution(\"5\\n55 M classicism programming\\n33 M baroque skiing\\n37 M baroque chess\\n45 F baroque soccer\") == \"5\"\nassert solution(\"6\\n55 M classicism programming\\n33 M baroque skiing\\n37 M baroque chess\\n45 F baroque soccer\") == \"6\"\nassert solution(\"7\\n55 M classicism programming\\n33 M baroque skiing\\n37 M baroque chess\\n45 F baroque soccer\") == \"7\"\nassert solution(\"8\\n55 M classicism programming\\n33 M baroque skiing\\n37 M baroque chess\\n45 F baroque soccer\") == \"8\"\nassert solution(\"9\\n55 M classicism programming\\n33 M baroque skiing\\n37 M baroque chess\\n45 F baroque soccer\") == \"9\"\nassert solution(\"10\\n55 M classicism programming\\n33 M baroque skiing\\n37 M baroque chess\\n45 F baroque soccer\") == \"10\""
    },
    {
        "number": 3336,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"4\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\\n\") == \"3\\ndef solution(stdin: str) -> str:\\npass\""
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\\n\") == \"2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\""
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\") == \"2\\n1\\n2\\ndef solution(stdin: str) -> str:\\npass\\n\""
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4') == '2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(5) == '2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n\nsolution(5)"
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"a 0\\na 1\\nb 2\\nc 2 3\\nb 4\") == \"2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"\n"
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\") == '2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'"
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\\n\") == \"2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(read_input()) == \"2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\") == \"2\\n1\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3337,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(5) == '2\\n1'\nassert solution(10) == '2\\n1\\n2\\n1'\nassert solution(15) == '2\\n1\\n2\\n1\\n2\\n1'\nassert solution(20) == '2\\n1\\n2\\n1\\n2\\n1\\n2\\n1'\nassert solution(25) == '2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1'\n\nfrom typing import List"
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6 1\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0') == '5'\nassert solution('10 1\\n80 70 80 90\\n90 70 80 90\\n80 70 90 90\\n90 70 80 90\\n80 70 90 90\\n90 70 80 90') == '1'"
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('6 1\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0') == '5\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 1\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0\\n\") == \"5\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6 1\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0') == '5\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == expected, f\"Your solution is incorrect. Please check the input and output.\"\n"
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n6 1\n78 61 88 71\n80 80 90 90\n70 90 80 100\n90 70 0 0\n80 67 0 0\n90 63 0 0\n''') == '5\\n'"
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 1\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0\") == \"5\\ndef solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 5, \"Expected solution to be 5, but got {}\".format(solution)"
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\nassert solution() == '5\\n'\n"
    },
    {
        "number": 3338,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 1\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0\") == \"5\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n4 5\n1 2\n1 3\n1 4\n2 3\n2 4\n''') == '4\\n'\n\nassert solution('''\n5 7\n1 2\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n1 12\n1 13\n1 14\n1 15\n1 16\n1 17\n1 18\n1 19\n1 20\n1 21\n1 22\n1 23\n1 24\n1 25\n1 26\n1 27\n1 28\n1 29\n1 30\n1 31\n1 32\n1 33\n1 34\n1 35\n1 36\n1 37\n1 38\n1 39\n1 40\n1 41\n1 42\n1 43\n1 44\n1 45\n1 46\n1 47\n1 48\n1 49\n1 50\n1 51\n1 52\n1 53\n1 54\n1 55\n1 56\n1 57\n1 58\n1 59\n1 60\n1 61\n1 62\n1 63\n1 64\n1 65\n1 66\n1 67\n1 68\n1 69\n1 70\n1 71\n1 72\n1 73\n1 74\n1 75\n1 76\n1 77\n1 78\n1 79\n1 80\n1 81\n1 82\n1 83\n1 84\n1 85\n1 86\n1 87\n1 88\n1 89\n1 90\n1 91\n1 92\n1 93\n1 94\n1 95\n1 96\n1 97\n1 98\n1 99\n1 100\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n2 10\n2 11\n2 12\n2 13\n2 14\n2 15\n2 16\n2 17\n2 18\n2 19\n2 20\n2 21\n2 22\n2 23\n2 24\n2 25\n2 26\n2 27\n2 28\n2 29\n2 30\n2 31\n2 32\n2 33\n2 34\n2 35\n2 36\n2 37\n2 38\n2 39\n2 40\n2 41\n2 42\n2 43\n2 44\n2 45\n2 46\n2 47\n2 48\n2 49\n2 50\n2 51\n2 52\n2 53\n2 54\n2 55\n2 56\n2 57\n2 58\n2 59\n2 60\n2 61\n2 62\n2 63\n2 64\n2 65\n2 66\n2 67\n2 68\n2 69\n2 70\n2 71\n2 72\n2 73\n2 74\n2 75\n2 76\n2 77\n2 78\n2 79\n2 80\n2 81\n2 82\n2 83\n2 84\n2 85\n2 86\n2 87\n2 88\n2 89\n2 90\n2 91\n2 92\n2 93\n2 94\n2 95\n2 96\n2 97\n2 98\n2 99\n2 100\n3 4\n3 5\n3 6\n"
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n\") == \"4\\n\""
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"4\\n\""
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"4\\n\", solution(stdin)\nprint(\"All intersections are even\")"
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('evenland.in', 'r')) == 4\nprint(\"All tests pass\")"
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n4 5\n1 2\n1 3\n1 4\n2 3\n2 4\n''') == '4\\n'\n"
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_data) == expected_output, f\"Test case {test_case} failed.\"\nfor test_case in range(1, 10):\n    assert solution(input_data) == expected_output, f\"Test case {test_case} failed.\"\n"
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '4\\n', \"Test 1 failed\"\nassert solution(stdin) == '1073741824\\n', \"Test 2 failed\""
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 4\n"
    },
    {
        "number": 3339,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\""
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n4\n1 2\n2 3\n3 4\n\"\"\") == \"\"\"\n2\n3 4\n2 4\n\"\"\"\n\nassert solution(\"\"\"\n4\n1 1\n2 2\n3 3\n4 4\n\"\"\") == \"\"\"\n2\n3 3\n4 3\n\"\"\"\n\nassert solution(\"\"\"\n4\n1 1\n2 2\n3 3\n4 4\n\"\"\") == \"\"\"\n2\n3 3\n4 3\n\"\"\"\n\nassert solution(\"\"\"\n4\n1 1\n2 2\n3 3\n4 4\n\"\"\") == \"\"\"\n2\n3 3\n4 3\n\"\"\"\n\nassert solution(\"\"\"\n4\n1 2\n2 3\n3 4\n\"\"\") == \"\"\"\n2\n3 4\n2 4\n\"\"\""
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n1\\n2\\n2\\n3\\n3\\n4\\n4') == '2\\n3 4\\n2 4'"
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\\n3 4\\n2 4\""
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\\n3 4\\n2 4\"\nassert solution(\"5\\n1 2\\n2 3\\n3 4\\n5 6\") == \"2\\n3 4\\n2 4\"\nassert solution(\"6\\n1 2\\n2 3\\n3 4\\n5 6\\n7 8\") == \"2\\n3 4\\n2 4\"\nassert solution(\"7\\n1 2\\n2 3\\n3 4\\n5 6\\n7 8\\n9 10\") == \"2\\n3 4\\n2 4\""
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), \"Test failed.\"\n"
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n1 2\\n2 3\\n3 4') == '2\\n3 4\\n2 4'\nassert solution('5\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100\\n100 101\\n101 102\\n102 103\\n103 104\\n104 105\\n105 106\\n106 107\\n107 108\\n108 109\\n109 110\\n110 111\\n111 112\\n112 113\\n113 114\\n114 115\\n115 116\\n116 117\\n117 118\\n118 119\\n119 120\\n120 121\\n121 122\\n122 123\\n123 124\\n124 125\\n125 126\\n126 127\\n127 128\\n128 129\\n129 130\\n130 131\\n131 132\\n132 133\\n133 134\\n13"
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\\n3 4\"\nassert solution(\"4\\n1 2\\n2 3\\n3 4\\n5 6\\n7 8\") == \"2\\n3 4\\n2 4\\n\""
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\\n3 4\\n2 4\""
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2\\n2 3\\n3 4\\n\") == \"2\\n3 4\\n2 4\""
    },
    {
        "number": 3340,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n4\n1 2\n2 3\n3 4\n''') == '''2\n3 4\n2 4\n'''\n\nassert solution('''\n4\n1 2\n3 4\n2 3\n''') == '''3\n4\n2\n'''\n\nassert solution('''\n4\n1 2\n1 3\n3 4\n2 3\n''') == '''2\n4\n2\n'''"
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n1 3\\n2 1\\n3 5\\n7 2\") == \"5\""
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"2 2\n1 3\n2 1\n3 5\n7 2\n    \"\"\"\n) == \"5\\n\"\nassert solution(\n    \"\"\"2 2\n1 3\n2 1\n3 5\n7 2\"\"\"\n) == \"5\\n\"\nassert solution(\n    \"\"\"2 2\n1 3\n2 1\n3 5\n7 2\n\"\"\"\n) == \"5\\n\"\nassert solution(\n    \"\"\"2 2\n1 3\n2 1\n3 5\n7 2\n\"\"\"\n) == \"0\\n\"\nassert solution(\n    \"\"\"2 2\n1 3\n2 1\n3 5\n7 2\n2 3\n3 1\n1 5\n5 2\n    \"\"\"\n) == \"5\\n\"\nassert solution(\n    \"\"\"2 2\n1 3\n2 1\n3 5\n7 2\n2 3\n3 1\n1 5\n5 2\"\"\"\n) == \"5\\n\"\nassert solution(\n    \"\"\"2 2\n1 3\n2 1\n3 5\n7 2\n2 3\n3 1\n1 5\n5 2\"\"\"\n) == \"0\\n\"\n"
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 3\\n2 1\\n3 5\\n7 2\") == \"5\"\nprint(\"All test cases pass\")"
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\n1 3\\n2 1\\n3 5\\n7 2\") == 5\n"
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 2\\n1 3\\n2 1\\n3 5\\n7 2') == 5"
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    2 2\n    1 3\n    2 1\n    3 5\n    7 2\n    \"\"\"\n) == \"5\\n\""
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"5\\n\""
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=input()) == \"5\"\n"
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    2 2\n    1 3\n    2 1\n    3 5\n    7 2\n    \"\"\"\n) == \"5\\n\"\n"
    },
    {
        "number": 3341,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n1 3\\n2 1\\n3 5\\n7 2\") == 5\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2, \"The output should be 2.\""
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n        3 5 3\n        1 1\n        2 2\n        1 3\n        0 0\n        0 3\n        1 4\n        3 3\n        3 0''') == '2'"
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Test failed for the following input:\\n{input()}\\nExpected output: {output}\\nGot: {solution(input())}\""
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2\n"
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2\nassert solution(\"1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 1\nassert solution(\"1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 0\\n3 3\") == 1\nassert solution(\"1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 0\\n3 3\\n3 0\") == 1\nassert solution(\"1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 0\\n3 3\\n3 0\\n3 3\") == 2"
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n\") == 2, \"Test 1 Failed\"\nassert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n\") == 3, \"Test 2 Failed\"\nassert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n\") == 2, \"Test 3 Failed\""
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n\") == \"2\"\nassert solution(stdin=\"3 5 3\\n2 2\\n1 1\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n\") == \"1\""
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3342,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == \"2\"\n\nsolution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\")"
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 3\\n3 C\\n2 C\\n1 C') == 'SAFE'\nassert solution('4 3\\n3 W\\n2 C\\n1 W') == 'GHOST'"
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 3\\n3 C\\n2 C\\n1 C\\n') == 'GHOST'"
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n3 C\\n2 C\\n1 C\") == \"GHOST\", \"The expected output is GHOST, but got: \" + solution(\"4 3\\n3 C\\n2 C\\n1 C\")"
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3\\n3 C\\n2 C\\n1 C\") == \"GHOST\\nSAFE\"\n"
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n3 C\\n2 C\\n1 C\") == \"GHOST\"\nassert solution(\"4 3\\n3 W\\n2 W\\n1 W\") == \"SAFE\"\nassert solution(\"4 3\\n3 C\\n2 W\\n1 C\") == \"SAFE\"\nassert solution(\"4 3\\n3 W\\n2 C\\n1 W\") == \"SAFE\"\nassert solution(\"4 3\\n3 W\\n2 W\\n1 C\") == \"SAFE\"\n"
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n3 C\\n2 C\\n1 C\") == \"GHOST\"\nassert solution(\"4 3\\n1 C\\n2 W\\n3 C\") == \"SAFE\"\n"
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n3 C\\n2 C\\n1 C\") == \"GHOST\"\nassert solution(\"5 3\\n3 C\\n2 W\\n1 W\") == \"SAFE\"\nassert solution(\"6 3\\n3 C\\n2 W\\n1 C\") == \"SAFE\"\nassert solution(\"7 3\\n3 C\\n2 W\\n1 W\") == \"SAFE\"\nassert solution(\"8 3\\n3 C\\n2 W\\n1 W\") == \"SAFE\"\nassert solution(\"9 3\\n3 C\\n2 W\\n1 W\") == \"SAFE\""
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n3 C\\n2 C\\n1 C\") == \"GHOST\"\nassert solution(\"4 3\\n3 W\\n2 W\\n1 W\") == \"SAFE\""
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 3\\n3 C\\n2 C\\n1 C') == 'GHOST'\nassert solution('4 3\\n3 W\\n2 C\\n1 W') == 'SAFE'\nassert solution('4 3\\n3 W\\n2 W\\n1 C') == 'SAFE'\nassert solution('4 3\\n3 W\\n2 C\\n1 C') == 'SAFE'\nassert solution('4 3\\n3 C\\n2 C\\n1 C') == 'SAFE'"
    },
    {
        "number": 3343,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Test case {test_case} failed. Expected output: {expected_output}, Actual output: {solution(input())}\""
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"2 3\\n\"\n    \"0.00 2.00\"\n) == \"2\\n\""
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r').read()) == '2'"
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt')) == '2'"
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"2 3\n0.00 2.00\"\"\") == \"2\""
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2 3\\n0.00 2.00') == '2'\nassert solution('5 3\\n0.00 2.00\\n0.00 4.00\\n0.00 6.00\\n0.00 8.00') == '2.0'\nassert solution('5 3\\n0.00 2.00\\n0.00 4.00\\n0.00 6.00\\n0.00 8.00\\n0.00 10.00\\n0.00 12.00\\n0.00 14.00') == '2.0'\nassert solution('2 3\\n0.00 2.00\\n0.00 4.00\\n0.00 6.00\\n0.00 8.00\\n0.00 10.00\\n0.00 12.00\\n0.00 14.00\\n0.00 16.00\\n0.00 18.00\\n0.00 20.00\\n0.00 22.00\\n0.00 24.00\\n0.00 26.00\\n0.00 28.00\\n0.00 30.00\\n0.00 32.00\\n0.00 34.00\\n0.00 36.00\\n0.00 38.00\\n0.00 40.00\\n0.00 42.00\\n0.00 44.00\\n0.00 46.00\\n0.00 48.00\\n0.00 50.00\\n0.00 52.00\\n0.00 54.00\\n0.00 56.00\\n0.00 58.00\\n0.00 60.00\\n0.00 62.00\\n0.00 64.00\\n0.00 66.00\\n0.00 68.00\\n0.00 70.00\\n0.00 72.00\\n0.00 74.00\\n0.00 76.00\\n0.00 78.00\\n0.00 80.00\\n0.00 82.00\\n0.00 84.00\\n0.00 86.00\\n0.00 88.00\\n0.00 90.00\\n0.00 92.00\\n0.00 94.00\\n0.00 96.00\\n0.00 98.00\\n0.00 100.00\\n0.00 102.00\\n0.00 104.00\\n0.00 106.00\\n0.00 108.00\\n0.00 110.00\\n0.00 112.00\\n0.00 114.00\\n0.00 116.00\\n0.00 118.00\\n0.00 120.00\\n0.00 122.00\\n0.00 124.00\\n0.00 126.00\\n0.00 128.00\\n0.00 130.00\\n0.00 132.00\\n0.00 134.00\\n0.00 136.00\\n0.00 138.00\\"
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('example.in', 'r')) == '2\\n'"
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n0.00 2.00\") == \"2\\n\""
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n0.00 2.00\") == \"2\\n\"\nassert solution(\"3 4\\n0.00 1.00\\n0.00 2.00\") == \"no fika\\n\"\nassert solution(\"2 1\\n0.00 2.00\") == \"no fika\\n\"\nassert solution(\"3 3\\n0.00 1.00\\n0.00 2.00\") == \"2\\n\"\n"
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2\"\n"
    },
    {
        "number": 3344,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n0.00 2.00\") == \"2\"\n"
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '10\\n'\n"
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\""
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\""
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n0 0\\n10 0\\n2\\n30 0\\n15 0') == '10'\n"
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == sample_output, f\"Sample Input: {sample_input}, Sample Output: {sample_output}\""
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n0 0\\n10 0\\n2\\n30 0\\n15 0') == '10\\n'"
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\npass\\n\"\n"
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"10\", \"Your solution is incorrect\""
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\nassert solution(\"0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\nassert solution(\"0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\nassert solution(\"0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\nassert solution(\"0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\nassert solution(\"0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\nassert solution(\"0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\nassert solution(\"0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\nassert solution(\"0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\nassert solution(\"0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\nassert solution(\"0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\nassert solution(\"0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\nassert solution(\"0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\nassert solution(\"0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\nassert solution(\"0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\nassert solution(\"0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\nassert solution(\"0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\nassert solution(\"0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\nassert solution(\"0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\nassert solution(\"0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\nassert solution(\"0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\nassert solution(\"0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\nassert solution(\"0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\nassert solution(\"0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\nassert solution(\"0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\nassert solution(\"0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\nassert solution(\"0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\nassert solution(\"0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\nassert solution(\"0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\nassert solution(\"0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\nassert solution(\"0 0"
    },
    {
        "number": 3345,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\n"
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"0\\n\"\n"
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Per is repairing roads. The job is concentrated on roads with one lane in each direction. Thus, when Per closes down the lane in one direction, all traffic has to go through the other lane. This is done by allowing only one direction of travel at any time. Per is often assigned the task of directing the traffic through this lane. No car drives before being given a \\\"go\\\" signal from Per, and all the cars drive through the maintained segment at the same speed. Because there is only one lane, cars in one direction must leave the segment before cars in the other direction can enter. For safety reasons, cars driving in the same direction have to keep a distance of at least 3 seconds between each other. Per has been logging how long they can bear to wait before they get irritated. One day, to be able to evaluate his work, Per noted down when the cars arrived at the two endpoints of the segment. The least possible number of drivers that can be irritated?\") == \"0\"\n\nassert solution(\"Sample Input:\\n8 3\\nW 10 0\\nW 10 3\\nE 17 4\\nSample Output:\\n0\\n\") == \"0\""
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('8 3\\nW 10 0\\nW 10 3\\nE 17 4') == '0\\n'\n"
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 4\\n\") == \"0\\n\"\nassert solution(\"4 3\\nW 10 0\\nW 10 3\\nE 17 4\\n\") == \"0\\n\"\nassert solution(\"5 3\\nW 10 0\\nW 10 3\\nE 17 4\\n\") == \"3\\n\"\nassert solution(\"5 3\\nW 10 0\\nW 10 3\\nE 17 4\\n\") == \"0\\n\"\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 4\\n\") == \"0\\n\"\nassert solution(\"4 3\\nW 10 0\\nW 10 3\\nE 17 4\\n\") == \"0\\n\"\nassert solution(\"5 3\\nW 10 0\\nW 10 3\\nE 17 4\\n\") == \"0\\n\"\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 4\\n\") == \"0\\n\"\nassert solution(\"4 3\\nW 10 0\\nW 10 3\\nE 17 4\\n\") == \"0\\n\"\nassert solution(\"5 3\\nW 10 0\\nW 10 3\\nE 17 4\\n\") == \"0\\n\"\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 4\\n\") == \"0\\n\"\nassert solution(\"4 3\\nW 10 0\\nW 10 3\\nE 17 4\\n\") == \"0\\n\"\nassert solution(\"5 3\\nW 10 0\\nW 10 3\\nE 17 4\\n\") == \"0\\n\"\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 4\\n\") == \"0\\n\"\nassert solution(\"4 3\\nW 10 0\\nW 10 3\\nE 17 4\\n\") == \"0\\n\"\nassert solution(\"5 3\\nW 10 0\\nW 10 3\\nE 17 4\\n\") == \"0\\n\"\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 4\\n\") == \"0\\n\"\nassert solution(\"4 3\\nW 10 0\\nW 10 3\\nE 17 4\\n\") == \"0\\n\"\nassert solution(\"5 3\\nW 10 0\\nW 10 3\\nE 17 4\\n\") == \"0\\n\"\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 4\\n\") == \"0\\n\"\nassert solution(\"4 3\\nW 10 0\\nW 10 3\\nE 17 4\\n\") == \"0\\n\"\nassert solution(\"5 3\\nW 10 0\\nW 10 3\\nE 17 4\\n\") == \"0\\n\"\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 4\\n\") == \"0\\n\"\nassert solution(\"4 3\\nW 10 0\\nW 10 3\\nE 17 4\\n\") == \"0\\n\"\nassert solution(\"5 3\\nW 10 0\\nW 10 3\\nE 17 4\\n\") == \"0\\n\"\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nE "
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == expected_output, f\"Test case {sample_input} failed. Expected output: {expected_output}, but got: {solution(sample_input)}\""
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"0\\n\"\nassert solution(input()) == \"0\\n\""
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 4\") == \"0\\n\"\nassert solution(\"8 3\\nW 10 0\\nW 10 10\\nE 17 4\") == \"0\\n\"\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 4\") == \"0\\n\"\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 1\") == \"1\\n\"\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 2\") == \"2\\n\"\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 3\") == \"3\\n\"\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 4\") == \"3\\n\"\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 5\") == \"3\\n\"\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 6\") == \"3\\n\"\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 7\") == \"3\\n\"\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 8\") == \"3\\n\"\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 9\") == \"3\\n\"\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 10\") == \"3\\n\"\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 11\") == \"3\\n\"\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 12\") == \"3\\n\"\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 13\") == \"3\\n\"\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 14\") == \"3\\n\"\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 15\") == \"3\\n\"\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 16\") == \"3\\n\"\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 17\") == \"3\\n\"\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 18\") == \"3\\n\"\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 19\") == \"3\\n\"\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 20\") == \"3\\n\"\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 21\") == \"3\\n\"\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 22\") == \"3\\n\"\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 23\") == \"3\\n\"\nassert solution(\"8 3\\nW 10 0\\nW 10 3\\"
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 3\\nW 10 0\\nW 10 3\\nE 17 4\") == \"0\\n\""
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '0\\n'\n"
    },
    {
        "number": 3346,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == \"0\"\n\nsample_input = \"\"\"\n8 3\nW 10 0\nW 10 3\nE 17 4\n\"\"\"\n\nsample_input = \"\"\"\n8 3\nW 10 0\nW 11 3\nE 17 4\n\"\"\"\n\nsample_input = \"\"\"\n8 3\nW 10 0\nW 11 3\nE 18 4\n\"\"\""
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\\n\", \"Expected: 3\\nActual: {}\\n\".format(solution(stdin))"
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 10\\n') == 3, \"The expected output is not correct\""
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 10\") == \"3\"\n"
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 10\") == \"3\"\nassert solution(\"5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 9\\n6 7\\n6 5\\n6 3\\n6 1\\n5 7\\n5 6\\n5 4\\n5 2\\n4 5\\n4 4\\n4 3\\n4 1\\n3 2\\n3 1\\n2 2\\n2 1\\n1 2\\n1 1\\n\") == \"3\"\nassert solution(\"5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 9\\n6 7\\n6 5\\n6 3\\n6 1\\n5 7\\n5 6\\n5 4\\n5 2\\n4 5\\n4 4\\n4 3\\n4 1\\n3 2\\n3 1\\n2 2\\n2 1\\n1 2\\n1 1\\n5 8\\n5 6\\n5 4\\n5 2\\n4 3\\n4 1\\n3 2\\n3 1\\n2 2\\n2 1\\n1 2\\n1 1\\n5 8\\n5 6\\n5 4\\n5 2\\n4 3\\n4 1\\n3 2\\n3 1\\n2 2\\n2 1\\n1 2\\n1 1\\n5 8\\n5 6\\n5 4\\n5 2\\n4 3\\n4 1\\n3 2\\n3 1\\n2 2\\n2 1\\n1 2\\n1 1\\n\") == \"4\"\nassert solution(\"5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 9\\n6 7\\n6 5\\n6 3\\n6 1\\n5 7\\n5 6\\n5 4\\n5 2\\n4 5\\n4 4\\n4 3\\n4 1\\n3 2\\n3 1\\n2 2\\n2 1\\n1 2\\n1 1\\n5 8\\n5 6\\n5 4\\n5 2\\n4 3\\n4 1\\n3 2\\n3 1\\n2 2\\n2 1\\n1 2\\n1 1\\n\") == \"5\"\nassert solution(\"5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 9\\n6 7\\n6 5\\n6 3\\n6 1\\n5 7\\n5 6\\n5 4\\n5 2\\n4 5\\n4 4\\n4 3\\n4 1\\n3 2\\n3 1\\n2 2\\n2 1\\n1 2\\n1 1\\n5 8\\n5 6\\n5 4\\n5 2\\n4 3\\n4 1\\n3 2\\n3 1\\n2 2\\n2 1\\n1 2\\n1 1\\n5 8\\n5 6\\n5 4\\n5 2\\n4 3\\n4 1\\n3 2\\n3 1\\n2 2\\n2 1\\n1 2\\n1 1\\n\") == \"5\"\nassert solution(\"5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 9\\n6 7\\n6 5\\n6 3\\n6 1\\n5 7\\n5 6\\n5 4\\n5 2\\n4 5\\n4 4\\n4 3\\n4 1\\n3 2\\n3 1\\n2 2\\n2 1\\n1 2\\n"
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"3\""
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 10\") == \"3\\n\", \"The output should be '3\\n'.\""
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"3\\n\""
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n5\n5 8\n5 6\n3 4\n5 13\n6 10\n''') == '3'"
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"3\"\n"
    },
    {
        "number": 3347,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"3\", \"Test failed\""
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"impossible\""
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\n10 3 3\") == \"impossible\"\nassert solution(\"4 4\\n7 3 3\") == \"ABCDEFGH\"\nassert solution(\"4 4\\n10 10 10\") == \"impossible\"\nassert solution(\"4 4\\n7 2 3\") == \"ABCDEFG\"\nassert solution(\"4 4\\n10 10 10\") == \"ABCBCABCBC\""
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"impossible\"\n"
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\n10 3 3\") == \"impossible\""
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\n10 3 3\") == \"impossible\""
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n10 3 3\") == \"impossible\\n\""
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == 'impossible'\nassert solution(input()) == 'def solution(stdin: str) -> str:\\n    pass\\n\\n'\n"
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 'impossible' # can't find a good arrangement\nprint(\"def solution(stdin: str) -> str:\")\nprint(\"    pass\")"
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\n10 3 3\") == \"impossible\"\nassert solution(\"1 2\\n3 4 5\") == \"1A2B3C\"\nassert solution(\"3 5\\n5 6 7\") == \"3A4B5C6D7E\"\nassert solution(\"4 3\\n2 4 5\") == \"4A5B6C7D8E9F\"\nassert solution(\"4 3\\n1 1 1\") == \"impossible\""
    },
    {
        "number": 3348,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n10 3 3\") == \"impossible\""
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"11\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution(\"10\\nEND\\nWHO\\nLEARNED\\nTO\\nMAKE\\nNO\\nFRIENDS\\nIQLUSION\\nEND\\nWHO\\nLEARNED\\nTO\\nMAKE\\nNO\\nFRIENDS\\nIQLUSION\\nEND\\nWHO\\nLEARNED\\nTO\\nMAKE\\nNO\\nFRIENDS\\nIQLUSION\\nEND\\nWHO\\nLEARNED\\nTO\\nMAKE\\nNO\\nFRIENDS\\nIQLUSION\\nEND\\nWHO\\nLEARNED\\nTO\\nMAKE\\nNO\\nFRIENDS\\nIQLUSION\\nEND\\nWHO\\nLEARNED\\nTO\\nMAKE\\nNO\\nFRIENDS\\nIQLUSION\\nEND\\nWHO\\nLEARNED\\nTO\\nMAKE\\nNO\\nFRIENDS\\nIQLUSION\\nEND\\nWHO\\nLEARNED\\nTO\\nMAKE\\nNO\\nFRIENDS\\nIQLUSION\\nEND\\nWHO\\nLEARNED\\nTO\\nMAKE\\nNO\\nFRIENDS\\nIQLUSION\\nEND\\nWHO\\nLEARNED\\nTO\\nMAKE\\nNO\\nFRIENDS\\nIQLUSION\\nEND\\nWHO\\nLEARNED\\nTO\\nMAKE\\nNO\\nFRIENDS\\nIQLUSION\\nEND\\nWHO\\nLEARNED\\nTO\\nMAKE\\nNO\\nFRIENDS\\nIQLUSION\\nEND\\nWHO\\nLEARNED\\nTO\\nMAKE\\nNO\\nFRIENDS\\nIQLUSION\\nEND\\nWHO\\nLEARNED\\nTO\\nMAKE\\nNO\\nFRIENDS\\nIQLUSION\\nEND\\nWHO\\nLEARNED\\nTO\\nMAKE\\nNO\\nFRIENDS\\nIQLUSION\\nEND\\nWHO\\nLEARNED\\nTO\\nMAKE\\nNO\\nFRIENDS\\nIQLUSION\\nEND\\nWHO\\nLEARNED\\nTO\\nMAKE\\nNO\\nFRIENDS\\nIQLUSION\\nEND\\nWHO\\nLEARNED\\nTO\\nMAKE\\nNO\\nFRIENDS\\nIQLUSION\\nEND\\nWHO\\nLEARNED\\nTO\\nMAKE\\nNO\\nFRIENDS\\nIQLUSION\\nEND\\nWHO\\nLEARNED\\nTO\\nMAKE\\nNO\\nFRIENDS\\nIQLUSION\\nEND\\nWHO\\nLEARNED\\nTO\\nMAKE\\nNO\\nFRIENDS\\nIQLUSION\\nEND\\nWHO\\nLEARNED\\nTO\\nMAKE\\nNO\\nFRIENDS\\nIQLUSION\\nEND\\nWHO\\nLEARNED\\nTO\\nMAKE\\nNO\\nFRIENDS\\nIQLUSION\\nEND\\nWHO\\nLEARNED\\nTO\\nMAKE\\nNO\\nFRIENDS\\nIQLUSION\\nEND\\nWHO\\nLEARNED\\nTO\\nMAKE\\nNO\\nFRIENDS\\nIQLUSION\\nEND\\nWHO\\nLEARNED\\nTO\\nMAKE\\nNO\\nFRIENDS\\nIQLUSION\\nEND\\nWHO\\nLEARNED\\nTO\\nMAKE\\nNO\\nFRIENDS\\nIQLUSION\\nEND\\nWHO\\nLEARNED\\nTO\\nMAKE\\nNO\\nFRIENDS\\nIQLUSION\\"
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"11\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"11\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\\n\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\""
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"11\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\""
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution(\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\") == \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\"\nassert solution(\"Hello, World! \u4f60\u597d\uff0c\u4e16\u754c\uff01\") == \"\u4f60\u597d\uff0c\u4e16\u754c\uff01\"\nassert solution(\"Hello, world! \u3053\u3093\u306b\u3061\u306f\u3001\u4e16\u754c\uff01\") == \"\u3053\u3093\u306b\u3061\u306f\u3001\u4e16\u754c\uff01\""
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n\"\"\"\n) == \"\"\"\nBETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\n\"\"\"\n\nassert solution(\n    \"\"\"\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n\"\"\"\n) == \"\"\"\nBETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\n\"\"\"\n\nassert solution(\n    \"\"\"\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n\"\"\"\n) == \"\"\"\nBETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\n\"\"\"\n\nassert solution(\n    \"\"\"\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n\"\"\"\n) == \"\"\"\nBETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\n\"\"\"\n\nassert solution(\n    \"\"\"\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n\"\"\"\n) == \"\"\"\nBETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\n\"\"\"\n\nassert solution(\n    \"\"\"\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n\"\"\"\n) == \"\"\"\nBETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\n\"\"\"\n\nassert solution(\n    \"\"\"\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n\"\"\"\n) == \"\"\"\nBETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\n\"\"\"\n\nassert solution(\n    \"\"\"\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n\"\"\"\n) == \"\"\"\nBETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\n\"\"\"\n\nassert solution(\n    \"\"\"\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n\"\"\"\n) == \"\"\"\nBETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\n\"\"\"\n\nassert solution(\n    \"\"\"\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n\"\"\"\n) == \"\"\"\nBETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\n\"\"\"\n\nassert solution(\n    \"\"\"\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n\"\"\"\n) == \"\"\"\nBETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF"
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('11\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'"
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_data) == expected_output, f\"Expected {expected_output}, but got {solution(input_data)}\""
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output"
    },
    {
        "number": 3349,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution([11, \"BETWEEN\", \"SUBTLE\", \"SHADING\", \"AND\", \"THE\", \"ABSENCE\", \"OF\", \"LIGHT\", \"LIES\", \"NUANCE\", \"IQLUSION\", \"BTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\"]) == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\""
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abrahellehhelleh\") == 12, \"Failed for input: abrahlehhelleh\""
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abrahellehhelleh\") == 12\nassert solution(\"rachelhellabracadabra\") == 0"
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abrahellehhelleh\") == 12\n"
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abrahellehhelleh\") == 12"
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abrahellehhelleh\") == 12, \"The power of abrahellehhelleh is incorrect.\""
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abrahellehhelleh\") == 12\nassert solution(\"rachelhellabracadabra\") == 0"
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('abrahellehhelleh') == 12"
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"abrahellehhelleh\") == \"12\""
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abrahellehhelleh\") == \"12\", \"The output is incorrect\""
    },
    {
        "number": 3350,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abrahellehhelleh\") == 12, \"Output should be 12\""
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"70\""
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected, f\"Got {solution(stdin)}, expected {expected}\"\n"
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"70\" # correct output\nassert solution(\"65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"70\" # correct output"
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"70\""
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1') == '70'\n"
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '70', 'Expected output: 70, but got: {}'.format(solution(stdin))\n"
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"70\"\n"
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=input()) == \"70\"\n"
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '70'"
    },
    {
        "number": 3351,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"65\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n70\") == \"70\\n\"\n"
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\") == \"10\\n7\\n8\\n7\"\n"
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n') == '10\\n7\\n8\\n7\\n'\n\nassert solution('10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n') == '10\\n7\\n8\\n7\\n'"
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"10 5\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9\n0 1\n0 4\n1 4\n0 1\n0 4\"\"\"\n) == \"10\\n7\\n8\\n7\\n\"\n\nassert solution(\n    \"\"\"10 5\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9\n0 1\n0 4\n1 4\n0 1\n0 4\"\"\"\n) == \"10\\n7\\n8\\n7\\n\""
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"10\\n7\\n8\\n7\"\n"
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\") == \"10\\n7\\n8\\n7\""
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n-----Input-----\\n10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n-----Output-----\\n10\\n7\\n8\\n7\\n') == '10\\n7\\n8\\n7\\n'"
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_str) == output_str, f\"Expected {output_str}, got {solution(input_str)}\"\n\ninput_str = '''\n10 5\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9\n0 1\n0 4\n1 4\n0 1\n0 4\n'''\n\noutput_str = '''\n10\n7\n8\n7\n'''\n\nsolution(input_str)"
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n\") == \"10\\n7\\n8\\n7\""
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"10\\n7\\n8\\n7\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3352,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n10 5\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9\n0 1\n0 4\n1 4\n0 1\n0 4\n''') == '10\\n7\\n8\\n7\\n'\n\nassert solution('''\n10 5\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9\n0 1\n0 4\n1 4\n0 1\n0 4\n''') == '10\\n7\\n8\\n7\\n'\n\nassert solution('''\n10 5\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9\n0 1\n0 4\n1 4\n0 1\n0 4\n''') == '10\\n7\\n8\\n7\\n'"
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\\n\") == \"6\\n\"\n"
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\\n\") == \"6\\n\"\nassert solution(\"2 5 6\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\\n\") == \"2\\n\"\nassert solution(\"4 3 2\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\\n\") == \"6\\n\"\nassert solution(\"2 3 2\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\\n\") == \"6\\n\"\nassert solution(\"2 4 5\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\\n\") == \"2\\n\"\nassert solution(\"4 3 2\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\\n\") == \"2\\n\""
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1') == '6\\n'\nassert solution('2 6 8\\n-1 1\\n0 -1\\n0 0\\n1 -1\\n1 1') == '4\\n'"
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_data) == output_data, f\"Test case failed for input: {input_data}\\nExpected output: {output_data}\\nActual output: {solution(input_data)}\""
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"6\\n\""
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '6'"
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1') == '6'"
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\") == \"6\\n\"\n\nimport math"
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}\\nGot: {solution(input())}\"\n\nclass Solution:\n    def cross_river(self, P: int, R: int, L: int, graph: List[List[int]]) -> int:\n        left_river = -1\n        right_river = R-1\n        visited = [False]*R\n        for _ in range(L):\n            log_index = 0\n            while log_index < L:\n                log_index += 1\n                if not graph[log_index-1][1] == right_river:\n                    left_river, right_river = right_river, left_river\n                    graph[log_index-1][1] = right_river\n                    graph[log_index-1][2] = left_river\n                if not visited[right_river]:\n                    visited[right_river] = True\n                    yield right_river\n                    right_river -= 1\n                if not visited[left_river]:\n                    visited[left_river] = True\n                    yield left_river\n                    left_river += 1\n        for i in range(P):\n            yield -1"
    },
    {
        "number": 3353,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\") == \"6\\n1\"\nassert solution(\"10 0 0\\n0 100 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n"
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3\\n\", \"Test case 1 failed.\""
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1 4 40\") == \"3\\n\", \"Please provide the correct input.\"\n\nfrom collections import deque"
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1 4 40\") == \"3\\n\", \"Your solution is incorrect. Please fix the given code.\""
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1 4 40\") == \"3\\n\"\n"
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_str) == expected_output, f\"The output of the given solution is incorrect. Expected {expected_output}, but got {solution(input_str)} instead.\"\nfor i in range(1, 11):\n    s = i\n    r = 1\n    n = 4\n    z = 40\n    assert solution(f\"{s:.6f} {r:.6f} {n} {z}\") == str(i), f\"The output of the given solution is incorrect. Expected '{str(i)}', but got {solution(f\"{s:.6f} {r:.6f} {n} {z}\")} instead.\""
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1 4 40\") == \"3\\n\""
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1 4 40\") == \"3\"\n"
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1 4 40\") == \"3\\n\""
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1 4 40\") == \"3\\n\"\n"
    },
    {
        "number": 3354,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 1 4 40') == 3\n"
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0') == '99\\n3\\n'"
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"99\\n3\\n\", \"Test Failed\""
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Expected output: {output}, Received: {solution(input())}\""
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"99\\n3\\n\"\nassert solution(input()) == \"99\\n3\\n\"\nassert solution(input()) == \"0\\n\""
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\") == \"99\\n3\"\nassert solution(\"3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\") == \"0\\n\"\n"
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\") == \"99\"\nassert solution(\"6 120\\n50 60 60 60\\n40 50 50 50\\n30 40 40 40\\n20 30 30 30\\n10 20 20 20\\n5 10 10 10\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\"
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '''\n99\n3\n'''"
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"99\\n3\""
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\") == \"99\\n3\""
    },
    {
        "number": 3355,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\") == \"99\\n3\"\n"
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == 'Output on separate lines, in order:\\n - The distance between the two farthest rooms after reconstruction.\\n - A pair of integers representing a previously existing tunnel, which should be closed.\\n - A pair of integers, the rooms between which a new tunnel should be opened.\\n', \"The solution is incorrect.\""
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2\\n2 3\\n3 4\") == \"2\\n3 4\\n4 2\""
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\\n3 4\\n4 2\""
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"\"\"\n2\n3 4\n4 2\n\"\"\"\n"
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2\\n2 3\\n3 4\\n\") == \"2\\n3 4\\n4 2\\n\"\nassert solution(\"1 2\\n2 1\\n3 1\\n\") == \"1\\n3 1\\n2 1\\n\"\nassert solution(\"1 1\\n2 1\\n3 1\\n\") == \"1\\n3 1\\n2 1\\n\"\nassert solution(\"1 1\\n2 2\\n3 2\\n\") == \"1\\n3 2\\n2 2\\n\"\nassert solution(\"1 1\\n2 3\\n3 4\\n\") == \"1\\n3 4\\n2 3\\n\"\nassert solution(\"2 3\\n2 3\\n2 3\\n\") == \"1\\n3 3\\n2 3\\n\"\nassert solution(\"1 1\\n2 2\\n3 1\\n\") == \"1\\n3 1\\n2 2\\n\""
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Sample Input\\n4\\n1 2\\n2 3\\n3 4\\n\") == \"2\\n3 4\\n4 2\"\nassert solution(\"Sample Input\\n4\\n1 3\\n3 1\\n2 4\\n\") == \"2\\n3 4\\n4 2\"\nassert solution(\"Sample Input\\n4\\n1 2\\n2 3\\n3 4\\n\") == \"2\\n3 4\\n4 2\"\nassert solution(\"Sample Input\\n4\\n1 1\\n1 2\\n2 2\\n\") == \"3\\n2 1\\n2 3\"\nassert solution(\"Sample Input\\n4\\n2 1\\n3 1\\n1 2\\n\") == \"3\\n2 1\\n2 3\"\nassert solution(\"Sample Input\\n4\\n1 3\\n3 2\\n2 4\\n\") == \"3\\n2 4\\n4 2\"\nassert solution(\"Sample Input\\n4\\n1 2\\n2 3\\n3 4\\n\") == \"2\\n3 4\\n4 2\"\nassert solution(\"Sample Input\\n4\\n1 3\\n3 2\\n2 4\\n\") == \"3\\n2 4\\n4 2\""
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(None) == \"Case not available\""
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2\\n2 3\\n3 4\") == \"2\\n3 4\\n4 2\"\nassert solution(\"1 2\\n2 3\\n3 1\\n3 4\") == \"2\\n1 4\\n3 3\"\nassert solution(\"1 2\\n1 3\\n3 1\\n3 4\") == \"3\\n1 4\\n3 3\"\nassert solution(\"1 2\\n1 3\\n2 4\\n3 4\") == \"4\\n2 3\\n3 3\"\nassert solution(\"1 2\\n2 3\\n1 4\\n4 3\") == \"5\\n2 3\\n3 3\"\nassert solution(\"1 2\\n3 4\\n4 5\") == \"7\\n3 4\\n4 5\""
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3356,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n1 2\\n2 3\\n3 4') == '2\\n3 4\\n4 2'\nprint('All test cases passed')"
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Test failed: expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 1\\n2 2\\n3 2\\n4 1\") == \"9.0\\n12\\n12.00000\\n9.0\""
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Expected {output}, but got {solution(input())}.\"\n"
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(4) == \"9.0\"\nassert solution(1) == \"12\"\nassert solution(2) == \"12.0\"\nassert solution(3) == \"9.0\""
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 1\\n2 2\\n3 2\\n4 1') == '9.0000'\nassert solution('1 1 2 2\\n3 2\\n4 1 2 2\\n2 3 1') == '12.00000'\nassert solution('1 1 2 2\\n3 2\\n4 1 2 2\\n2 3 1 2') == '9.0000'\nassert solution('1 1 2 2 3 2\\n4 1\\n2 3 1\\n3 2 2\\n4 1\\n5 2\\n3 3 2\\n4 1\\n6 1\\n4 1\\n7 2\\n5 1\\n8 1\\n6 1\\n7 1\\n8 1\\n9 1\\n6 1\\n7 1\\n8 1\\n9 1\\n6 1\\n7 1\\n8 1\\n9 1\\n6 1\\n7 1\\n8 1\\n9 1\\n6 1\\n7 1\\n8 1\\n9 1\\n6 1\\n7 1\\n8 1\\n9 1\\n6 1\\n7 1\\n8 1\\n9 1\\n6 1\\n7 1\\n8 1\\n9 1\\n6 1\\n7 1\\n8 1\\n9 1\\n6 1\\n7 1\\n8 1\\n9 1\\n6 1\\n7 1\\n8 1\\n9 1\\n6 1\\n7 1\\n8 1\\n9 1\\n6 1\\n7 1\\n8 1\\n9 1\\n6 1\\n7 1\\n8 1\\n9 1\\n6 1\\n7 1\\n8 1\\n9 1\\n6 1\\n7 1\\n8 1\\n9 1\\n6 1\\n7 1\\n8 1\\n9 1\\n6 1\\n7 1\\n8 1\\n9 1\\n6 1\\n7 1\\n8 1\\n9 1\\n6 1\\n7 1\\n8 1\\n9 1\\n6 1\\n7 1\\n8 1\\n9 1\\n6 1\\n7 1\\n8 1\\n9 1\\n6 1\\n7 1\\n8 1\\n9 1\\n6 1\\n7 1\\n8 1\\n9 1\\n6 1\\n7 1\\n8 1\\n9 1\\n6 1\\n7 1\\n8 1\\n9 1\\n6 1\\n7 1\\n8 1\\n9 1\\n6 1\\n7 1\\n8 1\\n9 1\\n6 1\\n7 1\\n8 1\\n9 1\\n6 1\\n7 1\\n8 1\\n9 1\\n6 1\\n7 1\\n8 1\\n9 1\\n6 1\\n7 1\\n8 1\\n9 1\\n6 1\\n7 1\\n8 1\\n9 1\\n6 1\\n7 1\\n8 1\\n9 1\\n6 1\\n7 1\\n8 1\\n9 1\\n6 1\\n7 1\\n8 1\\n9 1\\n6 1\\n7 1\\n8 1\\n9 1\\n6 1\\n7 1\\n8 1\\n9 1\\n6 1\\n7 1\\n8 1\\n9 1\\n6 1\\n7 1\\n8 1\\n9 1\\n6 1\\n7 1\\n8 1\\n9 1\\n6 1\\"
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"\"\"\n9.0\n12.0\n9.0\n\"\"\""
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"9.0000\\n12\\n12.00000\\n9.0\""
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(4) == '9.0'\nassert solution(12) == '12'\nassert solution(12) == '12.0'"
    },
    {
        "number": 3357,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == ['9.0000', '12', '12.00000', '9.0']"
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"\"\"\nST A\nST X\nPH A\nPH X\nAD\nPL Y\nDI Y\n\"\"\""
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\"\nassert solution(\"5\\n\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\nDI Y\\n\"\nassert solution(\"10\\n\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\nDI Y\\nDI Y\\n\""
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\"\nassert solution(\"10\\n\") == \"ST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A\\nST A"
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\"\nassert solution(\"255\\n\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\"\nassert solution(\"1000\\n\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\""
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(2) == 'ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y'\nassert solution(12345) == 'ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y'\nassert solution(0) == 'ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y'\nassert solution(1) == 'ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y'\n"
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(2) == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(b'2') == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\""
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"DI Y\\n\", \"Expected output DI Y, but got {}.\".format(solution(input()))"
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"def solution(stdin: str) -> str:\\n    pass\\n\\nif __name__ == '__main__':\\n    main()\\n\\ndef main():\\n    N = int(input())\\n    for i in range(N):\\n        # Your code to output the number\\n        pass\\n    pass\\n\""
    },
    {
        "number": 3358,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(2) == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\ndef solution(stdin: str) -> str: ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\"\n"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n1 5 6\n0000 FFFF 0000 0000 0000 0000\nFFFF FFFF 0000 FFFF FFFF 0000\n0000 0000 0000 FFFF 0000 0000\n0000 FFFF FFFF FFFF FFFF 0000\n0000 0000 0000 0000 0000 0000\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n2 3 4\nFF FF FF FF FF FF FF FF FF\n00 00 00 00 00 00 00 00\n00 00 00 00 00 00 00 00\n00 00 00 00 00 00 00 00\n00 00 00 00 00 00 00 00\n00 00 00 00 00 00 00 00\n\"\"\") == \"1\""
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt').read()) == '2'\n"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    1 5 6\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF\n    FF FF FF"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_data) == expected_output, f\"Test case failed. Expected output: {expected_output}, but got: {solution(input_data)}\""
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == '''2'''"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\") == 2, \"Incorrect output\""
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\") == 2\n"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\\n\") == 2"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\\n') == 2\nassert solution('1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\\n0000 0000 0000 0000 0000 0000\\n0000 0000 0000 0000 0000 0000\\n') == 2\nassert solution('1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\\n0000 0000 0000 0000 0000 0000\\n0000 0000 0000 0000 0000 0000\\n0000 0000 0000 0000 0000 0000\\n0000 0000 0000 0000 0000 0000\\n0000 0000 0000 0000 0000 0000\\n0000 0000 0000 0000 0000 0000\\n0000 0000 0000 0000 0000 0000\\n0000 0000 0000 0000 0000 0000\\n0000 0000 0000 0000 0000 0000\\n0000 0000 0000 0000 0000 0000\\n0000 0000 0000 0000 0000 0000\\n0000 0000 0000 0000 0000 0000\\n0000 0000 0000 0000 0000 0000\\n0000 0000 0000 0000 0000 0000\\n0000 0000 0000 0000 0000 0000\\n0000 0000 0000 0000 0000 0000\\n0000 0000 0000 0000 0000 0000\\n0000 0000 0000 0000 0000 0000\\n0000 0000 0000 000"
    },
    {
        "number": 3359,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2\\n\", \"Please provide the correct input\""
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n    5\n        S -> aSa\n        S -> bSb\n        S -> a\n        S -> b\n        S -> \n        ''') == 'abaaba\\nNONE'\n\nassert solution('''\n    5\n        S -> aSa\n        S -> bSb\n        S -> a\n        S -> b\n        S -> a\n        ''') == 'abaaba\\nNONE'\n\nassert solution('''\n    5\n        S -> aSa\n        S -> bSb\n        S -> a\n        S -> b\n        S -> a\n        ''') == 'abaaba\\nNONE'\n\nassert solution('''\n    5\n        S -> aSa\n        S -> bSb\n        S -> a\n        S -> b\n        S -> a\n        ''') == 'abaaba\\nNONE'\n\nassert solution('''\n    5\n        S -> aSa\n        S -> bSb\n        S -> a\n        S -> b\n        S -> a\n        ''') == 'abaaba\\nNONE'\n\nassert solution('''\n    5\n        S -> aSa\n        S -> bSb\n        S -> a\n        S -> b\n        S -> a\n        ''') == 'abaaba\\nNONE'\n\nassert solution('''\n    5\n        S -> aSa\n        S -> bSb\n        S -> a\n        S -> b\n        S -> a\n        ''') == 'abaaba\\nNONE'\n\nassert solution('''\n    5\n        S -> aSa\n        S -> bSb\n        S -> a\n        S -> b\n        S -> a\n        ''') == 'abaaba\\nNONE'\n\nassert solution('''\n    5\n        S -> aSa\n        S -> bSb\n        S -> a\n        S -> b\n        S -> a\n        ''') == 'abaaba\\nNONE'\n\nassert solution('''\n    5\n        S -> aSa\n        S -> bSb\n        S -> a\n        S -> b\n        S -> a\n        ''') == 'abaaba\\nNONE'\n\nassert solution('''\n    5\n        S -> aSa\n        S -> bSb\n        S -> a\n        S -> b\n        S -> a\n        ''') == 'abaaba\\nNONE'\n\nassert solution('''\n    5\n        S -> aSa\n        S -> bSb\n        S -> a\n        S -> b\n        S -> a\n        ''') == 'abaaba\\nNONE'\n\nassert solution('''\n    5\n        S -> aSa\n        S -> bSb\n        S -> a\n        S -> b\n        S -> a\n        ''') == 'abaaba\\nNONE'\n\nassert solution('''\n    5\n        S -> aSa\n        S -> bSb\n        S -> a\n        S -> b\n        S -> a\n        ''') == 'abaaba\\nNONE'\n\nassert solution('''\n    5\n        S -> aSa\n        S -> bSb\n        S -> a\n        S -> b\n        S -> a\n        ''') == 'abaaba\\nNONE'\n\nassert solution('''\n    5\n        S -> aSa\n        S -> bSb\n        S -> a\n        S -> b\n        S -> a\n        ''') == 'abaaba\\nNONE'\n\nassert solution('''\n    5\n        S -> aSa\n        S -> bSb\n        S -> a\n        S -> b\n        S -> a\n        ''') == 'abaaba\\nNONE'\n\nassert solution('''\n    5\n        S -> aSa\n        S -> bSb\n        S -> a\n        S -> b\n        S -> a\n        ''') == 'abaaba\\nNONE'\n\nassert solution('''\n    5\n        S -> aSa\n        S -> bSb\n        S -> a\n        S -> b\n        S -> a\n        ''') == 'abaaba\\nNONE'\n\nassert solution('''\n    5\n        S -> aSa\n        S -> bSb\n        S -> a\n        S -> b\n        S -> a\n        ''') == 'abaaba\\nNONE'\n\nassert solution('''\n    5\n        S -> aSa\n        S -> bSb\n        S -> a\n        S -> b\n        S -> a\n        ''') == 'abaaba\\nNONE'\n\nassert solution('''\n    5\n        S -> aSa\n        S -> bSb\n        S -> a\n        S -> b\n        S -> a\n        ''') == 'abaaba\\nNONE'\n\nassert solution('''\n    5\n        S -> aSa\n        S ->"
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == expected_output, f\"Expected {expected_output}, got {solution(sample_input)}\""
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\nr'S -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> ') == 'abaaba'\nassert solution(\nr'S -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> how about this aaaaaaabbbbbbbbbbbbbbbbba\\nS -> even a single a or b is a palindrome') == 'abbbbbbbbbbbbbbbbba'\nassert solution(\nr'S -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> none on this line\\nS -> how about this aaaaaaabbbbbbbbbbbbbbbbba\\nS -> even a single a or b is a palindrome') == 'NONE'\nassert solution(\nr'S -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> def solution(stdin: str) -> str: pass\\nS ->') == 'NONE'"
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == 'abaaba\\nNONE\\nabbbbbbbbbbbbbbbbba\\na\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test case 1\\ninput = \"S -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\nwhere are the abaaba palindromes on this line\\none on this line\\how about this aaaaaaabbbbbbbbbbbbbbbbba\\neven a single a or b is a palindrome\\nSample Output:\\nabaaaaabbaabaaaaa\\nNONE\\na\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test case 2\\ninput = \"S -> cCd\\nS -> dDd\\nS -> eEe\\nS -> fFf\\nS -> gGg\\nS -> hHh\\nS -> iIi\\nS -> jJj\\nS -> kKk\\nS -> lLl\\nS -> mMm\\nS -> nNn\\nS -> oOo\\nS -> pPp\\nS -> qQq\\nS -> rRr\\nS -> sSs\\nS -> tTt\\nS -> uUu\\nS -> vVw\\nS -> wWx\\nS -> xXy\\nS -> yYy\\nS -> zZz\\nS -> 11\\nS -> 12\\nS -> 13\\nS -> 14\\nS -> 15\\nS -> 16\\nS -> 17\\nS -> 18\\nS -> 19\\nS -> 20\\nS -> 21\\nS -> 22\\nS -> 23\\nS -> 24\\nS -> 25\\nS -> 26\\nS -> 27\\nS -> 28\\nS -> 29\\nS -> 30\\nS -> 31\\nS -> 32\\nS -> 33\\nS -> 34\\nS -> 35\\nS -> 36\\nS -> 37\\nS -> 38\\nS -> 39\\nS -> 40\\nS -> 41\\nS -> 42\\nS -> 43\\nS -> 44\\nS -> 45\\nS -> 46\\nS -> 47\\nS -> 48\\nS -> 49\\nS -> 50\\nS -> 51\\nS -> 52\\nS -> 53\\nS -> 54\\nS -> 55\\nS -> 56\\nS -> 57\\nS -> 58\\nS -> 59\\nS -> 60\\nS -> 61\\nS -> 62\\nS -> 63\\nS -> 64\\nS -> 65\\nS -> 66\\nS -> 67\\nS -> 68\\nS -> 69\\nS -> 70\\nS -> 71\\nS -> 72\\nS -> 73\\nS -> 74\\nS -> 75\\nS -> 76\\nS -> 77\\nS -> 78\\nS -> 79\\nS -> 80\\nS -> 81\\nS -> 82\\nS -> 83\\nS -> 84\\nS -> 85\\nS -> 86\\nS -> 87\\nS -> 88\\nS -> 89\\nS -> 90\\nS -> 91\\nS -> 92\\nS -> 93\\nS -> 94\\nS -> 95\\nS -> 96\\nS -> 97\\nS -> 98\\nS -> 99\\nS -> 100\\nS -> 101\\nS -> 102\\nS -> 103\\nS -> 104\\nS -> 105\\nS -> 106\\nS -> 107\\nS -> 108\\nS -> 109\\nS -> 110\\nS -> 111\\"
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"abaaba\"\nassert solution(stdin) == \"NONE\"\nassert solution(stdin) == \"abbbbbbbbbbbbbbbbba\"\nassert solution(stdin) == \"a\"\nassert solution(stdin) == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\nwhere are the abaaba palindromes on this line\\none on this line\\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\\neven a single a or b is a palindrome\\n\") == \"abaaba\\nNONE\\nabbbbbbbbbbbbbbbbba\\na\\ndef solution(stdin: str) -> str: \\n    pass\"\nassert solution(\"5\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\nwhere are the abaaba palindromes on this line\\none on this line\\nhow about this aaaaaaabbbbbbbbbbbbbbbbba\\neven a single a or b is a palindrome\\n\") == \"abaaba\\nNONE\\nabbbbbbbbbbbbbbbbba\\na\\ndef solution(stdin: str) -> str: \\n    pass\""
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"abaaba\", \"The output should be 'abaaba', but it is currently: \" + solution(stdin)\nprint(\"All tests pass!\")"
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n5\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \n''') == 'abaaba'\nassert solution('''\n5\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \n''') == 'NONE'\nassert solution('''\n5\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \n''') == 'abbbbbbbbbbbbbbbbba'\nassert solution('''\n5\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \n''') == 'a'\nassert solution('''\n5\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \n''') == 'def solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3360,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"abaaba\"\nassert solution() == \"NONE\"\nassert solution() == \"abbbbbbbbbbbbbbbbba\"\nassert solution() == \"a\""
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n4 5 0 2\\n1 3 7\\n2 0\\n4\\n\") == \"4\\n\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"4\"\n"
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"4\\n\"\n"
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 3 7\\n2 0\\n4\") == \"4\""
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\n4 5 0 2\\n1 3 7\\n2 0\\n4') == 4\nassert solution('5\\n5 0 1 1\\n0 1\\n3') == 7"
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r')) == '4\\n'\n"
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n5 5 0 2\\n1 3 7\\n2 0\\n4\\n\") == \"4\"\n"
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution([5]) == \"4\"\nassert solution([4,5,0,2]) == \"4\"\nassert solution([1,3,7,2,0]) == \"4\"\nassert solution([4]) == \"4\""
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"4\\n\""
    },
    {
        "number": 3361,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n4 5 0 2\\n1 3 7\\n2 0\\n4\") == \"4\\n\""
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n') == 'GO FOR IT'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n') == 'SUCCESS'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n3 4\\n5 6\\n') == 'NO WAY'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\"
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nSSS\\nGGG\\nBBBB\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nGGGG\\nSBBB\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nGGGG\\nGBBB\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nGGGG\\nBBB\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nGGGG\\nWBBB\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nGGGG\\nWBB\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nGGGG\\nWBG\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nGGGG\\nWBG\") == \"NO WAY\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nGGGG\\nWBBG\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nGGGG\\nWBBG\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nGGGG\\nWBBB\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nGGGG\\nWBB\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nGGGG\\nWBBG\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nGGGG\\nWBBG\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nGGGG\\nWBBG\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nGGGG\\nWBBG\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nGGGG\\nWBBG\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nGGGG\\nWBBG\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nGGGG\\nWBBG\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nGGGG\\nWBBG\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nGGGG\\nWBBG\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nGGGG\\nWBBG\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nGGGG\\nWBBG\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nGGGG\\nWBBG\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nGGGG\\nWBBG\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nGGGG\\nWBBG\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nGGGG\\nWBBG\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nGGGG\\nWBBG\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nGGGG\\nWBBG\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nGGGG\\nWBBG\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nGGGG\\nWBBG\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nGGGG\\nWBBG\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nGGGG\\nWBBG\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4"
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n3 3\\n4 4\\nWSBB\\nWWWW\\nWBWG\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n3 3\\n4 4\\nWSBB\\nWWWW\\nWBWG\\n1 1\\n1 1\\nWSBB\\nWWWW\\nWBWG\\n1 1\\n1 1\\nWSBB\\nWWWW\\nWBWG\\n2 2\\n2 2\\nWSBB\\nWWWW\\nWBWG\\n2 2\\n2 2\\nWSBB\\nWWWW\\nWBWG\") == \"NO WAY\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n3 3\\n4 4\\nWSBB\\nWWWW\\nWBWG\\n1 1\\n1 1\\nWSBB\\nWWWW\\nWBWG\\n1 1\\n1 1\\nWSBB\\nWWWW\\nWBWG\\n2 2\\n2 2\\nWSBB\\nWWWW\\nWBWG\\n2 2\\n2 2\\nWSBB\\nWWWW\\nWBWG\\n1 1\\n1 1\\nWSBB\\nWWWW\\nWBWG\\n2 2\\n2 2\\nWSBB\\nWWWW\\nWBWG\\n1 1\\n1 1\\nWSBB\\nWWWW\\nWBWG\\n2 2\\n2 2\\nWSBB\\nWWWW\\nWBWG\\n1 1\\n1 1\\nWSBB\\nWWWW\\nWBWG\\n1 1\\n1 1\\nWSBB\\nWWWW\\nWBWG\\n1 1\\n1 1\\nWSBB\\nWWWW\\nWBWG\\n1 1\\n1 1\\nWSBB\\nWWWW\\nWBWG\\n1 1\\n1 1\\nWSBB\\nWWWW\\nWBWG\\n1 1\\n1 1\\nWSBB\\nWWWW\\nWBWG\\n1 1\\n1 1\\nWSBB\\nWWWW\\nWBWG\\n1 1\\n1 1\\nWSBB\\nWWWW\\nWBWG\\n1 1\\n1 1\\nWSBB\\nWWWW\\nWBWG\\n1 1\\n1 1\\nWSBB\\nWWWW\\nWBWG\\n1 1\\n1 1\\nWSBB\\nWWWW\\nWBWG\\n1 1\\n1 1\\nWSBB\\nWWWW\\nWBWG\\n1 1\\n1 1\\nWSBB\\nWWWW\\nWBWG\\n1 1\\n1 1\\nWSBB\\nWWWW\\nWBWG\\n1 1\\n1 1\\nWSBB\\nWWWW\\nWBWG\\n1 1\\n1 1\\nWSBB\\nWWWW\\nWBWG\\n1 1\\n1 1\\nWSBB\\nWWWW\\nWBWG\\n1 1\\n1 1\\nWSBB\\nWWWW\\nWBWG\\n1 1\\n1 1\\nWSBB\\nWWWW\\nWBWG\\n1 1\\n1 1\\nWSBB\\nWWWW\\nWBWG\\n1 1\\n1 1\\nWSBB\\nWWWW\\nWBWG\\n1 1\\n1 1\\nWSBB\\nWWWW\\nWBWG\\n1 1\\n1 1\\nWSBB\\nWWWW\\nWBWG\\n1 1\\n1 1\\nWSBB\\nWWWW\\nWBWG\\n1 1\\n1 1\\nWSBB\\nWWWW\\nWBWG\\n1 1\\n1 1\\nWSBB\\nWW"
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG') == 'GO FOR IT\\n'\nassert solution('2 3\\n4 4\\nSSSW\\nSSBW\\nSSWW') == 'NO WAY\\n'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW') == 'GO FOR IT\\n'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW') == 'GO FOR IT\\n'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW') == 'GO FOR IT\\n'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW') == 'NO WAY\\n'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW') == 'NO WAY\\n'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW') == 'NO WAY\\n'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW') == 'NO WAY\\n'"
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBG\") == \"NO WAY\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBG\\nWGWB\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBG\\nWGWW\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBG\\nWGWW\\nWSBB\") == \"SUCCESS\""
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"GO FOR IT\""
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(solution_input) == solution_output, f\"Solution does not match expected output\\nInput: {solution_input}\\nOutput: {solution_output}\""
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\") == \"NO WAY\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\") == \"SUCCESS\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\\nWWWW\\nWSBB\") == \"NO WAY\""
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\"\n\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\n\") == \"SUCCESS\"\n\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\nS\\nG\\n\") == \"NO WAY\"\n\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\nS\\nG\\nW\\nS\\nG\\n\") == \"NO WAY\"\n\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\nS\\nG\\nW\\nS\\nG\\nS\\n\") == \"NO WAY\"\n\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\nS\\nG\\nW\\nS\\nG\\nS\\nG\\nS\\n\") == \"NO WAY\"\n\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\nS\\nG\\nW\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\n\") == \"NO WAY\"\n\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\\nS\\nG\\nW\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\nS\\nG\\"
    },
    {
        "number": 3362,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''2 3\n4 4\nWWWW\nWSBB\nWWWW\nWBWG''') == 'GO FOR IT'\nassert solution('''2 3\n4 4\nWWSW\nWBBB\nWWSW\nWBWG''') == 'SUCCESS'\nassert solution('''2 3\n4 4\nWSWS\nWBBB\nWSWS\nWBGW''') == 'GO FOR IT'\nassert solution('''2 3\n4 4\nWWSW\nWBBW\nWSWS\nWBGW''') == 'NO WAY'\nassert solution('''2 3\n4 4\nWSWS\nWBBW\nWBBW\nWSWS\nWSWS''') == 'NO WAY'"
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 900\\n800 700 400 300 200\") == \"2243\\n\"\n"
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    5 900\n    800 700 400 300 200\n    \"\"\"\n) == \"2243\\n\""
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 900\\n800 700 400 300 200') == '2243\\n'\nassert solution('10 300\\n100 120 150 200 250') == '2660\\n'\nassert solution('10 500\\n50 70 90 110 130') == '1770\\n'\nassert solution('10 1000\\n1000 500 150 250 350') == '1770\\n'\nassert solution('10 100\\n100 200 300 400 500') == '1770\\n'\n"
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 900\\n800 700 400 300 200\") == \"2243\"\n"
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 900\\n800 700 400 300 200\") == \"2243\""
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 900\\n800 700 400 300 200\") == \"2243\\n\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2243\"\n"
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\n'"
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '2243'\n"
    },
    {
        "number": 3363,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2243\\n\", \"Your solution is incorrect.\""
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\\n') == 'no\\nyes\\n'"
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\\n') == ['no', 'yes']"
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_data) == output_data, f\"Test case failed. Expected output: {output_data}, but got: {solution(input_data)}\"\n"
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\") == \"no\\nyes\\n\"\n"
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\") == \"no\\nno\\nno\"\nassert solution(\"10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\") == \"yes\\nno\\nno\""
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3') == 'no\\nyes\\n'\nassert solution('10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\\n') == 'no\\nno\\n'\nassert solution('10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\\n= 2 8\\n') == 'no\\nno\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3') == 'no\\nno\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\", \"The solution function should be defined correctly.\"\n\nassert len(solution.__code__.co_freevars) == 2, \"The solution function should have two free variables.\"\nassert solution.__code__.co_varnames[0] == \"stdin\", \"The first free variable of the solution function should be named'stdin'.\"\nassert solution.__code__.co_varnames[1] == \"stdout\", \"The second free variable of the solution function should be named'stdout'.\""
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\") == \"no\\nyes\\n\""
    },
    {
        "number": 3364,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\\n\") == \"no\\nno\\n\"\nassert solution(\"10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\\n\") == \"yes\\nyes\\n\""
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2\", \"Solution not correct.\"\n"
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"2\", \"The output of the code is not as expected\""
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin: str) == \"2\\n\"\nassert solution(stdin: str) == \"4\\n\"\nassert solution(stdin: str) == \"6\\n\"\nassert solution(stdin: str) == \"10\\n\"\nassert solution(stdin: str) == \"14\\n\""
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin: str) == \"2\"\n"
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n10 5 4 8 3\") == \"2\\n\"\nassert solution(\"5 2\\n1 2 3\") == \"0\\n\"\nassert solution(\"10 3\\n1 2 3 4 5 6 7 8 9\") == \"2\\n\"\nassert solution(\"10 2\\n1 2 3 4\") == \"0\\n\"\n"
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n10 5 4 8 3\") == \"2\"\nassert solution(\"5 4\\n1 2 3 4\") == \"0\"\nassert solution(\"5 3\\n10 7 8 9\") == \"0\"\nassert solution(\"5 3\\n10 5 4 8 3\") == \"2\"\nassert solution(\"5 3\\n20 10 9 8 7 6 5 4 3\") == \"15\""
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n10 5 4 8 3\") == 2"
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n10 5 4 8 3\\n\") == \"2\\n\"\nassert solution(\"5 10\\n1 2 3 4 5 6 7 8 9\\n\") == \"3\\n\"\nassert solution(\"5 2\\n2 3 4 5\\n\") == \"1\\n\"\nassert solution(\"5 1\\n2 3 4\\n\") == \"0\\n\"\nassert solution(\"5 5\\n1 1 1 1 1\\n\") == \"10\\n\""
    },
    {
        "number": 3365,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 3\\n10 5 4 8 3') == '2\\n'\n"
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 127') == '1083'\n"
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 127\") == \"1083\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 127\") == \"1083\"\n"
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 127\") == \"1083\"  # Correct output\n"
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(str(1) + \" \" + str(127)) == \"1083\", \"The function f(X) should terminate for any positive integer X, and its value should be 1083.\"\n\nprint(solution(str(1) + \" \" + str(127)))"
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == '1083'"
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 127\") == \"1083\\n\"\n"
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(str(1) + \" \" + str(127)) == \"1083\", \"Invalid output\""
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 127') == '1083'"
    },
    {
        "number": 3366,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 127\") == \"1083\\n\""
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_str) == expected_output, f\"Test case {i+1} failed: {solution(input_str)} should be {expected_output}, but got {solution(input_str)}\""
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"How much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\") == \"2.0000000000\\ndef solution(stdin: str) -> str:pass\\n\"\nassert solution(\"What is the air speed velocity of an unladen swallow? African? 6 times 9?\") == \"2.0000000000\\ndef solution(stdin: str) -> str:pass\\n\"\nassert solution(\"How much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African? 6 times 9?\") == \"2.0000000000\\ndef solution(stdin: str) -> str:pass\\n\"\nassert solution(\"Is there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African? 6 times 9?\") == \"0.0000000000\\ndef solution(stdin: str) -> str:pass\\n\"\nassert solution(\"What is the air speed velocity of an unladen swallow? African?\") == \"0.0000000000\\ndef solution(stdin: str) -> str:pass\\n\"\nassert solution(\"Is there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African? 6 times 9? 42\") == \"0.0000000000\\ndef solution(stdin: str) -> str:pass\\n\""
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\\n\") == \"2.0000000000\\n\"\nassert solution(\"4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\\n\") == \"2.0000000000\\n\"\nassert solution(\"4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\\n\") == \"2.0000000000\\n\"\nassert solution(\"4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\\n\") == \"2.0000000000\\n\"\nassert solution(\"4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\\n\") == \"2.0000000000\\n\"\nassert solution(\"4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\\n\") == \"2.0000000000\\n\""
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"How much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\") == \"2.0000000000\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test case 1\"\n\nassert solution(\"How much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\\nWhat is the air speed velocity of an unladen swallow? American?\") == \"2.0000000000\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test case 2\"\n\nassert solution(\"I am not an AI. This is not a game!\") == \"0.0000000000\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test case 3\"\n\nassert solution(\"I am not an AI. This is not a game? Who is it?\") == \"0.0000000000\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test case 4\"\n\nassert solution(\"I am not an AI. This is not a game? Who is it?\\nI am not an AI. This is not a game!?\") == \"0.0000000000\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Test case 5\""
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"How much is 6 times 9? 42\") == \"2.0000000000\"\nassert solution(\"How much is 9 times 6? 42\") == \"2.0000000000\"\nassert solution(\"Is there intelligent life on Earth? Probably\") == \"2.0000000000\"\nassert solution(\"What is the air speed velocity of an unladen swallow? African?\") == \"2.0000000000\""
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2.0000000000\", \"Incorrect solution\""
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"2.0000000000\\n\", \"The expected output is incorrect.\""
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"2.0000000000\", \"Incorrect output\""
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '2.0000000000', 'Test Case 1'\n\nassert solution(input()) == '1.2500000000', 'Test Case 2'\n\nassert solution(input()) == '2.0000000000', 'Test Case 3'\n\nassert solution(input()) == '1.7500000000', 'Test Case 4'\n\nassert solution(input()) == '1.0000000000', 'Test Case 5'"
    },
    {
        "number": 3367,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"How much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\") == 2.0\nassert solution(\"How many people are in a city? 6\\nWhat is the name of the most prominent city in the world? San Francisco\\nWhat is the capital of Australia? Sydney\") == 1.75\nassert solution(\"What is the most famous movie in the Western world? The Lord of the Rings\") == 1.0\nassert solution(\"What is the most powerful weapon in the history of warfare? The Gladiator's Rifle\") == 1.25\nassert solution(\"What is the most famous person in the Western world? Toby Gallagher\") == 1.5\nassert solution(\"What is the capital of France? Paris\") == 1.25\nassert solution(\"What is the most famous song in the Western world? Iron Man\") == 1.75\nassert solution(\"What is the most famous TV show in the Western world? Monstercat\") == 2.0\n\nprint(\"All test cases passed\")"
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\") == \"POSSIBLE\""
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\") == \"POSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\n2 2\\nmonkey 3 lion\\npenguin 1 cat\") == \"IMPOSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\n2 2\\nmonkey 3 lion\\npenguin 1 cat\\n3 2\\nmonkey 3 lion\\nmonkey 4 lion\") == \"FALSE ALARM\""
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\") == \"POSSIBLE\"\nassert solution(\"2 5\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\nmonkey 1 lion\") == \"POSSIBLE\"\nassert solution(\"5 7\\nlion 2 lion\\nmonkey 4\") == \"POSSIBLE\"\nassert solution(\"5 7\\nlion 2 lion\\nmonkey 2\") == \"IMPOSSIBLE\"\nassert solution(\"1 1\\nmonkey 2 lion penguin\") == \"FALSE ALARM\""
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey') == 'POSSIBLE'\nassert solution('5 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\nmonkey 1 lion\\n') == 'IMPOSSIBLE'\nassert solution('3 10\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\nmonkey 1 lion\\n') == 'FALSE ALARM'"
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\n\") == \"POSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\nmonkey 3 lion penguin lion\\nlion 2 monkey lion\\npenguin 1 monkey\\n\") == \"POSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\nmonkey 3 lion penguin lion\\nlion 2 monkey lion\\npenguin 1 monkey\\nmonkey 3 lion penguin lion\\nlion 2 monkey lion\\npenguin 1 monkey\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\nmonkey 3 lion penguin lion\\nlion 2 monkey lion\\npenguin 1 monkey\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\nmonkey 3 lion penguin lion\\nlion 2 monkey lion\\npenguin 1 monkey\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\nmonkey 2 lion"
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\") == \"POSSIBLE\"\nassert solution(\"4 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\") == \"IMPOSSIBLE\"\nassert solution(\"1 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\") == \"FALSE ALARM\"\n"
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\") == \"POSSIBLE\"\nassert solution(\"1 2\\ncat 2 mouse\") == \"FALSE ALARM\"\nassert solution(\"4 3\\napple 1 banana\\nbanana 3 apple\\nbanana 3 apple\\napple 1 banana\\nbanana 3 apple\\nbanana 3 apple\\napple 1 banana\\nbanana 3 apple\\nbanana 3 apple\\napple 1 banana\\nbanana 3 apple\\nbanana 3 apple\\napple 1 banana\\nbanana 3 apple\\nbanana 3 apple\\napple 1 banana\\nbanana 3 apple\\nbanana 3 apple\\napple 1 banana\\nbanana 3 apple\\nbanana 3 apple\\napple 1 banana\\nbanana 3 apple\\nbanana 3 apple\\napple 1 banana\\nbanana 3 apple\\nbanana 3 apple\\napple 1 banana\\nbanana 3 apple\\nbanana 3 apple\\napple 1 banana\\nbanana 3 apple\\nbanana 3 apple\\napple 1 banana\\nbanana 3 apple\\nbanana 3 apple\\napple 1 banana\\nbanana 3 apple\\nbanana 3 apple\\napple 1 banana\\nbanana 3 apple\\nbanana 3 apple\\napple 1 banana\\nbanana 3 apple\\nbanana 3 apple\\napple 1 banana\\nbanana 3 apple\\nbanana 3 apple\\napple 1 banana\\nbanana 3 apple\\nbanana 3 apple\\napple 1 banana\\nbanana 3 apple\\nbanana 3 apple\\napple 1 banana\\nbanana 3 apple\\nbanana 3 apple\\napple 1 banana\\nbanana 3 apple\\nbanana 3 apple\\napple 1 banana\\nbanana 3 apple\\nbanana 3 apple\\napple 1 banana\\nbanana 3 apple\\nbanana 3 apple\\napple 1 banana\\nbanana 3 apple\\nbanana 3 apple\\napple 1 banana\\nbanana 3 apple\\nbanana 3 apple\\napple 1 banana\\nbanana 3 apple\\nbanana 3 apple\\napple 1 banana\\nbanana 3 apple\\nbanana 3 apple\\napple 1 banana\\nbanana 3 apple\\nbanana 3 apple\\napple 1 banana\\nbanana 3 apple\\nbanana 3 apple\\napple 1 banana\\nbanana 3 apple\\nbanana 3 apple\\napple 1 banana\\nbanana 3 apple\\nbanana 3 apple\\napple 1 banana\\nbanana 3 apple\\nbanana 3 apple\\napple 1 banana\\nbanana 3 apple\\nbanana 3 apple\\napple 1 banana\\nbanana 3 apple\\nbanana 3 apple\\napple 1 banana\\nbanana 3 apple\\nbanana 3 apple\\napple 1 banana\\nbanana 3 apple\\nbanana 3 apple\\napple 1 banana\\nbanana 3 apple\\nbanana 3 apple\\napple 1 banana\\nbanana 3 apple\\nbanana 3 apple\\napple 1 banana\\nbanana 3 apple\\nbanana 3 apple\\napple 1 banana\\nbanana 3 apple\\nbanana 3 apple\\napple 1 banana\\nbanana 3 apple\\nbanana 3 apple\\napple 1 banana\\nbanana 3 apple\\nbanana 3 apple\\napple 1 banana\\nbanana 3 apple\\nbanana 3 apple\\napple 1 banana\\nbanana 3 apple\\nbanana 3 apple\\napple 1 banana\\nbanana 3 apple\\nbanana 3 apple\\napple 1 banana\\nbanana 3 apple\\nbanana 3 apple\\napple 1 banana\\nbanana "
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\n\") == \"POSSIBLE\"\n\nassert solution(\"4 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\n\") == \"IMPOSSIBLE\"\n\nassert solution(\"3 5\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\n\") == \"FALSE ALARM\""
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\n') == 'POSSIBLE'\nassert solution('4 5\\nmonkey 1 lion leopard\\nleopard 2 monkey\\n') == 'POSSIBLE'\nassert solution('3 4\\nlion 1 monkey\\nmonkey 2 lion leopard\\nleopard 3 monkey\\n') == 'POSSIBLE'\nassert solution('3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\n') == 'FALSE ALARM'\nassert solution('3 3\\nmonkey 2 lion leopard\\nleopard 1 monkey\\n') == 'POSSIBLE'\nassert solution('3 3\\nmonkey 2 lion leopard\\nleopard 1 monkey\\n') == 'FALSE ALARM'\nassert solution('3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\n') == 'FALSE ALARM'"
    },
    {
        "number": 3368,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(r'3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey') == 'POSSIBLE'\n\nassert solution(r'3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey') == 'FALSE ALARM'\n\nassert solution(r'3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\n') == 'IMPOSSIBLE'\n\nassert solution(r'3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\n') == 'IMPOSSIBLE'"
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == 'triple correlation 4(1)4(3)3 found', 'Your solution is incorrect.'"
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(4, 7, 9, 5, 9, 3, 5, 0, 0, 1, 7, 8, 5, 0, 2, 6, 3, 5, 4, 4, 4, 6, 3, 3, 2, 7, 1, 8, 7, 8, 7, 6, 1, 1, 7, 2, 5, 4, 7, 2, 0, 4, 4, 5, 8, 3, 0, 6, 9, 3, 2, 6, 6, 8, 5, 2, 5, 1, 2, 7, 2, 4, 1, 0, 0, 4, 9, 1, 8, 7, 5, 0, 4, 4, 8, 4, 3, 2, 6, 8, 8, 5, 6, 7, 0, 9, 7, 0, 3, 6, 1, 4, 4, 1, 2, 3, 2, 6, 9, 9) == \"triple correlation 4(1)4(3)3 found\"\nassert solution(100, \"4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2 0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7 2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8 8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\") == \"random sequence\"\n"
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"triple correlation 4(1)4(3)3 found\""
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin: str) == \"triple correlation 4(1)4(3)3 found\"\n"
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\") == \"triple correlation 4(1)4(3)3 found\\n\"\n"
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4 4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2 0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7 2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8 8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2 0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7 2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8 8 5 2 5 1 2 7 2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8 8 5 2 5 1 2 7 2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8 8 5 2 5 1 2 7 2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8 8 5 2 5 1 2 7 2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8 8 5 2 5 1 2 7 2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8 8 5 2 5 1 2 7 2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8 8 5 2 5 1 2 7 2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8 8 5 2 5 1 2 7 2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8 8 5 2 5 1 2 7 2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8 8 5 2 5 1 2 7 2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8 8 5 2 5 1 2 7 2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8 8 5 2 5 1 2 7 2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8 8 5 2 5 1 2 7 2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8 "
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(None) == \"random sequence\"\n\nsequence = list(map(int, input().split()))\nn = len(sequence)\nfor i in range(n-1):\n    if sequence[i] == 4 and sequence[i+1] == 4:\n        correlation = 4 * sequence[i+1] + 4 * sequence[i+2]\n        if correlation % 100 == 0:\n            return f\"triple correlation {correlation} found\"\n\nreturn \"random sequence\"\n"
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\") == \"triple correlation 4(1)4(3)3 found\"\nprint(\"All tests pass!\")"
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Test failed: expected '{expected_output}', got '{solution(input())}'\""
    },
    {
        "number": 3369,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == sample_output, f\"Expected {sample_output}, got {solution(sample_input)}\""
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1\\n39\\n10\\n40\\n\") == \"40.5\"\n"
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\\n39\\n10\\n40\") == \"40.5\""
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\\n39\\n10\\n40\\n\") == \"40.5\"\nassert solution(\"3 1\\n39\\n10\\n40\\n\") == \"40.5\"\nassert solution(\"2 1\\n39\\n10\\n40\\n\") == \"40\"\nassert solution(\"2 1\\n39\\n10\\n40\\n\") == \"40\""
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3, 1, 39, 10, 40) == 40.5, \"Your solution is incorrect.\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1\\n39\\n10\\n40\") == \"40.5\""
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1\\n39\\n10\\n40\\n\") == \"40.5\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1\\n39\\n10\\n40\\n\") == \"40.5\\n\"\n"
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 1\\n39\\n10\\n40') == '40.5\\n'\nassert solution('5 3\\n20\\n15') == '18.5\\n'\nassert solution('5 5\\n15\\n20') == '30.0\\n'\nassert solution('10 2\\n20\\n30') == '38.0\\n'\nassert solution('100 5\\n100\\n100') == '100.0\\n'\nassert solution('1 1\\n100000\\n0') == '100000.0\\n'\nassert solution('1 100000\\n0\\n0') == '100000.0\\n'\nassert solution('100000 100000\\n100000\\n100000') == '100000.0\\n'"
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 40.5"
    },
    {
        "number": 3370,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1\\n39\\n10\\n40\") == \"40.5\"\nassert solution(\"4 100\\n40\\n10\") == \"40.0\"\nassert solution(\"3 10\") == \"40\"\n\nfrom typing import List\n"
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"Impossible\\n\"\nassert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n\") == \"Impossible\\n\"\nassert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n\\n1 5 1988\\n2 6 1988\\n3 7 1988\\n4 8 1988\\n5 9 1988\\n6 10 1988\\n7 11 1988\\n8 12 1988\\n9 13 1988\\n10 14 1988\\n11 15 1988\\n12 16 1988\\n13 17 1988\\n14 18 1988\\n15 19 1988\\n16 20 1988\\n17 21 1988\\n18 22 1988\\n19 23 1988\\n20 24 1988\\n21 25 1988\\n22 26 1988\\n23 27 1988\\n24 28 1988\\n25 29 1988\\n26 30 1988\\n27 31 1988\\n28 32 1988\\n29 33 1988\\n30 34 1988\\n31 35 1988\\n32 36 1988\\n33 37 1988\\n34 38 1988\\n35 39 1988\\n36 40 1988\\n37 41 1988\\n38 42 1988\\n39 43 1988\\n40 44 1988\\n41 45 1988\\n42 46 1988\\n43 47 1988\\n44 48 1988\\n45 49 1988\\n46 50 1988\\n47 51 1988\\n48 52 1988\\n49 53 1988\\n50 54 1988\\n51 55 1988\\n52 56 1988\\n53 57 1988\\n54 58 1988\\n55 59 1988\\n56 60 1988\\n57 61 1988\\n58 62 1988\\n59 63 1988\\n60 64 1988\\n61 65 1988\\n62 66 1988\\n63 67 1988\\n64 68 1988\\n65 69 1988\\n66 70 1988\\n67 71 1988\\n68 72 1988\\n69"
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"Impossible\"\nassert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n\") == \"1987\"\nassert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n2 3 1988\\n1 2 1989\\n1 2 1990\\n\") == \"1988\"\nassert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n2 3 1988\\n1 2 1989\\n1 2 1990\\n2 3 1991\\n\") == \"1989\"\nassert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n2 3 1988\\n1 2 1989\\n1 2 1990\\n2 3 1991\\n2 3 1992\\n\") == \"1991\""
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == 'Impossible'"
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"Impossible\"\nassert solution(stdin=\"6 6\\n1 1 1948\\n1 1 1949\\n2 2 1950\\n3 3 1951\\n4 4 1952\") == \"1949\"\n"
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == 'Impossible'"
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n\") == \"Impossible\""
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"Impossible\"\nassert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"1987\"\nassert solution(\"5 4\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n4 5 1988\") == \"1987\"\nassert solution(\"5 4\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n4 5 1988\") == \"2008\""
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"Impossible\""
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 'Impossible'"
    },
    {
        "number": 3371,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"Impossible\""
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"impossible\""
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 1\") == \"impossible\""
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"impossible\", \"Invalid solution\""
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 1\") == \"impossible\""
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"impossible\", \"Your solution is not correct\""
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 1\") == \"impossible\"\nassert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 3\") == \"3\"\n"
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 1\") == \"impossible\"\nassert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 0\") == \"impossible\"\nassert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 0 3\\nC 1 1\") == \"impossible\"\nassert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 0 1\") == \"impossible\"\nassert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 0\") == \"impossible\"\nassert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 1\") == \"3\"\nassert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 2\") == \"3\"\nassert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 3\") == \"3\"\nassert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 4\") == \"3\"\nassert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 5\") == \"3\"\nassert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 6\") == \"3\"\nassert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 7\") == \"3\"\nassert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 8\") == \"3\"\nassert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 9\") == \"3\"\nassert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 10\") == \"3\"\nassert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 11\") == \"3\"\nassert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 12\") == \"3\"\nassert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 13\") == \"3\"\nassert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 14\") == \"3\"\nassert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 15\") == \"3\"\nassert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 16\") == \"3\"\nassert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 17\") == \"3\"\nassert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 18\") == \"3\"\nassert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 19\") == \"3\"\nassert solution(\""
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input_1.txt\", \"r\")) == \"3\"\nassert solution(open(\"input_2.txt\", \"r\")) == \"3\""
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == 'impossible'"
    },
    {
        "number": 3372,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_data) == expected_output, \"Test case failed\""
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n())\\n((()\\n)()') == 10\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n())\\n((()()\\n)()') == 10\nassert solution('3\\n(()()\\n())') == 12\nassert solution('3\\n(())\\n(()))') == 18\nassert solution('3\\n(()()\\n(())') == 20\nassert solution('3\\n(())\\n(())') == 24\nassert solution('3\\n(())\\n())') == 26\nassert solution('3\\n(())\\n(())') == 28\nassert solution('3\\n(())\\n((()))') == 30"
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == 10, \"The output is not as expected. Please, fix the code.\""
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n())\\n((()()\\n)\") == 10\nassert solution(\"1\\n())\\n((())\\n)\") == 0\nassert solution(\"2\\n())\\n((()))\\n())\\n\") == 12"
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n())\\n((()\\n)()\") == \"10\"\nassert solution(\"3\\n(()()\\n()())\") == \"14\"\nassert solution(\"1\\n()\") == \"0\"\nassert solution(\"2\\n(())\") == \"1\"\nassert solution(\"4\\n(()))\\n(())\") == \"16\"\nassert solution(\"5\\n(())\\n(()()))\\n(())\") == \"20\""
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n())\\n((()\\n)()\") == 10, \"Test 1\"\nassert solution(\"3\\n(ab)\\n((ab)\\n())\\n(bc\\n())\\n(cd)\") == 13, \"Test 2\"\nassert solution(\"3\\n())\\n(()())\\n(())\\n(()())\\n(()())\\n(()())\\n(())\\n(()())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())\\n(())"
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n())\\n((()()\\n)\") == 10, \"The length of the longest string of balanced parentheses you can form from the pieces is incorrect.\""
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 10, \"The length of the longest string of balanced parentheses you can form is not correct.\"\n\nfrom typing import List"
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('(())') == 10"
    },
    {
        "number": 3373,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"3\n())\n((()\n)()\"\"\") == 10, \"Test 1 failed\"\n\nassert solution(\"\"\"3\n(())\n())\n((())\"\"\") == 13, \"Test 2 failed\"\n\nassert solution(\"\"\"3\n)()\n()\n()\"\"\") == 0, \"Test 3 failed\"\n\nassert solution(\"\"\"2\n())\n((())\n()\n())\"\"\") == 3, \"Test 4 failed\"\n\nassert solution(\"\"\"3\n()\n()\n()\"\"\") == 0, \"Test 5 failed\""
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"9\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\\n\") == \"85293\\n\"\nassert solution(\"10\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 11\\n12 12\\n13 13\\n14 14\\n15 15\\n16 16\\n17 17\\n18 18\\n19 19\\n20 20\\n\") == \"28345\\n\""
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"9\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\\n\") == \"85293\"\n"
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('9\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\\n') == '85293'\nassert solution('9\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\\n2 4 3\\n2 5 5\\n4 7 7\\n4 9 9\\n5 7 9\\n5 8 7\\n6 9 8\\n7 9 9\\n7 8 7\\n') == '6592'\nassert solution('9\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\\n2 4 3\\n2 5 5\\n4 7 7\\n4 9 9\\n5 7 9\\n5 8 7\\n6 9 8\\n7 9 9\\n7 8 7\\n') == '6592'\nassert solution('9\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\\n2 4 3\\n2 5 5\\n4 7 7\\n4 9 9\\n5 7 9\\n5 8 7\\n6 9 8\\n7 9 9\\n7 8 7\\n2 4 3\\n2 5 5\\n4 7 7\\n4 9 9\\n5 7 9\\n5 8 7\\n6 9 8\\n7 9 9\\n7 8 7\\n2 4 3\\n2 5 5\\n4 7 7\\n4 9 9\\n5 7 9\\n5 8 7\\n6 9 8\\n7 9 9\\n7 8 7\\n2 4 3\\n2 5 5\\n4 7 7\\n4 9 9\\n5 7 9\\n5 8 7\\n6 9 8\\n7 9 9\\n7 8 7\\n2 4 3\\n2 5 5\\n4 7 7\\n4 9 9\\n5 7 9\\n5 8 7\\n6 9 8\\n7 9 9\\n7 8 7\\n2 4 3\\n2 "
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"9\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\") == \"85293\""
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"85293\""
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"9\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\\n\") == \"85293\"\n"
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"9\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\") == \"85293\""
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('9\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\\n') == '85293'"
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"9\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\\n\") == \"85293\"\nassert solution(\"9\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\\n\") == \"1000000\"\nassert solution(\"9\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\\n\") == \"1000000\"\nassert solution(\"9\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\\n\") == \"85293\""
    },
    {
        "number": 3374,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"test_solution.txt\", \"r\").read()) == 85293, \"The output is incorrect.\""
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"5\\n\"\n"
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n\") == \"5\\n\""
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\") == 5\n"
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n\\tpass\\n'"
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Solution does not meet the expected output: {solution(input())}\"\n"
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r')) == 5\n"
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()\nfor i in range(1, 10):\n    assert solution(f'Sample Input:\\n{i}\\n') == f'Sample Output:\\n{i}\\n'\n"
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 5, \"The correct output is not obtained.\""
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\") == 5, \"Test failed!\"\nassert solution(\"4 3\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\") == 0, \"Test failed!\"\nassert solution(\"4 7\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\") == 1, \"Test failed!\"\nassert solution(\"4 1\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\") == 0, \"Test failed!\"\nassert solution(\"4 3\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\") == 1, \"Test failed!\""
    },
    {
        "number": 3375,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '5\\n'\nprint('pass')"
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3 caterpillar 3 pupa 7 butterfly\\n3 dove 3 pigeon 7 aaabaaajss\\n3 mouse 1 electromouse 5 rat\\n7\\n0 electromouse\\n500 electromouse\\n1000 electromouse\\n1500 rat\\n2000 aaabaaajss\\n2500 pigeon\\n3000 butterfly\") == 5100, \"Incorrect output\"\n"
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3 caterpillar 3 pupa 7 butterfly\\n3 dove 3 pigeon 7 aaabaaajss\\n3 mouse 1 electromouse 5 rat\\n7\\n0 electromouse\\n500 electromouse\\n1000 electromouse\\n1500 rat\\n2000 aaabaaajss\\n2500 pigeon\\n3000 butterfly\") == \"5100\""
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n''') == 5100"
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"5100\", \"Your solution is incorrect.\""
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n3 caterpillar 3 pupa 7 butterfly\\n3 dove 3 pigeon 7 aaabaaajss\\n3 mouse 1 electromouse 5 rat\\n7\\n0 electromouse\\n500 electromouse\\n1000 electromouse\\n1500 rat\\n2000 aaabaaajss\\n2500 pigeon\\n3000 butterfly\\n\") == 5100, \"The output is incorrect\""
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n3 caterpillar 3 pupa 7 butterfly\\n3 dove 3 pigeon 7 aaabaaajss\\n3 mouse 1 electromouse 5 rat\\n7\\n0 electromouse\\n500 electromouse\\n1000 electromouse\\n1500 rat\\n2000 aaabaaajss\\n2500 pigeon\\n3000 butterfly\") == 5100\nprint(\"All test cases passed!\")\n"
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Test failed. Input: {input()}, Output: {output}\""
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 5100, \"Incorrect output\""
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n3 caterpillar 3 pupa 7 butterfly\\n3 dove 3 pigeon 7 aaabaaajss\\n3 mouse 1 electromouse 5 rat\\n7\\n0 electromouse\\n500 electromouse\\n1000 electromouse\\n1500 rat\\n2000 aaabaaajss\\n2500 pigeon\\n3000 butterfly\") == \"5100\"\n"
    },
    {
        "number": 3376,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n3 caterpillar 3 pupa 7 butterfly\\n3 dove 3 pigeon 7 aaabaaajss\\n3 mouse 1 electromouse 5 rat\\n7\\n0 electromouse\\n500 electromouse\\n1000 electromouse\\n1500 rat\\n2000 aaabaaajss\\n2500 pigeon\\n3000 butterfly') == 5100\nassert solution('1\\n1 caterpillar 2 pupa 4 butterfly\\n1 dove 1 pigeon 4 aaabaaajss\\n1 mouse 2 electromouse 3 rat\\n2\\n0 babblebee\\n500 babblebee\\n1000 babblebee\\n1500 babblebee\\n2000 babblebee\\n2500 babblebee\\n3000 babblebee\\n4000 babblebee\\n5000 babblebee\\n6000 babblebee\\n7000 babblebee\\n8000 babblebee\\n9000 babblebee\\n10000 babblebee\\n11000 babblebee\\n12000 babblebee\\n13000 babblebee\\n14000 babblebee\\n15000 babblebee\\n16000 babblebee\\n17000 babblebee\\n18000 babblebee\\n19000 babblebee\\n20000 babblebee\\n21000 babblebee\\n22000 babblebee\\n23000 babblebee\\n24000 babblebee\\n25000 babblebee\\n26000 babblebee\\n27000 babblebee\\n28000 babblebee\\n29000 babblebee\\n30000 babblebee\\n31000 babblebee\\n32000 babblebee\\n33000 babblebee\\n34000 babblebee\\n35000 babblebee\\n36000 babblebee\\n37000 babblebee\\n38000 babblebee\\n39000 babblebee\\n40000 babblebee\\n41000 babblebee\\n42000 babblebee\\n43000 babblebee\\n44000 babblebee\\n45000 babblebee\\n46000 babblebee\\n47000 babblebee\\n48000 babblebee\\n49000 babblebee\\n50000 babblebee\\n51000 babblebee\\n52000 babblebee\\n53000 babblebee\\n54000 babblebee\\n55000 babblebee\\n56000 babblebee\\n57000 babblebee\\n58000 babblebee\\n59000 babblebee\\n60000 babblebee\\n61000 babblebee\\n62000 babblebee\\n63000 babblebee\\n64000 babblebee\\n65000 babblebee\\n66000 babblebee\\n67000 babblebee\\n68000 babblebee\\n69000 babblebee\\n70000 babblebee\\n71000 babblebee\\n72000 babblebee\\n73000 babblebee\\n74000 babblebee\\n75000 babblebee\\n76000"
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\\n\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\""
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    5\n    0\n    1 1\n    1 1\n    2 2 3\n    1 4\n    8\n    1\n    2\n    3\n    1\n    4\n    2\n    3\n    5\n    \"\"\"\n) == \"\"\"\n6\n1\n2\n3\n1\n4\n5\n\"\"\""
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r').read()) == '6\\n1\\n2\\n3\\n1\\n4\\n5\\n'"
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n    5\n    0\n    1 1\n    1 1\n    2 2 3\n    1 4\n    8\n    1\n    2\n    3\n    1\n    4\n    2\n    3\n    5\n''') == '''\n6\n1\n2\n3\n1\n4\n5\n'''\n\nassert solution('''\n    5\n    0\n    1 1\n    1 1\n    2 2 3\n    1 4\n    8\n    1\n    2\n    3\n    1\n    4\n    2\n    3\n    5\n    2\n''') == '''\n-1\n'''\n\nassert solution('''\n    5\n    0\n    1 1\n    1 1\n    2 2 3\n    1 4\n    8\n    1\n    2\n    3\n    1\n    4\n    2\n    3\n    5\n    6\n''') == '''\n6\n1\n2\n3\n1\n4\n5\n6\n'''"
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    5\n    0\n    1 1\n    1 1\n    2 2 3\n    1 4\n    8\n    1\n    2\n    3\n    1\n    4\n    2\n    3\n    5\n    \"\"\"\n) == \"6\\n1\\n2\\n3\\n1\\n4\\n5\\n\""
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\\n\"\nassert solution(\"5\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\") == \"-1\\n\"\nassert solution(\"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\\n\"\nassert solution(\"5\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\") == \"-1\\n\"\n"
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5') == '6\\n1\\n2\\n3\\n1\\n4\\n5\\n'"
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n    5\n    0\n    1 1\n    1 1\n    2 2 3\n    1 4\n    8\n    1\n    2\n    3\n    1\n    4\n    2\n    3\n    5\n    1\n    2\n    3\n    4\n    5\n    \"\"\"), \"Input should be a list of strings representing the input\"\n\nn, t = map(int, stdin.split())\nsafe_dry_plan = [int(x) for x in stdin.strip().split()]\n\nsafe_plan = []\nfor i in range(t):\n    next_i = safe_dry_plan[i+1]\n    safe_plan.append(next_i)"
    },
    {
        "number": 3377,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('sample_input.txt', 'r').read()) == '6\\n1\\n2\\n3\\n1\\n4\\n5\\n'"
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\") == \"10\"\n"
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"10\"\n"
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\\n\") == \"10\""
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\\n\") == \"10\\n\""
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"10\\n\"\nprint(\"All assertions passed\")"
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\\n\") == \"10\""
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\\n\") == 10\nassert solution(\"3 4\\n1 2 3 4 5\\n2 3 4 5 6\\n3 4 5 6 7\\n4 5 6 7 8\\n5 6 7 8 9\\n6 7 8 9 10\\n7 8 9 10 11\\n8 9 10 11 12\\n9 10 11 12 13\\n10 11 12 13 14\\n11 12 13 14 15\\n12 13 14 15 16\\n13 14 15 16 17\\n14 15 16 17 18\\n15 16 17 18 19\\n16 17 18 19 20\\n17 18 19 20 21\\n18 19 20 21 22\\n19 20 21 22 23\\n20 21 22 23 24\\n21 22 23 24 25\\n22 23 24 25 26\\n23 24 25 26 27\\n24 25 26 27 28\\n25 26 27 28 29\\n26 27 28 29 30\\n27 28 29 30 31\\n28 29 30 31 32\\n29 30 31 32 33\\n30 31 32 33 34\\n31 32 33 34 35\\n32 33 34 35 36\\n33 34 35 36 37\\n34 35 36 37 38\\n35 36 37 38 39\\n36 37 38 39 40\\n37 38 39 40 41\\n38 39 40 41 42\\n39 40 41 42 43\\n40 41 42 43 44\\n41 42 43 44 45\\n42 43 44 45 46\\n43 44 45 46 47\\n44 45 46 47 48\\n45 46 47 48 49\\n46 47 48 49 50\\n47 48 49 50 51\\n48 49 50 51 52\\n49 50 51 52 53\\n50 51 52 53 54\\n51 52 53 54 55\\n52 53 54 55 56\\n53 54 55 56 57\\n54 55 56 57 58\\n55 56 57 58 59\\n56 57 58 59 60\\n57 58 59 60 61\\n58 59 60 61 62\\n59 60 61 62 63\\n60 61 62 63 64\\n61 62 63 64 65\\n62 63 64 65 66\\n6"
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\") == \"10\\n\""
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Solution {solution(input())} does not match the expected output {expected_output}.\"\n"
    },
    {
        "number": 3378,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_string) == output_string, \"Test failed\""
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1\\n\"\n"
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n0 1\\n1 2\\n2 3\") == \"1\"\nassert solution(\"4 3\\n0 1\\n1 2\\n2 3\") == \"1\"\nassert solution(\"4 3\\n0 1\\n1 2\\n2 3\") == \"1\"\nassert solution(\"4 3\\n0 1\\n1 2\\n2 3\") == \"1\""
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"4 3\\n0 1\\n1 2\\n2 3\\n\") == \"1\\n\"\nassert solution(stdin=\"4 2\\n1 2\\n2 3\\n\") == \"1\\n\"\nassert solution(stdin=\"4 3\\n0 1\\n1 0\\n2 3\\n\") == \"1\\n\"\nassert solution(stdin=\"5 6\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n\") == \"1\\n\"\nassert solution(stdin=\"6 7\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n\") == \"1\\n\"\nassert solution(stdin=\"6 7\\n0 1\\n1 0\\n2 3\\n3 4\\n4 5\\n5 6\\n\") == \"1\\n\""
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=r'4 3\\n0 1\\n1 2\\n2 3') == '1\\n'\nassert solution(stdin=r'4 6\\n0 1\\n0 2\\n1 3\\n1 4\\n2 5\\n3 4\\n3 5\\n4 5') == '2\\n'\nassert solution(stdin=r'5 1\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20') == '6\\n'\n"
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 1, \"Incorrect output for the given input\"\n"
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\").read()) == \"1\\n\""
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 1, \"Expected output: 1\""
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n4 3\n0 1\n1 2\n2 3\n\"\"\") == \"1\\n\""
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"1\\n\"\n"
    },
    {
        "number": 3379,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin='4 3\\n0 1\\n1 2\\n2 3') == '1\\n'\nprint('All tests pass')"
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == sample_output, \"Your function doesn't match the expected output.\""
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(4) == 0.962962962963\n"
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"0.962962962963\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"0.962962962963\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(2) == \"0.963\"\n"
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r')) == \"0.962962962963\"\n"
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 0.962962962963, \"Correctly solves the problem\""
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"0.962962962963\", \"Error: solution not correct\"\nprint(\"Correct\")"
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"0.962962962963\""
    },
    {
        "number": 3380,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(4) == '0.962962962963', 'Incorrect output'\n"
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"0 0\\n40000000 0\\n0 40000000\\n\"\n"
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"0 0\\n40000000 0\\n0 40000000\""
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"0 0\\n40000000 0\\n0 40000000\\n\"\nassert solution(\"4\") == \"40000000 0\\n0 40000000\\n0 0\\n\"\nassert solution(\"5\") == \"0 0\\n0 40000000\\n0 40000000\\n\""
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == '0 0\\n40000000 0\\n0 40000000\\n', \"Test case 1 failed\"\nassert solution(4) == '0 0\\n40000000 0\\n0 40000000\\n0 0\\n40000000 40000000\\n0 40000000\\n0 0\\n', \"Test case 2 failed\"\nassert solution(5) == '0 0\\n40000000 0\\n0 40000000\\n0 0\\n40000000 40000000\\n0 40000000\\n0 0\\n0 0\\n40000000 40000000\\n', \"Test case 3 failed\"\nassert solution(6) == '0 0\\n40000000 0\\n0 40000000\\n0 0\\n40000000 40000000\\n0 40000000\\n0 0\\n0 0\\n40000000 40000000\\n0 0\\n', \"Test case 4 failed\"\nassert solution(7) == '0 0\\n40000000 0\\n0 40000000\\n0 0\\n40000000 40000000\\n0 40000000\\n0 0\\n0 0\\n40000000 40000000\\n0 0\\n', \"Test case 5 failed\"\nassert solution(8) == '0 0\\n40000000 0\\n0 40000000\\n0 0\\n40000000 40000000\\n0 40000000\\n0 0\\n0 0\\n40000000 40000000\\n0 0\\n0 0\\n40000000 0\\n', \"Test case 6 failed\"\nassert solution(9) == '0 0\\n40000000 0\\n0 40000000\\n0 0\\n40000000 40000000\\n0 40000000\\n0 0\\n0 0\\n40000000 40000000\\n0 0\\n0 0\\n40000000 40000000\\n0 0\\n0 0\\n', \"Test case 7 failed\"\nassert solution(10) == '0 0\\n40000000 0\\n0 40000000\\n0 0\\n40000000 40000000\\n0 40000000\\n0 0\\n0 0\\n40000000 40000000\\n0 0\\n0 0\\n40000000 40000000\\n0 0\\n0 0\\n40000000 40000000\\n0 0\\n0 0\\n', \"Test case 8 failed\"\nassert solution(11) == '0 0\\n40000000 0\\n0 40000000\\n0 0\\n40000000 40000000\\n0 40000000\\n0 0\\n0 0\\n40000000 400"
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"0 0\\n40000000 0\\n0 40000000\""
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n\") == \"0 0\\n40000000 0\\n0 40000000\\n\"\nassert solution(\"5\\n\") == \"0 0\\n40000000 0\\n40000000 0\\n40000000 0\\n40000000 0\\n\"\nassert solution(\"10\\n\") == \"0 0\\n40000000 0\\n40000000 0\\n40000000 0\\n40000000 0\\n40000000 0\\n40000000 0\\n40000000 0\\n40000000 0\\n40000000 0\\n\""
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"\"\"\n0 0\n40000000 0\n0 40000000\n\"\"\""
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"0 0\\n40000000 0\\n0 40000000\""
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == '0 0\\n40000000 0\\n0 40000000'"
    },
    {
        "number": 3381,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 5 5 2') == '1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'\n"
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3 5 5 2) == \"1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5 5 2\") == \"1\"\nassert solution(\"2 3 4 9\") == \"impossible\"\nassert solution(\"1 2 3 4\") == \"impossible\"\nassert solution(\"10 5 3 2\") == \"impossible\""
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5 5 2\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 5 5 2\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"2 3 4 9\") == \"impossible\"\nassert solution(\"1 2 3 4\") == \"impossible\"\nassert solution(\"4 100 100 100\") == \"impossible\"\n"
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 5 5 2') == '1'\nassert solution('2 3 4 9') == 'impossible'"
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 5 5 2\") == \"1\"\nassert solution(\"2 3 4 9\") == \"0\"\nassert solution(\"1 2 3 4 5\") == \"0\""
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, but got {solution(input())}.\""
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 5 5 2\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3382,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 5 5 2\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"\nassert solution(\"2 3 4 9\") == \"impossible\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"\nassert solution(\"1 1 1 1\") == \"impossible\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"2\"\n"
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"2\"\nassert solution(\"10 2 3 4\\n0 0 0\") == \"0\""
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"2\""
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"2\\n0\\n\"  # expected output: 2\nassert solution(\"10 2 1 3\\n40 0 0\\n0 0 0\\n0 0 0\") == \"0\\n\"  # expected output: 0\n"
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output"
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('20 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0') == '2'\nassert solution('50 5 100 100\\n-10 -10 100 100') == '1250'\nassert solution('10 3 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0') == '0'"
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    20 3 5 5\n    0 0 0\n    0 -10 0\n    30 0 0\n    0 0 0\n    \"\"\"\n) == \"2\\n\""
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"0\\n\"\n"
    },
    {
        "number": 3383,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"0\", \"Your code is not correct\""
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(13) == \"12 14\""
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(13) == '12 14'"
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Solution does not match the expected output.\\nExpected: {output()}\\nGot: {solution(input())}\"\n"
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(13) == \"12 14\""
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('13') == '12 14', \"Please provide the correct input.\""
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"13\") == \"12 14\", \"Test failed for the given solution.\""
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"13\") == \"12 14\"\nassert solution(\"123456\") == \"12 13 14 15 16\"\nassert solution(\"1234567890\") == \"12 13 14 15 16 17 18 19 20\"\nassert solution(\"1234567891\") == \"12 13 14 15 16 17 18 19 20\"\nassert solution(\"1234567892\") == \"12 13 14 15 16 17 18 19 20\"\nassert solution(\"1234567893\") == \"12 13 14 15 16 17 18 19 20\"\nassert solution(\"1234567894\") == \"12 13 14 15 16 17 18 19 20\"\nassert solution(\"1234567895\") == \"12 13 14 15 16 17 18 19 20\"\nassert solution(\"1234567896\") == \"12 13 14 15 16 17 18 19 20\"\nassert solution(\"1234567897\") == \"12 13 14 15 16 17 18 19 20\"\nassert solution(\"1234567898\") == \"12 13 14 15 16 17 18 19 20\"\nassert solution(\"1234567899\") == \"12 13 14 15 16 17 18 19 20\""
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"13\") == \"12 14\"\n"
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"13\") == \"12 14\\n\", \"Test case 1 failed\"\nassert solution(\"24\") == \"24\\n\", \"Test case 2 failed\"\nassert solution(\"35\") == \"12 14\\n\", \"Test case 3 failed\"\nassert solution(\"200\") == \"200\\n\", \"Test case 4 failed\"\nassert solution(\"1234567890\") == \"1234567890\\n\", \"Test case 5 failed\""
    },
    {
        "number": 3384,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(13) == \"12 14\", \"Sample Output\""
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 0 # You can modify the value as per your requirements."
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r')) == '0\\n'\nassert solution(open('input2.txt', 'r')) == '0\\n'\n"
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\") == 0\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n\") == 0\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n4 0 1\\n4 0 0\\n\") == 2\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n4 0 1\\n4 0 0\\n5 0 0\\n\") == 0\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n4 0 1\\n4 0 0\\n5 0 0\\n6 0 1\\n\") == 0\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n4 0 1\\n4 0 0\\n5 0 0\\n6 0 1\\n7 0 0\\n\") == 0"
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == \"0\\n\", \"Solution incorrect\""
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\") == 0\nassert solution(\"5\\n2 0 0\\n0 1 1\\n3 1 1\\n2 0 1\\n3 0 1\") == 1\nassert solution(\"5\\n2 0 0\\n0 1 1\\n3 1 1\\n2 0 1\\n3 0 1\\n\") == 0\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n\") == 0\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n\") == 1\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n\") == 1\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n\") == 0\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n\") == 1\n"
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\") == 0\nassert solution(\"1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n\") == 0\nassert solution(\"1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n4 0 1\\n5 0 1\\n\") == 0\nassert solution(\"1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n2 1 1\\n3 1 1\\n\") == 0\nassert solution(\"1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n2 1 1\\n3 1 1\\n4 1 1\\n\") == 0"
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 0"
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\") == \"0\\n\"\nassert solution(\"4\\n1 0 0\\n1 0 1\\n2 0 1\\n2 0 0\\n2 0 1\") == \"4\\n\"\nassert solution(\"1\\n1 0 0\") == \"1\\n\"\nassert solution(\"1\\n1 1 1\") == \"1\\n\"\nassert solution(\"3\\n0 1 0\\n1 1 1\\n1 1 0\\n0 1 0\") == \"3\\n\"\nassert solution(\"3\\n0 1 0\\n1 1 1\\n1 1 0\\n0 1 1\") == \"0\\n\"\nassert solution(\"1\\n1 0 1\") == \"1\\n\"\nassert solution(\"5\\n0 1 0\\n1 1 1\\n1 1 0\\n0 1 0\\n1 0 1\") == \"5\\n\"\nassert solution(\"3\\n1 1 1\\n1 0 1\\n1 0 0\\n0 1 0\") == \"2\\n\"\nassert solution(\"5\\n1 1 0\\n1 1 1\\n1 0 1\\n1 0 0\\n1 1 1\") == \"5\\n\"\nassert solution(\"3\\n0 1 1\\n1 1 1\\n1 1 0\\n0 1 1\") == \"0\\n\"\nassert solution(\"3\\n0 1 1\\n1 1 1\\n1 1 0\\n0 1 0\") == \"0\\n\"\nassert solution(\"1\\n1 1 1\") == \"1\\n\"\n"
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(str(input())) == \"0\"\n"
    },
    {
        "number": 3385,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input) == output, f\"Expected {output}, got {solution(input)}\""
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 3\\n') == '1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n'"
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 3\\n') == '1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n'\nassert solution('3 4\\n') == '1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n'\nassert solution('4 3\\n') == '1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n'\nassert solution('5 5\\n') == '1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n'\nassert solution('1 1\\n') == '1 1\\n'\nassert solution('5 10\\n') == '1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n'"
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    2 3\n    1 1\n    2 2\n    1 3\n    2 1\n    1 2\n    2 3\n    \"\"\"\n) == \"\"\"\n    1 1\n    2 2\n    1 3\n    2 1\n    1 2\n    2 3\n    \"\"\""
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"The output is not correct. Please check your code and make sure you have provided the correct input and expected output.\""
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n\"\n"
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == [1, 1]\nassert solution(\"2 4\") == [1, 1, 2, 2]\nassert solution(\"3 4\") == [1, 1, 2, 2, 1, 1]\nassert solution(\"5 5\") == [1, 1, 2, 2, 1, 1, 2, 2, 1, 1]\nassert solution(\"6 6\") == [1, 1, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2]\nassert solution(\"7 7\") == [1, 1, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2, 1, 1]\nassert solution(\"8 8\") == [1, 1, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2]\nassert solution(\"9 9\") == [1, 1, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2, 1, 1]\nassert solution(\"10 10\") == [1, 1, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2]\nassert solution(\"11 11\") == [1, 1, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2, 1, 1]\nassert solution(\"12 12\") == [1, 1, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2]\nassert solution(\"13 13\") == [1, 1, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2, 1, 1]\nassert solution(\"14 14\") == [1, 1, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2]\nassert solution(\"15 15\") == [1, 1, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2, 1, 1]\nassert solution(\"16 16\") == [1, 1, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2]\nassert solution(\"17 17\") == [1, 1, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2, 1, 1, 2, 2, 1,"
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == -1, \"Test case 1 failed.\"\n\nassert solution() == -1, \"Test case 2 failed.\"\n\nassert solution() == -1, \"Test case 3 failed.\"\n\nassert solution() == -1, \"Test case 4 failed.\"\n\nassert solution() == -1, \"Test case 5 failed.\""
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n\""
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n\"\nassert solution(\"4 5\\n\") == \"-1\\n\"\nassert solution(\"1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n\") == \"1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n\"\nassert solution(\"3 3\\n\") == \"-1\\n\"\nassert solution(\"2 2\\n3 3\\n4 4\\n5 5\\n\") == \"1 2\\n2 1\\n3 4\\n4 3\\n5 5\\n\"\nassert solution(\"5 5\\n\") == \"1 1\\n2 3\\n4 2\\n5 1\\n1 3\\n4 5\\n2 4\\n3 5\\n\""
    },
    {
        "number": 3386,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == sample_output"
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 10\\n0 10 1\\n0 10 1\\n0 10 1\") == \"3.33333333\\n3.33333333\\n3.33333333\"\n\nassert solution(\"3 10\\n0 10 2\\n0 10 1\\n0 10 1\") == \"2.66666667\\n2.66666667\\n2.66666667\"\n\nassert solution(\"3 10\\n0 10 1\\n0 10 1\\n0 10 1\") == \"3.33333333\\n3.33333333\\n3.33333333\""
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"3.33333333\"\nassert solution(input()) == \"3.33333333\"\nassert solution(input()) == \"3.33333333\""
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 10\\n0 10 1\\n0 10 1\\n0 10 1\") == \"3.33333333\\n3.33333333\\n3.33333333\"\nassert solution(\"2 2\\n2 1\\n1 1\") == \"2.0\"\nassert solution(\"3 10\\n0 5 2\\n0 5 2\\n0 5 2\") == \"4.0\"\nassert solution(\"5 20\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\n10 1 2\\"
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '3.33333333'\nassert solution() == '3.33333333'\nassert solution() == '3.33333333'"
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 10\\n0 10 1\\n0 10 1\\n0 10 1\") == \"3.33333333\\n3.33333333\\n3.33333333\""
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '3.33333333\\n3.33333333\\n3.33333333'\n"
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 10\\n0 10 1\\n0 10 1\\n0 10 1\") == \"3.33333333\\n3.33333333\\n3.33333333\""
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(None) == 'not accepted'\n\nsolution = '''\nfrom typing import List"
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed.\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3387,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 10\\n0 10 1\\n0 10 1\\n0 10 1\") == \"3.33333333\\n3.33333333\\n3.33333333\"\nassert solution(\"4 10\\n1 20 1\\n1 20 1\\n1 20 1\") == \"3.0\\n3.0\\n3.0\"\nassert solution(\"3 10\\n1 5 1\\n1 5 1\\n1 5 1\") == \"2.5\\n2.5\\n2.5\"\nassert solution(\"5 10\\n1 10 1\\n1 10 1\\n1 10 1\") == \"2.5\\n2.5\\n2.5\""
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n3 3 2') == '1'\nprint(\"All tests passed!\")"
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1\\n1\""
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1\\n\"\n"
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=input()) == '1\\n' + '1\\n'"
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3\n3 3 2) == 1\n"
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r')) == '1'"
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin='3\\n3 3 2\\n') == '1\\n'\nassert solution(stdin='3\\n4 2 2\\n') == '2\\n'\nassert solution(stdin='3\\n3 4 3\\n') == '0\\n'\nassert solution(stdin='3\\n3 3 3\\n') == '1\\n'"
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1\\n\"\n"
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1\\n\"\nassert solution(stdin) == \"1\\n\"\nassert solution(stdin) == \"1\\n\""
    },
    {
        "number": 3388,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"1\\n\"\n\nsolution(3)"
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\nabba\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"3 2\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo\\ncat\\nbooboo"
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 2\\nabba') == '2\\n'\n"
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\nabba\\n\") == \"2\"\nassert solution(\"5 3\\nabc\\ndefg\\nhij\\n\") == \"1\"\nassert solution(\"4 3\\nabc\\ndef\\nghi\\n\") == \"1\"\nassert solution(\"6 3\\nabc\\ndef\\nghi\\n\") == \"2\""
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}\\nGot: {solution(input())}\""
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 2\n"
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\nabab\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 2\n"
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\nabba\") == 2, \"Test 1\"\nassert solution(\"3 3\\nabbb\") == 2, \"Test 2\"\nassert solution(\"3 2\\nabbb\") == 2, \"Test 3\"\nassert solution(\"4 2\\nabbba\") == 3, \"Test 4\""
    },
    {
        "number": 3389,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\nabba\") == 2"
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n2 4\") == \"3\"\nassert solution(\"4 5\\n1 2\\n1 3\\n2 4\\n3 5\") == \"2\"\nassert solution(\"4 4\\n1 2\\n1 3\\n1 4\\n2 3\") == \"2\"\nassert solution(\"4 6\\n1 2\\n1 3\\n1 4\\n1 5\\n2 3\\n2 4\\n3 4\\n3 5\") == \"1\"\nassert solution(\"4 7\\n1 2\\n1 3\\n1 4\\n1 5\\n2 3\\n2 4\\n2 5\\n3 4\\n3 5\\n3 6\") == \"0\""
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n2 4\") == \"3\"\nassert solution(\"4 3\\n1 2\\n2 4\\n1 3\") == \"4\"\nassert solution(\"4 3\\n1 2\\n2 4\\n1 3\\n1 4\") == \"6\""
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n2 4\") == 3\n"
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"The output is incorrect. \\nInput: {input()}\\nOutput: {output}\""
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"3\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 3\\n1 2\\n2 3\\n2 4') == 3, \"Expected output: 3, but got: {}\".format(solution('4 3\\n1 2\\n2 3\\n2 4'))"
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n4 3\n1 2\n2 3\n2 4\n''') == '3'\n"
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n2 4\\n\") == 3, \"Incorrect output\"\n"
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n2 4\") == 3\nassert solution(\"3 4\\n1 2\\n2 3\\n1 3\\n1 4\\n2 5\") == 5\nassert solution(\"1 1\\n2 2\\n3 3\\n4 4\") == 1\n"
    },
    {
        "number": 3390,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n2 4\") == 3\n"
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r').read()) == 'Output: 0\\n'"
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3') == '1\\n0\\n'"
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3\") == \"1\\n0\"\nassert solution(\"3 4\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3\\n4 4\") == \"0\"\n\nfrom typing import List"
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1\\n0\\n\"\n"
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '1\\n0\\n', \"Test Case 1 failed\"\n\nassert solution() == '0\\n1\\n', \"Test Case 2 failed\""
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3\\n\") == \"1\\n0\\n\""
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"1\\n0\"\nassert solution() == \"1\\n1\"\nassert solution() == \"0\\n1\"\nassert solution() == \"0\\n0\""
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3\\n\") == \"1\\n0\\n\"\nassert solution(\"2 3\\n2 3\\n\") == \"1\\n1\\n\"\nassert solution(\"1 1\\n1 2\\n1 3\\n1 4\\n2 4\\n\") == \"1\\n1\\n\"\nassert solution(\"1 0\\n0 1\\n1 1\\n1 2\\n1 3\\n\") == \"1\\n1\\n\"\nassert solution(\"1000 1\\n1 3\\n2 3\\n2 4\\n1001 1\\n\") == \"1\\n1\\n\"\nassert solution(\"1 1\\n1 2\\n1 3\\n1 4\\n2 4\\n2 5\\n\") == \"1\\n1\\n\"\nassert solution(\"1 1\\n1 2\\n1 3\\n1 4\\n2 4\\n2 5\\n2 6\\n\") == \"1\\n1\\n\"\nassert solution(\"1 1\\n1 2\\n1 3\\n1 4\\n2 4\\n2 5\\n2 6\\n2 7\\n\") == \"1\\n1\\n\"\nassert solution(\"1 1\\n1 2\\n1 3\\n1 4\\n2 4\\n2 5\\n2 6\\n2 7\\n2 8\\n\") == \"1\\n1\\n\"\nassert solution(\"1 1\\n1 2\\n1 3\\n1 4\\n2 4\\n2 5\\n2 6\\n2 7\\n2 8\\n2 9\\n\") == \"1\\n1\\n\"\nassert solution(\"1 1\\n1 2\\n1 3\\n1 4\\n2 4\\n2 5\\n2 6\\n2 7\\n2 8\\n2 9\\n2 10\\n\") == \"1\\n1\\n\"\nassert solution(\"1 1\\n1 2\\n1 3\\n1 4\\n2 4\\n2 5\\n2 6\\n2 7\\n2 8\\n2 9\\n2 10\\n2 11\\n\") == \"1\\n1\\n\"\nassert solution(\"1 1\\n1 2\\n1 3\\n1 4\\n2 4\\n2 5\\n2 6\\n2 7\\n2 8\\n2 9\\n2 10\\n2 11\\n2 12\\n\") == \"1\\n1\\n\"\nassert solution(\"1 1\\n1 2\\n1 3\\n1 4\\n2 4\\n2 5\\n2 6\\n2 7\\n2 8\\n2 9\\n2 10\\n2 11\\n2 12\\n2 13\\n\") == \"1\\n1\\n\"\nassert solution(\"1 1\\n1 2\\n1 3\\n1 4\\n2 4\\n2 5\\n2 6\\n2 7\\n2 8\\n2 9\\n2 10\\n2 11\\n2 12\\n2 13\\n2 14\\n\") == \"1\\n1\\n\"\nassert solution(\"1 1\\n1 2\\n1 3\\n1 4\\n2 4\\n2 5\\n2 6\\n2 7\\n2 8\\n2 9\\n2 10\\n2 11\\n2 12\\n2 13\\n2 14\\n2 15\\n\") == \"1\\n1\\n\"\nassert solution(\"1 1\\n1 2\\n1 3\\n1 4\\n2 4\\n2 5\\n2 6\\n2 7\\n2 8\\n2 9\\"
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3\\n\") == \"1\\n0\\n\\n\"\nassert solution(\"2 3\\n1 2\\n3 4\\n5 6\\n7 8\\n\") == \"1\\n0\\n\"\nassert solution(\"1 0\\n-1 1\\n1 0\\n\") == \"1\\n1\\n\"\nassert solution(\"5 10\\n1 1\\n4 3\\n7 9\\n\") == \"4\\n3\\n\""
    },
    {
        "number": 3391,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3\") == \"1\\n0\"\nassert solution(\"4 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3\") == \"2\"\nassert solution(\"3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 4\") == \"1\"\nassert solution(\"5 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 4\") == \"1\"\nassert solution(\"4 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3\") == \"1\"\nassert solution(\"6 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 4\") == \"2\"\nassert solution(\"3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 4\") == \"2\"\nassert solution(\"2 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 4\") == \"1\"\nassert solution(\"3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 5\") == \"1\"\nassert solution(\"4 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 5\") == \"2\"\nassert solution(\"5 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 5\") == \"2\"\nassert solution(\"6 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 5\") == \"2\""
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"7\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nif __name__ == '__main__':\\n    solution(input())\\n\"\nassert solution(6) == \"18\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nif __name__ == '__main__':\\n    solution(input())\\n\"\nassert solution(10) == \"21\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nif __name__ == '__main__':\\n    solution(input())\\n\""
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 7, \"The solution is incorrect.\""
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"7\\ndef solution(stdin: str) -> str:\\npass\\n\""
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"7\" # correct output\n"
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 2 3\\n3 2 2\\n5 2 1\\n3 2 1\\n1 2 1\\n1 2 3\") == \"7\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"def solution(stdin: str) -> str:\\n    pass\\n\\nif __name__ == '__main__':\\n    main()\\n\""
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"7\\n\""
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 2 3\\n3 2 2\\n5 2 1\\n3 2 1\\n1 2 1\\n1 2 3\") == 7, \"Error: The function should return the required output.\""
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3392,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"7\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# This is the solution to the problem\\n# You can add your code here\\n\\n# Example usage:\\n# print(solution()) # Output: the required number\\n\\n# You can also use the provided code to test the correctness of your solution.\\n\"\n"
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"20\\n\"\n"
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\") == \"20\"\n"
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\") == \"20\""
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\") == \"20\"\n"
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r').read()) == '20'"
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\\n\") == \"20\"\nassert solution(\"5 2\\nlinearalgebra 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\\n\") == \"150\"\nassert solution(\"5 2\\nlinearalgebra 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\\n\") == \"20\"\nassert solution(\"5 2\\nlinearalgebra 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\\n\") == \"20\""
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\") == 20\n"
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 20, \"Test case failed.\""
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\") == \"20\\n\""
    },
    {
        "number": 3393,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\") == \"20\\n\"\n"
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 4\\n1 2 2\\n2 3 4\\n3 4 1\\n4 1 2\\n3\\n1 4 2\\n3 3 3\\n4 3 6\\n') == 6\n"
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 4\\n1 2 2\\n2 3 4\\n3 4 1\\n4 1 2\\n3') == 6"
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 6"
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n4 4\n1 2 2\n2 3 4\n3 4 1\n4 1 2\n3\n1 4 2\n3 3 3\n4 3 6\n''') == 6\n"
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 6, \"Your solution is incorrect.\"\n"
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"6\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\n1 2 2\\n2 3 4\\n3 4 1\\n4 1 2\\n3\") == 6, \"The correct output should be 6.\"\n\nassert solution(\"4 4\\n1 2 2\\n2 3 4\\n3 4 1\\n4 1 2\\n3\") == 6, \"The correct output should be 6.\""
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == sample_output"
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"6\", \"The correct answer is: 6\""
    },
    {
        "number": 3394,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 4\\n1 2 2\\n2 3 4\\n3 4 1\\n4 1 2\\n3\\n1 4 2\\n3 3 3\\n4 3 6') == 6, \"The output should be 6\""
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n    3 1 1\n    2\n    3\n    1 2\n    2 3 1\n    1 1\n    ''') == '2'\n\nassert solution('''\n    3 1 1\n    2\n    3\n    1 2\n    2 3 1\n    1 1\n    ''') == 'impossible'\n\nassert solution('''\n    3 1 1\n    2\n    3\n    1 2\n    2 3 1\n    1 1\n    ''') == '2'\n\nassert solution('''\n    3 1 1\n    2\n    3\n    1 2\n    2 3 1\n    1 1\n    ''') == 'impossible'"
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\\n\") == \"2\"\nassert solution(\"5 5\\n1\\n3\\n5\\n3\\n2\\n1\\n1\\n1\\n\") == \"impossible\"\n"
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3 1 1\n2\n3\n1 2\n2 3 1\n1 1\n\"\"\") == \"2\\n\"\nassert solution(\"\"\"\n3 2 1\n2\n3\n1 2\n2 3 1\n1 1\n\"\"\") == \"impossible\\n\"\nassert solution(\"\"\"\n3 1 1\n2\n3\n1 2\n2 3 1\n1 1\n\"\"\") == \"2\\n\"\nassert solution(\"\"\"\n3 2 1\n2\n3\n1 2\n2 3 1\n1 1\n\"\"\") == \"impossible\\n\""
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2\\n\""
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n3 1 1\n2\n3\n1 2\n2 3 1\n1 1\n''') == '2\\n'"
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2\", \"Test case not implemented\""
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"impossible\""
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1') == '2'\nassert solution('3 2 2\\n1\\n1\\n1') == 'impossible'"
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\\n\") == \"2\\n\"\nassert solution(\"3 10 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\\n\") == \"impossible\\n\"\nassert solution(\"3 2 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\\n\") == \"impossible\\n\"\nassert solution(\"4 2 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\\n\") == \"impossible\\n\"\nassert solution(\"2 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\\n\") == \"impossible\\n\"\nassert solution(\"2 2 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\\n\") == \"impossible\\n\"\nassert solution(\"3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\\n\") == \"impossible\\n\""
    },
    {
        "number": 3395,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1') == '2'\nassert solution('3 1 2\\n4\\n5\\n1 2\\n2 3 1\\n1 1') == 'impossible'\nassert solution('3 1 1\\n2\\n3\\n1 2\\n2 3 2\\n1 1') == '2'\n"
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"500.00\"\n"
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\n250 250\\n250 750\\n') == '500.00'"
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=sample_stdin) == sample_output, f\"Expected output: '{sample_output}', but got: '{solution(stdin=sample_stdin)}'.\""
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n250 250\\n250 750') == 500.0, \"Expected 500.00, got {}\".format(solution('2\\n250 250\\n250 750'))"
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == \"500.00\""
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == 500.0\nprint(\"All tests passed\")"
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n250 250\\n250 750\\n\") == 500.00, \"The output is incorrect.\"\nassert solution(\"2\\n250 250\\n250 750\\n300 1000\\n\") == 750.00, \"The output is incorrect.\"\nassert solution(\"2\\n250 250\\n250 750\\n200 1000\\n\") == 500.00, \"The output is incorrect.\"\nassert solution(\"2\\n250 250\\n250 750\\n1000 300\\n\") == 750.00, \"The output is incorrect.\"\nassert solution(\"2\\n250 250\\n250 750\\n250 250\\n\") == 500.00, \"The output is incorrect.\""
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '500.00', 'Incorrect output'"
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '500.00', 'Your solution is incorrect'\n"
    },
    {
        "number": 3396,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(250, 250) == 500.00, \"Invalid output\""
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n2 100 10\\n100 1 10\") == \"0\\n0\\n0\""
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 3\\n2 100 10\\n100 1 10') == 0"
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n2 100 10\\n100 1 10\") == \"0\\n\"\nassert solution(\"2 3\\n2 100 10\\n100 2 10\") == \"20\\n\"\nassert solution(\"3 2\\n2 100 10\\n100 2 10\") == \"20\\n\"\nassert solution(\"2 3\\n2 100 10\\n100 2 20\") == \"40\\n\"\nassert solution(\"2 3\\n2 100 10\\n100 2 20\") == \"40\\n\"\nassert solution(\"2 3\\n2 100 10\\n100 2 20\") == \"40\\n\"\n"
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 0, \"The output is incorrect.\""
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n2 100 10\\n100 1 10\\n\") == \"0\"\nassert solution(\"2 3\\n2 100 10\\n100 1 50\\n\") == \"100\"\nassert solution(\"3 4\\n4 5 6\\n1 3\\n3 4 5\\n\") == \"15\"\nassert solution(\"3 4\\n4 5 6\\n1 3\\n3 4 5\\n\") == \"15\"\nassert solution(\"3 4\\n4 5 6\\n1 3\\n3 4 5\\n\") == \"15\""
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 3\\n2 100 10\\n100 1 10') == '0'"
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n2 100 10\\n100 1 10\") == 0\nassert solution(\"4 3\\n2 100 10\\n100 1 10\\n100 2 10\\n100 3 10\") == 0\nassert solution(\"5 3\\n2 100 10\\n100 1 10\\n100 2 10\\n100 3 10\\n100 4 10\") == 0\nassert solution(\"6 3\\n2 100 10\\n100 1 10\\n100 2 10\\n100 3 10\\n100 4 10\\n100 5 10\") == 0\nassert solution(\"7 3\\n2 100 10\\n100 1 10\\n100 2 10\\n100 3 10\\n100 4 10\\n100 5 10\\n100 6 10\") == 0"
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 0, \"Test Failed\""
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3397,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 3\\n2 100 10\\n100 1 10') == '0'\nassert solution('2 10\\n1 200 30\\n1 20 40\\n1 10 50') == '0'\nassert solution('3 2\\n5 300 20\\n5 20 30\\n5 10 40') == '120'\nassert solution('4 1\\n100 500 40\\n100 40 50\\n100 30 60') == '0'\nassert solution('1 100 500\\n1 50 600\\n1 40 700') == '100'"
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\") == \"2\"\n"
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35') == '2'\nassert solution('80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35') == '2'"
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\") == \"2\"\n"
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2\\n\" # Expected output: 2\n"
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    80 50 3 2\n    75 5 25 20 50 35\n    50 5 25 35\n    \"\"\"\n) == \"2\\n\""
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\") == \"2\""
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\").read()) == \"2\\n\"\n"
    },
    {
        "number": 3398,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2\\n\""
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 4\\n2211\\n1112\\n1112') == 'AAAA\\n..A\\n....\\n...B\\nBBBB\\n...C\\nCCCC\\nimpossible'"
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3,4) == 'AAAA'\nassert solution(2,2) == 'B...'\nassert solution(2,1) == 'C..'\nassert solution(2,0) == 'impossible'\nassert solution(3,3) == 'BBBB'\nassert solution(4,2) == 'CCCC'"
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4\\n2211\\n1112\\n1112\") == \"AAAA\\n...\\nA\\n....\\n\\nBB..\\nBBBB\\n...\\nB\\n....\\n\\n....\\n...C\\nCCCC\\nimpossible\"\nassert solution(\"3 4\\n2211\\n1112\\n1112\\n1112\") == \"impossible\"\nassert solution(\"3 4\\n2211\\n1112\\n1112\\n1112\\n1112\") == \"impossible\"\nassert solution(\"3 4\\n2211\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n"
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4\\n2211\\n1112\\n1112\\n\") == \"AAAA\\n....\\n...B\\nBBBB\\nCCCC\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4\\n2211\\n1112\\n1112\") == \"AAAA\\n...A\\n....\\n\\nBB..\\nBBBB\\n...B\\n\\n....\\n...C\\nCCCC\"\nassert solution(\"3 4\\n2211\\n1112\\n1111\") == \"impossible\"\nassert solution(\"3 4\\n2211\\n1112\\n1112\\n1111\\n1111\") == \"impossible\"\nassert solution(\"3 4\\n2211\\n1112\\n1111\\n1111\") == \"impossible\"\nassert solution(\"3 4\\n2211\\n1111\\n1111\\n1111\") == \"impossible\"\n"
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\n2211\\n1112\\n1112\\n\") == \"AAAA\"\nassert solution(\"3 4\\n2211\\n1112\\n1112\\n1\\n\") == \"BB..BBBB\"\nassert solution(\"3 4\\n2211\\n1112\\n1112\\n2\\n\") == \"impossible\""
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4\\n2211\\n1112\\n1112\\n\") == \"AAAA\\n...A\\n....\\n\\nBB..\\nBBBB\\n...B\\n\\n....\\n...C\\nCCCC\""
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\n2211\\n1112\\n1112\") == \"AAAA\\n....\\n....\\nCCCC\"\nassert solution(\"4 4\\n2211\\n1112\\n1112\") == \"BB.\\n..C\\n..C\\n.C.\"\nassert solution(\"5 4\\n2211\\n1112\\n1112\") == \"impossible\"\nassert solution(\"3 4\\n1111\\n1111\\n1111\") == \"impossible\"\nassert solution(\"4 4\\n1111\\n1111\\n1111\") == \"BB.\\n..C\\n..C\\n.C.\"\nassert solution(\"5 4\\n1111\\n1111\\n1111\") == \"impossible\"\nassert solution(\"3 4\\n2222\\n2222\\n2222\") == \"impossible\"\nassert solution(\"4 4\\n2222\\n2222\\n2222\") == \"BB.\\n..C\\n..C\\n.C.\"\nassert solution(\"5 4\\n2222\\n2222\\n2222\") == \"impossible\""
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"3 4\\n2211\\n1112\\n1112\") == \"AAAA\\n...A\\n....\\nBBBB\\n...B\\nCCCC\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nprint(solution('3 4\\n2211\\n1112\\n1112'))  # Output: AAAAA\\nprint(solution('5 4\\n2211\\n1112\\n1112\\n1112'))  # Output: impossible\""
    },
    {
        "number": 3399,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"AAAA\"\nassert solution() == \"...A\"\nassert solution() == \"....\"\nassert solution() == \"...C\"\nassert solution() == \"def\""
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"9\\n\", \"Test failed for Alice and Rabbit.\""
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"Alice: How can it be?\\nRabbit: Trust me Alice. It always takes the same time. When I go from my home up the road to Queen of Hearts\u2019 Castle, my watch counts nine hours. However, if I continue down to Mad Hatter\u2019s House, my watch counts just two hours in total. Isn\u2019t that great?\\nAlice: How can it be Rabbit?\\nRabbit: Trust me Alice! It is all recorded in my logbook. You can check it. All my trips are there...\\nAlice: Rabbit, I do not think it can help me...\\nRabbit: Alice, no matter where you are, or where you want to go, or the track you choose, you\u2019ll be able to find how long it takes you.\\nAlice: Really?\\nRabbit: For sure!\\nPoor Rabbit, poor Alice.\\nWhite Rabbit is helping Alice finding a quick way home through the Rabbit\u2019s hole with his holy logbook of trips. The problem lies in the chronometer of its bizarre pocket watch (it displays the hours from zero to $12$), and the way the Rabbit counts the time with it: If a journey takes $14$ hours (real time), seeing the pointer resting above number one, he assumes it took one hour. Can you help Alice finding how long the shortest path home takes, using the Rabbit\u2019s logbook of trips?\""
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3') == 9, \"The output is not correct.\"\n"
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '9'\n"
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\""
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3') == 9\nprint('All tests passed')"
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3\") == \"9\"\n"
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3, 1, 3, 3) == 9\nassert solution(3, 4, 1, 2, 3, 2) == 11\nassert solution(4, 3, 1, 2, 1) == 5\nassert solution(1, 4, 1, 2, 1, 3) == 5\n"
    },
    {
        "number": 3400,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 9, \"The correct output should be: 9\"\n"
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 2 2 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5\\n\") == \"20.396078\"\n"
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    6 2 2 8\n    0 0 6\n    3 4 7\n    0 8 8\n    6 8 8\n    6 0 6\n    6 4 8\n    3 4\n    1 5\n    \"\"\"\n) == \"20.396078\""
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"test_input.txt\", \"r\").read()) == \"20.396078\\n\""
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 2 2 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5\") == 20.396078"
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 2 2 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5\") == \"20.396078\""
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n6 2 2 8\n0 0 6\n3 4 7\n0 8 8\n6 8 8\n6 0 6\n6 4 8\n3 4\n1 5\n''') == '20.396078'\n\nfrom typing import List"
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 2 2 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5\") == 20.396078\nassert solution(\"5 4 1 5\\n0 2 1\\n2 4 1\\n3 6 1\") == 0.0\nassert solution(\"3 2 1 5\\n0 2 1\\n1 1 1\\n2 1 1\") == 0.0\nassert solution(\"2 2 1 1\\n0 1 1\\n1 1 1\\n2 1 1\") == 1.0\nassert solution(\"1 2 1 1\\n0 1 1\\n1 1 1\\n2 1 1\") == 1.0\nassert solution(\"0 0 1 1\\n0 1 1\\n1 1 1\\n2 1 1\") == 1.0\n"
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"6 2 2 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5\"\n) == \"20.396078\\n\""
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == expected_output, f\"Test failed. Expected output: {expected_output}, got {solution}\""
    },
    {
        "number": 3401,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 20.396078\n"
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\\n1\\n2\\n1 8\") == \"b\\nc\\ndef\"\n\nprint(\"Test passed\")"
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abca\") == \"b\"\nassert solution(\"bc cd da dd ee ff gg hh ii jj kk ll mm nn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"cdefghijklmnoqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz\"\nassert solution(\"1\") == \"b\"\nassert solution(\"2\") == \"c\"\nassert solution(\"1 8\") == \"b\"\n"
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abca\") == \"b\"\nassert solution(\"bc cd da dd ee ff gg hh ii jj kk ll mm nn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"b\"\nassert solution(\"1 8\") == \"b\"\n\nfor i, test_case in enumerate(input()):\n    assert solution(test_case) == test_case.split()[-1]\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abca\") == \"b\"\nassert solution(\"bc cd da dd ee ff gg hh ii jj kk ll mm nn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"c\""
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"b\"\nassert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"c\"\nassert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"def\""
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nn oo pp qq rr ss tt uu vv ww xx yy zz\\n1\\n2\\n1 8') == 'b\\nc\\ndef'\n"
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_data) == expected_output, f\"Test failed. Expected: {expected_output}, Received: {solution(input_data)}\""
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nn nn oo pp qq rr ss tt uu vv ww xx yy zz\\n1\\n2\\n1 8\") == \"b\\nc\\ndef\"\n"
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abca\\nbc\\ncd\\nda\\ndd\\nee\\nff\\ngg\\nhh\\nii\\njj\\nkk\\nll\\nmm\\nnn\\noo\\npp\\nqq\\nrr\\nss\\ntt\\nuu\\nvv\\nww\\nxx\\nyy\\nzz\") == \"b\\nc\\ndef\\ndef\"\nassert solution(\"abca\\nbc\\ncd\\nda\\ndd\\nee\\nff\\ngg\\nhh\\nii\\njj\\nkk\\nll\\nmm\\nnn\\noo\\npp\\nqq\\nrr\\nss\\ntt\\nuu\\nvv\\nww\\nxx\\nyy\\nzz\") == \"b\\nc\\ndef\\ndef\"\nassert solution(\"abca\\nbc\\ncd\\nda\\ndd\\nee\\nff\\ngg\\nhh\\nii\\njj\\nkk\\nll\\nmm\\nnn\\noo\\npp\\nqq\\nrr\\nss\\ntt\\nuu\\nvv\\nww\\nxx\\nyy\\nzz\") == \"b\\nc\\ndef\\ndef\""
    },
    {
        "number": 3402,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\\n1\\n2\\n1 8\") == \"b\\nc\\ndef\"\n\nassert solution(\"abcd\\nefg hij klm noq rty ui wvw xxy yyy zzz\") == \"efg\\nhij\\nklm\\nnoq\\nrty\\nuu\\n\"\n\nassert solution(\"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvw"
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"hobotnica\\nrobot\\nhobi\\nhobit\\nrobi\\n4\\nrobi\\nhobi\\nhobit\\nrakija\") == \"def solution(stdin: str) -> str:\\n\\tpass\\n\\n\", \"The correctness of the solution is not verified.\"\n\nfrom typing import List"
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r').read()) == ['hobit', 'hobi', 'robi', 'rakija']"
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(str(10)) == \"10\"\nassert solution(str(123456789)) == \"123456789\"\nassert solution(str(1234567890)) == \"1234567890\"\n\nfrom functools import lru_cache"
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\nhobotnica\\nrobot\\nhobi\\nhobit\\nrobi\\n4\\nrobi\\nhobi\\nhobit\\nrakija') == '12\\n10\\n16\\n7\\ndef solution(stdin: str) -> str:\\n    pass'\n"
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"abc\", \"Incorrect Output\""
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r').read()) == '12\\n10\\n16\\n7\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('hobotnica') == 'ide'\nassert solution('robot') == 'ro'\nassert solution('hobi') == 'hib'\nassert solution('hobit') == 'hib'\nassert solution('robi') == 'hib'\nassert solution('hobi') == 'hib'\nassert solution('hobit') == 'hib'\nassert solution('rakija') == 'rak'"
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"12\\n10\\n16\\n7\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3403,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"12\\n10\\n16\\n7\\ndef solution(stdin: str) -> str:\\n    pass\", \"The solution is not correct\""
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"THIS IS A TEST\"\n"
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"14 4\\nJQ IRKEYFG EXQ\") == \"THIS IS A TEST\"\n"
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"14 4\\nJQ IRKEYFG EXQ\") == \"THIS IS A TEST\"\n"
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"14 4\\nJQ IRKEYFG EXQ\") == \"THIS IS A TEST\""
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('14 4\\nJQ IRKEYFG EXQ') == 'THIS IS A TEST'"
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"14 4\\nJQ IRKEYFG EXQ\\n\") == \"THIS IS A TEST\"\n\nHere's the solution code for the problem:\n\n```python\n"
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"14 4\\nJQ IRKEYFG EXQ\") == \"THIS IS A TEST\""
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('14 4\\nJQ IRKEYFG EXQ') == 'THIS IS A TEST'\n"
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"14 4\\nJQ IRKEYFG EXQ\\n\") == \"THIS IS A TEST\""
    },
    {
        "number": 3404,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('14 4\\nJQ IRKEYFG EXQ') == 'THIS IS A TEST'\nassert solution('15 5\\nQZ LKNG QRW') == 'QZ RKNW QRW'\nassert solution('16 6\\nXY WZ UVW') == 'XYZ UVW'\nassert solution('17 7\\nABCDEFGHIJKLMNOPQRSTUVWXYZ') == 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\nassert solution('18 8\\n1234567890123456789012345678901234567890') == '1234567890123456789012345678901234567890'\nassert solution('19 9\\n
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2.6\") == \"135\\n270\\n135135\\n270270\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(2.6) == \"135\\n270\"\nassert solution(0.5) == \"1\\n2\"\nassert solution(1.23456789) == \"No solution\"\nassert solution(1000.123) == \"No solution\"\nassert solution(0) == \"No solution\""
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"135\\n270\\n135135\\n270270\\n\""
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(2.6) == [\"135\", \"270\"]\n\nLukas wants to demonstrate that this last method works for any $X$. To do this he will ask his audience for values of $X$ and then show them example multiplications for which the method works. Lukas has noticed that he can not just pick arbitrary numbers for his examples, so now he wants your help. Can you write a program that given $X$ gives a list of integers for which multiplying by $X$ is equivalent to moving the first digit to the end of the number? Lukas does not like very large numbers so do not list any numbers with more than 8 digits.\n\n-----Input-----\nThe input is a single decimal number $X$ ($1\\leq X < 1000$) with at most 4 digits after the decimal point.\n\n-----Output-----\nOutput a list of all positive integers less than $10^8$ for which Lukas\u2019 second trick works. Write the numbers in ascending order, one number per line. If the list is empty, output instead \u201cNo solution\u201d.\n\n-----Examples-----\nSample Input:\n2.6\nSample Output:\n135\n270\n135135\n270270"
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"135\\n270\\n135135\\n270270\\n\"\nassert solution(input()) == \"No solution\\n\""
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(2.6) == [\"135\", \"270\", \"135135\", \"270270\"]\n\nimport math"
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2.6\") == \"135\\n270\\n135135\\n270270\"\n"
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2.6') == '135\\n270'\nassert solution('2.3') == '270'\nassert solution('0.3') == '270'\nassert solution('123456789012345678901234567890') == 'No solution'"
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3.14159) == ['135', '270', '135135', '270270']\n"
    },
    {
        "number": 3405,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"2.6\") == \"135\\n270\\n135135\\n270270\\n\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\\n') == '4\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"4\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"4\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\") == \"4\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\") == 4\nassert solution(\"4\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\\n\") == 4"
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\") == \"4\\ndef solution(stdin: str) -> str:\n    pass\""
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\\n') == '4\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n"
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(None) == 4\nassert solution('''\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n''') == 4\nassert solution('''\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n''') == 0"
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '4\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'\n"
    },
    {
        "number": 3406,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\") == \"4\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"4\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\\n0 0\") == \"0\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"The solution to the given problem is:\\n\\n0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\""
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == sample_output"
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000'"
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n1 2\\n1 3\\n1 4\\n1 5\\n') == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000'"
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution\nsolution"
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000'"
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 2\\n1 3\\n1 4\\n1 5\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\"\nassert solution(\"10\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\""
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test failed: Solution not correct.\\nInput: {input()}\\nExpected Output: {expected_output}\\nActual Output: {solution(input())}\""
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3407,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output() for input, output in zip(get_input(), get_output())"
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\naaa\\nabc\\naba\\na*a\\naaa*\\n*aaa\\n\") == \"2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"3 3\\nabc\\naba\\na*a\\naaa*\\n*aaa\\n\") == \"2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"3 3\\nabc\\naba\\na*a\\naaa*\\n*aaa\\n\") == \"2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\naaa\\nabc\\naba\\na*a\\naaa*\\n*aaa\\n\") == \"2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nprint(solution())\"\nassert solution(\"1 2\\naa\\nbbb\\ncc\\naa\") == \"2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nprint(solution())\""
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\""
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\naaa\\nabc\\naba\\na*a\\naaa*\\n*aaa\") == \"2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"3 3\\naaa\\nabc\\naba\\na*a\\naaa*\\n*aaa\\n\") == \"2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2\\n1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\naaa\\nabc\\naba\\na*a\\naaa*\") == \"2\\n1\\n1\\ndef solution(stdin: str) -> str:\\npass\\n\"\nassert solution(\"3 3\\nbba\\na*a\\nbba\\na*a\\nbba\\n\") == \"2\\n1\\n1\\ndef solution(stdin: str) -> str:\\npass\\n\"\nassert solution(\"3 3\\nbba\\na*a\\nbba\\n*b\") == \"2\\n1\\n1\\ndef solution(stdin: str) -> str:\\npass\\n\"\nassert solution(\"3 3\\na*a\\na*a\\na*a\") == \"2\\n1\\n1\\ndef solution(stdin: str) -> str:\\npass\\n\"\nassert solution(\"3 3\\nbbb\\n*b\\n*b\\n*b\") == \"2\\n2\\n1\\ndef solution(stdin: str) -> str:\\npass\\n\"\nassert solution(\"10 5\\naaa\\naaa\\naaa\\naaa\\nbba\\nbba\\nbba\\n\") == \"5\\n2\\n3\\n3\\n1\\ndef solution(stdin: str) -> str:\\npass\\n\""
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3408,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\naaa\\nabc\\naba\\na*a\\naaa*\\n*aaa\") == \"2\\n1\\n1\\ndef solution(stdin: str) -> str: return '2\\\\n1\\\\n1'\\n\""
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed. Expected output: {expected_output}, got: {solution(input())}\"\n"
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n') == '1'\n"
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == \"1\"\nassert solution(\"4 2\\nXO\\nOO\\nXO\\nOO\\n\") == \"0\"\nassert solution(\"4 2\\nOO\\nXO\\nXO\\nXO\\n\") == \"1\"\nassert solution(\"4 2\\nXO\\nOX\\nOO\\nXO\\n\") == \"0\""
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Solution doesn't match the expected output.\\nInput: {input()}\\nExpected Output: {expected}\""
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == 1\nassert solution(\"4 2\\nXO\\nOX\\nX\\nXO\\nXO\\nOO\\nXO\\nOO\\n\") == 0\nassert solution(\"4 2\\nXO\\nOX\\nX\\nXO\\nXO\\nOO\\nX\\nOO\\n\") == 0\nassert solution(\"4 2\\nXO\\nOX\\nX\\nXO\\nXO\\nOO\\nX\\nOO\\n\") == 0\nassert solution(\"4 2\\nXO\\nOX\\nX\\nXO\\nXO\\nOO\\nX\\nOO\\n\") == 0\nassert solution(\"4 2\\nXO\\nOX\\nX\\nXO\\nXO\\nOO\\nX\\nOO\\n\") == 0\nassert solution(\"4 2\\nXO\\nOX\\nX\\nXO\\nXO\\nOO\\nX\\nOO\\n\") == 0\nassert solution(\"4 2\\nXO\\nOX\\nX\\nXO\\nXO\\nOO\\nX\\nOO\\n\") == 0\nassert solution(\"4 2\\nXO\\nOX\\nX\\nXO\\nXO\\nOO\\nX\\nOO\\n\") == 0\nassert solution(\"4 2\\nXO\\nOX\\nX\\nXO\\nXO\\nOO\\nX\\nOO\\n\") == 0\nassert solution(\"4 2\\nXO\\nOX\\nX\\nXO\\nXO\\nOO\\nX\\nOO\\n\") == 0\nassert solution(\"4 2\\nXO\\nOX\\nX\\nXO\\nXO\\nOO\\nX\\nOO\\n\") == 0\nassert solution(\"4 2\\nXO\\nOX\\nX\\nXO\\nXO\\nOO\\nX\\nOO\\n\") == 0\nassert solution(\"4 2\\nXO\\nOX\\nX\\nXO\\nXO\\nOO\\nX\\nOO\\n\") == 0\nassert solution(\"4 2\\nXO\\nOX\\nX\\nXO\\nXO\\nOO\\nX\\nOO\\n\") == 0\nassert solution(\"4 2\\nXO\\nOX\\nX\\nXO\\nXO\\nOO\\nX\\nOO\\n\") == 0\nassert solution(\"4 2\\nXO\\nOX\\nX\\nXO\\nXO\\nOO\\nX\\nOO\\n\") == 0\nassert solution(\"4 2\\nXO\\nOX\\nX\\nXO\\nXO\\nOO\\nX\\nOO\\n\") == 0\nassert solution(\"4 2\\nXO\\nOX\\nX\\nXO\\nXO\\nOO\\nX\\nOO\\n\") == 0\nassert solution(\"4 2\\nXO\\nOX\\nX\\nXO\\nXO\\nOO\\nX\\nOO\\n\") == 0\nassert solution(\"4 2\\nXO\\nOX\\nX\\nXO\\nXO\\nOO\\nX\\nOO\\n\") == 0\nassert solution(\"4 2\\nXO\\nOX\\nX\\nXO\\nXO\\nOO\\nX\\nOO\\n\") == 0\nassert solution(\"4 2\\nXO\\nOX\\nX\\nXO\\nXO\\nOO\\nX\\nOO\\n\") == 0\nassert solution(\"4 2\\nXO\\nOX\\nX\\nXO\\nXO\\nOO\\nX\\nOO\\n\") == 0\nassert solution(\"4 2\\nXO\\nOX\\nX\\nXO\\nXO\\nOO\\nX\\nOO\\n\") == 0\nassert solution(\"4 2\\nXO\\nOX\\nX\\nXO\\nXO\\nOO\\nX\\nOO\\n\") == 0\nassert solution(\"4 2\\nXO\\nOX\\nX\\nXO\\nXO\\nOO\\nX\\nOO\\n\") == 0\nassert solution(\"4 2\\nXO\\nOX\\nX\\nXO\\nXO\\nOO\\nX"
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(4, 2) == 1\nassert solution(5, 2) == 0\nassert solution(4, 3) == 1\nassert solution(5, 3) == 0\nassert solution(4, 4) == 0\nassert solution(5, 4) == 1\nassert solution(4, 5) == 1\nassert solution(5, 5) == 1"
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == 1\n"
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n') == '1'\nassert solution('4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n') == '0'"
    },
    {
        "number": 3409,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n2 0\\n0 2\\n-2 0\") == \"16\\n\"\nassert solution(\"3\\n0 1\\n2 3\") == \"12\\n\"\nassert solution(\"4\\n3 3\\n1 2\\n0 3\") == \"13\\n\"\nassert solution(\"3\\n2 1\\n1 3\") == \"10\\n\"\nassert solution(\"2\\n1 1\\n2 2\") == \"2\\n\"\nassert solution(\"5\\n2 1\\n0 2\\n-1 0\\n-1 1\") == \"36\\n\"\n"
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '16'\n"
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n2 0\\n0 2\\n-2 0\\n0 -2') == '16\\n'\n"
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n2 0\\n0 2\\n-2 0\\n0 -2') == '16'\n"
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"4\\n2 0\\n0 2\\n-2 0\\n0 -2\\n\") == \"16\\n\""
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n2 0\\n0 2\\n-2 0') == 16\nassert solution('3\\n0 0\\n0 1\\n1 0') == 11\nassert solution('5\\n1 0\\n0 1\\n1 1\\n0 2\\n1 2') == 39\nassert solution('4\\n1000000000 0\\n0 1000000000\\n-1000000000 0') == 1000000000\nassert solution('3\\n1000000000 0\\n0 1000000000\\n-1000000000 0') == 1000000000"
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"16\\n\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n2 0\\n0 2\\n-2 0\") == \"16\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '16'\nprint(\"All tests passed successfully.\")"
    },
    {
        "number": 3410,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n2 0\\n0 2\\n-2 0\\n0 -2\") == \"16\"\nassert solution(\"6\\n3 2\\n2 3\\n2 4\\n3 4\\n4 3\") == \"24\"\nassert solution(\"8\\n1 2\\n2 3\\n4 5\\n3 6\\n5 7\\n6 4\\n7 5\\n8 6\") == \"70\"\nassert solution(\"3\\n0 0\\n1 1\\n2 2\") == \"5\"\nassert solution(\"7\\n-1 -2\\n0 -1\\n2 2\\n1 1\\n2 -1\\n-2 1\\n1 0\") == \"13\"\nassert solution(\"11\\n-4 -3\\n-3 -2\\n-2 -1\\n-1 0\\n0 1\\n1 2\\n2 1\\n1 2\\n-1 -2\\n2 -1\\n1 -2\\n-1 -3\") == \"30\""
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n4 10 50\n8 8 2 -2\n''') == '80'"
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input1) == \"80\\n\"\n\nsample_input1 = \"\"\"\n4 10 50\n8 8 2 -2\n\"\"\""
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == 80, \"Incorrect output.\"\n"
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input1) == '80'"
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"80\"\nassert solution(input()) == \"100\"\nassert solution(input()) == \"150\"\nassert solution(input()) == \"200\""
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 10 50\\n8 8 2 -2') == '80'"
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n4 10 50\n8 8 2 -2\n''') == '80'"
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 10 50\\n8 8 2 -2\") == \"80\""
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '80', \"Your solution is incorrect.\""
    },
    {
        "number": 3411,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 80, \"Solution is incorrect.\""
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"3.000000000\""
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6') == '3.000000000'\nassert solution('1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\\n10 10') == '6.000000000'\nassert solution('1 100\\n0 0 100 100\\n5 5\\n5 5\\n3\\n5 5\\n2 2\\n9 9\\n10 10') == '100.000000000'\nassert solution('1 100\\n0 0 100 100\\n5 5\\n5 5\\n3\\n5 5\\n2 2\\n9 9\\n10 10\\n10 10') == '100.000000000'\nassert solution('1 100\\n0 0 100 100\\n5 5\\n5 5\\n3\\n5 5\\n2 2\\n9 9\\n10 10\\n10 10\\n10 10') == '100.000000000'\nassert solution('1 100\\n0 0 100 100\\n5 5\\n5 5\\n3\\n5 5\\n2 2\\n9 9\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10') == '100.000000000'\nassert solution('1 100\\n0 0 100 100\\n5 5\\n5 5\\n3\\n5 5\\n2 2\\n9 9\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10') == '100.000000000'\nassert solution('1 100\\n0 0 100 100\\n5 5\\n5 5\\n3\\n5 5\\n2 2\\n9 9\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10') == '100.000000000'"
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"3.000000000\""
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"3.000000000\""
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"3.000000000\"\n"
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\\n\") == \"3.000000000\"\nassert solution(\"1 7\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\\n\") == \"2.000000000\"\nassert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\\n\") == \"3.000000000\"\nassert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\\n\") == \"3.000000000\""
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"3.000000000\"\nassert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"3.000000000\"\nassert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"3.000000000\"\n"
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''1 8\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n9 6''') == '3.000000000'"
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\\n\") == \"3.000000000\""
    },
    {
        "number": 3412,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"Solution\""
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n4 3\n0 1 0 0\n1 2\n2 3\n2 4\n''') == '1'\n\nassert solution('''\n3 4\n0 0 1 0\n0 0 1 0\n0 0 1 0\n''') == '2'\n\nassert solution('''\n5 5\n0 0 0 1 0\n0 0 0 1 0\n0 0 0 1 0\n0 0 0 1 0\n0 0 0 1 0\n''') == '3'\n\nassert solution('''\n3 2\n0 0 1\n0 0 1\n1 1 1\n''') == '1'\n\nassert solution('''\n4 3\n1 0 0 0\n0 1 0 0\n1 0 0 0\n1 0 0 0\n''') == '2'\n\nassert solution('''\n5 4\n1 0 0 0\n0 0 1 0\n1 0 0 0\n0 1 0 0\n0 0 1 0\n''') == '3'\n\nassert solution('''\n2 3\n0 0 1\n0 0 1\n1 1 1\n''') == '1'\n\nassert solution('''\n5 4\n1 0 0 0\n0 0 1 0\n1 0 0 0\n0 1 0 0\n0 0 1 0\n''') == '3'"
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1\"\n"
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == \"1\""
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == \"1\""
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(None) == \"Error: Input not provided.\""
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == \"1\\n\"\nassert solution(\"4 3\\n0 1\\n1 2\\n2 3\\n2 4\") == \"0\\n\"\nassert solution(\"5 4\\n0 0 0 1\\n1 1 1 0\\n0 1 0 0\\n0 0 1 1\\n1 0 1 0\") == \"2\\n\""
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"1\"\n"
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1\\n\"\nprint(\"Test passed\")"
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == 1, \"Expected 1, got {}\".format(solution(stdin=input()))"
    },
    {
        "number": 3413,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == \"1\\n\"\n"
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"6.283185\""
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '6.283185\\n'"
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2') == 6.283185\nassert solution('4 4\\n0 0\\n0 1\\n1 0\\n1 1\\n2 0\\n2 1\\n3 0\\n3 1\\n4 0\\n4 1') == 3.141592653589793\nassert solution('5 5\\n0 0\\n0 1\\n1 0\\n1 1\\n2 0\\n2 1\\n3 0\\n3 1\\n4 0\\n4 1\\n5 0\\n5 1\\n6 0\\n6 1\\n7 0\\n7 1\\n8 0\\n8 1\\n9 0\\n9 1\\n10 0\\n10 1\\n11 0\\n11 1\\n12 0\\n12 1\\n13 0\\n13 1\\n14 0\\n14 1\\n15 0\\n15 1\\n16 0\\n16 1\\n17 0\\n17 1\\n18 0\\n18 1\\n19 0\\n19 1\\n20 0\\n20 1\\n21 0\\n21 1\\n22 0\\n22 1\\n23 0\\n23 1\\n24 0\\n24 1\\n25 0\\n25 1\\n26 0\\n26 1\\n27 0\\n27 1\\n28 0\\n28 1\\n29 0\\n29 1\\n30 0\\n30 1\\n31 0\\n31 1\\n32 0\\n32 1\\n33 0\\n33 1\\n34 0\\n34 1\\n35 0\\n35 1\\n36 0\\n36 1\\n37 0\\n37 1\\n38 0\\n38 1\\n39 0\\n39 1\\n40 0\\n40 1\\n41 0\\n41 1\\n42 0\\n42 1\\n43 0\\n43 1\\n44 0\\n44 1\\n45 0\\n45 1\\n46 0\\n46 1\\n47 0\\n47 1\\n48 0\\n48 1\\n49 0\\n49 1\\n50 0\\n50 1\\n51 0\\n51 1\\n52 0\\n52 1\\n53 0\\n53 1\\n54 0\\n54 1\\n55 0\\n55 1\\n56 0\\n56 1\\n57 0\\n57 1\\n58 0\\n58 1\\n59 0\\n59 1\\n60 0\\n60 1\\n61 0\\n61 1\\n62 0\\n62 1\\n63 0\\n63 1\\n64 0\\n64 1\\n65 0\\n65 1\\n66 0\\n66 1\\n67 0\\n67 1\\n68 0\\n68 1\\n69 0\\n69 1\\n70 0\\n70 1\\n71 0\\n71 1\\n72 0\\n72 1\\n73 0\\n73 1\\n74 0\\n74 1\\n75 0\\n75 1\\n7"
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == solution(sample_output), \"The solution is incorrect\""
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2') == '6.283185'"
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    3 3\n    0 0\n    0 1\n    1 0\n    0 1\n    0 2\n    1 2\n    \"\"\"\n) == \"6.283185\""
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2\") == 6.283185\n"
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2') == '6.283185'"
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2') == '6.283185'"
    },
    {
        "number": 3414,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"The least amount of turning you must do to complete an Eulerian circuit, in radians. The answer must be correct within an absolute or relative error of $10^{-6}$.\\n\""
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(2) == '1 2 3', 'Solution is incorrect.'"
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(4) == \"1 2 3 4 5 6 7 8 9\"\nassert solution(5) == \"1 2 3 4 5 6 7 8 9 10\"\nassert solution(6) == \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\"\nassert solution(7) == \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 "
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"1 2 3\\n\", \"The first assertion in the solution should pass.\"\nassert solution(\"3\") == \"1 2 3\\n\", \"The second assertion in the solution should pass.\"\nassert solution(\"4\") == \"1 2 3 4\\n\", \"The third assertion in the solution should pass.\"\nassert solution(\"5\") == \"1 2 3 4 5\\n\", \"The fourth assertion in the solution should pass.\"\nassert solution(\"6\") == \"1 2 3 4 5 6\\n\", \"The fifth assertion in the solution should pass.\"\nassert solution(\"7\") == \"1 2 3 4 5 6 7\\n\", \"The sixth assertion in the solution should pass.\"\nassert solution(\"8\") == \"1 2 3 4 5 6 7 8\\n\", \"The seventh assertion in the solution should pass.\"\nassert solution(\"9\") == \"1 2 3 4 5 6 7 8 9\\n\", \"The eighth assertion in the solution should pass.\"\nassert solution(\"10\") == \"1 2 3 4 5 6 7 8 9 10\\n\", \"The ninth assertion in the solution should pass.\"\nassert solution(\"11\") == \"1 2 3 4 5 6 7 8 9 10 11\\n\", \"The tenth assertion in the solution should pass.\"\nassert solution(\"12\") == \"1 2 3 4 5 6 7 8 9 10 11 12\\n\", \"The eleventh assertion in the solution should pass.\"\nassert solution(\"13\") == \"1 2 3 4 5 6 7 8 9 10 11 12 13\\n\", \"The twelfth assertion in the solution should pass.\"\nassert solution(\"14\") == \"1 2 3 4 5 6 7 8 9 10 11 12 13 14\\n\", \"The thirteenth assertion in the solution should pass.\"\nassert solution(\"15\") == \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\\n\", \"The fourteenth assertion in the solution should pass.\"\nassert solution(\"16\") == \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\\n\", \"The fifteenth assertion in the solution should pass.\"\nassert solution(\"17\") == \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\\n\", \"The sixteenth assertion in the solution should pass.\"\nassert solution(\"18\") == \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18\\n\", \"The seventeenth assertion in the solution should pass.\"\nassert solution(\"19\") == \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\\n\", \"The eighteenth assertion in the solution should pass.\"\nassert solution(\"20\") == \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\\n\", \"The nineteenth assertion in the solution should pass.\"\nassert solution(\"21\") == \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21\\n\", \"The twentieth assertion in the solution should pass.\"\nassert solution(\"22\") == \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 "
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1 2 3\\n\", \"The solution should output the binary tree in the preorder traversal\""
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(2) == '1 2 3'"
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n\") == \"1 2 3\"\nassert solution(\"5\\n\") == \"1 2 3 4 5\"\nassert solution(\"8\\n\") == \"1 2 3 4 5 6 7 8\""
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"1 2 3\\n\", \"Your solution is incorrect\""
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"1 2 3\"\nassert solution(\"3\") == \"1 2 3\"\nassert solution(\"4\") == \"1 2 3\"\nassert solution(\"5\") == \"1 2 3\"\nassert solution(\"6\") == \"1 2 3\"\nassert solution(\"7\") == \"1 2 3\"\nassert solution(\"8\") == \"1 2 3\"\nassert solution(\"9\") == \"1 2 3\"\nassert solution(\"10\") == \"1 2 3\"\nassert solution(\"11\") == \"1 2 3\"\nassert solution(\"12\") == \"1 2 3\"\nassert solution(\"13\") == \"1 2 3\"\nassert solution(\"14\") == \"1 2 3\"\nassert solution(\"15\") == \"1 2 3\""
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=None) == \"1 2 3\\n\", \"your solution is incorrect\""
    },
    {
        "number": 3415,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"1 2 3\"\nprint(solution(3))"
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 4\\n1 2\\n1 3\\n2 4\\n3 4\\n') == '1\\n1 2 3 4\\n'\n"
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '1 2 3 4'"
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4\\n1 2\\n1 3\\n2 4\\n3 4\") == \"1\\n1 2 3 4\""
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected, f\"Test case failed. Expected: {expected}, got: {solution(stdin)}\""
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\n1 2\\n1 3\\n2 4\\n3 4\") == \"1\\n1 2 3 4\\n\"\n"
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Expected {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\n1 2\\n1 3\\n2 4\\n3 4\\n\") == \"1\\n1 2 3 4\\n\"\nassert solution(\"4 4\\n1 2\\n1 3\\n2 4\\n3 4\\n5 6\\n\") == \"1\\n1 2 3 4\\n\"\nassert solution(\"3 4\\n1 2\\n2 3\\n3 4\\n\") == \"1 2\\n2 3\\n\"\nassert solution(\"3 4\\n1 2\\n2 3\\n3 4\\n5 6\\n\") == \"1\\n2 3\\n\""
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, but got {solution(input())} instead.\""
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 4\\n1 2\\n1 3\\n2 4\\n3 4') == '1\\n1 2 3 4'"
    },
    {
        "number": 3416,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n1 2\\n1 3\\n2 4\\n3 4\\n\") == \"1\\n1 2 3 4\\n\"\n"
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1\\n1 2\\n\") == \"1\""
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1\\n1 2\\n\") == \"1\\n\"\n"
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 1\\n1 2') == '1\\n'\n\nprint(\"All tests passed\")"
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == sample_output, \\\n\"Test case failed. Please check your solution.\""
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1\\n\"\nassert solution(\"5\\n\") == \"5\\n\"\nassert solution(\"5\\n1 2\\n3 4\\n1 3\\n\") == \"4\\n\"\n"
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"1\\n\", \"The number of vertices in a maximum independent set of a simple connected graph is 1.\""
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 1\\n1 2\\n') == '1\\n'"
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 1, \"Test case not correct\""
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1\\n1 2\") == \"1\\n\"\n"
    },
    {
        "number": 3417,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == sample_output, f\"Sample Input: {sample_input}, Sample Output: {sample_output}\""
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(2) == 45, \"The output for n = 2 should be 45\""
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(2) == 45"
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(2) == \"45\", \"Test case 1 failed.\"\nassert solution(5) == \"45\", \"Test case 2 failed.\"\nassert solution(7) == \"45\", \"Test case 3 failed.\"\nassert solution(10) == \"45\", \"Test case 4 failed.\"\nassert solution(15) == \"45\", \"Test case 5 failed.\""
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(2) == \"45\"\n\nfrom math import log"
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(2) == 45, \"Test 1\"\n\nfrom math import log"
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(2) == \"45\"\n"
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 45, \"Your solution is incorrect\""
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(2) == 45, \"Output should be 45\""
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(2) == 45"
    },
    {
        "number": 3418,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(2) == 45, \"Incorrect output\"\nassert solution(3) == 12, \"Incorrect output\"\nassert solution(4) == 6, \"Incorrect output\"\nassert solution(5) == 2, \"Incorrect output\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 20 20\\n7 11 9 12 2') == '4\\n'\nassert solution('5 20 20\\n7 11 9 12 3') == '5\\n'\nassert solution('5 20 20\\n7 11 10 12 2') == '5\\n'\nassert solution('5 20 20\\n7 11 10 12 3') == '6\\n'\nassert solution('5 20 20\\n7 11 10 12 4') == '6\\n'"
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n5 20 20\n7 11 9 12 2\n''') == '4'\n\nassert solution('''\n5 20 20\n7 11 10 12 2\n''') == '5'\n\nassert solution('''\n5 20 20\n7 11 10 12 2\n''') == '5'\n\nassert solution('''\n5 20 20\n7 11 10 12 2\n''') == '5'\n\nassert solution('''\n5 20 20\n7 11 10 12 2\n''') == '5'\n\nassert solution('''\n5 20 20\n7 11 10 12 2\n''') == '5'"
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"4\\n\", \"The output should be 4\""
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Solution: {solution(input())}, Expected: {expected}\"\n"
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 20 20\\n7 11 9 12 2\") == \"4\"\nassert solution(\"5 20 20\\n7 11 10 12 2\") == \"3\"\nassert solution(\"5 20 20\\n7 11 10 12 2\") == \"2\"\nassert solution(\"5 20 20\\n7 11 10 12 2\") == \"1\""
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Test failed: Expected output: {}. Got: {}\".format(output(), solution(input()))"
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 20 20\\n7 11 9 12 2\") == \"4\""
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 20 20\\n7 11 9 12 2\") == \"4\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"4\""
    },
    {
        "number": 3419,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 20 20\\n7 11 9 12 2') == '4'\nassert solution('5 20 20\\n7 11 9 12 2 50\\n10 12 5\\n15 10 5\\n25 25 20') == '20'\nassert solution('5 20 20\\n7 11 9 12 2 50\\n10 12 5\\n15 10 5\\n25 25 20 30\\n5 10 10 10 10\\n50 10 10 10 10') == '5'"
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\") == \"2\\n\"\nassert solution(\"2 2\\njohn 1 peter1\\nmary 1 george1\\n\") == \"1\\n\"\nassert solution(\"1 1\\nmark 1 michael1\\nbrian 1 pedro1\\n\") == \"1\\n\"\nassert solution(\"3 3\\njulia 1 luigi1\\nbob 1 jack1\\npeter 1 robert1\\n\") == \"2\\n\"\nassert solution(\"3 3\\njohn 1 peter1\\nmary 1 george1\\n\") == \"1\\n\"\nassert solution(\"3 3\\nmark 1 michael1\\nbrian 1 pedro1\\npeter 1 robert1\\n\") == \"2\\n\"\nassert solution(\"3 3\\njulia 1 luigi1\\nbrian 1 jack1\\npeter 1 robert1\\n\") == \"2\\n\""
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2\", \"Test Case 1 failed\""
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\") == \"2\"\nassert solution(\"2 2\\njohn 2 harry1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\") == \"4\"\nassert solution(\"2 2\\njohn 2 harry1\\npeter 2 barney1\\nlaura 1 lordoftherings\\ncharlie 1 lordoftherings\") == \"4\"\nassert solution(\"2 2\\njohn 2 harry1\\npeter 2 barney1\\nlaura 2 lordoftherings\\ncharlie 1 lordoftherings\") == \"4\"\nassert solution(\"2 2\\njohn 2 harry1\\npeter 2 barney1\\nlaura 2 lordoftherings\\nharry 3 hermione1\") == \"8\""
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\\n\", \"Test Case 1 Failed\""
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '2', 'Please modify the code to pass the provided test cases'\n"
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\") == \"2\"\nassert solution(\"5 3\\nAlice 2\\nBob 1\\nCharlie 1\\nDavid 1\\nEmily 2\\nFrank 3\\nGrace 1\\nHeidi 1\\nIvan 1\\nJudy 3\\nKaren 2\\nLily 1\\nMichael 2\\nNancy 1\\nOlivia 1\\nPeter 1\\nQuincy 2\\nRachel 2\\nRussell 2\\nSam 2\\nTina 1\\nTyler 1\\nUma 1\\nVictor 1\\nWalter 2\") == \"11\""
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 2, \"The expected output is incorrect.\""
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\") == 2"
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3420,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2\\n\", \"Output should start with a single number.\""
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"01\") == \"2 1\", \"Test case 1 failed\"\nassert solution(\"011\") == \"2 1\", \"Test case 2 failed\"\nassert solution(\"0111\") == \"2 1\", \"Test case 3 failed\"\nassert solution(\"01110\") == \"2 1\", \"Test case 4 failed\"\nassert solution(\"011101\") == \"2 1\", \"Test case 5 failed\"\nassert solution(\"0111011\") == \"2 1\", \"Test case 6 failed\"\nassert solution(\"01110111\") == \"2 1\", \"Test case 7 failed\"\nassert solution(\"011101111\") == \"2 1\", \"Test case 8 failed\"\nassert solution(\"0111011111\") == \"2 1\", \"Test case 9 failed\"\nassert solution(\"01110111111\") == \"2 1\", \"Test case 10 failed\"\nassert solution(\"011101111111\") == \"2 1\", \"Test case 11 failed\"\nassert solution(\"0111011111111\") == \"2 1\", \"Test case 12 failed\"\nassert solution(\"01110111111111\") == \"2 1\", \"Test case 13 failed\"\nassert solution(\"011101111111111\") == \"2 1\", \"Test case 14 failed\"\nassert solution(\"0111011111111111\") == \"2 1\", \"Test case 15 failed\"\nassert solution(\"01110111111111111\") == \"2 1\", \"Test case 16 failed\"\nassert solution(\"011101111111111111\") == \"2 1\", \"Test case 17 failed\"\nassert solution(\"0111011111111111111\") == \"2 1\", \"Test case 18 failed\"\nassert solution(\"01110111111111111111\") == \"2 1\", \"Test case 19 failed\"\nassert solution(\"011101111111111111111\") == \"2 1\", \"Test case 20 failed\"\nassert solution(\"0111011111111111111111\") == \"2 1\", \"Test case 21 failed\"\nassert solution(\"011101111111111111111111\") == \"2 1\", \"Test case 22 failed\"\nassert solution(\"0111011111111111111111111\") == \"2 1\", \"Test case 23 failed\"\nassert solution(\"01110111111111111111111111\") == \"2 1\", \"Test case 24 failed\"\nassert solution(\"0111011111111111111111111111\") == \"2 1\", \"Test case 25 failed\"\nassert solution(\"0111011111111111111111111111\") == \"2 1\", \"Test case 26 failed\"\nassert solution(\"011101111111111111111111111111\") == \"2 1\", \"Test case 27 failed\"\nassert solution(\"0111011111111111111111111111111\") == \"2 1\", \"Test case 28 failed\"\nassert solution(\"01110111111111111111111111111111\") == \"2 1\", \"Test case 29 failed\"\nassert solution(\"01110"
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1\\n01') == '2 1'"
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n01\") == \"2 1\"\nassert solution(\"2\\n00\") == \"2 0\"\nassert solution(\"3\\n011\") == \"3 1\"\nassert solution(\"4\\n0011\") == \"4 2\"\nassert solution(\"5\\n111111\") == \"5 2\"\n"
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n01\\n\") == \"2 1\"\n"
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '2 1'\nassert solution() == '2 1'\nassert solution() == '2 1'\nassert solution() == '2 1'\nassert solution() == '2 1'"
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n01\\n\") == \"2 1\\n\""
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n01\") == \"2 1\""
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1\\n01') == '2 1\\n'\n"
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2 1\"\n"
    },
    {
        "number": 3421,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2 1\", \"The given input is incorrect.\""
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test case {t+1} failed: got '{solution(input())}', expected '{expected_output}'\"\nprint(\"OK\")"
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\\n') == '4 3\\n2123\\n1012\\n2123\\n----\\n2233\\n2233\\n1111'\n"
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"4 3\\n2123\\n1012\\n2123\""
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input) == expected_output, f\"Test case failed: {solution(input)}!= {expected_output}\"\nfor i in range(1, 10):\n    assert solution(input) == expected_output, f\"Test case failed: {solution(input)}!= {expected_output}\"\nfor i in range(1, 4):\n    assert solution(input) == expected_output, f\"Test case failed: {solution(input)}!= {expected_output}\"\nassert solution(input) == expected_output, f\"Test case failed: {solution(input)}!= {expected_output}\"\n"
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Test failed. Got {solution(input())}, expected {expected}\""
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n2123\\n1012\\n2123\\n\"\nassert solution(\"3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\\n2\\n1\\n\") == \"4 3\\n2123\\n1012\\n2123\\n\""
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n2123\\n1012\\n2123\""
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n2123\\n1012\\n2123\\n----\\n2233\\n2233\\n1111\""
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == sample_output"
    },
    {
        "number": 3422,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n4 1\\n2123\\n2 2\\n21\\n10\\n2 2\\n23\\n12\") == \"4 3\\n2123\\n1012\\n2123\\n2233\\n2233\\n1111\""
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == 'atk\\nfreetype\\nglib2\\nlibattr\\nlibjpeg\\npcre\\ngrep\\nvim-common\\nxorg-x11-libs\\npango\\nzlib\\nlibtiff\\ngtk2\\nvim-X11'\n"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin: str) -> str:\n    n = int(stdin.strip())\n    packages = list(map(str.strip, stdin.readlines()))\n    dependencies = [list(map(str.strip, stdin.readline().split())) for _ in range(n - 1)]\n    package_dependencies = {}\n    for package, dependencies in dependencies:\n        package_dependencies[package] = dependencies\n\n    def topological_sort(dependencies):\n        visited = set()\n        result = []\n        stack = []\n\n        for package in dependencies:\n            if package not in visited:\n                stack.append(package)\n                visited.add(package)\n\n        while stack:\n            current = stack.pop()\n            result.append(current)\n\n            for dependency in dependencies[current]:\n                if dependency not in visited:\n                    stack.append(dependency)\n                    visited.add(dependency)\n\n        return result\n\n    def order_packages(package_dependencies):\n        dependencies = [[] for _ in range(n)]\n        for package, dependencies in package_dependencies.items():\n            dependencies = topological_sort(dependencies)\n            dependencies = [dependency for dependency in dependencies if dependency not in dependencies]\n            for dependency in dependencies:\n                dependencies.remove(dependency)\n                dependencies.insert(0, package)\n                dependencies = topological_sort(dependencies)\n                dependencies = [dependency for dependency in dependencies if dependency not in dependencies]\n            for dependency in dependencies:\n                dependencies.remove(dependency)\n                dependencies.append(package)\n                dependencies = topological_sort(dependencies)\n                dependencies = [dependency for dependency in dependencies if dependency not in dependencies]\n            for dependency in dependencies:\n                dependencies.remove(dependency)\n            for index, dependency in enumerate(dependencies):\n                dependencies[index] = [dependency]\n            for dependency in dependencies:\n                dependencies.remove(dependency)\n        return dependencies\n\n    order = order_packages(package_dependencies)\n    for i, package in enumerate(order):\n        print(f'{i+1}. {package}')"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"atk\\nfreetype\\nglib2\\nlibattr\\nlibjpeg\\npcre\\ngrep\\nvim-common\\nxorg-x11-libs\\npango\\nzlib\\nlibtiff\\ngtk2\\nvim-X11\""
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"libattr\\nvim-X11 vim-common gtk2 libattr\\nvim-common\\ngtk2 libtiff atk pango glib2\\nlibtiff zlib libjpeg\\natk\\npango xorg-x11-libs freetype glib2\\nglib2\\nzlib\\nlibjpeg\\nxorg-x11-libs grep freetype\\ngrep pcre pcre\\nfreetype\\n3\\nemacs xorg-x11 lisp\\nxorg-x11\\nlisp emacs\\n0\\n\"\n) == \"atk\\nfreetype\\nglib2\\nlibattr\\nlibjpeg\\npcre\\ngrep\\nvim-common\\nxorg-x11-libs\\npango\\nzlib\\nlibtiff\\ngtk2\\nvim-X11\\n\""
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin: str) == \"\"\"\natk\nfreetype\nglib2\nlibattr\nlibjpeg\npcre\ngrep\nvim-common\nxorg-x11-libs\npango\nzlib\nlibtiff\ngtk2\nvim-X11\n\"\"\""
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"atk\\nfreetype\\nglib2\\nlibattr\\nlibjpeg\\npcre\\ngrep\\nvim-common\\nxorg-x11-libs\\npango\\nzlib\\nlibtiff\\ngtk2\\nvim-X11\""
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"\"\"\natk\nfreetype\nglib2\nlibattr\nlibjpeg\npcre\ngrep\nvim-common\nxorg-x11-libs\npango\nzlib\nlibtiff\ngtk2\nvim-X11\n\"\"\""
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 'atk\\nfreetype\\nglib2\\nlibattr\\nlibjpeg\\npcre\\ngrep\\nvim-common\\nxorg-x11-libs\\npango\\nzlib\\nlibtiff\\ngtk2\\nvim-X11'\nprint(\"cannot be ordered\")"
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Solution mismatch for {stdin}\""
    },
    {
        "number": 3423,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin.read()) == '''\natk\nfreetype\nglib2\nlibattr\nlibjpeg\npcre\ngrep\nvim-common\nxorg-x11-libs\npango\nzlib\nlibtiff\ngtk2\nvim-X11\n'''"
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"16\", \"Your solution is incorrect.\"\nprint(\"Correct!\")"
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Test failed for {input()} and expected {output}\""
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"32 20\") == \"16\", \"Your code is not passing the test\"\nassert solution(\"30 10\") == \"10\", \"Your code is not passing the test\"\nassert solution(\"20000 200\") == \"32\", \"Your code is not passing the test\"\nassert solution(\"5 2\") == \"10\", \"Your code is not passing the test\"\nassert solution(\"10 10\") == \"32\", \"Your code is not passing the test\""
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"32 20\") == \"16\""
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('32 20') == '16'"
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"32 20\") == \"16\\n\"\n"
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('32 20') == '16'"
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"32 20\") == \"16\""
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(32) == 16, \"Expected output is 16, but got {}\".format(solution(32))  # Test case 1\nassert solution(100) == 16, \"Expected output is 16, but got {}\".format(solution(100))  # Test case 2\nassert solution(310) == 16, \"Expected output is 16, but got {}\".format(solution(310))  # Test case 3\nassert solution(321) == 16, \"Expected output is 16, but got {}\".format(solution(321))  # Test case 4\nassert solution(999) == 16, \"Expected output is 16, but got {}\".format(solution(999))  # Test case 5"
    },
    {
        "number": 3424,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin='32 20') == '16', \"Your solution should return the largest base 16 such that 32 can be interpreted as a number in base 16.\"\nassert solution(stdin='1000000000 1000000000') == '16', \"Your solution should return the largest base 16 such that 10^18 can be interpreted as a number in base 16.\"\nassert solution(stdin='1000000000 -1') == '16', \"Your solution should return the largest base 16 such that 10^18 can be interpreted as a number in base 16.\"\nassert solution(stdin='1000000000 10000000000') == '16', \"Your solution should return the largest base 16 such that 10^18 can be interpreted as a number in base 16.\""
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\n....\\n.#.#\\n....\") == \"5 13\""
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4\\n....\\n.#.#\\n....\\n\") == \"5 13\""
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"3 4\n....\n.#.#\n....\n\"\"\") == \"\"\"5 13\n"
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4\\n....\\n.#.#\\n....\\n\") == \"5 13\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '''def solution(stdin: str) -> str:\n    pass\n'''"
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n3 4\n....\n.#.#\n....\n''') == '''\n5 13\n"
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"5 13\"\n"
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(None) == \"Error: No input provided.\"\nassert solution(\"\") == \"Error: No input provided.\"\nassert solution(\"1\") == \"Error: No input provided.\"\nassert solution(\"5 5\") == \"Error: Invalid input.\"\nassert solution(\"3 4\") == \"Error: Invalid input.\"\nassert solution(\"3 4\\n....\\n..#..\") == \"Error: Invalid input.\"\nassert solution(\"3 4\\n....\\n..#.#\") == \"Error: Invalid input.\"\nassert solution(\"3 4\\n....\\n...#\") == \"Error: Invalid input.\"\nassert solution(\"3 4\\n....\\n..#..\") == \"Error: Invalid input.\"\nassert solution(\"3 4\\n....\\n.#.#\") == \"Error: Invalid input.\"\nassert solution(\"3 4\\n....\\n...#\") == \"Error: Invalid input.\"\nassert solution(\"3 4\\n....\\n...#\") == \"Error: Invalid input.\"\nassert solution(\"3 4\\n....\\n.#.#\") == \"Error: Invalid input.\"\nassert solution(\"3 4\\n....\\n..#.#\") == \"Error: Invalid input.\"\nassert solution(\"3 4\\n....\\n..#..\") == \"Error: Invalid input.\"\nassert solution(\"3 4\\n....\\n.#.#\") == \"Error: Invalid input.\"\nassert solution(\"3 4\\n....\\n...#\") == \"Error: Invalid input.\"\nassert solution(\"3 4\\n....\\n.#.#\") == \"Error: Invalid input.\"\nassert solution(\"3 4\\n....\\n...#\") == \"Error: Invalid input.\"\nassert solution(\"3 4\\n....\\n..#..\") == \"Error: Invalid input.\"\nassert solution(\"3 4\\n....\\n.#.#\") == \"Error: Invalid input.\"\nassert solution(\"3 4\\n....\\n...#\") == \"Error: Invalid input.\"\nassert solution(\"3 4\\n....\\n...#\") == \"Error: Invalid input.\"\nassert solution(\"3 4\\n....\\n.#.#\") == \"Error: Invalid input.\"\nassert solution(\"3 4\\n....\\n..#..\") == \"Error: Invalid input.\"\nassert solution(\"3 4\\n....\\n..#..\") == \"Error: Invalid input.\"\nassert solution(\"3 4\\n....\\n..#..\") == \"Error: Invalid input.\"\nassert solution(\"3 4\\n....\\n..#..\") == \"Error: Invalid input.\"\nassert solution(\"3 4\\n....\\n..#..\") == \"Error: Invalid input.\"\nassert solution(\"3 4\\n....\\n..#..\") == \"Error: Invalid input.\"\nassert solution(\"3 4\\n....\\n..#..\") == \"Error: Invalid input.\"\nassert solution(\"3 4\\n....\\n..#..\") == \"Error: Invalid input.\"\nassert solution(\"3 4\\n....\\n..#..\") == \"Error: Invalid input.\"\nassert solution(\"3 4\\n....\\n..#..\") == \"Error: Invalid input.\"\nassert solution(\"3 4\\n....\\n..#..\") == \"Error: Invalid input.\"\nassert solution(\"3 4\\n....\\n..#..\") == \"Error: Invalid input.\"\nassert solution(\"3 4\\n....\\n..#..\") == \"Error: Invalid input.\"\nassert solution(\"3 4\\n....\\n..#..\") == \"Error: Invalid input.\"\nassert solution(\"3 4\\n....\\n..#..\") == \"Error: Invalid input.\"\nassert solution(\"3 4\\n....\\n..#..\") == \"Error: Invalid input.\"\nassert solution(\"3 4\\n....\\n..#..\") == \"Error: Invalid input.\"\nassert solution(\"3 4\\n....\\n..#..\") == \"Error: Invalid input.\"\nassert solution(\"3 4\\n....\\n..#..\") == \"Error: Invalid input.\"\nassert solution(\"3 4\\n....\\n..#..\") == \"Error: Invalid input.\"\nassert solution(\"3 4\\n....\\n..#..\") == \"Error: Invalid input.\"\nassert solution(\"3 4\\n....\\n..#..\") == \"Error: Invalid input.\"\nassert solution(\"3 4\\n....\\n..#..\") == \"Error: Invalid input.\"\nassert solution(\""
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3425,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4\\n....\\n.#.#\\n....\\n\") == \"5 13\""
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 5"
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r').read()) == '5\\n'\nassert solution(open('input2.txt', 'r').read()) == '5\\n'"
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0') == '5\\n'"
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input) == output, f\"Expected {output}, got {solution(input)}\" for input, output in [\n    # Test case 1\n    [\"3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0\", \"5\\n\"],\n\n    # Test case 2\n    [\"3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0\", \"10\\n\"],\n]"
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n    3 3\n    1 2 5 1\n    2 3 3 1\n    3 1? 0\n    ''') == '5\\n'"
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0\") == \"5\\ndef solution(stdin: str) -> str:\\npass\\n\""
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"5\""
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0') == '5\\n'\n"
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0') == '5'\nprint('All test cases passed.')"
    },
    {
        "number": 3426,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0') == 5\nassert solution('3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0') == 5\nassert solution('3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0') == 5\nassert solution('3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0') == 5\nassert solution('3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0') == 5\nassert solution('3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0') == 5\nassert solution('3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0') == 5\nassert solution('3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0') == 5\nassert solution('3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0') == 5\nassert solution('3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0') == 5\nassert solution('3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0') == 5\nassert solution('3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0') == 5\nassert solution('3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0') == 5\nassert solution('3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0') == 5\nassert solution('3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0') == 5\nassert solution('3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0') == 5\nassert solution('3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0') == 5\nassert solution('3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0') == 5\nassert solution('3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0') == 5\nassert solution('3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0') == 5\nassert solution('3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0') == 5\nassert solution('3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0') == 5\nassert solution('3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0') == 5\nassert solution('3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0') == 5\nassert solution('3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0') == 5\nassert solution('3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0') == 5\nassert solution('3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0') == 5\nassert solution('3 3\\n1 2 5 1\\n2 3 3 1\\n3"
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 3\\n-1 0\\n-1 1\\n0 1') == '0\\n'"
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\") == \"0\\n\"\n"
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Actual output: {solution(input())}\""
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(r\"\"\"\n    2 3\n    0 -1\n    1 -1\n    0 1\n    \"\"\") == \"0\"\n\nassert solution(r\"\"\"\n    2 3\n    0 -1\n    1 -1\n    0 1\n    \"\"\") == \"3\""
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(None) == \"def solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\"\") == \"def solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\") == \"0\\n\"\n\nassert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\\n\") == \"0\\n\"\n\nassert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\\n1 2\") == \"2\\n\"\n\nassert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\\n1 2\\n\") == \"2\\n\"\n\nassert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\\n1 2\\n3 4\") == \"0\\n\"\n\nassert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\\n1 2\\n3 4\\n\") == \"0\\n\"\n\nassert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\\n1 2\\n3 4\\n5 6\") == \"2\\n\"\n\nassert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\\n1 2\\n3 4\\n5 6\\n\") == \"2\\n\"\n\nassert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\\n1 2\\n3 4\\n5 6\\n7 8\") == \"0\\n\"\n\nassert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\\n1 2\\n3 4\\n5 6\\n7 8\\n\") == \"0\\n\"\n\nassert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\") == \"2\\n\"\n\nassert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n\") == \"2\\n\"\n\nassert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\") == \"0\\n\"\n\nassert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n\") == \"0\\n\"\n\nassert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\") == \"2\\n\"\n\nassert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n\") == \"2\\n\"\n\nassert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n15 16\") == \"0\\n\"\n\nassert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n15 16\\n\")"
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\") == 0, \"Test failed\""
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\") == \"0\"\nassert solution(\"3 2\\n-1 1\\n0 1\\n1 0\") == \"3\"\n"
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 3\\n-1 0\\n-1 1\\n0 1') == 0\n\nassert solution('4 3\\n0 1\\n-1 2\\n1 2\\n1 3\\n2 3\\n-1 4\\n1 5') == 3"
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"0\"\n"
    },
    {
        "number": 3427,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\") == 0\n"
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n9 6 2 4') == 6\nassert solution('4\\n1 2 3 4') == 4\nassert solution('4\\n1 2 3 5') == 1\nassert solution('4\\n1 2 3') == 0\nassert solution('4\\n100') == 0\n"
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(9, 6, 2, 4) == 6"
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n9 6 2 4\\n\") == \"6\\n\"\n"
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"6\\n\""
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(4) == 6\nassert solution(9) == 6\nassert solution(6) == 3\nassert solution(5) == 1\nassert solution(100) == 0"
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 6\n"
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n9 6 2 4\") == 6\nprint(\"All tests passed!\")"
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 6, \"Incorrect output\""
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"6\"\n"
    },
    {
        "number": 3428,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n9 6 2 4\") == \"6\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1 1 3 2\") == \"2.000000\"\nassert solution(\"2 5 1\") == \"1.000000\""
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1 1 3 2\\n2 5 1\") == 2.0\nprint(\"All tests passed!\")\n"
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1 1 3 2\\n2 5 1\") == \"2.000000\\n\"\n"
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1 1 3 2\\n2 5 1\") == 2.0"
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 2.000000\nassert solution() == 2.000000\nassert solution() == 2.000000\nassert solution() == 2.000000\nassert solution() == 2.000000"
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 1 1 3 2\\n2 5 1') == 2.000000"
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1 1 3 2\\n2 5 1\") == \"2.000000\""
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1 1 3 2\\n2 5 1\") == 2.0\nprint(\"All test cases pass\")"
    },
    {
        "number": 3429,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"Expected output: {}\\nGot output: {}\".format(output(), solution(input()))"
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 96"
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"96\"\n"
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n1 2\\n2 3\\n4\\n1 2\\n1 3\\n1 4\\n') == '96'"
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"96\"\n"
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n1 2\\n2 3\\n4\\n1 2\\n1 3\\n1 4\\n') == '96'\nassert solution('4\\n1 2\\n1 3\\n1 4\\n') == '96'\nassert solution('3\\n1 2\\n2 3\\n4\\n2 1\\n') == '30'\nassert solution('4\\n1 2\\n1 3\\n1 4\\n2 1\\n') == '30'\nassert solution('3\\n1 2\\n2 3\\n4\\n2 1\\n3 2\\n') == '90'\nassert solution('4\\n1 2\\n1 3\\n1 4\\n2 1\\n3 2\\n') == '90'"
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '96\\n', \"Test failed\"\nassert solution(stdin) == '96\\n', \"Test failed\""
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution([3, 1, 2, 2, 3, 4, 1, 2, 1, 3, 1, 4]) == 96, \"Test case 1 failed.\"\nassert solution([3, 1, 2, 2, 3, 4, 1, 2, 1, 3, 1, 4]) == 96, \"Test case 2 failed.\"\nassert solution([3, 1, 2, 2, 3, 4, 1, 2, 1, 3, 1, 4]) == 96, \"Test case 3 failed.\""
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2\\n2 3\\n4\") == \"96\""
    },
    {
        "number": 3430,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"96\\n\"\n"
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), \"Your code is not correct!\""
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 0\\n0 1\\n1 0\\n1 1\") == \"3\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 0\\n1 1\") == \"3\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 0\\n1 1\") == \"3\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 0\\n1 1\") == \"3\\ndef solution(stdin: str) -> str:\\npass\\n\""
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"3\\n3\\n\" # This is a very simple problem. You are given N points. Some points may be repeated. The weight (distance) between two points is given by the Manhattan distance between the two points. Find the weight of a Minimum Spanning Tree that spans these N points."
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"3\\n3\\n\"\nassert solution(input()) == \"6\\n1\\n2\\n3\\n\"\nassert solution(input()) == \"5\\n1\\n2\\n3\\n4\\n\"\nassert solution(input()) == \"6\\n1\\n2\\n3\\n4\\n5\\n\"\nassert solution(input()) == \"7\\n1\\n2\\n3\\n4\\n5\\n6\\n\""
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 0\\n0 1\\n1 0\\n1 1\") == \"3\"\nassert solution(\"5 0\\n0 0\\n0 1\\n1 0\\n1 1\\n2 0\\n0 2\\n0 3\\n1 2\\n2 1\\n3 0\\n3 1\\n4 0\\n4 1\\n5 0\\n5 1\\n6 0\\n6 1\\n7 0\\n7 1\\n8 0\\n8 1\\n9 0\\n9 1\\n10 0\\n10 1\\n11 0\\n11 1\\n12 0\\n12 1\\n13 0\\n13 1\\n14 0\\n14 1\\n15 0\\n15 1\\n16 0\\n16 1\\n17 0\\n17 1\\n18 0\\n18 1\\n19 0\\n19 1\\n20 0\\n20 1\\n21 0\\n21 1\\n22 0\\n22 1\\n23 0\\n23 1\\n24 0\\n24 1\\n25 0\\n25 1\\n26 0\\n26 1\\n27 0\\n27 1\\n28 0\\n28 1\\n29 0\\n29 1\\n30 0\\n30 1\\n31 0\\n31 1\\n32 0\\n32 1\\n33 0\\n33 1\\n34 0\\n34 1\\n35 0\\n35 1\\n36 0\\n36 1\\n37 0\\n37 1\\n38 0\\n38 1\\n39 0\\n39 1\\n40 0\\n40 1\\n41 0\\n41 1\\n42 0\\n42 1\\n43 0\\n43 1\\n44 0\\n44 1\\n45 0\\n45 1\\n46 0\\n46 1\\n47 0\\n47 1\\n48 0\\n48 1\\n49 0\\n49 1\\n50 0\\n50 1\\n51 0\\n51 1\\n52 0\\n52 1\\n53 0\\n53 1\\n54 0\\n54 1\\n55 0\\n55 1\\n56 0\\n56 1\\n57 0\\n57 1\\n58 0\\n58 1\\n59 0\\n59 1\\n60 0\\n60 1\\n61 0\\n61 1\\n62 0\\n62 1\\n63 0\\n63 1\\n64 0\\n64 1\\n65 0\\n65 1\\n66 0\\n66 1\\n67 0\\n67 1\\n68 0\\n68 1\\n69 0\\n69 1\\n70 0\\n70 1\\n71 0\\n71 1\\n72 0\\n72 1\\n73 0\\n73 1\\n74 0\\n74 1\\n75 0\\n75 1\\n76 0\\n76 1\\n77 0\\n77 1\\n78 0\\n78 1\\n79 0\\n79 1\\n80 0\\n80 1\\n81 0\\n81 1\\n82 0\\n82 1\\"
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 0\\n1 1\") == \"3\\n3\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3431,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"3\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2 8\\n3 1\\n1 4\") == \"10\\n10\\n9\"\nassert solution(\"6\\n3 5\\n10 10\\n1 3\\n2 8\\n7 7\\n4 6\\n5 4\\n6 2\\n8 4\\n9 9\\n10 3\\n\") == \"123\\n123\\n\""
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n2 8\\n3 1\\n1 4') == '10\\n10\\n9\\n'"
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n2 8\\n3 1\\n1 4\\n\") == \"10\\n10\\n9\\n\""
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"10\\n10\\n9\""
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == sample_output, f\"Expected: {sample_output}\\nGot: {solution(sample_input)}\""
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input()) == sample_output()"
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"10\\n10\\n9\"\n"
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"10\\n10\\n9\"\nassert solution(2) == \"10\\n10\"\nassert solution(1) == \"9\""
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"10\\n10\\n9\\n\"\n"
    },
    {
        "number": 3432,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"10\\n10\\n9\\n\"\nassert solution(4) == \"10\\n10\\n9\\n\"\nassert solution(5) == \"10\\n10\\n9\\n\""
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 4\\n####\\n#JF#\\n#..#') == '3\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'"
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\\n\") == \"3\"\nassert solution(\"4 5\\n####\\n#JF#\\n#..#\\n#..#\\n\") == \"IMPOSSIBLE\"\nassert solution(\"4 5\\n####\\n#JF#\\n#..#\\n#..#\\n#..#\\n\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\\n\") == \"3\""
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\\n\") == \"3\\ndefinitelyImpossible\\n\"\nassert solution(\"10 10\\n####\\n#JF#\\n#..#\\n#..#\\n\") == \"3\\n10\\n\"\nassert solution(\"5 5\\n####\\n#JF#\\n#..#\\n#..#\\n\") == \"definitelyImpossible\\n\"\nassert solution(\"1 1\\n.F\\n.F\\n.F\\n\") == \"definitelyImpossible\\n\"\nassert solution(\"1 1\\n.F\\n.F\\n.F\\n\") == \"impossible\\n\"\nassert solution(\"1 1\\n.F\\n.F\\n.F\\n\") == \"1\\n\""
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n4 4\n####\n"
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    4 4\n    ####\n    #JF#\n    #..#\n    \"\"\"\n) == \"3\"\n\nassert solution(\n    \"\"\"\n    4 4\n    #..#\n    #..#\n    \"\"\"\n) == \"def solution(stdin: str) -> str:\\n\\tpass\\n\"\n\nassert solution(\n    \"\"\"\n    4 4\n    #..#\n    #..#\n    \"\"\"\n) == \"3\"\n\nassert solution(\n    \"\"\"\n    4 4\n    #..#\n    #..#\n    \"\"\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    4 4\n    #..#\n    #..#\n    \"\"\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    4 4\n    #..#\n    #..#\n    \"\"\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    4 4\n    #..#\n    #..#\n    \"\"\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    4 4\n    #..#\n    #..#\n    \"\"\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    4 4\n    #..#\n    #..#\n    \"\"\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    4 4\n    #..#\n    #..#\n    \"\"\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    4 4\n    #..#\n    #..#\n    \"\"\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    4 4\n    #..#\n    #..#\n    \"\"\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    4 4\n    #..#\n    #..#\n    \"\"\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    4 4\n    #..#\n    #..#\n    \"\"\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    4 4\n    #..#\n    #..#\n    \"\"\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    4 4\n    #..#\n    #..#\n    \"\"\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    4 4\n    #..#\n    #..#\n    \"\"\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    4 4\n    #..#\n    #..#\n    \"\"\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    4 4\n    #..#\n    #..#\n    \"\"\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    4 4\n    #..#\n    #..#\n    \"\"\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    4 4\n    #..#\n    #..#\n    \"\"\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    4 4\n    #..#\n    #..#\n    \"\"\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    4 4\n    #..#\n    #..#\n    \"\"\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    4 4\n    #..#\n    #..#\n    \"\"\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    4 4\n    #..#\n    #..#\n    \"\"\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    4 4\n    #..#\n    #..#\n    \"\"\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    4 4\n    #..#\n    #..#\n    \"\"\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    4 4\n    #..#\n    #..#\n    \"\"\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    4 4\n    #..#\n    #..#\n    \"\"\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    4 4\n    #..#\n    #..#\n    \"\"\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    4 4\n    #..#\n    #..#\n    \"\"\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    4 4\n    #..#\n    #..#\n    \"\"\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    4 4\n    #..#\n    #..#\n    \"\"\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    4 4\n    #..#\n    #..#\n    \"\"\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n    4 4\n    #..#\n    #..#\n    \"\"\"\n) == \"IMPOSSIBLE\""
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('###JF#..#..#') == '3'\nassert solution('###..##..#..#') == '2'\nassert solution('###JF#JF#JF#') == '2'\nassert solution('###JF#JF#JF#') == '2'\nassert solution('###JF#JF#JF#') == '2'"
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\\n\") == \"3\""
    },
    {
        "number": 3433,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\") == \"3\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 2\\n2\\n1 1\\n\") == 0.3333333333"
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 0.3333333333, \"Please fill in the solution function\""
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    input_string=\"1 2 2\\n2\\n1 1\\n\"\n) == 0.3333333333"
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 2\\n2\\n1 1\\n\") == \"0.3333333333\"\nassert solution(\"1 2 1\\n2\\n1 1\\n\") == \"0.3333333333\"\nassert solution(\"1 2 1\\n2\\n1 0\\n\") == \"0.3333333333\"\nassert solution(\"1 2 1\\n2\\n1 5\\n\") == \"0.3333333333\"\nassert solution(\"1 2 1\\n2\\n1 6\\n\") == \"0.3333333333\"\nassert solution(\"1 2 1\\n2\\n1 7\\n\") == \"0.6666666667\""
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 2 2\\n2\\n1 1') == '0.3333333333\\n'"
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '0.3333333333'"
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == 0.3333333333, \"Incorrect output\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"0.3333333333\\n\""
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"0.3333333333\", \"Test Case 1 Failed\""
    },
    {
        "number": 3434,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 2\\n2\\n1 1\\n\") == \"0.3333333333\"\n"
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10\\n1\") == \"1023\"\n"
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('10\\n1\\n') == '1023'"
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10\\n1\") == \"1023\"\nassert solution(\"10\\n1*1\") == \"1023\"\nassert solution(\"10\\n111\") == \"1023\"\nassert solution(\"10\\n0101110\") == \"1023\"\nassert solution(\"10\\n0100010\") == \"1003\"\nassert solution(\"10\\n1110000\") == \"1003\""
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1023\""
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1023\"\n"
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 1023, \"Incorrect output.\""
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"1023\""
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(10, \"1\") == \"1023\""
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_data) == expected_output, f\"The solution is incorrect. Expected: {expected_output}, Got: {solution(input_data)}\"\nfor input_data, expected_output in [\n    (10, '1023'),\n    (10, '1010111'),\n    (10, '0100010'),\n    (10, '1110000'),\n    (10, '1010111'),\n    (10, '1111000'),\n    (10, '1010111'),\n    (10, '1110000'),\n    (10, '1111000'),\n    (10, '1110000'),\n    (10, '1010111'),\n    (10, '1010111'),\n    (10, '1010111'),\n    (10, '1010111'),\n    (10, '1010111'),\n    (10, '1010111'),\n    (10, '1010111'),\n    (10, '1010111'),\n    (10, '1010111'),\n    (10, '1010111'),\n    (10, '1010111'),\n    (10, '1010111'),\n    (10, '1010111'),\n    (10, '1010111'),\n    (10, '1010111'),\n    (10, '1010111'),\n    (10, '1010111'),\n    (10, '1010111'),\n    (10, '1010111'),\n    (10, '1010111'),\n    (10, '1010111'),\n    (10, '1010111'),\n    (10, '1010111'),\n    (10, '1010111'),\n    (10, '1010111'),\n    (10, '1010111'),\n    (10, '1010111'),\n    (10, '1010111'),\n    (10, '1010111'),\n    (10, '1010111'),\n    (10, '1010111'),\n    (10, '1010111'),\n    (10, '1010111'),\n    (10, '1010111'),\n    (10, '1010111'),\n    (10, '1010111'),\n    (10, '1010111'),\n    (10, '1010111'),\n    (10, '1010111'),\n    (10, '1010111'),\n    (10, '1010111'),\n    (10, '1010111'),\n    (10, '1010111'),\n    (10, '1010111'),\n    (10, '1010111'),\n    (10, '1010111'),\n    (10, '1010111'),\n    (10, '1010111'),\n    (10, '1010111'),\n    (10, '1010111'),\n    (10, '1010111'),\n    (10, '1010111'),\n    (10, '1010111'),\n    (10, '1010111'),\n    (10, '1010111'),\n    (10, '1010111'),\n    (10, '1010111'),\n    (10, '1010111'),\n    (10, '1010111'),\n    (10, '1010111'),\n    (1"
    },
    {
        "number": 3435,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    10\n    1\n
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"6\\n\", \"Test case 1 failed\""
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == 6\n\nimport math"
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\n\") == \"6\\n\"\n"
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"2 2\\n\") == \"6\\n\"\nassert solution(stdin=\"100 100\\n\") == \"150553\\n\"\nassert solution(stdin=\"3 4\\n\") == \"10\\n\"\nassert solution(stdin=\"1 1\\n\") == \"1\\n\"\nassert solution(stdin=\"1 3\\n\") == \"1\\n\"\nassert solution(stdin=\"10 10\\n\") == \"0\\n\"\nassert solution(stdin=\"1 10\\n\") == \"150553\\n\""
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin: str) == \"6\", \"Incorrect output: {}\".format(solution(stdin))\n"
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 6, \"Test failed.\""
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"6\\n\"\n"
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"6\\n\", \"The output should be 6.\""
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"6\\n\"\nassert solution(\"5 5\") == \"16\\n\"\nassert solution(\"10 10\") == \"16\\n\"\nassert solution(\"0 10\") == \"0\\n\"\nassert solution(\"10 0\") == \"0\\n\"\n"
    },
    {
        "number": 3436,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == 6, \"Test failed\" # Test case 1"
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(str(input())) == \"2930\"\n"
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2930\"\n"
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"2930\\n\", \"Incorrect output\""
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\") == \"2930\\n\""
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n\") == \"2930\\n\""
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2930\\n\", \"Please fill in the code for the solution\""
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\") == \"2930\\n\"\nassert solution(\"1000 2000 7\\n200\\n480\\n500\\n550\\n1000\\n1400\\n1500\") == \"Impossible\\n\"\nassert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n2000\\n2400\\n2500\") == \"Impossible\\n\"\nassert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n1000\\n1400\\n1500\\n2000\\n2400\\n2500\\n1000\\n1400\\n1500\\n2000\\n2400\\n2500\\n1000\\n1400\\n1500\\n2000\\n2400\\n2500\\n1000\\n1400\\n1500\\n2000\\n2400\\n2500\\n1000\\n1400\\n1500\\n2000\\n2400\\n2500\\n1000\\n1400\\n1500\\n2000\\n2400\\n2500\\n1000\\n1400\\n1500\\n2000\\n2400\\n2500\\n1000\\n1400\\n1500\\n2000\\n2400\\n2500\\n1000\\n1400\\n1500\\n2000\\n2400\\n2500\\n1000\\n1400\\n1500\\n2000\\n2400\\n2500\\n1000\\n1400\\n1500\\n2000\\n2400\\n2500\\n1000\\n1400\\n1500\\n2000\\n2400\\n2500\\n1000\\n1400\\n1500\\n2000\\n2400\\n2500\\n1000\\n1400\\n1500\\n2000\\n2400\\n2500\\n1000\\n1400\\n1500\\n2000\\n2400\\n2500\\n1000\\n1400\\n1500\\n2000\\n2400\\n2500\\n1000\\n1400\\n1500\\n2000\\n2400\\n2500\\n1000\\n1400\\n1500\\n2000\\n2400\\n2500\\n1000\\n1400\\n1500\\n2000\\n2400\\n2500\\n1000\\n1400\\n1500\\n2000\\n2400\\n2500\\n1000\\n1400\\n1500\\n2000\\n2400\\n2500\\n1000\\n1400\\n1"
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\") == \"2930\"\n\nassert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\") == \"Impossible\""
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\") == \"2930\\n\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3437,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 2930\n"
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3\\n0\\n0\\n1\") == \"2\""
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin: str) == \"2\""
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3\\n0\\n0\\n1\") == \"2\\n\"\nassert solution(\"10 20 30\\n0\\n10\\n15\") == \"10\\n\"\nassert solution(\"1000 2000 3000\\n0\\n1000\\n1000\") == \"1000\\n\""
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin: str) == 'Output: 2\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'"
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(str(int(input())) +'' + str(int(input())) +'' + str(int(input()))) == str(2), \"The least number of times an object must be read into the cache to handle the accesses listed in the input is incorrect.\""
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"2\", \"Output: \" + str(solution(input()))"
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\", \"Output: \" + solution(stdin)\n"
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2\", \"Output must be '2'.\""
    },
    {
        "number": 3438,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3\\n0\\n0\\n1\\n\") == \"2\"\nassert solution(\"1 2 3\\n0\\n1\\n1\\n\") == \"3\"\nassert solution(\"1 2 3\\n0\\n2\\n1\\n\") == \"3\"\nassert solution(\"1 2 3\\n0\\n3\\n1\\n\") == \"4\"\nassert solution(\"1 2 3\\n0\\n4\\n1\\n\") == \"5\""
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == expected_output, f\"The solution is {solution}, but the expected output is {expected_output}\""
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 3\\n-5 2 -5\\n-1 -2 -1\\n5 4 -5\\n2 2\\n') == '10'\nassert solution('4 4\\n-10 10 -10\\n-5 5 -5\\n-3 -5 -3\\n') == '50'"
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '10'"
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"10\\n\", \"The function should return the correct output.\""
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 10\nassert solution() == 10\nassert solution() == 10\nassert solution() == 10\nassert solution() == 10\nassert solution() == 10\nassert solution() == 10\nassert solution() == 10"
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 3\\n-5 2 -5\\n-1 -2 -1\\n5 4 -5\\n2 2') == '10\\n'\nassert solution('3 3\\n-5 2 -5\\n-1 -2 -1\\n5 4 -5\\n2 2\\n') == '10\\n'\nassert solution('3 3\\n-5 2 -5\\n-1 -2 -1\\n5 4 -5\\n2 2\\n1') == '10\\n'\nassert solution('3 3\\n-5 2 -5\\n-1 -2 -1\\n5 4 -5\\n2 2\\n10') == '10\\n'\n"
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n    3 3\n    -5 2 -5\n    -1 -2 -1\n    5 4 -5\n    2 2\n''') == '10'\n\nassert solution('''\n    4 4\n    0 0 0 0\n    0 0 0 0\n    0 0 0 0\n    1 1 1 1\n    -1 -1 -1 -1\n    -1 -1 -1 -1\n    -1 -1 -1 -1\n    -1 -1 -1 -1\n''') == '100'"
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output() for input_, output_ in zip(input_list, output_list)"
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n-5 2 -5\\n-1 -2 -1\\n5 4 -5\\n2 2\") == \"10\"\nassert solution(\"5 5\") == \"10\"\nassert solution(\"10 5\") == \"10\"\nassert solution(\"10 10\") == \"10\"\nassert solution(\"10 20\") == \"10\"\nassert solution(\"3 3\\n-5 2 -5\\n-1 -2 -1\\n5 4 -5\\n2 2\") == \"10\""
    },
    {
        "number": 3439,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"10\\n\", \"Test case not passed\""
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Test failed. Expected output: {output()}, got {solution(input())}\""
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == \"3100\\n\"\nassert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n6 7 800\\n9 10 1500\") == \"13300\\n\""
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == \"3100\"\nassert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == \"3100\"\nassert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == \"3100\"\nassert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == \"3100\"\nassert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == \"3100\"\nassert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == \"3100\""
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"\"\"\n3100\n\"\"\""
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == \"3100\\n\""
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == \"3100\""
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n\") == \"3100\\n\""
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n\") == \"3100\"\nassert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n4 6 500\") == \"12000\""
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 3100, \"Your solution is incorrect\""
    },
    {
        "number": 3440,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input) == expected\n"
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 0, \"Expected 0, got {} instead\".format(solution())"
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == \"0\\n\""
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n2 1\n0 1\n''') == 0\n\nassert solution('''\n3 4\n0 1\n0 2\n0 3\n1 2\n1 3\n2 3\n''') == 0\n\nassert solution('''\n5 7\n0 1\n0 2\n0 3\n0 4\n0 5\n0 6\n0 7\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n2 3\n2 4\n2 5\n2 6\n2 7\n3 4\n3 5\n3 6\n3 7\n4 5\n4 6\n4 7\n5 6\n5 7\n6 7\n''') == 17\n\nassert solution('''\n5 8\n0 1\n0 2\n0 3\n0 4\n0 5\n0 6\n0 7\n0 8\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n3 4\n3 5\n3 6\n3 7\n3 8\n4 5\n4 6\n4 7\n4 8\n5 6\n5 7\n5 8\n6 7\n6 8\n7 8\n''') == 56"
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"0\\n\"\n"
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1\\n0 1\\n\") == \"0\\n\"\nassert solution(\"3 2\\n0 1\\n1 2\\n0 2\\n\") == \"1\\n\"\nassert solution(\"4 3\\n0 1\\n1 2\\n2 3\\n0 3\\n1 3\\n2 3\\n\") == \"2\\n\"\nassert solution(\"5 4\\n0 1\\n1 2\\n2 3\\n3 4\\n0 4\\n1 4\\n2 4\\n3 4\\n4 4\\n\") == \"3\\n\"\nassert solution(\"6 5\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n0 5\\n1 5\\n2 5\\n3 5\\n4 5\\n5 5\\n\") == \"4\\n\"\nassert solution(\"7 6\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n0 6\\n1 6\\n2 6\\n3 6\\n4 6\\n5 6\\n6 6\\n\") == \"5\\n\"\nassert solution(\"8 7\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n0 7\\n1 7\\n2 7\\n3 7\\n4 7\\n5 7\\n6 7\\n7 7\\n\") == \"6\\n\"\nassert solution(\"9 8\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n0 8\\n1 8\\n2 8\\n3 8\\n4 8\\n5 8\\n6 8\\n7 8\\n8 8\\n\") == \"7\\n\"\nassert solution(\"10 9\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n0 9\\n1 9\\n2 9\\n3 9\\n4 9\\n5 9\\n6 9\\n7 9\\n8 9\\n9 9\\n\") == \"8\\n\"\nassert solution(\"11 10\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n0 10\\n1 10\\n2 10\\n3 10\\n4 10\\n5 10\\n6 10\\n7 10\\n8 10\\n9 10\\n10 10\\n\") == \"9\\n\"\nassert solution(\"12 11\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n0 11\\n1 11\\n2 11\\n3 11\\n4 11\\n5 11\\n6 11\\n7 11\\n8 11\\n9 11\\n10 11\\n11 11\\n\") == \"10\\n\"\nassert solution(\"13 12\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n0 12\\n1 12\\n2 12\\n3 12\\n4 12\\n5 12\\n6 12\\n7 12\\n8"
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1\\n0 1\") == \"0\\n\"\nassert solution(\"2 2\\n0 1\\n1 2\\n2 0\\n1 3\\n1 4\\n2 3\\n2 4\") == \"15\\n\"\nassert solution(\"3 1\\n0 1\\n1 2\\n2 3\\n3 0\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\") == \"15\\n\"\nassert solution(\"3 5\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 0\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 0\") == \"15\\n\"\nassert solution(\"4 6\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100\\n100 101\\n101 102\\n102 103\\n103 104\\n104 105\\n105 106\\n106 107\\n10"
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '0'\n"
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"0\\n\", \"Test case failed\""
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 0"
    },
    {
        "number": 3441,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 0"
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"10\""
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 10\") == \"10\""
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 10\") == \"10\"\n"
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"10\", \"Solution does not work as expected\"\n"
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 10\") == \"10\"\nassert solution(\"7 10\") == \"20\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"10 10\") == \"10\"\nassert solution(\"73 21\") == \"4\"\nassert solution(\"73 42\") == \"1\"\n\nfrom typing import List"
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"10\""
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 10') == '10'\n"
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3442,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 10\") == 10, \"Your solution is incorrect.\"\nassert solution(\"73 21\") == 5, \"Your solution is incorrect.\""
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('0 0\\n1000 0\\n0 1000\\n1000 1000') == 0, \"Input should output 0.\"\nassert solution('4\\n0 0\\n1000 0\\n0 1000\\n1000 1000') == 3, \"Input should output 3.\"\nassert solution('5\\n0 0\\n1000 0\\n0 1000\\n1000 1000\\n1 1\\n-1 0') == 0, \"Input should output 0.\"\nassert solution('1\\n1\\n1\\n1\\n1') == 1, \"Input should output 1.\"\nassert solution('1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == 1, \"Input should output 1.\"\nassert solution('1\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n-1\\n-1\\n-1\\n-1') == 1, \"Input should output 1.\"\nassert solution('2\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n-1\\n-1\\n-1\\n-1') == 2, \"Input should output 2.\"\nassert solution('2\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n0\\n0\\n0\\n0') == 2, \"Input should output 2.\"\nassert solution('2\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n-1\\n-1\\n-1\\n-1\\n-1') == 1, \"Input should output 1.\"\nassert solution('3\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n-1\\n-1\\n-1\\n-1\\n-1\\n-1') == 3, \"Input should output 3.\"\nassert solution('2\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0') == 0, \"Input should output 0.\""
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 0\\n1000 0\\n0 1000\\n1000 1000\\n\") == 0, \"Incorrect solution\"\n"
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n0 0\\n1000 0\\n0 1000\\n1000 1000') == '0\\n', \"Incorrect output. Expected '0', but got '{}' instead.\".format(solution('4\\n0 0\\n1000 0\\n0 1000\\n1000 1000'))"
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 0\\n1000 0\\n0 1000\\n1000 1000\\n\") == \"0\""
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(b\"1\\n0 0\\n1000 0\\n0 1000\\n1000 1000\\n\") == \"0\\n\""
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\") == 0"
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('0 0\\n1000 0\\n0 1000\\n1000 1000\\n') == 0, \"Test case failed\"\nassert solution('4\\n0 0\\n1000 0\\n0 1000\\n1000 1000\\n') == 2, \"Test case failed\"\nassert solution('0 0\\n1 0\\n2 0\\n3 0\\n4 0\\n5 0\\n6 0\\n7 0\\n8 0\\n9 0\\n10 0\\n11 0\\n12 0\\n13 0\\n14 0\\n15 0\\n16 0\\n17 0\\n18 0\\n19 0\\n20 0\\n21 0\\n22 0\\n23 0\\n24 0\\n25 0\\n26 0\\n27 0\\n28 0\\n29 0\\n30 0\\n31 0\\n32 0\\n33 0\\n34 0\\n35 0\\n36 0\\n37 0\\n38 0\\n39 0\\n40 0\\n41 0\\n42 0\\n43 0\\n44 0\\n45 0\\n46 0\\n47 0\\n48 0\\n49 0\\n50 0\\n51 0\\n52 0\\n53 0\\n54 0\\n55 0\\n56 0\\n57 0\\n58 0\\n59 0\\n60 0\\n61 0\\n62 0\\n63 0\\n64 0\\n65 0\\n66 0\\n67 0\\n68 0\\n69 0\\n70 0\\n71 0\\n72 0\\n73 0\\n74 0\\n75 0\\n76 0\\n77 0\\n78 0\\n79 0\\n80 0\\n81 0\\n82 0\\n83 0\\n84 0\\n85 0\\n86 0\\n87 0\\n88 0\\n89 0\\n90 0\\n91 0\\n92 0\\n93 0\\n94 0\\n95 0\\n96 0\\n97 0\\n98 0\\n99 0\\n100 0\\n101 0\\n102 0\\n103 0\\n104 0\\n105 0\\n106 0\\n107 0\\n108 0\\n109 0\\n110 0\\n111 0\\n112 0\\n113 0\\n114 0\\n115 0\\n116 0\\n117 0\\n118 0\\n119 0\\n120 0\\n121 0\\n122 0\\n123 0\\n124 0\\n125 0\\n126 0\\n127 0\\n128 0\\n129 0\\n130 0\\n131 0\\n132 0\\n133 0\\n134 0\\n135 0\\n136 0\\n137 0\\n138 0\\n139 0\\n140 0\\n141 0\\n142 0\\n143 0\\n144 0\\n145 0\\n146 0\\n147 0\\n14"
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n0 0\\n1000 0\\n0 1000\\n1000 1000\") == \"0\\n\"\nassert solution(\"4\\n0 0\\n1000 0\\n0 1000\\n1000 1000\\n\") == \"0\\n\"\nassert solution(\"4\\n0 0\\n1000 0\\n0 1000\\n1000 1000\\n1000 1000\") == \"4\\n\""
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"0\\n\", \"The output should be 0\""
    },
    {
        "number": 3443,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n0 0\\n1000 0\\n0 1000\\n1000 1000\") == \"0\\n\"\nassert solution(\"4\\n20001 20001\\n0 1000\\n1000 0\\n1000 1000\") == \"0\\n\"\nassert solution(\"4\\n1000 0\\n0 1000\\n1000 1000\\n20001 20001\") == \"0\\n\"\nassert solution(\"4\\n0 0\\n-1000 -1000\\n1000 1000\\n-1000 -1000\") == \"0\\n\"\nassert solution(\"4\\n-20000 -20000\\n-1000 -1000\\n-1000 1000\\n20001 20001\") == \"0\\n\""
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1\\n0 1 0.5\") == \"0.5 1.0\"\nassert solution(\"2 1\\n0 1 0.5\") == \"0.5 1.0\""
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"0.5 1.0\\n\", \"The output is not correct.\""
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 1\\n0 1 0.5') == '0.500000000 1.000000000'\nassert solution('2 1\\n0 1 0.6') == '-1.000000000'"
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"2 1\n0 1 0.5\"\"\") == \"0.500000000 1.000000000\"\nassert solution(\"\"\"3 2\n0 2 0.2\n0 1 0.3\n0 3 0.1\"\"\") == \"0.277777778 0.666666667 0.133333333 0.066666667\"\nassert solution(\"\"\"5 4\n0 4 0.5\n0 0 0.2\n0 3 0.3\n0 1 0.1\n0 2 0.4\"\"\") == \"0.5 1.0 0.8 0.666666667 0.5 0.0\"\nassert solution(\"\"\"7 8\n0 0 0.5\n0 5 0.2\n0 4 0.3\n0 0 0.1\n0 0 0.4\n0 6 0.1\n0 0 0.3\"\"\") == \"-1\""
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1\\n0 1 0.5\") == \"0.500000000 1.000000000\""
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input()) == \"0.500000000 1.000000000\""
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1\\n0 1 0.5\") == \"0.500000000 1.000000000\""
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1\\n0 1 0.5\") == \"0.5 1.0\\n\"\nassert solution(\"3 1\\n0 1 0.5\\n2 3 0.3\") == \"0.125 0.125 0.125\\n\"\nassert solution(\"5 1\\n0 1 0.5\\n2 3 0.3\\n4 5 0.2\\n6 7 0.1\") == \"0.000000000 0.000000000 0.000000000 0.000000000 0.000000000\\n\"\nassert solution(\"3 2\\n0 1 0.5\\n2 3 0.3\\n4 5 0.2\\n6 7 0.1\") == \"-1\\n\"\nassert solution(\"4 2\\n0 1 0.5\\n2 3 0.3\\n4 5 0.2\\n6 7 0.1\") == \"-1\\n\"\nassert solution(\"2 2\\n0 1 0.5\\n2 3 0.3\\n4 5 0.2\\n6 7 0.1\") == \"-1\\n\"\nassert solution(\"2 3\\n0 1 0.5\\n2 3 0.3\\n4 5 0.2\\n6 7 0.1\") == \"-1\\n\"\nassert solution(\"4 3\\n0 1 0.5\\n2 3 0.3\\n4 5 0.2\\n6 7 0.1\") == \"-1\\n\""
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"0.500000000 1.000000000\""
    },
    {
        "number": 3444,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1\\n0 1 0.5\\n\") == \"0.500000000 1.000000000\\n\"\nassert solution(\"1 0\\n2 1\\n0 2 0.2\\n0 3 0.8\\n\") == \"-1\\n\"\nassert solution(\"2 5\\n0 0\\n0 2\\n0 3\\n0 4\\n\") == \"-1\\n\"\nassert solution(\"2 5\\n0 0\\n1 2\\n0 1\\n0 3\\n\") == \"0.000000000 0.000000000\\n\"\nassert solution(\"2 5\\n0 0\\n0 2\\n0 3\\n0 4\\n\") == \"0.000000000 0.000000000\\n\""
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\\n\") == \"7\\n\"\n"
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\\n\") == \"7\\n\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\") == \"7\""
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n1\\n4\\n1\\n5\\n10\\n10\\n7\\n\") == \"7\\n\"\nassert solution(\"2\\n\") == \"0\\n\"\nassert solution(\"3\\n1\\n\") == \"0\\n\"\nassert solution(\"4\\n1\\n\") == \"1\\n\"\nassert solution(\"5\\n1\\n\") == \"2\\n\"\nassert solution(\"6\\n1\\n\") == \"3\\n\"\nassert solution(\"7\\n1\\n\") == \"3\\n\"\nassert solution(\"8\\n1\\n\") == \"3\\n\"\nassert solution(\"9\\n1\\n\") == \"3\\n\"\nassert solution(\"10\\n1\\n\") == \"3\\n\"\nassert solution(\"11\\n1\\n\") == \"3\\n\"\nassert solution(\"12\\n1\\n\") == \"3\\n\"\nassert solution(\"13\\n1\\n\") == \"3\\n\"\nassert solution(\"14\\n1\\n\") == \"3\\n\"\nassert solution(\"15\\n1\\n\") == \"3\\n\"\nassert solution(\"16\\n1\\n\") == \"3\\n\"\nassert solution(\"17\\n1\\n\") == \"3\\n\"\nassert solution(\"18\\n1\\n\") == \"3\\n\"\nassert solution(\"19\\n1\\n\") == \"3\\n\"\nassert solution(\"20\\n1\\n\") == \"3\\n\"\nassert solution(\"21\\n1\\n\") == \"3\\n\"\nassert solution(\"22\\n1\\n\") == \"3\\n\"\nassert solution(\"23\\n1\\n\") == \"3\\n\"\nassert solution(\"24\\n1\\n\") == \"3\\n\"\nassert solution(\"25\\n1\\n\") == \"3\\n\"\nassert solution(\"26\\n1\\n\") == \"3\\n\"\nassert solution(\"27\\n1\\n\") == \"3\\n\"\nassert solution(\"28\\n1\\n\") == \"3\\n\"\nassert solution(\"29\\n1\\n\") == \"3\\n\"\nassert solution(\"30\\n1\\n\") == \"3\\n\"\nassert solution(\"31\\n1\\n\") == \"3\\n\"\nassert solution(\"32\\n1\\n\") == \"3\\n\"\nassert solution(\"33\\n1\\n\") == \"3\\n\"\nassert solution(\"34\\n1\\n\") == \"3\\n\"\nassert solution(\"35\\n1\\n\") == \"3\\n\"\nassert solution(\"36\\n1\\n\") == \"3\\n\"\nassert solution(\"37\\n1\\n\") == \"3\\n\"\nassert solution(\"38\\n1\\n\") == \"3\\n\"\nassert solution(\"39\\n1\\n\") == \"3\\n\"\nassert solution(\"40\\n1\\n\") == \"3\\n\"\nassert solution(\"41\\n1\\n\") == \"3\\n\"\nassert solution(\"42\\n1\\n\") == \"3\\n\"\nassert solution(\"43\\n1\\n\") == \"3\\n\"\nassert solution(\"44\\n1\\n\") == \"3\\n\"\nassert solution(\"45\\n1\\n\") == \"3\\n\"\nassert solution(\"46\\n1\\n\") == \"3\\n\"\nassert solution(\"47\\n1\\n\") == \"3\\n\"\nassert solution(\"48\\n1\\n\") == \"3\\n\"\nassert solution(\"49\\n1\\n\") == \"3\\n\"\nassert solution(\"50\\n1\\n\") == \"3\\n\"\nassert solution(\"51\\n1\\n\") == \"3\\n\"\nassert solution(\"52\\n1\\n\") == \"3\\n\"\nassert solution(\"53\\n1\\n\") == \"3\\n\"\nassert solution(\"54\\n1\\n\") == \"3\\n\"\nassert solution(\"55\\n1\\n\") == \"3\\n\"\nassert solution(\"56\\n1\\n\") == \"3\\n\"\nassert solution(\"57\\n1\\n"
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\") == \"7\\n\"\n"
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\") == \"7\\n\"\nassert solution(\"5 5\\n5 4\\n4 5\\n3 5\\n2 4\\n1 3\\n0 3\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100\\n100 101\\n101 102\\n102 103\\n103 104\\n104 105\\n105 106\\n106 107\\n107 108\\n108 109\\n109 110\\n110 111\\n111 112\\n112 113\\n113 114\\n114 115\\n115 116\\n116 117\\n117 118\\n118 119\\n119 120\\n120 121\\n121 122\\n122 123\\n123 124\\n124 125\\n125 126\\n126 127\\n127 128\\n128 129\\n129 130"
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"7\"\n"
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(str(2)) == 1, \"Solution should return 1 for input 2.\"\nassert solution(str(4)) == 3, \"Solution should return 3 for input 4.\"\nassert solution(str(10)) == 3, \"Solution should return 3 for input 10.\"\nassert solution(str(10)) == 2, \"Solution should return 2 for input 10.\"\nassert solution(str(7)) == 3, \"Solution should return 3 for input 7.\""
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\") == \"7\"\n"
    },
    {
        "number": 3445,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"7\\n\""
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\") == \"9-b\\n8-a\"\nassert solution(\"3\\na b\\nb c\\n3-a 5-b\\n2-b 3-b\\n3-b 2-a\\n0\") == \"9-b\\n10-c\\n11-a\"\nassert solution(\"4\\na b\\nb c\\nb d\\n3-a 5-b\\n2-b 3-b\\n3-b 2-a\\n0\") == \"9-b\\n10-c\\n11-a\\n12-b\"\nassert solution(\"5\\n1 a\\n2 b\\n3 c\\n4 d\\n5 e\\n0\") == \"1 a\\n1 b\\n1 c\\n1 d\\n1 e\"\nassert solution(\"6\\na b\\nb c\\nb d\\nb e\\nb f\\nb g\\nb h\\nb i\\nb j\\nb k\\nb l\\nb m\\nb n\\nb o\\nb p\\nb q\\nb r\\nb s\\nb t\\nb u\\nb v\\nb w\\nb x\\nb y\\nb z\" == \"2 a\\n2 b\\n2 c\\n2 d\\n2 e\\n2 f\\n2 g\\n2 h\\n2 i\\n2 j\\n2 k\\n2 l\\n2 m\\n2 n\\n2 o\\n2 p\\n2 q\\n2 r\\n2 s\\n2 t\\n2 u\\n2 v\\n2 w\\n2 x\\n2 y\\n2 z\\n3 b\\n3 c\\n3 d\\n3 e\\n3 f\\n3 g\\n3 h\\n3 i\\n3 j\\n3 k\\n3 l\\n3 m\\n3 n\\n3 o\\n3 p\\n3 q\\n3 r\\n3 s\\n3 t\\n3 u\\n3 v\\n3 w\\n3 x\\n3 y\\n3 z\\n4 c\\n4 d\\n4 e\\n4 f\\n4 g\\n4 h\\n4 i\\n4 j\\n4 k\\n4 l\\n4 m\\n4 n\\n4 o\\n4 p\\n4 q\\n4 r\\n4 s\\n4 t\\n4 u\\n4 v\\n4 w\\n4 x\\n4 y\\n4 z\\n5 d\\n5 e\\n5 f\\n5 g\\n5 h\\n5 i\\n5 j\\n5 k\\n5 l\\n5 m\\n5 n\\n5 o\\n5 p\\n5 q\\n5 r\\n5 s\\n5 t\\n5 u\\n5 v\\n5 w\\n5 x\\n5 y\\n5 z\\n6 e\\n6 f\\n6 g\\n6 h\\n6 i\\n6 j\\n6 k\\n6 l\\n6 m\\n6 n\\n6 o\\n6 p\\n6 q\\n6 r\\n6 s\\n6 t\\n6 u\\n6 v\\n6 w\\n6 x\\n6 y\\n6 z\\n7 f\\n7 g\\n7 h\\n7 i\\n7 j\\n7 k\\n7 l\\n7 m\\n7 n\\n7 o\\n7 p\\n7 q\\n7 r\\n7 s\\n7 t\\n7 u\\n7 v\\n7 w\\n7 x\\n7 y\\n7 z\\n8 g\\n8 h\\n8 i\\n8 j\\n8 k\\n8 l\\n8 m\\n8 n\\n8 o\\n8 p\\n8 q\\n8 r\\n8 s\\n8 t\\n8 u\\n8 v\\n8 w\\n8 x\\n8 y\\n8 z\\n9 h\\n9 i\\n9 j\\n9 k\\n9 l\\n9 m\\n9 n\\n9 o\\n9 p\\n9 q\\n9 r\\n9 s\\n9 t\\n9 u\\n9 v\\n9 w\\n9 x\\n9 y\\"
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0') == ['9-b', '8-a']"
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == [\"9-b\", \"8-a\"]\nprint(\"All tests passed\")\n"
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n2\na b\n3-b 5-b\n6-a 2-b\n2\naba\nbba\n0\n''') == ['9-b', '8-a']\n\nassert solution('''\n2\na b\n3-b 5-b\n6-a 2-b\n2\naba\nbba\n0\n1\n''') == ['5-b', '6-a']\n\nassert solution('''\n2\na b\n3-b 5-b\n6-a 2-b\n2\naba\nbba\n0\n2\n''') == ['5-b', '6-a', '5-b', '6-a']\n\nassert solution('''\n10\na b c d e f g h i j k l m n o p q r s t u v w x y z\n3-b 5-b\n6-a 2-b\n2\naba\nbba\n''') == ['9-b', '8-a']\n\nassert solution('''\n10\na b c d e f g h i j k l m n o p q r s t u v w x y z\n3-b 5-b\n6-a 2-b\n2\naba\nbba\n0\n1\n''') == ['5-b', '6-a']\n\nassert solution('''\n10\na b c d e f g h i j k l m n o p q r s t u v w x y z\n3-b 5-b\n6-a 2-b\n2\naba\nbba\n0\n2\n''') == ['5-b', '6-a', '5-b', '6-a']"
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('a b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0') == '9-b\\n8-a\\ndef solution(stdin: str) -> str:\\n    pass'\nassert solution('a b\\nb c\\na d e\\n0') == '9-c\\n6-b\\n4-a\\n7-e\\n5-d\\ndef solution(stdin: str) -> str:\\n    pass'\nassert solution('a b\\nc d\\n0') == '7-c\\n6-b\\n5-a\\n4-d\\ndef solution(stdin: str) -> str:\\n    pass'\nassert solution('a b\\nd e\\n0') == '7-d\\n6-c\\n5-b\\n4-e\\ndef solution(stdin: str) -> str:\\n    pass'\nassert solution('a b\\ne f\\n0') == '7-e\\n6-d\\n5-c\\n4-f\\ndef solution(stdin: str) -> str:\\n    pass'\nassert solution('a b\\nf g\\n0') == '7-f\\n6-e\\n5-b\\n4-g\\ndef solution(stdin: str) -> str:\\n    pass'\nassert solution('a b\\ng h\\n0') == '7-g\\n6-f\\n5-c\\n4-h\\ndef solution(stdin: str) -> str:\\n    pass'\nassert solution('a b\\nh i\\n0') == '7-h\\n6-g\\n5-d\\n4-i\\ndef solution(stdin: str) -> str:\\n    pass'\nassert solution('a b\\ni j\\n0') == '7-i\\n6-h\\n5-e\\n4-j\\ndef solution(stdin: str) -> str:\\n    pass'\nassert solution('a b\\nj k\\n0') == '7-j\\n6-i\\n5-f\\n4-k\\ndef solution(stdin: str) -> str:\\n    pass'\nassert solution('a b\\nk l\\n0') == '7-k\\n6-j\\n5-g\\n4-l\\ndef solution(stdin: str) -> str:\\n    pass'\nassert solution('a b\\nl m\\n0') == '7-l\\n6-k\\n5-h\\n4-m\\ndef solution(stdin: str) -> str:\\n    pass'\nassert solution('a b\\nm n\\n0') == '7-m\\n6-l\\n5-i\\n4-n\\ndef solution(stdin: str) -> str:\\n    pass'\nassert solution('a b\\nn o\\n0') == '7-n\\n6-m\\n5-j\\n4-o\\ndef solution(stdin: str) -> str:\\n    pass'\nassert solution('a b\\no p\\n0') == '7-o\\n6-n\\n5-k\\n4-p\\ndef solution(stdin: str) -> str:\\n    pass'\nassert solution('a b\\np q\\n0') == '7-p\\n6-o\\n5-l\\n4-q\\ndef solution(stdin: str) -> str:\\n    pass'\nassert solution('a b\\nq r\\n0') == '7-q\\n6-p\\n5-n\\n4-r\\ndef solution(stdin: str) -> str:\\n    pass'\nassert solution('a b\\nr s\\n0') == '7-r\\n6-q\\n5-o\\n4-s\\ndef solution(stdin: str) -> str:\\n    pass'\nassert solution('a b\\ns t\\n0') == '7-s\\n6-r\\n5-p\\n4-t\\ndef solution(stdin: str) -> str:\\n    pass'\nassert solution('a b\\nt u\\n0') == '7-t\\n6-s\\n5-q\\n4-u\\ndef solution(stdin: str) -> str:\\n    pass'\nassert solution('a b\\nu v\\n0') == '7-u\\n6-t\\n5-r\\n4-v\\ndef solution(stdin: str) -> str:\\"
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input_str) == output_str, \"Testcase failed: input_str is incorrect.\" for input_str, output_str in test_cases"
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == sample_output, f\"Expected {sample_output}, got {solution(sample_input)}\""
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\nab\\nbba\\n0') == '9-b\\n8-a\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0\") == \"9-b\\n8-a\"\nassert solution(\"1\\nabc\\n123\") == \"abc\"\n"
    },
    {
        "number": 3446,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0') == '9-b\\n8-a\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1\\n'\n                   'echo\\n'\n                   '1\\n'\n                   'echoecho') == '3246R3246\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n\nprint('All tests passed!')"
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\necho\\n1\\nechoecho\") == \"3246R3246\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"3246R3246\"\nprint(\"All tests pass.\")"
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\necho\\n1\\nechoecho\") == \"3246R3246\\ndef solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(11) == '3246R3246', 'Incorrect solution'\nassert solution(12) == 'R3246R3246', 'Incorrect solution'\nassert solution(13) == '3246R3246', 'Incorrect solution'\nassert solution(14) == 'R3246R3246', 'Incorrect solution'\nassert solution(15) == 'R3246R3246', 'Incorrect solution'\nassert solution(16) == 'R3246R3246', 'Incorrect solution'\nassert solution(17) == '3246R3246', 'Incorrect solution'\nassert solution(18) == '3246R3246', 'Incorrect solution'\nassert solution(19) == '3246R3246', 'Incorrect solution'\nassert solution(20) == '3246R3246', 'Incorrect solution'\nassert solution(21) == '3246R3246', 'Incorrect solution'\nassert solution(22) == 'R3246R3246', 'Incorrect solution'\nassert solution(23) == '3246R3246', 'Incorrect solution'\nassert solution(24) == '3246R3246', 'Incorrect solution'\nassert solution(25) == '3246R3246', 'Incorrect solution'\nassert solution(26) == '3246R3246', 'Incorrect solution'\nassert solution(27) == '3246R3246', 'Incorrect solution'\nassert solution(28) == '3246R3246', 'Incorrect solution'\nassert solution(29) == '3246R3246', 'Incorrect solution'\nassert solution(30) == '3246R3246', 'Incorrect solution'\nassert solution(31) == '3246R3246', 'Incorrect solution'\nassert solution(32) == '3246R3246', 'Incorrect solution'\nassert solution(33) == '3246R3246', 'Incorrect solution'\nassert solution(34) == '3246R3246', 'Incorrect solution'\nassert solution(35) == '3246R3246', 'Incorrect solution'\nassert solution(36) == '3246R3246', 'Incorrect solution'\nassert solution(37) == '3246R3246', 'Incorrect solution'\nassert solution(38) == '3246R3246', 'Incorrect solution'\nassert solution(39) == '3246R3246', 'Incorrect solution'\nassert solution(40) == '3246R3246', 'Incorrect solution'\nassert solution(41) == '3246R3246', 'Incorrect solution'\nassert solution(42) == '3246R3246', 'Incorrect solution'\nassert solution(43) == '3246R3246', 'Incorrect solution'\nassert solution(44) == '3246R3246', 'Incorrect solution'\nassert solution(45) == '3246R3246', 'Incorrect solution'\nassert solution(46) == '3246R3246', 'Incorrect solution'\nassert solution(47) == '3246R3246', 'Incorrect solution'\nassert solution(48) == '3246R3246', 'Incorrect solution'\nassert solution(49) == '3246R3246', 'Incorrect solution'\nassert solution(50) == '3246R3246', 'Incorrect solution'\nassert solution(51) == '3246R3246', 'Incorrect solution'\nassert solution(52) == '3246R3246', 'Incorrect solution'\nassert solution(53) == '3246R3246', 'Incorrect solution'\nassert solution(54) == '3246R3246', 'Incorrect solution'\nassert solution(55) == '3"
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1\\n' +\n                 'echo\\n' +\n                 '1\\n' +\n                 'echoecho\\n' +\n                 '') == '3246R3246\\n'\n\nassert solution('1\\n' +\n                 'echo\\n' +\n                 '1\\n' +\n                 'echoecho\\n' +\n                 '123\\n' +\n                 '') == '123R3246\\n'\n\nassert solution('1\\n' +\n                 'echo\\n' +\n                 '1\\n' +\n                 'echoecho\\n' +\n                 'abc\\n' +\n                 'def\\n' +\n                 'ghi\\n' +\n                 'jkl\\n' +\n                'mno\\n' +\n                 'pqr\\n' +\n                'stu\\n' +\n                 'vwxy\\n' +\n                 '') == 'U(1)R3246\\n'\n\nassert solution('1\\n' +\n                 'echo\\n' +\n                 '1\\n' +\n                 'echoecho\\n' +\n                 'abc\\n' +\n                 'def\\n' +\n                 'ghi\\n' +\n                 'jkl\\n' +\n                'mno\\n' +\n                 'pqr\\n' +\n                'stu\\n' +\n                 'vwxy\\n' +\n                 '123\\n' +\n                 '') == 'U(2)R3246\\n'\n\nassert solution('1\\n' +\n                 'echo\\n' +\n                 '1\\n' +\n                 'echoecho\\n' +\n                 'abc\\n' +\n                 'def\\n' +\n                 'ghi\\n' +\n                 'jkl\\n' +\n                'mno\\n' +\n                 'pqr\\n' +\n                'stu\\n' +\n                 'vwxy\\n' +\n                 '123\\n' +\n                 'def\\n' +\n                 'ghi\\n' +\n                 'jkl\\n' +\n                'mno\\n' +\n                 'pqr\\n' +\n                'stu\\n' +\n                 'vwxy\\n' +\n                 'jkl\\n' +\n                'mno\\n' +\n                 'pqr\\n' +\n                'stu\\n' +\n                 'vwxy\\n' +\n                'mno\\n' +\n                 'pqr\\n' +\n                'stu\\n' +\n                 'vwxy\\n' +\n                 'pqr\\n' +\n                'stu\\n' +\n                 'vwxy\\n' +\n                 'rst\\n' +\n                 'uvw\\n' +\n                 'xyz\\n' +\n                 '') == 'U(7)R3246\\n'\n\nassert solution('1\\n' +\n                 'echo\\n' +\n                 '1\\n' +\n                 'echoecho\\n' +\n                 'abc\\n' +\n                 'def\\n' +\n                 'ghi\\n' +\n                 'jkl\\n' +\n                'mno\\n' +\n                 'pqr\\n' +\n                'stu\\n' +\n                 'vwxy\\n' +\n                 '123\\n' +\n                 'def\\n' +\n                 'ghi\\n' +\n                 'jkl\\n' +\n                'mno\\n' +\n                 'pqr\\n' +\n                'stu\\n' +\n                 'vwxy\\n' +\n                 'jkl\\n' +\n                'mno\\n' +\n                 'pqr\\n' +\n                'stu\\n' +\n                 'vwxy\\n' +\n                'mno\\n' +\n                 'pqr\\n' +\n                'stu\\n' +\n                 'vwxy\\n' +\n                 'pqr\\n' +\n                'stu\\n' +\n                 'vwxy\\n' +\n                 'rst\\n' +\n                 'uvw\\n' +\n                 'xyz\\n' +\n                 '123\\n' +\n                 'def\\n' +\n                 'ghi\\n' +\n                 'jkl\\n' +\n                'mno\\n' +\n                 'pqr\\n' +\n                'stu\\n' +\n                 'vwxy\\n' +\n                 'jkl\\n' +\n                'mno\\n' +\n                 'pqr\\n' +\n                'stu\\n' +\n                 'vwxy\\n' +\n                'mno\\n' +\n                 'pqr\\n' +\n                'stu\\n' +\n                 'vwxy\\n' +\n                 'pqr\\n' +\n                'stu\\n' +"
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"\"\"\n3246R3246\n\"\"\"\n"
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input(\"Enter the size of the dictionary: \")) == \"3246R3246\\n\"\nassert solution(input(\"Enter the words of the dictionary: \")) == \"def\\n\"\nassert solution(input(\"Enter the number of words to type: \")) == \"3\\n\""
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"echo\\n1\\necho\\n\") == \"3246R3246\\ndef\\n\", \"Sample Input 1\"\nassert solution(\"echo\\n1\\necho\\n2\\necho\\n\") == \"3246R3246\\ndef\\n\", \"Sample Input 2\"\nassert solution(\"echo\\n1\\necho\\n3\\necho\\n4\\necho\\n\") == \"3246R3246\\ndef\\n\", \"Sample Input 3\"\nassert solution(\"echo\\n1\\necho\\n4\\necho\\n5\\necho\\n6\\necho\\n\") == \"3246R3246\\ndef\\n\", \"Sample Input 4\"\nassert solution(\"echo\\n1\\necho\\n7\\necho\\n8\\necho\\n9\\necho\\n\") == \"3246R3246\\ndef\\n\", \"Sample Input 5\""
    },
    {
        "number": 3447,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"echo\") == \"3246R3246\\n\"\nassert solution(\"echoecho\") == \"3246R3246\\n3246R3246\\n\"\nassert solution(\"1\") == \"2\\n\"\nassert solution(\"2\\n\") == \"2\\n\"\nassert solution(\"3\\n\") == \"3\\n\"\nassert solution(\"4\\n\") == \"4\\n\"\nassert solution(\"5\\n\") == \"5\\n\"\nassert solution(\"6\\n\") == \"6\\n\"\nassert solution(\"7\\n\") == \"7\\n\"\nassert solution(\"8\\n\") == \"8\\n\"\nassert solution(\"9\\n\") == \"9\\n\"\nassert solution(\"10\\n\") == \"10\\n\"\nassert solution(\"11\\n\") == \"11\\n\"\nassert solution(\"12\\n\") == \"12\\n\"\nassert solution(\"13\\n\") == \"13\\n\"\nassert solution(\"14\\n\") == \"14\\n\"\nassert solution(\"15\\n\") == \"15\\n\"\nassert solution(\"16\\n\") == \"16\\n\"\nassert solution(\"17\\n\") == \"17\\n\"\nassert solution(\"18\\n\") == \"18\\n\"\nassert solution(\"19\\n\") == \"19\\n\"\nassert solution(\"20\\n\") == \"20\\n\"\nassert solution(\"21\\n\") == \"21\\n\"\nassert solution(\"22\\n\") == \"22\\n\"\nassert solution(\"23\\n\") == \"23\\n\"\nassert solution(\"24\\n\") == \"24\\n\"\nassert solution(\"25\\n\") == \"25\\n\"\nassert solution(\"26\\n\") == \"26\\n\"\nassert solution(\"27\\n\") == \"27\\n\"\nassert solution(\"28\\n\") == \"28\\n\"\nassert solution(\"29\\n\") == \"29\\n\"\nassert solution(\"30\\n\") == \"30\\n\"\nassert solution(\"31\\n\") == \"31\\n\"\nassert solution(\"32\\n\") == \"32\\n\"\nassert solution(\"33\\n\") == \"33\\n\"\nassert solution(\"34\\n\") == \"34\\n\"\nassert solution(\"35\\n\") == \"35\\n\"\nassert solution(\"36\\n\") == \"36\\n\"\nassert solution(\"37\\n\") == \"37\\n\"\nassert solution(\"38\\n\") == \"38\\n\"\nassert solution(\"39\\n\") == \"39\\n\"\nassert solution(\"40\\n\") == \"40\\n\"\nassert solution(\"41\\n\") == \"41\\n\"\nassert solution(\"42\\n\") == \"42\\n\"\nassert solution(\"43\\n\") == \"43\\n\"\nassert solution(\"44\\n\") == \"44\\n\"\nassert solution(\"45\\n\") == \"45\\n\"\nassert solution(\"46\\n\") == \"46\\n\"\nassert solution(\"47\\n\") == \"47\\n\"\nassert solution(\"48\\n\") == \"48\\n\"\nassert solution(\"49\\n\") == \"49\\n\"\nassert solution(\"50\\n\") == \"50\\n\"\nassert solution(\"51\\n\") == \"51\\n\"\nassert solution(\"52\\n\") == \"52\\n\"\nassert solution(\"53\\n\") == \"53\\n\"\nassert solution(\"54\\n\") == \"54\\n\"\nassert solution(\"55\\n\") == \"55\\n\"\nassert solution(\"56\\n\") == \"56\\n\"\nassert solution(\"57\\n\") == \"57\\n\"\nassert solution(\"58\\n\") == \"58\\n\"\nassert solution(\"59\\n\") == \"59\\n\"\nassert solution(\"60\\n\") == \"60\\n\"\nassert solution(\"61\\n\") == \"61\\n\"\nassert solution(\"62\\n\") == \"62\\n\"\nassert solution"
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 1') == 'YES\\n1 2\\n1 3\\n'\nassert solution('2 1') == 'NO\\n'\nassert solution('3 3') == 'NO\\n'\nassert solution('4 3') == 'YES\\n1 2\\n1 3\\n'\nassert solution('10 1') == 'YES\\n1 2\\n1 3\\n'\nassert solution('10 3') == 'YES\\n1 2\\n1 3\\n'\nassert solution('5 2') == 'NO\\n'\n"
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\") == \"YES\\n1 2\\n1 3\\n\"\n\nassert solution(\"5 2\") == \"YES\\n2 3\\n4 5\\n\"\n\nassert solution(\"3 2\") == \"YES\\n1 2\\n1 3\\n\"\n\nassert solution(\"5 3\") == \"YES\\n2 3\\n4 5\\n\"\n\nassert solution(\"5 4\") == \"NO\\n\""
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3 1) == \"YES\\n1 2\\n1 3\"\nassert solution(4 2) == \"NO\""
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1\") == \"YES\\n1 2\\n1 3\"\nassert solution(\"2 3\") == \"NO\"\nassert solution(\"1 2\") == \"YES\\n2 1\"\nassert solution(\"1 3\") == \"YES\\n3 2\"\nassert solution(\"3 3\") == \"NO\""
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(31473) == \"YES\\n2 2\\n1 3\""
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1\") == \"YES\\n1 2\\n1 3\""
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1\") == \"YES\\n1 2\\n1 3\""
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == 'YES\\n1 2\\n1 3'\n"
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3147.3, 1, 2) == 'YES\\n1 2\\n1 3'"
    },
    {
        "number": 3448,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1\") == \"YES\\n1 2\\n1 3\""
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333') == '176'\n"
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == \"176\"\nassert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == \"176\""
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Solution: {solution(input())}\\nOutput: {output()}\""
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == \"176\\n\"\nassert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == \"176\\n\"\nassert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == \"176\\n\"\nassert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == \"176\\n\"\nassert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == \"176\\n\""
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 176, \"Expected output: 176, got: {}\".format(solution())"
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == 176, \"Incorrect output\""
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\") == \"176\\n\"\n\nsolution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\")"
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n\") == 176\nassert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n333333\\n\") == 34432\nassert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n333333\\n333333\\n\") == 62408\nassert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n333333\\n333333\\n333333\\n333333\\n\") == 66728\nassert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n333333\\n33"
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n') == '176\\n'\nassert solution('9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n') == '176\\n'\nassert solution('9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n') == '176\\n'\nassert solution('9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n') == '176\\n'\nassert solution('9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n') == '176\\n'\nassert solution('9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n') == '176\\n'\nassert solution('9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n') == '176\\n'\nassert solution('9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n') == '176\\n'\nassert solution('9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n') == '176\\n'\nassert solution('9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n') == '176\\n'\nassert solution('9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n') == '176\\n'\nassert solution('9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n') == '176\\n'\nassert solution('9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n') == '176\\n'\nassert solution('9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n') == '176\\n'\nassert solution('9\\n1\\n6 6\\n3333"
    },
    {
        "number": 3449,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"9\\n1\\n6 6\\n333333\\n300003\\n300003\\n300003\\n300003\\n333333\\n\") == \"176\""
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(5) == \"12\", \"Sample output is incorrect.\""
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(5) == \"12\""
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5') == '12'\nassert solution('10') == '016'\nassert solution('999') == '016'\nassert solution('1000') == '016'\nassert solution('1001') == '016'\nassert solution('1002') == '016'\nassert solution('1003') == '016'\nassert solution('1004') == '016'\nassert solution('1005') == '016'\nassert solution('1006') == '016'\nassert solution('1007') == '016'\nassert solution('1008') == '016'\nassert solution('1009') == '016'\nassert solution('1010') == '016'\nassert solution('1011') == '016'\nassert solution('1012') == '016'\nassert solution('1013') == '016'\nassert solution('1014') == '016'\nassert solution('1015') == '016'\nassert solution('1016') == '016'\nassert solution('1017') == '016'\nassert solution('1018') == '016'\nassert solution('1019') == '016'\nassert solution('1020') == '016'\nassert solution('1021') == '016'\nassert solution('1022') == '016'\nassert solution('1023') == '016'\nassert solution('1024') == '016'\nassert solution('1025') == '016'\nassert solution('1026') == '016'\nassert solution('1027') == '016'\nassert solution('1028') == '016'\nassert solution('1029') == '016'\nassert solution('1030') == '016'\nassert solution('1031') == '016'\nassert solution('1032') == '016'\nassert solution('1033') == '016'\nassert solution('1034') == '016'\nassert solution('1035') == '016'\nassert solution('1036') == '016'\nassert solution('1037') == '016'\nassert solution('1038') == '016'\nassert solution('1039') == '016'\nassert solution('1040') == '016'\nassert solution('1041') == '016'\nassert solution('1042') == '016'\nassert solution('1043') == '016'\nassert solution('1044') == '016'\nassert solution('1045') == '016'\nassert solution('1046') == '016'\nassert solution('1047') == '016'\nassert solution('1048') == '016'\nassert solution('1049') == '016'\nassert solution('1050') == '016'\nassert solution('1051') == '016'\nassert solution('1052') == '016'\nassert solution('1053') == '016'\nassert solution('1054') == '016'\nassert solution('1055') == '016'\nassert solution('1056') == '016'\nassert solution('1057') == '016'\nassert solution('1058') == '016'\nassert solution('1059') == '016'\nassert solution('1060') == '016'\nassert solution('1061') == '016'\nassert solution('1062') == '016'\nassert solution('1063') == '016'\nassert solution('1064') == '016'\nassert solution('1065') == '016"
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n') == '12\\n', \"Expected '12', got: {}\".format(solution('5\\n'))\n"
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(5) == \"12\", \"The solution should return '12'\""
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output\nprint(\"Test Passed\") if test_passed else print(\"Test Failed\")"
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"12\""
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(5) == \"12\""
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(5) == \"12\"\nassert solution(123456) == \"016\"\nassert solution(10) == \"001\"\nassert solution(100) == \"001\"\nassert solution(1000) == \"016\""
    },
    {
        "number": 3450,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(5) == \"12\""
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"((()480617-570928)\") == 480\nassert solution(\"(()()())()()()()\") == \"?\""
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 1\\n((()480617-570928\\n\") == 480\nassert solution(\"4 1\\n(())\\n\") == 0\nassert solution(\"4 1\\n((())\\n\") == 0\nassert solution(\"4 1\\n((())\\n-1000\\n\") == 0"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 1\\n(())\\n480\\n617\\n-570\\n928') == 480\nassert solution('4 1\\n(())\\n480\\n617\\n-570\\n928') == 480\nassert solution('4 1\\n(())\\n480\\n617\\n-570\\n928') == 480\nassert solution('4 1\\n(())\\n480\\n617\\n-570\\n928') == 480\nassert solution('4 1\\n(())\\n480\\n617\\n-570\\n928') == 480\nassert solution('4 1\\n(())\\n480\\n617\\n-570\\n928') == 480\nassert solution('4 1\\n(())\\n480\\n617\\n-570\\n928') == 480\nassert solution('4 1\\n(())\\n480\\n617\\n-570\\n928') == 480\nassert solution('4 1\\n(())\\n480\\n617\\n-570\\n928') == 480\nassert solution('4 1\\n(())\\n480\\n617\\n-570\\n928') == 480\nassert solution('4 1\\n(())\\n480\\n617\\n-570\\n928') == 480\nassert solution('4 1\\n(())\\n480\\n617\\n-570\\n928') == 480\nassert solution('4 1\\n(())\\n480\\n617\\n-570\\n928') == 480\nassert solution('4 1\\n(())\\n480\\n617\\n-570\\n928') == 480\nassert solution('4 1\\n(())\\n480\\n617\\n-570\\n928') == 480\nassert solution('4 1\\n(())\\n480\\n617\\n-570\\n928') == 480\nassert solution('4 1\\n(())\\n480\\n617\\n-570\\n928') == 480\nassert solution('4 1\\n(())\\n480\\n617\\n-570\\n928') == 480\nassert solution('4 1\\n(())\\n480\\n617\\n-570\\n928') == 480\nassert solution('4 1\\n(())\\n480\\n617\\n-570\\n928') == 480\nassert solution('4 1\\n(())\\n480\\n617\\n-570\\n928') == 480\nassert solution('4 1\\n(())\\n480\\n617\\n-570\\n928') == 480\nassert solution('4 1\\n(())\\n480\\n617\\n-570\\n928') == 480\nassert solution('4 1\\n(())\\n480\\n617\\n-570\\n928') == 480\nassert solution('4 1\\n(())\\n480\\n617\\n-570\\n928') == 480\nassert solution('4 1\\n(())\\n480\\n617\\n-570\\n928') == 480\nassert solution('4 1\\n(())\\n480\\n617\\n-570\\n928') == 480\nassert solution('4 1\\n(())\\n480\\n617\\n-570\\n"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    4 1\n    ((()\n    480\n    617\n    -570\n    928\n    \"\"\"\n) == 480\nassert solution(\n    \"\"\"\n    3 2\n    ()()\n    \"\"\"\n) == 184\nassert solution(\n    \"\"\"\n    3 0\n    ()(())\n    \"\"\"\n) == 0"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Solution does not match the expected output. Input: {input()}, Expected Output: {expected_output}\""
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"480\\n\", \"Test failed: incorrect output\"\nassert solution(input()) == \"480\\n\", \"Test failed: incorrect output\""
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('(())\\n480\\n617\\n-570\\n928') == 480\n\nfrom typing import List"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 1\\n((()480617-570928\") == 480, \"Answer should be 480\")\nassert solution(\"4 1\\n((()480617-570928\") == 2048, \"Answer should be 2048\")"
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"480\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3451,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4 1\\n((()\\n480\\n617\\n-570\\n928\\n') == '480')\nassert solution('4 1\\n((()\\n480\\n617\\n-570\\n928\\n') == '?')"
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\").read()) == \"2 4\\n5 6\\n7 8 9 10 11 12 13\"\n"
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\") == \"2 4\\n5 6\\n7 8 9 10 11 12 13\""
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n\") == \"2 4\\n5 6\\n7 8 9 10 11 12 13\"\nassert solution(\"13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n3 2\\n4 3\\n2 5\\n5 6\\n3 4\\n3 6\\n2 7\\n5 7\\n6 8\\n7 9\\n\") == \"2 4\\n5 6\\n7 8 9 10 11 12 13\""
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"2 4\\n5 6\\n7 8 9 10 11 12 13\", \"Test case 1 failed\""
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n13\n2 2 4\n3 1 3 5\n2 2 4\n3 1 3 6\n2 2 6\n2 4 5\n2 8 9\n2 7 9\n2 7 8\n2 11 13\n2 10 12\n2 11 13\n2 10 12\n\"\"\") == \"\"\"\n2 4\n5 6\n7 8 9 10 11 12 13\n\"\"\""
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12') == '2 4\\n5 6\\n7 8 9 10 11 12 13'"
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == expected\nassert solution(sample_input) == expected"
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '2 4\\n5 6\\n7 8 9 10 11 12 13'"
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n') == '2 4\\n5 6\\n7 8 9 10 11 12 13'"
    },
    {
        "number": 3452,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\nr'''\n13\n2 2 4\n3 1 3 5\n2 2 4\n3 1 3 6\n2 2 6\n2 4 5\n2 8 9\n2 7 9\n2 7 8\n2 11 13\n2 10 12\n2 11 13\n2 10 12\n''') == '2 4\\n5 6\\n7 8 9 10 11 12 13', \"Jay's carnival reputation is reduced by 25%\"\nassert solution(\nr'''\n13\n2 2 4\n3 1 3 5\n2 2 4\n3 1 3 6\n2 2 6\n2 4 5\n2 8 9\n2 7 9\n2 7 8\n2 11 13\n2 10 12\n2 11 13\n2 10 12\n''') == '2 4\\n5 6\\n7 8 9 10 11 12 13', \"Jay's carnival reputation is not affected by accidents\"\nassert solution(\nr'''\n13\n2 2 4\n3 1 3 5\n2 2 4\n3 1 3 6\n2 2 6\n2 4 5\n2 8 9\n2 7 9\n2 7 8\n2 11 13\n2 10 12\n2 11 13\n2 10 12\n''') == '2 4\\n5 6\\n7 8 9 10 11 12 13', \"Jay's carnival reputation is not affected by other factors\"\nassert solution(\nr'''\n13\n2 2 4\n3 1 3 5\n2 2 4\n3 1 3 6\n2 2 6\n2 4 5\n2 8 9\n2 7 9\n2 7 8\n2 11 13\n2 10 12\n2 11 13\n2 10 12\n''') == '2 4\\n5 6\\n7 8 9 10 11 12 13', \"Jay's carnival reputation is not affected by other factors\"\nassert solution(\nr'''\n13\n2 2 4\n3 1 3 5\n2 2 4\n3 1 3 6\n2 2 6\n2 4 5\n2 8 9\n2 7 9\n2 7 8\n2 11 13\n2 10 12\n2 11 13\n2 10 12\n''') == '2 4\\n5 6\\n7 8 9 10 11 12 13', \"Jay's carnival reputation is not affected by other factors\"\nassert solution(\nr'''\n13\n2 2 4\n3 1 3 5\n2 2 4\n3 1 3 6\n2 2 6\n2 4 5\n2 8 9\n2 7 9\n2 7 8\n2 11 13\n2 10 12\n2 11 13\n2 10 12\n''') == '2 4\\n5 6\\n7 8 9 10 11 12 13', \"Jay's carnival reputation is not affected by other factors\"\nassert solution(\nr'''\n13\n2 2 4\n3 1 3 5\n2 2 4\n3 1 3 6\n2 2 6\n2 4 5\n2 8 9\n2 7 9\n2 7 8\n2 11 13\n2 10 12\n2 11 13\n2 10 12\n''') == '2 4\\n5 6\\n7 8 9 10 11 12 13',"
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"35 39 36 27 29\\n\", \"Test failed\"\n"
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(None) == ''"
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"35 39 36 27 29\", \"Incorrect output. Please check your code and try again.\""
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2\") == \"35 39 36 27 29\\n\"\nassert solution(\"10 10\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2\") == \"36 40 42 44 45\\n\"\nassert solution(\"1000 1000\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2\") == \"3737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373737373"
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), \"Test failed\"\n"
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2\") == \"35 39 36 27 29\\n\"\n"
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2\") == \"35 39 36 27 29\""
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2\") == \"35 39 36 27 29\\n\"\n"
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"35 39 36 27 29\\n\", \"Please implement the solution as described in the problem statement.\""
    },
    {
        "number": 3453,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2\") == \"35 39 36 27 29\"\n"
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 3\\n3 2 1') == '0 672'"
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"0 672\", \"The expected output is not correct.\""
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"The output is not correct. Input: {input()}, Output: {output()}\""
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 3\\n3 2 1') == '0 672'"
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_data) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input_data)}\""
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"0 672\""
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 3\\n3 2 1') == '0 672'\n"
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '0 672', 'Your code is not correct. Please see the provided code.'\n"
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 3\\n3 2 1') == '0 672'"
    },
    {
        "number": 3454,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}\\nOutput: {output()}\\n\\nSolution:\\n{solution(input())}\""
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\") == \"2.500000\""
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\") == 2.500000\n"
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=r\"\"\"\n    4 5 100\n    0 10 10\n    1 10 5\n    1 20 35\n    2 2 18\n    2 40 50\n    \"\"\") == \"2.500000\\nImpossible\""
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n\") == \"2.500000\""
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r')) == '2.500000'"
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50') == 2.5"
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\") == 2.500000"
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50') == '2.500000\\nImpossible'\nassert solution('4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n3 4 10') == '2.500000\\nImpossible'\nassert solution('4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n3 4 10\\n4 6 15') == '2.500000\\nImpossible'"
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\") == \"2.500000\\n\"\nassert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n3 10 30\") == \"Impossible\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3455,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2.500000\""
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 3\nassert solution(5) == 2\nassert solution(8) == 3\nassert solution(12) == 4\nassert solution(15) == 5\nassert solution(20) == 6\n"
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n5 3 4') == '3\\n3\\n'"
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3 4\") == \"3\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"3\"\n"
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == \"3\"\nassert solution(4) == \"2\"\nassert solution(5) == \"1\"\nassert solution(6) == \"0\""
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    3\n    5 3 4\n    \"\"\"\n) == \"3\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\n    \"\"\"\n    2\n    1 2\n    \"\"\"\n) == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\n    \"\"\"\n    1\n    1\n    \"\"\"\n) == \"1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\n    \"\"\"\n    4\n    1 2 3 4\n    \"\"\"\n) == \"4\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('example_input.txt')) == '3\\n'"
    },
    {
        "number": 3456,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution([3, 5, 3, 4]) == 3\n"
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\""
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt').read()) == '2'\n"
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1 1\") == 2"
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1 1\") == \"2\"\nassert solution(\"10 1 1\") == \"10\"\nassert solution(\"20 1 1\") == \"20\"\nassert solution(\"1 10 1\") == \"100\"\nassert solution(\"1 10 10\") == \"1000\""
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1 1\") == \"2\"\nassert solution(\"3 2 1\") == \"4\"\nassert solution(\"4 3 1\") == \"8\"\nassert solution(\"5 4 1\") == \"12\"\nassert solution(\"6 5 1\") == \"16\"\nassert solution(\"7 6 1\") == \"20\"\nassert solution(\"8 7 1\") == \"24\"\nassert solution(\"9 8 1\") == \"28\"\nassert solution(\"10 9 1\") == \"32\"\nassert solution(\"11 10 1\") == \"36\"\nassert solution(\"12 11 1\") == \"40\"\nassert solution(\"13 12 1\") == \"44\"\nassert solution(\"14 13 1\") == \"48\"\nassert solution(\"15 14 1\") == \"52\"\nassert solution(\"16 15 1\") == \"56\"\nassert solution(\"17 16 1\") == \"60\"\nassert solution(\"18 17 1\") == \"64\"\nassert solution(\"19 18 1\") == \"68\"\nassert solution(\"20 19 1\") == \"72\"\nassert solution(\"21 20 1\") == \"76\"\nassert solution(\"22 21 1\") == \"80\"\nassert solution(\"23 22 1\") == \"84\"\nassert solution(\"24 23 1\") == \"88\"\nassert solution(\"25 24 1\") == \"92\"\nassert solution(\"26 25 1\") == \"96\"\nassert solution(\"27 26 1\") == \"100\"\nassert solution(\"28 27 1\") == \"104\"\nassert solution(\"29 28 1\") == \"108\"\nassert solution(\"30 29 1\") == \"112\"\nassert solution(\"31 30 1\") == \"116\"\nassert solution(\"32 31 1\") == \"120\"\nassert solution(\"33 32 1\") == \"124\"\nassert solution(\"34 33 1\") == \"128\"\nassert solution(\"35 34 1\") == \"132\"\nassert solution(\"36 35 1\") == \"136\"\nassert solution(\"37 36 1\") == \"140\"\nassert solution(\"38 37 1\") == \"144\"\nassert solution(\"39 38 1\") == \"148\"\nassert solution(\"40 39 1\") == \"152\"\nassert solution(\"41 40 1\") == \"156\"\nassert solution(\"42 41 1\") == \"160\"\nassert solution(\"43 42 1\") == \"164\"\nassert solution(\"44 43 1\") == \"168\"\nassert solution(\"45 44 1\") == \"172\"\nassert solution(\"46 45 1\") == \"176\"\nassert solution(\"47 46 1\") == \"180\"\nassert solution(\"48 47 1\") == \"184\"\nassert solution(\"49 48 1\") == \"188\"\nassert solution(\"50 49 1\") == \"192\"\nassert solution(\"51 50 1\") == \"196\"\nassert solution(\"52 51 1\") == \"200\"\nassert solution(\"53 52 1\") == \"204\"\nassert solution(\"54 53 1\") == \"208\"\nassert solution(\"55 54 1\") == \"212\"\nassert solution(\"56 55 1\") == \"216\"\nassert solution(\"57 56 1\") == \"220\"\nassert solution(\"58 57 1\") == \"224\"\nassert solution(\"59 58 1\") == \"228\"\nassert solution(\"60 59 1\") == \"232\"\nassert solution(\"61 60 "
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(2, 1, 1) == 2"
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    '''\n    2 1 1\n    '''\n) == '2'\n\nassert solution(\n    '''\n    5 1 1\n    '''\n) == '1'\n\nassert solution(\n    '''\n    8 1 1\n    '''\n) == '0'"
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1 1\\n\") == \"2\\n\"\nassert solution(\"3 1 1\\n\") == \"3\\n\"\nassert solution(\"5 1 1\\n\") == \"4\\n\"\nassert solution(\"1 2 1\\n\") == \"11\\n\"\nassert solution(\"1 1 2\\n\") == \"2\\n\""
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2\\n\", \"Your solution is incorrect.\""
    },
    {
        "number": 3457,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1 1\") == 2\nprint(\"All tests passed\")"
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 3 5\") == \"7\"\nassert solution(\"5\\n1 2 3 4 5\") == \"12\"\nassert solution(\"10\\n1 1 1 1 1 1 1 1 1\") == \"9\"\n"
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"7\\n\", \"The output is incorrect. The function should return '7'.\""
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"7\\n\""
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"7\""
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 7"
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"7\"\n"
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '7\\n'"
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 3 5\") == \"7\"\n"
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 7, \"Incorrect output\"\nassert solution() == 7, \"Incorrect output\"\nassert solution() == 7, \"Incorrect output\"\nassert solution() == 7, \"Incorrect output\"\nassert solution() == 7, \"Incorrect output\"\nassert solution() == 7, \"Incorrect output\"\nassert solution() == 7, \"Incorrect output\""
    },
    {
        "number": 3458,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 3 5\") == \"7\\n\", \"The output is not correct.\""
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r')) == 'fred jetsons\\njohn jets\\nruth rockets'"
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"fred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\") == \"fred jetsons\\njohn jets\\nruth rockets\"\nassert solution(\"fred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\nmoore 1 rockets\") == \"fred jetsons\\njohn jets\\nruth rockets\"\nassert solution(\"fred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\nimpossible\") == \"Impossible.\"\nassert solution(\"fred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\nmoore 1 rockets\") == \"Impossible.\"\nassert solution(\"fred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\nimpossible\") == \"Impossible.\""
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\") == \"fred jetsons\\njohn jets\\nruth rockets\\n\"\nassert solution(\"4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\") == \"Impossible.\""
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\") == \"fred jetsons\\njohn jets\\nruth rockets\"\nassert solution(\"2\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\") == \"fred jetsons\\njohn jets\\nruth rockets\"\nassert solution(\"2\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\") == \"fred jetsons\\njohn jets\\nruth rockets\"\nassert solution(\"2\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\") == \"fred jetsons\\njohn jets\\nruth rockets\"\nassert solution(\"2\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\") == \"fred jetsons\\njohn jets\\nruth rockets\""
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"fred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n\") == \"fred jetsons\\njohn jets\\nruth rockets\"\nassert solution(\"fred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\nimpossible\\n\") == \"Impossible.\"\nassert solution(\"fred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n\") == \"fred jetsons\\njohn jets\\nruth rockets\""
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n\") == \"fred jetsons\\njohn jets\\nruth rockets\\n\"\nassert solution(\"4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n\") == \"Impossible.\""
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"fred dinosaur 2 jets jetsons\") == \"fred jetsons\\njohn jets\\nruth rockets\"\nassert solution(\"john rhinocerous 2 jets rockets\") == \"fred jetsons\\njohn jets\\nruth rockets\"\nassert solution(\"mary rhinocerous 2 jetsons rockets\") == \"fred jetsons\\njohn jets\\nruth rockets\"\nassert solution(\"ruth platypus 1 rockets\") == \"Impossible.\""
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"fred dinosaur 2 jets jetsons\") == \"fred jetsons\"\nassert solution(\"john rhinocerous 2 jets rockets\") == \"john jets\"\nassert solution(\"mary rhinocerous 2 jetsons rockets\") == \"john jets\"\nassert solution(\"ruth platypus 1 rockets\") == \"ruth rockets\""
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"\"\"\nfred jetsons\njohn jets\nruth rockets\n\"\"\"\n\nassert solution(stdin) == \"\"\"\nfred jetsons\njohn jets\nruth rockets\n"
    },
    {
        "number": 3459,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rockets\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n\") == \"fred jetsons\\njohn jets\\nruth rockets\\n\""
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == [1, 2, 1], \"Please implement the solution.\""
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_string) == output_string, f\"Test failed for input '{input_string}'. Expected output: '{output_string}', got '{solution(input_string)}'.\"\n"
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n4 3\\n-10 9\\n-2 3\") == [\"1 2 1\"]"
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == ['1 2 1', '2 1 2', '1 1 1']"
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(None) == []\n\ncans = []\nfor _ in range(int(input())):\n    x, r = map(int, input().split())\n    cans.append((x, r))\n\nexplosions = []\nfor can in cans:\n    if can[0] == 0 and can[1] == 0:\n        explosions.append(can)\n        break\n\nn_explosions = len(explosions)\n\ntotal_cans = n_explosions * (n_explosions - 1) // 2\n\nprint(\" \".join(map(str, total_cans)))"
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n-10 9\\n-2 3\") == \"1 2 1\""
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(r'''\n    3\n    4 3\n    -10 9\n    -2 3''') == ['1', '2', '1']"
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"Solution incorrect for input: {input()} with expected output: {expected}\""
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution([input()]) == [str(1)]*int(input())"
    },
    {
        "number": 3460,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n-10 9\\n-2 3\") == \"1 2 1\"\n"
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 2.125, \"The expected output is not correct.\""
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == '''2.125'''"
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10') == '2.125\\n'\n"
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '2.125'"
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 2.125"
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 2.125\n"
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\") == \"2.125\""
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2.125\", \"Incorrect output. Please see the provided code for the correct solution.\""
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\\n\") == \"2.125\\n\""
    },
    {
        "number": 3461,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2.125\", \"Test Failed\""
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('*.c') == ['main.c', 'a.out']\nassert solution('a*') == ['a.out']\nassert solution('ab*cd') == ['ab.out', 'acd.out']\nassert solution('def') == ['def.out']\nassert solution('*') == ['main.c', 'a.out', 'def.out', 'ab.out', 'acd.out']\n"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('*.c') == ['main.c', 'a.out']\nassert solution('*/c') == ['main.c', 'a.out']\nassert solution('*.*') == ['main.c', 'a.out','readme', 'yacc']\nassert solution('c.*') == ['main.c', 'a.out','readme', 'yacc']\nassert solution('*.cpp') == []"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == [\"main.c\", \"a.out\", \"def.py\"]\nassert solution(open(\"test.txt\", \"r\")) == [\"test.txt\"]\nassert solution(open(\"dir\", \"r\")) == [\"dir/1.txt\", \"dir/2.txt\", \"dir/3.txt\"]\nassert solution(open(\"ls\", \"r\")) == [\"ls\"]"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"a.*\") == [\"main.c\", \"a.out\"]\nassert solution(\"a.out\") == [\"a.out\"]\nassert solution(\"b.*\") == []\nassert solution(\"a.out.txt\") == [\"a.out.txt\"]\nassert solution(\"a.*.c\") == [\"main.c\", \"a.out\", \"def.c\"]\n"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"a.out\", \"4\\nmain.c\\na.out\\nreadme\\nyacc\") == [\"main.c\", \"a.out\"]\nassert solution(\"a.*\", \"4\\nmain.c\\na.out\\nreadme\\nyacc\") == [\"main.c\", \"a.out\"]\nassert solution(\"*.c\", \"4\\nmain.c\\na.out\\nreadme\\nyacc\") == [\"main.c\"]\nassert solution(\"*.d\", \"4\\nmain.c\\na.out\\nreadme\\nyacc\") == []\nassert solution(\"a.*b\", \"4\\nmain.c\\na.out\\nreadme\\nyacc\") == []"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"*.c\", 4) == ['main.c', 'a.out']\nassert solution(\"a.*\", 4) == ['a.out']\nassert solution(\"a.*\", 4) == ['a.out']\nassert solution(\"a*.c\", 4) == ['main.c', 'a.out']\n"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) =='main.c\\n' + 'a.out\\n' + 'def solution(stdin: str) -> str:\\n' + '    pass\\n'"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input(\"Enter the pattern: \")) == ['main.c', 'a.out']"
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"*.c\") == \"main.c\" and solution(\"*.c\", 4) == \"main.c\" and solution(\"a.out\") == \"a.out\" and solution(\"b.txt\", 3) == \"\" and solution(\"*.txt\", 2) == \"README.txt\" and solution(\"*.c\", 2) == \"main.c\" and solution(\"*\") == \"main.c\" and solution(\"a.out\", 2) == \"a.out\" and solution(\"b.txt\", 1) == \"b.txt\" and solution(\"*.txt\", 1) == \"README.txt\" and solution(\"*\", 2) == \"main.c\""
    },
    {
        "number": 3462,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('*.c') == ['main.c', 'a.out']\nassert solution('*.[co]') == ['main.c', 'a.out','readme']\nassert solution('*') == ['main.c', 'a.out','readme', 'yacc']"
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 1\\n0.500000\\n') == '0.500000\\n'\nassert solution('2 2\\n0.600000\\n') == '0.480000\\n'\nassert solution('3 3\\n0.700000\\n') == '0.620000\\n'\nassert solution('4 4\\n0.800000\\n') == '0.780000\\n'\nassert solution('5 5\\n0.900000\\n') == '0.920000\\n'\nassert solution('6 6\\n0.950000\\n') == '0.970000\\n'"
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == 0.500000\nprint(0.500000)"
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 1\\n0.500000') == '0.500000'\n\nsolution('1 1\\n0.500000')"
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1\\n0.500000\") == \"0.500000\\n\"\n"
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1\\n0.500000\") == \"0.500000\\n\""
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Test case failed\"\n"
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1\\n0.500000\\n\") == \"0.500000\\n\"  # pass\n"
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"0.500000\", \"Test case 1 failed.\""
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 1\\n0.500000') == '0.500000'  # correct output\nprint('All tests passed.')"
    },
    {
        "number": 3463,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '0.500000', \"The output should be '0.500000', but it is '{0}'\".format(solution())"
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 49.9\") == \"0.0\", \"The solution is not correct.\""
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 49.9\") == \"0.0\""
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 49.9\") == \"0.0\", \"Your solution is incorrect.\""
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    0 49.9\n    \"\"\"\n) == \"0.0\"\n\nassert solution(\n    \"\"\"\n    2.9 50\n    \"\"\"\n) == \"0.0\"\n\nassert solution(\n    \"\"\"\n    20 50\n    \"\"\"\n) == \"0.0\"\n\nassert solution(\n    \"\"\"\n    70 60\n    \"\"\"\n) == \"0.0\"\n\nassert solution(\n    \"\"\"\n    60 55\n    \"\"\"\n) == \"0.0\"\n\nassert solution(\n    \"\"\"\n    50 45\n    \"\"\"\n) == \"0.0\"\n\nassert solution(\n    \"\"\"\n    20 55\n    \"\"\"\n) == \"0.0\"\n\nassert solution(\n    \"\"\"\n    80 90\n    \"\"\"\n) == \"0.0\"\n\nassert solution(\n    \"\"\"\n    40 30\n    \"\"\"\n) == \"0.0\"\n\nassert solution(\n    \"\"\"\n    30 60\n    \"\"\"\n) == \"0.0\"\n\nassert solution(\n    \"\"\"\n    70 40\n    \"\"\"\n) == \"0.0\"\n\nassert solution(\n    \"\"\"\n    10 50\n    \"\"\"\n) == \"0.0\"\n\nassert solution(\n    \"\"\"\n    20 55\n    \"\"\"\n) == \"0.0\""
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 49.9\") == \"0.0\""
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 0.0, \"Invalid solution\"\nprint(\"All tests passed successfully!\")"
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 49.9\") == \"0.0\""
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 49.9\") == \"0.0\""
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 49.9\") == \"0.0\""
    },
    {
        "number": 3464,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"0.0\\n\"\nprint(\"OK\")"
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n1 2\\n2 3\\n3 1\\n4 1') == '4 1\\n2 1\\n3 2\\n1 3'\n\nassert solution('3\\n1 2\\n2 3\\n3 1\\n4 1') == '1 2\\n2 3\\n3 1\\n4 1'\n\nassert solution('4\\n1 2\\n2 3\\n3 4\\n4 1') == '4 1\\n2 1\\n3 2\\n1 3'"
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Expected: {output()}, Received: {solution(input())}\"\n"
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"\"\"\n"
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 1\\n4 1\") == \"4 1\\n2 1\\n3 2\\n1 3\"\nassert solution(\"5\\n1 2\\n1 3\\n2 3\\n2 4\\n3 4\\n4 5\") == \"5 3\\n1 2\\n4 4\\n2 5\\n3 5\"\nassert solution(\"2\\n1 2\\n1 3\") == \"1 2\\n1 3\"\nassert solution(\"5\\n2 3\\n3 4\\n4 5\\n2 4\\n4 3\\n3 2\") == \"5 4\\n2 3\\n4 3\\n3 5\""
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == expected, f\"Solution does not match expected output.\\nGot: {solution}\\nExpected: {expected}\"\n"
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2\\n2 3\\n3 1\\n4 1\") == \"4 1\\n2 1\\n3 2\\n1 3\"\nassert solution(\"1 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\") == \"1 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\"\nassert solution(\"1 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100\\n100 101\\n101 102\\n102 103\\n103 104\\n104 105\\n105 106\\n106 107\\n107 108\\n108 109\\n109 110\\n110 111\\n111 112\\n112 113\\n113 114\\n114 115\\n115 116\\n116 117\\n117 118\\n118 119\\n119 120\\n120 121\\n12"
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2\\n2 3\\n3 1\\n4 1\") == \"4 1\\n2 1\\n3 2\\n1 3\"\nassert solution(\"2 2\\n2 2\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5\\n5 5\") == \"5 5\\n2 2\\n3 3\\n4 4\"\nassert solution(\"1 1\\n1 1\\n2 2\\n2 2\\n3 3\\n3 3\\n4 4\\n4 4\") == \"4 4\\n1 1\\n2 2\\n3 3\"\nassert solution(\"1 2\\n2 3\\n3 1\\n4 1\\n1 1\") == \"4 1\\n2 1\\n3 2\\n1 3\"\nassert solution(\"1 1\\n1 1\\n2 2\\n2 2\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5\\n5 5\\n6 6\\n6 6\\n7 7\\n7 7\\n8 8\\n8 8\\n9 9\\n9 9\\n10 10\\n10 10\") == \"4 1\\n2 1\\n3 2\\n1 3\""
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 1\\n4 1\") == \"4 1\\n2 1\\n3 2\\n1 3\"\nassert solution(\"4\\n1 2\\n3 1\\n2 3\\n4 1\") == \"4 1\\n2 1\\n3 2\\n1 3\"\nassert solution(\"4\\n1 2\\n2 3\\n3 1\\n4 1\") == \"4 1\\n2 1\\n3 2\\n1 3\"\nassert solution(\"4\\n1 2\\n2 3\\n3 1\\n4 1\") == \"4 1\\n2 1\\n3 2\\n1 3\"\nassert solution(\"4\\n1 2\\n3 1\\n2 3\\n4 1\") == \"4 1\\n2 1\\n3 2\\n1 3\""
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 1\\n4 1\") == \"4 1\\n2 1\\n3 2\\n1 3\"\nassert solution(\"4\\n1 2\\n2 3\\n3 1\\n4 2\") == \"4 2\\n2 1\\n3 2\\n1 3\"\nassert solution(\"4\\n1 2\\n2 3\\n3 1\\n4 3\") == \"4 3\\n2 1\\n3 2\\n1 3\"\nassert solution(\"4\\n1 2\\n2 3\\n3 1\\n4 4\") == \"4 4\\n2 1\\n3 2\\n1 3\"\nassert solution(\"4\\n1 2\\n2 3\\n3 1\\n4 5\") == \"4 5\\n2 1\\n3 2\\n1 3\""
    },
    {
        "number": 3465,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1\", \"You should implement the solution\"\n"
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n6 5\n2 1 6 3 5 3\n1 2 5 3 5\n''') == '1\\n'\n\nassert solution('''\n10 10\n1 2 3 4 5 6 7 8 9 10\n1 1 1 1 1 1 1 1 1 1\n''') == '10\\n'"
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '1'"
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\"\n) == \"1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"Your solution here\""
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('6 5\\n2 1 6 3 5 3\\n1 2 5 3 5') == 1\nassert solution('1 3\\n2 1 4 3 5') == 1\nassert solution('6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n3 2 4 3 5') == 3\n"
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n\") == \"1\\n\"\nassert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n100 2 5 3 5\\n\") == \"forever\\n\""
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == 1\nassert solution(\"7 3\\n2 4 3 2 5 1\\n1 2 3 4 5 6\") == \"infinite\""
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\""
    },
    {
        "number": 3466,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\"\nassert solution(\"5 1\\n3 4 5\\n2 2 2 2 2\") == \"Infinity\""
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1 10\\n0 1 1 2 6\") == \"3\"\nassert solution(\"2 1 10\\n0 1 1 10 6\") == \"impossible\"\nassert solution(\"2 1 10\\n0 1 1 10 100\") == \"impossible\"\nassert solution(\"2 1 10\\n0 1 1 10 1000\") == \"impossible\"\nassert solution(\"2 1 10\\n0 1 1 10 10000\") == \"impossible\"\nassert solution(\"2 1 10\\n0 1 1 10 100000\") == \"impossible\"\n"
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3, 1, 10) == \"3\"\nassert solution(6, 1, 10) == \"impossible\"\nassert solution(6, 1, 100) == \"impossible\"\nassert solution(4, 1, 10) == \"impossible\"\nassert solution(6, 1, 1000) == \"impossible\"\n"
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('0 1 1 2 6') == '3'\nassert solution('2 1 10') == 'impossible'\nassert solution('0 1 1 2 6 8') == 'impossible'\nassert solution('0 1 1 2 10') == 'impossible'\nassert solution('0 1 1 2 6 9') == 'impossible'\nassert solution('0 1 1 2 10 8') == 'impossible'"
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    2 1 10\n    0 1 1 2 6\n    \"\"\"\n) == \"3\""
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution"
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"3\"\nprint(\"All test cases pass\")"
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 1 10\\n0 1 1 2 6') == '3'"
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"3\\n\""
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"3\"\nassert solution(\"2 1 10\\n0 1 1 2 6\") == \"3\"\nassert solution(\"2 1 10\\n1 2 3 4 5\") == \"impossible\"\nassert solution(\"2 1 10\\n0 1 1 2 3\") == \"impossible\"\nassert solution(\"2 1 10\\n0 1 1 2 6\\n1 2 3 4 5\") == \"impossible\""
    },
    {
        "number": 3467,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=input()) == 'Output the latest time at which you can leave the hotel while arriving to your meeting on time, in seconds from now.'"
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 100\\n99 1\\n1 99\\n\") == \"2\\n1 2\""
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 100\\n99 1\\n1 99') == '2\\n1 2'\nassert solution('100 1\\n1 100') == '1\\n2'\nassert solution('100 10\\n100 1') == '1\\n10'\nassert solution('1 100\\n1 100') == '1\\n1'\nassert solution('1 1\\n1 10') == '1\\n1'\nassert solution('1 1\\n1 1') == '1\\n1'\nassert solution('1 10\\n10 10') == '1\\n10'\nassert solution('1000 1\\n1000 1') == '1\\n2'\nassert solution('1000 1\\n1000 2') == '1\\n2'\nassert solution('1 1000\\n1000 1') == '1\\n2'\nassert solution('1 1000\\n1000 2') == '1\\n2'\nassert solution('1 1000\\n1000 3') == '1\\n2'\nassert solution('1 1000\\n1000 4') == '1\\n2'\nassert solution('1000 1\\n1000 1') == '1\\n2'\nassert solution('1000 1\\n1000 2') == '1\\n2'\nassert solution('1 1000\\n1000 1') == '1\\n2'\nassert solution('1 1000\\n1000 2') == '1\\n2'\nassert solution('1 1000\\n1000 3') == '1\\n2'\nassert solution('1 1000\\n1000 4') == '1\\n2'"
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2\\n1 2\\n\"\nassert solution(input()) == \"2\\n2 1\\n\"\nassert solution(input()) == \"0\\n\""
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 100\\n99 1\\n1 99\") == \"2\\n1 2\\n\"\nassert solution(\"2 200\\n100 1\\n1 100\") == \"2\\n1 2\\n\"\nassert solution(\"2 500\\n100 1\\n1 500\") == \"2\\n1 2\\n\"\nassert solution(\"2 300\\n100 1\\n1 400\") == \"2\\n1 2\\n\"\nassert solution(\"2 400\\n100 1\\n1 500\") == \"2\\n1 2\\n\""
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2\\n1 2\""
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2\\n1 2\""
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == expected_output, f\"Test failed: {solution(sample_input)} should be {expected_output}\""
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n\\tpass\\n\"\nassert solution(open(\"input.txt\", \"r\")) == \"def solution(stdin: str) -> str:\\n\\tpass\\n\"\n"
    },
    {
        "number": 3468,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 100\\n99 1\\n1 99\") == \"2\\n1 2\"\nassert solution(\"1 1 100 500\") == \"1\"\nassert solution(\"500 1000 1000 1000 1000\") == \"1\"\nassert solution
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('H\\nT\\n0.5\\n') == '0.5\\n'"
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('H\\nT\\n0.5') == '0.5'\nassert solution('H\\nT\\n0.5') == '0.5'\nassert solution('H\\nT\\n0.5') == '0.5'\nassert solution('H\\nT\\n0.5') == '0.5'\nassert solution('H\\nT\\n0.5') == '0.5'\nassert solution('H\\nT\\n0.5') == '0.5'"
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"H\\nT\\n0.5\") == \"0.5\\n\"\n"
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"H\\nT\\n0.5\") == \"0.5\""
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"H\\nT\\n0.5\") == \"0.5\""
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('H\\nT\\n0.5') == '0.5', \"Expected '0.5', but got '{}'.\".format(solution('H\\nT\\n0.5'))"
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '0.5'\n"
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '0.5', 'Your code is incorrect.'"
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"H\\nT\\n0.5\") == 0.5, \"Expected 0.5\"\nassert solution(\"H\\nT\\n1.5\") == 0.0, \"Expected 0.0\"\nassert solution(\"H\\nT\\n0.0\") == 0.0, \"Expected 0.0\"\nassert solution(\"H\\nT\\n0.01\") == 0.0, \"Expected 0.0\"\nassert solution(\"H\\nT\\n0.99\") == 0.0, \"Expected 0.0\"\nassert solution(\"H\\nT\\n0.999\") == 0.0, \"Expected 0.0\"\nassert solution(\"H\\nT\\n1.001\") == 0.0, \"Expected 0.0\"\nassert solution(\"H\\nT\\n1.000000000000001\") == 0.0, \"Expected 0.0\"\n"
    },
    {
        "number": 3469,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"H\\nT\\n0.5\") == \"0.5\", \"Test 1: Gon wins.\"\nassert solution(\"H\\nT\\n0.2\") == \"0.2\", \"Test 2: Gon wins in 200 turns.\"\nassert solution(\"H\\nT\\n0.15\") == \"0.15\", \"Test 3: Gon wins in 150 turns.\"\nassert solution(\"H\\nT\\n0.05\") == \"0.05\", \"Test 4: Gon wins in 50 turns.\"\nassert solution(\"H\\nT\\n0.001\") == \"0.001\", \"Test 5: Gon wins in 0.1 turns.\""
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"8\\n1 3 5 7 9 11 13 15\"\nassert solution(4) == \"1\\n1\"\nassert solution(5) == \"2\\n3 5 7\"\nassert solution(6) == \"1\\n1\"\nassert solution(7) == \"2\\n3 5\"\nassert solution(8) == \"3\\n5 7 9\"\nassert solution(9) == \"1\\n1\"\nassert solution(10) == \"2\\n3 5\"\nassert solution(11) == \"3\\n5 7\"\nassert solution(12) == \"4\\n5 7 9\"\nassert solution(13) == \"1\\n1\"\nassert solution(14) == \"2\\n3 5\"\nassert solution(15) == \"3\\n5 7\"\nassert solution(16) == \"4\\n5 7 9\"\nassert solution(17) == \"1\\n1\"\nassert solution(18) == \"2\\n3 5\"\nassert solution(19) == \"3\\n5 7\"\nassert solution(20) == \"4\\n5 7 9\"\nassert solution(21) == \"1\\n1\"\nassert solution(22) == \"2\\n3 5\"\nassert solution(23) == \"3\\n5 7\"\nassert solution(24) == \"4\\n5 7 9\"\nassert solution(25) == \"1\\n1\"\nassert solution(26) == \"2\\n3 5\"\nassert solution(27) == \"3\\n5 7\"\nassert solution(28) == \"4\\n5 7 9\"\nassert solution(29) == \"1\\n1\"\nassert solution(30) == \"2\\n3 5\"\nassert solution(31) == \"3\\n5 7\"\nassert solution(32) == \"4\\n5 7 9\"\nassert solution(33) == \"1\\n1\"\nassert solution(34) == \"2\\n3 5\"\nassert solution(35) == \"3\\n5 7\"\nassert solution(36) == \"4\\n5 7 9\"\nassert solution(37) == \"1\\n1\"\nassert solution(38) == \"2\\n3 5\"\nassert solution(39) == \"3\\n5 7\"\nassert solution(40) == \"4\\n5 7 9\"\nassert solution(41) == \"1\\n1\"\nassert solution(42) == \"2\\n3 5\"\nassert solution(43) == \"3\\n5 7\"\nassert solution(44) == \"4\\n5 7 9\"\nassert solution(45) == \"1\\n1\"\nassert solution(46) == \"2\\n3 5\"\nassert solution(47) == \"3\\n5 7\"\nassert solution(48) == \"4\\n5 7 9\"\nassert solution(49) == \"1\\n1\"\nassert solution(50) == \"2\\n3 5\"\nassert solution(51) == \"3\\n5 7\"\nassert solution(52) == \"4\\n5 7 9\"\nassert solution(53) == \"1\\n1\"\nassert solution(54) == \"2\\n3 5\"\nassert solution(55) == \"3\\n5 7\"\nassert solution(56) == \"4\\n5 7 9\"\nassert solution(57) == \"1\\n1\"\nassert solution(58) == \"2\\n3 5\"\nassert solution(59) == \"3\\n5 7\"\nassert solution(60) == \"4\\n5 7 9\"\nassert solution(61) == \"1\\n1\"\nassert solution(62) == \"2\\n3 5\"\nassert solution(63) == \"3\\n5 7\"\nassert solution(64) == \"4\\n5 7 9\"\nassert solution(65) == \"1\\n1\"\nassert solution(66) == \"2\\n3"
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"8\"\nassert solution(\"4\") == \"3 5 7 9\"\nassert solution(\"6\") == \"1 3 5 7 9 11 13 15\"\nassert solution(\"8\") == \"1 3 5 7 9 11 13 15\""
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == '8\\n1 3 5 7 9 11 13 15'\nassert solution(4) == '1\\n1'\nassert solution(5) == '5\\n1 3 5 7 9'\nassert solution(6) == '1\\n1'\nassert solution(7) == '1\\n1'\nassert solution(8) == '1\\n1'\nassert solution(9) == '1\\n1'\nassert solution(10) == '2\\n1 3'\nassert solution(11) == '1\\n1'\nassert solution(12) == '1\\n1'\nassert solution(13) == '1\\n1'\nassert solution(14) == '1\\n1'\nassert solution(15) == '2\\n1 3'"
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"8\\n1 3 5 7 9 11 13 15\"\n"
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"8\\n1 3 5 7 9 11 13 15\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3') == '8\\n1 3 5 7 9 11 13 15'"
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3') == '8\\n1 3 5 7 9 11 13 15\\n'\n"
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n\") == \"8\\n1 3 5 7 9 11 13 15\\n\"\n"
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(6) == \"8\\n1 3 5 7 9 11 13 15\\n\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3470,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"8\\n1 3 5 7 9 11 13 15\""
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"1\\n\"\nassert solution(5) == \"0\\n\"\nassert solution(10) == \"1\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(str(input())) == '3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef main():\\n    N, Q = map(int, stdin.split())\\n    xorbonacci = [int(input()) for _ in range(N)]\\n    xorbonacci.append(0)\\n    xorbonacci.append(1)\\n    xorbonacci.append(1)\\n    xorbonacci.append(0)\\n    for i in range(1, N):\\n        xorbonacci[i] = xorbonacci[i-1] + xorbonacci[i-2] + xorbonacci[i-3] + xorbonacci[i-4]\\n\\n    for _ in range(Q):\\n        query = list(map(int, stdin.split()))\\n        l, r = query\\n        ans = xorbonacci[r] - xorbonacci[l-1] - xorbonacci[l] + xorbonacci[l+1] + xorbonacci[l+2] - xorbonacci[l+3] - xorbonacci[l+4]\\n        print(ans)\\n\\nif __name__ == \"__main__\":\\n    main()\\n"
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n3\\n5\\n7\\n3\\n2\\n2\\n2\\n1\\n5\\n\") == \"3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\\n\") == \"3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"2\\n1\\n10\\n5\\n\") == \"2\\n1\\n5\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\") == \"3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\") == \"3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5') == '3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution('5\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5') == '1\\n0\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n'\nassert solution('10\\n1 2 3 4 5 6 7 8 9\\n2\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10') == '12\\n8\\n4\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\\n') == '3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(input()) == output()\\n'"
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\\n') == '3\\n1\\n0\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3471,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('xorbonacci.input', 'r')) == [3, 1, 0]\nassert solution(open('xorbonacci.input', 'r')) == [3, 1, 0]\nassert solution(open('xorbonacci.input', 'r')) == [3, 1, 0]\nassert solution(open('xorbonacci.input', 'r')) == [3, 1, 0]"
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"0\", \"Please implement the solution for the given problem statement.\""
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 1\\n1 1 -2 0') == '0\\n'\nassert solution('2 3\\n1 1 -2 0\\n3 3 -1 -1') == '3\\n'\nassert solution('2 2\\n1 1 -2 0\\n1 1 -1 0') == '1\\n'\nassert solution('2 10\\n1 1 -2 0\\n1 1 -1 0\\n1 1 0 1\\n1 1 0 2\\n1 1 0 3\\n1 1 0 4\\n1 1 0 5\\n1 1 0 6\\n1 1 0 7\\n1 1 0 8\\n1 1 0 9\\n1 1 0 10') == '10\\n'\nassert solution('2 10\\n1 1 -2 0\\n1 1 -1 0\\n1 1 0 1\\n1 1 0 2\\n1 1 0 3\\n1 1 0 4\\n1 1 0 5\\n1 1 0 6\\n1 1 0 7\\n1 1 0 8\\n1 1 0 9\\n1 1 0 10\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1 -1 0\\n1 1"
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1\\n1 1 -2 0\") == 0, \"No extra lines required\""
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1\\n1 1 -2 0\") == 0, \"Sample Input\\nOutput:0\""
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1\\n1 1 -2 0\") == 0, \"Your solution is incorrect.\""
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 1\\n1 1 -2 0') == '0\\n0'\n"
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 1\\n1 1 -2 0') == 0, 'Solution is not correct.'\nassert solution('5 2\\n0 0 -1 -1\\n2 1 2 2') == 2, 'Solution is not correct.'\nassert solution('3 2\\n-2 -2 0 0\\n-1 0 -1 0') == 1, 'Solution is not correct.'"
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1\\n1 1 -2 0\") == \"0\\n\\n\""
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1\\n1 1 -2 0\\n2 1 -3 1\\n1 2 -3 0\\n1 1 0 2\\n1 1 0 3\\n2 2 0 3\\n2 2 0 4\\n1 1 2 4\\n1 1 2 5\\n2 1 2 6\\n2 1 2 7\\n1 2 2 8\\n1 2 2 9\\n2 2 2 10\\n2 2 2 11\\n1 1 1 12\\n1 1 1 13\\n2 2 1 14\\n2 2 1 15\\n1 1 2 16\\n1 1 2 17\\n2 1 2 18\\n2 1 2 19\\n1 2 2 20\\n1 2 2 21\\n2 2 2 22\\n2 2 2 23\\n1 1 1 24\\n1 1 1 25\\n2 2 1 26\\n2 2 1 27\\n1 1 2 28\\n1 1 2 29\\n2 2 2 30\\n2 2 2 31\\n1 1 1 32\\n1 1 1 33\\n2 2 1 34\\n2 2 1 35\\n1 1 2 36\\n1 1 2 37\\n2 1 2 38\\n2 1 2 39\\n1 2 2 40\\n1 2 2 41\\n2 2 2 42\\n2 2 2 43\\n1 1 1 44\\n1 1 1 45\\n2 2 1 46\\n2 2 1 47\\n1 1 2 48\\n1 1 2 49\\n2 2 2 50\\n2 2 2 51\\n1 1 1 52\\n1 1 1 53\\n2 2 1 54\\n2 2 1 55\\n1 1 2 56\\n1 1 2 57\\n2 1 2 58\\n2 1 2 59\\n1 2 2 60\\n1 2 2 61\\n2 2 2 62\\n2 2 2 63\\n1 1 1 64\\n1 1 1 65\\n2 2 1 66\\n2 2 1 67\\n1 1 2 68\\n1 1 2 69\\n2 2 2 70\\n2 2 2 71\\n1 1 1 72\\n1 1 1 73\\n2 2 1 74\\n2 2 1 75\\n1 1 2 76\\n1 1 2 77\\n2 1 2 78\\n2 1 2 79\\n1 2 2 80\\n1 2 2 81\\n2 2 2 82\\n2 2 2 83\\n1 1 1 84\\n1 1 1 85\\n2 2 1 86\\n2 2 1 87\\n1 1 2 88\\n1 1 2 89\\n2 2 2 90\\n2 2 2 91\\n1 1 1 92\\n1 1 1 93\\n2 2 1 94\\n2 2 1 95\\n1 1 2 96\\n1 1 2 97\\n2 2 2 98\\n2 2 2 99\\n1"
    },
    {
        "number": 3472,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1\\n1 1 -2 0\") == \"0\\n\"\nassert solution(\"2 2\\n1 1 2 1\\n1 2 2 1\\n1 3 3 2\\n2 3 3 1\\n3 3 3 2\\n4 4 4 3\\n5 5 5 4\\n6 6 6 5\\n7 7 7 6\\n8 8 8 7\\n9 9 9 8\\n10 10 10 9\\n11 11 11 10\\n12 12 12 11\\n13 13 13 12\\n14 14 14 13\\n15 15 15 14\\n16 16 16 15\\n17 17 17 16\\n18 18 18 17\\n19 19 19 18\\n20 20 20 19\\n\") == \"51\\n\"\n"
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\") == \"194\\n2019 10 25\\n2020 10 30\"\nassert solution(\"2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\\n50\\n1980 1 15\\n1980 1 16\\n1980 1 17\\n1980 1 18\\n1980 1 19\\n1980 1 20\\n1980 1 21\\n1980 1 22\\n1980 1 23\\n1980 1 24\\n1980 1 25\\n1980 1 26\\n1980 1 27\\n1980 1 28\\n1980 1 29\\n1980 1 30\\n1980 1 31\\n1980 2 1\\n1980 2 2\\n1980 2 3\\n1980 2 4\\n1980 2 5\\n1980 2 6\\n1980 2 7\\n1980 2 8\\n1980 2 9\\n1980 2 10\\n1980 2 11\\n1980 2 12\\n1980 2 13\\n1980 2 14\\n1980 2 15\\n1980 2 16\\n1980 2 17\\n1980 2 18\\n1980 2 19\\n1980 2 20\\n1980 2 21\\n1980 2 22\\n1980 2 23\\n1980 2 24\\n1980 2 25\\n1980 2 26\\n1980 2 27\\n1980 2 28\\n1980 2 29\\n1980 2 30\\n1980 2 31\\n1981 1 1\\n1981 1 2\\n1981 1 3\\n1981 1 4\\n1981 1 5\\n1981 1 6\\n1981 1 7\\n1981 1 8\\n1981 1 9\\n1981 1 10\\n1981 1 11\\n1981 1 12\\n1981 1 13\\n1981 1 14\\n1981 1 15\\n1981 1 16\\n1981 1 17\\n1981 1 18\\n1981 1 19\\n1981 1 20\\n1981 1 21\\n1981 1 22\\n1981 1 23\\n1981 1 24\\n1981 1 25\\n1981 1 26\\n1981 1 27\\n1981 1 28\\n1981 1 29\\n1981 1 30\\n1981 1 31\\n198"
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '194\\n2019 10 25\\n2020 10 30'\n"
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\") == \"194\\n2019 10 25\\n2020 10 30\""
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\\n') == '194\\n2019 10 25\\n2020 10 30'\n"
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\") == \"194\\n2019 10 25\\n2020 10 30\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\\n\") == \"194\\n2019 10 25\\n2020 10 30\"\n"
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\\n') == '194\\n2019 10 25\\n2020 10 30'\nprint('All tests passed!')"
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\") == \"194\\n2019 10 25\\n2020 10 30\""
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\\n\") == \"194\\n2019 10 25\\n2020 10 30\""
    },
    {
        "number": 3473,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 10 10 10 10 0\\n5 10 10 5 10 0\\n6 10 10 10 10 0\") == \"negative-infinity 0\\n5 12.5\\nnegative-infinity -5\""
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected, f\"Test case {index+1} failed\"\nfor index, (x1, y1, x2, y2, x3, y3) in enumerate(data):\n    assert abs(solution(f\"5 {x1} {y1} {x2} {y2} {x3} {y3}\")) - 1 < 0.0001, f\"Test case {index+1} failed\"\n"
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Incorrect output for {input()}:\\n{output}\\n!=\\n{solution(input())}\""
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == sample_output, \"Test case 1 failed\""
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_data) == expected_output, f\"Expected output: {expected_output}, got: {solution(input_data)}\""
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == solution(sample_input)\n"
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 10 10 10 10 0\\n5 10 10 5 10 0\\n6 10 10 10 10 0\") == \"negative-infinity 0\\n5 12.5\\nnegative-infinity -5\"\n"
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 10 10 10 10 0\\n5 10 10 5 10 0\\n6 10 10 10 10 0\") == \"negative-infinity 0\\n5 12.5\\nnegative-infinity -5\""
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 10 10 10 10 0\\n5 10 10 5 10 0\\n6 10 10 10 10 0\") == \"negative-infinity 0\\n5 12.5\\nnegative-infinity -5\"\n"
    },
    {
        "number": 3474,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 10 10 10 10 0') == 'negative-infinity 0\\n5 12.5'\nassert solution('5 10 10 5 10 0') == 'negative-infinity -5\\n5 12.5'\n"
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(data) == expected, f\"Expected {expected}, got {solution(data)}\""
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\\n\") == \"2\\n\"\nprint(\"Test case passed\")"
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000') == '2\\n'"
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n4 4\n100 30000\n200 20000\n300 10000\n400 0\n50 10000\n75 20000\n400 -40000\n''') == '2'"
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\") == \"2\\n\"\n"
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\\n\") == \"2\\n\"\nprint(\"Correct\")"
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\\n\") == \"2\\n\""
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\") == \"2\\nIMPOSSIBLE\"\nassert solution(\"1 5\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\") == \"IMPOSSIBLE\"\nassert solution(\"1 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\\n10 30000\") == \"1\\nIMPOSSIBLE\"\nassert solution(\"1 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\\n10 30001\") == \"2\\nIMPOSSIBLE\""
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\") == \"2\\n\"\nassert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 40000\\n\") == \"IMPOSSIBLE\\n\"\n"
    },
    {
        "number": 3475,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\") == \"2\"\nassert solution(\"4 5\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\") == \"345 2\\nrotS 2 1\\nnegR 2\"\nassert solution(\"5 2\\n1 1 1\\n-1 0 100\") == \"510 1\"\nassert solution(\"4 3\\n1 2 3\\n4 5 6\") == \"436 2\\nrotR 1 2\\nnegR 1\"\nassert solution(\"1 1\\n2 2\") == \"3 2\\nrotS 1 2\\nnegS 1\""
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\") == \"345 2\\nrotS 2 1\\nnegR 2\""
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_data) == expected_output, f\"The given code doesn't match the expected output: {expected_output}, but got {solution(input_data)}.\""
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\") == \"345 2\\nrotS 2 1\\nnegR 2\"\nassert solution(\"5 6\\n-2 -1 3 2\\n-10 5 1 4\") == \"541 2\\nrotR 1 2\"\nassert solution(\"10 10\\n-3 1 0 2\\n-7 6 4 8\") == \"1000 2\\nnegR 2\\nnegS 2\"\nassert solution(\"10 10\\n-3 1 0 2\\n-7 6 4 8\") == \"1000 2\\nnegR 2\\nnegS 2\"\nassert solution(\"5 5\\n-2 -1 3 2\\n-10 5 1 4\") == \"500 2\\nrotR 1 2\""
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == '''\n345 2\nrotS 2 1\nnegR 2\n'''"
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\\n') == '345 2\\nrotS 2 1\\nnegR 2\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '345 2\\nrotS 2 1\\nnegR 2'\n"
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\") == \"345 2\\nrotS 2 1\\nnegR 2\"\nassert solution(\"5 7\\n10 10 50 100\\n-50 -50 0 0\\n100 100 100 100\") == \"51000 3\\nrotR 2 1\\nnegS 1\"\nassert solution(\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\") == \"345 2\\nrotS 2 1\\nnegR 2\"\nassert solution(\"5 7\\n10 10 50 100\\n-50 -50 0 0\\n100 100 100 100\") == \"51000 3\\nrotR 2 1\\nnegS 1\""
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\\n\") == \"345 2\\nrotS 2 1\\nnegR 2\\n\"\nassert solution(stdin=\"5 5\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\\n\") == \"345 2\\nrotS 2 1\\nnegR 2\\n\"\nassert solution(stdin=\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\\n\") == \"345 2\\nrotS 2 1\\nnegR 2\\n\"\nassert solution(stdin=\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\\n\") == \"345 2\\nrotS 2 1\\nnegR 2\\n\"\nassert solution(stdin=\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\\n\") == \"345 2\\nrotS 2 1\\nnegR 2\\n\"\nassert solution(stdin=\"5 5\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\\n\") == \"345 2\\nrotS 2 1\\nnegR 2\\n\"\nassert solution(stdin=\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\\n\") == \"345 2\\nrotS 2 1\\nnegR 2\\n\"\nassert solution(stdin=\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\\n\") == \"345 2\\nrotS 2 1\\nnegR 2\\n\"\nassert solution(stdin=\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\\n\") == \"345 2\\nrotS 2 1\\nnegR 2\\n\"\nassert solution(stdin=\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\\n\") == \"345 2\\nrotS 2 1\\nnegR 2\\n\"\nassert solution(stdin=\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\\n\") == \"345 2\\nrotS 2 1\\nnegR 2\\n\"\nassert solution(stdin=\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\\n\") == \"345 2\\nrotS 2 1\\nnegR 2\\n\"\nassert solution(stdin=\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\\n\") == \"345 2\\nrotS 2 1\\nnegR 2\\n\"\nassert solution(stdin=\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\\n\") == \"345 2\\nrotS 2 1\\nnegR 2\\n\"\nassert solution(stdin=\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\\n\") =="
    },
    {
        "number": 3476,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\") == \"345 2\\nrotS 2 1\\nnegR 2\\n\", \"Test case 1 failed\""
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n    3 2\n    3 1 1\n    ''') == '0.5'\n\nassert solution('''\n    3 3\n    1 2\n    1 3\n    2 1\n    3 2\n    3 3\n    4 5\n    4 6\n    5 4\n    6 5\n    7 6\n    ''') == '3.7'"
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\\n3 1 1\") == \"0.5\\n\""
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 'your_code_here'"
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"\"\"\n"
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_data) == output_data, f\"Test failed for input {input_data}\"\n"
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 2\\n3 1 1') == '0.5'\n"
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 2\\n3 1 1') == '0.5'"
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"0.5\""
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n\\tpass\\n\\n\"\nprint(\"Test passed.\")"
    },
    {
        "number": 3477,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\\n3 1 1\") == \"0.5\""
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 4 5\\n2 6 7\\n') == '1 4 5\\n2 6 7\\n'\nassert solution('1 4 5\\n2 6 7\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\"
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\") == \"1 4 5\\n2 6 7\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Jon Dayne is the ruler of a huge country called Seven Kingdoms. He has two sisters, Arya and Sansa, and wants to give some cities of Seven Kingdoms to them. He will rule the remaining cities or if no city remains, goes to the Wall, a colossal fortification along the northern border of the Seven Kingdoms, to be the Lord commander. Arya is the Lady of Winterfell and Sansa is the Lady of King\u2019s Landing. The cities in Seven Kingdoms (including Winterfell and King\u2019s Landing) are connected to each other with a network of roads (although some cities may be disconnected from the other cities, because they are either located on an island or they are currently at war with these other cities). There is no direct road between Winterfell and King\u2019s Landing and they do not share a common neighbour city.\n\nJon wants to assign a collection of cities to each one of his sisters such that each city in a collection is connected with a direct road to all other cities in that collection and the remaining cities, not in these two collections, are also connected with a direct road to each other. The collection assigned to Arya must include Winterfell and the collection assigned to Sansa must include King\u2019s Landing. Jon needs your help to determine whether this is possible and if this is possible, you should tell him the cities in each collection.\n\n-----Input-----\nThe input consists of a single test case. The first line contains two integers $n$ and $m$, where $n$ ($2 \\le n \\le 2000$) is the number of cities, and $m$ ($0 \\leq m \\leq m(m-1)/2$) is the number of roads. Each of the next $m$ lines contains two integers $x_ i$ and $y_ i$ ($1 \\le x_ i, y_ i \\le n$) describing one road, where $x_ i$ and $y_ i$ are the distinct cities the road connects. Two cities are connected by at most one road. Winterfell is city $1$ and King\u2019s Landing is city $2$ in the road network.\n\n-----Output-----\nIf it is not possible to partition the cities in the way explained, display the word impossible. Otherwise, display two lines: the first containing the cities in the collection assigned to Arya and the second containing the collection of cities assigned to Sansa. If there are many such collections, any one of them is acceptable.\n\n-----Examples-----\nSample Input:\n9 11\n1 4\n5 4\n1 5\n6 2\n6 7\n7 2\n3 8\n3 9\n8 9\n6 8\n5 9\nSample Output:\n1 4 5\n2 6 7\n\n### Solution\n\nfrom typing import List"
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\\n') == '1 4 5\\n2 6 7'\n\nprint('All test cases passed!')"
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\") == \"1 4 5\\n2 6 7\"\nassert solution(\"9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\") == \"1 4 5\\n2 6 7\"\nassert solution(\"9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100\") == \"impossible\"\nassert solution(\"9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\\n1 2\\n"
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\npass'"
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == expected_output, f\"Expected output: {expected_output}, Actual output: {solution(sample_input)}\"\n\nsample_input = \"\"\"\n9 11\n1 4\n5 4\n1 5\n6 2\n6 7\n7 2\n3 8\n3 9\n8 9\n6 8\n5 9\n\"\"\"\n\nexpected_output = \"\"\"\n1 4 5\n2 6 7\n\"\"\""
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9') == '1 4 5\\n2 6 7'\nassert solution('9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\\n1 4 5\\n2 6 7') == '1 4 5\\n2 6 7'"
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9') == '1 4 5\\n2 6 7'\nassert solution('1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\\n1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n2 6\\n2 7\\n2 8\\n2 9\\n3 1\\n3 2\\n3 3\\n3 4\\n3 5\\n3 6\\n3 7\\n3 8\\n3 9\\n4 1\\n4 2\\n4 3\\n4 4\\n4 5\\n4 6\\n4 7\\n4 8\\n4 9\\n5 1\\n5 2\\n5 3\\n5 4\\n5 5\\n5 6\\n5 7\\n5 8\\n5 9\\n6 1\\n6 2\\n6 3\\n6 4\\n6 5\\n6 6\\n6 7\\n6 8\\n6 9\\n7 1\\n7 2\\n7 3\\n7 4\\n7 5\\n7 6\\n7 7\\n7 8\\n7 9\\n8 1\\n8 2\\n8 3\\n8 4\\n8 5\\n8 6\\n8 7\\n8 8\\n8 9\\n9 1\\n9 2\\n9 3\\n9 4\\n9 5\\n9 6\\n9 7\\n9 8\\n9 9' == '1 4 5\\n2 6 7'\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3478,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\\n\") == \"1 4 5\\n2 6 7\"\n"
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\") == \"13500\\n\"\nassert solution(\"11 3\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\") == \"14000\\n\"\nassert solution(\"2 1\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\") == \"0\\n\"\nassert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\") == \"13500\\n\""
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 13500, \"Incorrect solution\"\nassert solution(\"123 456\\n789 012\\n987 654\\n123 456\\n567 890\") == 18500, \"Incorrect solution\""
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '13500'"
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\") == 13500\nassert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n\") == \"Invalid input. Please provide valid input.\""
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''11 2\n12000\n9000\n4500\n10000\n12000\n11000\n12000\n18000\n10000\n9000\n12000''') == '13500'"
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n\") == \"13500\\n\"\nassert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n\") == \"13500\\n\"\nassert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n\") == \"13500\\n\"\nassert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n\") == \"13500\\n\"\nassert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n\") == \"13500\\n\"\nassert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n\") == \"13500\\n\""
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000') == '13500'"
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\") == 13500, \"Incorrect output\""
    },
    {
        "number": 3479,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000') == '13500\\n'\nassert solution('11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\\n12000\\n9000\\n4500\\n10000\\n11000\\n12000\\n12000\\n18000\\n10000\\n9000\\n12000\\n12000\\n18000\\n10000\\n9000\\n12000\\n12000\\n18000\\n10000\\n9000\\n12000\\n12000\\n18000\\n10000\\n9000\\n12000\\n12000\\n18000\\n10000\\n9000\\n12000\\n12000\\n18000\\n10000\\n9000\\n12000\\n12000\\n18000\\n10000\\n9000\\n12000\\n12000\\n18000\\n10000\\n9000\\n12000\\n12000\\n18000\\n10000\\n9000\\n12000\\n12000\\n18000\\n10000\\n9000\\n12000\\n12000\\n18000\\n10000\\n9000\\n12000\\n12000\\n18000\\n10000\\n9000\\n12000\\n12000\\n18000\\n10000\\n9000\\n12000\\n12000\\n18000\\n10000\\n9000\\n12000\\n12000\\n18000\\n10000\\n9000\\n12000\\n12000\\n18000\\n10000\\n9000\\n12000\\n12000\\n18000\\n10000\\n9000\\n12000\\n12000\\n18000\\n10000\\n9000\\n12000\\n12000\\n18000\\n10000\\n9000\\n12000\\n12000\\n18000\\n10000\\n9000\\n12000\\n12000\\n18000\\n10000\\n9000\\n12000\\n12000\\n18000\\n10000\\n9000\\n12000\\n12000\\n18000\\n10000\\n9000\\n12000\\n12000\\n18000\\n10000\\n9000\\n1"
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"\"\"\n____________________Hot_cross_buns!_=\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\n\"\"\"\n\nassert solution(open(\"input.txt\", \"r\").read()) == \"\"\"\n____________________Hot_cross_buns!_=\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\n\"\"\""
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 16\\nHot cross buns!\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns!\\n2 2 2 2 2 2 2 2 4 4 4 4\\n') == '/\\n/____________________\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_\\nHot___cross____buns!_\\n________One_a_pen-_ny,_Two_a_pen-_ny,def solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4') == 'Hot_cross_buns!_=___Hot_cross_buns!_=One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=Hot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,def solution(stdin: str) -> str:\\n    pass\\n\\n\\n\\n'"
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\\n\") == \"Hot_cross_buns!_=___Hot_cross_buns!_=One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=Hot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin='2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\\n') == 'Hot_cross_buns!_=___Hot_cross_buns!_=Hot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,def solution(stdin: str) -> str:\\nHot_cross_buns!_=___Hot_cross_buns!_=____________________One_a_pen-_ny,_Two_a_pen-_ny\\n'"
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r').read()) == solution_reference(open('input.txt', 'r').read())"
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}, got: {solution(stdin)}\"\n\nfrom typing import List"
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"Hot_cross_buns!_=___Hot_cross_buns!_=One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,def solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 16\\nHot cross buns! = Hot cross buns!\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\") == \"Hot_cross_buns!_=___Hot_cross_buns!_=One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=Hot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3480,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''2 16\nHot cross buns! = Hot cross buns! =\n4 4 4 4 4 4 4 4\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\n2 2 2 2 2 2 2 2 4 4 4 4\n''') == '''Hot_cross_buns!_=___Hot_cross_buns!_=\n____________________Hot_cross_buns!_=\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\n'''"
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\\n\") == \"33\\n\""
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\") == 33\nprint(\"All tests passed successfully\")"
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 33"
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33') == '33'"
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\\n\") == \"33\""
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\") == 33, \"The correct output is not provided.\""
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\") == \"33\"\n"
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"The solution provided is incorrect. The expected output is {output}, but you provided {solution(input())}.\""
    },
    {
        "number": 3481,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\\n') == 33"
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n20 15 10\\n7 7\\n30 0\") == \"405\"\nassert solution(\"4\\n1\\n30\\n20\\n10\") == \"5\"\nassert solution(\"5\\n30\\n20\\n1\\n10\") == \"5\"\nassert solution(\"3\\n20 15 10\\n7 7\\n30 0\") == \"405\""
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n20 15 10\\n7 7\\n30 0') == '405'"
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"Output the smallest total cost of your transit card for the t days.\""
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n20 15 10\\n7 7\\n30 0') == '405'\nassert solution('3\\n20 15 10\\n7 7\\n30') == '405'\nassert solution('3\\n20 15 10\\n7 7\\n30\\n25 15\\n10 7') == '450'"
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution\n\nimport math"
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('day_1_test_case.txt', 'r')) == '405\\n'"
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"405\""
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(solution) == \"0\\n0\\n\"\nassert solution(solution) == \"0\\n30\\n\"\nassert solution(solution) == \"405\\n405\\n\""
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 405, \"The solution should return 405\""
    },
    {
        "number": 3482,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"Output the smallest total cost of your transit card for the 7 days.\\n\", \"Incorrect output\"\n"
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2 4 7\") == \"28 4 21 14.0\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 2 4 7\") == \"28 4 21 14.0\\n\"\nassert solution(\"4\\n3 3 4 7\") == \"46 5 24 14.0\\n\"\nassert solution(\"4\\n1 2 3 5\") == \"12 12 3 0.5\\n\"\nassert solution(\"4\\n5 5 5 5\") == \"25 25 5 0.0\\n\"\nassert solution(\"4\\n1 2 3 4\") == \"6 6 3 0.0\\n\"\nassert solution(\"4\\n1 2 3 6\") == \"18 18 4 0.0\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"1 1 1 0.0\\n\""
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 2 4 7\") == \"28 4 21 14.0\\n\"\n"
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(r\"\"\"\n    4\n    1 2 4 7\n\"\"\") == r\"\"\"\n    28\n    4\n    21\n    14.0\n\"\"\""
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"28 4 21 14.0\""
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 2 4 7\") == \"28 4 21 14.0\"\nassert solution(\"4\\n1 3 5 10\") == \"28 5 21 14.0\"\nassert solution(\"4\\n1 2 3 4\") == \"28 4 21 14.0\"\nassert solution(\"4\\n1 2 3 5\") == \"28 4 21 14.0\"\nassert solution(\"4\\n1 2 4 6\") == \"28 4 21 14.0\"\nassert solution(\"4\\n1 2 4 7\") == \"28 4 21 14.0\"\nassert solution(\"4\\n1 2 3 5\") == \"28 4 21 14.0\"\nassert solution(\"4\\n1 2 3 6\") == \"28 4 21 14.0\"\nassert solution(\"4\\n1 2 4 5\") == \"28 4 21 14.0\""
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 2 4 7\") == \"28 4 21 14.0\\n\"\nassert solution(\"5\\n2 3 4 5\\n3 1 5 8\") == \"40 4 32 19.0\\n\"\nassert solution(\"4\\n1 2 3 4\") == \"4 4 4 4\\n\"\nassert solution(\"5\\n2 3 4 5\\n3 1 5 8\") == \"40 4 32 19.0\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"1000 1 96 39.267\\n\"\n"
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 4 7\") == \"28 4 21 14.0\"\n"
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 2 4 7\") == \"28 4 21 14.0\""
    },
    {
        "number": 3483,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n1 2 4 7') == '28 4 21 14.0'\n"
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\\n\") == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\"\nassert solution(\"2 1\\n1 2 3 4\\n3 4 1 2\\n1 2 3 4\\n\") == \"no\"\nassert solution(\"9 9\\n1 2 3 4 5 6 7 8 9\\n2 3 4 5 6 7 8 9 1\\n3 4 5 6 7 8 9 1 2\\n4 5 6 7 8 9 1 2 3\\n5 6 7 8 9 1 2 3 4\\n6 7 8 9 1 2 3 4 5\\n7 8 9 1 2 3 4 5 6\\n8 9 1 2 3 4 5 6 7\\n9 1 2 3 4 5 6 7 8\\n\") == \"no\"\nassert solution(\"2 2\\n1 2 3 4 5 6 7 8 9\\n2 3 4 5 6 7 8 9 1\\n3 4 5 6 7 8 9 1 2\\n4 5 6 7 8 9 1 2 3\\n5 6 7 8 9 1 2 3 4\\n6 7 8 9 1 2 3 4 5\\n7 8 9 1 2 3 4 5 6\\n8 9 1 2 3 4 5 6 7\\n9 1 2 3 4 5 6 7 8\\n\") == \"no\"\nassert solution(\"3 3\\n1 2 3 4 5 6 7 8 9\\n2 3 4 5 6 7 8 9 1\\n3 4 5 6 7 8 9 1 2\\n4 5 6 7 8 9 1 2 3\\n5 6 7 8 9 1 2 3 4\\n6 7 8 9 1 2 3 4 5\\n7 8 9 1 2 3 4 5 6\\n8 9 1 2 3 4 5 6 7\\n9 1 2 3 4 5 6 7 8\\n\") == \"no\"\nassert solution(\"6 6\\n1 2 3 4 5 6 7 8 9\\n2 3 4 5 6 7 8 9 1\\n3 4 5 6 7 8 9 1 2\\n4 5 6 7 8 9 1 2 3\\n5 6 7 8 9 1 2 3 4\\n6 7 8 9 1 2 3 4 5\\n7 8 9 1 2 3 4 5 6\\n8 9 1 2 3 4 5 6 7\\n9 1 2 3 4 5 6 7 8\\n\") == \"no\"\nassert solution(\"5 5\\n1 2 3 4 5 6 7 8 9\\n2 3 4 5 6 7 8 9 1\\n3 4 5 6 7 8 9 1 2\\n4 5 6 7 8 9 1 2 3\\n5 6 7 8 9 1 2 3 4\\n6 7 8 9 1 2 3 4 5\\n7 8 9 1 2 3 4 5 6\\n8 9 1 2 3 4 5 6 7\\n9 1 2 3 4 5 6 7 8"
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Solution for the given input is {solution(input())}, but expected output is {expected_output}.\"\n"
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 2\\n1 2 3 4\\n2 3 4 1') == 'yes\\n1 2 3 4 \\n2 3 4 1 \\n3 4 1 2 \\n4 1 2 3'\nassert solution('2 3\\n4 1 2 3\\n1 2 3 4') == 'no'\nassert solution('3 4\\n1 2 3 4\\n4 1 2 3') == 'yes\\n2 3 4 1 \\n3 4 1 2 \\n4 1 2 3'\nassert solution('3 9\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n5 6 7 8\\n6 7 8 9\\n7 8 9 10\\n8 9 10 11\\n9 10 11 12\\n10 11 12 13\\n11 12 13 14\\n12 13 14 15\\n13 14 15 16\\n14 15 16 17\\n15 16 17 18\\n16 17 18 19\\n17 18 19 20\\n18 19 20 21\\n19 20 21 22\\n20 21 22 23\\n21 22 23 24\\n22 23 24 25\\n23 24 25 26\\n24 25 26 27\\n25 26 27 28\\n26 27 28 29\\n27 28 29 30\\n28 29 30 31\\n29 30 31 32\\n30 31 32 33\\n31 32 33 34\\n32 33 34 35\\n33 34 35 36\\n34 35 36 37\\n35 36 37 38\\n36 37 38 39\\n37 38 39 40\\n38 39 40 41\\n39 40 41 42\\n40 41 42 43\\n41 42 43 44\\n42 43 44 45\\n43 44 45 46\\n44 45 46 47\\n45 46 47 48\\n46 47 48 49\\n47 48 49 50\\n48 49 50 51\\n49 50 51 52\\n50 51 52 53\\n51 52 53 54\\n52 53 54 55\\n53 54 55 56\\n54 55 56 57\\n55 56 57 58\\n56 57 58 59\\n57 58 59 60\\n58 59 60 61\\n59 60 61 62\\n60 61 62 63\\n61 62 63 64\\n62 63 64 65\\n63 64 65 66\\n64 65 66 67\\n65 66 67 68\\n66 67 68 69\\n67 68 69 70\\n68 69 70 71\\n69 70 71 72"
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 2\\n1 2 3 4\\n2 3 4 1') == 'yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3'\nassert solution('5 1\\n1 2 3\\n2 3 4\\n3 4 5\\n4 5 6\\n5 6 7\\n6 7 8\\n7 8 9\\n8 9 10\\n9 10 11\\n10 11 12\\n11 12 13\\n12 13 14\\n13 14 15\\n14 15 16\\n15 16 17\\n16 17 18\\n17 18 19\\n18 19 20\\n19 20 21\\n20 21 22\\n21 22 23\\n22 23 24\\n23 24 25\\n24 25 26\\n25 26 27\\n26 27 28\\n27 28 29\\n28 29 30\\n29 30 31\\n30 31 32\\n31 32 33\\n32 33 34\\n33 34 35\\n34 35 36\\n35 36 37\\n36 37 38\\n37 38 39\\n38 39 40\\n39 40 41\\n40 41 42\\n41 42 43\\n42 43 44\\n43 44 45\\n44 45 46\\n45 46 47\\n46 47 48\\n47 48 49\\n48 49 50\\n49 50 51\\n50 51 52\\n51 52 53\\n52 53 54\\n53 54 55\\n54 55 56\\n55 56 57\\n56 57 58\\n57 58 59\\n58 59 60\\n59 60 61\\n60 61 62\\n61 62 63\\n62 63 64\\n63 64 65\\n64 65 66\\n65 66 67\\n66 67 68\\n67 68 69\\n68 69 70\\n69 70 71\\n70 71 72\\n71 72 73\\n72 73 74\\n73 74 75\\n74 75 76\\n75 76 77\\n76 77 78\\n77 78 79\\n78 79 80\\n79 80 81\\n80 81 82\\n81 82 83\\n82 83 84\\n83 84 85\\n84 85 86\\n85 86 87\\n86 87 88\\n87 88 89\\n88 89 90\\n89 90 91\\n90 91 92\\n91 92 93\\n92 93 94\\n93 94 95\\n94 95 96\\n95 96 97\\n96 97 98\\n97 98 99\\n98 99 "
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4 \\n2 3 4 1 \\n3 4 1 2 \\n4 1 2 3\"\nassert solution(\"1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"no\""
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 2\\n1 2 3 4\\n2 3 4 1') == 'yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3'\nassert solution('2 2\\n1 2 3 4\\n2 3 4 1') == 'no'\nassert solution('4 2\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3') == 'no'\nassert solution('4 2\\n1 2 3 4\\n2 3 4 1') == 'no'\nassert solution('4 2\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3') == 'no'\nassert solution('4 2\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3') == 'no'\nassert solution('4 2\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3') == 'no'\nassert solution('4 2\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3') == 'no'\nassert solution('4 2\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3') == 'no'\nassert solution('4 2\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3') == 'no'\nassert solution('4 2\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3') == 'no'\nassert solution('4 2\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3') == 'no'\nassert solution('4 2\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3') == 'no'\nassert solution('4 2\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3') == 'no'\nassert solution('4 2\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3') == 'no'\nassert solution('4 2\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3') == 'no'\nassert solution('4 2\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3') == 'no'\nassert solution('4 2\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3') == 'no'\nassert solution('4 2\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3') == 'no'\nassert solution('4 2\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3') == 'no'\nassert solution('4 2\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3') == 'no'\nassert solution('4 2\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4"
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4 \\n2 3 4 1 \\n3 4 1 2 \\n4 1 2 3\"\nassert solution(\"10 10\\n1 2 3 4 5 6 7 8 9\\n2 3 4 5 6 7 8 9 10\\n3 4 5 6 7 8 9 10 11\\n4 5 6 7 8 9 10 11 12\\n5 6 7 8 9 10 11 12 13\\n6 7 8 9 10 11 12 13 14\\n7 8 9 10 11 12 13 14 15\\n8 9 10 11 12 13 14 15 16\\n9 10 11 12 13 14 15 16 17\\n10 11 12 13 14 15 16 17 18\\n11 12 13 14 15 16 17 18 19\\n12 13 14 15 16 17 18 19 20\\n13 14 15 16 17 18 19 20 21\\n14 15 16 17 18 19 20 21 22\\n15 16 17 18 19 20 21 22 23\\n16 17 18 19 20 21 22 23 24\\n17 18 19 20 21 22 23 24 25\\n18 19 20 21 22 23 24 25 26\\n19 20 21 22 23 24 25 26 27\\n20 21 22 23 24 25 26 27 28\\n21 22 23 24 25 26 27 28 29\\n22 23 24 25 26 27 28 29 30\\n23 24 25 26 27 28 29 30 31\\n24 25 26 27 28 29 30 31 32\\n25 26 27 28 29 30 31 32 33\\n26 27 28 29 30 31 32 33 34\\n27 28 29 30 31 32 33 34 35\\n28 29 30 31 32 33 34 35 36\\n29 30 31 32 33 34 35 36 37\\n30 31 32 33 34 35 36 37 38\\n31 32 33 34 35 36 37 38 39\\n32 33 34 35 36 37 38 39 40\\n33 34 35 36 37 38 39 40 41\\n34 35 36 37 38 39 40 41 42\\n35 36 37 38 39 40 41 42 43\\n36 37 38 39 40 "
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\") == \"yes\\n1 2 3 4\\n2 3 4 1\"\nassert solution(\"6 9\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\\n5 6 7 8\\n6 7 8 5\\n7 8 5 6\\n8 5 6 7\\n9 6 7 8\") == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\"\nassert solution(\"9 9\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\\n5 6 7 8\\n6 7 8 5\\n7 8 5 6\\n8 5 6 7\\n9 6 7 8\") == \"no\""
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"yes\"\nassert solution(input()) == \"no\""
    },
    {
        "number": 3484,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\\n\", \"The solution should be `yes`\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\\n\"\nassert solution(stdin) == \"no\\n\", \"There should be no solution\"\nassert solution(stdin) == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\\n5 6 7 8\\n6 7 8 5\\n7 8 5 6\\n8 5 6 7\\n9 6 7 8\\n\", \"There should be only one solution\"\nassert solution(stdin) == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\\n5 6 7 8\\n6 7 8 5\\n7 8 5 6\\n8 5 6 7\\n9 6 7 8\\n10 5 6 7\\n\", \"There should be multiple solutions\""
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '10.000000000'"
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n10 10 -10 -4 10\") == \"10.000000000\\n\""
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"10.000000000\"\nprint(\"All Tests Pass\")"
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(solution(stdin)) == '10.000000000'"
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n10 10 -10 -4 10\") == \"10.000000000\""
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n10 10 -10 -4 10') == '10.0\\n'"
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n10 10 -10 -4 10\") == \"10.000000000\\n\""
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n10 10 -10 -4 10') == '10.000000000'\nassert solution('4\\n-1 2 3 4') == '0.000000000'\nassert solution('3\\n1 2 3') == '3.333333333'\nassert solution('2\\n5 -3') == '3.333333333'\nassert solution('1\\n1') == '1.000000000'"
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n10 10 -10 -4 10\") == \"10.000000000\""
    },
    {
        "number": 3485,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    '''\n    5\n    10 10 -10 -4 10\n    '''\n) == '10.000000000'\n\nassert solution(\n    '''\n    2\n    5 7\n    5 8 9\n    '''\n) == '5.000000000'\n\nassert solution(\n    '''\n    3\n    1 2 3 4 5\n    1 2 3 4 5\n    '''\n) == '2.000000000'\n\nassert solution(\n    '''\n    6\n
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1\\n\""
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n30\\n3\\n2\\n45\\n') == 1"
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == 1\nassert solution(2) == 1\nassert solution(3) == 3\nassert solution(4) == 14\nassert solution(5) == 16"
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 1, \"Expected result: 1, but got: {}.\".format(solution(3))\nassert solution(4) == 1, \"Expected result: 1, but got: {}.\".format(solution(4))\nassert solution(6) == 0, \"Expected result: 0, but got: {}.\".format(solution(6))\nassert solution(10) == 1, \"Expected result: 1, but got: {}.\".format(solution(10))\nassert solution(11) == 2, \"Expected result: 2, but got: {}.\".format(solution(11))\nassert solution(12) == 3, \"Expected result: 3, but got: {}.\".format(solution(12))\nassert solution(13) == 4, \"Expected result: 4, but got: {}.\".format(solution(13))\nassert solution(14) == 5, \"Expected result: 5, but got: {}.\".format(solution(14))\nassert solution(15) == 6, \"Expected result: 6, but got: {}.\".format(solution(15))\nassert solution(16) == 7, \"Expected result: 7, but got: {}.\".format(solution(16))\nassert solution(17) == 8, \"Expected result: 8, but got: {}.\".format(solution(17))\nassert solution(18) == 9, \"Expected result: 9, but got: {}.\".format(solution(18))\nassert solution(19) == 10, \"Expected result: 10, but got: {}.\".format(solution(19))\nassert solution(20) == 11, \"Expected result: 11, but got: {}.\".format(solution(20))\nassert solution(21) == 12, \"Expected result: 12, but got: {}.\".format(solution(21))\nassert solution(22) == 13, \"Expected result: 13, but got: {}.\".format(solution(22))\nassert solution(23) == 14, \"Expected result: 14, but got: {}.\".format(solution(23))\nassert solution(24) == 15, \"Expected result: 15, but got: {}.\".format(solution(24))\nassert solution(25) == 16, \"Expected result: 16, but got: {}.\".format(solution(25))\nassert solution(26) == 17, \"Expected result: 17, but got: {}.\".format(solution(26))\nassert solution(27) == 18, \"Expected result: 18, but got: {}.\".format(solution(27))\nassert solution(28) == 19, \"Expected result: 19, but got: {}.\".format(solution(28))\nassert solution(29) == 20, \"Expected result: 20, but got: {}.\".format(solution(29))\nassert solution(30) == 21, \"Expected result: 21, but got: {}.\".format(solution(30))\nassert solution(31) == 22, \"Expected result: 22, but got: {}.\".format(solution(31))\nassert solution(32) == 23, \"Expected result: 23, but got: {}.\".format(solution(32))\nassert solution(33) == 24, \"Expected result: 24, but got: {}.\".format(solution(33))\nassert solution(34) == 25, \"Expected result: 25, but got: {}.\".format(solution(34))\nassert solution(35) == 26, \"Expected result: 26, but got: {}.\".format(solution(35))\nassert solution(36) == 27, \"Expected result: 27, but got: {}.\".format(solution(36))\nassert solution(37) == 28, \"Expected result: 28, but got: {}.\".format(solution(37))\nassert solution(38) == 29, \"Expected result: 29, but got: {}.\".format(solution(38))\nassert solution(39) == 30, \"Expected result: 30, but got: {}.\".format(solution(39))\n"
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 1"
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"1\\n\", \"The expected output is incorrect.\""
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Actual output: {solution(input())}\""
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n30\\n3\\n2\\n45\\n\") == \"1\\n\""
    },
    {
        "number": 3486,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(4) == 1\n\nimport math"
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n    6 6 3.0 0.66\n    2 4 8\n    4 6 1\n    3 6 1\n    4 5 5\n    1 5 7\n    3 5 3\n    \"\"\") == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\n\"\n) == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\\n\""
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\") == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\"\nassert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n2 6 5\\n2 7 8\") == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\"\nassert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n2 6 5\\n2 7 8\") == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\""
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\") == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\""
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n''') == '''0.000000000 1.360000000\n0.000000000 1.000000000\n0.000000000 -1.000000000\n0.000000000 0.360000000\n0.880000000 0.000000000\n-0.880000000 -0.360000000\n1.02037965897\n'''"
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\") == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\"\n"
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3''') == '''0.000000000 1.360000000\n0.000000000 1.000000000\n0.000000000 -1.000000000\n0.000000000 0.360000000\n0.880000000 0.000000000\n-0.880000000 -0.360000000\n1.02037965897'''"
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\") == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\"\nassert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\") == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\""
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n\") == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\""
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"6 6 3.0 0.66\n    2 4 8\n    4 6 1\n    3 6 1\n    4 5 5\n    1 5 7\n    3 5 3\"\"\"\n) == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\"\"\"\n)"
    },
    {
        "number": 3487,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897'"
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\\n\") == \"4\""
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('sample.in', 'r')) == 4"
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"4\"\n"
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input) == expected_output, f\"Expected output: {expected_output}, Received: {solution(input)}\""
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\") == 4\n\nfrom typing import List"
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 4\nprint(\"pass\")"
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2') == 4\n"
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\") == 4\n"
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\\n1 1\\n2 2\\n\") == 4"
    },
    {
        "number": 3488,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == '4\\n'"
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Test failed: {solution(input())}\\nOutput: {output}\""
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i + 1} failed: got {solution(input())}, expected {expected_output}\""
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 0\\n0 1\\n0 2\\n0 3\") == \"2\\n3 2\\n3 1\""
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 0\\n0 1\\n0 2\\n0 3\\n\") == \"2\\n3 2\\n3 1\\n\"\n"
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 0\\n0 1\\n0 2\\n0 3\\n\") == \"2\\n3 2\\n3 1\\n\"\n"
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 0\\n0 1\\n0 2\\n0 3\") == \"2\\n3 2\\n3 1\"\nassert solution(\"6 0\\n0 1\\n0 2\\n0 3\\n0 4\\n0 5\") == \"13\\n5 3\\n4 1\\n3 2\\n2 4\\n1 5\""
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"\"\"2\n3 2\n3 1\n\"\"\""
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 0\\n0 1\\n0 2\\n0 3') == '2\\n3 2\\n3 1'"
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 0\\n0 1\\n0 2\\n0 3\\n\") == \"2\\n3 2\\n3 1\\n\""
    },
    {
        "number": 3489,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 0\\n0 1\\n0 2\\n0 3\") == \"2\\n3 2\\n3 1\"\nassert solution(\"4 3\\n0 1\\n0 2\\n0 3\") == \"1\\n2 1\"\nassert solution(\"4 3\\n0 1\\n0 2\\n0 3\") == \"1\\n2 1\""
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"test.in\", \"r\")) == \"ok\"\n"
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 0 0\\n0 1.5 0\") == \"ok\""
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\n0 0 0\\n0 1.5 0') == 'ok'\n"
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n2\n0 0 0\n0 1.5 0\n''') == 'ok\\n'"
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"ok\""
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"ok\") == \"ok\""
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 'ok\\n'\nprint('ok')"
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"ok\"\n"
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 0 0\\n0 1.5 0\") == \"ok\"\nassert solution(\"0.9999999999999999e+99 1.5 0\") == \"definitely not\"\nassert solution(\"0.00000000000000001 1.5 0\") == \"definitely not\"\nassert solution(\"0 10000000000000000000 0\") == \"definitely not\"\nassert solution(\"0 0 0\") == \"ok\"\nassert solution(\"0 0 0.9999999999999999e+99\") == \"definitely not\"\nassert solution(\"0 0 0.00000000000000001\") == \"definitely not\"\nassert solution(\"0 10000000000000000000 0\") == \"definitely not\""
    },
    {
        "number": 3490,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n2\n0 0 0\n0 1.5 0\n''') == 'ok'"
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\\n\") == \"2\\nR 0\\nG 2\\n\"\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\\n3 2\\n3 4\\n\") == \"1\\nR 0\\nG 2\\nR 3\\nG 2\\n\"\nassert solution(\"5 5\\n0 1\\n0 2\\n0 3\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n2 5\\n\") == \"2\\nR 0\\nG 2\\nR 4\\nG 2\\nR 5\\nG 2\\n\"\nassert solution(\"5 7\\n0 1\\n0 2\\n0 3\\n1 2\\n1 3\\n1 4\\n1 5\\n2 3\\n2 4\\n2 5\\n2 6\\n2 7\\n\") == \"4\\nR 0\\nG 2\\nR 6\\nG 2\\nR 7\\nG 2\\nR 4\\nG 2\\nR 2\\nG 2\\n\"\nassert solution(\"5 7\\n0 1\\n0 2\\n0 3\\n1 2\\n1 3\\n1 4\\n1 5\\n2 3\\n2 4\\n2 5\\n2 6\\n2 7\\n3 4\\n3 5\\n3 6\\n3 7\\n\") == \"4\\nR 0\\nG 2\\nR 2\\nG 2\\nR 4\\nG 2\\nR 6\\nG 2\\nR 7\\nG 2\\n\"\nassert solution(\"5 7\\n0 1\\n0 2\\n0 3\\n1 2\\n1 3\\n1 4\\n1 5\\n2 3\\n2 4\\n2 5\\n2 6\\n2 7\\n3 4\\n3 5\\n3 6\\n3 7\\n4 5\\n4 6\\n4 7\\n\") == \"4\\nR 0\\nG 2\\nR 2\\nG 2\\nR 4\\nG 2\\nR 6\\nG 2\\nR 7\\nG 2\\nR 5\\nG 2\\n\"\nassert solution(\"5 7\\n0 1\\n0 2\\n0 3\\n1 2\\n1 3\\n1 4\\n1 5\\n2 3\\n2 4\\n2 5\\n2 6\\n2 7\\n3 4\\n3 5\\n3 6\\n3 7\\n4 5\\n4 6\\n4 7\\n5 6\\n5 7\\n\") == \"4\\nR 0\\nG 2\\nR 2\\nG 2\\nR 4\\nG 2\\nR 6\\nG 2\\nR 7\\nG 2\\nR 5\\nG 2\\nR 3\\nG 2\\n\""
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == expected, f\"Your solution is incorrect. Please provide the correct solution:\\n{expected}\""
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"2\\nR 0\\nG 2\\n\""
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '2\\nR 0\\nG 2\\n', \"The function should return the expected output.\""
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\\n\") == \"2\\nR 0\\nG 2\\n\""
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == sample_output"
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\\n\") == \"2\\nR 0\\nG 2\\n\""
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"2\\nR 0\\nG 2\\n\""
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    '''\n    5 4\n    0 1\n    0 3\n    1 2\n    2 4\n    0 2\n    0 4\n    2 3\n    2 4\n    '''\n) == '''\n2\nR 0\nG 2\n'''\n\nassert solution(\n    '''\n    10 4\n    0 1\n    0 3\n    1 2\n    2 4\n    0 2\n    0 4\n    2 3\n    2 4\n    '''\n) == '''\n2\nR 0\nG 2\n'''\n\nassert solution(\n    '''\n    10 6\n    0 1\n    0 3\n    1 2\n    2 4\n    0 2\n    0 4\n    2 3\n    2 4\n    3 4\n    4 4\n    5 5\n    6 6\n    7 7\n    '''\n) == '''\n3\nR 0\nG 1\nR 1\nG 2\nR 2\nG 3\nR 3\nG 4\nR 4\nG 5\nR 5\nG 6\nR 6\nG 7\nR 7\nG 8\nR 8\nG 9\nR 9\nG 10\nR 10\n'''\n\nassert solution(\n    '''\n    10 8\n    0 1\n    0 3\n    1 2\n    2 4\n    0 2\n    0 4\n    2 3\n    2 4\n    3 4\n    4 4\n    5 5\n    6 6\n    7 7\n    8 8\n    '''\n) == '''\n2\nR 0\nG 2\n'''"
    },
    {
        "number": 3491,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '''\n2\nR 0\nG 2\n'''"
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\") == 2\nassert solution(\"7 4 4 4\\nA B C D\\nE F G H\\nI J K L\\n6 J K L\\n6 J M N\\n6 K N O\") == 1\nassert solution(\"7 5 5 5\\nA B C D E\\nF G H I J\\nH K L M N\\nH J K L N\\nH J M N O\") == 1"
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == \"2\", \"The solution is incorrect\""
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F') == 2\nprint(\"Test Passed\")"
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"def solution(stdin: str) -> str:...\""
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 2\nprint(\"Solution Passed\")"
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\") == \"2\"\nassert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B E F\") == \"4\"\nassert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B E F\\n4 G H I\") == \"8\""
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\nr'''\n7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n'''\n) == '2\\n'"
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    7 3 3 3\n    A B C\n    D E F\n    3 A E G\n    3 A C E\n    3 B D F\n    \"\"\"\n) == 2"
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\") == 2\nassert solution(\"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n6 G H\") == 6\nassert solution(\"1 1\\n2 2\\n3 3\\n4 4\") == 1\nassert solution(\"1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\") == 6\nassert solution(\"1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\") == 8"
    },
    {
        "number": 3492,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(None) == 0"
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\nYYY\\nNYY\\nYNY\") == \"2\\n1 2 3\\n3 1 2\"\nassert solution(\"4\\nYYY\\nNYY\\nYNY\\nYNY\") == \"1\\n2 1 2 3\"\nassert solution(\"5\\nYYY\\nNYY\\nYNY\\nYNY\\nYNY\") == \"0\\n1 2 1 2 3\"\nassert solution(\"6\\nYYY\\nNYY\\nYNY\\nYNY\\nYNY\\nYNY\") == \"2\\n3 1 2 1 2\""
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"Y\\nYYY\\nNYY\\nYNY\\n\") == \"2\\n1 2 3\\n3 1 2\""
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\nYYY\\nNYY\\nYNY\") == \"2\\n1 2 3\\n3 1 2\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\nYYY\\nNYY\\nYNY') == '\\n'.join(['2'])\nassert solution('4\\nYYN\\nNNY\\nNYN\\nYNY\\n') == '\\n'.join(['3', '1', '2'])\nassert solution('5\\nYYN\\nNNY\\nNYN\\nYNY\\nNNNNN\\n') == '\\n'.join(['4', '2', '1', '3'])\nassert solution('6\\nYYN\\nNNY\\nNYN\\nYNY\\nNNNNN\\nNNNNNNNNNNNNN') == '\\n'.join(['5', '3', '1', '4', '2'])\nassert solution('7\\nYYN\\nNNY\\nNYN\\nYNY\\nNNNNNNNNNNNNN\\nAAAAAAAAAAAAAAAANNNNNN') == '\\n'.join(['6', '4', '2', '5', '3', '1', '6'])\nassert solution('8\\nYYN\\nNNY\\nNYN\\nYNY\\nNNNNNNNNNNNNN\\nAAAAAAAAAAAAAAAANNNNNN\\nNNNNNNNNNNNNNNNNNNNNNN') == '\\n'.join(['7', '5', '3', '8', '4', '2', '7'])"
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n3\nYYY\nNYY\nYNY\n''') == '2\\n1 2 3\\n3 1 2'\n\nassert solution('''\n3\nNYY\nYYY\nYNY\n''') == '2\\n2 3 1'\n\nassert solution('''\n3\nYYY\nNYY\nYNY\n''') == '2\\n1 2 3\\n3 1 2'\n\nassert solution('''\n4\nNYN\nYNY\nNYY\nYNY\n''') == '0\\n'\n\nassert solution('''\n4\nYYY\nNYY\nYNY\nNYY\n''') == '2\\n1 2 3 3'\n\nassert solution('''\n4\nNYY\nYYY\nYNY\nNYY\nYNY\n''') == '2\\n2 3 1 2'\n\nassert solution('''\n5\nYYY\nNYY\nYNY\nNYY\nYNY\nYYY\n''') == '1\\n'\n\nassert solution('''\n5\nNYY\nYYY\nYNY\nNYY\nYNY\nYYY\n''') == '1\\n1 2'\n\nassert solution('''\n5\nYYY\nNYY\nYNY\nNYY\nYNY\nNYY\n''') == '1\\n'\n\nassert solution('''\n6\nNYY\nYYY\nYNY\nNYY\nYNY\nNYY\nNYY\nNYY\n''') == '0\\n'\n\nassert solution('''\n6\nYYY\nNYY\nYNY\nNYY\nYNY\nNYY\nNYY\nNYY\n''') == '1\\n1 2 3'\n\nassert solution('''\n6\nNYY\nYYY\nYNY\nNYY\nYNY\nNYY\nNYY\nNYY\n''') == '1\\n2 3 3'\n\nassert solution('''\n7\nNYY\nYYY\nYNY\nNYY\nYNY\nNYY\nNYY\nNYY\nNYY\nNYY\n''') == '0\\n'\n\nassert solution('''\n7\nYYY\nNYY\nYNY\nNYY\nYNY\nNYY\nNYY\nNYY\nNYY\nNYY\n''') == '1\\n1 2 3 3 3'\n\nassert solution('''\n7\nNYY\nYYY\nYNY\nNYY\nYNY\nNYY\nNYY\nNYY\nNYY\nNYY\n''') == '1\\n2 3 3 3 3'\n\nassert solution('''\n8\nNYY\nYYY\nYNY\nNYY\nYNY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\n''') == '0\\n'\n\nassert solution('''\n8\nYYY\nNYY\nYNY\nNYY\nYNY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\n''') == '1\\n1 2 3 3 3 3'\n\nassert solution('''\n8\nNYY\nYYY\nYNY\nNYY\nYNY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\n''') == '1\\n2 3 3 3 3 3'\n\nassert solution('''\n9\nNYY\nYYY\nYNY\nNYY\nYNY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY\nNYY"
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2\\n1 2 3\\n3 1 2\""
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\nYYY\\nNYY\\nYNY\") == \"2\\n1 2 3\\n3 1 2\"\nassert solution(\"3\\nYYY\\nNYY\\nYNY\\nYNY\") == \"3\\n1 2 3\\n3 1 2\"\nassert solution(\"3\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYNY\") == \"4\"\nassert solution(\"3\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYNY\\nYNY\") == \"4\"\nassert solution(\"3\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYNY\\nYNY\\nYNY\") == \"5\"\nassert solution(\"3\\nYYY\\nNYY\\nYNY\\nYYY\\nNYY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\") == \"5\""
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"1\", \"Test case 1 should output '1'.\"\nassert solution(\"YYY\") == \"2\", \"Test case 2 should output '2'.\"\nassert solution(\"NYY\") == \"3\", \"Test case 3 should output '3'.\"\nassert solution(\"YNY\") == \"2\", \"Test case 4 should output '2'.\"\nassert solution(\"YNY\") == \"2\", \"Test case 5 should output '2'.\"\nassert solution(\"YNY\") == \"2\", \"Test case 6 should output '2'.\""
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\nYYY\\nNYY\\nYNY\") == \"2\\n1 2 3\\n3 1 2\"\nassert solution(\"3\\nYYY\\nYNY\\nNYY\") == \"3\\n1 2 3\\n3 1 2\""
    },
    {
        "number": 3493,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\nYYY\\nNYY\\nYNY') == '2\\n1 2 3\\n3 1 2'\nassert solution('3\\nYYY\\nNYY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY\\nYNY"
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == solution(sample_output)"
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 3\\nx..\\n...\\n...\\n3\\n1 3\\n1 1\\n3 2') == '4\\n0\\n5\\n'"
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\nx..\\n...\\n...\\n3\\n1 3\\n1 1\\n3 2\\n\") == \"4\\n0\\n5\""
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 3\\nx..\\n...\\n...\\n3\\n1 3\\n1 1\\n3 2') == '4\\n0\\n5'"
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt').read()) == \"4\\n0\\n5\\n\""
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '4\\n0\\n5\\n', \"Test failed\""
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\nx..\\n...\\n...\\n3\\n1 3\\n1 1\\n3 2\") == \"4\\n0\\n5\""
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input) == expected, f\"Expected: {expected}, got: {solution(input)}\""
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(r\"\"\"\n    3 3\nx..\n...\n...\n3\n1 3\n1 1\n3 2\n\"\"\") == \"4\\n0\\n5\""
    },
    {
        "number": 3494,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Expected output: {expected}\\nReceived output: {solution(input())}\""
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"\"\"\n4.114 -2.842\n6.297 -0.784\n5.000 3.000\n\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\\n\"\n"
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Solution does not match expected output.\\nInput: {input()}\\nOutput: {output}\""
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n5\\n3\\n4\\n5 3\") == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\"\n"
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution( \"\"\"3\n5\n3\n4\n5 3\"\"\") == \"\"\"4.114 -2.842\n6.297 -0.784\n5.000 3.000\"\"\""
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n5\\n3\\n4\\n5 3\") == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\""
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input1) == output1\nassert solution(input2) == output2\nassert solution(input3) == output3\nassert solution(input4) == output4\nassert solution(input5) == output5"
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input) == expected, f\"Test failed. Expected: {expected}, got: {solution(input)}\""
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Expected '{output}', got '{solution(input())}'\"\n"
    },
    {
        "number": 3495,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\""
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(r'4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8') == '3\\n5\\n8\\n10\\n13'\nassert solution(r'4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\\n9') == '3\\n5\\n8\\n10\\n13'\nassert solution(r'4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\\n9\\n10') == '3\\n5\\n8\\n10\\n13'\nassert solution(r'4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\\n9\\n10\\n11') == '3\\n5\\n8\\n10\\n13'\nassert solution(r'4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\\n9\\n10\\n11\\n12') == '3\\n5\\n8\\n10\\n13'\nassert solution(r'4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\\n9\\n10\\n11\\n12\\n13') == '3\\n5\\n8\\n10\\n13'\nassert solution(r'4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\\n9\\n10\\n11\\n12\\n13\\n14') == '3\\n5\\n8\\n10\\n13'\nassert solution(r'4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15') == '3\\n5\\n8\\n10\\n13'"
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"3\\n5\\n8\\n10\\n13\"\n"
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"3\\n5\\n8\\n10\\n13\""
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\\n\") == \"3\\n5\\n8\\n10\\n13\\n\""
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\") == \"3\\n5\\n8\\n10\\n13\"\nassert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\") == \"3\\n5\\n8\\n10\\n13\"\n"
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\") == \"3\\n5\\n8\\n10\\n13\""
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\\n') == '3\\n5\\n8\\n10\\n13\\n'"
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(r\"\"\"\n4 5\n2 3 5 7\n2\n3\n5\n6\n8\n\"\"\") == \"3\\n5\\n8\\n10\\n13\""
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\") == \"3\\n5\\n8\\n10\\n13\""
    },
    {
        "number": 3496,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\") == \"3\\n5\\n8\\n10\\n13\"\nassert solution(\"1 2 3\\n4 5 6\\n7 8 9\\n10 11 12\\n13 14 15\") == \"10\\n14\"\nassert solution(\"3 10\\n4 5 6\\n7 8 9\\n10 11 12\") == \"10\\n14\""
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5') == 0, \"Invalid input.\"\nassert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 6') == 0, \"Invalid input.\"\nassert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5') == 0, \"Invalid input.\"\nassert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 6') == 0, \"Invalid input.\"\nassert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5') == 0, \"Invalid input.\"\nassert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 6') == 0, \"Invalid input.\"\nassert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5') == 0, \"Invalid input.\""
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin: str) == '0', \"Test case 1 failed\"\n\nassert solution(stdin: str) == '1', \"Test case 2 failed\"\n\nassert solution(stdin: str) == '0', \"Test case 3 failed\"\n\nassert solution(stdin: str) == '1', \"Test case 4 failed\"\n\nassert solution(stdin: str) == '1', \"Test case 5 failed\"\n\nassert solution(stdin: str) == '0', \"Test case 6 failed\""
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 \") == 0, \"Expected 0, got {}\".format(solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 \"))"
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 ') == 0\nassert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5') == 0\nassert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 6') == 1\nassert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 6') == 1"
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    6 3\n    0 1\n    1 2\n    2 3\n    2 4\n    1 5\n    1 2 5\n    \"\"\"\n) == \"0\\n\"\n\nassert solution(\n    \"\"\"\n    5 3\n    0 1\n    1 2\n    2 3\n    3 4\n    1 5\n    \"\"\"\n) == \"3\\n\"\n\nassert solution(\n    \"\"\"\n    3 1\n    0 1\n    1 2\n    2 3\n    3 4\n    \"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n    4 4\n    0 1\n    1 2\n    2 3\n    3 4\n    4 5\n    \"\"\"\n) == \"2\\n\"\n\nassert solution(\n    \"\"\"\n    3 5\n    0 1\n    1 2\n    2 3\n    3 4\n    4 5\n    5 6\n    5 7\n    6 8\n    7 8\n    \"\"\"\n) == \"1\\n\"\n\nassert solution(\n    \"\"\"\n    3 5\n    0 1\n    1 2\n    2 3\n    3 4\n    4 5\n    5 6\n    5 7\n    6 8\n    7 8\n    9 10\n    9 11\n    10 11\n    11 12\n    12 13\n    13 14\n    14 15\n    \"\"\"\n) == \"0\\n\""
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 \") == 0\nassert solution(\"10 5\\n0 1\\n1 2\\n2 3\\n3 4\\n3 5\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100\\n100 101\\n101 102\\n102 103\\n103 104\\n104 105\\n105 106\\n106 107\\n107 108\\n108 109\\n109 110\\n110 111\\n111 112\\n112 113\\n113 114\\n114 115\\n115 116\\n116 117\\n117 118\\n118 119\\n119 120\\n120 121\\n121 122\\n122 123\\n123 124\\n124 125\\n125 126\\n126 127\\n127 128\\n128 129\\n129 130\\n130 131\\n131 132\\"
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 \") == \"0\\n\"\nassert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 \") == \"0\\n\""
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 \") == \"0\\n\"\nassert solution(\"3 3\\n0 1\\n1 2\\n1 2\\n2 3\\n2 3\\n2 4\\n1 5\\n1 2 5 \") == \"0\\n\"\nassert solution(\"4 4\\n0 1\\n1 2\\n1 2\\n2 3\\n2 3\\n2 3\\n2 4\\n1 5\\n1 2 5 \") == \"1\\n\"\nassert solution(\"6 5\\n0 1\\n1 2\\n1 2\\n2 3\\n2 3\\n2 3\\n2 3\\n2 4\\n1 5\\n1 2 5 \") == \"0\\n\"\nassert solution(\"6 6\\n0 1\\n1 2\\n1 2\\n2 3\\n2 3\\n2 3\\n2 3\\n2 4\\n1 5\\n1 2 5 \") == \"1\\n\"\nassert solution(\"6 7\\n0 1\\n1 2\\n1 2\\n2 3\\n2 3\\n2 3\\n2 3\\n2 4\\n1 5\\n1 2 5 \") == \"1\\n\"\nassert solution(\"7 7\\n0 1\\n1 2\\n1 2\\n2 3\\n2 3\\n2 3\\n2 3\\n2 4\\n1 5\\n1 2 5 \") == \"1\\n\"\nassert solution(\"7 8\\n0 1\\n1 2\\n1 2\\n2 3\\n2 3\\n2 3\\n2 3\\n2 4\\n1 5\\n1 2 5 \") == \"1\\n\"\nassert solution(\"7 9\\n0 1\\n1 2\\n1 2\\n2 3\\n2 3\\n2 3\\n2 3\\n2 4\\n1 5\\n1 2 5 \") == \"1\\n\"\nassert solution(\"7 10\\n0 1\\n1 2\\n1 2\\n2 3\\n2 3\\n2 3\\n2 3\\n2 4\\n1 5\\n1 2 5 \") == \"1\\n\""
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n6 3\n0 1\n1 2\n2 3\n2 4\n1 5\n1 2 5 \n''') == '0\\n'\n\nassert solution('''\n3 4\n0 1\n0 2\n0 3\n0 4\n1 2\n1 3\n1 4\n''') == '1\\n'\n\nassert solution('''\n4 5\n0 1\n0 2\n0 3\n0 4\n0 5\n1 2\n1 3\n1 4\n1 5\n''') == '3\\n'\n\nassert solution('''\n5 6\n0 1\n0 2\n0 3\n0 4\n0 5\n0 6\n1 2\n1 3\n1 4\n1 5\n1 6\n''') == '4\\n'\n\nassert solution('''\n6 8\n0 1\n0 2\n0 3\n0 4\n0 5\n0 6\n0 7\n0 8\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n''') == '5\\n'"
    },
    {
        "number": 3497,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5 \") == \"0\\n\"\n"
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '106\\n107\\n71\\n', 'The output should be \"106\\n107\\n71\\n\", but it is \"' + str(solution(stdin)) + '\".'"
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1\") == \"106\\n107\\n71\\n\""
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1\") == \"106\\n107\\n71\""
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '106\\n107\\n71\\n'\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 1\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1') == '106\\n107\\n71'"
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1\") == \"106\\n107\\n71\\n\""
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"106\\n107\\n71\\n\", \"The output is incorrect.\""
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1\") == \"106\\n107\\n71\""
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\nprint(106)\\nprint(107)\\nprint(71)\\n\\n'\nprint('All tests passed.')"
    },
    {
        "number": 3498,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1\") == \"106\\n107\\n71\\n\""
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\nA\") == 51, \"The correct number of palindromic strings of length 2N containing S as a subsequence is 51.\"\n\nassert solution(\"3\\nabc\") == 2, \"The correct number of palindromic strings of length 2N containing S as a subsequence is 2.\"\n\nassert solution(\"4\\nAa\") == 1, \"The correct number of palindromic strings of length 2N containing S as a subsequence is 1.\"\n\nassert solution(\"5\\nabcdefg\") == 1, \"The correct number of palindromic strings of length 2N containing S as a subsequence is 1.\"\n\nassert solution(\"6\\nAabb\") == 0, \"The correct number of palindromic strings of length 2N containing S as a subsequence is 0.\""
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(2) == 51\n"
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\nAA\\n\") == \"51\""
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\nA\") == \"51\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2\\nA') == '51'\n"
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('palindrome_strings.txt', 'r')) == 51"
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == 51\n"
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\nAA\\n\") == \"51\""
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\nAA\") == 51\n"
    },
    {
        "number": 3499,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\nA\\n\") == \"51\"\n\nfrom typing import List"
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n2\n3 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71\n\"\"\") == \"1 2\"\n\nassert solution(\"\"\"\n3\n29 45 56 68\n19 43 50 72\n25 40 49 61\n23 31 58 63\n27 42 54 71\n\"\"\") == \"2 3\"\n\nassert solution(\"\"\"\n2\n3 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71\n\"\"\") == \"no ties\"\n\nassert solution(\"\"\"\n2\n29 45 56 68\n19 43 50 72\n25 40 49 61\n23 31 58 63\n27 42 54 71\n\"\"\") == \"2 3\""
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n') == 'no ties\\n'\nassert solution('3\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n2 29 45 56 68\\n') == '1 2\\n'\nassert solution('3\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n3 29 45 56 68\\n') == '2 1\\n'"
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(['3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71']) == 'no ties'\n\nassert solution(['3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n11 25 40 49 61\\n9 23 31 58 63\\n4 2"
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"no ties\", \"Test failed\""
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68\\n\") == \"no ties\""
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin='2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68') == '1 2'\n\nassert solution(stdin='2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n\\n14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68') == '1 2'"
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"no ties\" # your solution should return \"no ties\""
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"no ties\", \"Please provide the input as described.\"\n"
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"no ties\""
    },
    {
        "number": 3500,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71') == 'no ties'\nassert solution('14 23 39 59 63\\n8 17 35 55 61\\n15 26 42 53 71\\n10 25 31 57 64\\n6 20 44 52 68') == '1 2'"
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 0, \"No solution found for the given input\"\n"
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"test_cases/ex1.txt\", \"r\")) == \"0\\n\"\nassert solution(open(\"test_cases/ex2.txt\", \"r\")) == \"0\\n\"\nassert solution(open(\"test_cases/ex3.txt\", \"r\")) == \"0\\n\"\nassert solution(open(\"test_cases/ex4.txt\", \"r\")) == \"1\\n\"\nassert solution(open(\"test_cases/ex5.txt\", \"r\")) == \"1\\n\""
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 0\n"
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n3 2 1\\n1 2 3\\n1 2 3') == 0\nassert solution('3\\n2 3 1\\n1 2 3\\n2 3 4') == 0\nassert solution('3\\n2 3 1\\n1 2 3\\n2 3 3') == 1\nassert solution('3\\n1 2 3\\n2 3 1\\n1 2 3') == 1\nassert solution('3\\n1 2 3\\n2 3 4\\n1 2 3') == 0\n\nfrom typing import List"
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 0 # Solution 1"
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input) == output, \"Incorrect output\"\nprint(\"PASSED\")"
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"0\\n\""
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"0\\n\", \"Your solution should return 0\""
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n3 2 1\\n1 2 3\\n1 2 3\") == \"0\\n\"\nassert solution(\"4\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\") == \"1\\n2\\n3\\n4\\n\""
    },
    {
        "number": 3501,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3, \"3 2 1\\n1 2 3\\n1 2 3\") == \"0\"\nassert solution(3, \"1 2 3\\n2 1 3\\n3 2 1\") == \"0\"\nassert solution(3, \"1 3 2\\n2 1 3\\n3 2 1\") == \"0\"\nassert solution(3, \"1 3 2\\n2 3 1\\n3 1 2\") == \"0\"\nassert solution(3, \"1 3 2\\n2 3 1\\n3 1 2\") == \"1\"\nassert solution(3, \"1 3 2\\n2 3 1\\n3 1 2\") == \"2\""
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '''0\n0\n0.2\n0.171428571429\n0.228571428571\n'''"
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n1 2 3\\n6 2 3\\n10 2 3\\n16 3 4') == '0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571'\nassert solution('5\\n1 2 3\\n6 2 3\\n10 2 3\\n16 3 4') == '0\\n0\\n0.2\\n0.171428571429\\n0.228571428571'\nassert solution('10\\n1 2 3\\n6 2 3\\n10 2 3\\n16 3 4') == '0.228571428571\\n0.171428571429\\n0.171428571429\\n0.228571428571\\n0.228571428571'\nassert solution('15\\n1 2 3\\n6 2 3\\n10 2 3\\n16 3 4') == '0.171428571429\\n0.171428571429\\n0.228571428571\\n0.228571428571\\n0.228571428571'\n"
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('traffic_lights.txt').read()) == '0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571'\n"
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Expected output: {output}, Received: {solution(input())}\"\n"
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 2 3\\n6 2 3\\n10 2 3\\n16 3 4\") == \"0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571\""
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 2 3\\n6 2 3\\n10 2 3\\n16 3 4\") == \"0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 2 3') == '0.4'\nassert solution('6 2 3') == '0'\nassert solution('10 2 3') == '0.2'\nassert solution('16 3 4') == '0.171428571429'\nassert solution('4') == '0'"
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 2 3\\n6 2 3\\n10 2 3\\n16 3 4\\n\") == \"0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571\""
    },
    {
        "number": 3502,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 2 3\\n6 2 3\\n10 2 3\\n16 3 4\") == \"0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571\""
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n1 5\\n3 3\\n4 5\\n-1 -6') == '1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5'\nassert solution('4\\n1 1\\n1 2\\n2 3\\n3 4') == '1 + 1 = 2\\n1 - 2 = 1\\n2 * 3 = 6\\n3 * 4 = 12'\nassert solution('5\\n2 3\\n4 5\\n6 7') == '2 + 3 = 5\\n4 + 5 = 9\\n6 - 7 = 3\\n7 - 3 = 6'\nassert solution('10\\n10 5\\n10 6\\n10 8\\n10 9') == 'impossible'"
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 -6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\"\nassert solution(\"10\\n1 2\\n3 4\\n5 6\\n7 8\") == \"impossible\""
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n1 5\\n3 3\\n4 5\\n-1 -6') == '1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5'"
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 -6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\\nimpossible\\n\""
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 -6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\\n\""
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 5\\n3 3\\n4 5\\n-1 -6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\\n\"\nassert solution(\"1 5\\n-2 -1\\n1 4\\n3 3\\n-2 -1\\n2 -3\\n4 2\") == \"impossible\"\n"
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 -6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\\nimpossible\\n\"\nassert solution(\"4\\n1 1\\n3 3\\n4 5\\n-1 -6\") == \"1 + 1 = 2\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\\nimpossible\\n\"\nassert solution(\"4\\n1 5\\n3 3\\n4 4\\n-1 -6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 4 = -3\\n-1 - -6 = 5\\nimpossible\\n\"\nassert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 -1\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -1 = 5\\nimpossible\\n\"\nassert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 -6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\\nimpossible\\n\""
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''4\n1 5\n3 3\n4 5\n-1 -6''') == '''1 + 5 = 6\n3 * 3 = 9\n4 - 5 = -1\n-1 - -6 = 5'''\n\nassert solution('''5\n2 2\n1 3\n4 5\n-1 6''') == '''impossible'''\n\nassert solution('''1\n2\n3\n4\n5''') == '''impossible'''\n\nassert solution('''5\n3 4\n1 2\n5 7\n-2 -1''') == '''impossible'''\n\nassert solution('''5\n-1 0\n-3 0\n0 0\n0 0''') == '''impossible'''"
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 -6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\"\nassert solution(\"10\\n1 1\\n2 3\") == \"impossible\""
    },
    {
        "number": 3503,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n1 5\n3 3\n4 5\n-1 -6\n''') == '''\n1 + 5 = 6\n3 * 3 = 9\n4 - 5 = -1\n-1 - -6 = 5\n"
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1\\n\") == \"4\\n1\\n4\\n6\\n0\""
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1\\n') == '4\\n1\\n4\\n6\\n0\\n'"
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1\") == \"4\\n1\\n4\\n6\\n0\\n\""
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1\") == \"4\\n1\\n4\\n6\\n0\""
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(None) == ''\nassert solution('''\n5 3\n1 8\n2 3\n2 8\n5 8\n5 9\n3 6 6\n1 7 4\n1 3 1\n''') == '4\\n1\\n4\\n6\\n0\\n'\n"
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Test case {i+1} failed. Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(5, 3) == \"4\\n1\\n4\\n6\\n0\""
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"\"\"\n4\n1\n4\n6\n0\n\"\"\""
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1\\n') == '4\\n1\\n4\\n6\\n0\\n'"
    },
    {
        "number": 3504,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"4\\n1\\n4\\n6\\n0\""
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=input()) == 'Output an integer representing the number of ways.'"
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 4\nassert solution(4) == 4\nassert solution(5) == 20\nassert solution(10) == 10"
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 2 3 4\") == \"4\\n\""
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == 'Output: 4\\n', 'Your solution is incorrect.'"
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, but got {solution(input())}\""
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 4, \"The output should be 4, but it is: {}\".format(solution())"
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Expected output: {output()}, but got: {solution(input())}\""
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 2 3 4\") == 4\n"
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 2 3 4\") == 4"
    },
    {
        "number": 3505,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Solution: {solution(input())}, Expected: {expected}\""
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"\"\"\n4 3\n\"\"\""
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''1 31 2\n20 60\n50 90''') == '4 3'"
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"4 3\"\n"
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 31 2\\n20 60\\n50 90') == '4 3'"
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\"\n"
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\\n\""
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\""
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\"\nassert solution(\"1 31 2\\n20 60\\n50 90\\n50 90\") == \"4 3\"\nassert solution(\"1 31 2\\n20 60\\n50 90\\n50 90\\n50 90\") == \"4 3\""
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\"\n"
    },
    {
        "number": 3506,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''1 31 2\n20 60\n50 90''') == '''4 3'''\n\nfrom typing import List"
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2 1\") == \"3\\n\"\n\nassert solution(\"3 3 1\") == \"6\\n\"\n\nassert solution(\"4 3 1\") == \"10\\n\"\n\nassert solution(\"5 5 1\") == \"25\\n\"\n\nassert solution(\"1 1 1\") == \"0\\n\""
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 4 2\") == \"6\"\nassert solution(\"4 2 2\") == \"1\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"4 1 1\") == \"1\""
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2 1\") == \"3\""
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=input()) == \"3\"\nprint(\"3\")"
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"2 2 1\"\n) == \"3\""
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2 1\") == \"3\\n\"  # arrange 2 white boxes, 2 red boxes, and 1 black box\nassert solution(\"3 3 2\") == \"6\\n\"  # arrange 3 white boxes, 3 red boxes, and 2 black boxes\nassert solution(\"4 4 3\") == \"12\\n\"  # arrange 4 white boxes, 4 red boxes, and 3 black boxes\nassert solution(\"5 5 4\") == \"20\\n\"  # arrange 5 white boxes, 5 red boxes, and 4 black boxes"
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2 1\") == \"3\\n\"\nassert solution(\"2 2 5\") == \"6\\n\"\nassert solution(\"3 2 1\") == \"4\\n\"\nassert solution(\"3 2 5\") == \"12\\n\"\nassert solution(\"2 3 1\") == \"1\\n\"\nassert solution(\"2 3 5\") == \"5\\n\"\nassert solution(\"4 2 1\") == \"1\\n\"\nassert solution(\"4 2 5\") == \"5\\n\"\nassert solution(\"1 3 1\") == \"1\\n\"\nassert solution(\"1 3 5\") == \"10\\n\"\nassert solution(\"6 2 1\") == \"2\\n\"\nassert solution(\"6 2 5\") == \"10\\n\"\nassert solution(\"7 2 1\") == \"3\\n\"\nassert solution(\"7 2 5\") == \"15\\n\""
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(2, 2, 1) == 3\nassert solution(2, 2, 2) == 6\nassert solution(3, 4, 1) == 0\nassert solution(2, 2, 4) == 1\nassert solution(2, 2, 5) == 2"
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2 1\") == \"3\""
    },
    {
        "number": 3507,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2 1\") == 3, \"Incorrect output\"\nassert solution(\"3 2 1\") == 6, \"Incorrect output\"\nassert solution(\"4 3 1\") == 1, \"Incorrect output\"\nassert solution(\"10 10 1\") == 0, \"Incorrect output\"\nassert solution(\"1 100 1\") == 1, \"Incorrect output\""
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3 1\"\n"
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n1341 2412 1200 3112 2391') == '3 1'\n\nfrom typing import List"
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '3 1'"
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, \"Output does not match the expected output\""
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    5\n    1341 2412 1200 3112 2391\n    \"\"\"\n) == \"\"\"\n3\n1\n\"\"\""
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1341 2412 1200 3112 2391\") == \"3 1\\n\"\nassert solution(\"5\\n1341 2412 1200 3112 2391 1000 2000 3000 4000 5000\") == \"3 1\\n\"\nassert solution(\"5\\n1341 2412 1200 3112 2391 0 1 2 3 4 5\") == \"3 1\\n\"\nassert solution(\"5\\n1341 2412 1200 3112 2391 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\") == \"3 1\\n\"\nassert solution(\"5\\n1341 2412 1200 3112 2391 1000 2000 3000 4000 5000 6000 7000 8000 9000 10000\") == \"3 1\\n\"\nassert solution(\"5\\n1341 2412 1200 3112 2391 1000 2000 3000 4000 5000 6000 7000 8000 9000 10000 11000 12000 13000 14000 15000 16000 17000 18000 19000 20000 21000 22000 23000 24000 25000 26000 27000 28000 29000 30000 31000 32000 33000 34000 35000 36000 37000 38000 39000 40000 41000 42000 43000 44000 45000 46000 47000 48000 49000 50000 51000 52000 53000 54000 55000 56000 57000 58000 59000 60000 61000 62000 63000 64000 65000 66000 67000 68000 69000 70000 7100"
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1341 2412 1200 3112 2391\") == \"3 1\\n0 1\""
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == sample_output, f\"Test failed. Expected output: {sample_output}, but got: {solution(sample_input)}\"\n"
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1341 2412 1200 3112 2391\") == \"3 1\"\nassert solution(\"5\\n1234 5678 9012 3456 6789\") == \"2 2\"\nassert solution(\"5\\n1000 2000 3000 4000 5000\") == \"1 2\"\nassert solution(\"5\\n0 0 0 0 0\") == \"0 0\"\nassert solution(\"5\\n-1000 -2000 -3000 -4000 -5000\") == \"0 1\""
    },
    {
        "number": 3508,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1341 2412 1200 3112 2391\") == \"3 1\"\nassert solution(\"5 1341 2412 1200 3112 2391\") == \"3 1\"\nassert solution(\"5 1341 2412 1200 3112 2391 1234\") == \"2 1\"\nassert solution(\"1 1341 2412 1200 3112 2391 1234\") == \"2 1\"\nassert solution(\"1341 2412 1200 3112 2391 1234 5678\") == \"2 1\"\nassert solution(\"1 1341 2412 1200 3112 2391 1234 5678\") == \"2 1\"\nassert solution(\"1341 2412 1200 3112 2391 1234 5678 9012\") == \"2 1\"\nassert solution(\"1 1341 2412 1200 3112 2391 1234 5678 9012\") == \"2 1\""
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n') == '6\\n'\n"
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 6\nprint(\"All tests passed!\")"
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4') == '6'"
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"6\"\nassert solution(\"5 10\\n1 1 1\\n2 2 2\\n3 3 3\\n4 4 4\\n5 5 5\\n6 6 6\") == \"10\""
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n10 20\n3 5\n1 3 7\n2 1 1\n2 3 2\n2 3 5\n3 2 4\n''') == '6'\n"
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4') == '6'\nassert solution('10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n10 30\\n2 3 5\\n3 2 4\\n3 3 3\\n2 3 5\\n3 2 4\\n') == '4'\nassert solution('10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n10 30\\n2 3 5\\n3 2 4\\n3 3 3\\n2 3 5\\n3 2 4\\n') == '10'\nassert solution('10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n10 30\\n2 3 5\\n3 2 4\\n3 3 3\\n2 3 5\\n3 2 4\\n10 20\\n') == '6'\nassert solution('10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n10 30\\n2 3 5\\n3 2 4\\n3 3 3\\n2 3 5\\n3 2 4\\n10 20\\n10 25\\n10 30\\n2 3 5\\n3 2 4\\n10 20\\n') == '10'\nassert solution('10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n10 30\\n2 3 5\\n3 2 4\\n3 3 3\\n2 3 5\\n3 2 4\\n10 20\\n10 25\\n10 30\\n2 3 5\\n3 2 4\\n10 20\\n10 25\\n10 30\\n2 3 5\\n3 2 4\\n10 20\\n10 25\\n10 30\\n2 3 5\\n3 2 4\\n10 20\\n10 25\\n10 30\\n2 3 5\\n3 2 4\\n10 20\\n10 25\\n10 30\\n2 3 5\\n3 2 4\\n10 20\\n10 25\\n10 30\\n2 3 5\\n3 2 4\\n10 20\\n10 25\\n10 30\\n2 3 5\\n3 2 4\\n10 20\\n10 25\\n10 30\\n2 3 5\\n3 2 4\\n10 20\\n10 25\\n10 30\\n2 3 5\\n3 2 4\\n10 20\\n10 25\\n10 30\\n2 3 5\\n3 2 4\\n10 20\\n10 25\\n10 30\\n2 3 5\\n3 2 4\\n10 20\\n10 25\\n10 30\\n2 3 5\\n3 2 4\\n10 20\\n10 25\\n10 "
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"6\\n\""
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == 6\nprint(\"All tests passed!\")"
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"6\"\n"
    },
    {
        "number": 3509,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"6\\n\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n5 1 10\") == \"6\\n\"\nassert solution(\"10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n5 1 10\\n10 5 20\") == \"2\\n\""
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n2 ab b\\n1 b\") == \"0 1\\n-1 0\"\n\nassert solution(\"3\\nabc abcd efgh\\n1 2 3\") == \"-1 0\"\n\nassert solution(\"4\\nabcd efghijklmnopqrstuvwxyz\\n1 2 3 4\") == \"0 1\""
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '0 1 -1'"
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\n2 ab b\\n1 b') == '0 1 \\n-1 0'\nassert solution('1\\n2 ab b\\n1 b') == '0 1 \\n-1 0'\nassert solution('2\\n2 ab b\\n1 b\\n1 ab a\\n1 ac ac\\n1 ab d\\n1 ac b\\n1 ab a\\n1 ac ac\\n1 ab d') == '1 1 \\n1 0'"
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n2 ab b\\n1 b\") == \"0 1\\n-1 0\"\nassert solution(\"5\\n1234567890abcdef\\n1234567890abcdef\\n1234567890abcdef\\n1234567890abcdef\\n9876543210abcdef\\n9876543210abcdef\\n9876543210abcdef\\n9876543210abcdef\\n9876543210abcdef\") == \"15 0\\n-1 0\\n-1 0\\n-1 0\\n-1 0\"\nassert solution(\"2\\n2 ab b\\n2 c\") == \"2 1\\n0 2\"\nassert solution(\"3\\n1 ab c\\n2 ab d\\n3 cd\") == \"2 1\\n2 2\\n1 3\"\nassert solution(\"5\\n1234567890abcdef\\n1234567890abcdef\\n1234567890abcdef\\n1234567890abcdef\\n1234567890abcdef\\n1234567890abcdef\\n1234567890abcdef\\n1234567890abcdef\\n1234567890abcdef\\n1234567890abcdef\\n1234567890abcdef\\n1234567890abcdef\\n1234567890abcdef\\n1234567890abcdef\\n1234567890abcdef\\n1234567890abcdef\\n1234567890abcdef\\n1234567890abcdef\\n1234567890abcdef\\n1234567890abcdef\\n1234567890abcdef\\n1234567890abcdef\\n1234567890abcdef\\n1234567890abcdef\\n1234567890abcdef\\n1234567890abcdef\\n1234567890abcdef\\n1234567890abcdef\\n1234567890abcdef\\n1234567890abcdef\\n1234567890abcdef\\n1234567890abcdef\\n1234567890abcdef\\n1234567890abcdef\\n1234567890abcdef\\n1234567890abcdef\\n1234567890abcdef\\n1234567890abcdef\\n1234567890abcdef\\n1234567890abcdef\\n1234567890abcdef\\n1234567890abcdef\\n1234567890abcdef\\n1234567890abcdef\\n1234567890abcdef\\n1234567890abcdef\\n1234567890abcdef\\n1234567890abcdef\\n1234567890abcdef\\n1234567890abcdef\\n1234567890abcdef\\n1234567890abcdef\\n1234567890abcdef\\n1234567890abcdef\\n1234567890abcdef\\n1234567890abcdef\\n1234567890abcdef\\n1234567890abcdef\\n1234567890abcdef\\n1234567890"
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n2 ab b\\n1 b\") == \"0 1 -1\"\nassert solution(\"3\\n3 acd b\\n1 c\") == \"-1 0\"\nassert solution(\"5\\n5 bcd d\\n1 d\") == \"1 3 -1\"\n"
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"0 1 -1\", \"The solution is not correct.\""
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n2 ab b\\n1 b\") == \"0 1 -1\\n\""
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n    2\n    2 ab b\n    1 b\n    ''') == '''\n    0 1 -1\n    ''', \"Test Case 1 Failed\"\n\nassert solution('''\n    2\n    2 ab c\n    1 a\n    ''') == '''\n    1 -1 0\n    ''', \"Test Case 2 Failed\"\n\nassert solution('''\n    10\n    1 2 3 4 5 6 7 8 9 10\n    1 2 3 4 5 6 7 8 9 10\n    1 2 3 4 5 6 7 8 9 10\n    1 2 3 4 5 6 7 8 9 10\n    1 2 3 4 5 6 7 8 9 10\n    1 2 3 4 5 6 7 8 9 10\n    1 2 3 4 5 6 7 8 9 10\n    1 2 3 4 5 6 7 8 9 10\n    1 2 3 4 5 6 7 8 9 10\n    1 2 3 4 5 6 7 8 9 10\n    1 2 3 4 5 6 7 8 9 10\n    1 2 3 4 5 6 7 8 9 10\n    ''') == '''\n    0 -1 1 -1 1 1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1"
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"0 1 \\n-1 0\""
    },
    {
        "number": 3510,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin='2\\n2 ab b\\n1 b') == '0 1 -1\\ndef solution(stdin: str) -> str:\\n    n = int(stdin.split()[0])\\n    positions = list(map(int, stdin.split()[1:]))\\n    rounds = [0] * n\\n    rounds[0] = 1\\n    for i in range(1, n):\\n        rounds[i] = max(rounds[i-1], rounds[i-2] + positions[i-1])\\n    return str(rounds)\\n'"
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 4\\n1 1 2\\n2\\n1 1 2\\n2\") == \"1\\n3\\ndef solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"1\\n3\"\nassert solution(open(\"input2.txt\", \"r\").read()) == \"2\\n8\"\nassert solution(open(\"input3.txt\", \"r\").read()) == \"2\""
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 4\\n1 1 2\\n2\\n1 1 2\\n2\\n\") == \"1\\n3\"\nassert solution(\"5 3\\n2 2 2\\n2\\n3 3 3\\n4 4 4\\n\") == \"0\"\n\nfrom typing import List"
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 4\\n1 1 2\\n2\\n1 1 2\\n2\") == \"1\\n3\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\"\nassert solution(\"2 2\\n1 2\\n2\\n2 3\\n3 1\\n4 4\") == \"2\\n4\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 4\\n1 1 2\\n2\\n1 1 2\\n2\") == \"1\\n3\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"1\\n1 1 2\\n2\\n1 1 2\\n2\") == \"1\\n3\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"1\\n1 1 2\\n2\\n1 1 2\\n2\") == \"1\\n3\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 4\\n1 1 2\\n2\\n1 1 2\\n2\\n') == '1\\n3\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1\\n3\\n\"\nassert solution(input()) == \"3\\n\\n8\\n\""
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('pokenom_go.in', 'r')) == '1\\n3'\n"
    },
    {
        "number": 3511,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 4\\n1 1 2\\n2\\n1 1 2\\n2\") == \"1\\n3\\n\"\nassert solution(\"2 4\\n1 2 3\\n2\\n1 2 3\\n2\") == \"1\\n3\\n\"\nassert solution(\"2 4\\n1 1 2\\n2\\n1 1 2\\n2\") == \"1\\n3\\n\"\nassert solution(\"2 4\\n1 1 2\\n2\\n1 1 2\\n2\") == \"1\\n3\\n\"\nassert solution(\"2 4\\n1 1 2\\n2\\n1 1 2\\n2\") == \"1\\n3\\n\"\nassert solution(\"2 4\\n1 1 2\\n2\\n1 1 2\\n2\") == \"1\\n3\\n\""
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin='3\\n0 5 2\\n5 0 4\\n2 4 0') == '7\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'\n"
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 5 2\\n5 0 4\\n2 4 0\\n\") == 7\nassert solution(\"0 1 0\\n1 0 0\\n0 0 0\\n\") == 1\nassert solution(\"0 0 0\\n1 0 0\\n2 0 0\\n3 0 0\\n4 0 0\\n5 0 0\\n\") == 6\nassert solution(\"0 0 0\\n1 0 0\\n2 0 0\\n3 0 0\\n4 0 0\\n5 0 0\\n6 0 0\\n7 0 0\\n\") == 8\nassert solution(\"0 0 0\\n1 0 0\\n2 0 0\\n3 0 0\\n4 0 0\\n5 0 0\\n6 0 0\\n7 0 0\\n8 0 0\\n9 0 0\\n10 0 0\\n11 0 0\\n12 0 0\\n13 0 0\\n14 0 0\\n15 0 0\\n16 0 0\\n17 0 0\\n18 0 0\\n19 0 0\\n20 0 0\\n21 0 0\\n22 0 0\\n23 0 0\\n24 0 0\\n25 0 0\\n26 0 0\\n27 0 0\\n28 0 0\\n29 0 0\\n30 0 0\\n31 0 0\\n32 0 0\\n33 0 0\\n34 0 0\\n35 0 0\\n36 0 0\\n37 0 0\\n38 0 0\\n39 0 0\\n40 0 0\\n41 0 0\\n42 0 0\\n43 0 0\\n44 0 0\\n45 0 0\\n46 0 0\\n47 0 0\\n48 0 0\\n49 0 0\\n50 0 0\\n51 0 0\\n52 0 0\\n53 0 0\\n54 0 0\\n55 0 0\\n56 0 0\\n57 0 0\\n58 0 0\\n59 0 0\\n60 0 0\\n61 0 0\\n62 0 0\\n63 0 0\\n64 0 0\\n65 0 0\\n66 0 0\\n67 0 0\\n68 0 0\\n69 0 0\\n70 0 0\\n71 0 0\\n72 0 0\\n73 0 0\\n74 0 0\\n75 0 0\\n76 0 0\\n77 0 0\\n78 0 0\\n79 0 0\\n80 0 0\\n81 0 0\\n82 0 0\\n83 0 0\\n84 0 0\\n85 0 0\\n86 0 0\\n87 0 0\\n88 0 0\\n89 0 0\\n90 0 0\\n91 0 0\\n92 0 0\\n93 0 0\\n94 0 0\\n95 0 0\\n96 0 0\\n97 0 0\\n98 0 0\\n99 0 0\\n100 0 0\\n101 0 0\\n102 0 0\\n103 0 0\\n104 0 0\\n105 0 0\\n106 0 0"
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n0 5 2\\n5 0 4\\n2 4 0\") == \"7\\n\"\n"
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('example_input.txt', 'r')) == '7\\n'\n"
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"7\\nMinimum total flight duration: 7\"\n"
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n0 5 2\\n5 0 4\\n2 4 0\") == 7\nassert solution(\"3\\n0 5 2\\n5 0 4\\n2 4 0\") == 7\nassert solution(\"3\\n0 5 2\\n5 0 4\\n2 4 0\") == 7"
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 5 2\\n5 0 4\\n2 4 0\") == \"7\"\nassert solution(\"0 1 2\\n1 0 4\\n2 4 0\") == \"4\"\nassert solution(\"0 1 2\\n1 0 4\\n2 3 0\") == \"6\"\n"
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 5 2\\n5 0 4\\n2 4 0\\n\") == 7\n"
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('0 5 2\\n5 0 4\\n2 4 0') == 7, \"Your implementation is incorrect.\""
    },
    {
        "number": 3512,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 7"
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1099511627776\") == \"8\""
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1099511627776\") == \"8\""
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1099511627776) == 8, \"The output should be 8.\""
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1099511627776\") == \"8\""
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=1099511627776) == 8, \"Test case failed\""
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1099511627776) == 8"
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1099511627776\") == \"8\""
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1099511627776) == \"8\""
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1099511627776) == 8"
    },
    {
        "number": 3513,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1099511627776\") == \"8\"\n"
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\nx..\\n.x.\\nx.x\") == \"2\\n2\"\nassert solution(\"4 4\\nx..\\n...\\nx..\") == \"6\\n6\"\nassert solution(\"5 5\\nx...\\n...\\nx..\\n...\\n...\\nx..\\n...\\n...\\n...\\n...\\nx...\") == \"28\\n28\""
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\nx..\\n.x.\\nx.x\\n\") == \"2\"\nassert solution(\"4 4\\n.x.\\nx..\") == \"1\""
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3, 3) == \"2\\n\", \"Solution should be 2\""
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\nx..\\n.x.\\nx.x\") == \"2\\ndef solution(stdin: str) -> str:\\npass\""
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\nx..\\n.x.\\nx.x\\n\") == \"2\"\nassert solution(\"4 3\\nx..\\nx..\\nx..\\n\") == \"2\"\nassert solution(\"5 5\\nx....\\nx....\\nx....\\nx....\\nx....\\n\") == \"1\""
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\nx..\\n.x.\\nx.x\") == \"2\"\nassert solution(\"5 5\\n...x\\n....x\\n....x\\n....x\\n....x\") == \"10\""
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2\"\nassert solution() == \"4\""
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Error: {input()}!= {output}\""
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '2', 'The correct answer is \"2\".'\n"
    },
    {
        "number": 3514,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 3\\nx..\\n.x.\\nx.x') == '2\\n'\nassert solution('2 2\\nx.x\\nx.x\\nx.x') == '2\\n'\nassert solution('3 2\\nx..\\n.x.\\nx.x') == '1\\n'\nassert solution('2 3\\nx.x\\nx..') == '2\\n'\nassert solution('2 2\\n.x\\nx\\nx') == '0\\n'\nassert solution('2 3\\nx.x\\nx..') == '1\\n'"
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n3 2 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0\") == \"9\\n-1\\n5\\n6\""
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\""
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=input()) == expected\n"
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0\") == \"9\\n-1\\n5\\n6\""
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0\") == \"9\\n-1\\n5\\n6\""
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"3\"\nassert solution(4) == \"6\"\nassert solution(5) == \"9\""
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0\") == \"9\\n-1\\n5\\n6\""
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n3 5 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0\") == \"9\\n-1\\n5\\n6\""
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"\"\"\n"
    },
    {
        "number": 3515,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0') == '9\\n-1\\n5\\n6'"
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 91, \"Test failed\""
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\") == \"91\\n\"\n"
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"91\", \"Your implementation of the solution is incorrect.\""
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '91'\nassert solution(stdin) == '91'\nassert solution(stdin) == '91'\nassert solution(stdin) == '91'\nassert solution(stdin) == '91'"
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20') == '91'"
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '91'"
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n3\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20\n\"\"\") == 91"
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20') == '91'\n"
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20') == 91"
    },
    {
        "number": 3516,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20\") == \"91\""
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''2\n15 20\n0\n1 1''') == 15\n"
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"15\""
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"15\", \"Expected output: 15, but got: {}\".format(solution())"
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 15\n"
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Sample Input\\n2\\n15 20\\n0\\n1 1\\n\") == \"15\\n\"\nassert solution(\"Sample Input\\n2\\n15 20\\n0\\n2 1\\n\") == \"18\\n\"\nassert solution(\"Sample Input\\n2\\n15 20\\n0\\n2 2\\n\") == \"21\\n\"\nassert solution(\"Sample Input\\n2\\n15 20\\n0\\n3 3\\n\") == \"23\\n\"\nassert solution(\"Sample Input\\n2\\n15 20\\n0\\n3 4\\n\") == \"26\\n\""
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n15 20\\n0\\n1 1') == 15\nprint('All test cases passed')"
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('test_case.txt').read()) == '15\\n'\n"
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 15, \"Incorrect output. Expected 15, got {}\".format(solution())"
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('15\\n20\\n0\\n1\\n1\\n') == '15\\n'\n"
    },
    {
        "number": 3517,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\n15 20\\n0\\n1 1\\n') == '15\\n'"
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_str) == expected_output, f\"Expected output: {expected_output}, but got: {solution(input_str)}\""
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Incorrect output: expected '{expected}', got '{solution(input())}'\"\n"
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98') == 'impossible'\nassert solution('5 5\\n1 2 3\\n2 3 1\\n3 4 2') == 'definitely'"
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98\") == \"impossible\""
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin: str) == 'impossible'\n"
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98\") == \"impossible\"\n"
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    5 4\n    3 1 375\n    2 5 283\n    1 4 716\n    3 4 98\n    \"\"\"\n) == \"impossible\"\n\nassert solution(\n    \"\"\"\n    2 3\n    1 2\n    1 3\n    \"\"\"\n) == \"definitely\""
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98\\n\") == \"impossible\"\nassert solution(\"5 4\\n1 2\\n2 3\\n3 4\\n\") == \"deficient\"\n"
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98\") == \"impossible\"\nassert solution(\"5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98\\n\") == \"impossible\"\nassert solution(\"5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98\\n5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98\") == \"impossible\"\n"
    },
    {
        "number": 3518,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98') == 'impossible'\nassert solution('5 2\\n2 3 200\\n2 4 150\\n2 5 200') == 'impossible'\nassert solution('5 2\\n3 2 150\\n2 3 200\\n2 4 150') == 'possible'"
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == \"1.000000000\"\n"
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == \"1.000000000\"\nprint(\"All tests passed successfully!\")"
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1.000000000\""
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == 1.000000000\n"
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == \"1.000000000\""
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == \"1.000000000\""
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == 1.0"
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == 1.000000000\nassert solution(2) == 2.000000000\nassert solution(3) == 1.750000000\nassert solution(4) == 1.500000000\nassert solution(5) == 1.250000000\nassert solution(6) == 1.000000000\n\nimport random\n"
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == \"1.000000000\"\nassert solution(2) == \"1.000000000\"\nassert solution(3) == \"1.000000000\"\nassert solution(4) == \"1.000000000\"\nassert solution(5) == \"1.000000000\""
    },
    {
        "number": 3519,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == 1.0\n"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 115.000000000\nassert solution() == 115.000000000\nassert solution() == 115.000000000\nassert solution() == 115.000000000\nassert solution() == 115.000000000\nassert solution() == 115.000000000"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\") == 115.000000000\nassert solution(\"5 3 1\") == 1.000000000\nassert solution(\"2 1 2\") == 2.000000000\nassert solution(\"1000000 100 1\") == 1000000.000000000\nassert solution(\"1000000 100 100\") == 1000000.000000000\nassert solution(\"1000000 100 1000000\") == 1000000.000000000\nassert solution(\"1000000 100 1000000000\") == 1000000.000000000\nassert solution(\"1000000 100 100000000000\") == 100000000000.000000000\nassert solution(\"10000000 100 10000000000000000000\") == 1000000000000000000000.0000000000000000000000\nassert solution
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"115.000000000\""
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\") == \"115.000000000\\n\""
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('100 3 10\\n15 99 98\\n40 3 2\\n90 10 9') == 115.0"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin: str) == \"115.000000000\\n\"\n"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '115.000000000'\n"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"115.000000000\\n\""
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 115.0, \"Expected 115.0, got {}\".format(solution())"
    },
    {
        "number": 3520,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"100 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n\") == 115.000000000\n"
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n100 1 1\\n100 1 1.5\") == \"199.500000\"\n"
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n100 1 1\\n100 1 1.5\\n\") == \"199.500000\\n\""
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == '199.500000'"
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n100 1 1\\n100 1 1.5\\n\") == \"199.500000\""
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2\\n100 1 1\\n100 1 1.5') == '199.500000'\nprint('All tests passed.')"
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(r\"2\\n100 1 1\\n100 1 1.5\") == \"199.500000\\n\"\nassert solution(r\"5\\n5 1 1 0.5\\n4 2 0.5 2.5\\n5 1 2.5\\n2 3 2.5\") == \"10.666667\\n\"\nassert solution(r\"5\\n1 0.5\\n2 0.5\\n3 1 2\\n4 0.5\\n5 1.5\") == \"13.000000\\n\""
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '199.500000', \"Your solution is incorrect. Please see the sample input and output.\"\n"
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(r'2\\n100 1 1\\n100 1 1.5') == '199.500000\\n'\n"
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected_output, f\"Test case {test_case_number} failed: Expected output '{expected_output}', but got '{solution(stdin)}'.\"\nprint(\"Test case passed!\")"
    },
    {
        "number": 3521,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '199.500000'"
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected_output, f\"Test Case Failed: {expected_output}, got {solution(stdin)}\"\nfor stdin, expected_output in [\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", 1),\n    (\"\\n\", "
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1\""
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\nassert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 "
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n2 3\n1 2 3 4 5 6 7 8 9 10 11 12\n''') == '''1\n'''"
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 1, \"Expected output 1, but got output {}\".format(solution())"
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\\n\""
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n2 3\n1 2 3 4 5 6 7 8 9 10 11 12\n''') == '1\\n'\n\nassert solution('''\n2 3\n1 2 3 4 5 6 7 8 9 10 11 12\n''') == '1\\n'"
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 3\\n1 2 3 4 5 6 7 8 9 10 11 12') == '1'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12') == '1'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13') == '0'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 14') == '1'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 15') == '1'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 16') == '1'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 17') == '1'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 18') == '1'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 19') == '1'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 20') == '1'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 21') == '1'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 22') == '1'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 23') == '1'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 24') == '1'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 25') == '1'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 26') == '1'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 27') == '1'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 28') == '1'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 29') == '1'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 30') == '1'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 31') == '1'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 32') == '1'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 33') == '1'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 34') == '1'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 35') == '1'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 36') == '1'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 37') == '1'\n"
    },
    {
        "number": 3522,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Test failed for {input()}, expected output {output}, got {solution(input())}\""
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"13\\n3 2 1 1\") == \"5\\n\\n\"\nassert solution(\"15\\n3 2 1 1\") == \"Impossible on a single line\\n\\n\"\nassert solution(\"5\\n3 2 1 2\") == \"5\\n\\n\"\nassert solution(\"25\\n3 2 1 2\") == \"5\\n\\n\"\nassert solution(\"30\\n3 2 1 2\") == \"Impossible on a single line\\n\\n\""
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    13\n    3 2 1 1\n    \"\"\"\n) == \"5\\nImpossible\\n\"\n\nassert solution(\n    \"\"\"\n    8\n    3 2 1 2\n    \"\"\"\n) == \"6\\nPossible\\n\"\n\nassert solution(\n    \"\"\"\n    11\n    3 2 1 1\n    \"\"\"\n) == \"Impossible\\n\"\n\nassert solution(\n    \"\"\"\n    100\n    3 2 1 1\n    \"\"\"\n) == \"Impossible\\n\"\n\nassert solution(\n    \"\"\"\n    1000\n    3 2 1 1\n    \"\"\"\n) == \"Possible\\n\"\n\nassert solution(\n    \"\"\"\n    10000\n    3 2 1 1\n    \"\"\"\n) == \"Possible\\n\"\n\nassert solution(\n    \"\"\"\n    99999999\n    3 2 1 1\n    \"\"\"\n) == \"Possible\\n\"\n\nassert solution(\n    \"\"\"\n    999999999\n    3 2 1 1\n    \"\"\"\n) == \"Possible\\n\""
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=None) == \"Impossible\", \"Function should return 'Impossible' on invalid inputs.\""
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"5\\n\"\nassert solution() == \"Impossible\\n\""
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"13\\n3 2 1 1\") == \"5\\n\""
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"13\\n3 2 1 1\") == \"5\\nImpossible\"  # Test Case 1\nassert solution(\"13\\n1 2 1 1\") == \"5\\nImpossible\"  # Test Case 2\nassert solution(\"13\\n3 2 5 1\") == \"10\\nPossible\"  # Test Case 3\nassert solution(\"13\\n3 2 10 1\") == \"20\\nPossible\"  # Test Case 4\nassert solution(\"13\\n3 2 25 1\") == \"50\\nPossible\"  # Test Case 5"
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"13\\n3 2 1 1\") == 5\nassert solution(\"15\\n2 2 2 1\") == 2\nassert solution(\"100000000\\n100000000 100000000\") == 50000000\nassert solution
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"13\\n3 2 1 1\") == \"5\\nImpossible\"\n\nassert solution(\"15\\n2 2 1 1\") == \"10\\nImpossible\"\n\nassert solution(\"100\\n5 5 5 5\") == \"25\\nImpossible\""
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"13\\n3 2 1 1\") == \"5\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3523,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"13\\n3 2 1 1\") == \"5\\n\"\n"
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"aabcad\") == \"yes\", \"The given string is not correct.\"\nassert solution(\"aba\") == \"no\", \"The given string is not correct.\"\nassert solution(\"acd\") == \"no\", \"The given string is not correct.\""
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('aabcad') == 'yes'\nassert solution('aba') == 'yes'\nassert solution('acd') == 'no'"
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('aabcad') == 'yes'\nassert solution('aba') == 'no'\nassert solution('acd') == 'no'"
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('aabcad') == 'yes', 'Expected \"yes\" but got \"{}\"'.format(solution('aabcad'))\nassert solution('aba') == 'no', 'Expected \"no\" but got \"{}\"'.format(solution('aba'))\nassert solution('acd') == 'yes', 'Expected \"yes\" but got \"{}\"'.format(solution('acd'))"
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"aabcad\") == \"yes\"\nassert solution(\"aba\") == \"yes\"\nassert solution(\"acd\") == \"no\""
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('aabcad') == 'yes'\nassert solution('aba') == 'no'\nassert solution('acd') == 'no'"
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"yes\"\n"
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aabcad\") == \"yes\"\nassert solution(\"aba\") == \"no\"\nassert solution(\"acd\") == \"no\""
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aabcad\") == \"yes\"\nassert solution(\"aba\") == \"no\"\nassert solution(\"acd\") == \"no\""
    },
    {
        "number": 3524,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"aabcad\") == \"yes\", \"Invalid output: \" + solution(\"aabcad\")\nassert solution(\"aba\") == \"no\", \"Invalid output: \" + solution(\"aba\")\nassert solution(\"acd\") == \"yes\", \"Invalid output: \" + solution(\"acd\")"
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '5'"
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9') == '5'\n"
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"5\"\n"
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\") == 5, \"Test failed\""
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"5\", \"Expected output: '5', but got: '{}'\".format(solution())"
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"5\\n\"\n"
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, \"Test case failed\"\n"
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"5\\n\"\n"
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\"\n) == \"5\"\n"
    },
    {
        "number": 3525,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '5', \"Test Case 1 Failed\""
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == \"4\", \"Your code is missing an assert statement to check the output.\""
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 2\\n2 4 same\\n3 5 same\") == \"4\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '4\\n'"
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2\\n2 4 same\\n3 5 same\") == \"4\""
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 2\\n2 4 same\\n3 5 same\") == \"4\\n\"\nassert solution(\"5 2\\n2 4 true\\n3 5 same\") == \"3\\n\"\nassert solution(\"5 2\\n2 4 true\\n3 5 true\") == \"4\\n\"\nassert solution(\"5 2\\n2 4 false\\n3 5 same\") == \"3\\n\"\nassert solution(\"5 2\\n2 4 true\\n3 5 false\") == \"4\\n\"\nassert solution(\"5 2\\n2 4 true\\n3 5 true\") == \"3\\n\""
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '4'\n"
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 2\\n2 4 same\\n3 5 same\") == \"4\"\nassert solution(\"5 2\\n2 4 different\\n3 5 same\") == \"3\"\nassert solution(\"5 2\\n2 4 same\\n3 5 different\") == \"3\"\nassert solution(\"5 2\\n2 4 same\\n3 5 same\") == \"4\""
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 2\\n2 4 same\\n3 5 same') == 4\nassert solution('5 2\\n2 3 different\\n3 4 different') == 2\nassert solution('5 3\\n3 4 same\\n2 3 same') == 0\nassert solution('5 3\\n3 4 different\\n2 3 different') == 3\nassert solution('5 3\\n3 4 same\\n2 3 different\\n2 3 different') == 6"
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 2\\n2 4 same\\n3 5 same\") == 4\nprint(solution(\"5 2\\n2 4 same\\n3 5 same\"))"
    },
    {
        "number": 3526,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2\\n2 4 same\\n3 5 same\\n\") == \"4\""
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 4\\n0 1\\n0 2\\n3 4\\n3 5\") == 3, \"Expected: 3\\nActual: \" + solution(\"6 4\\n0 1\\n0 2\\n3 4\\n3 5\")"
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 4\\n0 1\\n0 2\\n3 4\\n3 5\") == \"3\"\nassert solution(\"6 6\\n0 0\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n4 4\\n4 5\") == \"4\""
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 4\\n0 1\\n0 2\\n3 4\\n3 5\") == \"3\"\n"
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 4\\n0 1\\n0 2\\n3 4\\n3 5\") == 3"
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 4\\n0 1\\n0 2\\n3 4\\n3 5\\n\") == \"3\"\n"
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution([6, 4, 0, 1, 0, 2, 3, 4, 3, 5]) == 3"
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 4\\n0 1\\n0 2\\n3 4\\n3 5\") == 3, \"Test failed\""
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"3\\n\"\n"
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"3\"\n"
    },
    {
        "number": 3527,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), \"Test Failed\""
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR') == '9.0\\n6.5\\n2.5\\n'"
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR\") == \"9.0\\n6.5\\n2.5\"\nassert solution(\"2 4\\n3 5\\n1 1\\n4 2\\n5 3\\nUUR\") == \"9.0\\n12.0\"\nassert solution(\"1 5\\n3 3\\n1 1\\n4 2\\n2 4\\nDRR\") == \"6.5\\n8.5\"\nassert solution(\"4 1\\n2 1\\n5 3\\n3 2\\n1 4\\nLLL\") == \"12.0\\n10.0\"\nassert solution(\"5 1\\n3 2\\n1 4\\n2 3\\n4 5\\nURR\") == \"8.5\\n7.0\"\nassert solution(\"1 1\\n1 1\\n1 1\\n1 1\\n1 1\\nURR\") == \"1.0\""
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '9.0\\n6.5\\n2.5'\n"
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR\") == \"9.0\\n6.5\\n2.5\"\n"
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR\") == \"9.0\\n6.5\\n2.5\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR\") == \"9.0\\n6.5\\n2.5\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n5\n1 4\n2 2\n4 1\n3 5\n5 3\nLUR\n''') == '9.0\\n6.5\\n2.5\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR\") == \"9.0\\n6.5\\n2.5\""
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Test case failed: {solution(input())} should be {output}\"\n"
    },
    {
        "number": 3528,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR') == '9.0\\n6.5\\n2.5\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test with sample inputs\\nassert solution(\\n    \\'5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR\\') == \\'9.0\\n6.5\\n2.5\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test with sample inputs\\nassert solution(\\n    \\'5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUD\\') == \\'6.5\\n2.5\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test with sample inputs\\nassert solution(\\n    \\'5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLRU\\') == \\'2.5\\n9.0\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test with sample inputs\\nassert solution(\\n    \\'5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLU\\') == \\'2.5\\n6.5\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test with sample inputs\\nassert solution(\\n    \\'5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLU\\') == \\'2.5\\n6.5\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 1\nassert solution() == 0"
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 3 2\\nB 1 2\\nB 2 3\\nR 3 1\\n') == '1\\ndef solution(stdin: str) -> str:\\n\\tpass\\n'"
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3 2\\nB 1 2\\nB 2 3\\nR 3 1\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1\\n\"\nassert solution() == \"0\\n\""
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3 2\\nB 1 2\\nB 2 3\\nR 3 1\") == \"1\"\nassert solution(\"3 5 2\\nB 1 2\\nB 2 3\\nR 3 1\") == \"0\"\nassert solution(\"3 4 2\\nB 1 2\\nB 2 3\\nR 3 1\") == \"0\""
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3 2\\nB 1 2\\nB 2 3\\nR 3 1\") == 1\nassert solution(\"3 3 2\\nR 1 3\\nR 3 2\\nR 2 3\") == 1\nassert solution(\"3 3 2\\nB 1 2\\nR 2 3\\nB 2 3\") == 1\nassert solution(\"3 3 2\\nB 1 2\\nR 3 1\\nB 2 3\") == 0\nassert solution(\"3 3 2\\nB 1 2\\nB 2 3\\nR 3 1\") == 0\nassert solution(\"3 3 2\\nB 1 2\\nR 2 3\\nB 2 3\") == 0"
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3 2\\nB 1 2\\nB 2 3\\nR 3 1\") == \"1\"\n\nassert solution(\"3 3 2\\nB 1 2\\nB 2 3\\nR 3 4\") == \"0\"\n\nassert solution(\"4 4 4\\nB 1 2\\nB 2 3\\nB 3 4\") == \"0\"\n\nassert solution(\"3 3 1\\nB 1 2\\nR 2 3\") == \"0\""
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3 2\\nB 1 2\\nB 2 3\\nR 3 1\") == 1\nassert solution(\"4 3 4\\nB 1 2\\nB 2 3\\nR 3 1\") == 0"
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 3 2\\nB 1 2\\nB 2 3\\nR 3 1') == '1\\ndef solution(stdin: str) -> str: pass\\n'\nassert solution('3 2 1\\nB 1 3\\nR 2 3') == '0\\ndef solution(stdin: str) -> str: pass\\n'\nassert solution('3 2 3\\nB 1 2\\nB 2 3\\nR 3 1') == '1\\ndef solution(stdin: str) -> str: pass\\n'\nassert solution('3 3 5') == '0\\ndef solution(stdin: str) -> str: pass\\n'"
    },
    {
        "number": 3529,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3 2\\nB 1 2\\nB 2 3\\nR 3 1\") == \"1\"\nassert solution(\"3 4 2\\nB 1 2\\nB 2 3\\nR 3 1\") == \"0\""
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Output\\n88\\n5\\n5\\n7\""
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n5 0 5\\n7 0 7\\n4\\n88\\n5\\n6\\n7\\n\") == \"88\\n5\\n5\\n7\\n\"\n"
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"123\\n456\\n789\\n\") == \"88\\n5\\n5\\n7\\n\"\nassert solution(\"123\\n456\\n789\\n8\") == \"88\\n5\\n5\\n7\\n\"\nassert solution(\"123\\n456\\n789\\n8\") == \"88\\n5\\n5\\n7\\n\"\nassert solution(\"123\\n456\\n789\\n8\") == \"88\\n5\\n5\\n7\\n\"\nassert solution(\"123\\n456\\n789\\n8\") == \"88\\n5\\n5\\n7\\n\"\nassert solution(\"123\\n456\\n789\\n8\") == \"88\\n5\\n5\\n7\\n\"\nassert solution(\"123\\n456\\n789\\n8\") == \"88\\n5\\n5\\n7\\n\"\nassert solution(\"123\\n456\\n789\\n8\") == \"88\\n5\\n5\\n7\\n\""
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"88\\n5\\n5\\n7\\n\"\n"
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n5 0 5\\n7 0 7\\n4\\n88\\n5\\n6\\n7\\n\") == \"88\\n5\\n5\\n7\\n\"\n"
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected_output, f\"Test case failed. Expected output: {expected_output}, but got: {solution(stdin)}\""
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\n5 0 5\\n7 0 7\\n4\\n88\\n5\\n6\\n7\\n') == '88\\n5\\n5\\n7\\n'"
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n5 0 5\\n7 0 7\\n4\\n88\\n5\\n6\\n7\") == \"88\\n5\\n5\\n7\\n\\n\"\nassert solution(\"2\\n5 0 5\\n7 0 7\\n4\\n88\\n5\\n6\\n7\") == \"88\\n5\\n5\\n7\\n\\n\""
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"Output:88\\n5\\n5\\n7\\n\", \"Please modify the function signature to return a string.\""
    },
    {
        "number": 3530,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n5 0 5\\n7 0 7\\n4\\n88\\n5\\n6\\n7\") == \"88\\n5\\n5\\n7\""
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == 5\nassert solution(\"1 2 3\\n4\") == -1\nassert solution(\"2 2 2 2\") == 2\nassert solution(\"5 4\\n1 2 3\\n4\") == 5\nassert solution(\"5 3\\n1 2 3\\n4\") == 5\nassert solution(\"5 2\\n1 2 3\\n4\") == 5\nassert solution(\"5 1\\n1 2 3\\n4\") == 5\nassert solution(\"5 0\\n1 2 3\\n4\") == 5"
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\") == -1, \"Input should not be empty\"\n\nn, m, k, w = map(int, stdin.split())"
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 5, \"Expected: 5, Received: {}\".format(solution())"
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 5, \"Expected 5, but got {}\".format(solution())"
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == 5\nassert solution(\"3 3 1 1\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == -1"
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == \"5\""
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\") == 5"
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\\n\") == 5\nassert solution(\"3 2 1 2\\n2\\n1 2 2\\n1 3 1\\n2 3 3\\n\") == 5\nassert solution(\"1 3 2 2\\n1\\n1 2 2\\n1 3 1\\n2 3 3\\n\") == 5\nassert solution(\"3 3 2 2\\n1\\n1 2 2\\n1 3 1\\n2 3 3\\n\") == -1"
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Solution does not match the expected output for input {input()}\"\n"
    },
    {
        "number": 3531,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 5, \"Incorrect answer.\""
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"mirkovC4nizCC44C4\") == \"mirkovniz\""
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"mirkovC4nizCC44\\nC4\") == \"mirkovniz\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('mirkovC4nizCC44') =='mirkovniz', 'The solution should be \"mirkovniz\".'\nassert solution
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('mirkovC4nizCC44') =='mirkovniz'\nassert solution('abcde') == 'abcde'\nassert solution('abc') == 'abc'\nassert solution('hello world') == 'hello world'\nassert solution('12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678"
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkovniz\""
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkovniz\"\n"
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"mirkovC4nizCC44\\nC4\") == \"mirkovniz\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkovniz\""
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkovniz\""
    },
    {
        "number": 3532,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkovniz\", \"Test failed\"\n\nprint(\"All tests passed\")"
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == '32'"
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3 65\\n45 10\\n60 25\\n\") == \"32\"\n"
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n3 65\\n45 10\\n60 25') == 32\nassert solution('4\\n1 2\\n5 3\\n7 6') == 46\nassert solution('5\\n1 3\\n6 2\\n7 4\\n8 5') == 52\nassert solution('1000001') == 'Error: Invalid input'"
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n3 65\\n45 10\\n60 25') == 32\n"
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3, 3, 65, 45, 10, 60, 25) == 32, \"The least total amount of tolls must be 32\""
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '32'\nprint(\"All tests passed!\")"
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n3 65\\n45 10\\n60 25\") == \"32\"\n"
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 32, \"Your solution is incorrect\""
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n3 65\\n45 10\\n60 25\") == \"32\""
    },
    {
        "number": 3533,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n3 65\\n45 10\\n60 25') == '32'\nprint(solution('3'))"
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '3\\n2'\n"
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 2 0 3 1\") == \"3\\n2\"\nassert solution(\"5\\n1 2 0 1 2 3 4 5\") == \"2\"\nassert solution(\"5\\n1 2 0 3 1\") == \"3\\n2\"\nassert solution(\"5\\n1 2 0 1 2 3 4 5\") == \"2\"\nassert solution(\"5\\n1 2 0 3 1\") == \"3\\n2\"\nassert solution(\"5\\n1 2 0 1 2 3 4 5\") == \"2\""
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\n1 2 0 3 1') == '3\\n2\\n'\n\nprint('All tests passed!')"
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 2 0 3 1\\n\") == \"3\\n2\\n\"\nassert solution(\"6\\n1 1 0 2 0\\n\") == \"2\\n2\\n\"\nassert solution(\"7\\n1 2 0 3 0\\n\") == \"4\\n1\\n\"\nassert solution(\"8\\n1 1 0 3 0\\n\") == \"4\\n1\\n\"\nassert solution(\"9\\n1 2 0 2 0\\n\") == \"3\\n2\\n\"\nassert solution(\"10\\n1 1 0 2 0\\n\") == \"3\\n2\\n\"\nassert solution(\"11\\n1 2 0 2 0\\n\") == \"2\\n2\\n\"\nassert solution(\"12\\n1 1 0 2 0\\n\") == \"2\\n2\\n\"\nassert solution(\"13\\n1 2 0 2 0\\n\") == \"2\\n2\\n\"\nassert solution(\"14\\n1 1 0 2 0\\n\") == \"2\\n2\\n\"\nassert solution(\"15\\n1 2 0 2 0\\n\") == \"1\\n1\\n\"\nassert solution(\"16\\n1 1 0 2 0\\n\") == \"1\\n1\\n\"\nassert solution(\"17\\n1 2 0 2 0\\n\") == \"0\\n0\\n\"\nassert solution(\"18\\n1 1 0 2 0\\n\") == \"0\\n0\\n\"\nassert solution(\"19\\n1 2 0 2 0\\n\") == \"0\\n0\\n\"\nassert solution(\"20\\n1 1 0 2 0\\n\") == \"0\\n0\\n\"\nassert solution(\"21\\n1 2 0 2 0\\n\") == \"0\\n0\\n\"\nassert solution(\"22\\n1 1 0 2 0\\n\") == \"0\\n0\\n\"\nassert solution(\"23\\n1 2 0 2 0\\n\") == \"0\\n0\\n\"\nassert solution(\"24\\n1 1 0 2 0\\n\") == \"0\\n0\\n\"\nassert solution(\"25\\n1 2 0 2 0\\n\") == \"0\\n0\\n\"\nassert solution(\"26\\n1 1 0 2 0\\n\") == \"0\\n0\\n\"\nassert solution(\"27\\n1 2 0 2 0\\n\") == \"0\\n0\\n\"\nassert solution(\"28\\n1 1 0 2 0\\n\") == \"0\\n0\\n\"\nassert solution(\"29\\n1 2 0 2 0\\n\") == \"0\\n0\\n\"\nassert solution(\"30\\n1 1 0 2 0\\n\") == \"0\\n0\\n\"\nassert solution(\"31\\n1 2 0 2 0\\n\") == \"0\\n0\\n\"\nassert solution(\"32\\n1 1 0 2 0\\n\") == \"0\\n0\\n\"\nassert solution(\"33\\n1 2 0 2 0\\n\") == \"0\\n0\\n\"\nassert solution(\"34\\n1 1 0 2 0\\n\") == \"0\\n0\\n\"\nassert solution(\"35\\n1 2 0 2 0\\n\") == \"0\\n0\\n\"\nassert solution(\"36\\n1 1 0 2 0\\n\") == \"0\\n0\\n\"\nassert solution(\"37\\n1 2 0 2 0\\n\") == \"0\\n0\\n\"\nassert solution(\"38\\n1 1 0 2 0\\n\") == \"0\\n0\\n\"\nassert solution(\"39\\n1 2 0 2 0\\n\") == \"0\\n0\\n\"\nassert solution(\"40\\n1 1 0 2 0"
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 2 0 3 1\") == \"3\\n2\"\nassert solution(\"10\\n1 1 1 1 1\") == \"6\"\n"
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 2 0 3 1\") == \"3\\n2\\n\"\nassert solution(\"5\\n1 1 0 3 1\") == \"3\\n1\\n\"\nassert solution(\"5\\n1 2 0 3 2\") == \"3\\n1\\n\"\nassert solution(\"5\\n1 3 0 3 1\") == \"3\\n2\\n\"\nassert solution(\"5\\n1 4 0 3 1\") == \"3\\n1\\n\"\nassert solution(\"5\\n1 5 0 3 1\") == \"3\\n1\\n\"\nassert solution(\"5\\n1 6 0 3 1\") == \"3\\n2\\n\"\nassert solution(\"5\\n1 7 0 3 1\") == \"3\\n1\\n\"\nassert solution(\"5\\n1 8 0 3 1\") == \"3\\n1\\n\"\nassert solution(\"5\\n1 9 0 3 1\") == \"3\\n1\\n\"\nassert solution(\"5\\n1 10 0 3 1\") == \"3\\n1\\n\"\nassert solution(\"5\\n1 11 0 3 1\") == \"3\\n1\\n\"\nassert solution(\"5\\n1 12 0 3 1\") == \"3\\n1\\n\"\nassert solution(\"5\\n1 13 0 3 1\") == \"3\\n2\\n\"\nassert solution(\"5\\n1 14 0 3 1\") == \"3\\n1\\n\"\nassert solution(\"5\\n1 15 0 3 1\") == \"3\\n1\\n\"\nassert solution(\"5\\n1 16 0 3 1\") == \"3\\n1\\n\"\nassert solution(\"5\\n1 17 0 3 1\") == \"3\\n1\\n\"\nassert solution(\"5\\n1 18 0 3 1\") == \"3\\n1\\n\"\nassert solution(\"5\\n1 19 0 3 1\") == \"3\\n1\\n\"\nassert solution(\"5\\n1 20 0 3 1\") == \"3\\n1\\n\"\nassert solution(\"5\\n1 21 0 3 1\") == \"3\\n1\\n\"\nassert solution(\"5\\n1 22 0 3 1\") == \"3\\n1\\n\"\nassert solution(\"5\\n1 23 0 3 1\") == \"3\\n2\\n\"\nassert solution(\"5\\n1 24 0 3 1\") == \"3\\n1\\n\"\nassert solution(\"5\\n1 25 0 3 1\") == \"3\\n1\\n\"\nassert solution(\"5\\n1 26 0 3 1\") == \"3\\n1\\n\"\nassert solution(\"5\\n1 27 0 3 1\") == \"3\\n1\\n\"\nassert solution(\"5\\n1 28 0 3 1\") == \"3\\n1\\n\"\nassert solution(\"5\\n1 29 0 3 1\") == \"3\\n1\\n\"\nassert solution(\"5\\n1 30 0 3 1\") == \"3\\n1\\n\"\nassert solution(\"5\\n1 31 0 3 1\") == \"3\\n1\\n\"\nassert solution(\"5\\n1 32 0 3 1\") == \"3\\n1\\n\"\nassert solution(\"5\\n1 33 0 3 1\") == \"3\\n1\\n\"\nassert solution(\"5\\n1 34 0 3 1\") == \"3\\n1\\n\"\nassert solution(\"5\\n1 35 0 3 1\") == \"3\\n1\\n\"\nassert solution(\"5\\n1 36 0 3 1\") == \"3\\n1\\n\"\nassert solution(\"5\\n1 37 0 3 1\") == \"3\\n1\\n\"\nassert solution(\"5\\n1 38"
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 2 0 3 1\") == \"3\\n2\"\nassert solution(\"5\\n1 2 1 3 2\") == \"3\\n1\"\nassert solution(\"5\\n1 2 1 3 1\") == \"2\\n2\"\nassert solution(\"5\\n1 2 1 3 0\") == \"1\\n2\"\nassert solution(\"5\\n1 2 0 3 0\") == \"1\\n1\""
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n1 2 0 3 1\\n') == '3\\n2\\n'\n"
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 2 0 3 1\") == \"3\\n2\""
    },
    {
        "number": 3534,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt')) == '''\n3\n2\n'''"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\\n\""
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2\", \"Test Failed\"\n"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4\") == \"2\"\nassert solution(\"2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4\") == \"1\"\nassert solution(\"2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4\") == \"2\"\nassert solution(\"2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4\") == \"2\""
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2\\n\"\n"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 2"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"2\""
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4\") == 2\n"
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4\\n\") == \"2\""
    },
    {
        "number": 3535,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4') == '2'"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 500000004"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('problem_1.txt', 'r')) == '500000004'\nprint('All tests passed')"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n    2\n    1000000000 0\n    1000000000 1\n    1000000000 2\n    1000000000 3\n    1000000000 4\n    1000000000 5\n    ''') == 500000004"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"500000004\"\n"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Test failed: expected '{output}', got '{solution(input())}'\"\n"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1000000000 0\\n1000000000 1\") == 500000004"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 500000004"
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1000000000 0\\n1000000000 1\\n\") == \"500000004\""
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1000000000 0\\n1000000000 1\\n\") == \"500000004\\n\"\nassert solution(\"2\\n1000000000 0\\n1000000000 1\\n2000000000 0\\n2000000000 1\\n\") == \"1000000000\\n\"\nassert solution(\"2\\n1000000000 0\\n1000000000 1\\n2000000000 0\\n2000000000 1\\n3000000000 0\\n3000000000 1\\n\") == \"3000000000\\n\"\nassert solution(\"2\\n1000000000 0\\n1000000000 1\\n2000000000 0\\n2000000000 1\\n3000000000 0\\n3000000000 1\\n4000000000 0\\n4000000000 1\\n\") == \"1000000000\\n\"\nassert solution(\"2\\n1000000000 0\\n1000000000 1\\n2000000000 0\\n2000000000 1\\n3000000000 0\\n3000000000 1\\n4000000000 0\\n4000000000 1\\n5000000000 0\\n5000000000 1\\n\") == \"2000000000\\n\""
    },
    {
        "number": 3536,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt', 'r')) == \"500000004\""
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24\") == \"12\\n\"\nassert solution(\"5 12\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24\") == \"12\\n\"\nassert solution(\"5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24\") == \"12\\n\""
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24\\n\") == \"12\""
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"12\\n\"\n"
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_str) == expected_output, f\"The given solution is incorrect. Expected {expected_output}, but got {solution(input_str)}.\""
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r')) == '12'\n"
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"\"\"\n12\n\"\"\"\n"
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"12\\n\""
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == expected_output, f\"Solution failed: expected {expected_output}, got {solution}\""
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24') == '12', 'Sample Output is incorrect.'"
    },
    {
        "number": 3537,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"12\\n\"\n"
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 19\\n15 5 3\\n12 4 4\\n20 10 5\\n\") == \"3\\n\"\nassert solution(\"3 19\\n15 5 3\\n12 4 4\\n20 10 10\\n\") == \"6\\n\"\nassert solution(\"3 19\\n15 5 3\\n12 4 4\\n20 10 0\\n\") == \"1\\n\"\nassert solution(\"3 19\\n15 5 3\\n12 4 4\\n20 10 100\\n\") == \"100\\n\"\n"
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 19\\n15 5 3\\n12 4 4\\n20 10 5') == '3\\n'\nassert solution('2 10\\n5 10\\n7 10') == '2\\n'\nassert solution('1 10\\n1 10\\n1 10') == '1\\n'\nassert solution('1 10\\n1 20\\n1 10') == '2\\n'"
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 19\\n15 5 3\\n12 4 4\\n20 10 5\") == 3, \"Test failed\""
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '3', \"Incorrect output.\""
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 19\\n15 5 3\\n12 4 4\\n20 10 5\\n\") == \"3\"\nassert solution(\"5 10 10\\n20 5 15\\n25 10 20\\n30 15 25\\n40 20 30\\n\") == \"5\"\nassert solution(\"10 20 20\\n15 10 25\\n20 15 30\\n25 20 35\\n30 25 40\\n\") == \"5\"\nassert solution(\"15 20 20\\n20 15 25\\n25 20 30\\n30 25 35\\n35 30 40\\n\") == \"6\"\nassert solution(\"20 20 20\\n25 20 25\\n30 25 30\\n35 30 35\\n40 35 40\\n\") == \"6\"\nassert solution(\"25 20 20\\n30 25 25\\n35 30 30\\n40 35 35\\n45 40 40\\n\") == \"7\"\nassert solution(\"30 25 20\\n35 30 25\\n40 35 30\\n45 40 35\\n50 45 40\\n\") == \"7\"\nassert solution(\"35 30 25\\n40 35 30\\n45 40 35\\n50 45 40\\n55 50 45\\n60 55 50\\n\") == \"8\"\nassert solution(\"40 35 30\\n45 40 35\\n50 45 40\\n55 50 45\\n60 55 50\\n65 60 55\\n70 65 60\\n\") == \"8\"\nassert solution(\"45 40 35\\n50 45 40\\n55 50 45\\n60 55 50\\n65 60 55\\n70 65 60\\n75 70 65\\n80 75 70\\n\") == \"9\"\nassert solution(\"50 45 40\\n55 50 45\\n60 55 50\\n65 60 55\\n70 65 60\\n75 70 65\\n80 75 70\\n85 80 75\\n90 85 80\\n\") == \"9\"\n"
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 19\\n15 5 3\\n12 4 4\\n20 10 5') == '3\\n'\nassert solution('1 2 3') == '1\\n'\nassert solution('1 2') == '1\\n'"
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 19\\n15 5 3\\n12 4 4\\n20 10 5\") == \"3\""
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 19\\n15 5 3\\n12 4 4\\n20 10 5') == '3\\n'\n"
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"3\", \"The solution is incorrect.\""
    },
    {
        "number": 3538,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"3\\n\", \"The output should be 3\"\n"
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\""
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1\\n\", \"Incorrect output\"\n\nfrom typing import List\nfrom collections import defaultdict"
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin: str) == '1', \"Test case 1 failed\""
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1\""
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution.__doc__ == \"\"\"\nSocket has challenged Bash to a Bipartite Battle. In the Bipartite Battle, Bash and Socket play a game with Bipartite Graphs.\n\nThe Bipartite Battle happens as follows:\n - Socket draws $N$ bipartite graphs. The $i$-th graph has $2$ sets of vertices, one with $a_ i$ vertices, and the other with $b_ i$ vertices.\n - Then the $2$ players, Bash and Socket alternatively take turns. In each turn, a player must choose exactly one non-empty graph, then delete exactly one edge or exactly one vertex of the chosen graph. If the player deletes one vertex, all edges adjacent to it are also deleted.\n - The player who cannot move loses. Note that this can only happen when all edges and all vertices of all graphs have been deleted.\n - Bash plays first.\n\nOf course, Socket does not want to play fair. Socket plans to draw bipartite graphs such that he always wins.\n\nHow many ways can Socket draw $N$ bipartite graphs, so that he always wins, assuming both players play optimally?\n\n\"\"\""
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n1 1\") == \"1\\n1\\n\"\n\nfrom itertools import combinations"
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 1\n"
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1\\n\" + \"1\" + \"\\n\"\nassert solution(stdin) == \"2\\n\" + \"1\\n1\" + \"\\n\"\nassert solution(stdin) == \"3\\n\" + \"2\\n2\\n\"\nassert solution(stdin) == \"4\\n\" + \"2\\n2\\n3\\n\"\nassert solution(stdin) == \"5\\n\" + \"2\\n2\\n3\\n3\\n\"\nassert solution(stdin) == \"6\\n\" + \"2\\n2\\n3\\n3\\n3\\n4\\n\"\nassert solution(stdin) == \"7\\n\" + \"2\\n2\\n3\\n3\\n3\\n3\\n4\\n5\\n\"\nassert solution(stdin) == \"8\\n\" + \"2\\n2\\n3\\n3\\n3\\n3\\n4\\n5\\n6\\n\"\nassert solution(stdin) == \"9\\n\" + \"2\\n2\\n3\\n3\\n3\\n3\\n4\\n5\\n6\\n6\\n\"\nassert solution(stdin) == \"10\\n\" + \"2\\n2\\n3\\n3\\n3\\n3\\n4\\n5\\n6\\n6\\n7\\n\"\nassert solution(stdin) == \"11\\n\" + \"2\\n2\\n3\\n3\\n3\\n3\\n4\\n5\\n6\\n6\\n7\\n7\\n\"\nassert solution(stdin) == \"12\\n\" + \"2\\n2\\n3\\n3\\n3\\n3\\n4\\n5\\n6\\n6\\n7\\n7\\n7\\n\"\nassert solution(stdin) == \"13\\n\" + \"2\\n2\\n3\\n3\\n3\\n3\\n4\\n5\\n6\\n6\\n7\\n7\\n7\\n8\\n\"\nassert solution(stdin) == \"14\\n\" + \"2\\n2\\n3\\n3\\n3\\n3\\n4\\n5\\n6\\n6\\n7\\n7\\n7\\n8\\n8\\n\"\nassert solution(stdin) == \"15\\n\" + \"2\\n2\\n3\\n3\\n3\\n3\\n4\\n5\\n6\\n6\\n7\\n7\\n7\\n8\\n8\\n8\\n\"\nassert solution(stdin) == \"16\\n\" + \"2\\n2\\n3\\n3\\n3\\n3\\n4\\n5\\n6\\n6\\n7\\n7\\n7\\n8\\n8\\n8\\n8\\n\"\nassert solution(stdin) == \"17\\n\" + \"2\\n2\\n3\\n3\\n3\\n3\\n4\\n5\\n6\\n6\\n7\\n7\\n7\\n8\\n8\\n8\\n8\\n8\\n\"\nassert solution(stdin) == \"18\\n\" + \"2\\n2\\n3\\n3\\n3\\n3\\n4\\n5\\n6\\n6\\n7\\n7\\n7\\n8\\n8\\n8\\n8\\n8\\n8\\n\"\nassert solution(stdin) == \"19\\n\" + \"2\\n2\\n3\\n3\\n3\\n3\\n4\\n5\\n6\\n6\\n7\\n7\\n7\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n\"\nassert solution(stdin) == \"20\\n\" + \"2\\n2\\n3\\n3\\n3\\n3\\n4\\n5\\n6\\n6\\n7\\n7\\n7\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n\"\nassert solution(stdin) == \"21\\n\" + \"2\\n2\\n3\\n3\\n3\\n3\\n4\\n5\\n6\\n6\\n7\\n7"
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1\\n1 1') == '1\\n1'\nassert solution('2\\n2 2') == '2\\n2'\nassert solution('3\\n3 3') == '3\\n3'\nassert solution('4\\n4 4') == '4\\n4'\nassert solution('5\\n5 5') == '5\\n5'\n"
    },
    {
        "number": 3539,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    1\n    1 1\n    \"\"\"\n) == \"1\"\n\nassert solution(\n    \"\"\"\n    2\n    1 1\n    2 1\n    \"\"\"\n) == \"4\"\n\nassert solution(\n    \"\"\"\n    3\n    2 1\n    3 1\n    4 1\n    \"\"\"\n) == \"24\"\n\nassert solution(\n    \"\"\"\n    4\n    2 1\n    3 1\n    4 1\n    5 1\n    \"\"\"\n) == \"1080\""
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"RGGR\\nGBGB\\nBYBY\\nYRYR\") == \"3\"\n"
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"RGGR\\nGBGB\\nBYBY\\nYRYR\") == \"3\\n3\"\nassert solution(\"RRGG\") == \"1\\n1\"\nassert solution(\"GGGB\") == \"2\\n2\"\nassert solution(\"GGBB\") == \"3\\n3\"\nassert solution(\"GBGR\") == \"1\\n1\""
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"RGGR\\nGBGB\\nBYBY\\nYRYR\") == \"3\""
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"RGGR\") == \"3\"\nassert solution(\"GBGB\") == \"3\"\nassert solution(\"BYBY\") == \"3\"\nassert solution(\"YRYR\") == \"3\""
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"RGGR\\nGBGB\\nBYBY\\nYRYR\") == \"3\"\n"
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"RGGR\\nGBGB\\nBYBY\\nYRYR\") == \"3\\n\"\n"
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"RGGR\") == \"3\\n\"\nassert solution(\"GBGB\") == \"3\\n\"\nassert solution(\"BYBY\") == \"3\\n\"\nassert solution(\"YRYR\") == \"3\\n\""
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"RGGR\") == \"3\"\nassert solution(\"GBGB\") == \"3\"\nassert solution(\"BYBY\") == \"3\"\nassert solution(\"YRYR\") == \"3\""
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('RGGR\\nGBGB\\nBYBY\\nYRYR') == '3'"
    },
    {
        "number": 3540,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"RGGR\\nGBGB\\nBYBY\\nYRYR\") == \"3\""
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n-2 -1 0 1 2\\n2 1 0 -1 -2\") == \"AAAAA\\n\"\nassert solution(\"5\\n-2 -1 0 1 2\\n2 1 0 -1 -2\\n-1 0 1 2 -2\") == \"DEFG\\n\"\nassert solution(\"5\\n-2 -1 0 1 2\\n2 1 0 -1 -2\\n-1 0 1 2 -2\\n-1 -2 -2 2 1\") == \"GHIJ\\n\"\nassert solution(\"5\\n-2 -1 0 1 2\\n2 1 0 -1 -2\\n-1 0 1 2 -2\\n-1 -2 -2 2 1\\n0 1 2 3 4\") == \"KLMN\\n\"\nassert solution(\"5\\n-2 -1 0 1 2\\n2 1 0 -1 -2\\n-1 0 1 2 -2\\n-1 -2 -2 2 1\\n0 1 2 3 4\\n-1 0 1 2 -2\\n-1 0 1 2 -2\\n-1 0 1 2 -2\") == \"abcdefghij\\n\""
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n-2 -1 0 1 2\\n2 1 0 -1 -2\") == \"AAAAA\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"AAAAA\"\nassert solution(\"5\\n-2 -1 0 1 2\\n2 1 0 -1 -2\") == \"AAAAA\""
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"inputs/test_case_1.txt\", \"r\").read()) == \"ABAB\"\nassert solution(open(\"inputs/test_case_2.txt\", \"r\").read()) == \"ABBB\"\nassert solution(open(\"inputs/test_case_3.txt\", \"r\").read()) == \"ABABAB\"\nassert solution(open(\"inputs/test_case_4.txt\", \"r\").read()) == \"ABBBAB\"\nassert solution(open(\"inputs/test_case_5.txt\", \"r\").read()) == \"ABABABAB\""
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n-2 -1 0 1 2\\n2 1 0 -1 -2') == 'AAAAA\\n'"
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(5) == 'AAAAA'"
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n-2 -1 0 1 2\\n2 1 0 -1 -2\") == \"AAAAA\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    5\n    -2 -1 0 1 2\n    \"\"\"\n) == \"AAAAA\"\n\nassert solution(\n    \"\"\"\n    5\n    -2 -1 0 1 2\n    2 1 0 -1 -2\n    \"\"\"\n) == \"AAAAA\""
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"AAAAA\""
    },
    {
        "number": 3541,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"AAAAA\"\n"
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"6 3\\n2 3\\n4 0\\n0 2\\n6 1\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('6 3\\n2 3\\n4 0\\n0 2\\n6 1') == 'IMPOSSIBLE'"
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 3\\n2 3\\n4 0\\n0 2\\n6 1\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r')) == \"IMPOSSIBLE\""
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 3\\n2 3\\n4 0\\n0 2\\n6 1\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 3\\n2 3\\n4 0\\n0 2\\n6 1\") == \"IMPOSSIBLE\" # Wrong code"
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(6, 3) == \"IMPOSSIBLE\""
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(6, 3) == \"IMPOSSIBLE\""
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 3\\n2 3\\n4 0\\n0 2\\n6 1\\n\") == \"IMPOSSIBLE\" # Your code here"
    },
    {
        "number": 3542,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 3\\n2 3\\n4 0\\n0 2\\n6 1\\n\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"sample_input.txt\", \"r\")) == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\npass\\n\""
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == expected_output, \"Test case failed\""
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(solution) == \"2\"\nassert solution(solution(solution(solution)))) == \"11\"\nassert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution("
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"austria\") == \"12\\n\", \"Expected 12\\n, but got {}\".format(solution(\"austria\"))\nassert solution(\"autocorrect\") == \"12\\n\", \"Expected 12\\n, but got {}\".format(solution(\"autocorrect\"))\nassert solution(\"program\") == \"4\\n\", \"Expected 4\\n, but got {}\".format(solution(\"program\"))\nassert solution(\"programming\") == \"11\\n\", \"Expected 11\\n, but got {}\".format(solution(\"programming\"))\nassert solution(\"computer\") == \"3\\n\", \"Expected 3\\n, but got {}\".format(solution(\"computer\"))\nassert solution(\"autocorrelation\") == \"2\\n\", \"Expected 2\\n, but got {}\".format(solution(\"autocorrelation\"))\nassert solution(\"programming\") == \"2\\n\", \"Expected 2\\n, but got {}\".format(solution(\"programming\"))\nassert solution(\"competition\") == \"1\\n\", \"Expected 1\\n, but got {}\".format(solution(\"competition\"))\nassert solution(\"zyx\") == \"0\\n\", \"Expected 0\\n, but got {}\".format(solution(\"zyx\"))"
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"austria\") == \"12\", \"Incorrect output\"\nassert solution(\"autocorrect\") == \"12\", \"Incorrect output\"\nassert solution(\"program\") == \"4\", \"Incorrect output\"\nassert solution(\"computer\") == \"3\", \"Incorrect output\"\nassert solution(\"autocorrelation\") == \"12\", \"Incorrect output\"\nassert solution(\"programming\") == \"11\", \"Incorrect output\"\nassert solution(\"competition\") == \"3\", \"Incorrect output\"\nassert solution(\"zyx\") == \"2\", \"Incorrect output\""
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 5\\naustria\\autocorrect\\program\\programming\\computer\\autocorrelation\\programming\\competition\\zyx\\austria\") == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"austria\") == \"12\", \"Incorrect output\"\nassert solution(\"autocorrect\") == \"12\", \"Incorrect output\"\nassert solution(\"program\") == \"4\", \"Incorrect output\"\nassert solution(\"programming\") == \"11\", \"Incorrect output\"\nassert solution(\"computer\") == \"3\", \"Incorrect output\"\nassert solution(\"autocorrelation\") == \"12\", \"Incorrect output\"\nassert solution(\"program\") == \"4\", \"Incorrect output\"\nassert solution(\"competition\") == \"2\", \"Incorrect output\"\nassert solution(\"zyx\") == \"3\", \"Incorrect output\"\nprint(\"All tests pass!\")"
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\", \"Test case 1 failed\"\n\nassert solution(input()) == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\", \"Test case 2 failed\"\n\nassert solution(input()) == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\", \"Test case 3 failed\"\n\nassert solution(input()) == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\", \"Test case 4 failed\"\n\nassert solution(input()) == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\", \"Test case 5 failed\""
    },
    {
        "number": 3543,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 5\\naustria\\autocorrect\\program\\programming\\computer\\autocorrelation\\programming\\competition\\zyx\\austria\") == \"12\\n4\\n11\\n3\\n2\\ndef solution(stdin: str) -> str: pass\""
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n0 1 1\") == 3, \"Test case 1 is invalid\"\nassert solution(\"4\\n1 1 2 2\") == 4, \"Test case 2 is invalid\"\nassert solution(\"5\\n0 1 1 2 2\") == 5, \"Test case 3 is invalid\"\nassert solution(\"6\\n1 1 2 3 2\") == 6, \"Test case 4 is invalid\"\nassert solution(\"7\\n0 1 1 2 3 2\") == 7, \"Test case 5 is invalid\"\nassert solution(\"8\\n1 1 2 3 4 2\") == 8, \"Test case 6 is invalid\"\nassert solution(\"9\\n0 1 1 2 3 4 2\") == 9, \"Test case 7 is invalid\"\nassert solution(\"10\\n1 1 2 3 4 5 2\") == 10, \"Test case 8 is invalid\"\nassert solution(\"11\\n0 1 1 2 3 4 5 2\") == 11, \"Test case 9 is invalid\"\nassert solution(\"12\\n1 1 2 3 4 5 6 2\") == 12, \"Test case 10 is invalid\"\nassert solution(\"13\\n0 1 1 2 3 4 5 6 2\") == 13, \"Test case 11 is invalid\"\nassert solution(\"14\\n1 1 2 3 4 5 6 7 2\") == 14, \"Test case 12 is invalid\"\nassert solution(\"15\\n0 1 1 2 3 4 5 6 7 2\") == 15, \"Test case 13 is invalid\"\nassert solution(\"16\\n1 1 2 3 4 5 6 7 8 2\") == 16, \"Test case 14 is invalid\"\nassert solution(\"17\\n0 1 1 2 3 4 5 6 7 8 2\") == 17, \"Test case 15 is invalid\"\nassert solution(\"18\\n1 1 2 3 4 5 6 7 8 9 2\") == 18, \"Test case 16 is invalid\"\nassert solution(\"19\\n0 1 1 2 3 4 5 6 7 8 9 2\") == 19, \"Test case 17 is invalid\"\nassert solution(\"20\\n1 1 2 3 4 5 6 7 8 9 10 2\") == 20, \"Test case 18 is invalid\"\nassert solution(\"21\\n0 1 1 2 3 4 5 6 7 8 9 10 2\") == 21, \"Test case 19 is invalid\"\nassert solution(\"22\\n1 1 2 3 4 5 6 7 8 9 10 11 2\") == 22, \"Test case 20 is invalid\"\nassert solution(\"23\\n0 1 1 2 3 4 5 6 7 8 9 10 11 2\") == 23, \"Test case 21 is invalid\"\nassert solution(\"24\\n1 1 2 3 4 5 6 7 8 9 10 11 12 2\") == 24, \"Test case 22 is invalid\"\nassert solution(\"25\\n0 1 1 2 3 4 5 6 7 8 9 10 11 12 2\") == 25, \"Test case 23 is invalid\"\nassert solution(\"26\\n1 1 2 3 4 5 6 7 8 9 10 11 12 13 2\") == 26, \"Test case 24 is invalid\"\nassert solution(\"27\\n0 1 1 2 3 4 5 6 7 8 9 10 11 12 13 2\") == 27, \"Test case"
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n0 1 1\") == 3\nassert solution(\"4\\n0 1 1 2\") == 3\nassert solution(\"5\\n0 1 1 2 3\") == 3\nassert solution(\"10\\n0 1 1 2 3 4 5 6 7 8 9 10\") == 3\nassert solution(\"5\\n0 0 0 0 0\") == 12\nassert solution(\"10\\n0 0 0 0 0 0 0 0 0 0 0 0\") == 12\nassert solution(\"5\\n0 1 1 2 3 4 5 6 7 8 9 10 11\") == 12\nassert solution(\"10\\n0 1 1 2 3 4 5 6 7 8 9 10 11 12\") == 12\nassert solution(\"15\\n0 1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\") == 12\nassert solution(\"16\\n0 1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\") == 12\nassert solution(\"17\\n0 1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\") == 12\nassert solution(\"18\\n0 1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18\") == 12\nassert solution(\"19\\n0 1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\") == 12\nassert solution(\"20\\n0 1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\") == 12\nassert solution(\"21\\n0 1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21\") == 12\nassert solution(\"22\\n0 1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22\") == 12\nassert solution(\"23\\n0 1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23\") == 12\nassert solution(\"24\\n0 1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24\") == 12\nassert solution(\"25\\n0 1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\") == 12\nassert solution(\"26\\n0 1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 2"
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n0 1 1') == '3'\nassert solution('3\\n0 2 2') == 'impossible'"
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"3\\n3\""
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    '''\n    3\n    0 1 1\n    '''\n) == '3\\n'"
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '3\\n3\\n12\\n'"
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n0 1 1') == 3, \"Sample Output: 3\""
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n0 1 1') == 3"
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3, 0, 1) == 3\nassert solution(3, 1, 1) == 3\nassert solution(3, 2, 1) == 3\nassert solution(3, 3, 1) == 3\nassert solution(3, 4, 1) == 3\nassert solution(3, 5, 1) == 3\nassert solution(3, 6, 1) == 3\nassert solution(3, 7, 1) == 3\nassert solution(3, 8, 1) == 3\nassert solution(3, 9, 1) == 3\nassert solution(3, 10, 1) == 3\nassert solution(3, 11, 1) == 3\nassert solution(3, 12, 1) == 3\nassert solution(3, 13, 1) == 3\nassert solution(3, 14, 1) == 3\nassert solution(3, 15, 1) == 3\nassert solution(3, 16, 1) == 3\nassert solution(3, 17, 1) == 3\nassert solution(3, 18, 1) == 3\nassert solution(3, 19, 1) == 3\nassert solution(3, 20, 1) == 3\nassert solution(3, 21, 1) == 3\nassert solution(3, 22, 1) == 3\nassert solution(3, 23, 1) == 3\nassert solution(3, 24, 1) == 3\nassert solution(3, 25, 1) == 3\nassert solution(3, 26, 1) == 3\nassert solution(3, 27, 1) == 3\nassert solution(3, 28, 1) == 3\nassert solution(3, 29, 1) == 3\nassert solution(3, 30, 1) == 3\nassert solution(3, 31, 1) == 3\nassert solution(3, 32, 1) == 3\nassert solution(3, 33, 1) == 3\nassert solution(3, 34, 1) == 3\nassert solution(3, 35, 1) == 3\nassert solution(3, 36, 1) == 3\nassert solution(3, 37, 1) == 3\nassert solution(3, 38, 1) == 3\nassert solution(3, 39, 1) == 3\nassert solution(3, 40, 1) == 3\nassert solution(3, 41, 1) == 3\nassert solution(3, 42, 1) == 3\nassert solution(3, 43, 1) == 3\nassert solution(3, 44, 1) == 3\nassert solution(3, 45, 1) == 3\nassert solution(3, 46, 1) == 3\nassert solution(3, 47, 1) == 3\nassert solution(3, 48, 1) == 3\nassert solution(3, 49, 1) == 3\nassert solution(3, 50, 1) == 3\nassert solution(3, 51, 1) == 3\nassert solution(3, 52, 1) == 3\nassert solution(3, 53, 1) == 3\nassert solution(3, 54, 1) == 3\nassert solution(3, 55, 1) == 3\nassert solution(3, 56, 1) == 3\nassert solution(3, 57, 1) == 3\nassert solution(3, 58, 1) == 3\nassert solution(3, 59, 1) == 3\nassert solution(3, 60, 1) == 3\nassert solution(3, 61, 1) == 3\nassert solution(3, 62, 1) == 3\nassert solution(3, 63, 1) == 3\nassert solution(3, 64, 1)"
    },
    {
        "number": 3544,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"3\\n3\\n\", \"Test failed\""
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"Pre Post In Post In Pre\"\nassert solution(\"BIGEDCJFAH\") == \"HFBJCDEGIA\"\nassert solution(\"BIGEDCJFAH\") == \"IGEDCJBAFH\""
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('HFBIGEDCJA') == 'Pre Post In Post In Pre', 'Pre Post In Post In Pre'\nassert solution('BIGEDCJFAH') == 'HFBJCDEGIA', 'HFBJCDEGIA'\nassert solution('IGEDCJBAFH') == 'IGEDCJBAFH', 'IGEDCJBAFH'"
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"Pre Post In Post In Pre\"\nassert solution(\"BIGEDCJFAH\") == \"HFBJCDEGIA\"\nassert solution(\"BIGEDCJFAH\") == \"IGEDCJBAFH\""
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == 'Pre Post In Post In Pre\\nHFBJCDEGIA\\nIGEDCJBAFH\\n', \"Incorrect output.\"\nassert solution(stdin) == 'Pre Post In Post In Pre\\nHFBJCDEGIA\\nIGEDCJBAFH\\n', \"Incorrect output.\"\nassert solution(stdin) == 'Pre Post In Post In Pre\\nHFBJCDEGIA\\nIGEDCJBAFH\\n', \"Incorrect output.\""
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), \"Test case failed.\"\nprint(solution(input()))"
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"Pre Post In Post In Pre\", \"Test Case 1: Inorder Print\"\nassert solution(\"BIGEDCJFAH\") == \"Pre In Post In Pre Post\", \"Test Case 2: Postorder Print\"\nassert solution(\"BIGEDCJFAH\") == \"Pre In Post In Pre Post\", \"Test Case 3: Inorder Print\"\n\nsolution = \"\"\"\nvoid prePrint(TNode t)\n{\n  if (t!= null) prePrint(t.left);\n  output(t.value);\n  if (t!= null) prePrint(t.right);\n}\n\nvoid inPrint(TNode t)\n{\n  if (t!= null) prePrint(t.left);\n  output(t.value);\n  if (t!= null) prePrint(t.right);\n}\n\nvoid postPrint(TNode t)\n{\n  if (t!= null) prePrint(t.left);\n  if (t!= null) prePrint(t.right);\n  output(t.value);\n}\n\nvoid printPreInorder(TNode t)\n{\n  if (t!= null) printPreInorder(t.left);\n  output(t.value);\n  if (t!= null) printPreInorder(t.right);\n}\n\nvoid printPostInorder(TNode t)\n{\n  if (t!= null) printPostInorder(t.left);\n  if (t!= null) printPostInorder(t.right);\n  output(t.value);\n}\n\nvoid printInorder(TNode t)\n{\n  if (t!= null) printPreInorder(t.left);\n  if (t!= null) printPostInorder(t.right);\n  output(t.value);\n}\n\nint main() {\n  TNode root = createTNode();\n  root.value = 'H';\n  root.left = createTNode();\n  root.left.value = 'F';\n  root.left.left = createTNode();\n  root.left.left.value = 'B';\n  root.left.right = createTNode();\n  root.left.right.value = 'G';\n  root.right = createTNode();\n  root.right.value = 'E';\n  root.right.left = createTNode();\n  root.right.left.value = 'D';\n  root.right.right = createTNode();\n  root.right.right.value = 'C';\n  root.right.right.left = createTNode();\n  root.right.right.left.value = 'J';\n  root.right.right.right = createTNode();\n  root.right.right.right.value = 'F';\n  prePrint(root);\n  inPrint(root);\n  postPrint(root);\n  printInorder(root);\n  return 0;\n}\n\"\"\""
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"Pre Post In Post In Pre\", \"Incorrect output\"\nassert solution(\"BIGEDCJFAH\") == \"Pre Post In Post In Pre\", \"Incorrect output\"\n\nsample_input = \"HFBIGEDCJA\"\nsample_output = \"Pre Post In Post In Pre\"\n\nprint(f\"Expected output: {sample_output}\")\nprint(solution(sample_input))"
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"Pre Post In Post In Pre\"\nassert solution(\"BIGEDCJFAH\") == \"HFBJCDEGIA\"\nassert solution(\"BIGEDCJFAH\") == \"IGEDCJBAFH\""
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"Pre Post In Post In Pre\"\nassert solution(\"BIGEDCJFAH\") == \"HFBJCDEGIA\"\nassert solution(\"BIGEDCJFAH\") == \"IGEDCJBAFH\"\n\nfrom typing import List"
    },
    {
        "number": 3545,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"Pre Post In Post In Pre\", \"Test 1 failed\"\nassert solution(\"BIGEDCJFAH\") == \"In Pre Post In Post Pre\", \"Test 2 failed\"\nassert solution(\"BIGEDCJFAH\") == \"In Pre Post In Post Pre\", \"Test 3 failed\""
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\") == \"10\""
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\") == \"10\""
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\\n\") == 10\nassert solution(\"1\\n4 1 0\\n\") == 10\n"
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"10\\n\", \"Your solution is not correct\"\n"
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"10\""
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0') == '10\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n"
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n2\n2\n10 0\n3 1 1\n1\n4 1 0\n''') == '10'\n"
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == expected_output, f\"Your code is incorrect. Expected output: {expected_output}, but got: {solution}\"\n\nsolution = solution()\nprint(solution)\n"
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '10\\n'"
    },
    {
        "number": 3546,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '10'"
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"10000.00\", \"Test case failed\"\n\nfrom typing import List"
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '10000.00\\n', \"Testcase 1 failed\"\n\nstdin = '''\n2\n0 0 100 100\n30 30 60 60\n'''"
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '10000.00'"
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 0 100 100\\n30 30 60 60\") == 10000.0\nassert solution(\"0 0 100 100\\n-1000 -1000 1000 1000\\n-1000 1000 1000 -1000\\n0 -1000 1000 1000\") == 10000.0\nassert solution(\"0 0 100 100\\n-1000 -1000 1000 1000\\n-1000 1000 1000 -1000\") == 10000.0\nassert solution(\"0 0 100 100\\n-1000 1000 1000 -1000\\n-1000 -1000 1000 1000\\n0 -1000 1000 1000\") == 10000.0\nassert solution(\"0 0 100 100\\n-1000 1000 1000 -1000\\n-1000 -1000 1000 1000\\n0 -1000 1000 1000\") == 10000.0\nassert solution(\"0 0 100 100\\n-1000 1000 1000 -1000\\n-1000 -1000 1000 1000\\n0 -1000 1000 1000\") == 10000.0\nassert solution(\"0 0 100 100\\n-1000 1000 1000 -1000\\n-1000 -1000 1000 1000\\n0 -1000 1000 1000\") == 10000.0\nassert solution(\"0 0 100 100\\n-1000 1000 1000 -1000\\n-1000 -1000 1000 1000\\n0 -1000 1000 1000\") == 10000.0\nassert solution(\"0 0 100 100\\n-1000 1000 1000 -1000\\n-1000 -1000 1000 1000\\n0 -1000 1000 1000\") == 10000.0\nassert solution(\"0 0 100 100\\n-1000 1000 1000 -1000\\n-1000 -1000 1000 1000\\n0 -1000 1000 1000\") == 10000.0\nassert solution(\"0 0 100 100\\n-1000 1000 1000 -1000\\n-1000 -1000 1000 1000\\n0 -1000 1000 1000\") == 10000.0\nassert solution(\"0 0 100 100\\n-1000 1000 1000 -1000\\n-1000 -1000 1000 1000\\n0 -1000 1000 1000\") == 10000.0\nassert solution(\"0 0 100 100\\n-1000 1000 1000 -1000\\n-1000 -1000 "
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 0 100 100\\n30 30 60 60\") == 10000.0, \"The output should be 10000.00.\""
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(None) == \"10000.00\""
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 10000.00\n"
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '10000.00\\n', \"Your solution is incorrect.\"\n\nfrom typing import List"
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('0 0 100 100\\n30 30 60 60') == 10000.00"
    },
    {
        "number": 3547,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 0 100 100\\n30 30 60 60\") == 10000.0"
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '5\\n', \"Test failed\""
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 3\\n1 3\\n4 5\\n2 4') == '5'\n\nsolution('5 3\\n1 3\\n4 5\\n2 4')"
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n1 3\\n4 5\\n2 4\") == 5\nassert solution(\"3 5\\n2 3\\n4 1\\n3 3\") == 1"
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '5\\n'"
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n1 3\\n4 5\\n2 4\\n\") == 5\nassert solution(\"10 4\\n3 5\\n5 6\\n1 2\\n\") == 6\n"
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 5\n"
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n1 3\\n4 5\\n2 4\\n\") == \"5\\n\""
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"5\\n\""
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '5'\n\nfrom collections import Counter"
    },
    {
        "number": 3548,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Your solution is incorrect. Please check the examples and constraints.\"\n\nfrom typing import List"
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == \"2095\\n\"\n"
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('11 13 17\\n5 2 4\\n0 0 0') == '2095'\nprint('All test cases pass.')"
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == \"2095\""
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"2095\"\n"
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '2095', \"The given inputs are incorrect.\""
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(None) == \"3\\n\""
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == \"2095\"\n"
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2095\"\n"
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 2095, \"The correct output is not provided\""
    },
    {
        "number": 3549,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == 2095, \"Invalid output\""
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input) == expected_output, f\"Test failed: solution() returned {solution(input)} instead of {expected_output}\"\n"
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(str(input())) == 'My name is Gon'\nassert solution(str(input())) == 'My name is Gon'\nassert solution(str(input())) == 'My name is Gon'\nassert solution(str(input())) == 'My name is Gon'"
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\""
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str: pass\\n\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str: pass\\n\""
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\""
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"var a = 'Gon'; var b = a; var c = 'My name is'+ a + '; print c; print 'My name is'+ b + '; end.\") == \"My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str:\\n    pass\"\n\nassert solution(\"var a = 'Gon'; var b = 'My name is'+ a; print b; end.\") == \"My name is Gon\\ndef solution(stdin: str) -> str:\\n    pass\"\n\nassert solution(\"var a = 'Gon'; var b = a +'is '; print b; end.\") == \"My name is Gon is\\ndef solution(stdin: str) -> str:\\n    pass\"\n\nassert solution(\"var a = 'Gon'; var b = a; var c = a + '; print c; end.\") == \"My name is Gon\\nMy name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str:\\n    pass\"\n\nassert solution(\"var a = 'Gon'; var b = a; var c = 'My name is'+ a + '; print c; end.\") == \"My name is Gon\\nMy name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str:\\n    pass\"\n\nassert solution(\"var a = 'Gon'; var b = a; var c = 'My name is'+ a + '; var d = a +'is '; var e = c + d; print e; end.\") == \"My name is Gon is\\nMy name is Gon is\\nMy name is Gon is\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"My name is Gon\\nMy name is Gon\", \"The solution is incorrect.\""
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"var a = 'Gon'; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str:\\npass\\n\""
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"var a = 'Gon'; var b = a; var c = 'My name is'+ a; print c; print 'My name is'+ b; end.\") == \"My name is Gon\\nMy name is Gon\\n\"\nassert solution(\"print 'hello, world!'\\nprint 'goodbye, world!'\\nend.\") == \"hello, world!\\ngoodbye, world!\\n\"\nassert solution(\"var a = 'Gon'; var b = 'Gon'; var c = 'My name is'+ a; print c; print 'My name is'+ b; end.\") == \"My name is Gon\\nMy name is Gon\\n\"\nassert solution(\"print 'hello, world!'\\nprint 'goodbye, world!'\\nend.\") == \"hello, world!\\ngoodbye, world!\\n\""
    },
    {
        "number": 3550,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n'''\nvar a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint c;\nprint `My name is ${b}`;\nend.\n'''\n) == 'My name is Gon\\nMy name is Gon\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n7 8\\n10\\n\") == \"fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\n\"\nassert solution(\"3\\n10 20 30\\n50\\n\") == \"fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\n\"\nassert solution(\"2\\n50 20\\n70\\n\") == \"impossible\""
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"impossible\\n\""
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == sample_output, \"Test failed.\""
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2\\n3 4\\n5 6\\n7 8\") == \"fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\"\nassert solution(\"1 2\\n3 4\\n5 6\\n7 8\\n10 10\") == \"impossible\""
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 'fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0'\n"
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n7 8\\n10\\n') == 'fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2\\n7 8\\n10') == 'fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0'\n"
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n7 8\\n10\\n\") == \"fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n7 8\\n10\") == \"fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\""
    },
    {
        "number": 3551,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"transfer 2 1\\n\"\nassert solution(5) == \"fill 1\\n\"\nassert solution(10) == \"fill 1\\nfill 1\\nfill 1\\ntransfer 1 0\\nfill 1\\nfill 1\\nfill 1\\ntransfer 1 0\\nfill 1\\nfill 1\\nfill 1\\ntransfer 1 0\\nfill 1\\nfill 1\\nfill 1\\ntransfer 1 0\\nfill 1\\nfill 1\\nfill 1\\ntransfer 1 0\\nfill 1\\nfill 1\\nfill 1\\ntransfer 1 0\\nfill 1\\nfill 1\\nfill 1\\ntransfer 1 0\\nfill 1\\nfill 1\\nfill 1\\ntransfer 1 0\\nfill 1\\nfill 1\\nfill 1\\ntransfer 1 0\\nfill 1\\nfill 1\\nfill 1\\ntransfer 1 0\\nfill 1\\nfill 1\\nfill 1\\ntransfer 1 0\\nfill 1\\nfill 1\\nfill 1\\ntransfer 1 0\\nfill 1\\nfill 1\\nfill 1\\ntransfer 1 0\\nfill 1\\nfill 1\\nfill 1\\ntransfer 1 0\\nfill 1\\nfill 1\\nfill 1\\ntransfer 1 0\\nfill 1\\nfill 1\\nfill 1\\ntransfer 1 0\\nfill 1\\nfill 1\\nfill 1\\ntransfer 1 0\\nfill 1\\nfill 1\\nfill 1\\ntransfer 1 0\\nfill 1\\nfill 1\\nfill 1\\ntransfer 1 0\\nfill 1\\nfill 1\\nfill 1\\ntransfer 1 0\\nfill 1\\nfill 1\\nfill 1\\ntransfer 1 0\\nfill 1\\nfill 1\\nfill 1\\ntransfer 1 0\\nfill 1\\nfill 1\\nfill 1\\ntransfer 1 0\\nfill 1\\nfill 1\\nfill 1\\ntransfer 1 0\\nfill 1\\nfill 1\\nfill 1\\ntransfer 1 0\\nfill 1\\nfill 1\\nfill 1\\ntransfer 1 0\\nfill 1\\nfill 1\\nfill 1\\ntransfer 1 0\\nfill 1\\nfill 1\\nfill 1\\ntransfer 1 0\\nfill 1\\nfill 1\\nfill 1\\ntransfer 1 0\\nfill 1\\nfill 1\\nfill 1\\ntransfer 1 0\\nfill 1\\nfill 1\\nfill 1\\ntransfer 1 0\\nfill 1\\nfill 1\\nfill 1\\ntransfer 1 0\\nfill 1\\nfill 1\\nfill 1\\ntransfer 1 0\\nfill 1\\nfill 1\\nfill 1\\ntransfer 1 0\\nfill 1\\nfill 1\\nfill 1\\ntransfer 1 0\\nfill 1\\nfill 1\\nfill 1\\ntransfer 1 0\\nfill 1\\nfill 1\\nfill 1\\ntransfer 1 0\\nfill 1\\nfill 1\\nfill 1\\ntransfer 1 0\\nfill 1\\nfill 1\\nfill 1\\ntransfer 1 0\\nfill 1\\nfill 1\\nfill 1\\ntransfer 1 0\\nfill 1\\nfill 1\\nfill 1\\ntransfer 1 0\\nfill 1\\nfill 1\\nfill 1\\ntransfer 1 0\\nfill 1\\nfill 1\\nfill 1\\ntransfer 1 0\\nfill 1\\nfill 1\\nfill 1\\ntransfer 1 0\\nfill 1\\nfill 1\\nfill 1\\ntransfer 1 0"
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '27'\n"
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 4 3\") == \"27\"\n"
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == \"27\""
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('10 4 3') == '27\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"27\\n\", \"The output does not match the expected output.\""
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 4 3\") == 27, \"Test failed\""
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '27'"
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for input: {input()}, expected output: {expected_output}\""
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=None) == \"27\""
    },
    {
        "number": 3552,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 4 3\") == \"27\""
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\"\n) == \"3\\n-1\\n4\\n\""
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\") == \"3\\n-1\\n4\""
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\") == \"3\\n-1\\n4\"\n"
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\") == \"3\\n-1\\n4\""
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\") == \"3\\n-1\\n4\""
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\") == \"3\\n-1\\n4\\n\"\nassert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\") == \"3\\n-1\\n4\\n\""
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, but got: {solution(input())}\""
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Output: {solution(input())}, Expected: {output}\""
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Hey! I have an awesome task with chameleons, $5$-th task for Saturday's competition.\") == \"3\"\nassert solution(\"Go ahead\u2026\") == \"Go ahead\u2026\"\nassert solution(\"That's too difficult, I have an easier one, they won't even solve that one.\") == \"-1\"\nassert solution(\"You are given an array of $N$ integers from the interval $[1, K]$ and you need to process $M$ queries. The first type of query requires you to change a number in the array to a different value, and the second type of query requires you to determine the length of the shortest contiguous subarray of the current array that contains all numbers from $1$ to $K$.\") == \"3\\n-1\""
    },
    {
        "number": 3553,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input) == expected_output, f\"Expected output: {expected_output}, Actual output: {solution(input)}\"\n"
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1000 3000 1000\") == \"533.3333333333\"\n"
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"1000 3000 1000\") == \"533.3333333333\\n\"\n\nfrom math import sqrt"
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1000 3000 1000\") == \"533.3333333333\\n\", \"The solution is incorrect.\"\nassert solution(\"5000 3000 1000\") == \"186.6666666667\\n\", \"The solution is incorrect.\"\nassert solution(\"10000 3000 1000\") == \"750.0000000000\\n\", \"The solution is incorrect.\"\nassert solution(\"1000 3000 1000\") == \"533.3333333333\\n\", \"The solution is incorrect.\"\n"
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), \"The solution does not match the expected output.\\nExpected: {}\\nActual: {}\".format(output(), solution(input()))"
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin='1000 3000 1000') == '533.3333333333\\n'"
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == sample_output, \"Sample Input and Output do not match.\""
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n'''\n1000 3000 1000\n''') == '533.3333333333'\n"
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1000 3000 1000') == '533.3333333333\\n', \"Incorrect output\""
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1000 3000 1000\") == \"533.3333333333\\n\""
    },
    {
        "number": 3554,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}.\""
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n2 0\n10 0\n10 10\n''') == '14.14'"
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '14.14', \"Incorrect output for solution\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 0\\n10 0\\n10 10\\n') == '14.14\\n'"
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 0\\n10 0\\n10 10\") == \"14.14\""
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 0\\n10 0\\n10 10\") == \"14.14\"\nassert solution(\"3 0\\n5 0\\n6 10\\n7 20\\n8 30\\n9 40\\n10 50\") == \"16.66\""
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 0\\n10 0\\n10 10\\n') == '14.14\\n'\n\nSolution:\n\nWe can solve this problem using the following approach:\n\n1. Initialize the distance and path lists to store the distances and coordinates of the toys and trees.\n2. For each tree, find the coordinates of the next toy that Spot can get to. If the next toy is the last toy, then the path is the list of toys.\n3. For each toy, find the coordinates of the next tree that Spot can get to. If the next tree is the last tree, then the path is the list of trees.\n4. Calculate the length of the path using the distance and coordinates lists.\n5. Round the length to two decimal places and return the result.\n\nHere's the implementation of the solution in Python:"
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 0\\n10 0\\n10 10') == '14.14\\n'\n"
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 0\\n10 0\\n10 10\") == \"14.14\\n\"\n"
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 0\\n10 0\\n10 10\") == \"14.14\"\n"
    },
    {
        "number": 3555,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 0\\n10 0\\n10 10\\n') == '14.14'\n"
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 3\\n123456 14323 1700000\\n123458 41412 1900000\\n123457 15221 1800000\\n123456\\n123458\\n123457') == '123457 0\\n0 2\\n123458 1\\n'"
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n123456 14323 1700000\\n123458 41412 1900000\\n123457 15221 1800000\\n123456\\n123458\\n123457\\n\") == \"123457 0\\n0 2\\n123458 1\\ndef solution(stdin: str) -> str:\\npass\\n\""
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"0 2\"\n"
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n123456 14323 1700000\\n123458 41412 1900000\\n123457 15221 1800000\\n123456\\n123458\\n123457\") == \"123457 0\\n0 2\\n123458 1\""
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin.read()) == \"0 2\\n123457 0\\n0 2\\n123458 1\"\n"
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(solution(solution(solution(stdin)))) == \"0\"\nassert solution(solution(solution(solution(stdin)))) == \"0 2\"\nassert solution(solution(solution(solution(stdin)))) == \"123457 0\""
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input) == output, \"The solution is incorrect.\\nInput: {}\\nOutput: {}\".format(input, output)"
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n123456 14323 1700000\\n123458 41412 1900000\\n123457 15221 1800000\\n123456\\n123458\\n123457\") == \"123457 0\\n0 2\\n123458 1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution('3 3\\n123456 14323 1700000\\n123458 41412 1900000\\n123457 15221 1800000\\n123456\\n123458\\n123457') == '123457 0\\n0 2\\n123458 1'\\nassert solution('3 3\\n123456 14323 1700000\\n123458 41412 1900000\\n123457 15221 1800000\\n123456\\n123458\\n123457\\n123458') == '123457 0\\n0 2\\n123458 1'\\nassert solution('3 3\\n123456 14323 1700000\\n123458 41412 1900000\\n123457 15221 1800000\\n123456\\n123458\\n123457\\n123458\\n123456') == '123457 0\\n0 2\\n123458 1'\""
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '''\n123457 0\n0 2\n123458 1\n'''"
    },
    {
        "number": 3556,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(None) == \"\"\nassert solution(\"\") == \"\"\n\nm, q = map(int, input().split())\nassert m <= 100000 and q <= 10000\n\nemployees = {}\nchairperson = None\nfor _ in range(m):\n    id, salary, height = map(int, input().split())\n    if id not in employees:\n        employees[id] = (salary, height)\n    else:\n        salary, height = employees[id]\n        if salary > employees[chairperson][0]:\n            chairperson = id\n\nfor _ in range(q):\n    query = input()\n    if query == \"123457\":\n        print(chairperson, 0)\n    elif query in employees:\n        boss_id, count = map(int, employees[query])\n        if boss_id == \"0\":\n            print(chairperson, count)\n        else:\n            subordinates = []\n            current = boss_id\n            while current!= \"0\":\n                subordinates.append(current)\n                current = employees[current][0]\n            print(\" \".join(subordinates))\n    else:\n        print(\"Invalid employee ID\")"
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '90', f'Incorrect Output. Expected \"90\", got \"{solution(stdin)}\".'"
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}, Received: {solution(input())}\""
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n3 5 10 2 5\\n2 4 5 1 3\") == \"90\""
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"90\", \"Incorrect Output\""
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Actual output: {solution(input())}\"\n"
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n    5\n    3 5 10 2 5\n    2 4 5 1 3\n''') == '90'\nassert solution('''\n    5\n    3 5 10 2 5\n    2 4 5 1 4\n''') == '120'\nassert solution('''\n    5\n    3 5 10 2 5\n    2 4 5 1 5\n''') == '150'\nassert solution('''\n    5\n    3 5 10 2 5\n    2 4 5 1 6\n''') == '180'\nassert solution('''\n    5\n    3 5 10 2 5\n    2 4 5 1 7\n''') == '210'\nassert solution('''\n    5\n    3 5 10 2 5\n    2 4 5 1 8\n''') == '240'\nassert solution('''\n    5\n    3 5 10 2 5\n    2 4 5 1 9\n''') == '270'\nassert solution('''\n    5\n    3 5 10 2 5\n    2 4 5 1 10\n''') == '300'"
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n5\n3 5 10 2 5\n2 4 5 1 3\n''') == '90'\n\nsolution('''\n5\n3 5 10 2 5\n2 4 5 1 3\n''')"
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"90\", \"The output does not match the expected output.\""
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"90\\n\"\n"
    },
    {
        "number": 3557,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n3 5 10 2 5\\n2 4 5 1 3\") == \"90\""
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"6.000000\""
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 10\\n1 2 6\\n0 4 3\\n0 8 2\") == 6.0\nassert solution(\"10 20\\n10 15 12\\n20 12 18\") == 22.0\nassert solution(\"1000 1000\") == 1000.0\nassert solution(\"1000 -1000\") == -1000.0\nassert solution(\"1000 1000 1000 1000\") == 1000.0\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"6.000000\""
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"6.000000\""
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 10\\n1 2 6\\n0 4 3\\n0 8 2\") == 6.000000, \"Invalid output\"\n"
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == sample_output, f\"Test failed for sample input {sample_input} and output {sample_output}\""
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 10\\n1 2 6\\n0 4 3\\n0 8 2') == '6.000000'"
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('television_transmitters.txt', 'r')) == '6.000000'\nprint('All tests passed!')"
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 10\\n1 2 6\\n0 4 3\\n0 8 2') == '6.000000'"
    },
    {
        "number": 3558,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"6.000000\""
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\n\") == \"1.\\n..\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.1\\n1.1\\n\") == \"1.1\\n1.1\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n1.\\n\") == \"1.\\n1.\\n\"\nassert solution(\"2\\n401\\n100\\n100\\n100\\n\") == \"1.1\\n1.1\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n1.\\n\") == \"1.\\n1.\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.1\\n1.1\\n\") == \"1.1\\n1.1\\n\"\n"
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\n0 0\\n0 0\\n1.\\n....\\n0') == '1.\\n....\\n0\\n\\n'"
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\") == \"1.\\n..\\n\"\nassert solution(\"4\\n0 0\\n0 0\\n1. 1\\n..\\n0\") == \"1. 1\\n..\\n0\"\nassert solution(\"5\\n0 0\\n0 0\\n1. 1\\n..\\n0\") == \"1. 1\\n..\\n0\"\nassert solution(\"6\\n0 0\\n0 0\\n1. 1\\n..\\n0\") == \"1. 1\\n..\\n0\"\nassert solution(\"7\\n0 0\\n0 0\\n1. 1\\n..\\n0\") == \"1. 1\\n..\\n0\"\nassert solution(\"8\\n0 0\\n0 0\\n1. 1\\n..\\n0\") == \"1. 1\\n..\\n0\"\nassert solution(\"9\\n0 0\\n0 0\\n1. 1\\n..\\n0\") == \"1. 1\\n..\\n0\"\nassert solution(\"10\\n0 0\\n0 0\\n1. 1\\n..\\n0\") == \"1. 1\\n..\\n0\"\nassert solution(\"11\\n0 0\\n0 0\\n1. 1\\n..\\n0\") == \"1. 1\\n..\\n0\"\nassert solution(\"12\\n0 0\\n0 0\\n1. 1\\n..\\n0\") == \"1. 1\\n..\\n0\"\nassert solution(\"13\\n0 0\\n0 0\\n1. 1\\n..\\n0\") == \"1. 1\\n..\\n0\"\nassert solution(\"14\\n0 0\\n0 0\\n1. 1\\n..\\n0\") == \"1. 1\\n..\\n0\"\nassert solution(\"15\\n0 0\\n0 0\\n1. 1\\n..\\n0\") == \"1. 1\\n..\\n0\"\nassert solution(\"16\\n0 0\\n0 0\\n1. 1\\n..\\n0\") == \"1. 1\\n..\\n0\"\nassert solution(\"17\\n0 0\\n0 0\\n1. 1\\n..\\n0\") == \"1. 1\\n..\\n0\"\nassert solution(\"18\\n0 0\\n0 0\\n1. 1\\n..\\n0\") == \"1. 1\\n..\\n0\"\nassert solution(\"19\\n0 0\\n0 0\\n1. 1\\n..\\n0\") == \"1. 1\\n..\\n0\"\nassert solution(\"20\\n0 0\\n0 0\\n1. 1\\n..\\n0\") == \"1. 1\\n..\\n0\"\nassert solution(\"21\\n0 0\\n0 0\\n1. 1\\n..\\n0\") == \"1. 1\\n..\\n0\"\nassert solution(\"22\\n0 0\\n0 0\\n1. 1\\n..\\n0\") == \"1. 1\\n..\\n0\"\nassert solution(\"23\\n0 0\\n0 0\\n1. 1\\n..\\n0\") == \"1. 1\\n..\\n0\"\nassert solution(\"24\\n0 0\\n0 0\\n1. 1\\n..\\n0\") == \"1. 1\\n..\\n0\"\nassert solution(\"25\\n0 0\\n0 0\\n1. 1\\n..\\n0\") == \"1. 1\\n..\\n0\"\nassert solution(\"26\\n0 0\\n0 0\\n1. 1\\n..\\n0\") == \"1. 1\\n..\\n0\"\nassert solution(\"27\\n0 0\\n0 0\\n1. 1\\n..\\n0\") == \"1."
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0\\n') == '1.\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0\\n') == '1.\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0\\n') == '1.\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0\\n') == '1.\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0\\n') == '1.\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0\\n') == '1.\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0\\n') == '1.\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0\\n') == '1.\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0\\n') == '1.\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0\\n') == '1.\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0\\n') == '1.\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0\\n') == '1.\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0\\n') == '1.\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0\\n') == '1.\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0\\n') == '1.\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0\\n') == '1.\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0\\n') == '1.\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0\\n') == '1.\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0\\n') == '1.\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0\\n') == '1.\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0\\n') == '1.\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0\\n') == '1.\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0\\n') == '1.\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0\\n') == '1.\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0\\n') == '1.\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0\\n') == '1.\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0\\n') == '1.\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0\\n') == '1.\\n..\\n'\nassert solution('2\\n0 0\\n0 0\\n1.\\"
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1\\n..\""
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n0 0\\n0 0\\n1..\\n...\\n0\\n\") == \"1..\\n...\\n0\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1..\\n...\\n0\\n\") == \"1..\\n...\\n0\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1..\\n...\\n0\\n\") == \"1..\\n...\\n0\\n\""
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected_output, f\"Test Case {test_case_number}: Expected output '{expected_output}', but got '{solution(stdin)}'.\"\n"
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected"
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0') == '\\n1.\\n..\\n\\n'"
    },
    {
        "number": 3559,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n2\n0 0\n0 0\n1.\n..\n0\n''') == '''\n1.\n..\n"
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 1"
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abc\") == \"1\\ndef solution(stdin: str) -> str:\"\nassert solution(\"a\") == \"1\\ndef solution(stdin: str) -> str:\"\nassert solution(\"bc\") == \"1\\ndef solution(stdin: str) -> str:\"\nassert solution(\"a b c d\") == \"1\\ndef solution(stdin: str) -> str:\"\nassert solution(\"a b c d e\") == \"2 1\\ndef solution(stdin: str) -> str:\"\nassert solution(\"a b c d e f\") == \"2 3\\ndef solution(stdin: str) -> str:\""
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '1\\n1\\ndef solution(stdin: str) -> str:\\n    return \"\"'"
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1\""
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\na\\nbc\\nabc\") == \"1\\n1\\ndef\"\nassert solution(\"3\\na\\nbc\\nabc\\n3\\n1 abca\\n2 1\\n2 3\") == \"1\\n1\\ndef\\n1\\n1\\nabc\"\nassert solution(\"5\\nA\\nB\\nC\\nD\\nE\") == \"2\\n1\\n1\\n1\\n1\""
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"1\\n1\\ndef solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == sample_output, \"Incorrect solution\""
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\\n\""
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\na\\nbc\\nabc\\n3\\n1 abca\\n2 1\\n2 3') == '1\\n1\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3560,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == '1'\nassert solution(10) == '1'\nassert solution(15) == '1'\nassert solution(20) == '1'\nassert solution(25) == '1'\nassert solution(30) == '1'\nassert solution(35) == '1'\nassert solution(40) == '1'\nassert solution(45) == '1'\nassert solution(50) == '1'\nassert solution(55) == '1'\nassert solution(60) == '1'\nassert solution(65) == '1'\nassert solution(70) == '1'\nassert solution(75) == '1'\nassert solution(80) == '1'\nassert solution(85) == '1'\nassert solution(90) == '1'\nassert solution(95) == '1'\nassert solution(100) == '1'"
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == 'YES'"
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(b'\\n') == 'YES\\n'\nassert solution(b'1 1 1 1\\n') == 'YES\\n'\nassert solution(b'5 1 1 1\\n') == 'NO\\n'\nassert solution(b'5 2 1 1\\n') == 'NO\\n'\nassert solution(b'5 1 2 1\\n') == 'YES\\n'\nassert solution(b'5 1 1 2\\n') == 'YES\\n'\nassert solution(b'1 1 1 1\\n') == 'NO\\n'"
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 1 1 1') == 'YES\\n'\n"
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1 1 1\") == \"YES\" # correct solution\n"
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 1 1 1') == 'YES'\nassert solution('2 2 2 2') == 'NO'\nassert solution('0 0 0 0') == 'YES'\nassert solution('1 1 0 1') == 'YES'\nassert solution('2 1 1 1') == 'YES'\nassert solution('100 100 100 100') == 'NO'\n"
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1 1\") == \"YES\""
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(b\"\"\"\n1 1 1 1\n\"\"\") == 'YES\\n'\nassert solution(b\"\"\"\n2 1 1 1\n\"\"\") == 'NO\\n'\nassert solution(b\"\"\"\n3 2 2 2\n\"\"\") == 'NO\\n'\nassert solution(b\"\"\"\n4 2 2 2\n\"\"\") == 'YES\\n'"
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin='1 1 1 1\\n') == 'YES'\n\nfrom typing import List"
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3561,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Your solution is incorrect. Expected '{expected_output}', but got '{solution(input())}'\""
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 80.57\nprint(80.57)\n"
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 80.5696, \"The correct output is 80.5696, but the function returned {}\".format(solution())"
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 96\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\") == \"80.5696000000\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 96\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n\") == \"80.5696000000\"  # Correct answer\n"
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(sample_input) == expected_output, f\"Test case {sample_input} failed\""
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 96 -0.0080 1.5417 25.0000 -0.0080 1.5417 25.0000\") == \"80.5696000000\"\nassert solution(\"2 96 -0.0080 1.5417 25.0000 -0.0080 1.5417 25.0000\") == \"80.5696000000\""
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 96\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000') == '80.5696000000'"
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"2 96\n-0.0080 1.5417 25.0000\n-0.0080 1.5417 25.0000\"\"\") == \"80.5696000000\"\nassert solution(\"\"\"5 120\n-0.1160 2.5400 50.0000\n-0.1160 2.5400 50.0000\n-0.1160 2.5400 50.0000\n-0.1160 2.5400 50.0000\n-0.1160 2.5400 50.0000\"\"\") == \"50.0000000000\"\nassert solution(\"\"\"10 180\n-0.2320 3.7240 80.0000\n-0.2320 3.7240 80.0000\n-0.2320 3.7240 80.0000\n-0.2320 3.7240 80.0000\n-0.2320 3.7240 80.0000\n-0.2320 3.7240 80.0000\"\"\") == \"60.0000000000\"\n"
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 96\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000') == '80.5696'\nprint(\"All tests passed!\")"
    },
    {
        "number": 3562,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 96\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\") == \"80.5696000000\""
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 0 0 1 1 1 0 0 1\") == \"2\\n\"\n"
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 0 0 1 1 1 0 0 1') == '2', \"Your solution is incorrect.\""
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 0 0 1 1 1 0 0 1\") == \"2\\n\"\nassert solution(\"1000000 1000000\") == \"1000000\\n\"\nassert solution(\"1000000\") == \"1000000\\n\"\nassert solution(\"5\") == \"1\\n\""
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 0 0 1 1 1 0 0 1') == '2\\n'\n"
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 0 0 1 1 1 0 0 1\") == \"2\""
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 0 0 1 1 1 0 0 1\") == \"2\\n\"\n"
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 0 0 1 1 1 0 0 1\") == \"2\\n\"\nassert solution(\"4 0 0 0 0 0 0 0 1\") == \"2\\n\"\nassert solution(\"4 0 0 0 0 0 0 0 1\") == \"2\\n\"\nassert solution(\"4 0 0 0 0 0 0 0 1\") == \"2\\n\"\nassert solution(\"4 0 0 0 0 0 0 0 1\") == \"2\\n\"\nassert solution(\"4 0 0 0 0 0 0 0 1\") == \"2\\n\"\nassert solution(\"4 0 0 0 0 0 0 0 1\") == \"2\\n\"\nassert solution(\"4 0 0 0 0 0 0 0 1\") == \"2\\n\"\nassert solution(\"4 0 0 0 0 0 0 0 1\") == \"2\\n\"\nassert solution(\"4 0 0 0 0 0 0 0 1\") == \"2\\n\"\nassert solution(\"4 0 0 0 0 0 0 0 1\") == \"2\\n\"\nassert solution(\"4 0 0 0 0 0 0 0 1\") == \"2\\n\"\nassert solution(\"4 0 0 0 0 0 0 0 1\") == \"2\\n\"\nassert solution(\"4 0 0 0 0 0 0 0 1\") == \"2\\n\"\nassert solution(\"4 0 0 0 0 0 0 0 1\") == \"2\\n\"\nassert solution(\"4 0 0 0 0 0 0 0 1\") == \"2\\n\"\nassert solution(\"4 0 0 0 0 0 0 0 1\") == \"2\\n\"\nassert solution(\"4 0 0 0 0 0 0 0 1\") == \"2\\n\"\nassert solution(\"4 0 0 0 0 0 0 0 1\") == \"2\\n\"\nassert solution(\"4 0 0 0 0 0 0 0 1\") == \"2\\n\"\nassert solution(\"4 0 0 0 0 0 0 0 1\") == \"2\\n\"\nassert solution(\"4 0 0 0 0 0 0 0 1\") == \"2\\n\"\nassert solution(\"4 0 0 0 0 0 0 0 1\") == \"2\\n\"\nassert solution(\"4 0 0 0 0 0 0 0 1\") == \"2\\n\"\nassert solution(\"4 0 0 0 0 0 0 0 1\") == \"2\\n\"\nassert solution(\"4 0 0 0 0 0 0 0 1\") == \"2\\n\"\nassert solution(\"4 0 0 0 0 0 0 0 1\") == \"2\\n\"\nassert solution(\"4 0 0 0 0 0 0 0 1\") == \"2\\n\"\nassert solution(\"4 0 0 0 0 0 0 0 1\") == \"2\\n\"\nassert solution(\"4 0 0 0 0 0 0 0 1\") == \"2\\n\"\nassert solution(\"4 0 0 0 0 0 0 0 1\") == \"2\\n\"\nassert solution(\"4 0 0 0 0 0 0 0 1\") == \"2\\n\"\nassert solution(\"4 0 0 0 0 0 0 0 1\") == \"2\\n\"\nassert solution(\"4 0 0 0 0 0 0 0 1\") == \"2\\n\"\nassert solution(\"4 0 0 0 0 0 0 0 1\") == \"2\\n\"\nassert solution(\"4 0 0 0 0 0 0 0 1\") == \"2\\n\"\nassert solution(\"4 0 0 0 0 0 0 0"
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 0 0 1 1 1 0 0 1\") == \"2\\n\""
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 0 0 1 1 1 0 0 1\") == \"2\\n\"\nassert solution(\"6 0 1 0 0 1 0 1 1 0\") == \"3\\n\"\nassert solution(\"10 10 5 5 0 0 0 5 0\") == \"2\\n\"\nassert solution(\"1 -1 -1 0 0 0 0 0\") == \"1\\n\""
    },
    {
        "number": 3563,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 0 0 1 1 1 0 0 1\") == \"2\", \"Test case 1 failed\"\nassert solution(\"4 0 0 1 1 1 0 0 1 1 1 1\") == \"4\", \"Test case 2 failed\"\nassert solution(\"4 0 0 1 1 1 0 0 1 1 1 1 1 1\") == \"4\", \"Test case 3 failed\"\nassert solution(\"4 0 0 1 1 1 0 0 1 1 1 1 1 1 1 1 1\") == \"8\", \"Test case 4 failed\"\nassert solution(\"4 0 0 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1\") == \"2\", \"Test case 5 failed\""
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1400\"\n"
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1400\\n\""
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\") == 1400, \"Expected 1400, but got {}\".format(solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\"))"
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n3 2 3\n0 0 400\n1000 0 400\n2000 0 400\n300 0 150\n1300 0 150\n''') == '1400'"
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\") == 1400, \"The minimum length of a tunnel is incorrect.\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\\n\") == \"1400\""
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    3 2 3\n    0 0 400\n    1000 0 400\n    2000 0 400\n    300 0 150\n    1300 0 150\n    \"\"\"\n) == \"1400\\n\"\n\nassert solution(\n    \"\"\"\n    3 2 3\n    0 0 400\n    1000 0 400\n    2000 0 400\n    300 0 150\n    1300 0 150\n    400 0 150\n    \"\"\"\n) == \"impossible\\n\"\n\nassert solution(\n    \"\"\"\n    3 2 3\n    0 0 400\n    1000 0 400\n    2000 0 400\n    300 0 150\n    1300 0 150\n    2000 1 150\n    \"\"\"\n) == \"impossible\\n\"\n\nassert solution(\n    \"\"\"\n    3 2 3\n    0 0 400\n    1000 0 400\n    2000 0 400\n    300 0 150\n    1300 0 150\n    2000 1 150\n    400 1 150\n    \"\"\"\n) == \"impossible\\n\"\n\nassert solution(\n    \"\"\"\n    3 2 3\n    0 0 400\n    1000 0 400\n    2000 0 400\n    300 0 150\n    1300 0 150\n    2000 1 150\n    400 1 150\n    500 1 150\n    \"\"\"\n) == \"impossible\\n\"\n\nassert solution(\n    \"\"\"\n    3 2 3\n    0 0 400\n    1000 0 400\n    2000 0 400\n    300 0 150\n    1300 0 150\n    2000 1 150\n    400 1 150\n    500 1 150\n    600 1 150\n    \"\"\"\n) == \"impossible\\n\"\n\nassert solution(\n    \"\"\"\n    3 2 3\n    0 0 400\n    1000 0 400\n    2000 0 400\n    300 0 150\n    1300 0 150\n    2000 1 150\n    400 1 150\n    500 1 150\n    600 1 150\n    700 1 150\n    \"\"\"\n) == \"impossible\\n\"\n\nassert solution(\n    \"\"\"\n    3 2 3\n    0 0 400\n    1000 0 400\n    2000 0 400\n    300 0 150\n    1300 0 150\n    2000 1 150\n    400 1 150\n    500 1 150\n    600 1 150\n    700 1 150\n    800 1 150\n    \"\"\"\n) == \"impossible\\n\"\n\nassert solution(\n    \"\"\"\n    3 2 3\n    0 0 400\n    1000 0 400\n    2000 0 400\n    300 0 150\n    1300 0 150\n    2000 1 150\n    400 1 150\n    500 1 150\n    600 1 150\n    700 1 150\n    800 1 150\n    900 1 150\n    \"\"\"\n) == \"impossible\\n\"\n\nassert solution(\n    \"\"\"\n    3 2 3\n    0 0 400\n    1000 0 400\n    2000 0 400\n    300 0 150\n    "
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1400\"\nassert solution() == \"1400\""
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\") == 1400"
    },
    {
        "number": 3564,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\") == \"1400\"\nassert solution(\"3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1000 0 150\") == \"impossible\"\n"
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"10 15\\nsouthwest\\nnorthwest\\nnorth\\nsoutheast\\nnortheast\\nstockholm\\nhelsinki\\nberlin\\n\") == \"3907\"\nassert solution(\"10 15\\nsouthwest\\nnorthwest\\nnorth\\nsoutheast\\nnortheast\\nstockholm\\nhelsinki\\nberlin\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\"
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"3907\\n\", \"Test case 1 failed\""
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('10 15\\nstockholm\\namsterdam\\nberlin\\ncopenhagen\\nstockholm helsinki\\nstockholm copenhagen\\nhelsinki berlin\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm amsterdam\\nstockholm am"
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbrussels\\noslo stockholm 415\\nstockholm helsinki 396\\noslo london 1153\\noslo copenhagen 485\\nstockholm copenhagen 522\\ncopenhagen berlin 354\\ncopenhagen amsterdam 622\\nhelsinki berlin 1107\\nlondon amsterdam 356\\nberlin amsterdam 575\\nlondon dublin 463\\nreykjavik dublin 1498\\nreykjavik oslo 1748\\nlondon brussels 318\\nbrussels amsterdam 173\\nstockholm amsterdam\\noslo london\\nreykjavik dublin\\nbrussels helsinki\\n\") == \"3907\\n\"\n"
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\nostrlo\\nelsinki\\ndublin\\nreykjavik\\nbrussels\\nostrlo stockholm 415\\nstockholm helsinki 396\\nostrlo london 1153\\nostrlo copenhagen 485\\nstockholm copenhagen 522\\ncopenhagen berlin 354\\ncopenhagen amsterdam 622\\nelsinki berlin 1107\\nlondon amsterdam 356\\nberlin amsterdam 575\\nlondon dublin 463\\nreykjavik dublin 1498\\nreykjavik oslo 1748\\nlondon brussels 318\\nbrussels amsterdam 173\\nstockholm amsterdam\\nostrlo london\\nreykjavik dublin\\nbrussels helsinki\") == 3907"
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('10 15\\nsato\\nbanco\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npolo\\npo"
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('sample_input.txt', 'r')) == '3907'\nprint('All tests passed.')"
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 15\\nsstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\nbruges\\noslo stockholm 415\\nsstockholm helsinki 396\\noslo london 1153\\noslo copenhagen 485\\nsstockholm copenhagen 522\\ncopenhagen berlin 354\\ncopenhagen amsterdam 622\\nhelsinki berlin 1107\\nlondon amsterdam 356\\nberlin amsterdam 575\\nlondon dublin 463\\nreykjavik dublin 1498\\nreykjavik oslo 1748\\nlondon brussels 318\\nbruges amsterdam 173\\nsstockholm amsterdam\\noslo london\\nreykjavik dublin\\nbruges helsinki\") == \"3907\""
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"3907\"\n"
    },
    {
        "number": 3565,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '3907'\nassert solution(input()) == '3719'\nassert solution(input()) == '3597'\nassert solution(input()) == '3591'\nassert solution(input()) == '3378'"
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '2\\n1\\n2\\n1\\n'\n"
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Solution is incorrect. Expected: {expected}, got: {solution(input())}\""
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(None) == \"\"\n"
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1') == '2\\n1\\n2\\n1\\n'\n"
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(str(int(input())) + \" \" + str(int(input())) + \" \" + str(int(input())) + \" \" + str(int(input())) + \" \" + str(int(input())) + \"\\n\" + str(int(input())) + \"\\n\") == \"2\\n1\\n2\\n1\\n\""
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\") == \"2\\n1\\n2\\n1\""
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\") == \"2\\n1\\n2\\n1\""
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\") == \"2\\n1\\n2\\n1\""
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1') == '2\\n1\\n2\\n1'"
    },
    {
        "number": 3566,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\\n\") == \"2\\n1\\n2\\n1\\n\"\n"
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 5\\n01001\\n11100\\n10111\") == \"00010\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    3 5\n    01001\n    11100\n    10111\n    \"\"\"\n) == \"00010\\n\""
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 5\\n01001\\n11100\\n10111\\n') == '00010\\ndef solution(stdin: str) -> str:\\npass\\n'"
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(None) == \"def solution(stdin: str) -> str:\\n\\tpass\\n\""
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"00010\"\n"
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"00010\" # Expected Output: \"00010\""
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 5\\n01001\\n11100\\n10111\\n\") == \"00010\\ndef solution(stdin: str) -> str:\\npass\\n\"\n"
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"00010\"\nassert solution(stdin) == \"00001\"\nassert solution(stdin) == \"11101\"\nassert solution(stdin) == \"11110\"\nassert solution(stdin) == \"11010\"\nassert solution(stdin) == \"01110\"\nassert solution(stdin) == \"00000\"\n"
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 5\\n01001\\n11100\\n10111\") == \"00010\""
    },
    {
        "number": 3567,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution('01001\\n11100\\n10111') == '00010'\\n\\n# Example Input\\nassert solution('01001\\n11100\\n10111') == '00010'\\n\\n# Example Output\\nassert solution('01001\\n11100\\n10111') == '00010'\\n\""
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n6 2\\n0 4\\n6 12\\n\") == \"possible\\n\"\n"
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"possible\""
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == 'possible'"
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n6 2\\n0 4\\n6 12\\n\") == \"possible\"\nassert solution(\"1\\n6 2\\n0 4\\n6 12\\n1\\n6 2\\n0 4\\n6 12\\n2\\n6 2\\n0 4\\n6 12\\n\") == \"impossible\"\nassert solution(\"1\\n6 2\\n0 4\\n6 12\\n3\\n6 2\\n0 4\\n6 12\\n4\\n6 2\\n0 4\\n6 12\\n\") == \"impossible\"\n"
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n1\n6 2\n0 4\n6 12\n''') == 'possible'\n\nassert solution('''\n2\n1 2\n0 3\n1 4\n''') == 'impossible'"
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"possible\"\n"
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1\\n6 2\\n0 4\\n6 12\\n') == 'possible\\n'\nassert solution('1\\n6 2\\n0 4\\n6 12\\n3\\n4 5\\n0 6\\n6 12\\n') == 'impossible\\n'\nassert solution('1\\n6 2\\n0 4\\n6 12\\n1\\n2 3\\n0 4\\n6 12\\n') == 'impossible\\n'"
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n6 2\\n0 4\\n6 12\") == \"possible\""
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1\\n6 2\\n0 4\\n6 12') == 'possible'"
    },
    {
        "number": 3568,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"impossible\""
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1') == '2'\nprint('All tests passed.')"
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '2\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 2, \"Your solution is incorrect.\""
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1') == '2'\n"
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\\n') == '2\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n'"
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1') == '2\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1') == '2'\nassert solution('5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1') == '2'\nassert solution('5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1') == '2'\nassert solution('5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1') == '2'\nassert solution('5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1') == '2'"
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected"
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3569,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\") == 2, \"The output is incorrect.\""
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on''') == 'Plot Error\\n3 Just A Dream\\nYes'\n\nassert solution('''10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\nD 3\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\nD 2\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\nD 1\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\nD 1\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\nD 1\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\nD 2\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\nD 3\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\nS 1!bobby_dies business_as_usual\nS 2!bobby_dies it_goes_on_and_on''') == 'Plot Error\\n5 Just A Dream\\nYes'\n\nassert solution('''10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\nD 3\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\nD 2\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\nD 1\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\nD 1\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\nD 1\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\nD 2\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\nD 3\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\nD 3\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\nD 2\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\nD 1\nS 1!bobby_dies\nS 2!bobby_dies it_"
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n') == 'Yes\\n3 Just A Dream\\n'\nassert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n') == 'Plot Error\\n'\nassert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n') == 'Plot Error\\n'"
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\") == \"Plot Error\\n3 Just A Dream\\nYes\""
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Test {test_case} failed\" for test_case, input, expected_output in [\n    (0, [], \"Plot Error\"),\n    (0, [\"E business_as_usual\"], \"Plot Error\"),\n    (0, [\"E bobby_dies\"], \"Plot Error\"),\n    (0, [\"S 1 bobby_died\"], \"Plot Error\"),\n    (0, [\"E stuff_happens\"], \"Plot Error\"),\n    (0, [\"E jr_does_bad_things\"], \"Plot Error\"),\n    (0, [\"S 2!bobby_dies business_as_usual\"], \"Plot Error\"),\n    (0, [\"E it_goes_on_and_on\"], \"Plot Error\"),\n    (0, [\"D 4\"], \"Plot Error\"),\n    (0, [\"S 1!bobby_dies\"], \"Plot Error\"),\n    (0, [\"S 2!bobby_dies it_goes_on_and_on\"], \"Plot Error\"),\n    (0, [\"E business_as_usual\", \"E bobby_dies\", \"S 1 bobby_died\", \"E stuff_happens\", \"E jr_does_bad_things\", \"S 2!bobby_dies business_as_usual\", \"E it_goes_on_and_on\"], \"Yes\"),\n    (0, [\"E business_as_usual\", \"E bobby_dies\", \"S 1 bobby_died\", \"E stuff_happens\", \"E jr_does_bad_things\", \"S 2!bobby_dies business_as_usual\", \"E it_goes_on_and_on\", \"D 4\", \"S 1!bobby_dies\", \"S 2!bobby_dies it_goes_on_and_on\"], \"Plot Error\"),\n    (0, [\"E business_as_usual\", \"E bobby_dies\", \"S 1 bobby_died\", \"E stuff_happens\", \"E jr_does_bad_things\", \"S 2!bobby_dies business_as_usual\", \"E it_goes_on_and_on\", \"D 3\", \"S 1!bobby_dies\", \"S 2!bobby_dies it_goes_on_and_on\"], \"Plot Error\"),\n    (0, [\"E business_as_usual\", \"E bobby_dies\", \"S 1 bobby_died\", \"E stuff_happens\", \"E jr_does_bad_things\", \"S 2!bobby_dies business_as_usual\", \"E it_goes_on_and_on\", \"D 2\", \"S 1!bobby_dies\", \"S 2!bobby_dies it_goes_on_and_on\"], \"Plot Error\"),\n    (0, [\"E business_as_usual\", \"E bobby_dies\", \"S 1 bobby_died\", \"E stuff_happens\", \"E jr_does_bad_things\", \"S 2!bobby_dies business_as_usual\", \"E it_goes_on_and_on\", \"D 1\", \"S 1!bobby_dies\", \"S 2!bobby_dies it_goes_on_and_on\"], \"Plot Error\"),\n    (0, [\"E business_as_usual\", \"E bobby_dies\", \"S 1 bobby_died\", \"E stuff_happens\", \"E jr_does_bad_things\", \"S 2!bobby_dies business_as_usual\", \"E it_goes_on_and_on\", \"D 0\", \"S 1!bobby_dies\", \"S 2!bobby_dies it_goes_on_and_on\"], \"Plot Error\"),\n    (0, [\"E business_as_usual\", \"E bobby_dies\", \"S 1 bobby_died\", \"E stuff_happens\", \"E jr_does_bad_things\", \"S 2!bobby_dies business_as_usual\", \"E it_goes_on_and_on\", \"D 30\", \"S 1!bobby_dies\", \"S 2!bobby_dies it_goes_on_and_on\"], \"Plot Error\"),\n    (0, [\"E"
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(solution) == \"Plot Error\""
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\") == \"Plot Error\\n3 Just A Dream\\nYes\""
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n\") == \"Plot Error\\n3 Just A Dream\\nYes\"\nassert solution(\"10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n\") == \"Plot Error\\n2 Just A Dream\\nYes\"\nassert solution(\"10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n\") == \"No\"\nassert solution(\"10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n\") == \"No\"\nassert solution(\"10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n\") == \"No\"\nassert solution(\"10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n\") == \"No\"\nassert solution(\"10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n\") == \"No\"\nassert solution(\"10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n\") == \"No\"\nassert solution(\"10\\nE business_as_usual\\nE bobby_d"
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on') == 'Plot Error\\n3 Just A Dream\\nYes'\n\nassert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nE other_event\\nS 3!business_as_usual other_event\\nS 4!it_goes_on_and_on\\nD 1\\nS 1!it_goes_on_and_on\\nS 2!other_event other_event\\nS 3!business_as_usual other_event\\nS 4!it_goes_on_and_on\\nD 1\\nS 1!it_goes_on_and_on\\nS 2!other_event other_event') == 'Plot Error\\n1 Just A Dream\\nYes'\n\nassert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nE other_event\\nS 3!business_as_usual other_event\\nS 4!it_goes_on_and_on\\nD 1\\nS 1!it_goes_on_and_on\\nS 2!other_event other_event\\nS 3!business_as_usual other_event\\nS 4!it_goes_on_and_on\\nD 1\\nS 1!it_goes_on_and_on\\nS 2!other_event other_event\\nS 4!it_goes_on_and_on\\nD 1\\nS 1!it_goes_on_and_on\\nS 2!other_event other_event\\nS 5!it_goes_on_and_on\\nD 1\\nS 1!it_goes_on_and_on\\nS 2!other_event other_event\\nS 6!it_goes_on_and_on\\nD 1\\nS 1!it_goes_on_and_on\\nS 2!other_event other_event\\nS 7!it_goes_on_and_on\\nD 1\\nS 1!it_goes_on_and_on\\nS 2!other_event other_event\\nS 8!it_goes_on_and_on\\nD 1\\nS 1!it_goes_on_and_on\\nS 2!other_event other_event\\nS 9!it_goes_on_and_on\\nD 1\\nS 1!it_goes_on_and_on\\nS 2!other_event other_event\\nS 10!it_goes_on_and_on\\nD 1\\nS 1!it_goes_on_and_on\\nS 2!other_event other_event\\nS 11!it_goes_on_and_on\\nD 1\\nS 1!it_goes_on_and_"
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n') == 'Plot Error\\n3 Just A Dream\\nYes\\nPlot Error\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n\nassert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\nE the_dream_happened\\nS 1 business_as_usual\\nE bobby_died\\nS 2!business_as_usual stuff_happens\\nE jr_does_bad_things\\nS 3!business_as_usual stuff_happens\\nS 4!business_as_usual it_goes_on_and_on\\nD 4\\nS 2!business_as_usual\\nE the_dream_happened\\nS 3!business_as_usual stuff_happens\\nE jr_does_bad_things\\nS 4!business_as_usual stuff_happens\\nS 5!business_as_usual it_goes_on_and_on\\nD 4\\nS 3!business_as_usual\\nE the_dream_happened\\nS 4!business_as_usual stuff_happens\\nE jr_does_bad_things\\nS 5!business_as_usual stuff_happens\\nS 6!business_as_usual it_goes_on_and_on\\nD 4\\nS 4!business_as_usual\\nE the_dream_happened\\nS 5!business_as_usual stuff_happens\\nE jr_does_bad_things\\nS 6!business_as_usual stuff_happens\\nS 7!business_as_usual it_goes_on_and_on\\nD 4\\nS 5!business_as_usual\\nE the_dream_happened\\nS 6!business_as_usual stuff_happens\\nE jr_does_bad_things\\nS 7!business_as_usual stuff_happens\\nS 8!business_as_usual it_goes_on_and_on\\nD 4\\nS 6!business_as_usual\\nE the_dream_happened\\nS 7!business_as_usual stuff_happens\\nE jr_does_bad_things\\nS 8!business_as_usual stuff_happens\\nS 9!business_as_usual it_goes_on_and_on\\nD 4\\nS 7!business_as_usual\\nE the_dream_happened\\nS 8!business_as_usual stuff_happens\\nE jr_does_bad_things\\nS 9!business_as_usual stuff_happens\\nS 10!business_as_usual it_goes_on_and_on\\nD 4\\nS 8!business_as_usual\\nE the_dream_happened\\nS 9!business_as_usual stuff_happens\\nE jr_does_bad_things\\nS 10!business_as_usual stuff_happens\\nS 11!business_as_usual it_goes_on_and_on\\nD 4\\nS 9!business_as_usual\\nE the_dream_happened\\nS 10!business_as_usual stuff_happens\\nE jr_does_bad_things\\n"
    },
    {
        "number": 3570,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n\") == \"Yes\\n3 Just A Dream\\n\"\nassert solution(stdin=\"10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n\") == \"Plot Error\\nPlot Error\\nPlot Error\\n\"\n"
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod\\ntempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam,\\nquis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\\n\") == '\\n+------------------------+-+|\\n|exercitation ullamco    |^| |\\n|laboris nisi ut aliquip | | |\\n|ex ea commodo consequat |X| |\\n|Duis aute irure dolor in| | |\\n|reprehenderit in        |v| |\\n+------------------------+-+\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"24 5 8 7\") == \"    |^|\\n|laboris nisi ut aliquip|\\n|ex ea commodo consequat |\\n|Duis aute irure dolor in|\\n|reprehenderit in    \\n\""
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"24 5 8 7\") == \"def solution(stdin: str) -> str:\n    pass\"\n\nassert solution(\"24 5 8 7\") == \"def solution(stdin: str) -> str:\n    pass\"\n\nassert solution(\"24 5 8 7\") == \"def solution(stdin: str) -> str:\n    pass\"\n\nassert solution(\"24 5 8 7\") == \"def solution(stdin: str) -> str:\n    pass\"\n\nassert solution(\"24 5 8 7\") == \"def solution(stdin: str) -> str:\n    pass\"\n\nassert solution(\"24 5 8 7\") == \"def solution(stdin: str) -> str:\n    pass\"\n\nassert solution(\"24 5 8 7\") == \"def solution(stdin: str) -> str:\n    pass\"\n\nassert solution(\"24 5 8 7\") == \"def solution(stdin: str) -> str:\n    pass\"\n\nassert solution(\"24 5 8 7\") == \"def solution(stdin: str) -> str:\n    pass\"\n\nassert solution(\"24 5 8 7\") == \"def solution(stdin: str) -> str:\n    pass\"\n\nassert solution(\"24 5 8 7\") == \"def solution(stdin: str) -> str:\n    pass\"\n\nassert solution(\"24 5 8 7\") == \"def solution(stdin: str) -> str:\n    pass\"\n\nassert solution(\"24 5 8 7\") == \"def solution(stdin: str) -> str:\n    pass\"\n\nassert solution(\"24 5 8 7\") == \"def solution(stdin: str) -> str:\n    pass\"\n\nassert solution(\"24 5 8 7\") == \"def solution(stdin: str) -> str:\n    pass\"\n\nassert solution(\"24 5 8 7\") == \"def solution(stdin: str) -> str:\n    pass\"\n\nassert solution(\"24 5 8 7\") == \"def solution(stdin: str) -> str:\n    pass\"\n\nassert solution(\"24 5 8 7\") == \"def solution(stdin: str) -> str:\n    pass\"\n\nassert solution(\"24 5 8 7\") == \"def solution(stdin: str) -> str:\n    pass\"\n\nassert solution(\"24 5 8 7\") == \"def solution(stdin: str) -> str:\n    pass\"\n\nassert solution(\"24 5 8 7\") == \"def solution(stdin: str) -> str:\n    pass\"\n\nassert solution(\"24 5 8 7\") == \"def solution(stdin: str) -> str:\n    pass\"\n\nassert solution(\"24 5 8 7\") == \"def solution(stdin: str) -> str:\n    pass\"\n\nassert solution(\"24 5 8 7\") == \"def solution(stdin: str) -> str:\n    pass\"\n\nassert solution(\"24 5 8 7\") == \"def solution(stdin: str) -> str:\n    pass\"\n\nassert solution(\"24 5 8 7\") == \"def solution(stdin: str) -> str:\n    pass\"\n\nassert solution(\"24 5 8 7\") == \"def solution(stdin: str) -> str:\n    pass\"\n\nassert solution(\"24 5 8 7\") == \"def solution(stdin: str) -> str:\n    pass\"\n\nassert solution(\"24 5 8 7\") == \"def solution(stdin: str) -> str:\n    pass\"\n\nassert solution(\"24 5 8 7\") == \"def solution(stdin: str) -> str:\n    pass\"\n\nassert solution(\"24 5 8 7\") == \"def solution(stdin: str) -> str:\n    pass\"\n\nassert solution(\"24 5 8 7\") == \"def solution(stdin: str) -> str:\n    pass\"\n\nassert solution(\"24 5 8 7\") == \"def solution(stdin: str) -> str:\n    pass\"\n\nassert solution(\"24 5 8 7\") == \"def solution(stdin: str) -> str:\n    pass\"\n\nassert solution(\"24 "
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, but got: {solution(input())}\""
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do\\neiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\") == \"\\n+------------------------+-+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+-+\\n\""
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\") == \"exercitation ullamcolaboris nisiut aliquipex ea commodo consequatDuis aute irure dolorin reprehenderitin voluptate velitesse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\""
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, but got {solution(input())}\""
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, \"Incorrect output\"\n"
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"24 5 8 7\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do eiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\\nSample Output:\\n+------------------------+-+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+-+\\ndef solution(stdin: str) -> str:\\n    pass\\n\") == \"Exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum\""
    },
    {
        "number": 3571,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == expected_output, f\"Solution failed for input:\\n{stdin}\\nExpected output:\\n{expected_output}\""
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(INPUT) == OUTPUT, f\"Expected {OUTPUT}, got {solution(INPUT)}\"\n\nINPUT = \"\"\"\n4 10\n0 3 2 1\n3 0 1 3\n2 1 0 2\n1 3 2 0\n\"\"\"\nOUTPUT = \"possible\""
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n4 10\n0 3 2 1\n3 0 1 3\n2 1 0 2\n1 3 2 0\n''') == 'possible'"
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"possible\\n\""
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"possible\"\nassert solution(\"5 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"impossible\""
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"possible\\n\""
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"impossible\"\nassert solution(\"4 10\") == \"impossible\"\nassert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"possible\"\n\nfrom typing import List\n"
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    4 10\n    0 3 2 1\n    3 0 1 3\n    2 1 0 2\n    1 3 2 0\n    \"\"\"\n) == \"possible\"\n\nassert solution(\n    \"\"\"\n    5 10\n    0 3 2 1\n    3 0 1 3\n    2 1 0 2\n    1 3 2 0\n    4 10\n    0 3 2 1\n    3 0 1 3\n    2 1 0 2\n    1 3 2 0\n    4 10\n    0 3 2 1\n    3 0 1 3\n    2 1 0 2\n    1 3 2 0\n    \"\"\"\n) == \"impossible\""
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0') == 'possible'\n"
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n\") == \"possible\"\nassert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n\") == \"impossible\"\nassert solution(\"2 1 0 2\\n1 3 2 0\\n\") == \"impossible\"\nassert solution(\"2 1 0 2\\n1 3 2 0\\n4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n\") == \"possible\"\nassert solution(\"2 1 0 2\\n1 3 2 0\\n4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n4 10\\n0"
    },
    {
        "number": 3572,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"possible\"\n"
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1.00000000\"\nassert solution() == \"1.00000000\"\nassert solution() == \"1.00000000\"\nassert solution() == \"1.00000000\"\nassert solution() == \"1.00000000\""
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"1.00000000\"\n"
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"1.00000000\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin: str) == \"1.00000000\", \"The solution should return 1.00000000\""
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '1.00000000'"
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '1.00000000'\nprint(\"Success\")"
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1 1\\n1\\n2\\n\") == \"1.00000000\"\n"
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1 1\") == \"1.00000000\"\n\nfrom typing import List\nimport random"
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1 1\\n1\\n2\") == \"1.00000000\""
    },
    {
        "number": 3573,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    \"2 1 1\\n1\\n2\\n\"\n) == \"1.00000000\""
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(10) == 2\nassert solution(15) == 1\nassert solution(20) == 3\nassert solution(25) == 1\nassert solution(30) == 2"
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n5 4 3 3 2\\n3\\n1 2\\n1 1\\n2 4\") == \"2\\n1\\n3\"\nassert solution(\"5\\n5 4 3 3 2\\n3\\n1 2\\n1 1\\n2 4\\n5\\n5 4 3 3 2\\n3\\n1 2\\n1 1\\n2 4\") == \"2\\n1\\n3\"\nassert solution(\"5\\n5 4 3 3 2\\n3\\n1 2\\n1 1\\n2 4\\n5\\n5 4 3 3 2\\n3\\n1 2\\n1 1\\n2 4\") == \"2\\n1\\n3\"\nassert solution(\"5\\n5 4 3 3 2\\n3\\n1 2\\n1 1\\n2 4\\n5\\n5 4 3 3 2\\n3\\n1 2\\n1 1\\n2 4\") == \"2\\n1\\n3\"\nassert solution(\"5\\n5 4 3 3 2\\n3\\n1 2\\n1 1\\n2 4\\n5\\n5 4 3 3 2\\n3\\n1 2\\n1 1\\n2 4\") == \"2\\n1\\n3\""
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('test_solution.txt', 'r')) == \"\"\"2\n1\n3\"\"\""
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"1\\n3\\n2\\n\"\nassert solution(1) == \"1\\n\"\nassert solution(5) == \"1\\n3\\n3\\n2\\n\""
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n5 4 3 3 2\\n3\\n1 2\\n1 1\\n2 4\") == \"2\\n1\\n3\\n\"\nassert solution(\"5\\n5 4 3 3 2\\n3\\n1 2\\n1 1\\n2 4\\n\") == \"2\\n1\\n3\\n\""
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == sample_output, \"Your implementation is not correct. Please check the given examples and update the function definition.\""
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n5 4 3 3 2\\n3\\n1 2\\n1 1\\n2 4') == '2\\n1\\n3\\n'\nassert solution('5\\n5 4 3 3 2\\n3\\n1 2\\n1 1\\n2 4\\n') == '2\\n1\\n3\\n'"
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '2\\n1\\n3'"
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(None) == \"Not enough input\""
    },
    {
        "number": 3574,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=\"5\\n5 4 3 3 2\\n3\\n1 2\\n1 1\\n2 4\") == \"2\\n1\\n3\""
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == \"1\"\nassert solution(\"5 2\\n0 1\\n1 2\\n2 0\") == \"never meet\""
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 2\\n0 1\\n1 2\\n0 2') == '1'"
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == \"1\\n\"\nassert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == \"1\\n\"\nassert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == \"1\\n\"\nassert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == \"1\\n\"\nassert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == \"1\\n\"\nassert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == \"1\\n\"\nassert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == \"1\\n\"\nassert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == \"1\\n\"\nassert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == \"1\\n\"\nassert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == \"1\\n\"\nassert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == \"1\\n\"\nassert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == \"1\\n\"\nassert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == \"1\\n\"\nassert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == \"1\\n\"\nassert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == \"1\\n\"\nassert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == \"1\\n\"\nassert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == \"1\\n\"\nassert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == \"1\\n\"\nassert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == \"1\\n\"\nassert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == \"1\\n\"\nassert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == \"1\\n\"\nassert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == \"1\\n\"\nassert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == \"1\\n\"\nassert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == \"1\\n\"\nassert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == \"1\\n\"\nassert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == \"1\\n\"\nassert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == \"1\\n\"\nassert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == \"1\\n\"\nassert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == \"1\\n\"\nassert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == \"1\\n\"\nassert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == \"1\\n\"\nassert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == \"1\\n\"\nassert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == \"1\\n\"\nassert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == \"1\\n\"\nassert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == \"1\\n\"\nassert solution(\"3 2\\n0 1"
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n    3 2\n    0 1\n    1 2\n    0 2\n\"\"\") == \"1\\n\""
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 1"
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"never meet\", \"Expected output: never meet\""
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == \"1\"\nassert solution(\"3 2\\n0 1\\n1 2\\n0 3\") == \"0\"\nassert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == \"never meet\""
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 1\nprint(\"pass\")"
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3575,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n    3 2\n    0 1\n    1 2\n    0 2\n    ''') == '1'"
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 4 2\") == \"14500000001\"\n"
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 4 2') == '14500000001'\n"
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin: str) == \"14500000001\", \"The power to arrest\u2013to deprive a citizen of liberty\u2013must be used fairly, responsibly, and without bias.\""
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(r'''\n    5 4 2\n    ''') == '14500000001'"
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 4 2\") == \"14500000001\"\n\nimport math"
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 4 2\") == 14500000001"
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(5 4 2) == 14500000001"
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 4 2\") == \"14500000001\"\nassert solution(\"10 10 10\") == \"14500000001\"\nassert solution(\"10 5 5\") == \"7000000001\"\nassert solution(\"20 20 20\") == \"14500000001\"\nassert solution(\"10 20 10\") == \"29000000001\""
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3576,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"14500000001\", \"The output is incorrect.\""
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 4\\n3 7\\n1 6\\n2 6\") == \"0\\n1\\n1\\n2\""
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(sample_input) == ['0', '1', '1', '2']"
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 4\\n3 7\\n1 6\\n2 6\") == \"0\\n1\\n1\\n2\"\n"
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Solution incorrect. Output: {output()}, Input: {stdin()}\""
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 4\\n3 7\\n1 6\\n2 6\\n\") == \"0\\n1\\n1\\n2\\n\""
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == [\"0\", \"1\", \"1\", \"2\"]"
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 4\\n3 7\\n1 6\\n2 6\") == \"0\\n1\\n1\\n2\\n\""
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 4\\n3 7\\n1 6\\n2 6\\n\") == \"0\\n1\\n1\\n2\\n\""
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3577,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == [0, 1, 1, 2]\nassert solution() == [0, 1, 1, 2]\nassert solution() == [0, 1, 1, 2]"
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"3100\"\n"
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == \"3100\\n\""
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n    5 3\n    1 2 1000\n    2 3 1000\n    4 5 500\n    2\n    ''') == '3100\\n'"
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n\") == \"3100\""
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r')) == '3100'\n"
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 2 1000\\n2 3 1000\\n4 5 500\\n2') == '3100\\n'\nassert solution('5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2') == '3100\\n'\nassert solution('1 4 300\\n3 5 300\\n') == '2500\\n'\nassert solution('1 2 1000\\n2 3 1000\\n4 5 500\\n2') == '3100\\n'"
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == \"3100\"\n"
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3578,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n\") == \"3100\""
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\\n\") == \"5.250000000\\n\"\nassert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\\n\") == \"5.250000000\\n\"\nassert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\\n\") == \"5.250000000\\n\"\nassert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\\n\") == \"5.250000000\\n\"\nassert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\\n\") == \"5.250000000\\n\""
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13') == '5.250000000\\n5.000000000\\n4.000000000\\n3.000000000\\n2.000000000'"
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n    4 2\n    1 8\n    6 5\n    2 5\n    2 9\n    ''') == '5.250000000'\n"
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    4 2\n    1 8\n    6 5\n    2 5\n    2 9\n    7 13\n    \"\"\"\n) == \"5.250000000\\n\""
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"5.250000000\\n\""
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input) == output, f\"Test failed: Solution for {input} failed.\\nGot {output}, expected {output}\"\nfor i in range(5):\n    input = input()\n    output = solution(input)\n    print(f\"Case {i+1}: {output}\")"
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13') == '5.250000000\\n5.000000000'\nassert solution('4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\\n8 7') == '2.250000000\\n2.000000000'\nassert solution('4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\\n8 7\\n9 10') == '4.000000000\\n3.750000000'\nassert solution('4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\\n8 7\\n9 10\\n11 12') == '6.000000000\\n5.750000000'\nassert solution('4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\\n8 7\\n9 10\\n11 12\\n13 14') == '8.000000000\\n8.000000000'"
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13\") == \"5.250000000\""
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"5.250000000\", \"Test case 1 failed\""
    },
    {
        "number": 3579,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin: str) == \"5.250000000\\n\", \"Output should be 5.250000000\""
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '7\\n2\\n2\\n0\\n4', \"The solution is incorrect.\""
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3 1 2 1 1\\n5\\n1 3 1 2 3\\n1 2 1 2\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2\") == \"7\\n2\\n2\\n0\\n4\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3 1 2 1 1\\n5\\n1 3 1 2 3\\n1 2 1 2\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2\") == \"7\\n2\\n2\\n0\\n4\""
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 2 3 1 2 1 1\\n5\\n1 3 1 2 3\\n1 2 1 2\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2\\n') == '7\\n2\\n2\\n0\\n4\\n'\nassert solution('') == ''\nassert solution('7\\n2\\n2\\n0\\n4\\n') == '7\\n2\\n2\\n0\\n4\\n'"
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3 1 2 1 1\\n5\\n1 3 1 2 3\\n1 2 1 2\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2\") == \"7\\n2\\n2\\n0\\n4\"\n"
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7\\n1 2 3 1 2 1 1\\n5\\n1 3 1 2 3\\n1 2 1 2\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2\") == \"7\\n2\\n2\\n0\\n4\""
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7\\n1 2 3 1 2 1 1\\n5\\n1 3 1 2 3\\n1 2 1 2\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2\") == \"7\\n2\\n2\\n0\\n4\""
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3 1 2 1 1\\n5\\n1 3 1 2 3\\n1 2 1 2\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2\") == \"7\\n2\\n2\\n0\\n4\"\n"
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"\"\"2\"\"\""
    },
    {
        "number": 3580,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '7\\n2\\n2\\n0\\n4\\n', \"Test case not passed\""
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"32.6405451448\", \"Incorrect output\""
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, but got: {solution(input())}\""
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n4\n40 30 30 40 20 40 50 30 30 50\n0.0 0.0 0.45 0.45 0.1\n0.0 0.3 0.3 0.3 0.1\n0.3 0.0 0.3 0.3 0.1\n0.0 0.3 0.3 0.3 0.1\n0.2 0.2 0.2 0.2 0.2\n0.3 0.0 0.3 0.3 0.1\n0.0 0.8 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.8 0.0 0.0 0.0 0.2\n''') == '32.6405451448'\n"
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 32.6405451448, \"Expected 32.6405451448, but got {} instead\".format(solution())"
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '32.6405451448'"
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 32.6405451448, \"Your solution is not correct\""
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n40 30 30 40 20 40 50 30 30 50\\n0.0 0.0 0.45 0.45 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.2 0.2 0.2 0.2 0.2\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.8 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.8 0.0 0.0 0.0 0.2\\n\") == \"32.6405451448\\n\"\nprint(\"Test passed.\")"
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n40 30 30 40 20 40 50 30 30 50\\n0.0 0.0 0.45 0.45 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.2 0.2 0.2 0.2 0.2\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.8 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.8 0.0 0.0 0.0 0.2') == '32.6405451448'"
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('test_case.txt', 'r').read()) == '32.6405451448'"
    },
    {
        "number": 3581,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(solution_input) == solution_output, f\"Your solution is incorrect. Please provide the correct implementation of the `solution` function.\""
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n4\n2 1 4 3\n''') == '''\n2 3 4 1\n'''"
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n2 1 4 3\\n') == '2 3 4 1\\n'"
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n2 1 4 3\\n') == '2 3 4 1'\nassert solution('5\\n2 1 4 3 5\\n') == '2 3 4 1 5'\nassert solution('6\\n2 1 4 3 5 6\\n') == '2 3 4 1 5 6'\nassert solution('7\\n2 1 4 3 5 6 7\\n') == '2 3 4 1 5 6 7'\nassert solution('8\\n2 1 4 3 5 6 7 8\\n') == '2 3 4 1 5 6 7 8'\nassert solution('9\\n2 1 4 3 5 6 7 8 9\\n') == '2 3 4 1 5 6 7 8 9'\nassert solution('10\\n2 1 4 3 5 6 7 8 9 10\\n') == '2 3 4 1 5 6 7 8 9 10'\nassert solution('11\\n2 1 4 3 5 6 7 8 9 10 11\\n') == '2 3 4 1 5 6 7 8 9 10 11'\nassert solution('12\\n2 1 4 3 5 6 7 8 9 10 11 12\\n') == '2 3 4 1 5 6 7 8 9 10 11 12'\nassert solution('13\\n2 1 4 3 5 6 7 8 9 10 11 12 13\\n') == '2 3 4 1 5 6 7 8 9 10 11 12 13'\nassert solution('14\\n2 1 4 3 5 6 7 8 9 10 11 12 13 14\\n') == '2 3 4 1 5 6 7 8 9 10 11 12 13 14'\nassert solution('15\\n2 1 4 3 5 6 7 8 9 10 11 12 13 14 15\\n') == '2 3 4 1 5 6 7 8 9 10 11 12 13 14 15'\nassert solution('16\\n2 1 4 3 5 6 7 8 9 10 11 12 13 14 15 16\\n') == '2 3 4 1 5 6 7 8 9 10 11 12 13 14 15 16'\nassert solution('17\\n2 1 4 3 5 6 7 8 9 10 11 12 13 14 15 16 17\\n') == '2 3 4 1 5 6 7 8 9 10 11 12 13 14 15 16 17'\nassert solution('18\\n2 1 4 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18\\n') == '2 3 4 1 5 6 7 8 9 10 11 12 13 14 15 16 17 18'\nassert solution('19\\n2 1 4 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\\n') == '2 3 4 1 5 6 7 8 9 10 11 12 13 14 15 16 17 1"
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n\"4\\n2 1 4 3\"\n) == \"2 3 4 1\\n\""
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"2 3 4 1\""
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '2 3 4 1'"
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\na_1=2\\na_2=1\\na_3=4\\na_4=3\\n\") == \"2 3 4 1\\n\"\nassert solution(\"3\\na_1=1\\na_2=2\\na_3=3\\n\") == \"2 3 1 4\\n\"\nassert solution(\"5\\na_1=1\\na_2=2\\na_3=3\\na_4=4\\na_5=5\\n\") == \"2 3 1 4 5\\n\"\nassert solution(\"6\\na_1=1\\na_2=2\\na_3=3\\na_4=4\\na_5=5\\na_6=6\\n\") == \"2 3 1 4 5 6\\n\"\nassert solution(\"7\\na_1=1\\na_2=2\\na_3=3\\na_4=4\\na_5=5\\na_6=6\\na_7=7\\n\") == \"2 3 1 4 5 6 7\\n\"\nassert solution(\"8\\na_1=1\\na_2=2\\na_3=3\\na_4=4\\na_5=5\\na_6=6\\na_7=7\\na_8=8\\n\") == \"2 3 1 4 5 6 7 8\\n\"\nassert solution(\"9\\na_1=1\\na_2=2\\na_3=3\\na_4=4\\na_5=5\\na_6=6\\na_7=7\\na_8=8\\na_9=9\\n\") == \"2 3 1 4 5 6 7 8 9\\n\""
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n2 1 4 3\\n') == '2 3 4 1'\n"
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n   4\n    2 1 4 3\n    \"\"\"\n) == \"2 3 4 1\""
    },
    {
        "number": 3582,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n2 1 4 3\\n\") == \"2 3 4 1\"\nassert solution(\"5\\n2 2 3 4 1\\n\") == \"2 4 3 1 2\"\nassert solution(\"6\\n1 1 2 2 1\\n\") == \"2 1 2 1 1\"\nassert solution(\"7\\n1 1 2 1 2\\n\") == \"2 1 2 1 2\"\nassert solution(\"8\\n1 1 1 1 2\\n\") == \"2 1 2 1 1\"\nassert solution(\"9\\n1 1 1 1 1\\n\") == \"1 1 1 1 1\""
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"6\n1 2\n1 3\n2 4\n3 3\n3 2\n2 1\"\"\"\n) == \"7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\""
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\") == \"7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\"\nassert solution(\"5\\n1 2\\n1 3\\n2 4\\n3 3\\n2 1\") == \"7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\"\nassert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n2 1\") == \"7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\"\nassert solution(\"5\\n1 2\\n1 3\\n2 4\\n3 3\\n2 1\") == \"7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\"\n"
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\") == \"7.656854249492381\""
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n') == '7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n'\n"
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\") == \"7.656854249492381\"\n"
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n') == '7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n'\n\nimport math"
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n') == '7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n'\nassert solution('5\\n3 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 1\\n') == '2.857142857142857\\n2.857142857142857\\n2.857142857142857\\n2.857142857142857\\n2.857142857142857\\n2.857142857142857\\n'\nassert solution('4\\n3 1\\n2 2\\n2 3\\n1 2\\n1 3\\n') == '2.857142857142857\\n2.857142857142857\\n2.857142857142857\\n2.857142857142857\\n2.857142857142857\\n2.857142857142857\\n'\nassert solution('3\\n2 3\\n1 4\\n1 3\\n2 2\\n') == '2.857142857142857\\n2.857142857142857\\n2.857142857142857\\n2.857142857142857\\n2.857142857142857\\n2.857142857142857\\n'\nassert solution('2\\n1 3\\n1 4\\n2 3\\n') == '2.857142857142857\\n2.857142857142857\\n2.857142857142857\\n2.857142857142857\\n2.857142857142857\\n2.857142857142857\\n'\n"
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_str) == expected_output, f\"Test case failed. Input: {input_str}, Expected Output: {expected_output}, Output: {solution(input_str)}\""
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\") == \"7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\\n7.656854249492381\""
    },
    {
        "number": 3583,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_data) == expected_output, f\"Test case {i + 1} failed: expected output {expected_output}, got {solution(input_data)}\"\nfor i in range(5):\n    assert abs(solution(input_data) - expected_output) <= 10**-3, f\"Test case {i + 1} failed: relative error {abs(solution(input_data) - expected_output) / max(1, expected_output)} exceeds 10^{-3}\""
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2"
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n\") == 2\nassert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n\") == 2"
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == \"2\"\n"
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2"
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n    3 5 3\n    1 1\n    2 2\n    1 3\n    0 0\n    0 3\n    1 4\n    3 3\n    3 0\n    \"\"\"\n) == \"2\\n\""
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Solution does not match.\\nInput: {input()}\\nOutput: {output}\\n\""
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n\") == 2\nprint(\"All tests passed!\")"
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == 2, \"Expected output: 2\"\n"
    },
    {
        "number": 3584,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == \"2\"\nassert solution(\"3 5 3\\n2 1\\n1 1\\n1 3\\n1 2\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == \"3\"\nassert solution(\"3 5 3\\n1 1\\n1 1\\n2 2\\n1 3\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\") == \"3\""
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"9\"\n"
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 1') == '9'\n\nfrom math import isqrt"
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '9', \"The given code is not correct\""
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1\") == \"9\", \"Test 1 failed\"\nassert solution(\"3 2\") == \"9\", \"Test 2 failed\"\nassert solution(\"4 3\") == \"12\", \"Test 3 failed\"\nassert solution(\"5 4\") == \"9\", \"Test 4 failed\"\nassert solution(\"6 5\") == \"36\", \"Test 5 failed\"\nassert solution(\"7 6\") == \"9\", \"Test 6 failed\"\nassert solution(\"8 7\") == \"180\", \"Test 7 failed\"\nassert solution(\"9 8\") == \"1520\", \"Test 8 failed\"\nassert solution(\"10 9\") == \"21040\", \"Test 9 failed\"\nassert solution(\"11 10\") == \"345280\", \"Test 10 failed\"\nassert solution(\"12 11\") == \"420800\", \"Test 11 failed\"\nassert solution(\"13 12\") == \"601440\", \"Test 12 failed\"\nassert solution(\"14 13\") == \"8932160\", \"Test 13 failed\"\nassert solution(\"15 14\") == \"14451840\", \"Test 14 failed\"\nassert solution(\"16 15\") == \"246506880\", \"Test 15 failed\"\nassert solution(\"17 16\") == \"366000000\", \"Test 16 failed\"\nassert solution(\"18 17\") == \"519721600\", \"Test 17 failed\"\nassert solution(\"19 18\") == \"7599641600\", \"Test 18 failed\"\nassert solution(\"20 19\") == \"103958982400\", \"Test 19 failed\"\nassert solution(\"21 20\") == \"1539075641600\", \"Test 20 failed\"\nassert solution(\"22 21\") == \"2365125792000\", \"Test 21 failed\"\nassert solution(\"23 22\") == \"342409169792000\", \"Test 22 failed\"\nassert solution(\"24 23\") == \"4765411764800000\", \"Test 23 failed\"\nassert solution(\"25 24\") == \"765266286262400000\", \"Test 24 failed\"\nassert solution(\"26 25\") == \"136002658961312000000\", \"Test 25 failed\"\nassert solution(\"27 26\") == \"240562986240000000000\", \"Test 26 failed\"\nassert solution(\"28 27\") == \"39711060592320000000000\", \"Test 27 failed\"\nassert solution(\"29 28\") == \"6440782454160000000000000\", \"Test 28 failed\"\nassert solution(\"30 29\") == \"101900822896192000000000000\", \"Test 29 failed\"\nassert solution(\"31 30\") == \"160689882876416000000000000000\", \"Test 30 failed\"\nassert solution(\"32 31\") == \"25537347494400000000000000000000\", \"Test 31 failed\"\nassert solution(\"33 32\") == \"413114370176000000000000000000000\", \"Test 32 failed\"\nassert solution(\"34 33\") == \"726212516908"
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"9\\n\"\n"
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 1') == '9\\n'\n"
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1\") == \"9\\n\"\n"
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"9\", \"Incorrect output\"\n"
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1\") == 9, \"Test case 1 failed\""
    },
    {
        "number": 3585,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1\") == \"9\"\n"
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n2\\n3\\n5\\n7\\n12') == '12'\nprint('def solution(stdin: str) -> str:')\nprint('    pass')\n\nprint('def main(stdin: str) -> str:')\nprint('    result = 0')\nprint('    for line in stdin.splitlines():')\nprint('        line = line.strip()')\nprint('        if len(line) == 0:')\nprint('            continue')\nprint('        else:')\nprint('            try:')\nprint('                a, b, c, d = line.split()')\nprint('                if a + b + c == int(d):')\nprint('                    result = int(d)')\nprint('            except ValueError:')\nprint('                pass')\nprint('    return str(result)')\nprint('end')"
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected"
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Test failed\""
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r')) == '12\\n'\n"
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n2\\n3\\n5\\n7\\n12\") == \"12\"\nassert solution(\"2\\n7\\n12\\n3\\n5\") == \"12\"\nassert solution(\"1\\n5\\n3\\n7\\n9\") == \"1\"\nassert solution(\"1\\n5\\n3\\n7\\n9\\n5\") == \"1\"\nassert solution(\"1\\n5\\n3\\n7\\n9\\n5\\n1\") == \"1\""
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n2\\n3\\n5\\n7\\n12\") == \"12\"\nassert solution(\"10\\n\") == \"No solution\""
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n2\\n3\\n5\\n7\\n12\\n\") == \"12\\n\"\nassert solution(\"5\\n10\\n100\\n10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    5\n    2\n    3\n    5\n    7\n    12\n    \"\"\"\n) == \"12\\n\""
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2\\n3\\n5\\n7\\n12\\n\") == \"12\\n\"\nassert solution(\"1\\n-1\\n1\\n\") == \"1\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\"
    },
    {
        "number": 3586,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"12\""
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n00\\n01\\n10\\n110\\n111') == '11\\ndef solution(stdin: str) -> str: \\n    pass'"
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"11\", \"The solution is incorrect.\""
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"11\""
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n00\\n01\\n10\\n110\\n111\") == \"11\"\nassert solution(\"2\\n10\\n11\") == \"01\"\nassert solution(\"2\\n01\\n10\") == \"11\"\nassert solution(\"4\\n
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(taboo_strings) == expected_output, f\"Test case failed. Expected output: {expected_output}, actual output: {solution(taboo_strings)}\""
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('00\\n01\\n10\\n110\\n111\\n') == '11'\nprint(\"All tests passed.\")"
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n00\\n01\\n10\\n110\\n111\") == 11\n\nclass Solution:\n    def solution(self, N: int, s: List[str]) -> str:\n        # Find the longest clue string that does not contain s as a substring\n        for i in range(1, N):\n            prefix = ''.join([s[i-1]]*len(s[i-1]))\n            if prefix not in s:\n                break\n        else:\n            return -1\n        \n        # Find the smallest clue string\n        smallest_clue = None\n        for i in range(1, N):\n            for j in range(i):\n                if s[i] in s[j]:\n                    continue\n                if smallest_clue is None or len(s[i]) < len(s[smallest_clue]):\n                    smallest_clue = s[i]\n        \n        return smallest_clue"
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(Taboo is a popular party game. In this game one player, the Clue Giver, prompts his/her teammates to guess a keyword by giving clues. The Clue Giver is also given a list of taboo strings that must not appear in the clues. For example, if the keyword is \u201cBruce Lee\u201d, the famous kung-fu star, then the taboo strings may be \u201cactor\u201d, \u201ckung-fu\u201d, \u201cfighting\u201d, \u201cmartial arts\u201d and \u201cThe Game of Death\u201d (Bruce Lee\u2019s final film). The Clue Giver may try such clues as \u201cFist of Fury star\u201d and \u201cJeet Kune Do master\u201d to avoid the taboo. Taboo strings bring challenges and fun to the guessing game.\n\nShort clues are preferred, but now you are interested in the opposite: what is the longest clue? Given $N$ taboo strings $s_1, \\dots, s_ N$, what is the longest clue string $s$ such that none of $s_1, \\dots, s_ N$ appears as a substring of $s$? For simplicity, all taboo strings and your clue are represented as binary strings consisting only of 0\u2019s and 1\u2019s.\n\n-----Input-----\nThe first line contains an integer, $N$, the number of taboo strings ($1 \\leq N \\leq 15000$). The following $N$ lines each contains a non-empty binary string $s_ i$, for $1 \\leq i \\leq N$. The sum of lengths of $s_1, \\dots, s_ N$ will be at most $200000$.\n\n-----Output-----\nIf your clue can be arbitrarily long, output -1. Otherwise, output a line containing the longest binary string that does not contain $s_1, \\dots, s_ N$ as a substring. If there is more than one such longest string, output the one that is also smallest in lexicographic order.\n\n-----Examples-----\nSample Input:\n5\n00\n01\n10\n110\n111\nSample Output:\n11\n"
    },
    {
        "number": 3587,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n00\\n01\\n10\\n110\\n111\\n') == '11\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"100 250 320\""
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"100 250 320\\n\""
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n2\\n20 100\\n100 10\\n1\\n150 50\\n1\\n150 100\") == \"100 250 320\\n\""
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n2\\n20 100\\n100 10\\n1\\n150 50\\n1\\n150 100') == '100 250 320'"
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=None) == \"Output: \\n100 250 320\\n\", \"Test case 1 not passed\""
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n2\\n20 100\\n100 10\\n1\\n150 50\\n1\\n150 100\") == \"100 250 320\"\n"
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\"\nprint(solution)"
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"100 250 320\\n\""
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"3\\n2\\n20 100\\n100 10\\n1\\n150 50\\n1\\n150 100\\n\"\n) == \"100 250 320\\n\""
    },
    {
        "number": 3588,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n2\\n20 100\\n100 10\\n1\\n150 50\\n1\\n150 100\\n') == '100 250 320\\n'\nprint(solution('3\\n2\\n20 100\\n100 10\\n1\\n150 50\\n1\\n150 100\\n'))"
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '3 7 4 6 5 7 2 15 2'\nassert solution(\"50 100\") == '3 7 4 6 5 7 2 15 2'\nassert solution(\"100 50\") == '3 7 4 6 5 7 2 15 2'"
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"50 100\") == \"3 7 4 6 5 7 2 15 2\"\n"
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('50 100') == '3 7 4 6 5 7 2 15 2'\n"
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=input()) == \"\"\"\n3 7 4 6 5 7 2 15 2\n\"\"\""
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('50 100') == '3 7 4 6 5 7 2 15 2\\n'"
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(50, 100) == '3 7 4 6 5 7 2 15 2'"
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"50 100\") == \"3 7 4 6 5 7 2 15 2\\n\"\n"
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"50 100\") == \"3 7 4 6 5 7 2 15 2\\n\""
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"50 100\") == \"3 7 4 6 5 7 2 15 2\"\nassert solution(\"100 50\") == \"0\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"0 1\") == \"0\"\nassert solution(\"100 500\") == \"0\"\nprint(\"All test cases pass\")"
    },
    {
        "number": 3589,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"50 100\") == \"3 7 4 6 5 7 2 15 2\""
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '40.0000000000\\n'\n"
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7\") == 40.0000000000"
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 40.0000000000"
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7\") == 40.0000000000\n"
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"4\n0 0\n0 14\n15 14\n15 0\n4\n8 3\n4 6\n7 10\n11 7\"\"\") == \"40.0000000000\""
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 40.0\n"
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7\") == \"40.0000000000\""
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 40.0\n"
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n4\n0 0\n0 14\n15 14\n15 0\n4\n8 3\n4 6\n7 10\n11 7\n''') == 40.0000000000, \"The minimum cost to cut B from A should be 40.0000000000\""
    },
    {
        "number": 3590,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7\") == 40.0000000000\nassert solution(\"5\\n0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7\") == 24.0000000000\nassert solution(\"6\\n0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7\") == 15.0000000000\nassert solution(\"7\\n0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7\") == 15.0000000000\nassert solution(\"8\\n0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7\") == 12.0000000000"
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n3\\n2 1 3\") == \"1\\n1\\n\"\nassert solution(\"2\\n1\\n3\") == \"1\\n2\\n\""
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == '''\n"
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n3\\n2 1 3\") == \"1\\n1\\n\""
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '''1\n1\n"
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"Output:\\n\\n1\\n1\\n\\nExplanation:\\n\\n1. Photo 1: Alice is taller than you and Bob is standing on your right.\\n2. Photo 2: Alice is standing on your left and Bob is taller than you.\\n3. Photo 3: Alice is standing on your right and Bob is standing on your left.\\n4. Photo 4: Alice is standing on your left and Bob is standing on your right.\\n5. Photo 5: Alice is standing on your right and Bob is standing on your left.\\n\""
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n3\\n2 1 3\\n\") == \"1\\n1\\n\"\nassert solution(\"2\\n2\\n2\\n\") == \"2\\n2\\n\"\nassert solution(\"1\\n4\\n1 2 3 4\\n\") == \"1\\n1\\n\"\nassert solution(\"2\\n4\\n2 1 2 2\\n\") == \"2\\n2\\n\"\nassert solution(\"1\\n2\\n3\\n\") == \"1\\n1\\n\"\nassert solution(\"2\\n2\\n2\\n\") == \"2\\n2\\n\""
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n    1\n    3\n    2 1 3\n''') == '''\n1\n1\n'''"
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1\\n3\\n2 1 3') == '1\\n1\\n'\nassert solution('2\\n3\\n2 1 3') == '1\\n'\nassert solution('1\\n2\\n3\\n2 1 3') == '1\\n'"
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n3\\n2 1 3\") == \"1\\n1\\n\"\nassert solution(\"1\\n2\\n3\\n4\") == \"2\\n2\\n\"\n"
    },
    {
        "number": 3591,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"725.85 1.71 2.38\") == \"199 162\"\n"
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"\"\"199 162\"\"\""
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('725.85 1.71 2.38') == '199 162\\n'\n"
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"725.85 1.71 2.38\") == \"199 162\"\nassert solution(\"650.00 5.78 1.05\") == \"0 0\"\nassert solution(\"1000.00 500.00 1000.00\") == \"100 0\""
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"725.85 1.71 2.38\") == \"199 162\\n\", \"The solution is not as expected.\"\nassert solution(\"725.85 1.71 2.37\") == \"None\\n\", \"The solution is not as expected.\"\nassert solution(\"725.85 1.71 2.39\") == \"None\\n\", \"The solution is not as expected.\"\nassert solution(\"725.85 1.71 2.34\") == \"None\\n\", \"The solution is not as expected.\"\nassert solution(\"725.85 1.71 2.38\") == \"199 162\\n\", \"The solution is not as expected.\"\nassert solution(\"725.85 1.71 2.35\") == \"None\\n\", \"The solution is not as expected.\"\nassert solution(\"725.85 1.71 2.35\") == \"None\\n\", \"The solution is not as expected.\"\nassert solution(\"725.85 1.71 2.38\") == \"199 162\\n\", \"The solution is not as expected.\"\nassert solution(\"725.85 1.71 2.39\") == \"199 162\\n\", \"The solution is not as expected.\"\nassert solution(\"725.85 1.71 2.36\") == \"199 162\\n\", \"The solution is not as expected.\""
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"725.85 1.71 2.38\") == \"199 162\", \"Output must be '199 162'.\""
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"725.85 1.71 2.38\") == \"199 162\"\nassert solution(\"550.00 100.00 200.00\") == \"None\"\nassert solution(\"1000.00 200.00 1000.00\") == \"None\"\nassert solution(\"550.00 500.00 300.00\") == \"None\"\nassert solution(\"1000.00 500.00 1000.00\") == \"None\"\nassert solution(\"0.00 100.00 200.00\") == \"None\"\nassert solution(\"100.00 200.00 0.00\") == \"None\"\nassert solution(\"100.00 0.00 100.00\") == \"None\"\nassert solution(\"500.00 500.00 0.00\") == \"None\"\nassert solution(\"0.00 0.00 0.00\") == \"None\""
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"725.85 1.71 2.38\") == \"199 162\"\n"
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == output, f\"Test failed: \\nExpected output: {output}\\nActual output: {solution(stdin)}\""
    },
    {
        "number": 3592,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('725.85 1.71 2.38') == '199 162'\n"
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0\") == \"16\\n\"\n"
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == '16\\n'  # Corrected output\n\nfrom typing import List"
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0\") == \"16\\n\""
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0') == 16\n"
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"16\", \"Incorrect output\""
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''5 3\n2 1 -1\n1 3 2\n0 2 3\n2 1 1\n3 3 0''') == '16'"
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0\\n\") == 16, \"Incorrect Output\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0\") == \"16\"\nprint(\"All test cases passed successfully!\")"
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0\") == \"16\"\nassert solution(\"5 4\\n1 1 -1\\n3 2 3\\n2 2 1\\n1 3 0\\n-1 1 2\") == \"56\"\nassert solution(\"5 4\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0\") == \"16\"\nassert solution(\"5 3\\n-1 2 1\\n2 1 1\\n0 0 1\") == \"4\"\nassert solution(\"5 3\\n2 1 1\\n1 1 1\\n0 0 1\") == \"4\""
    },
    {
        "number": 3593,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(r\"5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0\") == \"16\""
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\nO 4\") == \"2 1 4\"\nassert solution(\"2\\nE 5\\nO 3\\nO 2\") == \"1 2 1\"\nassert solution(\"3\\nI 3\\nO 3\\nI 1\") == \"1 1 2\""
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\nO 4\") == \"2 1 4\"\nassert solution(\"2\\nO 1\") == \"1 2 4\"\nassert solution(\"3\\nO 10\") == \"10 3 1\"\nassert solution(\"3\\nE 10\") == \"10 3 2\"\nassert solution(\"4\\nI 15\") == \"15 4 1\""
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\nO 4\") == \"2 1 4\"\n\nassert solution(\"2\\nE 6\\nO 8\") == \"2 1 4\"\n\nassert solution(\"4\\nE 12\\nO 16\\nI 20\") == \"4 2 1\""
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\nO 4\\nSample Output:\\n2 1 4\") == \"2 1 4\""
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\nO 4\\n\") == \"2 1 4\\n\"\nassert solution(\"2\\nO 4\\nO 10\\n\") == \"4 2 1\\n\"\nassert solution(\"3\\nE 1\\nI 1\\n\") == \"1 1 1\\n\"\nassert solution(\"3\\nE 10\\nO 1\\n\") == \"10 1 1\\n\"\nassert solution(\"4\\nO 15\\nO 20\\nI 15\\n\") == \"20 15 15\\n\"\nassert solution(\"5\\nE 3\\nI 10\\nO 8\\n\") == \"20 8 5\\n\""
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n1\nO 4\n''') == '''\n2 1 4\n'''"
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\nO 4\\n\") == \"2 1 4\\n\", \"The solution is incorrect.\""
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=r'1\\nO 4\\nSample Input:\\n1\\nO 4\\nSample Output:2 1 4\\n\\ndef solution(stdin: str) -> str:\\n    pass') == '2 1 4'\nassert solution(stdin=r'1\\nE 2\\nIngmariay 1\\nOdd 4\\nEven 2\\nIngmariay 1\\nIngmariay 4\\nEven 2\\nIngmariay 1\\nIngmariay 4\\nEven 2\\nIngmariay 1\\nIngmariay 4\\nEven 2\\nIngmariay 1\\nIngmariay 4\\nEven 2\\nIngmariay 1\\nIngmariay 4\\nEven 2\\nIngmariay 1\\nIngmariay 4\\nEven 2\\nIngmariay 1\\nIngmariay 4\\nEven 2\\nIngmariay 1\\nIngmariay 4\\nEven 2\\nIngmariay 1\\nIngmariay 4\\nEven 2\\nIngmariay 1\\nIngmariay 4\\nEven 2\\nIngmariay 1\\nIngmariay 4\\nEven 2\\nIngmariay 1\\nIngmariay 4\\nEven 2\\nIngmariay 1\\nIngmariay 4\\nEven 2\\nIngmariay 1\\nIngmariay 4\\nEven 2\\nIngmariay 1\\nIngmariay 4\\nEven 2\\nIngmariay 1\\nIngmariay 4\\nEven 2\\nIngmariay 1\\nIngmariay 4\\nEven 2\\nIngmariay 1\\nIngmariay 4\\nEven 2\\nIngmariay 1\\nIngmariay 4\\nEven 2\\nIngmariay 1\\nIngmariay 4\\nEven 2\\nIngmariay 1\\nIngmariay 4\\nEven 2\\nIngmariay 1\\nIngmariay 4\\nEven 2\\nIngmariay 1\\nIngmariay 4\\nEven 2\\nIngmariay 1\\nIngmariay 4\\nEven 2\\nIngmariay 1\\nIngmariay 4\\nEven 2\\nIngmariay 1\\nIngmariay 4\\nEven 2\\nIngmariay 1\\nIngmariay 4\\nEven 2\\nIngmariay 1\\nIngmariay 4\\nEven 2\\nIngmariay 1\\nIngmariay 4\\nEven 2\\nIngmariay 1\\nIngmariay 4\\nEven 2\\nIngmariay 1\\nIngmariay 4\\nEven 2\\nIngmariay 1\\nIngmariay 4\\nEven 2\\nIngmariay 1\\nIngmariay 4\\nEven 2\\nIngmariay 1\\nIngmariay 4\\nEven 2\\nIngmariay 1\\nIngmariay 4\\nEven 2\\nIngmariay 1\\nIngmariay 4\\nEven 2\\nIngmariay 1\\nIngmariay 4\\nEven 2\\nIngmariay 1\\nIngmariay 4\\nEven 2\\nIngmariay 1\\nIngmariay 4\\nEven 2\\nIngmariay 1\\nIngmariay 4\\nEven 2\\nIngmariay 1\\nIngmariay 4\\nEven 2\\nIngmariay 1\\nIngmariay 4\\nEven 2\\nIngmariay 1\\nIngmariay 4\\nEven 2\\nIngmariay 1\\nIngmariay 4\\nEven 2\\nIngmariay 1\\n"
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2 1 4\""
    },
    {
        "number": 3594,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\nO 4\") == \"2 1 4\"\nassert solution(\"2\\nE 1\\nO 3\\nE 3\\nO 2\") == \"2 4 1\"\nassert solution(\"3\\nI 10\\nI 12\\nE 16\\nI 6\") == \"2 10 6\"\nassert solution(\"4\\nO 5\\nO 10\\nE 8\\nE 2\") == \"2 8 2\"\n"
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == expected_output, f\"Expected: {expected_output}\\nGot: {solution(sample_input)}\""
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\") == \"4\\n\"\nassert solution(\"1 8\\n1 2 3 4\\n1 3 10 5\\n1 4 5 6\\n1 5 1 7\") == \"1\\n\"\nassert solution(\"2 1\\n2 3 4 5\\n2 4 5 6\\n2 5 6 7\\n2 6 7 8\") == \"1\\n\""
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\") == \"4\\n\""
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\") == \"4\\n\""
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input) == expected_output, f\"Test failed: {solution(input)}!= {expected_output}\" for input, expected_output in zip(input_list, expected_output_list)"
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\") == \"4\""
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=input()) == '4'\nprint('All test cases passed')"
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\") == 4, \"The output should be 4.\"\n"
    },
    {
        "number": 3595,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\") == \"4\"\nassert solution(\"10 10\\n0 0 100 0\\n100 100 100 100\\n100 100 100 100\\n0 0 0 0\") == \"1\""
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '9.585073'\n"
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"-99.99 99.99 9999.99\") == \"9.585073\\n\"\nassert solution(\"99 9 999 9999\") == \"9.585073\\n\"\nassert solution(\"9 99 9 99 9\") == \"9.585073\\n\"\n"
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == \"9.585073\", \"The output is incorrect.\""
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"9.585073\""
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input) == output, f\"Test failed for input {input}, expected output {output}\" for input, output in [\n    (\n        \"-99.99 99.99 9999.99\",\n        9.585073,\n    ),\n    (\n        \"99 9 999 9999\",\n        9.585073,\n    ),\n    (\n        \"9 99 9 99 9\",\n        9.585073,\n    ),\n]"
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n-99.99 99.99 9999.99\n99 9 999 9999\n9 99 9 99 9\n\"\"\") == \"9.585073\"\n\nassert solution(\"\"\"\n-0.5 0.5 1\n1 1 1\n\"\"\") == \"0.207995\"\n\nassert solution(\"\"\"\n0 1 2 3 4\n5 6 7 8 9\n\"\"\") == \"0.371085\"\n\nassert solution(\"\"\"\n1 2 3 4 5\n6 7 8 9 10\n\"\"\") == \"0.258052\""
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n-99.99 99.99 9999.99\n99 9 999 9999\n9 99 9 99 9\n\"\"\"\n) == \"9.585073\""
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"12.34 56.78 9012.34 987654321\") == \"9.585073\"\n"
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('-99.99 99.99 9999.99\\n99 9 999 9999\\n9 99 9 99 9') == '9.585073\\ndef solution(stdin: str) -> str:\n    pass'\n"
    },
    {
        "number": 3596,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"99.99 99.99 9999.99\\n99 9 999 9999\") == \"9.585073\"\n"
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(solution_1) == \"12.74\"\nassert solution(solution_2) == \"127.83\""
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"12.74 127.83\"\nassert solution(stdin) == \"12.74 127.83\"\nassert solution(stdin) == \"12.74 127.83\"\nassert solution(stdin) == \"12.74 127.83\"\nassert solution(stdin) == \"12.74 127.83\"\nassert solution(stdin) == \"12.74 127.83\"\nassert solution(stdin) == \"12.74 127.83\"\nassert solution(stdin) == \"12.74 127.83\"\nassert solution(stdin) == \"12.74 127.83\"\nassert solution(stdin) == \"12.74 127.83\"\nassert solution(stdin) == \"12.74 127.83\"\nassert solution(stdin) == \"12.74 127.83\"\nassert solution(stdin) == \"12.74 127.83\"\nassert solution(stdin) == \"12.74 127.83\"\nassert solution(stdin) == \"12.74 127.83\"\nassert solution(stdin) == \"12.74 127.83\"\nassert solution(stdin) == \"12.74 127.83\"\nassert solution(stdin) == \"12.74 127.83\"\nassert solution(stdin) == \"12.74 127.83\"\nassert solution(stdin) == \"12.74 127.83\"\nassert solution(stdin) == \"12.74 127.83\"\nassert solution(stdin) == \"12.74 127.83\"\nassert solution(stdin) == \"12.74 127.83\"\nassert solution(stdin) == \"12.74 127.83\"\nassert solution(stdin) == \"12.74 127.83\"\nassert solution(stdin) == \"12.74 127.83\"\nassert solution(stdin) == \"12.74 127.83\"\nassert solution(stdin) == \"12.74 127.83\"\nassert solution(stdin) == \"12.74 127.83\"\nassert solution(stdin) == \"12.74 127.83\"\nassert solution(stdin) == \"12.74 127.83\"\nassert solution(stdin) == \"12.74 127.83\"\nassert solution(stdin) == \"12.74 127.83\"\nassert solution(stdin) == \"12.74 127.83\"\nassert solution(stdin) == \"12.74 127.83\"\nassert solution(stdin) == \"12.74 127.83\"\nassert solution(stdin) == \"12.74 127.83\"\nassert solution(stdin) == \"12.74 127.83\"\nassert solution(stdin) == \"12.74 127.83\"\nassert solution(stdin) == \"12.74 127.83\"\nassert solution(stdin) == \"12.74 127.83\"\nassert solution(stdin) == \"12.74 127.83\"\nassert solution(stdin) == \"12.74 127.83\"\nassert solution(stdin) == \"12.74 127.83\"\nassert solution(stdin) == \"12.74 127.83\"\nassert solution(stdin) == \"12.74 127.83\"\nassert solution(stdin) == \"12.74 127.83\"\nassert solution(stdin) == \"12.74 127.83\"\nassert solution(stdin) == \"12.74 127.8"
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"impossible\"\nassert round(12.74) == 12783\nassert round(127.83) == 12783\nassert round(12783.00) == 12783\n\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('20 30\\n2 10 20 2 24 18 28 10') == '12.74 127.83'"
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin: str) == \"12.74 127.83\""
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected, f\"Expected '{expected}', got '{solution(stdin)}'\""
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"20 30\\n2 10 20 2 24 18 28 10\") == \"12.74 127.83\""
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"12.74 127.83\""
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"20 30\\n2 10 20 2 24 18 28 10\") == \"12.74 127.83\\n\"\n\nimport math"
    },
    {
        "number": 3597,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"20 30\\n2 10 20 2 24 18 28 10\") == \"12.74 127.83\"\nassert solution(\"10 10\\n2 10 20 2 24 18 28 10\") == \"impossible\"\nassert solution(\"20 30\\n2 10 20 2 24 18 28 10\\n2 20 24 2 20 20 24 20 10\\n2 10 18 2 24 28 28 24 10\") == \"12.74 127.83\"\nassert solution(\"10 10\\n2 10 20 2 24 18 28 10\\n2 20 24 2 20 20 24 20 10\\n2 10 18 2 24 28 28 24 10\") == \"impossible\"\n"
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '0116'\n"
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=\"2\\n110\\n6\\n\") == \"0116\\n\"\n\nassert solution(stdin=\"3\\n001\\n123\\n456\\n789\\n\") == \"001456789\\n\"\n\nassert solution(stdin=\"4\\n123\\n456\\n789\\n1011\\n\") == \"1234567891011\\n\""
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n110\\n6\") == \"0116\"\n"
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '0116'"
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"0116\\n\", \"Output is incorrect.\""
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"0116\", \"Output should be 0116\""
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=input()) == \"0116\""
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n110\\n6\\n\") == \"0116\"\n"
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n2\n110\n6\n\"\"\"\n) == \"0116\"\n"
    },
    {
        "number": 3598,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\n110\\n6\\n') == '0116\\n'"
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 3\\n4 4 4\") == \"0 2 4\"\n"
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 3\\n4 4 4\") == \"0 2 4\""
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 3\\n4 4 4\") == [\"0\", \"2\", \"4\"]\n"
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 3\\n4 4 4\") == \"0 2 4\""
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"0 2 4\""
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 3\\n4 4 4\") == \"0 2 4\\n\"\nprint(\"All tests passed!\")\n"
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"0 2 4\""
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 3\\n4 4 4\") == \"0 2 4\""
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 3\\n4 4 4\") == \"0 2 4\""
    },
    {
        "number": 3599,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('8 3\\n4 4 4') == \"0 2 4\"\nassert solution('6 5\\n3 4 2') == \"1 3 4\"\nassert solution('7 6\\n4 5 3') == \"2 3 5\"\nassert solution('5 4\\n3 2 1') == \"2 3 3\"\nassert solution('6 5\\n1 2 3') == \"2 3 5\""
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\") == \"impossible\"\nassert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\") == \"impossible\"\nassert solution(\"1\\n10\\n1 1 2 3 4 5\\n2 1 3 4 5\\n3 2 4 5\\n4 3 5\\n5 4\\n6 5\\n7 6\\n8 7\\n9 8\\n10 9\") == \"possible\""
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n    4\n    7\n    2 2 4\n    3 1 3 5\n    1 2\n    2 1 5\n    4 2 6 4 7\n    2 5 7\n    2 6 5\n''') == 'impossible'\n\nassert solution('''\n    4\n    7\n    2 2 4\n    3 1 3 5\n    1 2\n    2 1 5\n    4 2 6 4 7\n    2 5 7\n    2 6 5\n''') == 'possible'"
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\") == \"impossible\"\nassert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\\n5\") == \"impossible\"\nassert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\\n6 3 4\") == \"impossible\""
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5') == 'impossible\\n'\nassert solution('8\\n20\\n1 1 2\\n2 3 4\\n3 5 6\\n4 7 8\\n5 9 10\\n6 11 12\\n7 13 14\\n8 15 16\\n9 17 18\\n10 19 20') == 'impossible\\n'\nassert solution('3\\n2\\n1 2\\n2 1 1') == 'possible\\n'"
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"impossible\""
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Test failed: solution({input()}) returned '{solution(input())}', expected '{expected}'\"\n"
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\") == \"impossible\""
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\") == \"impossible\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\") == \"possible\\n\""
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == \"impossible\\n\", \"sample_input should be impossible\"\nassert solution(sample_output) == \"possible\\n\", \"sample_output should be possible\""
    },
    {
        "number": 3600,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\") == \"impossible\""
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2\\n0 0\\n0 10\\n2\\n4 10\\n4 0') == '4.00000'\n"
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=input()) == \"4.00000\""
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"4.00000\", \"Your solution is incorrect.\""
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"4.00000\"\n"
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 0\\n0 10\\n2\\n4 10\\n4 0\") == \"4.00000\\nimpossible\"\nassert solution(\"0 0\\n0 10\\n2\\n4 0\\n5 0\") == \"impossible\"\nassert solution(\"1 1\\n1 0\\n2\\n3 2\\n2 1\\n2 2\\n1 3\") == \"3.00000\"\nassert solution(\"1 1\\n1 0\\n2\\n3 2\\n2 1\\n2 2\\n1 3\\n4 5\\n5 4\") == \"3.00000\""
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 4.0"
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 0\\n0 10\\n2\\n4 10\\n4 0\") == 4.0\nassert solution(\"0 0\\n0 10\\n3\\n4 10\\n4 0\") == 4.0\nassert solution(\"0 0\\n0 10\\n3\\n4 10\\n4 1\") == 1.0\nassert solution(\"0 0\\n0 10\\n2\\n4 10\\n4 1\") == 0.0\nassert solution(\"0 0\\n0 10\\n2\\n4 10\\n4 9\") == -1.0\nassert solution(\"0 0\\n0 10\\n2\\n4 10\\n4 100\") == \"impossible\"\nassert solution(\"0 0\\n0 10\\n2\\n4 10\\n4 0\\n5 0\\n6 0\") == 0.0\nassert solution(\"0 0\\n0 10\\n2\\n4 10\\n4 0\\n5 0\\n6 1\") == 0.0\nassert solution(\"0 0\\n0 10\\n2\\n4 10\\n4 0\\n5 0\\n6 10\") == 0.0\nassert solution(\"0 0\\n0 10\\n2\\n4 10\\n4 0\\n5 0\\n6 100\") == \"impossible\""
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n    2\n    0 0\n    0 10\n    2\n    4 10\n    4 0\n    ''') == '4.00000'\n"
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"4.00000\""
    },
    {
        "number": 3601,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_str) == output_str, \"Test failed for solution(stdin: str) -> str: Solution should return the shortest possible delivery time given their two paths.\""
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 1, \"Incorrect solution\"\nprint(\"All test cases passed successfully.\")"
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Test failed\"\nprint(\"Test passed\")"
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"The solution is incorrect. Expected: {output}, Got: {solution(input())}\"\n"
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\\n') == 1\nassert solution('4 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\\n') == 0\nassert solution('3 2 4\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\\n') == 0\nassert solution('3 3 4\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\\n') == 0\nassert solution('3 3 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\\n') == 1\nassert solution('4 3 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\\n') == 1\nassert solution('5 3 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\\n') == 1\nassert solution('5 4 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\\n') == 0"
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2') == '1'\nassert solution('4 1\\n2 2\\n3 3\\n1 1') == '0'\nassert solution('3 2 6\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2') == '0'\nassert solution('3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 4') == '0'"
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\") == \"1\"\nassert solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 3\") == \"0\""
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\\n') == '1'\nassert solution('3 2 5\\n1 1\\n1 2\\n1 3\\n3 1\\n3 2\\n') == '0'\nassert solution('3 2 5\\n1 1\\n1 3\\n2 1\\n2 3\\n') == '1'\nassert solution('3 2 5\\n1 1\\n1 3\\n2 1\\n2 2\\n') == '0'\nassert solution('3 2 5\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n') == '1'"
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3, 2, 5) == 1\nassert solution(1, 1) == 0\nassert solution(3, 1, 3) == 1\nassert solution(3, 3, 2) == 1"
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\") == 1\nassert solution(\"4 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\") == 0"
    },
    {
        "number": 3602,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\\n\") == 1"
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\") == \"5 3\\n1 0\\n2 4\\n\"\nassert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n\") == \"impossible\""
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"5 6\n0 1\n0 2\n1 3\n2 3\n1 2\n4 3\"\"\") == \"5 3\\n1 0\\n2 4\""
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n        5 6\n        0 1\n        0 2\n        1 3\n        2 3\n        1 2\n        4 3''') == '''\n        5 3\n        1 0\n        2 4'''"
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\") == \"5 3\\n1 0\\n2 4\"\nassert solution(\"5 6\\n1 2\\n4 3\\n0 1\\n0 2\\n1 3\") == \"impossible\"\n"
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\") == \"5 3\\n1 0\\n2 4\\nimpossible\\n\"\nassert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n\") == \"5 3\\n1 0\\n2 4\\nimpossible\\n\"\nassert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n0 1\\n1 2\\n\") == \"5 3\\n1 0\\n2 4\\nimpossible\\n\"\nassert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n0 1\\n1 2\\n0 3\\n2 4\\n\") == \"impossible\\n\"\nassert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n0 1\\n1 2\\n0 3\\n2 4\\n0 1\\n2 3\\n\") == \"impossible\\n\"\nassert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n0 1\\n1 2\\n0 3\\n2 4\\n0 1\\n2 3\\n0 2\\n3 4\\n\") == \"impossible\\n\""
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, \"Test case not passed.\""
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\") == \"5 3\\n1 0\\n2 4\"\nassert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n7 5\") == \"impossible\"\nassert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n7 5\\n10 8\") == \"impossible\"\nassert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n7 5\\n10 8\\n9 7\") == \"impossible\"\nassert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n7 5\\n10 8\\n9 7\\n11 9\") == \"impossible\""
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(None) == \"impossible\"\n"
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '5 3\\n1 0\\n2 4'"
    },
    {
        "number": 3603,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\") == \"5 3\\n1 0\\n2 4\\n\"\nassert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n\") == \"5 3\\n1 0\\n2 4\\n\"\nassert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n\\n\") == \"impossible\"\nassert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n0 3\\n1 1\\n2 2\\n3 4\\n4 5\\n5 6\\n\") == \"5 3\\n1 0\\n2 4\\n\"\nassert solution(\"10 12\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n0 3\\n1 1\\n2 2\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\") == \"10 12\\n1 0\\n2 4\\n\""
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Test failed: {output}\\nGot: {solution(input())}\""
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Expected output: {output()}, got: {solution(input())}\""
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"2\\n1 2\\n\"\nassert solution(stdin) == \"3\\n1 2 3\\n\"\nassert solution(stdin) == \"4\\n1 2 3 4\\n\"\nassert solution(stdin) == \"5\\n1 2 3 4 5\\n\"\nassert solution(stdin) == \"6\\n1 2 3 4 5 6\\n\"\nassert solution(stdin) == \"7\\n1 2 3 4 5 6 7\\n\"\nassert solution(stdin) == \"8\\n1 2 3 4 5 6 7 8\\n\"\nassert solution(stdin) == \"9\\n1 2 3 4 5 6 7 8 9\\n\"\nassert solution(stdin) == \"10\\n1 2 3 4 5 6 7 8 9 10\\n\""
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 1\\n0 0\\n0 1\\n1 0\\n1 1\\n\") == \"2\\n1 2\""
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('tests/test_data.txt', 'r')) == '''\n2\n1 2\n'''"
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 1\\n0 0\\n0 1\\n1 0\\n1 1\") == \"2\\n1 2\\n\""
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"2\\n1 2\"\n"
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 1\\n0 0\\n0 1\\n1 0\\n1 1\") == \"2\\n1 2\""
    },
    {
        "number": 3604,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}, Explanation: {explanation}\"\n"
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 1, \"Test Case 1\""
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"The given code is not correct. Please check your solution.\"\n"
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('10 2\\n1 3 5 7 9 11 13 15 17 16') == '1\\n'"
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 2\\n1 3 5 7 9 11 13 15 17 16\") == \"1\"\nassert solution(\"10 2\\n1 3 4 6 8 10 12 14 16 18\") == \"2\"\nassert solution(\"10 2\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\") == \"3\"\nassert solution(\"10 2\\n1 2 2 3 3 3 4 4 4 4 5 5 5 6 6 6 7 7 7 8 8 8 9 9 9 10 10 10 11 11 11 12 12 12 13 13 13 14 14 14 15 15 15 16 16 16 17 17 17 18 18 18 19 19 19 20 20 20 21 21 21 22 22 22 23 23 23 24 24 24 25 25 25 26 26 26 27 27 27 28 28 28 29 29 29 30 30 30 31 31 31 32 32 32 33 33 33 34 34 34 35 35 35 36 36 36 37 37 37 38 38 38 39 39 39 40 40 40 41 41 41 42 42 42 43 43 43 44 44 44 45 45 45 46 46 46 47 47 47 48 48 48 49 49 49 50 50 50 51 51 51 52 52 52 53 53 53 54 54 54 55 55 55 56 56 56 57 57 57 58 58 58 59 59 59 60 60 60 61 61 61 62 62 62 63 63 63 64 64 64 65 65 65 66 66 66 67 67 67 68 68 68 69 69 69 70 70 70 71 71 71 72 72 72 73 73 73 74 74 74 75 75 75 76 76 76 77 77 77 78 78 78 79 79 79 80 80 80 81 81 81 82 82 82 83 83 83 84 84 84 85 85 85 86 86 86 87 87 87 88 88 88 89 89 89 90 90 90 91 91 91 92 92 92 93 93 93 94 94 94 95 95 95 96 96 96 97 97 97 98 98 98 99 99 99 100\") == \"4\""
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 2\\n1 3 5 7 9 11 13 15 17 16\") == \"1\\n\"\n"
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Solution failed. Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 2\\n1 3 5 7 9 11 13 15 17 16\") == \"1\"\nassert solution(\"10 3\\n1 2 4 6 8 10 12 14 16 18 20\") == \"1\"\nassert solution(\"10 4\\n1 2 3 5 7 9 11 13 15 17 19 21\") == \"1\"\nassert solution(\"10 5\\n1 2 3 4 6 8 10 12 14 16 18 20 22\") == \"1\"\nassert solution(\"10 6\\n1 2 3 4 5 7 9 11 13 15 17 19 21 23\") == \"1\"\nassert solution(\"10 7\\n1 2 3 4 5 6 8 10 12 14 16 18 20 22 24\") == \"1\"\nassert solution(\"10 8\\n1 2 3 4 5 6 7 9 11 13 15 17 19 21 23 25\") == \"1\"\nassert solution(\"10 9\\n1 2 3 4 5 6 7 8 10 12 14 16 18 20 22 24 26\") == \"1\"\nassert solution(\"10 10\\n1 2 3 4 5 6 7 8 9 11 13 15 17 19 21 23 25 27\") == \"1\"\nassert solution(\"10 11\\n1 2 3 4 5 6 7 8 9 10 12 14 16 18 20 22 24 26 28\") == \"1\"\nassert solution(\"10 12\\n1 2 3 4 5 6 7 8 9 10 11 13 15 17 19 21 23 25 27 29\") == \"1\"\nassert solution(\"10 13\\n1 2 3 4 5 6 7 8 9 10 11 12 14 16 18 20 22 24 26 28 30\") == \"1\"\nassert solution(\"10 14\\n1 2 3 4 5 6 7 8 9 10 11 12 13 15 17 19 21 23 25 27 29 31\") == \"1\"\nassert solution(\"10 15\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 16 18 20 22 24 26 28 30 32\") == \"1\"\nassert solution(\"10 16\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 17 19 21 23 25 27 29 31 33\") == \"1\"\nassert solution(\"10 17\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 18 20 22 24 26 28 30 32 34\") == \"1\"\nassert solution(\"10 18\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 19 21 23 25 27 29 31 33 35"
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 2\\n1 3 5 7 9 11 13 15 17 16\") == \"1\""
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(b\"10 2\\n1 3 5 7 9 11 13 15 17 16\\n\") == \"1\\n\"\nassert solution(b\"10 3\\n1 3 5 7 9 11 13 15 17 16\\n\") == \"1\\n\"\nassert solution(b\"10 4\\n1 3 5 7 9 11 13 15 17 16\\n\") == \"2\\n\"\nassert solution(b\"10 5\\n1 3 5 7 9 11 13 15 17 16\\n\") == \"2\\n\"\nassert solution(b\"10 6\\n1 3 5 7 9 11 13 15 17 16\\n\") == \"2\\n\"\nassert solution(b\"10 7\\n1 3 5 7 9 11 13 15 17 16\\n\") == \"3\\n\"\nassert solution(b\"10 8\\n1 3 5 7 9 11 13 15 17 16\\n\") == \"3\\n\"\nassert solution(b\"10 9\\n1 3 5 7 9 11 13 15 17 16\\n\") == \"4\\n\"\nassert solution(b\"10 10\\n1 3 5 7 9 11 13 15 17 16\\n\") == \"5\\n\"\nassert solution(b\"10 11\\n1 3 5 7 9 11 13 15 17 16\\n\") == \"6\\n\"\nassert solution(b\"10 12\\n1 3 5 7 9 11 13 15 17 16\\n\") == \"7\\n\"\nassert solution(b\"10 13\\n1 3 5 7 9 11 13 15 17 16\\n\") == \"8\\n\"\nassert solution(b\"10 14\\n1 3 5 7 9 11 13 15 17 16\\n\") == \"8\\n\"\nassert solution(b\"10 15\\n1 3 5 7 9 11 13 15 17 16\\n\") == \"9\\n\"\nassert solution(b\"10 16\\n1 3 5 7 9 11 13 15 17 16\\n\") == \"9\\n\"\nassert solution(b\"10 17\\n1 3 5 7 9 11 13 15 17 16\\n\") == \"10\\n\"\nassert solution(b\"10 18\\n1 3 5 7 9 11 13 15 17 16\\n\") == \"10\\n\"\nassert solution(b\"10 19\\n1 3 5 7 9 11 13 15 17 16\\n\") == \"11\\n\"\nassert solution(b\"10 20\\n1 3 5 7 9 11 13 15 17 16\\n\") == \"12\\n\"\nassert solution(b\"10 21\\n1 3 5 7 9 11 13 15 17 16\\n\") == \"13\\n\"\nassert solution(b\"10 22\\n1 3 5 7 9 11 13 15 17 16\\n\") == \"13\\n\"\nassert solution(b\"10 23\\n1 3 5 7 9 11 13 15 17 16\\n\") == \"14\\n\"\nassert solution(b\"10 24\\n1 3"
    },
    {
        "number": 3605,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\""
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4') == '7 4\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, \"Output does not match the expected output\""
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\\n10 9\\n3 7\\n\") == \"7 4\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Your solution is incorrect. Please see the example given in the problem statement.\""
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"ACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\\n10 9\\n3 7\") == \"7 4\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4') == '7 4\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\") == \"7 4\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Expected output not found\"\n\nassert solution(\"7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\") == \"7 4\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Expected output not found\"\n\nassert solution(\"7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\") == \"7 4\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Expected output not found\"\n\nassert solution(\"7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\") == \"7 4\\ndef solution(stdin: str) -> str:\\n    pass\\n\", \"Expected output not found\""
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4') == '7 4\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"ACDBB\") == \"7 4\"\nassert solution(\"5 6\\n8 9\\n4 13\\n1 10\\n7 4\") == \"7 4\""
    },
    {
        "number": 3606,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('ACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4') == '7 4\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n"
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"DONE\""
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n10 LET A = 1\n20 PRINT \"HELLO THERE \"\n30 PRINTLN A\n40 LET A = A + 1\n50 IF A <= 5 THEN GOTO 20\n60 PRINTLN \"DONE\"\n''') == '''\nHELLO THERE 1\nHELLO THERE 2\nHELLO THERE 3\nHELLO THERE 4\nHELLO THERE 5\nDONE\n'''"
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(b\"\"\"\n10 LET A = 1\n20 PRINT \"HELLO THERE \"\n30 PRINTLN A\n40 LET A = A + 1\n50 IF A <= 5 THEN GOTO 20\n60 PRINTLN \"DONE\"\n\"\"\") == \"\"\"\nHELLO THERE 1\nHELLO THERE 2\nHELLO THERE 3\nHELLO THERE 4\nHELLO THERE 5\nDONE\n\"\"\"\n"
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n\""
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n\""
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n\""
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\"\n\nassert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A > 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\"\n\nassert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A - 1\\n50 IF A >= 0 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\"\n\nassert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A * 2\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\"\n\nassert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A / 2\\n50 IF A >= 0 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\"\n\nassert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + A\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\"\n\nassert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A * A\\n50 IF A >= 0 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\"\n\nassert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A - A\\n50 IF A >= 0 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\"\n\nassert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + A\\n50 IF A >= 0 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\"\n\nassert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A - A\\n"
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n\"\n\nassert solution(\"1 LET A = 1\\n2 PRINT \\\"HELLO THERE \\\"\\n3 PRINTLN A\\n4 PRINT \\\"ONE\\\"\\n5 LET B = A\\n6 PRINT \\\"TWO\\\"\\n7 LET C = B + 1\\n8 PRINT \\\"THREE\\\"\\n9 PRINT \\\"FOUR\\\"\\n10 PRINT \\\"FIVE\\\"\\n\") == \"HELLO THERE ONE\\nTWO\\nTHREE\\nFOUR\\nFIVE\\n\"\n\nassert solution(\"1 LET A = 2147483647\\n2 PRINT A\\n3 IF A <= 0 THEN PRINT \\\"ZERO\\\"\\n4 LET B = A + 1\\n5 PRINT B\\n6 IF B <= 0 THEN PRINT \\\"ZERO\\\"\\n7 IF B <= 1 THEN PRINT \\\"ONE\\\"\\n8 LET C = B + 1\\n9 PRINT C\\n10 IF C <= 1 THEN PRINT \\\"ONE\\\"\\n11 PRINT \\\"THREE\\\"\\n\") == \"2147483647\\n2147483647\\nONE\\n2147483648\\nTHREE\\n\"\n\nassert solution(\"1 LET A = 1\\n2 PRINT \\\"HELLO THERE \\\"\\n3 IF A > 5 THEN PRINT \\\"DONE\\\" ELSE PRINT \\\"I AM GOING HERE\\\" END IF\\n\") == \"HELLO THERE I AM GOING HERE\\nDONE\\n\"\n\nassert solution(\"1 LET A = 2\\n2 PRINT \\\"HELLO THERE \\\"\\n3 IF A > 5 THEN PRINT \\\"DONE\\\" ELSE PRINT \\\"I AM GOING HERE\\\" END IF\\n\") == \"HELLO THERE I AM GOING HERE\\nDONE\\n\""
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Solution does not match expected output.\\nInput: {input()}\\nExpected Output: {expected_output}\\nSolution: {solution(input())}\""
    },
    {
        "number": 3607,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('10 LET A = 1\\n20 PRINT \"HELLO THERE \" \\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \"DONE\"') == 'HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n'\n\nassert solution('10 LET A = 1\\n20 PRINT \"HELLO THERE \" \\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \"DONE\"') == 'HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n'"
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3 0 1\\n0 1\") == 3"
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 3, \"Expected 3, got {}\".format(solution(3))  # expected 3, got 3"
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 3\nassert solution(5) == 10\nassert solution(8) == 56\nassert solution(10) == 2701"
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"3\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n3 0 1\\n0 1') == 3\nassert solution('3\\n3 0 1\\n0 1\\n4 0 1\\n0 1') == 6"
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n3 0 1\\n0 1\") == 3"
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n3 0 1\\n0 1\") == 3\n\nfrom functools import lru_cache\n\n@lru_cache(maxsize=None)\n"
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n3 0 1\\n0 1') == '3\\n'\nassert solution('5\\n3 0 1\\n1 1') == '2\\n'\nassert solution('7\\n3 0 1\\n2 2') == '5\\n'\nassert solution('8\\n3 0 1\\n3 3') == '10\\n'\nassert solution('9\\n3 0 1\\n4 4') == '23\\n'\nassert solution('10\\n3 0 1\\n5 5') == '50\\n'\nassert solution('11\\n3 0 1\\n6 6') == '85\\n'\nassert solution('12\\n3 0 1\\n7 7') == '144\\n'\nassert solution('13\\n3 0 1\\n8 8') == '233\\n'\nassert solution('14\\n3 0 1\\n9 9') == '376\\n'\nassert solution('15\\n3 0 1\\n10 10') == '676\\n'\nassert solution('16\\n3 0 1\\n11 11') == '1348\\n'\nassert solution('17\\n3 0 1\\n12 12') == '2584\\n'\nassert solution('18\\n3 0 1\\n13 13') == '4706\\n'\nassert solution('19\\n3 0 1\\n14 14') == '8174\\n'\nassert solution('20\\n3 0 1\\n15 15') == '14361\\n'\nassert solution('21\\n3 0 1\\n16 16') == '28722\\n'\nassert solution('22\\n3 0 1\\n17 17') == '58444\\n'\nassert solution('23\\n3 0 1\\n18 18') == '129886\\n'\nassert solution('24\\n3 0 1\\n19 19') == '279772\\n'\nassert solution('25\\n3 0 1\\n20 20') == '559546\\n'\nassert solution('26\\n3 0 1\\n21 21') == '1169230\\n'\nassert solution('27\\n3 0 1\\n22 22') == '2359398\\n'\nassert solution('28\\n3 0 1\\n23 23') == '4863234\\n'\nassert solution('29\\n3 0 1\\n24 24') == '10441516\\n'\nassert solution('30\\n3 0 1\\n25 25') == '22265776\\n'\nassert solution('31\\n3 0 1\\n26 26') == '46768904\\n'\nassert solution('32\\n3 0 1\\n27 27') == '97793388\\n'\nassert solution('33\\n3 0 1\\n28 28') == '195586776\\n'\nassert solution('34\\n3 0 1\\n29 29') == '391173554\\n'\nassert solution('35\\n3 0 1\\n30 30') == '813422436\\n'\nassert solution('36\\n3 0 1\\n31 31') == '1545158158\\n'\nassert solution('37\\n3 0 1\\n32 32') == '3098327236\\n'\nassert solution('38\\n3 0 1\\n33 33') =="
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"3\""
    },
    {
        "number": 3608,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n3 0 1\\n0 1') == 3"
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"LLRRRRLL\""
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"LLRRRRLL\\n\""
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=open('input.txt', 'r')) == \"impossible\""
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"LLRRRRLL\""
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"LLRRRRLL\", \"Expected 'LLRRRRLL', got '{}'\".format(solution())"
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"LLRRRRLL\"\n"
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\") == \"LLRRRRLL\"\nassert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n\") == \"impossible\""
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"LLRRRRLL\"\nassert solution(input()) == \"impossible\""
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\") == \"LLRRRRLL\\nimpossible\\n\"\nassert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\") == \"LLRRRRLL\\nimpossible\\n\"\nassert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\") == \"LLRRRRLL\\nimpossible\\n\"\nassert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\") == \"LLRRRRLL\\nimpossible\\n\""
    },
    {
        "number": 3609,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_data) == expected_output, f\"Test case {test_case} failed\"\n"
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '1\\n2011\\n'\n"
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input) == output, \"Expected output: {}\\nGot: {}\\n\""
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == # solution code here"
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1\\n2011\""
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=input()) == \"1\\n2011\"\nprint(\"Correct\")"
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1009 2011\\n1017 2011\") == \"1\\n2011\"\nassert solution(\"1011 2011\\n1017 2012\\n1013 2012\\n1014 2012\\n1015 2013\\n1016 2013\\n1017 2013\") == \"2\\n2011\\n2012\\n2013\"\nassert solution(\"1009 2011\\n1017 2012\\n1013 2012\\n1014 2012\\n1015 2013\\n1016 2013\\n1017 2014\") == \"3\\n2011\\n2012\\n2013\\n2014\"\n"
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"1\\n2011\"\nassert solution() == \"2\\n1009\\n1017\""
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n1009 2011\\n1017 2011\") == \"1\\n2011\"\nassert solution(\"2\\n1009 2011\\n1017 2011\") == \"1\\n2011\"\nassert solution(\"1\\n1009 2011\\n1017 2011\\n1001 1999\") == \"2\\n1999\"\nassert solution(\"2\\n1009 2011\\n1017 2011\\n1001 1999\") == \"2\\n1999\"\nassert solution(\"3\\n1009 2011\\n1017 2011\\n1001 1999\\n1002 2001\\n1003 2002\") == \"1\\n2001\""
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1009 2011\\n1017 2011\") == \"1\\n2011\"\n"
    },
    {
        "number": 3610,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\n1009 2011\\n1017 2011') == '1\\n2011'\nassert solution('3\\n1009 2011\\n1017 2011\\n1009 2012') == '1\\n2011\\n2012'"
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3\\n') == '0 3\\n', 'The output is incorrect.'"
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n4 4\n0 1 100\n0 2 100\n1 3 100\n2 3 100\n0 3\n''') == '0 3\\n'\n"
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == sample_output, f\"Sample Input: {sample_input}\\nSample Output: {sample_output}\""
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3') == ['0 3']"
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3\") == \"0 3\\n\", \"Please implement the solution as specified.\""
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"0 3\\n\"\n"
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3\\n') == ['0 3']\nassert solution('5 6\\n0 1 100\\n1 2 100\\n2 3 100\\n3 4 100\\n4 5 100\\n5 6 100\\n6 7 100\\n7 8 100\\n8 9 100\\n9 10 100\\n10 11 100\\n11 12 100\\n12 13 100\\n13 14 100\\n14 15 100\\n15 16 100\\n16 17 100\\n17 18 100\\n18 19 100\\n19 20 100\\n20 21 100\\n21 22 100\\n22 23 100\\n23 24 100\\n24 25 100\\n25 26 100\\n26 27 100\\n27 28 100\\n28 29 100\\n29 30 100\\n30 31 100\\n31 32 100\\n32 33 100\\n33 34 100\\n34 35 100\\n35 36 100\\n36 37 100\\n37 38 100\\n38 39 100\\n39 40 100\\n40 41 100\\n41 42 100\\n42 43 100\\n43 44 100\\n44 45 100\\n45 46 100\\n46 47 100\\n47 48 100\\n48 49 100\\n49 50 100\\n50 51 100\\n51 52 100\\n52 53 100\\n53 54 100\\n54 55 100\\n55 56 100\\n56 57 100\\n57 58 100\\n58 59 100\\n59 60 100\\n60 61 100\\n61 62 100\\n62 63 100\\n63 64 100\\n64 65 100\\n65 66 100\\n66 67 100\\n67 68 100\\n68 69 100\\n69 70 100\\n70 71 100\\n71 72 100\\n72 73 100\\n73 74 100\\n74 75 100\\n75 76 100\\n76 77 100\\n77 78 100\\n78 79 100\\n79 80 100\\n80 81 100\\n81 82 100\\n82 83 100\\n83 84 100\\n84 85 100\\n85 86 100\\n86 87 100\\n87 88 100\\n88 89 100\\n8"
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3\\n\") == \"0 3\\n\", \"The output should be '0 3'.\"\n\nassert solution(\"4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3\\n\") == \"0 3\\n\", \"The output should be '0 3'.\"\n\nassert solution(\"4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3\\n\") == \"0 3\\n\", \"The output should be '0 3'.\"\n\nassert solution(\"4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3\\n\") == \"0 3\\n\", \"The output should be '0 3'.\"\n\nassert solution(\"4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3\\n\") == \"0 3\\n\", \"The output should be '0 3'.\"\n\nassert solution(\"4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3\\n\") == \"0 3\\n\", \"The output should be '0 3'.\"\n\nassert solution(\"4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3\\n\") == \"0 3\\n\", \"The output should be '0 3'.\"\n\nassert solution(\"4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3\\n\") == \"0 3\\n\", \"The output should be '0 3'.\"\n\nassert solution(\"4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3\\n\") == \"0 3\\n\", \"The output should be '0 3'.\"\n\nassert solution(\"4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3\\n\") == \"0 3\\n\", \"The output should be '0 3'.\"\n\nassert solution(\"4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3\\n\") == \"0 3\\n\", \"The output should be '0 3'.\"\n\nassert solution(\"4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3\\n\") == \"0 3\\n\", \"The output should be '0 3'.\"\n\nassert solution(\"4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3\\n\") == \"0 3\\n\", \"The output should be '0 3'.\""
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == [\"0 3\"]"
    },
    {
        "number": 3611,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n4 4\n0 1 100\n0 2 100\n1 3 100\n2 3 100\n0 3\n''') == '0 3'\n\nassert solution('''\n4 4\n0 1 100\n0 2 100\n1 3 100\n2 3 100\n0 4\n''') == '0 4'\n\nassert solution('''\n4 4\n0 1 100\n0 2 100\n1 3 100\n2 3 100\n0 5\n''') == '0 5'\n\nassert solution('''\n4 4\n0 1 100\n0 2 100\n1 3 100\n2 3 100\n0 6\n''') == '0 6'\n\nassert solution('''\n4 4\n0 1 100\n0 2 100\n1 3 100\n2 3 100\n0 7\n''') == '0 7'\n\nassert solution('''\n4 4\n0 1 100\n0 2 100\n1 3 100\n2 3 100\n0 8\n''') == '0 8'"
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\""
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    '''\n2.0 10.0\n3 3 0 0\n2001 1000 100\n1001 10000 200\n100 0 0\n'''\n) == '20'\n"
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"20\"\n"
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"20\\n\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"20\", \"Your solution is incorrect.\"\n"
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '20'"
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0') == '20', 'The correct solution is not provided.'"
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"20\", \"Incorrect output\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == 20, f\"The output should be {20}, but it is {solution(sample_input)}\""
    },
    {
        "number": 3612,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\\n\"\nassert solution(\"3.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\\n\"\nassert solution(\"10.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\\n\"\nassert solution(\"10.0 5.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\\n\"\nassert solution(\"10.0 15.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"140\\n\""
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 4\n"
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n6\n0 2 3 4 5 6\n0 1 3 4 5 6\n1 6 5 4 2 1\n2 6 5 3 2 1\n1 1 2 3 4 6\n2 1 2 3 4 5\n\"\"\") == 4"
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\") == \"4\"\nassert solution(\"7\\n0 1 2 3 4 5\\n0 1 2 3 4 5\\n0 1 2 3 4 5\\n0 1 2 3 4 5\\n0 1 2 3 4 5\") == \"1\"\n"
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5') == 4, 'Test 1 failed'\n\nassert solution('6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\\n') == 4, 'Test 2 failed'\n\nassert solution('6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n"
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5') == '4'\n"
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"4\""
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\\n\") == \"4\"\n"
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''6\n0 2 3 4 5 6\n0 1 3 4 5 6\n1 6 5 4 2 1\n2 6 5 3 2 1\n1 1 2 3 4 6\n2 1 2 3 4 5''') == '4'\nassert solution('''6\n1 2 3 4 5 6\n0 1 3 4 5 6\n2 6 5 4 2 1\n0 2 3 5 6 1\n1 6 5 4 2 1\n2 1 2 3 4 5''') == '4'\nassert solution('''6\n1 2 3 4 5 6\n0 1 3 4 5 6\n2 6 5 4 2 1\n0 2 3 5 6 1\n1 6 5 4 2 1\n2 1 2 3 4 5''') == '4'\nassert solution('''6\n1 2 3 4 5 6\n0 1 3 4 5 6\n2 6 5 4 2 1\n0 2 3 5 6 1\n1 6 5 4 2 1\n2 1 2 3 4 5''') == '4'\nassert solution('''6\n0 2 3 4 5 6\n0 1 3 4 5 6\n1 6 5 4 2 1\n2 6 5 3 2 1\n1 1 2 3 4 6\n2 1 2 3 4 5''') == '4'\nassert solution('''6\n0 2 3 4 5 6\n0 1 3 4 5 6\n1 6 5 4 2 1\n2 6 5 3 2 1\n1 1 2 3 4 6\n2 1 2 3 4 5''') == '4'\nassert solution('''6\n0 2 3 4 5 6\n0 1 3 4 5 6\n1 6 5 4 2 1\n2 6 5 3 2 1\n1 1 2 3 4 6\n2 1 2 3 4 5''') == '4'\nassert solution('''6\n0 2 3 4 5 6\n0 1 3 4 5 6\n1 6 5 4 2 1\n2 6 5 3 2 1\n1 1 2 3 4 6\n2 1 2 3 4 5''') == '4'\nassert solution('''6\n0 2 3 4 5 6\n0 1 3 4 5 6\n1 6 5 4 2 1\n2 6 5 3 2 1\n1 1 2 3 4 6\n2 1 2 3 4 5''') == '4'\nassert solution('''6\n0 2 3 4 5 6\n0 1 3 4 5 6\n1 6 5 4 2 1\n2 6 5 3 2 1\n1 1 2 3 4 6\n2 1 2 3 4 5''') == '4'\nassert solution('''6\n0 2 3 4 5 6\n0 1 3 4 5 6\n1 6 5 4 2 1\n2 6 5 3 2 1\n1 1 2 3 4 6\n2 1 2 3 4 5''') == '4'\nassert solution('''6\n0 2 3 4 5 6\n0 1 3 4 5 6\n1 6 5 4 2 1\n2 6 5 3 2 1\n1 1 2 3 4 6\n2 1 2 3 4 5''') == '4'\nassert solution('''6\n0 2 3 4 5 6\n0 1 3 4 5 6\n1"
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"4\\n\""
    },
    {
        "number": 3613,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\") == \"4\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7') == 4"
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Output: 4\""
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7') == '4\\n4'"
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\") == \"4\\n\"\nassert solution(\"1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n4\") == \"4\\n\"\nassert solution(\"1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n5\") == \"4\\n\"\nassert solution(\"1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n6\") == \"4\\n\"\nassert solution(\"1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n7\") == \"4\\n\""
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 4"
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n4\\n\""
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == \"4\\n4\"\n"
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"4\\n4\\n\", \"Expected output: 4\\n\""
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n4\n1 1\n1 2 3 4\n2 3 4 5\n3 4 5 6\n4 5 6 7\n''') == '4\\n'"
    },
    {
        "number": 3614,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n\") == \"4\"\nprint(\"All Tests Passed\")"
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    5\n    1.0 1.0\n    3.1 1.0\n    1.0 3.1\n    3.1 3.1\n    4.2 3.1\n    \"\"\"\n) == \"6\\n\""
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\") == \"6\\n\""
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\") == 6\nassert solution(\"2\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\") == 2\nassert solution(\"3\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\") == 6\nassert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\") == 6"
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n\") == 6, \"The solution should return 6\"\nassert solution(\"6\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n\") == 6, \"The solution should return 6\"\nassert solution(\"7\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n\") == 11, \"The solution should return 11\"\nassert solution(\"8\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n\") == 14, \"The solution should return 14\"\nassert solution(\"9\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n\") == 18, \"The solution should return 18\"\nassert solution(\"10\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n\") == 22, \"The solution should return 22\""
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1') == 6, 'The solution is incorrect.'"
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\") == 6, \"The function should return 6 for the given input.\""
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n\") == 6\n"
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n\") == \"6\\n\"\nassert solution(\"6\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n\") == \"6\\n\"\nassert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n7.0 1.0\\n\") == \"6\\n\"\nassert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n7.0 1.0\\n\") == \"6\\n\"\nassert solution(\"6\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n7.0 1.0\\n\") == \"6\\n\""
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 6, \"Expected 6, but got {}\".format(solution(3))"
    },
    {
        "number": 3615,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\") == 6, \"Expected output 6, got {}\".format(solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\"))"
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2\\n2\\n2\") == \"5\"\n"
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2\\n2\\n2\") == 5\nassert solution(\"10\\n100\\n50\\n100\\n100\") == 25"
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"5\", \"Please modify the function to return the correct output.\"\n"
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(None) == \"No solution found\""
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"5\""
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"5\""
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3\n2\n2\n2) == 5\nassert solution(4\n2\n2\n2) == 4\nassert solution(5\n2\n2\n2) == 6\n\nfrom typing import List"
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 5, \"The solution is incorrect\""
    },
    {
        "number": 3616,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == 5"
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Expected '{output}', got '{solution(input())}'\""
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 3\\n2 2 2 1\") == \"1 1\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"1 2\\n1 1\") == \"2 0\\ndef solution(stdin: str) -> str:\\n    pass\"\nassert solution(\"2 1\\n1 1\") == \"1 1\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 3\\n2 2 2 1\") == \"1 1\"\nassert solution(\"2 1\") == \"2 1\""
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 3\\n2 2 2 1\") == \"1 1\"\nassert solution(\"1 3\\n5 1 1 10\") == \"3 2\"\nassert solution(\"1 3\\n2 2 2 2\") == \"1 1\"\nassert solution(\"1 3\\n2 1 2 2\") == \"1 1\"\nassert solution(\"1 3\\n2 2 2 10\") == \"3 2\"\nassert solution(\"1 3\\n1 1 1 1\") == \"1 1\""
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 3\\n2 2 2 1') == '1 1\\n'\nprint('All tests passed!')"
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"pikemaneasy.py\", \"r\").read()) == \"1 1\""
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"1 1\""
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n1 3\n2 2 2 1\n''') == '''\n1 1\n"
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '1 1'\n"
    },
    {
        "number": 3617,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == expected, f\"Solution {solution} does not match expected output {expected}\"\n"
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == \"10\"\nassert solution(5) == \"25\"\nassert solution(7) == \"29\""
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 10"
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\") == 10"
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"1\") == \"10\""
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"10\"\n"
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '10'"
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(b'1') == '10'"
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n\") == \"10\"\nassert solution(\"10\\n\") == \"10\"\nassert solution(\"11\\n\") == \"10\"\nassert solution(\"12\\n\") == \"10\"\nassert solution(\"13\\n\") == \"10\"\nassert solution(\"14\\n\") == \"10\"\nassert solution(\"15\\n\") == \"10\"\nassert solution(\"16\\n\") == \"10\"\nassert solution(\"17\\n\") == \"10\"\nassert solution(\"18\\n\") == \"10\"\nassert solution(\"19\\n\") == \"10\"\nassert solution(\"20\\n\") == \"10\"\nassert solution(\"21\\n\") == \"10\"\nassert solution(\"22\\n\") == \"10\"\nassert solution(\"23\\n\") == \"10\"\nassert solution(\"24\\n\") == \"10\"\nassert solution(\"25\\n\") == \"10\"\nassert solution(\"26\\n\") == \"10\"\nassert solution(\"27\\n\") == \"10\"\nassert solution(\"28\\n\") == \"10\"\nassert solution(\"29\\n\") == \"10\"\nassert solution(\"30\\n\") == \"10\"\nassert solution(\"31\\n\") == \"10\"\nassert solution(\"32\\n\") == \"10\"\nassert solution(\"33\\n\") == \"10\"\nassert solution(\"34\\n\") == \"10\"\nassert solution(\"35\\n\") == \"10\"\nassert solution(\"36\\n\") == \"10\"\nassert solution(\"37\\n\") == \"10\"\nassert solution(\"38\\n\") == \"10\"\nassert solution(\"39\\n\") == \"10\"\nassert solution(\"40\\n\") == \"10\"\nassert solution(\"41\\n\") == \"10\"\nassert solution(\"42\\n\") == \"10\"\nassert solution(\"43\\n\") == \"10\"\nassert solution(\"44\\n\") == \"10\"\nassert solution(\"45\\n\") == \"10\"\nassert solution(\"46\\n\") == \"10\"\nassert solution(\"47\\n\") == \"10\"\nassert solution(\"48\\n\") == \"10\"\nassert solution(\"49\\n\") == \"10\"\nassert solution(\"50\\n\") == \"10\"\nassert solution(\"51\\n\") == \"10\"\nassert solution(\"52\\n\") == \"10\"\nassert solution(\"53\\n\") == \"10\"\nassert solution(\"54\\n\") == \"10\"\nassert solution(\"55\\n\") == \"10\"\nassert solution(\"56\\n\") == \"10\"\nassert solution(\"57\\n\") == \"10\"\nassert solution(\"58\\n\") == \"10\"\nassert solution(\"59\\n\") == \"10\"\nassert solution(\"60\\n\") == \"10\"\nassert solution(\"61\\n\") == \"10\"\nassert solution(\"62\\n\") == \"10\"\nassert solution(\"63\\n\") == \"10\"\nassert solution(\"64\\n\") == \"10\"\nassert solution(\"65\\n\") == \"10\"\nassert solution(\"66\\n\") == \"10\"\nassert solution(\"67\\n\") == \"10\"\nassert solution(\"68\\n\") == \"10\"\nassert solution(\"69\\n\") == \"10\"\nassert solution(\"70\\n\") == \"10\"\nassert solution(\"71\\n\") == \"10\"\nassert solution(\"72\\n\") == \"10\"\nassert solution(\"73\\n\") == \"10\"\nassert solution(\"74\\n\") == \"10\"\nassert solution(\"75\\n\") == \"10\"\nassert solution(\"76\\n\") == \"10\"\nassert solution(\"77\\n\") == \"10\"\nassert solution(\"78\\n\") == \"10\"\nassert solution(\"79\\n\") == \"10\"\nassert solution(\"80\\n\") == \"10\"\nassert solution(\"81\\n\") == \"10\"\nassert solution(\"82"
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '10'"
    },
    {
        "number": 3618,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == 10"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 2\\n1000 1 0\\n1 1000 1') == 0.001"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 2\\n1000 1 0\\n1 1000 1') == 0.001\nassert solution('1 2\\n1000 1\\n1 1000') == 0.001\nassert solution('1 2\\n1000\\n1 1000') == 0.001\nassert solution('1 2\\n1000\\n1') == 0.001\nassert solution('1 2\\n1000\\n1000\\n1 1000') == 0.001\nassert solution('1 2\\n1000\\n1000\\n1000\\n1') == 0.001\nassert solution('1 2\\n1000\\n1000\\n1000\\n1000') == 0.001\nassert solution('1 2\\n1000\\n1000\\n1000\\n1000\\n1000') == 0.001\nassert solution('1 2\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000') == 0.001\nassert solution('1 2\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000') == 0.001\nassert solution('1 2\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000') == 0.001\nassert solution('1 2\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000') == 0.001\nassert solution('1 2\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n1000\\n"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == 0.001, \"The correct output should be '0.001', but instead got '{}'\".format(solution(stdin))\n"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2\\n1000 1 0\\n1 1000 1\") == 0.001"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2\\n1000 1 0\\n1 1000 1\\n\") == \"0.001\"\n"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == expected, f\"Your solution is incorrect. Please check the provided code and make sure it meets the requirements.\""
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2\\n1000 1 0\\n1 1000 1\") == 0.001, \"Incorrect output\"\n"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 2\\n1000 1 0\\n1 1000 1') == '0.001'\nassert solution('1 2\\n2000 2 1\\n1 1000 1') == '0.001'\nassert solution('1 2\\n5000 3 2\\n1 1000 1') == '0.001'\nassert solution('1 2\\n1000 2 1\\n2 2000 3') == '0.001'\nassert solution('1 2\\n5000 4 3\\n1 1000 1') == '0.001'\nassert solution('1 2\\n1000 3 2\\n2 5000 3') == '0.001'\nassert solution('1 2\\n5000 5 4\\n1 1000 1') == '0.001'\nassert solution('1 2\\n1000 4 3\\n2 5000 4') == '0.001'\nassert solution('1 2\\n5000 6 5\\n1 1000 1') == '0.001'\nassert solution('1 2\\n1000 5 4\\n2 5000 5') == '0.001'\nassert solution('1 2\\n1000 6 5\\n2 5000 6') == '0.001'\nassert solution('1 2\\n5000 7 6\\n1 1000 1') == '0.001'\nassert solution('1 2\\n1000 7 6\\n2 5000 7') == '0.001'\nassert solution('1 2\\n5000 8 7\\n1 1000 1') == '0.001'\nassert solution('1 2\\n1000 8 7\\n2 5000 8') == '0.001'\nassert solution('1 2\\n5000 9 8\\n1 1000 1') == '0.001'\nassert solution('1 2\\n1000 9 8\\n2 5000 9') == '0.001'\nassert solution('1 2\\n1000 10 9\\n3 5000 10') == '0.001'\nassert solution('1 2\\n5000 11 10\\n1 1000 1') == '0.001'\nassert solution('1 2\\n1000 11 10\\n3 5000 11') == '0.001'\nassert solution('1 2\\n1000 12 11\\n4 5000 12') == '0.001'\nassert solution('1 2\\n5000 13 12\\n1 1000 1') == '0.001'\nassert solution('1 2\\n1000 13 12\\n4 5000 13') == '0.001'\nassert solution('1 2\\n1000 14 13\\n5 5000 14') == '0.001'\nassert solution('1 2\\n5000 15 14\\n1 1000 1') == '0.001'\nassert solution('1 2\\n1000 15 14\\n5 5000 15') == '0.001'\nassert solution('1 2\\n1000 16 15\\n6 5000 16') == '0.001'\nassert solution('1 2\\n5000 17 16\\n1 1000 1"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 0.001, \"The output should be 0.001\"\n"
    },
    {
        "number": 3619,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2\\n1000 1 0\\n1 1000 1\") == \"0.001\"\n"
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3 2 10000\\n1 2\\n2 3\\n3 1\") == \"0\"\nassert solution(\"4 4 2 10000\\n1 2\\n2 3\\n3 1\\n4 5\\n5 4\") == \"2\""
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"0\\n\"\n"
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3 2 10000\\n1 2\\n2 3\\n3 1\") == 0\nassert solution(\"4 3 4 50000\\n1 2\\n2 3\\n3 1\\n4 5\\n5 6\") == 2\nassert solution(\"6 5 3 20000\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\") == 3\nassert solution(\"6 5 4 30000\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\") == 4\nassert solution(\"6 5 5 20000\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\") == 5\nassert solution(\"6 5 6 10000\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\") == 6\nassert solution(\"6 5 7 50000\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\") == 7\nassert solution(\"6 5 8 30000\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\") == 8\nassert solution(\"6 5 9 10000\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\") == 9\nassert solution(\"6 5 10 50000\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\") == 10\nassert solution(\"6 5 11 30000\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\") == 11\nassert solution(\"6 5 12 10000\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\") == 12\nassert solution(\"6 5 13 50000\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\") == 13\nassert solution(\"6 5 14 30000\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\"
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"0\\n\", \"Test case 1 failed\"\n\nassert solution(stdin) == \"0\\n\", \"Test case 2 failed\"\n\nassert solution(stdin) == \"0\\n\", \"Test case 3 failed\"\n\nassert solution(stdin) == \"1\\n\", \"Test case 4 failed\"\n\nassert solution(stdin) == \"0\\n\", \"Test case 5 failed\""
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"0\"\n\nfrom collections import defaultdict"
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3 2 10000\\n1 2\\n2 3\\n3 1\") == \"0\\n\""
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 3 2 10000\\n1 2\\n2 3\\n3 1') == '0\\n'\nassert solution('2 2 2 10000\\n1 2\\n2 3\\n3 4') == '4\\n'\nassert solution('3 3 2 10000\\n1 2\\n2 3\\n3 4') == '4\\n'\nassert solution('5 5 5 10000\\n1 2\\n2 3\\n3 4\\n4 5\\n5 1') == '1\\n'"
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"0\""
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 0, \"Your solution is incorrect. Please check the given code and the input format.\""
    },
    {
        "number": 3620,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 3 2 10000\\n1 2\\n2 3\\n3 1') == 0"
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(b\"\\n\") == \"26\"\nassert solution(b\"\\n1\\n0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\\n\") == \"26\""
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\") == 26\nassert solution(\"0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\\n0 0 1 1\") == 26\nassert solution(\"0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\\n0 1 0 1\") == 26\nassert solution(\"0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\\n0 1 1 1\") == 26\nassert solution(\"0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\\n0 1 1 1\\n0 1 0 1\") == 26\nassert solution(\"0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\\n0 1 1 1\\n0 1 1 1\") == 26\nassert solution(\"0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\") == 26\nassert solution(\"0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 1 1 1\\n0 "
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(10) == 26\n\nfrom collections import defaultdict"
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(b'4\\n0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0') == 26"
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 26\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\") == 26\nassert solution(\"2\\n2 1 2\\n2 3 1\\n1 2 1\\n1 3 2\\n2 3 3\\n3 1 2\\n3 2 3\") == 27\nassert solution(\"3\\n0 1 1\\n1 0 2\\n1 2 3\\n2 1 0\\n2 3 1\\n3 0 2\\n3 2 1\\n0 2 3\\n1 3 0\\n2 0 1\\n3 1 2\") == 28\n"
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''4\n0 1 1 1\n1 0 2 2\n1 2 0 3\n1 2 3 0''') == '26'"
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"26\\n\"\n"
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\\n') == 26\nassert solution('0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n') == 0"
    },
    {
        "number": 3621,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\") == 26\n"
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n20 20 20 40\\nX.X\\nT.T\") == \"0.333333333\\n0.666666667\\n\""
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\\n20 20 20 40\\nX.X\\nT.T\") == \"0.333333333\\n0.666666667\\n\""
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\\n20 20 20 40\\nX.X\\nT.T\") == \"0.333333333\\n0.666666667\\n\"\nassert solution(\"3 2\\n20 20 20 40\\nX.X\\n.T\") == \"0.5\\n0.5\\n\"\nassert solution(\"3 2\\n20 20 20 40\\nX.X\\nT.T\\n\") == \"0.5\\n0.5\\n\"\nassert solution(\"3 2\\n20 20 20 40\\nX.X\\n.T\\n\") == \"0.5\\n0.5\\n\"\nassert solution(\"3 2\\n20 20 20 40\\nX.X\\nT.T\\n\") == \"0.5\\n0.5\\n\"\nassert solution(\"3 2\\n20 20 20 40\\nX.X\\n.T\\n\") == \"0.5\\n0.5\\n\"\nassert solution(\"3 2\\n20 20 20 40\\nX.X\\nT.T\\n\\n\") == \"0.5\\n0.5\\n\""
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2\\n20 20 20 40\\nX.X\\nT.T\") == \"0.333333333\\n0.666666667\""
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 2\\n20 20 20 40\\nX.X\\nT.T') == '0.333333333\\n0.666666667\\n'"
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 2\\n20 20 20 40\\nX.X\\nT.T') == '0.333333333\\n0.666666667\\n'\nassert solution('3 2\\n20 20 20 40\\nX.X\\nX.X\\nT.T') == '0.333333333\\n0.666666667\\n'\nassert solution('3 2\\n20 20 20 40\\nX.X\\nT.T\\nT.T') == '0.333333333\\n0.666666667\\n'\nassert solution('3 2\\n20 20 20 40\\nX.X\\nT.T\\nT.T\\nT.T') == '0.333333333\\n0.666666667\\n'\nassert solution('3 2\\n20 20 20 40\\nX.X\\nT.T\\nT.T\\nT.T\\nT.T') == '0.333333333\\n0.666666667\\n'\nassert solution('3 2\\n20 20 20 40\\nX.X\\nT.T\\nT.T\\nT.T\\nT.T\\nT.T') == '0.333333333\\n0.666666667\\n'\nassert solution('3 2\\n20 20 20 40\\nX.X\\nT.T\\nT.T\\nT.T\\nT.T\\nT.T\\nT.T') == '0.333333333\\n0.666666667\\n'\nassert solution('3 2\\n20 20 20 40\\nX.X\\nT.T\\nT.T\\nT.T\\nT.T\\nT.T\\nT.T\\nT.T') == '0.333333333\\n0.666666667\\n'\nassert solution('3 2\\n20 20 20 40\\nX.X\\nT.T\\nT.T\\nT.T\\nT.T\\nT.T\\nT.T\\nT.T\\nT.T') == '0.333333333\\n0.666666667\\n'\nassert solution('3 2\\n20 20 20 40\\nX.X\\nT.T\\nT.T\\nT.T\\nT.T\\nT.T\\nT.T\\nT.T\\nT.T\\nT.T') == '0.333333333\\n0.666666667\\n'\nassert solution('3 2\\n20 20 20 40\\nX.X\\nT.T\\nT.T\\nT.T\\nT.T\\nT.T\\nT.T\\nT.T\\nT.T\\nT.T\\nT.T') == '0.333333333\\n0.666666667\\n'\nassert solution('3 2\\n20 20 20 40\\nX.X\\nT.T\\nT.T\\nT.T\\nT.T\\nT.T\\nT.T\\nT.T\\nT.T\\nT.T\\nT.T\\nT.T\\nT.T') == '0.333333333\\n0.666666667\\n'\nassert solution('3 2\\n20 20 20 40\\n"
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n3 2\n20 20 20 40\nX.X\nT.T\n''') == '0.333333333\\n0.666666667\\n'\n"
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"0.333333333\\n0.666666667\"\n"
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 2\\n20 20 20 40\\nX.X\\nT.T\\n') == '0.333333333\\n0.666666667\\n'\nprint('All test cases pass')"
    },
    {
        "number": 3622,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''3 2\n20 20 20 40\nX.X\nT.T''') == '0.333333333\\n0.666666667\\n'\n"
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"45 45 0 0\") == \"0.75\""
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"45 45 0 0\") == \"0.75\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"45 45 0 0\") == \"0.75\"\nassert solution(\"45 45 180 90\") == \"0.25\"\nassert solution(\"45 45 270 180\") == \"0.25\"\nassert solution(\"45 45 180 270\") == \"0.25\"\nassert solution(\"45 45 360 180\") == \"0.25\"\nassert solution(\"45 45 360 270\") == \"0.25\"\nassert solution(\"45 45 45 180\") == \"0.25\"\nassert solution(\"45 45 45 270\") == \"0.25\"\nassert solution(\"45 45 45 360\") == \"0.25\"\nassert solution(\"45 45 45 45\") == \"0.25\""
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"45 45 0 0\") == \"0.75\"\n"
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '0.75'\n"
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('45 45 0 0') == 0.75, \"The expected output is 0.75, but it is: \" + str(solution('45 45 0 0'))"
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Input:\\n{input()}\\nOutput:\\n{output}\\nInput:\\n{input()}\\nOutput:\\n{output}\""
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"45 45 0 0\") == 0.75\n"
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"45 45 0 0\") == \"0.75\"\nassert solution(\"30 20 10 5\") == \"0.4\"\nassert solution(\"10 10 0 0\") == \"0\"\nassert solution(\"360 360 0 0\") == \"1\"\nassert solution(\"1000000000 1000000000 0 0\") == \"1\""
    },
    {
        "number": 3623,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('45 45 0 0') == '0.75', 'Incorrect answer'\nassert solution('123 45 0 0') == '0.0', 'Incorrect answer'\nassert solution('360 45 0 0') == '0.0', 'Incorrect answer'\nassert solution('360 45 90 0') == '0.0', 'Incorrect answer'\nassert solution('123 45 90 0') == '0.0', 'Incorrect answer'\nassert solution('0 0 0 0') == '0.0', 'Incorrect answer'\nassert solution('45 45 90 0') == '0.0', 'Incorrect answer'\nassert solution('90 90 90 90') == '1.0', 'Incorrect answer'"
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\") == 4, \"The solution should return 4\""
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n\") == 4, \"Your solution is incorrect. Expected 4, but got {}\".format(solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n\"))"
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\") == 4\n"
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''5 6\n0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9''') == 4\nassert solution('''5 6\n0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 10''') == 12\n"
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n5 6\n0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9\n''') == '4'\n\nassert solution('''\n5 6\n0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9\n6 7 10\n''') == '1'\n\nassert solution('''\n5 6\n0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9\n''') == '1'\n\nassert solution('''\n5 6\n0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9\n''') == '1'\n\nassert solution('''\n5 6\n0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9\n''') == '1'\n\nassert solution('''\n5 6\n0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9\n''') == '1'\n\nassert solution('''\n5 6\n0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9\n''') == '1'\n\nassert solution('''\n5 6\n0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9\n''') == '1'\n\nassert solution('''\n5 6\n0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9\n''') == '1'\n\nassert solution('''\n5 6\n0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9\n''') == '1'\n\nassert solution('''\n5 6\n0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9\n''') == '1'\n\nassert solution('''\n5 6\n0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9\n''') == '1'\n\nassert solution('''\n5 6\n0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9\n''') == '1'\n\nassert solution('''\n5 6\n0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9\n''') == '1'\n\nassert solution('''\n5 6\n0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9\n''') == '1'\n\nassert solution('''\n5 6\n0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9\n''') == '1'\n\nassert solution('''\n5 6\n0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9\n''') == '1'\n\nassert solution('''\n5 6\n0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9\n''') == '1'\n\nassert solution('''\n5 6\n0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9\n''') == '1'\n\nassert solution('''\n5 6\n0 1 "
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Expected '{output}', got '{solution(input())}'\""
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(5, 6) == 4"
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"4\"\nassert solution(4) == \"6\"\nassert solution(5) == \"6\"\nassert solution(6) == \"9\""
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\") == 4, \"Expected output 4, but got {}\".format(solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\"))"
    },
    {
        "number": 3624,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"Output: \\n4\""
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n10 10 0 5\") == \"100\\n\"\nassert solution(\"2\\n10 10 1 5\\n10 10 1 5\") == \"300\\n\"\nassert solution(\"3\\n10 10 1 5\\n10 10 0 5\\n10 10 1 5\") == \"300\\n\"\nassert solution(\"4\\n10 10 1 5\\n10 10 1 5\\n10 10 0 5\") == \"400\\n\"\nassert solution(\"5\\n10 10 1 5\\n10 10 1 5\\n10 10 1 5\\n10 10 0 5\") == \"500\\n\"\nassert solution(\"6\\n10 10 1 5\\n10 10 1 5\\n10 10 1 5\\n10 10 1 5\\n10 10 0 5\") == \"600\\n\"\n"
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(stdin)}\""
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n10 10 0 5\") == \"100\\n\", \"Sample Output: \" + str(solution(\"1\\n10 10 0 5\"))"
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n10 10 0 5\") == \"100\", \"Test Case 1\""
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r')) == 100, \"The solution provided is incorrect.\"\n"
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '100' # Change this line to test the function with the given examples"
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"100\\n\""
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '100'"
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"100\""
    },
    {
        "number": 3625,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n10 10 0 5\\n\") == \"100\""
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 1\nassert solution(2) == 0\nassert solution(1) == 0\nassert solution(4) == 0\nassert solution(20) == 1"
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, but got: {solution(input())}\""
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n0 0 2 2\\n1 1 3 4\\n5 7 6 8\") == \"1\"\nassert solution(\"6\\n0 0 1 1\\n2 2 3 3\") == \"1\"\nassert solution(\"4\\n0 0 1 1\\n1 1 1 1\") == \"1\"\nassert solution(\"5\\n-100 100 -100 100\\n-50 -50 50 50\") == \"0\"\nassert solution(\"3\\n-100 100 -100 100\\n1 1 3 4\") == \"0\"\nassert solution(\"1\\n0 0 2 2\\n-100 100 -100 100\") == \"0\""
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n0 0 2 2\\n1 1 3 4\\n5 7 6 8\") == 1\nassert solution(\"3\\n0 0 2 2\\n1 1 3 4\\n0 0 2 2\") == 0\nassert solution(\"3\\n0 0 2 2\\n1 1 3 4\\n5 7 6 8\\n100 100 100 100\") == 0\nassert solution(\"3\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\") == 1\n"
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1\""
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 0 2 2\\n1 1 3 4\\n5 7 6 8\") == 1\nassert solution(\"0 0 0 0\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\") == 0\nassert solution(\"0 0 2 2\\n1 1 3 4\\n-1 0 5 -1\") == 1\nassert solution(\"0 0 0 0\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n2 2 2 2\") == 0\nassert solution(\"1 1 1 1\\n2 2 2 2\\n3 3 3 3\\n4 4 4 4\\n5 5 5 5\") == 1\nassert solution(\"0 0 1 1\\n1 1 1 1\\n2 2 2 2\\n3 3 3 3\\n4 4 4 4\\n5 5 5 5\") == 1"
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n0 0 2 2\\n1 1 3 4\\n5 7 6 8\") == 1"
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n0 0 2 2\\n1 1 3 4\\n5 7 6 8') == '1'"
    },
    {
        "number": 3626,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3)<|im_sep|>"
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == '17'\n"
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\") == 17\n"
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S') == 17\nprint(\"All tests passed!\")"
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\") == \"17\""
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\") == \"17\"\nassert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\") == \"17\""
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\\n\") == 17, \"Test case 1 failed\""
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin='5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S') == '17'"
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == '17'\nassert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\") == '17'"
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S') == '17'"
    },
    {
        "number": 3627,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S') == 17, \"The minimum initial amount of energy necessary to complete the climb without falling is incorrect.\""
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1 4 3 5 2\\n2 3 5 1 4\"\nassert solution() == \"impossible\"\nassert solution() == \"1 4 3 5 2\\n2 3 5 1 4\""
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n3 2 3 1 1\\n') == '1 4 3 5 2 \\n2 3 5 1 4'\nassert solution('10\\n1 2 3 4 5 6 7 8 9\\n') == 'impossible'\nassert solution('5\\n3 4 5 6 7\\n') == 'impossible'"
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n3 2 3 1 1\\n\") == \"1 4 3 5 2 \\n2 3 5 1 4\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9\\n\") == \"impossible\""
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"1 4 3 5 2\\n2 3 5 1 4\""
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(5, \"3 2 3 1 1\") == \"1 4 3 5 2\\n2 3 5 1 4\"\nassert solution(5, \"1 4 3 5 2\") == \"impossible\"\nassert solution(5, \"3 1 1 5 2\") == \"impossible\"\nassert solution(5, \"1 2 3 4 5\") == \"impossible\""
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5\\n3 2 3 1 1') == '1 4 3 5 2 \\n2 3 5 1 4\\n'\nassert solution('5\\n3 2 3 1 1') == 'impossible'\nassert solution('5\\n3 4 5 2 3') == '2 5 1 4 3'\nassert solution('5\\n3 4 5 2 3') == 'impossible'\nassert solution('5\\n3 4 5 2 3 4') == 'impossible'\nassert solution('5\\n3 4 5 2 3 4') == 'impossible'\nassert solution('5\\n3 4 5 2 3 4') == 'impossible'\nassert solution('5\\n3 4 5 2 3 4') == 'impossible'\nassert solution('5\\n3 4 5 2 3 4') == 'impossible'\nassert solution('5\\n3 4 5 2 3 4') == 'impossible'\nassert solution('5\\n3 4 5 2 3 4') == 'impossible'\nassert solution('5\\n3 4 5 2 3 4') == 'impossible'\nassert solution('5\\n3 4 5 2 3 4') == 'impossible'\nassert solution('5\\n3 4 5 2 3 4') == 'impossible'\nassert solution('5\\n3 4 5 2 3 4') == 'impossible'\nassert solution('5\\n3 4 5 2 3 4') == 'impossible'\nassert solution('5\\n3 4 5 2 3 4') == 'impossible'\nassert solution('5\\n3 4 5 2 3 4') == 'impossible'\nassert solution('5\\n3 4 5 2 3 4') == 'impossible'\nassert solution('5\\n3 4 5 2 3 4') == 'impossible'\nassert solution('5\\n3 4 5 2 3 4') == 'impossible'\nassert solution('5\\n3 4 5 2 3 4') == 'impossible'\nassert solution('5\\n3 4 5 2 3 4') == 'impossible'\nassert solution('5\\n3 4 5 2 3 4') == 'impossible'\nassert solution('5\\n3 4 5 2 3 4') == 'impossible'\nassert solution('5\\n3 4 5 2 3 4') == 'impossible'\nassert solution('5\\n3 4 5 2 3 4') == 'impossible'\nassert solution('5\\n3 4 5 2 3 4') == 'impossible'\nassert solution('5\\n3 4 5 2 3 4') == 'impossible'\nassert solution('5\\n3 4 5 2 3 4') == 'impossible'\nassert solution('5\\n3 4 5 2 3 4') == 'impossible'\nassert solution('5\\n3 4 5 2 3 4') == 'impossible'\nassert solution('5\\n3 4 5 2 3 4') == 'impossible'\nassert solution('5\\n3 4 5 2 3 4') == 'impossible'\nassert solution('5\\n3 4 5 2 3 4') == 'impossible'\nassert solution('5\\n3 4 5 2 3 4') == 'impossible'\nassert solution('5\\n3 4 5 2 3 4') == 'impossible'\nassert solution('5\\n3 4 5 2 3 4') == 'impossible'\nassert solution('5\\n3 4 5 2 3 4') == 'impossible'\nassert solution('5\\n3 4 5 2 3 4') == 'impossible'\nassert solution('5\\n3 4 5 2 3 4') == 'impossible'\nassert solution('5\\n3 4 5 2 3 4') == 'impossible'"
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"1 4 3 5 2 \\n 2 3 5 1 4\""
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n3 2 3 1 1\") == \"1 4 3 5 2\\n2 3 5 1 4\""
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5\\n3 2 3 1 1\\n') == '1 4 3 5 2\\n2 3 5 1 4'"
    },
    {
        "number": 3628,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n3 2 3 1 1\") == \"1 4 3 5 2\\n2 3 5 1 4\"\nassert solution(\"5\\n3 1 2 1 3\") == \"impossible\""
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"0.76772047\"  # You can replace this with the solution code"
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n3 0 1\\n1 4\") == \"0.76772047\\n\"\nassert solution(\"2\\n4 3 1\\n3 2\") == \"0.70000000\\n\"\nassert solution(\"3\\n4 2 1\\n2 1\") == \"0.80000000\\n\"\nassert solution(\"4\\n4 3 1\\n2 3\") == \"0.88333333\\n\"\nassert solution(\"5\\n4 3 1\\n2 3\") == \"0.91666667\\n\""
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"0.76772047\""
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 0.76772047, \"Expected output 0.76772047, but got {}\".format(solution)"
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n3 0 1\\n1 4\") == 0.76772047, \"Incorrect output\""
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n3 0 1\\n1 4\") == 0.76772047\nassert solution(\"2\\n3 0 1\\n1 4\") == 0.23227953\nassert solution(\"3\\n3 0 1\\n1 4\") == 0.0\nassert solution(\"4\\n3 0 1\\n1 4\") == 0.0\nassert solution(\"5\\n3 0 1\\n1 4\") == 0.0\nassert solution(\"6\\n3 0 1\\n1 4\") == 0.0\nassert solution(\"7\\n3 0 1\\n1 4\") == 0.0\nassert solution(\"8\\n3 0 1\\n1 4\") == 0.0\nassert solution(\"9\\n3 0 1\\n1 4\") == 0.0\nassert solution(\"10\\n3 0 1\\n1 4\") == 0.0\nassert solution(\"11\\n3 0 1\\n1 4\") == 0.0\nassert solution(\"12\\n3 0 1\\n1 4\") == 0.0\nassert solution(\"13\\n3 0 1\\n1 4\") == 0.0\nassert solution(\"14\\n3 0 1\\n1 4\") == 0.0\nassert solution(\"15\\n3 0 1\\n1 4\") == 0.0\nassert solution(\"16\\n3 0 1\\n1 4\") == 0.0\nassert solution(\"17\\n3 0 1\\n1 4\") == 0.0\nassert solution(\"18\\n3 0 1\\n1 4\") == 0.0\nassert solution(\"19\\n3 0 1\\n1 4\") == 0.0\nassert solution(\"20\\n3 0 1\\n1 4\") == 0.0\nassert solution(\"21\\n3 0 1\\n1 4\") == 0.0\nassert solution(\"22\\n3 0 1\\n1 4\") == 0.0\nassert solution(\"23\\n3 0 1\\n1 4\") == 0.0\nassert solution(\"24\\n3 0 1\\n1 4\") == 0.0\nassert solution(\"25\\n3 0 1\\n1 4\") == 0.0\nassert solution(\"26\\n3 0 1\\n1 4\") == 0.0\nassert solution(\"27\\n3 0 1\\n1 4\") == 0.0\nassert solution(\"28\\n3 0 1\\n1 4\") == 0.0\nassert solution(\"29\\n3 0 1\\n1 4\") == 0.0\nassert solution(\"30\\n3 0 1\\n1 4\") == 0.0\nassert solution(\"31\\n3 0 1\\n1 4\") == 0.0\nassert solution(\"32\\n3 0 1\\n1 4\") == 0.0\nassert solution(\"33\\n3 0 1\\n1 4\") == 0.0\nassert solution(\"34\\n3 0 1\\n1 4\") == 0.0\nassert solution(\"35\\n3 0 1\\n1 4\") == 0.0\nassert solution(\"36\\n3 0 1\\n1 4\") == 0.0\nassert solution(\"37\\n3 0 1\\n1 4\") == 0.0\nassert solution(\"38\\n3 0 1\\n1 4\") == 0.0\nassert solution(\"39\\n3 0 1\\n1 4\") == 0.0\nassert solution(\"40\\n3 0 1\\n1 4\") == 0.0\nassert solution(\"41\\n3 0 1\\n1 4\") == 0.0\nassert solution(\"42\\n3 0 1\\n1 4\") == 0.0\nassert solution(\"43\\n3 0 1\\"
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n3 0 1\\n1 4\") == 0.76772047, \"The output is incorrect\""
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 0.76772047\n"
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1\\n3 0 1\\n1 4\\n') == '0.76772047'\n"
    },
    {
        "number": 3629,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '0.76772047'\nprint(f'The probability that the boar completes its charge without hitting any tree is {solution(stdin)}')"
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"hello teams\") == \"27\""
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"hello teams\") == \"27\\n\", \"The output is not correct.\"\n"
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"hello teams\") == \"27\\n\"\nassert solution(\"abc\") == \"1\\n\"\nassert solution(\"abcbb\") == \"3\\n\"\nassert solution(\"abdcabdcabdbabc\") == \"10\\n\""
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"hello teams\") == \"27\"\n"
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"hello teams\") == \"27\""
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"hello teams\") == \"27\"\nassert solution(\"abcde\") == \"1\"\nassert solution(\"aaaa\") == \"2\"\nassert solution(\"aaaaa\") == \"0\""
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"hello teams\") == \"27\""
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('hello teams') == '27', \"Solution should return '27' for 'hello teams'.\""
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"hello teams\") == \"27\""
    },
    {
        "number": 3630,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"hello teams\") == \"27\", \"The solution should return 27 but returns {}\".format(solution(\"hello teams\"))"
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3') == 2\nassert solution('5 2\\n10 15\\n12 3\\n15 10\\n20 20\\n100 15') == 2\nassert solution('1 1\\n1 1') == 0\nassert solution('1 1\\n1 2') == 1\nassert solution('1 1\\n1 1\\n1 2') == 1\n"
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == 2\n"
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == 2\n"
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == 2"
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == 2, \"Input error.\"\n\nfrom typing import List"
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\\n\") == \"2\""
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\", \"Test failed\"\n"
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\") == 2"
    },
    {
        "number": 3631,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\", \"The output should be 2\""
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 3\\na\\nb\\nc\\nd\\ne\\ncaf\\n') == '26'"
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 3\\na\\nb\\nc\\nd\\ne\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n"
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncad\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\") == \"26\"\nassert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncad\") == \"26\""
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 26, \"Test case failed\""
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 3\\na\\nb\\nc\\nd\\ne\\ncad') == '26'\nassert solution('10 5\\nabc\\ndef\\nghi\\nxyz\\nuvw') == '2'\nassert solution('5 1\\nxyz') == '0'"
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, \"Test case failed. Expected output: {}, Got: {}\".format(output, solution(input()))\n"
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open('input.txt', 'r')) == \"26\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"def solution(stdin: str) -> str:\", \"Please complete the solution function\""
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\na\\nb\\nc\\nd\\ne\\ncad\\n\") == 26"
    },
    {
        "number": 3632,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"26\""
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\\n\"\n"
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 10 30\\n10 5 3 1 3\") == \"3 5 2 1 4\""
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"3 5 2 1 4\"\nassert solution() == \"impossible\""
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"3 5 2 1 4\""
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 10 30\\n10 5 3 1 3\") == \"3 5 2 1 4\"\nassert solution(\"6 10 30\\n10 5 3 1 3\") == \"impossible\"\n"
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '''3 5 2 1 4'''\nprint(\"All tests passed!\")"
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 10 30\\n10 5 3 1 3\") == \"3 5 2 1 4\\n\"\nprint(\"All test cases pass\")"
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 10 30\\n10 5 3 1 3\") == \"3 5 2 1 4\"\n"
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"3 5 2 1 4\"\nassert solution(\"\") == \"impossible\"\nassert solution(\"5 10 30\") == \"3 5 2 1 4\"\nassert solution(\"10 5 3 1 3\") == \"impossible\""
    },
    {
        "number": 3633,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 10 30\\n10 5 3 1 3') == '3 5 2 1 4\\n'\nassert solution('5 10 30\\n10 5 3 1 2') == 'impossible\\n'\nassert solution('5 10 30\\n10 5 3 2 1') == 'impossible\\n'\nassert solution('5 10 30\\n10 5 3 1 1') == '3 5 2 1 4\\n'\nassert solution('5 10 30\\n10 5 3 1 1') == '3 5 2 1 4\\n'"
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 1\\n2 3\\n2 3\") == \"2\"\nassert solution(\"4\\n1 1\\n2 3\\n2 3\\n2 3\") == \"1\"\nassert solution(\"5\\n1 1\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n2 3\\n"
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 1\\n2 3\\n2 3\") == \"2\""
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(None) == \"shovel time!\""
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 2\nassert solution(5) == 6\nassert solution(8) == 6\nassert solution(9) == 0\nassert solution(10) == 0"
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n1 1\\n2 3\\n2 3\\n') == '2\\n'\nassert solution('3\\n1 1\\n2 3\\n1000000000 1000000000\\n') == '4\\n'\n"
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 1\\n2 3\\n2 3\\n\") == 2, \"Test failed\""
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) =="
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2\", \"Incorrect output\""
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n3\n1 1\n2 3\n2 3\n''') == 2\n\nassert solution('''\n2\n1 2\n3 4\n''') == 1\n\nassert solution('''\n1\n0 0\n''') == 0\n\nassert solution('''\n1\n1 1\n''') == 1\n\nassert solution('''\n3\n1 1\n2 3\n2 2\n''') == 0\n\nassert solution('''\n1\n0 0\n''') == 0\n\nassert solution('''\n1\n1 1\n''') == 1\n\nassert solution('''\n3\n1 1\n2 3\n2 2\n''') == 0"
    },
    {
        "number": 3634,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 1\\n2 3\\n2 3\") == 2\nassert solution(\"3\\n2 2\\n2 3\") == 1\nassert solution(\"3\\n1 1\\n3 3\") == 4\nassert solution(\"3\\n1 1\\n1 2\") == 1\nassert solution(\"3\\n1 1\\n1 2\") == 1\nassert solution(\"3\\n1 1\\n1 2\") == 1\nassert solution(\"3\\n1 1\\n1 2\") == 1"
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4\\n1 2 1 2') == '3'"
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 3\n"
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n1 2 1 2') == '3\\n'"
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '3'\n\nfrom typing import List"
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 3"
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '3', \"Expected output: 3, but got: \" + str(solution())"
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 2 1 2\") == \"3\\n\"\nassert solution(\"3\\n1 2 1 2\") == \"2\\n\"\nassert solution(\"4\\n1 2 3 4\") == \"4\\n\"\nassert solution(\"3\\n1 2 3 4\") == \"3\\n\"\nassert solution(\"4\\n1 2 1 1\") == \"3\\n\"\nassert solution(\"2\\n1 2 3 4\") == \"2\\n\"\nassert solution(\"2\\n1 2 1 1\") == \"2\\n\""
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"3\""
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"3\", \"Test failed\""
    },
    {
        "number": 3635,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 2 1 2\") == \"3\\n\"\n"
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4 999999937\") == \"79\"\nassert solution(\"2 2 999999937\") == \"11\"\nassert solution(\"10 10 999999937\") == \"93\""
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '79'"
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4 999999937\") == \"79\"\n"
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4 999999937\") == 79"
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"79\\n\", solution(stdin)"
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 4 999999937\") == \"79\"  # Example 1"
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 4 999999937\") == 79\n"
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 4 999999937\") == \"79\\n\"\n"
    },
    {
        "number": 3636,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == output, f\"Input: {stdin}, Output: {output}\"\nfor n, m, p in [(-1, -1, -1), (-2, -2, -2), (2, 2, -2), (3, 4, -3)]:\n    assert solution(str(n) + \" \" + str(m) + \" \" + str(p)) == str(p), f\"Input: {n} {m} {p}\"\n"
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == ['zucchini','mozzarella','mushrooms', 'artichoke']\nassert solution(\n    '''\n    1\n    4 +zucchini +mozzarella +mushrooms -artichoke\n    ''') == ['zucchini','mozzarella','mushrooms', 'artichoke']\nassert solution(\n    '''\n    2\n    3 +pizza +ice_cream +milk +soda -strawberries -vanilla\n    ''') == ['pizza', 'ice_cream','milk','soda','strawberries', 'vanilla']\nassert solution(\n    '''\n    3\n    2 +pizza -ice_cream -milk -soda +strawberries +vanilla\n    ''') == ['pizza','strawberries', 'vanilla']\nassert solution(\n    '''\n    1\n    4 +zucchini +mozzarella +mushrooms -artichoke\n    2 +pizza -ice_cream -milk -soda +strawberries +vanilla\n    ''') == ['zucchini','mozzarella','mushrooms', 'artichoke', 'pizza','strawberries', 'vanilla']"
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\nr'''\n1\n4 +zucchini +mozzarella +mushrooms -artichoke\n''') == 'zucchini mozzarella mushrooms artichoke\\n'\n\nassert solution(\nr'''\n2\n1 +bread +tomato -sausage -pepperoni\n2 +pineapple -pear -broccoli -carrots\n''') == 'pineapple carrots\\n'\n\nassert solution(\nr'''\n3\n2 +broccoli +spinach -broccoli -spinach\n1 +spinach -broccoli -spinach\n''') == 'broccoli\\n'\n\nassert solution(\nr'''\n4\n3 +pineapple -pineapple -carrot -carrot\n2 +carrot -carrot -carrot -carrot\n''') == 'pineapple carrot\\n'\n\nassert solution(\nr'''\n5\n4 +zucchini +mozzarella +mushrooms -artichoke\n1 +beans -beans -beans -beans\n2 +beans -beans -beans -beans\n''') == 'zucchini mozzarella mushrooms artichoke beans\\n'"
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == ['zucchini','mozzarella','mushrooms', 'artichoke']\n\nimport sys"
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"zucchini\\nmozzarella\\nmushrooms\\nartichoke\\n\"\n"
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n4 +zucchini +mozzarella +mushrooms -artichoke\") == \"zucchini mozzarella mushrooms artichoke\"\n"
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"zucchini\\nmozzarella\\nmushrooms\\nartichoke\""
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"zucchini mozzarella mushrooms artichoke\", \"Expected result 'zucchini mozzarella mushrooms artichoke', got '{}'\".format(solution())"
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'zucchini\\nmozzarella\\nmushrooms\\nartichoke\\n', \"Expected 'zucchini\\nmozzarella\\nmushrooms\\nartichoke\\n', but got '{}'.\".format(solution(stdin))\n"
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n4 +zucchini +mozzarella +mushrooms -artichoke\") == \"zucchini\\nmozzarella\\nmushrooms\\nartichoke\"\nassert solution(\"1\\n3 +lettuce +tomato +mushrooms\") == \"lettuce\\ntomato\\nmushrooms\"\nassert solution(\"1\\n3 +lettuce +tomato -mushrooms\") == \"lettuce\\ntomato\"\nassert solution(\"1\\n2 +spinach +pepperoni\") == \"spinach\\npepperoni\"\nassert solution(\"1\\n3 +lettuce +tomato +mushrooms +pepperoni\") == \"lettuce\\ntomato\\nmushrooms\\npepperoni\"\n"
    },
    {
        "number": 3637,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1\\n4 +zucchini +mozzarella +mushrooms -artichoke') == 'zucchini\\nmozzarella\\nmushrooms\\nartichoke\\n'\nprint('Test Passed')"
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\nPP\\nRR\\nPS\\nSS\") == \"PS\\nPP\\nRR\\nSS\""
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 4\\nPP\\nRR\\nPS\\nSS') == ['PS', 'PP', 'RR', 'SS']\n"
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3, 4) == \"PS\"\nassert solution(3, 5) == \"PS\"\nassert solution(3, 6) == \"PP\"\nassert solution(3, 7) == \"PP\"\nassert solution(3, 8) == \"RR\"\nassert solution(3, 9) == \"RR\"\nassert solution(3, 10) == \"SS\""
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"PS\\nPP\\nRR\\nSS\", \"Testcase failed\""
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 4\\nPP\\nRR\\nPS\\nSS\\n') == 'PS\\nPP\\nRR\\nSS\\n'\nassert solution('5 6\\nPPS\\nPPP\\nPPP\\nPPP\\n') == 'PPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\nPPP\\"
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 4\\nPP\\nRR\\nPS\\nSS') == ['PS', 'PP', 'RR', 'SS']\nassert solution('4 5\\nSS\\nP\\nPP\\nRR\\n') == ['PP', 'RR', 'SS']\nassert solution('4 3\\nPP\\nPS\\nRR\\nSS\\n') == ['PS', 'PP', 'RR', 'SS']"
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 4\\nPP\\nRR\\nPS\\nSS') == ['PS', 'PP', 'RR', 'SS']\nassert solution('3 5\\nPP\\nRR\\nPS\\nSS') == ['PS', 'PP', 'RR', 'SS']\nassert solution('3 6\\nPP\\nRR\\nPS\\nSS') == ['PS', 'PP', 'RR', 'SS']\nassert solution('3 7\\nPP\\nRR\\nPS\\nSS') == ['PS', 'PP', 'RR', 'SS']\nassert solution('3 8\\nPP\\nRR\\nPS\\nSS') == ['PS', 'PP', 'RR', 'SS']\nassert solution('3 9\\nPP\\nRR\\nPS\\nSS') == ['PS', 'PP', 'RR', 'SS']"
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"\"\"\n3 4\nPP\nRR\nPS\nSS\n\"\"\") == [\"PS\", \"PP\", \"RR\", \"SS\"]\n\nassert solution(stdin=\"\"\"\n3 4\nPP\nRR\nSS\nPS\n\"\"\") == [\"PS\", \"PP\", \"RR\", \"SS\"]\n\nassert solution(stdin=\"\"\"\n3 4\nRR\nPP\nSS\nPS\n\"\"\") == [\"PS\", \"PP\", \"RR\", \"SS\"]\n\nassert solution(stdin=\"\"\"\n3 4\nSS\nPP\nRR\nPS\n\"\"\") == [\"PS\", \"PP\", \"RR\", \"SS\"]\n\nassert solution(stdin=\"\"\"\n3 4\nPS\nRR\nSS\nPP\n\"\"\") == [\"PS\", \"PP\", \"RR\", \"SS\"]\n\nassert solution(stdin=\"\"\"\n3 4\nPP\nSS\nRR\nPS\n\"\"\") == [\"PS\", \"PP\", \"RR\", \"SS\"]"
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 4\\nPP\\nRR\\nPS\\nSS') == 'PS\\nPP\\nRR\\nSS'\nassert solution('4 4\\nPP\\nRR\\nPS\\nSS') == 'PP\\nRR\\nSS\\nPS'\nassert solution('4 4\\nPP\\nRR\\nPS\\nSS\\nPP') == 'PP\\nRR\\nSS\\nPS'\nassert solution('3 4\\nPPS') == 'PPS'\nassert solution('3 4\\nPP\\nPS\\nPPS') == 'PP\\nPS\\nPPS'\nassert solution('4 4\\nPP\\nRR\\nSS\\nPPS') == 'PP\\nRR\\nSS\\nPPS'\nassert solution('3 4\\nPP\\nRR\\nPPS\\nSS') == 'PP\\nRR\\nPPS\\nSS'\nassert solution('3 4\\nPP\\nRR\\nPPS\\nSS\\nPP') == 'PP\\nRR\\nPPS\\nSS\\nPP'\nassert solution('4 4\\nPP\\nRR\\nPPS\\nSS\\nPP\\nPP') == 'PP\\nRR\\nPPS\\nSS\\nPP\\nPP'\nassert solution('4 4\\nPP\\nRR\\nPPS\\nSS\\nPP\\nPP\\nPP') == 'PP\\nRR\\nPPS\\nSS\\nPP\\nPP\\nPP'\nassert solution('3 4\\nPP\\nRR\\nPPS\\nSS\\nPP\\nPP\\nPP\\nPP') == 'PP\\nRR\\nPPS\\nSS\\nPP\\nPP\\nPP\\nPP'\nassert solution('4 4\\nPP\\nRR\\nPPS\\nSS\\nPP\\nPP\\nPP\\nPP\\nPP') == 'PP\\nRR\\nPPS\\nSS\\nPP\\nPP\\nPP\\nPP\\nPP'\nassert solution('4 4\\nPP\\nRR\\nPPS\\nSS\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP') == 'PP\\nRR\\nPPS\\nSS\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP'\nassert solution('4 4\\nPP\\nRR\\nPPS\\nSS\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\nPP\\n"
    },
    {
        "number": 3638,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == ['SS', 'PS', 'RR', 'PP']\nprint(\"All tests pass!\")"
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(None) == \"Please enter a valid solution.\""
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"288\"\n"
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n0.1 2.0\\n0\\n0\\n0\\n0\") == \"288.0\"\nprint(\"Test case passed\")"
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n0\\n') == '288'"
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n0') == 288"
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 288, \"Your code is incorrect.\""
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"288\", \"Test failed\""
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n0\") == \"288\\n\"\n"
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"288\""
    },
    {
        "number": 3639,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"288\\n\""
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"pastimeofwhimsy\") == 1"
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"pastimeofwhimsy\") == 1, \"The meow factor of 'pastimeofwhimsy' should be 1.\"\nassert solution(\"catnip\") == 2, \"The meow factor of 'catnip' should be 2.\"\nassert solution(\"wordcat\") == 3, \"The meow factor of 'wordcat' should be 3.\"\nassert solution(\"wordamongstring\") == 4, \"The meow factor of 'wordamongstring' should be 4.\"\nassert solution(\"longstring\") == 5, \"The meow factor of 'longstring' should be 5.\""
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"pastimeofwhimsy\") == 1\nassert solution(\"hello\") == 0\nassert solution(\"abcdefghijklmnopqrstuvwxyz\") == 1\nassert solution(\"helloworld\") == 2\nassert solution(\"abc\") == 0\nassert solution(\"abcdefg\") == 1\nassert solution(\"helloworldxyz\") == 1\nassert solution(\"abcde\") == 2\nassert solution(\"abcdefghe\") == 2\nassert solution(\"abcd\") == 1\nassert solution(\"abcdhe\") == 2\nassert solution(\"abcdhefg\") == 3\nassert solution(\"abcdefghefg\") == 4\nassert solution(\"abcdefghefgcd\") == 4"
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"pastimeofwhimsy\") == 1, \"Test 1 failed\"\nassert solution(\"honeybee\") == 2, \"Test 2 failed\"\nassert solution(\"abcd\") == 3, \"Test 3 failed\"\nassert solution(\"hello\") == 2, \"Test 4 failed\"\nassert solution(\"abcdcba\") == 3, \"Test 5 failed\""
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"pastimeofwhimsy\") == \"1\"\n"
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"pastimeofwhimsy\") == 1"
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('pastimeofwhimsy') == 1"
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"pastimeofwhimsy\") == 1\nassert solution(\"hello\") == 0\nassert solution(\"racecar\") == 2\nassert solution(\"praiseworthy\") == 3\n"
    },
    {
        "number": 3640,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('pastimeofwhimsy') == 1, \"The meow factor of 'pastimeofwhimsy' should be 1.\"\n"
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\n1 2 2 1 \") == \"YES\"\nassert solution(\"4 2\\n2 3 4 5 \") == \"NO\"\nassert solution(\"3 5\\n1 1 1 1 1 1 \") == \"YES\"\nassert solution(\"4 3\\n1 1 1 1 1 1 1 1 1 \") == \"NO\"\nassert solution(\"3 6\\n1 1 1 1 1 1 1 1 1 1 1 \") == \"YES\"\n"
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4\\n1 2 2 1 \") == \"YES\", \"Expected YES, but got: \" + solution(\"3 4\\n1 2 2 1 \")"
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4\\n1 2 2 1 \\n\") == \"YES\\n\""
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4\\n1 2 2 1 \") == \"YES\"\nassert solution(\"2 3\\n1 2 1 2 1 \") == \"YES\"\nassert solution(\"3 4\\n1 1 2 2 1 \") == \"NO\"\nassert solution(\"1 1\\n1 1 1 1 1 \") == \"YES\"\nassert solution(\"5 4\\n1 2 2 1 1 \") == \"YES\""
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4\\n1 2 2 1 \\n\") == \"YES\"\nassert solution(\"3 4\\n2 1 1 2 \\n\") == \"NO\"\nassert solution(\"3 4\\n1 2 1 2 \\n\") == \"NO\"\nassert solution(\"3 4\\n2 2 1 1 \\n\") == \"YES\"\nassert solution(\"3 4\\n2 1 2 2 \\n\") == \"NO\"\nassert solution(\"3 4\\n1 1 1 2 \\n\") == \"YES\"\nassert solution(\"3 4\\n3 2 2 1 \\n\") == \"YES\"\nassert solution(\"3 4\\n1 1 1 2 \\n\") == \"NO\"\nassert solution(\"3 4\\n2 1 2 1 \\n\") == \"NO\"\nassert solution(\"3 4\\n1 2 1 1 \\n\") == \"YES\""
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 4\\n1 2 2 1 ') == 'YES'\nassert solution('3 4\\n1 2 3 1 ') == 'NO'\nassert solution('3 4\\n1 1 1 1 ') == 'YES'"
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 4\\n1 2 2 1 ') == 'YES', \"Test case 1 failed\"\nassert solution('3 4\\n1 1 1 1 ') == 'YES', \"Test case 2 failed\"\nassert solution('3 4\\n1 2 2 1 ') == 'NO', \"Test case 3 failed\"\nassert solution('3 4\\n1 1 1 1 ') == 'YES', \"Test case 4 failed\"\nassert solution('3 4\\n1 1 1 1 ') == 'NO', \"Test case 5 failed\"\n"
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'YES', 'Please implement the solution'"
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4\\n1 2 2 1 \") == \"YES\""
    },
    {
        "number": 3641,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4\\n1 2 2 1 \") == \"YES\"\nassert solution(\"3 4\\n1 2 2 1\\n1 2 2 1 \") == \"NO\""
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n    2\n    1 2\n    3\n    4\n''') == '3/1'\nassert solution('''\n    3\n    1 2 3\n    2 3\n''') == '1/3'\nassert solution('''\n    2\n    5\n    3\n    4\n    5\n    6\n    7\n''') == '5/1'\nassert solution('''\n    10\n    1 2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n''') == '1/1'"
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3, 4, 1, 2, 3, 5, 6, 7, 8, 9) == \"3/1\""
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"3/1\""
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n1 2\\n3\\n4\\n') == '3/1\\n'\n"
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(2) == '3/1'\nassert solution(3) == '1/3'\nassert solution(4) == '2/4'\nassert solution(5) == '1/2'"
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1 2\\n3\\n4\\n\") == \"3/1\"\n"
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 2\\n3\\n4\\n\") == \"3/1\"\n"
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"3/1\", \"Expected output: 3/1, actual output: \" + str(solution(input()))\nassert solution(input()) == \"2/1\", \"Expected output: 2/1, actual output: \" + str(solution(input()))\nassert solution(input()) == \"1000000/1000000\", \"Expected output: 1000000/1000000, actual output: \" + str(solution(input()))"
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2\\n1 2\\n3\\n4') == '3/1'\n"
    },
    {
        "number": 3642,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\n1 2\\n3\\n4\\n') == '3/1'"
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1.2 10.2\\n2.2 15.2\") == \"1.114672365\"\n"
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1.114672365\""
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"\"\"def solution(stdin: str) -> str:\n    pass\"\"\""
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1.2 10.2\\n2.2 15.2\") == \"1.114672365\""
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"1.114672365\\n\", solution(stdin)"
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1.2 10.2\\n2.2 15.2\") == \"1.114672365\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1.2 10.2\\n2.2 15.2\") == 1.114672365\n"
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1.2 10.2\\n2.2 15.2\") == \"1.114672365\\n\""
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == 1.114672365\n"
    },
    {
        "number": 3643,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1.2 10.2\\n2.2 15.2\") == \"1.114672365\"\n"
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_string) == expected_output, f\"Test failed for input {input_string}, expected output {expected_output}\" for input_string, expected_output in [\n    (\"4\\n0 3\\n1 1\\n2 1\\n2 0\", \"3\\n1 2 3 2\"),\n]"
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == expected_solution, f\"Test failed. Expected: {expected_solution}, Received: {solution}\"\n"
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 3\\n1 1\\n2 1\\n2 0\") == \"3\\n1 2 3 2\\n\"\nassert solution(\"4\\n0 3\\n1 1\\n2 1\\n2 0\") == \"3\\n1 2 3 2\\n\"\nassert solution(\"4\\n0 3\\n1 1\\n2 1\\n2 1\") == \"3\\n1 2 3 2\\n\"\nassert solution(\"4\\n0 3\\n1 1\\n2 1\\n2 0\") == \"3\\n1 2 3 2\\n\""
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('0 3\\n1 1\\n2 1\\n2 0') == '3\\n1 2 3 2\\n'\nassert solution('4\\n0 3\\n1 1\\n2 1\\n2 0') == '3\\n1 2 3 2\\n'"
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Input {input()} does not match the output {output}.\""
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n0 3\\n1 1\\n2 1\\n2 0\") == \"3\\n1 2 3 2\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input) == output, f\"Test failed for {input} and expected {output}\""
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n0 3\\n1 1\\n2 1\\n2 0') == '3\\n1 2 3 2'\nprint('All test cases passed!')"
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3644,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"3\\n1 2 3 2\", \"The output should be '3\\n1 2 3 2', but it is: {}\".format(solution())"
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 2 3\n''') == ['1', '2', '3']\n\nassert solution('''\n3\n1 1 2\n''') == ['none']\n\nassert solution('''\n4\n1 2 1 3\n''') == ['none']"
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"1\\n2\\n3\\n\"\nassert solution(\"3\\n1 1 2\\n\") == \"none\\n\"\nassert solution(\"4\\n1 2 1 3\\n\") == \"none\\n\""
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"1\\n2\\n3\\nnone\", \"Incorrect output\""
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n3\n1 2 3\n''') == ['1', '2', '3']\nassert solution('''\n3\n1 1 2\n''') == ['none']\nassert solution('''\n4\n1 2 1 3\n''') == ['none']"
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 'none\\n'\nassert solution() == 'none\\n'\nassert solution() == 'none\\n'\nassert solution() == 'none\\n'\nassert solution() == 'none\\n'\nassert solution() == '1\\n2\\n3\\n'\nassert solution() == '2\\n1\\n3\\n'\nassert solution() == '3\\n1\\n2\\n'\nassert solution() == 'none\\n'"
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 2 3\") == \"1\\n2\\n3\"\nassert solution(\"3\\n1 1 2\") == \"none\"\nassert solution(\"4\\n1 2 1 3\") == \"none\""
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2 3\") == \"1\\n2\\n3\"\nassert solution(\"3\\n1 1 2\") == \"none\"\nassert solution(\"4\\n1 2 1 3\") == \"none\""
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"1\\n2\\n3\\n\"\nassert solution(\"3\\n1 1 2\\n\") == \"none\\n\"\nassert solution(\"4\\n1 2 1 3\\n\") == \"none\\n\""
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == [\"1\", \"2\", \"3\"]\nassert solution(\"3\\n1 1 2\\n\") == [\"none\"]\nassert solution(\"4\\n1 2 1 3\\n\") == [\"none\"]"
    },
    {
        "number": 3645,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"1\\n2\\n3\\n\""
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7\\n2 1 0 1 2 3 3\") == \"5\""
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"5\"\nassert solution(stdin) == \"1\""
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7\\n2 1 0 1 2 3 3\") == \"5\"\n"
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"5\\n\", \"The output should be 5, but it is {}\".format(solution())"
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"7\\n2 1 0 1 2 3 3\") == \"5\\n\", \"Please implement the function\""
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7\\n2 1 0 1 2 3 3\") == \"5\\n\"\nassert solution(\"9\\n1 2 3 4 5 6 7 8 9\") == \"2\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"1\\n\"\nassert solution(\"11\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\") == \"3\\n\"\nassert solution(\"12\\n
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1 0 1 2 3 3\") == \"5\\n\"\nassert solution(\"7\") == \"5\\n\"\nassert solution(\"5\\n2 1 0 1 2 3 3\\n\") == \"5\\n\"\nassert solution(\"5\\n2 1 0 1 2 3 1\\n\") == \"1\\n\"\nassert solution(\"5\\n2 1 0 1 2 3 2\\n\") == \"2\\n\"\nassert solution(\"5\\n2 1 0 1 2 3 4\\n\") == \"3\\n\"\nassert solution(\"5\\n2 1 0 1 2 3 5\\n\") == \"3\\n\""
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\\n2 1 0 1 2 3 3\") == \"5\\n\", \"Testcase 1 failed\"\nassert solution(\"6\\n1 1 0 1 2 3 2\") == \"4\\n\", \"Testcase 2 failed\"\nassert solution(\"5\\n1 1 1 1 2 2 2\") == \"5\\n\", \"Testcase 3 failed\"\nassert solution(\"4\\n1 1 1 1 1 1 1\") == \"4\\n\", \"Testcase 4 failed\"\nassert solution(\"3\\n1 1 1 1 1 1 1\") == \"5\\n\", \"Testcase 5 failed\"\nassert solution(\"2\\n1 1 1 1 1 1 1\") == \"6\\n\", \"Testcase 6 failed\""
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n2 1 0 1 2 3 3\") == \"5\\n5\\n\""
    },
    {
        "number": 3646,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected, f\"Test failed. Expected: {expected}, Got: {solution(stdin)}\""
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\\n\") == \"-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1\"\nprint(\"Test passed\")"
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1 2 3 4 5\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n-1 -1 -1 -1 -1\"\n"
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\\n\") == \"\"\"-1 -1 -1 -1 -1\n-1 4 5 6 -1\n-1 4 -1 -1 -1\n-1 1 0 1 -1\n-1 3 1 2 -1\n-1 -1 -1 -1 -1\"\"\""
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n    5 6\n    #####\n    #...#\n    #_###\n    #_M.#\n    #__.#\n    #####\"\"\") == \"\"\"\n-1 -1 -1 -1 -1\n-1 4 5 6 -1\n-1 4 -1 -1 -1\n-1 1 0 1 -1\n-1 3 1 2 -1\n-1 -1 -1 -1 -1\n\"\"\""
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\\n\") == \"1 4 5 6\\n4 5 5 6 4\\n4 5 4 6 5\\n1 1 0 1 1\\n3 1 1 2 3\\n-1 -1 -1 -1 -1\"\nassert solution(\"4 4\\n###\\n#M#\\n#G#\\n#M#\\n###\\n\") == \"2 2\\n2 2\\n2 2\\n2 2\"\nassert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\\n\") == \"1 4 5 6\\n4 5 5 6 4\\n4 5 4 6 5\\n1 1 0 1 1\\n3 1 1 2 3\\n-1 -1 -1 -1 -1\"\nassert solution(\"4 4\\n###\\n#M#\\n#G#\\n#M#\\n###\\n\") == \"2 2\\n2 2\\n2 2\\n2 2\""
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\") == '-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1'\nassert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\") == '-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1'\nassert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\") == '-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1'"
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\") == \"\"\"\n-1 -1 -1 -1 -1\n-1 4 5 6 -1\n-1 4 -1 -1 -1\n-1 1 0 1 -1\n-1 3 1 2 -1\n-1 -1 -1 -1 -1\n\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\") == [\n    \"-1 -1 -1 -1 -1\",\n    \"-1 4 5 6 -1\",\n    \"-1 4 -1 -1 -1\",\n    \"-1 1 0 1 -1\",\n    \"-1 3 1 2 -1\"\n]"
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####') == '-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1'\n"
    },
    {
        "number": 3647,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 6\\n#####\\n#...#\\n#_###\\n#_M.#\\n#__.#\\n#####\\n') == \"\"\"-1 -1 -1 -1 -1\n-1 4 5 6 -1\n-1 4 -1 -1 -1\n-1 1 0 1 -1\n-1 3 1 2 -1\n-1 -1 -1 -1 -1\"\"\""
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\") == \"6\""
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n\") == \"6\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"6\\n6\\n\"\n"
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\") == \"6\\n\"\n"
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\") == 6\nassert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 5\") == -1\nassert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\") == 30\nassert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 5\") == 60\n"
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''4 6 1\n1\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4\n3 4 3''') == '6'"
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3') == 6\nassert solution('4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 5') == -1\nassert solution('4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3') == -1"
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"6\\n\""
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n4 6 1\n1\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4\n3 4 3\n''') == '6'"
    },
    {
        "number": 3648,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\") == 6\n\nassert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n5 6 1\") == 0\n\nassert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n5 6 1\\n1\") == 0\n\nassert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n5 6 1\\n1 2\\n1 3\") == 1\n\nassert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n5 6 1\\n1 2\\n1 3\\n2 3 2\\n2 4 4\\n3 4 3\\n4 5 3\") == 6\n\nassert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n5 6 1\\n1 2\\n1 3\\n2 3 2\\n2 4 4\\n3 4 3\\n4 5 3\\n5 5 1\") == 15\n\nassert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n5 6 1\\n1 2\\n1 3\\n2 3 2\\n2 4 4\\n3 4 3\\n4 5 3\\n5 5 1\\n1 2 2\\n1 3 1\") == 0"
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4 2 1\") == \"01001\""
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4 2 1\") == \"01001\"\n"
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4 2 1\") == \"01001\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4 2 1\") == \"01001\"\n"
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4 2 1\") == \"01001\""
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 4 2 1\") == \"01001\""
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 4 2 1') == '01001'"
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 4 2 1') == '01001', \"The output should be '01001', but it's '{}'.\".format(solution('3 4 2 1'))\n"
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4 2 1\") == \"01001\"\n\nHere's one possible solution:\n\n```python\n"
    },
    {
        "number": 3649,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4 2 1\") == \"01001\"\n"
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\""
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\""
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\") == \"possible\"\nassert solution(\"5 6 3\\n1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n2 2\\n2 3\\n2 4\\n2 5\\n3 2\\n3 3\\n3 4\\n3 5\\n4 3\\n4 4\\n4 5\\n5 4\\n5 5\\n6 5\") == \"possible\"\nassert solution(\"5 6 3\\n1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n2 2\\n2 3\\n2 4\\n2 5\\n3 2\\n3 3\\n3 4\\n3 5\\n4 3\\n4 4\\n4 5\\n5 4\\n5 5\\n6 5\\n1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n2 2\\n2 3\\n2 4\\n2 5\\n3 2\\n3 3\\n3 4\\n3 5\\n4 3\\n4 4\\n4 5\\n5 4\\n5 5\\n6 5\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n3 2\\n3 3\\n3 4\\n3 5\\n4 3\\n4 4\\n4 5\\n5 4\\n5 5\\n6 5\\n3 1\\n3 2\\n3 3\\n3 4\\n3 5\\n4 3\\n4 4\\n4 5\\n5 4\\n5 5\\n6 5\\n4 1\\n4 2\\n4 3\\n4 4\\n4 5\\n5 4\\n5 5\\n6 5\\n5 1\\n5 2\\n5 3\\n5 4\\n5 5\") == \"possible\"\nassert solution(\"5 6 3\\n1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n2 2\\n2 3\\n2 4\\n2 5\\n3 2\\n3 3\\n3 4\\n3 5\\n4 3\\n4 4\\n4 5\\n5 4\\n5 5\\n6 5\\n1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n2 2\\n2 3\\n2 4\\n2 5\\n3 2\\n3 3\\n3 4\\n3 5\\n4 3\\n4 4\\n4 5\\n5 4\\n5 5\\n6 5\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n3 2\\n3 3\\n3 4\\n3 5\\n4 3\\n4 4\\n4 5\\n5 4\\n5 5\\n6 5\\n3 1\\n3 2\\n3 3\\n3 4\\n3 5\\n4 3\\n4 4\\n4 5\\n5 4\\n5 5\\n6 5\\n4 1\\n4 2\\n4 3\\n4 4\\n4 5\\n5 4\\n5 5\\n6 5\\n5 1\\n5 2\\n5 3\\n5 4\\n5 5\") == \"possible\""
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\""
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 'possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3'\nassert solution() == 'possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3'"
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"possible\\n<1\\n^2\\n<2\\n^3\\n<3\""
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(sample_input) == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\\n\"\n\nsample_input = \"\"\"\n3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n\"\"\""
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\").read()) == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\"\n"
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\"\"\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\"\nassert solution(\"\"\"3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\"\"\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\""
    },
    {
        "number": 3650,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=solution_input) == solution_output, \"Incorrect output\"\n"
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == expected_output, f\"Your solution {solution} does not match the expected output {expected_output}\""
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\") == 2.0"
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''4\n0 0 1\n0 1 1\n2 0 3\n2 1 3''') == '2.0\\n'\nprint('Test passed')"
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\") == \"2.0\"\n"
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n4\n0 0 1\n0 1 1\n2 0 3\n2 1 3\n\"\"\") == \"2.0\\n\""
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\") == \"2.0\\n\"\nassert solution(\"0 0 0\\n1 1 1\\n2 2 2\\n3 3 3\") == \"10.0\\n\""
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"2.0\\n\", \"Testcase failed\""
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3') == '2.0'\nprint(\"All test cases pass!\")"
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"2.0\"\nassert solution(open(\"input2.txt\", \"r\")) == \"12.0\"\nassert solution(open(\"input3.txt\", \"r\")) == \"64.0\""
    },
    {
        "number": 3651,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\") == \"2.0\\n\"\n"
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7\\n5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2\") == \"4\", \"Test case 1 failed\"\n\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"10\", \"Test case 2 failed\"\n\nassert solution(\"5\\n1 2 3 4 5 6 7 8 9\") == \"4\", \"Test case 3 failed\""
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7\\n5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2\") == 4\nassert solution(\"7\\n5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2\") == 4\nassert solution(\"7\\n5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2\") == 4\nassert solution(\"7\\n5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2\") == 4\nassert solution(\"7\\n5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2\") == 4"
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"4\""
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2\\n\") == \"4\\n\""
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed. Expected output: {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"4\\n\" # output: \"4\\n\"\n\nSolution:\n\n```python\n"
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7\\n5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2\") == \"4\\n\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 4 3 2 1 6 7\") == \"4\", \"Solution for the first example should be '4'.\"\nassert solution(\"5 5 1 1 3 4 7\") == \"4\", \"Solution for the second example should be '4'.\"\nassert solution(\"3 7 1 4 5 6 2\") == \"2\", \"Solution for the third example should be '2'.\""
    },
    {
        "number": 3652,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n7\n5 4 3 2 1 6 7\n5 5 1 1 3 4 7\n3 7 1 4 5 6 2\n''') == '4\\n'"
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n-10 0\\n-10 10\") == \"2\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n-10 0\\n-10 10') == '2'\nassert solution('4\\n-10 0\\n-10 10') == '2'\nassert solution('4\\n-10 0\\n-10 10') == '2'\nassert solution('4\\n-10 0\\n-10 10') == '2'\nassert solution('4\\n-10 0\\n-10 10') == '2'\nassert solution('4\\n-10 0\\n-10 10') == '2'"
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n-10 0\\n-10 10\") == \"2\\n\""
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r')) == '2'"
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2\"\n"
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2\\n\"\n"
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n-10 0\\n-10 10\") == \"2\""
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n-10 0\\n-10 10\") == \"2\\n\""
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n-10 0\\n-10 10\") == \"2\""
    },
    {
        "number": 3653,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n-10 0\\n-10 10\") == \"2\\n\"\n"
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 5\") == \"0\\n\"\n"
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"0\"  # correct\nassert solution(\"1 5\") == \"0\"  # correct\nassert solution(\"2 1\") == \"1\"  # correct\nassert solution(\"5 5\") == \"2\"  # correct\nassert solution(\"10 10\") == \"3\"  # correct\nassert solution(\"1 20\") == \"21\"  # correct\nassert solution(\"20 20\") == \"21\"  # correct\nassert solution(\"1 1\") == \"0\"  # correct\nassert solution(\"10 5\") == \"0\"  # correct\nassert solution(\"100 100\") == \"21\"  # correct\n"
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"0\"\n"
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '0\\n'\nprint(solution(input()))"
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 5\") == \"0\"\n"
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"0\"\n"
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 5\") == \"0\"\nassert solution(\"2 7\") == \"0\"\nassert solution(\"3 9\") == \"1\"\nassert solution(\"4 12\") == \"1\"\nassert solution(\"5 15\") == \"2\"\n"
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 5\") == \"0\\n\"\n"
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 0, \"Expected output 0, but got: \" + str(solution())"
    },
    {
        "number": 3654,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 5\") == \"0\\n\"\nassert solution(\"10 10\") == \"1\\n\"\nassert solution(\"1000000 1000000\") == \"1000001\\n\""
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0 0\\n1 1\\n\"\nassert solution(\"2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0 0\\n1 1\\n\"\nassert solution(\"2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0 0\\n1 1\\n\""
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"\"\"0 0\n1 1\n\"\"\""
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == sample_output, \"The solution is not correct.\""
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0 0\\n1 1\""
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0 0\\n1 1\\n\"\nassert solution(\"2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0 0\\n1 1\\n\""
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '0 0\\n1 1'"
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(None) == \"Please provide input\""
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == sample_output, \"The output is incorrect.\"\n\nsample_input = \"\"\"\n2 2\n1 0\n0 1\n3 3\n1 0 0\n0 1 0\n0 0 1\n\"\"\"\n\nsample_output = \"\"\"\n0 0\n1 1\n\"\"\""
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\") == [\"0 0\", \"1 1\"]\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3655,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\") == \"0 0\\n1 1\"\nassert solution(\"2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\") == \"0 0\\n1 1\""
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 2 0.950000\\n0.700000 50') == '44.975'"
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 0.950000\\n0.700000 50\") == \"44.975\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"44.975\"\n"
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 0.950000\\n0.700000 50\") == \"44.975\"\nassert solution(\"1 1 0.850000\\n0.700000 49\") == \"43.875\"\nassert solution(\"1 1 0.750000\\n0.700000 48\") == \"42.775\"\nassert solution(\"1 1 0.650000\\n0.700000 47\") == \"41.675\"\nassert solution(\"1 1 0.550000\\n0.700000 46\") == \"40.575\"\nassert solution(\"1 1 0.450000\\n0.700000 45\") == \"39.475\"\nassert solution(\"1 1 0.350000\\n0.700000 44\") == \"38.375\"\nassert solution(\"1 1 0.250000\\n0.700000 43\") == \"37.275\"\nassert solution(\"1 1 0.150000\\n0.700000 42\") == \"36.175\"\nassert solution(\"1 1 0.050000\\n0.700000 41\") == \"35.075\"\nassert solution(\"1 1 0.000000\\n0.700000 40\") == \"33.975\"\nassert solution(\"1 1 0.000000\\n0.700000 39\") == \"32.875\"\nassert solution(\"1 1 0.000000\\n0.700000 38\") == \"31.775\"\nassert solution(\"1 1 0.000000\\n0.700000 37\") == \"30.675\"\nassert solution(\"1 1 0.000000\\n0.700000 36\") == \"29.575\"\nassert solution(\"1 1 0.000000\\n0.700000 35\") == \"28.475\"\nassert solution(\"1 1 0.000000\\n0.700000 34\") == \"27.375\"\nassert solution(\"1 1 0.000000\\n0.700000 33\") == \"26.275\"\nassert solution(\"1 1 0.000000\\n0.700000 32\") == \"25.175\"\nassert solution(\"1 1 0.000000\\n0.700000 31\") == \"24.075\"\nassert solution(\"1 1 0.000000\\n0.700000 30\") == \"22.975\"\nassert solution(\"1 1 0.000000\\n0.700000 29\") == \"21.875\"\nassert solution(\"1 1 0.000000\\n0.700000 28\") == \"20.775\"\nassert solution(\"1 1 0.000000\\n0.700000 27\") == \"19.675\"\nassert solution(\"1 1 0.000000\\n0.700000 26\") == \"18.575\"\nassert solution(\"1 1 0.000000\\n0.700000 25\") == \"17.475\"\nassert solution(\"1 1 0.000"
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 0.950000\\n0.700000 50\") == 44.975, \"Test Failed\""
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 2 0.950000\\n0.700000 50\\n') == '44.975\\n'"
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 0.950000\\n0.700000 50\") == \"44.975\\n\"\n"
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 44.975"
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 44.975, \"Test case 1 failed\""
    },
    {
        "number": 3656,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=input()) == '44.975'"
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\\n\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\\n\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\\n\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\\n\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\\n\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\\n\""
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Testcase failed: got '{solution(input())}', expected '{expected}'\"\n"
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\\n2\\n\"\nassert solution(\"3 3 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"IMPOSSIBLE\\n\"\n"
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(str(3) +'2 3\\n' + '1 1\\n' + str(5) +'2\\n' + '1 3\\n' + '3\\n' + '3\\n' + '2\\n' + '1\\n') == '2\\n'\nprint('All test cases passed!')"
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''3 2 3\n1 1\n5 2\n1 3\n3\n3\n2\n1''') == '2\\n'"
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"3\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"IMPOSSIBLE\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"IMPOSSIBLE\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"IMPOSSIBLE\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"IMPOSSIBLE\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"IMPOSSIBLE\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"IMPOSSIBLE\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"IMPOSSIBLE\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"IMPOSSIBLE\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"IMPOSSIBLE\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"IMPOSSIBLE\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"IMPOSSIBLE\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"IMPOSSIBLE\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"IMPOSSIBLE\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"IMPOSSIBLE\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"IMPOSSIBLE\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"IMPOSSIBLE\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"IMPOSSIBLE\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"IMPOSSIBLE\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"IMPOSSIBLE\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"IMPOSSIBLE\"\nassert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2\\n\" # The only possible pair of skis with speed 2 is (1, 3)\nassert solution(input()) == \"IMPOSSIBLE\\n\" # It is impossible to complete the race with any pair of skis with speed 2\n"
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n\") == \"2\\n\"\nassert solution(stdin=\"5 1\\n1 1\\n5 2\\n1 2\\n3\\n4\\n\") == \"5\\n\"\nassert solution(stdin=\"1 1\\n1 1\\n1 1\\n1 1\\n\") == \"IMPOSSIBLE\\n\""
    },
    {
        "number": 3657,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\") == \"2\\n\"\nassert solution(\"3 1 1\\n4 2\\n3 3\\n1 2\\n4 4\\n\") == \"1\\n\"\nassert solution(\"1 10\\n2 5\\n3 3\\n4 2\\n\") == \"IMPOSSIBLE\\n\""
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\") == 4.0, \"The correct answer is 4.0\""
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input) == output, f\"Test failed for input {input} and output {output}\"\n"
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\\n\") == \"4.0\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\") == \"4.0\"\n"
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\") == \"4.0\""
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == sample_output, f\"Test failed with input: {sample_input}, output: {sample_output}\""
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\") == \"4.0\"\n"
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0') == '4.0\\n'"
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0') == '4.0'\nassert solution('1 1\\n0.0 1.0\\n1.0 1.0\\n0.0 0.0') == '1.0'\nassert solution('1 3\\n0.0 1.0\\n1.0 1.0\\n0.0 2.0\\n0.0 0.0') == '1.0'\nassert solution('3 4\\n0.0 2.0\\n2.0 0.0\\n0.0 1.0\\n0.0 0.0\\n') == '1.0'\nassert solution('1 3\\n0.0 1.0\\n1.0 1.0\\n0.0 2.0\\n0.0 0.0') == '1.0'\nassert solution('1 3\\n0.0 1.0\\n1.0 1.0\\n0.0 2.0\\n0.0 0.0') == '1.0'\nassert solution('2 1\\n1.0 1.0\\n1.0 0.0\\n1.0 0.0') == '0.0'\nassert solution('3 2\\n0.0 0.0\\n0.0 0.0\\n0.0 1.0\\n0.0 1.0') == '0.0'\nassert solution('3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0') == '4.0'\nassert solution('1 1\\n0.0 1.0\\n1.0 1.0\\n0.0 0.0') == '1.0'\nassert solution('1 3\\n0.0 1.0\\n1.0 1.0\\n0.0 2.0\\n0.0 0.0') == '1.0'\nassert solution('3 4\\n0.0 2.0\\n2.0 0.0\\n0.0 1.0\\n0.0 0.0\\n') == '1.0'\nassert solution('1 3\\n0.0 1.0\\n1.0 1.0\\n0.0 2.0\\n0.0 0.0') == '1.0'\nassert solution('2 1\\n1.0 1.0\\n1.0 0.0\\n1.0 0.0') == '0.0'\nassert solution('3 2\\n0.0 0.0\\n0.0 0.0\\n0.0 1.0\\n0.0 1.0') == '0.0'"
    },
    {
        "number": 3658,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"18000\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    Input:\n    4\n    220 29\n    195 20\n    200 9\n    180 30\n    \"\"\"\n) == \"18000\\n\""
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n220 29\\n195 20\\n200 9\\n180 30\") == \"18000\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(None) == \"Output one line containing the minimum area (height times width) of a three-shelf bookcase capable of holding all the books, expressed in square millimeters.\\n\"\nassert solution(\"\") == \"Output one line containing the minimum area (height times width) of a three-shelf bookcase capable of holding all the books, expressed in square millimeters.\\n\"\nassert solution(\"1\\n\") == \"Output one line containing the minimum area (height times width) of a three-shelf bookcase capable of holding all the books, expressed in square millimeters.\\n\"\nassert solution(\"2\\n\") == \"Output one line containing the minimum area (height times width) of a three-shelf bookcase capable of holding all the books, expressed in square millimeters.\\n\"\nassert solution(\"3\\n\") == \"Output one line containing the minimum area (height times width) of a three-shelf bookcase capable of holding all the books, expressed in square millimeters.\\n\"\nassert solution(\"4\\n\") == \"Output one line containing the minimum area (height times width) of a three-shelf bookcase capable of holding all the books, expressed in square millimeters.\\n\"\nassert solution(\"5\\n\") == \"Output one line containing the minimum area (height times width) of a three-shelf bookcase capable of holding all the books, expressed in square millimeters.\\n\"\nassert solution(\"6\\n\") == \"Output one line containing the minimum area (height times width) of a three-shelf bookcase capable of holding all the books, expressed in square millimeters.\\n\"\nassert solution(\"7\\n\") == \"Output one line containing the minimum area (height times width) of a three-shelf bookcase capable of holding all the books, expressed in square millimeters.\\n\"\nassert solution(\"8\\n\") == \"Output one line containing the minimum area (height times width) of a three-shelf bookcase capable of holding all the books, expressed in square millimeters.\\n\"\nassert solution(\"9\\n\") == \"Output one line containing the minimum area (height times width) of a three-shelf bookcase capable of holding all the books, expressed in square millimeters.\\n\"\nassert solution(\"10\\n\") == \"Output one line containing the minimum area (height times width) of a three-shelf bookcase capable of holding all the books, expressed in square millimeters.\\n\"\nassert solution(\"11\\n\") == \"Output one line containing the minimum area (height times width) of a three-shelf bookcase capable of holding all the books, expressed in square millimeters.\\n\"\nassert solution(\"12\\n\") == \"Output one line containing the minimum area (height times width) of a three-shelf bookcase capable of holding all the books, expressed in square millimeters.\\n\"\nassert solution(\"13\\n\") == \"Output one line containing the minimum area (height times width) of a three-shelf bookcase capable of holding all the books, expressed in square millimeters.\\n\"\nassert solution(\"14\\n\") == \"Output one line containing the minimum area (height times width) of a three-shelf bookcase capable of holding all the books, expressed in square millimeters.\\n\"\nassert solution(\"15\\n\") == \"Output one line containing the minimum area (height times width) of a three-shelf bookcase capable of holding all the books, expressed in square millimeters.\\n\"\nassert solution(\"16\\n\") == \"Output one line containing the minimum area (height times width) of a three-shelf bookcase capable of holding all the books, expressed in square millimeters.\\n\"\nassert solution(\"17\\n\") == \"Output one line containing the minimum area (height times width) of a three-shelf bookcase capable of holding all the books, expressed in square millimeters.\\n\"\nassert solution(\"18\\n\") == \"Output one line containing the minimum area (height times width) of a three-shelf bookcase capable of holding all the books, expressed in square millimeters.\\n\"\nassert solution(\"19\\n\") == \"Output one line containing the minimum area (height times width) of a three-shelf bookcase capable of holding all the books, expressed in square millimeters.\\n\"\nassert solution(\"20\\n\") == \"Output one line containing the minimum area (height times width) of a three-shelf bookcase capable of holding all the books, expressed in square millimeters.\\n\"\nassert solution(\"21\\n\") == \"Output one line containing the minimum area (height times width) of a three-shelf bookcase capable of holding all the books, expressed in square millimeters.\\n\"\nassert solution(\"22\\n\")"
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n220 29\\n195 20\\n200 9\\n180 30\") == \"18000\"\nassert solution(\"4\\n220 29\\n195 20\\n200 9\\n180 30\") == \"18000\"\nassert solution(\"4\\n220 29\\n195 20\\n200 9\\n180 30\") == \"18000\"\nassert solution(\"4\\n220 29\\n195 20\\n200 9\\n180 30\") == \"18000\"\nassert solution(\"4\\n220 29\\n195 20\\n200 9\\n180 30\") == \"18000\""
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"18000\"\n"
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 18000, \"Incorrect output: 18000 expected.\""
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n220 29\\n195 20\\n200 9\\n180 30') == '18000'\nassert solution('3\\n100 30\\n200 20\\n150 25\\n250 15\\n160 10') == '13600'\nassert solution('1\\n100 30\\n200 20\\n150 25\\n250 15\\n160 10') == '23600'"
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"18000\\n\""
    },
    {
        "number": 3659,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"18000\""
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"BUYSTICKERS\") == 28, \"Your solution is incorrect. The output should be 28.\""
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nSTICKERS 1\\nERS 8\") == \"28\"\nassert solution(\"DONOTBUYSTICKERS\\n2\\nSTICKY 10\\nSTICKERS 2\\nBUYER 10\\nSTICKY 10\\nSTICKERS 2\\nERS 8\") == \"IMPOSSIBLE\"\nassert solution(\"BUYSTICKERS\\n5\\nSTICKY 10\\nSTICKERS 2\\nBUYER 10\\nSTICKY 10\\nSTICKERS 2\\nERS 8\\nSTICKY 10\\nSTICKERS 2\\nBUYER 10\\nSTICKY 10\\nSTICKERS 2\\nERS 8\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\") == \"28\"\nassert solution(\"BUYSTICKERS\\n2\\nSTICKY 10\\nSTICKY 5\\nTICKERS 1\\nERS 8\") == \"IMPOSSIBLE\"\nassert solution(\"BUYSTICKERS\\n1\\nSTICKY 10\\nSTICKY 5\\nTICKERS 1\\nERS 8\") == \"IMPOSSIBLE\"\nassert solution(\"BUYSTICKERS\\n2\\nSTICKY 10\\nSTICKY 5\\nSTICKY 10\\nTICKERS 1\\nERS 8\") == \"IMPOSSIBLE\"\nassert solution(\"BUYSTICKERS\\n4\\nSTICKY 10\\nSTICKY 5\\nSTICKY 10\\nSTICKY 5\\nTICKERS 1\\nERS 8\") == \"28\""
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\") == \"28\\ndef solution(stdin: str) -> str:\\npass\"\n"
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\") == \"28\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\""
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nSTICKERS 1\\nERS 8\\n') == '28\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\") == \"28\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\") == \"28\""
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nSTICKERS 1\\nERS 8\\n\") == 28\n"
    },
    {
        "number": 3660,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\") == \"28\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\") == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\\n\""
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\") == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\"\n"
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\") == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\"\nassert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\") == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\""
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    5 3 8\n    1 1\n    2 1\n    3 1\n    4 2\n    5 2\n    3 3\n    4 3\n    5 3\n    \"\"\"\n) == \"\"\"\n    INDV 1\n    INDV 2\n    CORP 1\n    INDV 4\n    CORP 2\n    INDV 3\n    CORP 3\n    INDV 5\n    \"\"\"\n\nassert solution(\n    \"\"\"\n    5 3 8\n    1 1\n    2 1\n    3 1\n    4 2\n    5 2\n    3 3\n    4 3\n    5 3\n    \"\"\"\n) == \"\"\"\n    INDV 1\n    INDV 2\n    CORP 1\n    INDV 4\n    CORP 2\n    INDV 3\n    CORP 3\n    INDV 5\n    \"\"\""
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\") == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\\n\""
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(sample_input) == expected_output, f\"Expected output: {expected_output}, got: {solution(sample_input)}\""
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\") == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\\n\""
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"\"\"\nINDV 1\nINDV 2\nCORP 1\nINDV 4\nCORP 2\nINDV 3\nCORP 3\nINDV 5\n\"\"\""
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3') == \"\"\"INDV 1\nINDV 2\nCORP 1\nINDV 4\nCORP 2\nINDV 3\nCORP 3\nINDV 5\"\"\"\n\nassert solution('5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3') == \"\"\"INDV 1\nINDV 2\nCORP 1\nINDV 4\nCORP 2\nINDV 3\nCORP 3\nINDV 5\"\"\""
    },
    {
        "number": 3661,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\") == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\""
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2.4142135624\""
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2.4142135624\", \"Test failed.\""
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2.4142135624\"\n"
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == sample_output\n\nsample_input = \"\"\"\n4\n10 1\n1\n0\n10\n10\n\"\"\"\n\nsample_output = \"\"\"\n2.4142135624\n\"\"\""
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\""
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\\n\") == \"2.4142135624\"\nassert solution(\"5\\n10 1\\n1\\n0\\n10\\n10\\n2\\n0\\n10\\n10\\n2\\n0\\n10\\n\") == \"2.4142135624\"\nassert solution(\"6\\n10 1\\n1\\n0\\n10\\n10\\n2\\n0\\n10\\n10\\n2\\n0\\n10\\n2\\n0\\n10\\n\") == \"2.4142135624\"\nassert solution(\"7\\n10 1\\n1\\n0\\n10\\n10\\n2\\n0\\n10\\n10\\n2\\n0\\n10\\n2\\n0\\n10\\n2\\n0\\n10\\n\") == \"2.4142135624\"\nassert solution(\"8\\n10 1\\n1\\n0\\n10\\n10\\n2\\n0\\n10\\n10\\n2\\n0\\n10\\n2\\n0\\n10\\n2\\n0\\n10\\n2\\n0\\n10\\n2\\n0\\n10\\n\") == \"2.4142135624\"\nassert solution(\"9\\n10 1\\n1\\n0\\n10\\n10\\n2\\n0\\n10\\n10\\n2\\n0\\n10\\n2\\n0\\n10\\n2\\n0\\n10\\n2\\n0\\n10\\n2\\n0\\n10\\n2\\n0\\n10\\n2\\n0\\n10\\n2\\n0\\n10\\n\") == \"2.4142135624\"\nassert solution(\"10\\n10 1\\n1\\n0\\n10\\n10\\n2\\n0\\n10\\n10\\n2\\n0\\n10\\n2\\n0\\n10\\n2\\n0\\n10\\n2\\n0\\n10\\n2\\n0\\n10\\n2\\n0\\n10\\n2\\n0\\n10\\n2\\n0\\n10\\n2\\n0\\n10\\n2\\n0\\n10\\n2\\n0\\n10\\n2\\n0\\n10\\n2\\n0\\n10\\n2\\n0\\n10\\n2\\n0\\n10\\n\") == \"2.4142135624\""
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\") == 2.4142135624"
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\n10 1\\n1\\n0\\n10\\n10\\n') == '2.4142135624'"
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n4\n10 1\n1\n0\n10\n10\n\"\"\") == '2.4142135624'"
    },
    {
        "number": 3662,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n4\n10 1\n1\n0\n10\n10\n\"\"\") == \"2.4142135624\"\n"
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\\n') == '15\\n'\n"
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\") == \"15\\n\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == '15\\n'\n"
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\") == \"15\\n\"\n"
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"Bwahahahahaha!!! Your nemesis, the dashingly handsome spy Waco Powers, has at last fallen to your secret volcano base\u2019s deathtraps (or so you assume, being a little too busy to witness it firsthand). At long last, you are all set to Conquer The World!\n\nNothing will stand in your way! Well, nothing except a minor problem of logistics. Your evil armies have announced that they will not continue carving their relentless path of destruction across the puny nations of the world without being paid. And unfortunately you are running low on cash \u2013 a volcano lair has many wonderful qualities, but \u201creasonably affordable\u201d is not one of them. You have had to pull funds from the travel budget to pay your ungrateful underlings. Now you are not sure how you will actually get your armies into position to Conquer The World.\n\nYou have a map of the nations of the world and all your available transport routes between them. Each route connects two nations and has a fixed cost per army that uses it. The routes are laid out such that there is exactly one way to travel between any two nations. You know the current position of each of your armies and how many you will need to place permanently in each nation in order to subjugate it. How can you move the armies into place as cheaply as possible so you can Conquer The World?\n\n-----Input-----\nThe first line of input contains an integer $n$ ($1 \\le n \\le 250000$), the number of nations. This is followed by $n-1$ lines, each containing three integers $u$, $v$, and $c$ ($1 \\le u, v \\le n$, $1 \\le c \\le 10^6$), indicating that there is a bidirectional route connecting nations $u$ and $v$, which costs $c$ per army to use.\n\nFinally, another $n$ lines follow, the $i^{\\text {th}}$ of which contains two non-negative integers $x_ i$ and $y_ i$, indicating that there are currently $x_ i$ armies in nation $i$, and you need at least $y_ i$ armies to end up in that nation in the final configuration. The total number of armies (the sum of the $x_ i$ values) is at least the sum of the $y_ i$ values, and no more than $10^6$.\n\n-----Output-----\nDisplay the minimum cost to move your armies such that there are at least $y_ i$ armies in nation $i$ for all $i$.\n\n-----Examples-----\nSample Input:\n3\n1 2 5\n3 1 5\n2 1\n5 0\n1 3\nSample Output:\n15\n"
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    3\n    1 2 5\n    3 1 5\n    2 1\n    5 0\n    1 3\n    \"\"\"\n) == \"15\\n\"\n\nassert solution(\n    \"\"\"\n    5\n    1 2 3 4 5\n    2 1 3 4\n    3 1 2 5\n    4 1 2\n    5 1 2\n    \"\"\"\n) == \"15\\n\"\n\nassert solution(\n    \"\"\"\n    3\n    1 2 5\n    3 1 5\n    2 1\n    5 0\n    1 3\n    \"\"\"\n) == \"15\\n\"\n\nassert solution(\n    \"\"\"\n    1\n    1 2 3 4 5\n    2 1 3 4\n    3 1 2 5\n    4 1 2\n    5 1 2\n    \"\"\"\n) == \"15\\n\""
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\") == \"15\\n\""
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"15\", \"Test failed\""
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 'Bwahahahahahaha!!! Your nemesis, the dashingly handsome spy Waco Powers, has at last fallen to your secret volcano base\u2019s deathtraps (or so you assume, being a little too busy to witness it firsthand). At long last, you are all set to Conquer The World!\n\nNothing will stand in your way! Well, nothing except a minor problem of logistics. Your evil armies have announced that they will not continue carving their relentless path of destruction across the puny nations of the world without being paid. And unfortunately you are running low on cash \u2013 a volcano lair has many wonderful qualities, but \u201creasonably affordable\u201d is not one of them. You have had to pull funds from the travel budget to pay your ungrateful underlings. Now you are not sure how you will actually get your armies into position to Conquer The World.\n\nYou have a map of the nations of the world and all your available transport routes between them. Each route connects two nations and has a fixed cost per army that uses it. The routes are laid out such that there is exactly one way to travel between any two nations. You know the current position of each of your armies and how many you will need to place permanently in each nation in order to subjugate it. How can you move the armies into place as cheaply as possible so you can Conquer The World?\n\n-----Input-----\nThe first line of input contains an integer $n$ ($1 \\le n \\le 250000$), the number of nations. This is followed by $n-1$ lines, each containing three integers $u$, $v$, and $c$ ($1 \\le u, v \\le n$, $1 \\le c \\le 10^6$), indicating that there is a bidirectional route connecting nations $u$ and $v$, which costs $c$ per army to use.\n\nFinally, another $n$ lines follow, the $i^{\\text {th}}$ of which contains two non-negative integers $x_ i$ and $y_ i$, indicating that there are currently $x_ i$ armies in nation $i$, and you need at least $y_ i$ armies to end up in that nation in the final configuration. The total number of armies (the sum of the $x_ i$ values) is at least the sum of the $y_ i$ values, and no more than $10^6$.\n\n-----Output-----\nDisplay the minimum cost to move your armies such that there are at least $y_ i$ armies in nation $i$ for all $i$.\n\n-----Examples-----\nSample Input:\n3\n1 2 5\n3 1 5\n2 1\n5 0\n1 3\nSample Output:\n15\n"
    },
    {
        "number": 3663,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\") == \"15\""
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == expected"
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input) == output, f\"Test {test_case} failed: input '{input}'\\noutput '{output}'\" for test_case, input, output in [\n    (1, 5, \"....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test 1\\nassert solution(\\n    input = '''\\n    5 5 3 3 4\\n    ''',\\n    output = '''\\n   .DDD\\n   .ABC\\n   .C.C\\n   .C.D\\n    @DDDD\\n    ''',\\n)\\n\\n# Test 2\\nassert solution(\\n    input = '''\\n    5 5 3 3 4\\n    ''',\\n    output = '''\\n   .DDD\\n   .ABC\\n   .C.C\\n   .C.D\\n    @DDDD\\n    ''',\\n)\\n\\n# Test 3\\nassert solution(\\n    input = '''\\n    5 5 3 3 4\\n    ''',\\n    output = '''\\n   .DDD\\n   .ABC\\n   .C.C\\n   .C.D\\n    @DDDD\\n    ''',\\n)\\n\\n# Test 4\\nassert solution(\\n    input = '''\\n    5 5 3 3 4\\n    ''',\\n    output = '''\\n   .DDD\\n   .ABC\\n   .C.C\\n   .C.D\\n    @DDDD\\n    ''',\\n)\\n\\n# Test 5\\nassert solution(\\n    input = '''\\n    5 5 3 3 4\\n    ''',\\n    output = '''\\n   .DDD\\n   .ABC\\n   .C.C\\n   .C.D\\n    @DDDD\\n    ''',\\n)\\n\\n# Test 6\\nassert solution(\\n    input = '''\\n    5 5 3 3 4\\n    ''',\\n    output = '''\\n   .DDD\\n   .ABC\\n   .C.C\\n   .C.D\\n    @DDDD\\n    ''',\\n)\\n\\n# Test 7\\nassert solution(\\n    input = '''\\n    5 5 3 3 4\\n    ''',\\n    output = '''\\n   .DDD\\n   .ABC\\n   .C.C\\n   .C.D\\n    @DDDD\\n    ''',\\n)\\n\\n# Test 8\\nassert solution(\\n    input = '''\\n    5 5 3 3 4\\n    ''',\\n    output = '''\\n   .DDD\\n   .ABC\\n   .C.C\\n   .C.D\\n    @DDDD\\n    ''',\\n)\\n\\n# Test 9\\nassert solution(\\n    input = '''\\n    5 5 3 3 4\\n    ''',\\n    output = '''\\n   .DDD\\n   .ABC\\n   .C.C\\n   .C.D\\n    @DDDD\\n    ''',\\n)\\n\\n# Test 10\\nassert solution(\\n    input = '''\\n    5 5 3 3 4\\n    ''',\\n    output = '''\\n   .DDD\\n   .ABC\\n   .C.C\\n   .C.D\\n    @DDDD\\n    ''',\\n)\\n\\n# Test 11\\nassert solution(\\n    input = '''\\n    5 5 3 3 4\\n    ''',\\n    output = '''\\n   .DDD\\n   .ABC\\n   .C.C\\n   .C.D\\n    @DDDD\\n    ''',\\n)\\n\\n# Test 12\\nassert solution(\\n    input = '''\\n    5 5 3 3 4\\n    ''',\\n    output = '''\\n   .DDD\\n   .ABC\\n   .C.C\\n   .C.D\\n    @DDDD\\n    ''',\\n)\\n\\n# Test 13\\nassert solution(\\n    input ="
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"......\n..BBC\n..A.C\n....C\n@DDDD\n"
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 5 3 3 4\") == \".....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Here's the code implementation of the solution function:\\n# pass\""
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 5 3 3 4\") == \".....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# test cases\\nassert solution('5 5 3 3 4') == '.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution('5 5 3 4 5') == '.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution('5 5 4 3 4') == '.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution('5 5 1 1 5') == '.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution('5 5 1 1 10000000') == '.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution('5 5 1 1 100000000') == '.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution('1 1 1 1 100000000') == '.....\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution('5 5 1 1 1000000000000000') == '.....\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution('1 1 1 1 1000000000000000000') == '.....\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution('1 1 1 1 100000000000000000000') == '.....\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution('1 1 1 1 10000000000000000000000') == '.....\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution('1 1 1 1 1000000000000000000000000') == '.....\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution('1 1 1 1 1000000000000000000000000000') == '.....\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution('1 1 1 1 100000000000000000000000000000') == '.....\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution('1 1 1 1 1000000000000000000000000000000') == '.....\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution('1 1 1 1 100000000000000000000000000000000') == '.....\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution('1 1 1 1 1000000000000000000"
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 5 3 3 4') == '.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# test cases\\nassert solution(\\'5 5 3 3 4\\') == \\'.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution(\\'5 5 2 2 4\\') == \\'.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution(\\'5 5 4 4 4\\') == \\'.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution(\\'5 5 4 4 5\\') == \\'.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution(\\'5 5 4 4 6\\') == \\'.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution(\\'5 5 4 4 7\\') == \\'.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution(\\'5 5 4 4 8\\') == \\'.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution(\\'5 5 4 4 9\\') == \\'.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution(\\'5 5 4 4 10\\') == \\'.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution(\\'5 5 4 4 11\\') == \\'.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution(\\'5 5 4 4 12\\') == \\'.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution(\\'5 5 4 4 13\\') == \\'.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution(\\'5 5 4 4 14\\') == \\'.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution(\\'5 5 4 4 15\\') == \\'.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution(\\'5 5 4 4 16\\') == \\'.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution(\\'5 5 4 4 17\\') == \\'.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution(\\'5 5 4 4 18\\') == \\'.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nassert solution(\\'5 5 4 4 19\\') == \\'.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution("
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '....\\n..ABC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n\\nprint(solution(stdin))'"
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"Test case failed.\"\n"
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 5 3 3 4\") == '.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3664,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 5 3 3 4') == '.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 3\\n111\\n001\\n000\\n111\\n000') == '001\\n001\\n001\\n111\\n200\\n'\nassert solution('5 4\\n111\\n001\\n000\\n111\\n000\\n111') == '001\\n001\\n001\\n111\\n200\\n111\\n'\nassert solution('5 5\\n111\\n001\\n000\\n111\\n000\\n111\\n111\\n000\\n111\\n000\\n') == '001\\n001\\n001\\n111\\n200\\n111\\n111\\n200\\n111\\n'\nassert solution('5 1\\n111\\n001\\n000\\n111\\n000\\n111\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000\\n111\\n000"
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 3\\n111\\n001\\n000\\n111\\n000') == '001\\n001\\n001\\n111\\n200'\nassert solution('1 2\\n3 4\\n5 6\\n7 8\\n9 10') == '5 6\\n7 8\\n9 10\\n3 4\\n1 2\\n'\nassert solution('1 10\\n9 8\\n7 6\\n5 4\\n3 2') == '3 2\\n5 4\\n7 6\\n9 8\\n10 10'\nassert solution('1 3\\n2 4\\n3 5\\n4 6\\n5 7\\n6 8\\n7 9\\n8 10\\n9 11\\n10 12\\n11 13\\n12 14\\n13 15\\n14 16\\n15 17\\n16 18\\n17 19\\n18 20\\n19 21\\n20 22\\n21 23\\n22 24\\n23 25\\n24 26\\n25 27\\n26 28\\n27 29\\n28 30\\n29 31\\n30 32\\n31 33\\n32 34\\n33 35\\n34 36\\n35 37\\n36 38\\n37 39\\n38 40\\n39 41\\n40 42\\n41 43\\n42 44\\n43 45\\n44 46\\n45 47\\n46 48\\n47 49\\n48 50\\n49 51\\n50 52\\n51 53\\n52 54\\n53 55\\n54 56\\n55 57\\n56 58\\n57 59\\n58 60\\n59 61\\n60 62\\n61 63\\n62 64\\n63 65\\n64 66\\n65 67\\n66 68\\n67 69\\n68 70\\n69 71\\n70 72\\n71 73\\n72 74\\n73 75\\n74 76\\n75 77\\n76 78\\n77 79\\n78 80\\n79 81\\n80 82\\n81 83\\n82 84\\n83 85\\n84 86\\n85 87\\n86 88\\n87 89\\n88 90\\n89 91\\n90 92\\n91 93\\n92 94\\n93 95\\n94 96\\n95 97\\n96 98\\n97 99\\n98 100\\n99 101\\n100 102\\n101 103\\n102 104\\n103 105\\n104 106\\n105 107\\n106 108\\n107 109\\n108 110\\n109 111\\n110 112\\n111 113\\n112 114\\n113 115\\n114 116\\n115 117\\n116 118\\n117 119\\n118 120\\"
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\""
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\\n\") == \"001\\n001\\n001\\n111\\n200\\n\"\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n001\\n\") == \"001\\n001\\n001\\n111\\n200\\n\"\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\\n\") == \"001\\n001\\n001\\n111\\n200\\n\"\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n001\\n\") == \"001\\n001\\n001\\n111\\n200\\n\"\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\\n\") == \"001\\n001\\n001\\n111\\n200\\n\"\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n001\\n\") == \"001\\n001\\n001\\n111\\n200\\n\"\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\\n\") == \"001\\n001\\n001\\n111\\n200\\n\""
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r')) == '001\\n001\\n001\\n111\\n200'\nassert solution(open('input2.txt', 'r')) == '111\\n200'\nassert solution(open('input3.txt', 'r')) == '200'\nassert solution(open('input4.txt', 'r')) == '111'\nassert solution(open('input5.txt', 'r')) == '000'"
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\""
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"001\"\n"
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\"\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\\n111\\n001\\n000\\n000\\n000\\n000\\n000\\n001\\n000\\n000\\n001\\n000\\n000\\n000\\n000\\n000\\n000\\n001\\n000\\n000\\n001\\n000\\n000\\n000\\n000\\n000\\n001\\n000\\n000\\n001\\n000\\n000\\n000\\n000\\n000\\n000\\n001\\n000\\n000\\n001\\n000\\n000\\n000\\n000\\n000\\n001\\n000\\n000\\n001\\n000\\n000\\n000\\n000\\n000\\n001\\n000\\n000\\n001\\n000\\n000\\n000\\n000\\n000\\n001\\n000\\n000\\n001\\n000\\n000\\n000\\n000\\n000\\n001\\n000\\n000\\n001\\n000\\n000\\n000\\n000\\n000\\n000\\n001\\n000\\n000\\n001\\n000\\n000\\n000\\n000\\n000\\n001\\n000\\n000\\n001\\n000\\n000\\n000\\n000\\n000\\n001\\n000\\n000\\n001\\n000\\n000\\n000\\n000\\n000\\n001\\n000\\n000\\n001\\n000\\n000\\n000\\n000\\n000\\n000\\n001\\n000\\n000\\n001\\n000\\n000\\n000\\n000\\n000\\n000\\n001\\n000\\n000\\n001\\n000\\n000\\n000\\n000\\n000\\n000\\n001\\n000\\n000\\n001\\n000\\n000\\n000\\n000\\n000\\n000\\n001\\n000\\n000\\n001\\n000\\n000\\n000\\n000\\n000\\n000\\n001\\n000\\n000\\n001\\n000\\n000\\n000\\n000\\n000\\n000\\n001\\n000\\n000\\n001\\n000\\n000\\n000\\n000\\n000\\n000\\n001\\n000\\n000\\n001\\n000\\n000\\n000\\n000\\"
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\\n\"\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\\n\"\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\\n\"\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\\n\"\nassert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\\n\""
    },
    {
        "number": 3665,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\\n\""
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\") == \"19 20\\n17 15 14 13 7 2\"\nassert solution(\"21/21\\n20/20\\n21/20\\n21/20\\n20/19\\n19/19\\n20/18\\n21/17\\n20/16\\n20/15\\n19/14\\n19/13\\n18/12\\n18/11\\n17/10\\n17/9\\n16/8\\n16/7\\n15/6\\n15/5\\n14/4\\n14/3\\n13/2\\n13/1\\n12/1\") == \"impossible\""
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\") == \"19 20\\n17 15 14 13 7 2\"\nassert solution(\"19/13\\n11/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\") == \"19 20\\n17 15 14 13 7 2\"\nassert solution(\"19/13\\n12/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\") == \"Impossible\"\nassert solution(\"19/13\\n1/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\") == \"Impossible\"\nassert solution(\"19/13\\n12/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\") == \"Impossible\"\nassert solution(\"19/13\\n19/13\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\") == \"Impossible\""
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"19 20\\n17 15 14 13 7 2\"\n"
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\") == \"19 20\\n17 15 14 13 7 2\""
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17') == '19 20\\n17 15 14 13 7 2\\n'\nassert solution('19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\"
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\") == \"19 20\\n17 15 14 13 7 2\"\nassert solution(\"19/13\\n11/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\") == \"19 20\\n17 15 14 13 7 2\"\nassert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/19\\n10/9\\n20/19\\n19/3\\n19/19\\n10/10\\n20/19\\n19/19\\n19/19\") == \"19 20\\n17 15 14 13 7 2\"\nassert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n19/19\\n10/9\\n20/19\\n19/3\\n19/19\\n10/10\\n20/19\\n19/19\\n19/19\\n19/19\") == \"impossible\""
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\") == \"19 20\\n17 15 14 13 7 2\"\nassert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n3/2\\n6/3\\n7/4\\n8/5\\n9/6\\n10/7\\n11/8\\n12/9\\n13/10\\n14/11\\n15/12\\n16/13\\n17/14\\n18/15\\n20/16\\n21/17\\n22/18\\n23/19\\n24/20\\n25/21\\n26/22\\n27/23\\n28/24\\n29/25\\n30/26\\n31/27\\n32/28\\n33/29\\n34/30\\n35/31\\n36/32\\n37/33\\n38/34\\n39/35\\n40/36\\n41/37\\n42/38\\n43/39\\n44/40\\n45/41\\n46/42\\n47/43\\n48/44\\n49/45\\n50/46\\n51/47\\n52/48\\n53/49\\n54/50\\n55/51\\n56/52\\n57/53\\n58/54\\n59/55\\n60/56\\n61/57\\n62/58\\n63/59\\n64/60\\n65/61\\n66/62\\n67/63\\n68/64\\n69/65\\n70/66\\n71/67\\n72/68\\n73/69\\n74/70\\n75/71\\n76/72\\n77/73\\n78/74\\n79/75\\n80/76\\n81/77\\n82/78\\n83/79\\n84/80\\n85/81\\n86/82\\n87/83\\n88/84\\n89/85\\n90/86\\n91/87\\n92/88\\n93/89\\n94/90\\n95/91\\n96/92\\n97/93\\n98/94\\n99/95\\n100/96\\n101/97\\n102/98\\n103/99\\n104/100\\n105/101\\n106/102\\n107/103\\n108/104\\n109/105\\n110/106\\n111/107\\n112/108\\n113/109\\n114/110\\n115/111\\n116/112\\n117/113\\n118/114\\n119/115\\n120/116\\n121/117\\n12"
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\") == \"19 20\\n17 15 14 13 7 2\\n\"\nassert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n18/6\\n19/16\\n19/14\\n19/11\\n19/8\\n19/12\") == \"19 20\\n17 15 14 13 7 2\\n\""
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n\") == \"19 20\\n17 15 14 13 7 2\"\nassert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n20/12\\n10/5\\n10/3\\n20/15\\n10/2\\n10/4\\n20/10\\n\") == \"19 20\\n17 15 14 13 7 2\"\nassert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n20/12\\n10/5\\n10/3\\n20/15\\n10/2\\n10/4\\n20/10\\n20/16\\n10/1\\n10/6\\n20/9\\n10/7\\n10/5\\n20/11\\n\") == \"19 20\\n17 15 14 13 7 2\"\nassert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n20/12\\n10/5\\n10/3\\n20/15\\n10/2\\n10/4\\n20/10\\n20/16\\n10/1\\n10/6\\n20/9\\n10/7\\n10/5\\n20/11\\n20/18\\n10/8\\n10/6\\n20/12\\n\") == \"impossible\""
    },
    {
        "number": 3666,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n19/13\n10/1\n19/14\n4/3\n20/7\n19/7\n20/13\n19/15\n10/7\n20/17\n19/2\n19/17\n''') == '''\n19 20\n17 15 14 13 7 2\n''', \"Test case 1\"\n\nassert solution('''\n17/12\n18/10\n12/1\n15/1\n13/2\n18/14\n14/1\n12/11\n14/2\n15/3\n17/13\n11/1\n16/1\n18/7\n19/4\n12/12\n16/2\n16/3\n19/1\n19/5\n18/15\n15/4\n17/8\n12/13\n15/1\n19/16\n16/10\n15/11\n19/6\n16/4\n12/10\n12/5\n18/10\n13/3\n17/6\n14/1\n18/5\n15/2\n18/2\n15/6\n18/9\n19/12\n17/10\n13/1\n13/2\n19/7\n13/4\n16/5\n12/4\n16/6\n19/8\n18/6\n14/3\n14/4\n13/5\n15/5\n13/6\n18/16\n15/7\n17/9\n12/6\n12/7\n14/5\n15/3\n16/7\n18/11\n18/8\n12/8\n15/10\n19/9\n19/13\n14/2\n18/3\n19/11\n18/12\n12/9\n18/4\n14/5\n18/13\n15/8\n14/6\n16/8\n17/11\n18/17\n19/10\n17/7\n12/3\n19/14\n13/1\n13/3\n19/15\n16/9\n14/1\n16/11\n12/2\n19/17\n17/5\n16/12\n19/2\n19/18\n12/1\n16/13\n18/1\n19/16\n18/14\n16/14\n14/7\n14/8\n19/3\n16/10\n19/1\n19/19\n15/1\n17/1\n12/1\n14/9\n16/15\n12/1\n19/15\n13/1\n15/2\n17/2\n16/16\n18/16\n14/1\n19/10\n19/11\n17/4\n16/17\n17/3\n12/2\n18/15\n18/2\n19/5\n14/2\n15/4\n12/3\n13/2\n14/6\n19/4\n16/18\n18/12\n14/3\n17/6\n18/10\n15/3\n19/6\n17/10\n16/19\n13/3\n17/1\n19/13\n18/11\n16/2\n12/4\n12/6\n17/5\n18/13\n17/8\n16/1\n18/9\n19/14\n18/15\n19/12\n18/13\n16/13\n16/12\n12/5\n18/14\n14/1\n18/16\n"
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\\n\") == \"possible\"\nassert solution(\"2 2\\n1 0 0\\n2 1 0\\n3 0 0\\n0 1 0\\n4 1 2\\n\") == \"possible\"\nassert solution(\"3 1\\n1 0 0\\n0 1 0\\n2 0 1\\n3 1 0\\n\") == \"possible\"\nassert solution(\"1 1\\n0 0 0\\n1 0 0\\n0 1 0\\n\") == \"possible\"\nassert solution(\"4 5\\n1 0 0\\n0 1 0\\n2 0 1\\n3 1 0\\n4 0 0\\n\") == \"impossible\""
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\") == \"possible\"\nassert solution(\"3 5\\n0 0\\n0 1\\n1 0\\n1 1\\n2 2\\n3 3 3\\n4 4 4\\n5 5 5\") == \"impossible\""
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\nr\"\"\"\n3 3\n0 0\n0 2\n2 0\n1 2 3\n2 2 2\n3 0 3\n\"\"\") == \"possible\"\n\nassert solution(\nr\"\"\"\n3 3\n0 0\n1 2\n2 0\n2 2\n3 0 3\n\"\"\") == \"impossible\"\n\nassert solution(\nr\"\"\"\n3 3\n0 0\n0 2\n2 0\n1 2 3\n1 3 2\n3 0 3\n\"\"\") == \"possible\"\n\nassert solution(\nr\"\"\"\n3 3\n0 0\n0 2\n2 0\n1 2 3\n1 3 2\n3 0 3\n\"\"\") == \"impossible\""
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3') == 'possible'\nassert solution('3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\\n4 4 4') == 'possible'\nassert solution('3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\\n4 4 4\\n5 5 5\\n6 6 6\\n7 7 7\\n8 8 8\\n9 9 9') == 'impossible'"
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n3 3\n0 0\n0 2\n2 0\n1 2 3\n2 2 2\n3 0 3\n''') == 'possible'\n\nassert solution('''\n3 3\n0 0\n1 1\n0 2\n1 2 3\n2 2 2\n3 0 3\n''') == 'impossible'\n\nassert solution('''\n3 3\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1"
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\") == \"possible\""
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\\n\") == \"possible\"\nassert solution(\"1 1\\n0 0\\n2 2\\n2 2\\n2 2\\n0 0\\n1 1\\n\") == \"impossible\""
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\\n') == 'possible'\nassert solution('3 3\\n0 1\\n1 2\\n2 3\\n0 3\\n0 2\\n2 2\\n') == 'possible'\nassert solution('4 3\\n0 0\\n2 2\\n1 1\\n2 2\\n2 0\\n1 2\\n') == 'possible'\nassert solution('3 1\\n0 2\\n1 2\\n2 2\\n') == 'possible'\nassert solution('3 1\\n0 2\\n1 2\\n2 2\\n0 1\\n') == 'possible'\nassert solution('2 1\\n0 2\\n1 2\\n2 2\\n') == 'possible'\nassert solution('2 1\\n0 2\\n1 2\\n2 2\\n0 1\\n') == 'possible'\nassert solution('3 1\\n0 2\\n1 2\\n2 2\\n0 1\\n') == 'possible'\nassert solution('1 1\\n0 2\\n1 2\\n2 2\\n0 1\\n') == 'possible'\nassert solution('1 1\\n0 2\\n1 2\\n2 2\\n0 1\\n') == 'possible'\nassert solution('3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\\n0 1\\n') == 'possible'\nassert solution('3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\\n0 1\\n0 0\\n') == 'possible'\nassert solution('3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\\n0 1\\n0 0\\n0 2\\n') == 'possible'\nassert solution('3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\\n0 1\\n0 0\\n0 2\\n') == 'impossible'"
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"possible\""
    },
    {
        "number": 3667,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n    3 3\n    0 0\n    0 2\n    2 0\n    1 2 3\n    2 2 2\n    3 0 3\n    ''') == 'possible'\n\nassert solution('''\n    4 4\n    0 0\n    0 2\n    2 0\n    1 2 3\n    2 2 2\n    3 0 3\n    4 4 4\n    ''') == 'possible'\n\nassert solution('''\n    3 3\n    0 0\n    0 2\n    2 0\n    1 2 3\n    2 2 2\n    3 0 3\n    4 4 4\n    5 5 5\n    ''') == 'impossible'"
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n2\\n2\\n\") == 4\n"
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\n2\\n2\") == 4\nassert solution(\"4 2\\n1\\n1\") == 2\nassert solution(\"4 2\\n2\\n2\") == 4\nassert solution(\"4 2\\n2\\n1\") == 2"
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"4\\n\""
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n2\\n2\\n\") == \"4\"\nassert solution(\"4 2\\n2\\n1\\n\") == \"4\"\nassert solution(\"4 2\\n1\\n2\\n\") == \"4\"\nassert solution(\"4 2\\n1\\n1\\n\") == \"4\"\nassert solution(\"4 2\\n3\\n2\\n\") == \"4\"\nassert solution(\"4 2\\n3\\n1\\n\") == \"4\"\nassert solution(\"4 2\\n3\\n1\\n\") == \"4\"\nassert solution(\"4 2\\n3\\n3\\n\") == \"4\"\nassert solution(\"4 2\\n3\\n2\\n\") == \"4\"\nassert solution(\"4 2\\n1\\n1\\n\") == \"4\"\nassert solution(\"4 2\\n1\\n3\\n\") == \"4\"\nassert solution(\"4 2\\n1\\n2\\n\") == \"4\"\nassert solution(\"4 2\\n2\\n1\\n\") == \"4\"\nassert solution(\"4 2\\n2\\n3\\n\") == \"4\"\nassert solution(\"4 2\\n2\\n2\\n\") == \"4\"\nassert solution(\"4 2\\n3\\n1\\n1\\n\") == \"4\"\nassert solution(\"4 2\\n3\\n2\\n1\\n\") == \"4\"\nassert solution(\"4 2\\n3\\n2\\n2\\n\") == \"4\"\nassert solution(\"4 2\\n3\\n3\\n2\\n\") == \"4\"\nassert solution(\"4 2\\n3\\n1\\n1\\n\") == \"4\"\nassert solution(\"4 2\\n3\\n3\\n1\\n\") == \"4\"\nassert solution(\"4 2\\n3\\n2\\n1\\n1\\n\") == \"4\"\nassert solution(\"4 2\\n3\\n3\\n2\\n1\\n\") == \"4\"\nassert solution(\"4 2\\n3\\n3\\n3\\n1\\n\") == \"4\"\nassert solution(\"4 2\\n3\\n3\\n2\\n2\\n\") == \"4\"\nassert solution(\"4 2\\n3\\n3\\n3\\n2\\n\") == \"4\"\nassert solution(\"4 2\\n3\\n3\\n3\\n3\\n\") == \"4\"\nassert solution(\"4 2\\n3\\n3\\n3\\n3\\n\") == \"4\"\nassert solution(\"4 2\\n3\\n3\\n3\\n3\\n\") == \"4\"\nassert solution(\"4 2\\n3\\n3\\n3\\n3\\n\") == \"4\"\nassert solution(\"4 2\\n3\\n3\\n3\\n3\\n\") == \"4\"\nassert solution(\"4 2\\n3\\n3\\n3\\n3\\n\") == \"4\"\nassert solution(\"4 2\\n3\\n3\\n3\\n3\\n\") == \"4\"\nassert solution(\"4 2\\n3\\n3\\n3\\n3\\n\") == \"4\"\nassert solution(\"4 2\\n3\\n3\\n3\\n3\\n\") == \"4\"\nassert solution(\"4 2\\n3\\n3\\n3\\n3\\n\") == \"4\"\nassert solution(\"4 2\\n3\\n3\\n3\\n3\\n\") == \"4\"\nassert solution(\"4 2\\n3\\n3\\n3\\n3\\n\") == \"4\"\nassert solution(\"4 2\\n3\\n3\\n3\\n3\\n\") == \"4\"\nassert solution(\"4 2\\n3\\n3\\n3\\n3\\n\") == \"4\"\nassert solution(\"4 2\\n3\\n3\\n3\\n3\\n\") == \"4\"\nassert solution(\"4 2\\n3\\n3\\n3\\n3\\n\") == \"4\"\nassert solution(\"4 2\\n3\\n3\\n3\\n3\\n\") == \"4\"\nassert solution(\"4 2\\n3\\n3\\n3\\"
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n2\\n2\\n\") == 4\nassert solution(\"4 2\\n4\\n1\\n\") == 5\nassert solution(\"4 2\\n4\\n1\\n2\\n\") == 6\nassert solution(\"4 2\\n4\\n1\\n3\\n\") == 7\nassert solution(\"4 2\\n4\\n1\\n3\\n4\\n\") == 8\nassert solution(\"4 2\\n4\\n1\\n3\\n4\\n5\\n\") == 9\nassert solution(\"4 2\\n4\\n1\\n3\\n4\\n5\\n2\\n\") == 10\nassert solution(\"4 2\\n4\\n1\\n3\\n4\\n5\\n2\\n3\\n\") == 11\nassert solution(\"4 2\\n4\\n1\\n3\\n4\\n5\\n2\\n3\\n4\\n\") == 12\nassert solution(\"4 2\\n4\\n1\\n3\\n4\\n5\\n2\\n3\\n4\\n6\\n\") == 13\nassert solution(\"4 2\\n4\\n1\\n3\\n4\\n5\\n2\\n3\\n4\\n6\\n7\\n\") == 14\nassert solution(\"4 2\\n4\\n1\\n3\\n4\\n5\\n2\\n3\\n4\\n6\\n7\\n8\\n\") == 15\nassert solution(\"4 2\\n4\\n1\\n3\\n4\\n5\\n2\\n3\\n4\\n6\\n7\\n8\\n9\\n\") == 16\nassert solution(\"4 2\\n4\\n1\\n3\\n4\\n5\\n2\\n3\\n4\\n6\\n7\\n8\\n9\\n10\\n\") == 17\nassert solution(\"4 2\\n4\\n1\\n3\\n4\\n5\\n2\\n3\\n4\\n6\\n7\\n8\\n9\\n10\\n11\\n\") == 18\nassert solution(\"4 2\\n4\\n1\\n3\\n4\\n5\\n2\\n3\\n4\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n\") == 19\nassert solution(\"4 2\\n4\\n1\\n3\\n4\\n5\\n2\\n3\\n4\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n\") == 20\nassert solution(\"4 2\\n4\\n1\\n3\\n4\\n5\\n2\\n3\\n4\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n\") == 21\nassert solution(\"4 2\\n4\\n1\\n3\\n4\\n5\\n2\\n3\\n4\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n\") == 22\nassert solution(\"4 2\\n4\\n1\\n3\\n4\\n5\\n2\\n3\\n4\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n\") == 23\nassert solution(\"4 2\\n4\\n1\\n3\\n4\\n5\\n2\\n3\\n4\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n\") == 24\nassert solution(\"4 2\\n4\\n1\\n3\\n4\\n5\\n2\\n3\\n4\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n"
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '4'\n"
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"4\\n\""
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n4 2\n2\n2\n\"\"\"\n) == \"4\"\n\nassert solution(\n    \"\"\"\n2 3\n1\n1\n3\n2\n\"\"\"\n) == \"1\"\n\nassert solution(\n    \"\"\"\n3 4\n2\n1\n4\n3\n\"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n5 5\n2\n2\n5\n4\n3\n2\n1\n\"\"\"\n) == \"3\""
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n2\\n2\") == \"4\\n\"\nassert solution(\"4 2\\n1\\n1\") == \"2\\n\"\nassert solution(\"4 3\\n1\\n2\\n1\\n1\") == \"3\\n\"\nassert solution(\"4 2\\n1\\n1\") == \"2\\n\"\nassert solution(\"4 2\\n1\\n1\") == \"2\\n\""
    },
    {
        "number": 3668,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n2\\n2\") == 4\nassert solution(\"2\\n1\\n2\") == 2\nassert solution(\"4\\n2\\n3\") == 4\nassert solution(\"4\\n2\\n1\") == 4\n"
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Mirko\", \"Solution should return 'Mirko'\"\n"
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Got {solution(input())}, expected {expected}\""
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1\\n1 2\\n1 3\\n\") == \"Mirko\"\nassert solution(\"5 10\\n5 10\\n5 10\\n\") == \"Slavko\""
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 1\\n1 2\\n1 3\") == \"Mirko\", \"The solution should be 'Mirko'.\""
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 1\\n1 2\\n1 3\") == \"Mirko\""
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"Slavko\\n\"\nassert solution(stdin) == \"Mirko\\n\""
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    3\n    1 1\n    1 2\n    1 3\n    \"\"\"\n) == \"Mirko\"\n\nassert solution(\n    \"\"\"\n    2\n    2 2\n    3 3\n    2 3\n    2 4\n    \"\"\"\n) == \"Slavko\"\n\nassert solution(\n    \"\"\"\n    1\n    500 500\n    500 500\n    500 500\n    \"\"\"\n) == \"Mirko\"\n\nassert solution(\n    \"\"\"\n    3\n    1 1\n    1 2\n    2 2\n    1 2\n    2 1\n    \"\"\"\n) == \"Mirko\""
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == 'Mirko', 'Your solution is incorrect. Please see the example below.'"
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1\\n1 2\\n1 3\\n\") == \"Mirko\"\nassert solution(\"2 3\\n4 5\\n\") == \"Slavko\"\nassert solution(\"1 1\\n1 2\\n1 3\\n2 3\\n4 5\\n\") == \"Mirko\""
    },
    {
        "number": 3669,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"Mirko\""
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n6\\n34\\n38\") == \"2 4\"\n"
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n6\\n34\\n38\\n\") == \"2 4\""
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n6\\n34\\n38\") == \"2 4\""
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n6\\n34\\n38\\n\") == \"2 4\", \"Test 1\""
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == '2 4' # solution1\nassert solution(6) == '2 4' # solution2\nassert solution(34) == '4 8' # solution3\nassert solution(38) == '4 8' # solution4\n\nfrom typing import List"
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"2 4\\n\""
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n6\\n34\\n38\\n\") == \"2 4\", \"First example\"\nassert solution(\"1\\n3\\n4\\n6\\n8\\n10\\n12\\n14\\n16\\n18\\n20\\n22\\n24\\n26\\n28\\n30\\n32\\n34\\n36\\n38\\n40\\n42\\n44\\n46\\n48\\n50\\n52\\n54\\n56\\n58\\n60\\n62\\n64\\n66\\n68\\n70\\n72\\n74\\n76\\n78\\n80\\n82\\n84\\n86\\n88\\n90\\n92\\n94\\n96\\n98\\n100\\n\") == \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\", \"Second example\""
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n6\\n34\\n38\") == \"2 4\\n\"\nassert solution(\"4\\n7\\n8\\n9\") == \"2 3\\n4 5\\n\"\nassert solution(\"5\\n10\\n15\\n20\\n25\") == \"3 4 5\\n\""
    },
    {
        "number": 3670,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '2 4\\n', \"Your solution is incorrect.\"\n"
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"4\\n10000 400000 500000 900000\") == \"12\\n\""
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == expected, f\"Expected output: {expected}, got: {solution(stdin)}\""
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"12\", \"Expected: 12, got: \" + str(solution())"
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin='4\\n10000 400000 500000 900000') == 12"
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == solution(stdin)"
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"12\", \"The solution is incorrect.\""
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(r\"4\\n10000 400000 500000 900000\") == 12\nassert solution(r\"5\\n8 10 2 1000000 30556926000\") == 12\n"
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == expected_output_1, \\\n    f\"Incorrect solution for sample input {sample_input_1}\"\n\nassert solution(sample_input_2) == expected_output_2, \\\n    f\"Incorrect solution for sample input {sample_input_2}\""
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r')) == \"12\""
    },
    {
        "number": 3671,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"12\", \"The solution is incorrect.\"\nassert solution(1) == \"12\", \"The solution is incorrect.\"\nassert solution(2) == \"12\", \"The solution is incorrect.\"\nassert solution(4) == \"12\", \"The solution is incorrect.\"\nassert solution(5) == \"12\", \"The solution is incorrect.\""
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\") == \"YES\""
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\") == \"YES\""
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0') == 'YES'"
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\") == \"YES\"\n"
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\") == \"YES\""
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\\n\") == \"YES\"\n"
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\") == \"YES\"\nassert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\\n8 2 0\\n4 6 0\") == \"NO\""
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\") == \"YES\"\n"
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0') == 'YES', \"Test failed for case '8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0' with input '8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0'\""
    },
    {
        "number": 3672,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0') == 'YES'"
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\\n\"\nassert solution(\"4 3\\n1 2 3 4 5 6\") == \"1 2 3 4 5 6\\n\"\nassert solution(\"3 3\\n1 1 2 2 3 3\") == \"1 1 2 2 3 3\\n\"\nassert solution(\"5 2\\n1 2 3 4 5 6\") == \"Impossible\\n\"\nassert solution(\"7 2\\n1 2 3 4 5 6\") == \"Impossible\\n\"\nassert solution(\"1 1\\n1 1\") == \"Impossible\\n\""
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\\n\") == \"5 6 1 2 3 4\\n\"\n"
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_str) == output_str, f\"Test case {i+1} failed.\\nExpected: {output_str}\\nActual: {solution(input_str)}\"\n"
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('test_data.txt')) == \"Impossible\"\nassert solution(open('test_data.txt')) == \"1 6 1 2 3 4\""
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('6 2\\n3 4 5 6 1 2') == '5 6 1 2 3 4'\nassert solution('6 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 1 2\\n3 4 5 6 "
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, 5) == \"5 6 1 2 3 4\"\nassert solution(6, 2) == \"Impossible\""
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, but got {solution(input())}\""
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4 5 6 1 2\") == \"5 6 1 2 3 4\\n\"\nassert solution(\"6 2\") == \"Impossible\\n\"\nassert solution(\"6 3\") == \"Impossible\\n\"\nassert solution(\"6 100\") == \"Impossible\\n\"\nassert solution(\"1 10\") == \"1\\n2\\n3\\n4\\n5\\n6\\n\"\nassert solution(\"10 10\") == \"Impossible\\n\"\nassert solution(\"1 10 50\") == \"Impossible\\n\"\nassert solution(\"1 1 1\") == \"1\\n1\\n1\\n1\\n1\\n\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1\") == \"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('6 2\\n3 4 5 6 1 2') == '5 6 1 2 3 4'\nassert solution('6 3\\n3 4 5 6 1 2') == 'Impossible'\nassert solution('4 3\\n1 2 3 4') == 'Impossible'\nassert solution('2 4\\n1 2 3 4') == 'Impossible'\nassert solution('2 2\\n1 2') == 'Impossible'"
    },
    {
        "number": 3673,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('6 2\\n3 4 5 6 1 2') == '5 6 1 2 3 4\\n'\nassert solution('6 2\\n3 4 5 6 1 2\\n3 2 4 1 5 3\\n3 4 1 4 5 2') == '5 6 1 2 3 4\\n'\nassert solution('6 3\\n3 4 5 6 1 2\\n3 2 4 1 5 3\\n3 4 1 4 5 2') == 'Impossible\\n'"
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 2 8 4\") == \"20512\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 2 8 4') == '20512'\nassert solution('2 3 4 5') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"20512\", \"Incorrect output\"\n"
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2 8 4\") == \"20512\"  # correct\nassert solution(\"10 3 8 4\") == \"IMPOSSIBLE\"  # incorrect\n"
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 2 8 4') == '20512'\n\nfrom typing import List"
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"5 2 8 4\") == \"20512\"\nassert solution(stdin=\"10 5 9 2\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin='5 2 8 4') == '20512\\n'\nassert solution(stdin='10 1 1 1') == 'IMPOSSIBLE\\n'\nassert solution(stdin='10 2 1 1') == '10211\\n'"
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2 8 4\") == \"20512\""
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"20512\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3674,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2 8 4\") == \"20512\"\nassert solution(\"10 3 5 1\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == solution(stdin)"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 2"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\nBAC\\nABC\\n\") == 2\nassert solution(\"3 8\\nHGBDFCAE\\nADBGHFCE\\nHCFGBDAE\\n\") == 3\n\nfrom typing import List"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed for input {input()}, expected output {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\nBAC\\nABC\") == 2\nassert solution(\"3 8\\nHGBDFCAE\\nADBGHFCE\\nHCFGBDAE\") == 3"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\nBAC\\nABC\\n\") == 2\nassert solution(\"3 8\\nHGBDFCAE\\nADBGHFCE\\nHCFGBDAE\\n\") == 3"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed for solution: {solution(stdin)}!= {expected_output}\""
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 3\\nBAC\\nABC\") == 2\nassert solution(\"1 8\\nHGBDFCAE\\nADBGHFCE\\nHCFGBDAE\") == 3"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\nBAC\\nABC\") == 2\nassert solution(\"3 8\\nHGBDFCAE\\nADBGHFCE\\nHCFGBDAE\") == 3\n"
    },
    {
        "number": 3675,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 3\\nBAC\\nABC') == 2\nassert solution('3 8\\nHGBDFCAE\\nADBGHFCE\\nHCFGBDAE') == 3\n"
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2\\n1 1\\n2 1\\n2 2\") == \"3\\n3\\n6\\n12\""
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"3\\n\", \"The correct output should be printed.\\n\""
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"3\\n\""
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"3\\n\"\n"
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 3\n"
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"3\\n\"\n"
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"3\""
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"3\\n\", \"Your solution is not correct.\"\n"
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2\") == \"3\\n3\\n2\\n1\\n\"\nassert solution(\"3 3\") == \"1\\n1\\n1\\n1\\n\"\nassert solution(\"4 4\") == \"0\\n0\\n0\\n0\\n\"\nassert solution(\"1 4\") == \"0\\n0\\n1\\n1\\n\"\nassert solution(\"4 1\") == \"0\\n0\\n1\\n1\\n\"\nassert solution(\"3 1\") == \"0\\n0\\n1\\n1\\n\"\nassert solution(\"4 3\") == \"0\\n0\\n0\\n0\\n\"\nassert solution(\"3 2\") == \"0\\n0\\n0\\n0\\n\""
    },
    {
        "number": 3676,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == 3, \"Your implementation of the function is incorrect.\"\nassert solution(2) == 10, \"Your implementation of the function is incorrect.\"\nassert solution(3) == 60, \"Your implementation of the function is incorrect.\"\nassert solution(4) == 168, \"Your implementation of the function is incorrect.\"\nassert solution(5) == 640, \"Your implementation of the function is incorrect.\""
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3\") == 3, \"Expected output: 3, actual output: {}\".format(solution(\"5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3\"))"
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3\") == 3\nassert solution(\"5 5\\n2 2 2\\n3 3 2 3\\n4 3 1 3\\n5 4 2 3\") == 5\nassert solution(\"5 1\\n3 3 2\") == 1\nassert solution(\"5 0\") == 0"
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3\") == \"3\""
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3\") == 3, \"The expected output is 3, but the actual output is {}\".format(solution(\"5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3\"))"
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3\\n') == '3\\n'"
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3\") == \"3\\n\""
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3') == '3'"
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 3, \"Output should be 3\""
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"3\\n\", \"Incorrect output\""
    },
    {
        "number": 3677,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n    5 3\n    2 1 2\n    3 0 2 3\n    3 0 1 4\n    2 1 4\n    2 2 3''') == 3, 'Incorrect output'\n"
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n    2\n    6\n    1 1\n    1 3\n    2 2\n    2 3\n    3 1\n    3 2\n    3\n    ''') == 'YES'\n\nassert solution('''\n    2\n    6\n    1 1\n    1 2\n    2 1\n    2 2\n    3 1\n    3 2\n    3\n    ''') == 'NO'\n\nassert solution('''\n    4\n    2\n    1 1\n    2 1\n    1 2\n    2 2\n    3 1\n    3 2\n    3 3\n    4 1\n    4 2\n    4 3\n    4 4\n    ''') == 'NO'\n\nassert solution('''\n    3\n    4\n    1 1\n    2 1\n    3 1\n    4 1\n    1 2\n    2 2\n    3 2\n    4 2\n    ''') == 'YES'\n\nassert solution('''\n    3\n    4\n    1 1\n    2 1\n    3 1\n    4 1\n    1 2\n    2 2\n    3 2\n    4 2\n    5 1\n    5 2\n    ''') == 'YES'"
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(solution) == \"YES\"\nassert solution(\"abc\") == \"NO\""
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n2\n6\n1 1\n1 3\n2 2\n2 3\n3 1\n3 2\n3\n1 1\n1 2\n2 1\n''') == 'YES'"
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2\\n6\\n1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3\\n1 1\\n1 2\\n2 1') == 'YES'\nassert solution('2\\n6\\n1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3\\n1 1\\n1 2\\n2 1') == 'NO'\nprint('All test cases passed')"
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt').read()) == 'YES\\n'\nprint('OK')"
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n6\\n1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3\") == \"YES\\nNO\""
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n6\\n1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3\\n1 1\\n1 2\\n2 1\\n\") == \"YES\"\nassert solution(\"2\\n6\\n1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3\\n1 1\\n1 2\\n2 1\\n4\\n5 5\\n0 0\\n\") == \"NO\""
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n6\\n1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3\") == \"YES\\nNO\""
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2\\n6\\n1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3') == 'YES'\nassert solution('1\\n6\\n1 1\\n1 2\\n2 1\\n2 2\\n3 1\\n3 2') == 'NO'"
    },
    {
        "number": 3678,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}\\nActual output: {solution(input())}\""
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"3.000000000\\n\"\n"
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\n') == '3.000000000\\n'"
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '3.000000000\\n'\n"
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n\") == \"3.000000000\"\n"
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n\") == \"3.000000000\\n\""
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '3.000000000\\n', \"Incorrect output\"\n"
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '3.000000000\\n', \"Test case failed\""
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin=\"2\\n\") == \"3.000000000\\n\""
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 3.000000000, \"Output should be 3.000000000\""
    },
    {
        "number": 3679,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin='2\\n') == '3.000000000\\n'"
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2\\n3\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"1 2\\n3\\n4\") == \"1\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"1 2\\n3\\n4\\n5\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"1 2\\n3\\n4\\n5\\n6\") == \"2\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"1 2\\n3\\n4\\n5\\n6\\n7\") == \"3\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2\\n3\") == 1\nassert solution(\"1 2\\n2 1 2\\n3\") == 2\nassert solution(\"1 2\\n3 4 5 6\") == 4\nassert solution(\"1 2\\n10 100 1000\") == 2\nassert solution(\"1 2\\n10 100 1000 10000\") == 3\nassert solution(\"1 2\\n1 1 1 1\") == 1\nassert solution(\"1 2\\n1 1 1 1 1\") == 2\nassert solution(\"1 2\\n1 1 1 1 1 1 1 1\") == 3\nassert solution(\"1 2\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == 4"
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2\\n3\\n\") == \"1\"\nassert solution(\"1 2\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n2"
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=input()) == expected, f\"Expected: {expected}, Got: {solution(stdin=input())}\"\n"
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Solution {solution(input())} does not match the expected output.\"\n"
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2\\n3\") == \"1\"\nassert solution(\"10000 20000\\n5000 10000 20000\") == \"2\""
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 2\\n3') == '1\\n'\nassert solution('10 10\\n20 20\\n30 30\\n40 40\\n50 50') == '5\\n'\nassert solution('1 100\\n2 200\\n3 300\\n4 400\\n5 500') == '13\\n'\nassert solution('1000 100\\n2000 200\\n3000 300\\n4000 400\\n5000 500') == '100\\n'\nassert solution('1000 1000\\n1000 2000\\n1000 3000\\n1000 4000\\n1000 5000') == '361\\n'\n"
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == 1\nassert solution(10) == 2\nassert solution(10000) == 10"
    },
    {
        "number": 3680,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2\\n3\\n\") == \"1\"\nassert solution(\"1 2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\") == \"2\"\nassert solution(\"1 2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n2"
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3, 4, 5) == 3\nassert solution(1, 3, 4) == 3\nassert solution(0, 2, 2, 3, 2) == 3\nassert solution(1, 3, 2) == 2\nassert solution(1, 2, 4) == 3\nassert solution(1, 1, 4) == 3\n\nprint(\"All test cases passed\")"
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\""
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"3\\n2\\n3\\n1\\n\", \"Your solution is incorrect.\""
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4') == '3\\n2\\n3\\n1'"
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\"\nassert solution(\"3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\"\nassert solution(\"3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\"\nassert solution(\"3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\"\nassert solution(\"3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\"\nassert solution(\"3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\"\nassert solution(\"3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\"\nassert solution(\"3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\"\nassert solution(\"3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\"\nassert solution(\"3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\"\nassert solution(\"3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\"\nassert solution(\"3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\"\nassert solution(\"3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\"\nassert solution(\"3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\"\nassert solution(\"3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\"\nassert solution(\"3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\"\nassert solution(\"3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\"
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\"\nassert solution(\"0 2 2 3 2\\n1 3 4\\n0 1 2 3 4\") == \"2\\n2\\n1\"\nassert solution(\"1 3 4\\n1 3 2\\n1 2 4\") == \"1\"\n"
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 4, 5) == '3\\n2\\n3\\n1'\nassert solution(1, 3, 4) == '3\\n2\\n3\\n1'\nassert solution(0, 2, 2, 3, 2) == '3\\n2\\n3\\n1'\nassert solution(1, 3, 2) == '3\\n2\\n3\\n1'\nassert solution(1, 2, 4) == '3\\n2\\n3\\n1'\nassert solution(1, 1, 4) == '3\\n2\\n3\\n1'"
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(str(input())) == \"3\\n2\\n3\\n1\\n\""
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4') == '3\\n2\\n3\\n1'"
    },
    {
        "number": 3681,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\") == \"3\\n2\\n3\\n1\"\nassert solution(\"0 1 2 3 4\\n0 1 2 3 4\\n1 2 3 4 5\\n2 3 4 5 6\") == \"1\\n2\\n3\\n4\""
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"int Main() {\\n\\tprintf(\\\"Hello %d\\\", i);\\n}\") == \"2 HelloWorld.c\"\nassert solution(\"int Main() {\\n\\tprintf(\\\"Hello %d\\\", i);\\n\\tprintf(\\\"THE END\\\");\\n}\") == \"0\"\nassert solution(\"int Main() {\\n\\tprintf(\\\"Hello %d\\\", i);\\n\\treturn i;\\n}\") == \"2 HelloWorld.c\"\nassert solution(\"int Main() {\\n\\treturn i;\\n}\") == \"0\"\nassert solution(\"int Main() {\\n\\tprintf(\\\"Hello %d\\\", i);\\n\\tprintf(\\\"THE END\\\");\\n\\treturn i;\\n}\") == \"0\"\nassert solution(\"int Main() {\\n\\tprintf(\\\"Hello %d\\\", i);\\n\\tprintf(\\\"THE END\\\");\\n}\") == \"0\"\nassert solution(\"int Main() {\\n\\tprintf(\\\"Hello %d\\\", i);\\n\\n\\treturn i;\\n}\") == \"2 HelloWorld.c\"\nassert solution(\"int Main() {\\n\\tprintf(\\\"Hello %d\\\", i);\\n\\tprintf(\\\"THE END\\\");\\n\\n\\tprintf(\\\"THE END\\\");\\n}\") == \"0\"\nassert solution(\"int Main() {\\n\\tprintf(\\\"Hello %d\\\", i);\\n\\n\\tprintf(\\\"THE END\\\");\\n}\") == \"0\"\nassert solution(\"int Main() {\\n\\tprintf(\\\"Hello %d\\\", i);\\n\\n\\n\\tprintf(\\\"THE END\\\");\\n}\") == \"0\"\nassert solution(\"int Main() {\\n\\tprintf(\\\"Hello %d\\\", i);\\n\\n\\n\\tprintf(\\\"THE END\\\");\\n\\n\\n\\tprintf(\\\"THE END\\\");\\n}\") == \"0\"\nassert solution(\"int Main() {\\n\\tprintf(\\\"Hello %d\\\", i);\\n\\n\\n\\tprintf(\\\"THE END\\\");\\n\\n\\n\\n\\tprintf(\\\"THE END\\\");\\n}\") == \"0\"\nassert solution(\"int Main() {\\n\\tprintf(\\\"Hello %d\\\", i);\\n\\n\\n\\tprintf(\\\"THE END\\\");\\n\\n\\n\\n\\n\\tprintf(\\\"THE END\\\");\\n}\") == \"0\"\nassert solution(\"int Main() {\\n\\tprintf(\\\"Hello %d\\\", i);\\n\\n\\n\\tprintf(\\\"THE END\\\");\\n\\n\\n\\n\\n\\n\\tprintf(\\\"THE END\\\");\\n\\n\\n\\n\\n\\n\\n\\tprintf(\\\"THE END\\\");\\n}\") == \"0\"\nassert solution(\"int Main() {\\n\\tprintf(\\\"Hello %d\\\", i);\\n\\n\\n\\tprintf(\\\"THE END\\\");\\n\\n\\n\\n\\n\\n\\n\\tprintf(\\\"THE END\\\");\\n\\n\\n\\n\\n\\n\\n\\n\\tprintf(\\\"THE END\\\");\\n\\n\\n\\n\\n\\n\\n\\n\\tprintf(\\\"THE END\\\");\\n\\n\\n\\n\\n\\n\\n\\n\\n\\tprintf(\\\"THE END\\\");\\n\\n\\n\\n\\n\\n\\n\\n\\tprintf(\\\"THE END\\\");\\n\\n\\n\\n\\n\\n\\n\\n\\n\\tprintf(\\\"THE END\\\");\\n\\n\\n\\n\\n\\n\\n\\n\\n\\tprintf(\\\"THE END\\\");\\n\\n\\n\\n\\n\\n\\n\\n\\n\\tprintf(\\\"THE END\\\");\\n\\n\\n\\n\\n\\n\\n\\n\\n\\tprintf(\\\"THE END\\\");\\n\\n\\n\\n\\n\\n\\n\\n\\n\\tprintf(\\\"THE END\\\");\\n\\n\\n\\n\\n\\n\\n\\n\\n\\tprintf(\\\"THE END\\\");\\n\\n\\n\\n\\n\\n\\n\\n\\n\\tprintf(\\\"THE END\\\");\\n\\n\\n\\n\\n\\n\\n\\n\\n\\tprintf(\\\"THE END\\\");\\n\\n\\n\\n\\n\\n\\n\\n\\n\\tprintf(\\\"THE END\\"
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"test_input.txt\", \"r\").read()) == \"2 HelloWorld.c\\ndef solution(stdin: str) -> str:\\npass\\n\"\nassert solution(open(\"test_input_with_empty_lines.txt\", \"r\").read()) == \"2 HelloWorld.c\\ndef solution(stdin: str) -> str:\\npass\\n\"\nassert solution(open(\"test_input_with_trailing_spaces.txt\", \"r\").read()) == \"2 HelloWorld.c\\ndef solution(stdin: str) -> str:\\npass\\n\"\nassert solution(open(\"test_input_with_leading_spaces.txt\", \"r\").read()) == \"2 HelloWorld.c\\ndef solution(stdin: str) -> str:\\npass\\n\"\nassert solution(open(\"test_input_with_special_chars.txt\", \"r\").read()) == \"2 HelloWorld.c\\ndef solution(stdin: str) -> str:\\npass\\n\"\nassert solution(open(\"test_input_with_spaces_only.txt\", \"r\").read()) == \"2 HelloWorld.c\\ndef solution(stdin: str) -> str:\\npass\\n\"\nassert solution(open(\"test_input_with_same_lines.txt\", \"r\").read()) == \"0\\n\"\nassert solution(open(\"test_input_with_only_new_lines.txt\", \"r\").read()) == \"2 HelloWorld.c\\nTHE END\\ndef solution(stdin: str) -> str:\\npass\\n\"\nassert solution(open(\"test_input_with_new_lines_in_between.txt\", \"r\").read()) == \"2 HelloWorld.c\\nTHE END\\ndef solution(stdin: str) -> str:\\npass\\n\""
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(r'''\nint Main() {\n    printf(\"Hello %d\\n\", i);\n}\n***END***\nint Main() {\n  printf(\"Hello %d\\n\", i);\n  printf(\"THE END\\n\");\n}\n***END***\n''') == ['def solution(stdin: str) -> str:']"
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(sample_input) == sample_output, \"Invalid output\""
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 0, \"No matching fragments found\"\n"
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2 1 HelloWorld.c\\n\"\nassert solution(input()) == \"1 1 Add.c\\n\"\nassert solution(input()) == \"0\\n\""
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(r'**END***\\n\\nint Main() {\\n\\tprintf(\"Hello %d\\n\",i);\\n}') == 2, \"Expected solution(r'**END***\\n\\nint Main() {\\n\\tprintf(\"Hello %d\\n\",i);\\n}') to return 2, but got {}\"\n\nassert solution(r'**END***\\n\\nint Main() {\\n\\tprintf(\"Hello %d\\n\",i);\\n}') == [2, \"HelloWorld.c\"], \"Expected solution(r'**END***\\n\\nint Main() {\\n\\tprintf(\"Hello %d\\n\",i);\\n}') to return [2, \"HelloWorld.c\"], but got {}\"\n\nassert solution(r'**END***\\n\\nint Main() {\\n\\tprintf(\"Hello %d\\n\",i);\\n}') == [2, \"Add.c\"], \"Expected solution(r'**END***\\n\\nint Main() {\\n\\tprintf(\"Hello %d\\n\",i);\\n}') to return [2, \"Add.c\"], but got {}\"\n\nassert solution(r'**END***\\n\\nint Main() {\\n\\tprintf(\"Hello %d\\n\",i);\\n}') == [2], \"Expected solution(r'**END***\\n\\nint Main() {\\n\\tprintf(\"Hello %d\\n\",i);\\n}') to return [2], but got {}\"\n\nassert solution(r'**END***\\n\\nint Main() {\\n\\tprintf(\"Hello %d\\n\",i);\\n}') == [0], \"Expected solution(r'**END***\\n\\nint Main() {\\n\\tprintf(\"Hello %d\\n\",i);\\n}') to return [0], but got {}\""
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(data) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(data)}\"\n\ndata = '''\n2\nHelloWorld.c\nint Main() {\n    printf(\"Hello %d\\n\",i);\n}\n***END***\nAdd.c\nint Main() {\n  for (int i=0; i<10; i++)\n    sum += i;\n  printf(\"SUM %d\", sum);\n}\n***END***\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n***END***\n'''\n\nexpected_output = '''\n2 HelloWorld.c\n"
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    r'''\nint Main() {\n    printf(\"Hello %d\\n\",i);\n}\n***END***\nint Main() {\n    printf(\"Hello %d\\n\",i);\n}\n***END***\nint Main() {\n    printf(\"Hello %d\\n\",i);\n}\n***END***\n''') == ['HelloWorld.c', 'Add.c']\n\nprint(solution(\n    r'''\nint Main() {\n    printf(\"Hello %d\\n\",i);\n}\n***END***\nint Main() {\n    printf(\"Hello %d\\n\",i);\n}\n***END***\nint Main() {\n    printf(\"Hello %d\\n\",i);\n}\n***END***\n'''))\n"
    },
    {
        "number": 3682,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"HelloWorld.c\\nint Main() {printf(\\\"Hello %d\\\", i);}\\n***END***\\nAdd.c\\nint Main() {\\n  for (int i=0; i<10; i++)\\n    sum += i;\\n  printf(\\\"SUM %d\\\", sum);}\\n***END***\\nint Main() {\\n  printf(\\\"Hello %d\\\", i);\\n  printf(\\\"THE END\\\\n\\\");}\\n***END***\") == \"2 HelloWorld.c\\ndef solution(stdin: str) -> str:\n    pass\\n\\n2 Add.c\\ndef solution(stdin: str) -> str:\n    pass\\n\\ndef solution(stdin: str) -> str:\n    pass\"\n"
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '1\\n2\\n2\\n2\\n'\n"
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_data) == expected_output, f\"Your solution does not pass the expected output! Received: {solution(input_data)}, Expected: {expected_output}\""
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1\\n2\\n2\"\n"
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n2 2 2\\n4 2 1\\n4 4 1\") == \"1\\n2\\n2\\n\""
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 3\\n2 2 2\\n4 2 1\\n4 4 1') == '1\\n2\\n2\\n2'\nassert solution('2 5\\n2 2 1\\n3 2 4\\n2 4 2\\n2 5 1') == '5'\nassert solution('4 2\\n1 1 2\\n1 1 1\\n3 1 2\\n4 1 1') == '1'\nassert solution('2 2 1\\n1 3 4\\n3 1 1\\n2 5 1\\n3 4 1') == '1'\nassert solution('3 2\\n4 1 2\\n1 2 1\\n3 1 1\\n2 3 1') == '2'\nassert solution('5 4\\n1 1 1\\n3 1 1\\n2 2 1\\n3 1 1') == '4'"
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n2 2 2\\n4 2 1\\n4 4 1\") == \"1\\n2\\n2\""
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n2 2 2\\n4 2 1\\n4 4 1\") == \"1\\n2\\n2\""
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n2 2 2\\n4 2 1\\n4 4 1\") == \"1\\n2\\n2\\n\"\nassert solution(\"3 3\\n2 2 3\\n4 4 1\\n4 5 1\") == \"2\\n2\\n2\\n\"\nassert solution(\"3 3\\n2 2 3\\n4 2 1\\n4 5 1\") == \"2\\n2\\n2\\n\"\nassert solution(\"3 3\\n2 2 2\\n4 2 1\\n4 4 1\") == \"1\\n2\\n2\\n\"\nassert solution(\"3 3\\n2 2 3\\n4 2 1\\n4 4 1\") == \"1\\n2\\n2\\n\""
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt').read()) == '1\\n2\\n2\\n2'"
    },
    {
        "number": 3683,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n2 2 2\\n4 2 1\\n4 4 1\\n\") == \"1\\n2\\n2\\n\"\nassert solution(\"4 3 1\\n3 2 1\\n2 4 1\\n1 3 1\\n\") == \"1\\n2\\n2\\n\""
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\") == \"5\""
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution"
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution.__doc__ == '''\n\n'''"
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"5\\n\""
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 20\\n50 70 10\\n100 110 4\\n150 190 16') == '5'\n"
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"5\\n\""
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\") == \"5\"\n"
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\") == \"5\"\nprint(\"All tests pass\")"
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '5\\n'"
    },
    {
        "number": 3684,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 20\\n50 70 10\\n100 110 4\\n150 190 16\") == \"5\\n\"\n"
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(sample_input) == \"26\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n5 5\n(2 5) (5 3)\n.....\n.#.#.\n.#.#.\n....#\n.#.##\n1\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\n''') == 26\n"
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"(2 5) (5 3)\") == 26\nassert solution(\"(5 3) (2 5)\") == 26\nassert solution(\"(5 3) (5 2)\") == 1\nassert solution(\"((1 2) (3 3) (2 4))\") == 1\nassert solution(\"(1 2) (2 4) (3 3)\") == 3\nassert solution(\"(1 1) (3 3) (3 3)\") == 1\nassert solution(\"(1 1) (1 1) (1 1)\") == IMPOSSIBLE"
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n5 5\n(2 5) (5 3)\n.....\n.#.#.\n.#.#.\n....#\n.#.##\n1\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\n''') == '26\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n    5 5\n    2 5\n    5 3\n    .....\n    3 3\n    3 2\n    2 2\n    1 2\n    1 3\n    ''') == '26\\n'\n\nassert solution('''\n    5 5\n    2 5\n    5 3\n    3 3\n    3 2\n    2 2\n    1 2\n    1 3\n    ''') == 'IMPOSSIBLE\\n'"
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 5\\n(2 5) (5 3).....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)') == '26\\nIMPOSSIBLE'"
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"26\\ndef solution(stdin: str) -> str:\\npass\\n\""
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 5\\n(2 5) (5 3)\\n.....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)') == '26'\n"
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 5\\n(2 5) (5 3)\\n.....\\n.#.#. \\n.#.#. \\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\") == \"26\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n"
    },
    {
        "number": 3685,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '26'\n"
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"success\""
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"success\""
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('6\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1') =='success'"
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1\\n\") == \"failure\""
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1\") == \"failure\""
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1\") == \"failure\""
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1\") == \"failure\"\nassert solution(\"-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 2\") == \"failure\"\nassert solution(\"-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1\") == \"success\"\nassert solution(\"-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 2\") == \"failure\"\nassert solution(\"-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 3\") == \"success\"\nassert solution(\"-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1\") == \"failure\"\nassert solution(\"-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 0\") == \"failure\""
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1\\n') =='success'"
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1\") == \"failure\"\nprint(\"Success\")"
    },
    {
        "number": 3686,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('Sample Input\\n6\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1') =='success'\n\nsolution('Sample Input\\n6\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1')"
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('problem_148.txt').read()) == 'possible'"
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"possible\""
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(sample_input) == 'possible'"
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Expected '{expected}', got '{solution(input())}'\""
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\") == \"possible\"\n"
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"possible\""
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"possible\""
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\\n\") == \"possible\"\nassert solution(\"2 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 1\\n\") == \"impossible\"\nassert solution(\"2 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\\n\") == \"possible\""
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"sample_input.txt\", \"r\")) == \"possible\""
    },
    {
        "number": 3687,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''2 2 2\n1 2\n3 3\n5 2 2\n5 2 2''') == 'possible'"
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    3 2\n    1 1 2\n    1 2 1\n    -1 1 2\n    \"\"\"\n) == \"0\\n\"\n\nassert solution(\n    \"\"\"\n    4 3\n    1 1 2 3\n    2 2 3 2\n    3 3 4 3\n    4 4 5 4\n    \"\"\"\n) == \"5\\n\""
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1 2\\n1 2 1\\n-1 1 2\") == \"0\\n\"\nassert solution(\"3 2\\n1 1 2\\n1 2 1\\n-1 1 2\") == \"0\\n\"\nassert solution(\"1 1 3\\n2 2 3\\n1 2 3\\n-1 1 3\") == \"2\\n\"\nassert solution(\"1 1 2\\n1 3 2\\n-1 1 2\") == \"2\\n\"\nassert solution(\"1 1 3\\n2 2 3\\n1 2 3\\n-1 1 3\") == \"2\\n\""
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    3 2\n    1 1 2\n    1 2 1\n    -1 1 2\n    \"\"\"\n) == \"0\\n\""
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 2\\n1 1 2\\n1 2 1\\n-1 1 2') == '0'"
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"0\\n\"\n"
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2\\n1 1 2\\n1 2 1\\n-1 1 2\\n\") == \"0\"\nassert solution(\"3 2\\n1 1 2\\n1 2 1\\n-1 1 3\\n\") == \"2\"\nassert solution(\"3 2\\n1 1 2\\n1 2 1\\n-1 1 2\\n\") == \"0\"\nassert solution(\"3 2\\n1 1 2\\n1 2 1\\n-1 1 3\\n\") == \"2\"\nassert solution(\"3 2\\n1 1 2\\n1 2 1\\n-1 1 2\\n\") == \"0\""
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\\n1 1 2\\n1 2 1\\n-1 1 2\") == \"0\\n\"\nassert solution(\"3 2\\n2 1 1\\n2 1 2\\n1 1 2\") == \"2\\n\"\nassert solution(\"3 2\\n1 1 3\\n2 3 1\\n2 1 3\") == \"3\\n\"\nassert solution(\"3 2\\n1 1 1\\n1 1 2\\n1 1 2\") == \"1\\n\"\nassert solution(\"3 2\\n1 1 1\\n1 1 2\\n1 1 2\") == \"0\\n\""
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\n1 1 2\\n1 2 1\\n-1 1 2\") == \"0\"\nassert solution(\"1 1 1\\n2 2 2\\n3 3 3\\n4 4 4\") == \"1\"\nassert solution(\"1 1 1\\n2 2 2\\n3 3 3\\n4 4 4\\n5 5 5\\n6 6 6\\n7 7 7\\n8 8 8\\n9 9 9\\n10 10 10\") == \"2\""
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\\n1 1 2\\n1 2 1\\n-1 1 2\") == \"0\"\n"
    },
    {
        "number": 3688,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\\n1 1 2\\n1 2 1\\n-1 1 2\") == \"0\\n\"\n"
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n353\") == \"3\\n353\"\nassert solution(\"4 2\\n1234\") == \"4\\n1313\""
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == solution(\"3 2\\n353\")\nassert solution(stdin) == solution(\"4 2\\n1234\")\n\nfrom typing import List"
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 2\\n353\\n4 2\\n1234\\n') == '3\\n353\\n4\\n1313\\n'\n"
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2\\n353\\n4 2\\n1234\\n\") == \"3\\n353\\n4\\n1313\\n\""
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2\\n353\") == \"3\\n353\"\nassert solution(\"4 2\\n1234\") == \"4\\n1313\"\nassert solution(\"5 3\\n9876543210\") == \"4\\n321405311\""
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"Output\""
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Got {solution(input())}, expected {expected_output}\"\n"
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == output, f\"Expected {output}, got {solution(stdin)}\""
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3689,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\\n353\") == \"3\\n353\"\nassert solution(\"4 2\\n1234\") == \"4\\n1313\""
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\", \"Case 1\"\nassert solution(\"12 0 1 12 1\") == \"YES\", \"Case 2\"\nassert solution(\"3 47 0 4 9\") == \"YES\", \"Case 3\""
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\""
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\""
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\"\n"
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('12 30 45 3 11') == 'NO'\nassert solution('12 0 1 12 1') == 'YES'\nassert solution('3 47 0 4 9') == 'YES'"
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('12 30 45 3 11') == \"NO\"\nassert solution('12 0 1 12 1') == \"YES\"\nassert solution('3 47 0 4 9') == \"YES\"\n"
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\""
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\", \"No solution\"\nassert solution(\"12 0 1 12 1\") == \"YES\", \"Yes solution\"\nassert solution(\"3 47 0 4 9\") == \"YES\", \"Yes solution\"\n"
    },
    {
        "number": 3690,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\""
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == expected_output, f\"The function should return {expected_output}, but it returns {solution(stdin)}\""
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution"
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1 2 3 1 0\\n2 4 20\") == \"3\"\nassert solution(\"1 1 2 3 1 0\\n15 27 26\") == \"2\"\nassert solution(\"1 1 2 3 1 0\\n2 2 1\") == \"0\""
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1 2 3 1 0\\n2 4 20\") == \"3\"\nassert solution(\"1 1 2 3 1 0\\n15 27 26\") == \"2\"\nassert solution(\"1 1 2 3 1 0\\n2 2 1\") == \"0\""
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1 2 3 1 0\\n2 4 20\") == 3\nassert solution(\"1 1 2 3 1 0\\n15 27 26\") == 2\nassert solution(\"1 1 2 3 1 0\\n2 2 1\") == 0"
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input1) == \"3\", \"The first example should return 3\"\nassert solution(input2) == \"2\", \"The second example should return 2\"\nassert solution(input3) == \"0\", \"The third example should return 0\""
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1 2 3 1 0\\n2 4 20\") == \"3\"\nassert solution(\"1 1 2 3 1 0\\n15 27 26\") == \"2\"\nassert solution(\"1 1 2 3 1 0\\n2 2 1\") == \"0\""
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1 2 3 1 0\\n2 4 20\") == \"3\"\nassert solution(\"1 1 2 3 1 0\\n15 27 26\") == \"2\"\nassert solution(\"1 1 2 3 1 0\\n2 2 1\") == \"0\""
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input1) == \"3\\n\", \"Expected output: 3\"\nassert solution(input2) == \"2\\n\", \"Expected output: 2\"\nassert solution(input3) == \"0\\n\", \"Expected output: 0\""
    },
    {
        "number": 3691,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1 2 3 1 0\\n2 4 20\") == \"3\"\nassert solution(\"1 1 2 3 1 0\\n15 27 26\") == \"2\"\nassert solution(\"1 1 2 3 1 0\\n2 2 1\") == \"0\""
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Output\\n4\\n\"\n"
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n0 0 1\\n2 0 1\\n4 0 1\\n\") == \"4\"\nassert solution(\"3\\n0 0 2\\n3 0 2\\n6 0 2\\n\") == \"6\"\nassert solution(\"3\\n0 0 2\\n2 0 2\\n1 1 2\\n\") == \"8\""
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == output, f\"The output is wrong. Expected: '{output}', but got: '{solution(stdin)}'.\""
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"4\\n\"\nassert solution() == \"6\\n\"\nassert solution() == \"8\\n\"\n"
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), \"Test failed\"\nfor _ in range(input()):\n    x, y, r = map(int, input().split())\n    assert 0 <= x <= 10 and 0 <= y <= 10 and 1 <= r <= 10, \"Invalid input\"\nprint(solution(input()))"
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n0 0 1\\n2 0 1\\n4 0 1\") == 4\nassert solution(\"3\\n0 0 2\\n3 0 2\\n6 0 2\") == 6\nassert solution(\"3\\n0 0 2\\n2 0 2\\n1 1 2\") == 8"
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 4\nassert solution(3) == 6\nassert solution(3) == 8"
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n0 0 1\\n2 0 1\\n4 0 1\\n\") == 4\nassert solution(\"3\\n0 0 2\\n3 0 2\\n6 0 2\\n\") == 6\nassert solution(\"3\\n0 0 2\\n2 0 2\\n1 1 2\\n\") == 8"
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '4\\n'\nassert solution(stdin) == '6\\n'\nassert solution(stdin) == '8\\n'\n"
    },
    {
        "number": 3692,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"4\\n\"\nassert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"8\\n\""
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\") == \"YES\"\nassert solution(\"0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\") == \"NO\"\nassert solution(\"6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\") == \"YES\""
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\") == \"YES\"\nassert solution(\"0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\") == \"NO\"\nassert solution(\"6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\") == \"YES\""
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\") == \"YES\"\nassert solution(\"0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\") == \"NO\"\nassert solution(\"6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\") == \"YES\""
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\\n') == 'YES\\n'\nassert solution('0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\\n') == 'NO\\n'\nassert solution('6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\\n') == 'YES\\n'"
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\") == \"YES\"\nassert solution(\"1 3 3 5 5 3 3 1\") == \"YES\"\nassert solution(\"0 0 6 0 6 6 0 6\") == \"YES\"\nassert solution(\"7 3 9 5 11 3 9 1\") == \"NO\"\nassert solution(\"6 0 6 6 0 6 0 0\") == \"YES\"\nassert solution(\"7 4 4 7 7 10 10 7\") == \"YES\"\n\nfrom typing import List"
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\\n\") == \"YES\"\nassert solution(\"0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\\n\") == \"NO\"\nassert solution(\"6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\\n\") == \"YES\""
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\\n\\n0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\\n\\n6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7') == 'YES\\n\\nYES\\n'\n\nassert solution('0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\\n\\n6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7') == 'NO\\n\\nNO\\n'"
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\") == \"YES\"\nassert solution(\"0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\") == \"NO\"\nassert solution(\"6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\") == \"YES\""
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1') == 'YES'\nassert solution('0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1') == 'NO'\nassert solution('6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7') == 'YES'"
    },
    {
        "number": 3693,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"YES\" # expected output: \"YES\"\n"
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Solution {input()} and output {output} are different.\""
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n0\\n\") == \"cslnb\"\nassert solution(\"2\\n1 0\\n\") == \"cslnb\"\nassert solution(\"2\\n2 2\\n\") == \"sjfnb\"\nassert solution(\"3\\n2 3 1\\n\") == \"sjfnb\""
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(r'Input\\n1\\n0\\nOutput\\ncslnb\\n\\nInput\\n2\\n1 0\\nOutput\\ncslnb\\n\\nInput\\n2\\n2 2\\nOutput\\nsjfnb\\n\\nInput\\n3\\n2 3 1\\nOutput\\nsjfnb') == 'cslnb'\nassert solution(r'Input\\n1\\n0\\nOutput\\ncslnb\\n\\nInput\\n2\\n1 0\\nOutput\\ncslnb\\n\\nInput\\n2\\n2 2\\nOutput\\nsjfnb\\n\\nInput\\n3\\n2 3 1\\nOutput\\nsjfnb') == 'cslnb'\nassert solution(r'Input\\n1\\n0\\nOutput\\ncslnb\\n\\nInput\\n2\\n1 0\\nOutput\\ncslnb\\n\\nInput\\n2\\n2 2\\nOutput\\nsjfnb\\n\\nInput\\n3\\n2 3 1\\nOutput\\nsjfnb') =='sjfnb'\n"
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n0\\n\") == \"cslnb\"\nassert solution(\"2\\n1 0\\n\") == \"cslnb\"\nassert solution(\"2\\n2 2\\n\") == \"sjfnb\"\nassert solution(\"3\\n2 3 1\\n\") == \"sjfnb\""
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n0\\n\") == \"cslnb\"\nassert solution(\"2\\n1 0\\n\") == \"cslnb\"\nassert solution(\"2\\n2 2\\n\") == \"sjfnb\"\nassert solution(\"3\\n2 3 1\\n\") == \"sjfnb\""
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n0\\n\") == \"cslnb\"\nassert solution(\"2\\n1 0\\n\") == \"cslnb\"\nassert solution(\"2\\n2 2\\n\") == \"sjfnb\"\nassert solution(\"3\\n2 3 1\\n\") == \"sjfnb\""
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n0\\n\") == \"cslnb\"\nassert solution(\"2\\n1 0\\n\") == \"cslnb\"\nassert solution(\"2\\n2 2\\n\") == \"sjfnb\"\nassert solution(\"3\\n2 3 1\\n\") == \"sjfnb\"\n"
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n0\\n\") == \"cslnb\"\nassert solution(\"2\\n1 0\\n\") == \"cslnb\"\nassert solution(\"2\\n2 2\\n\") == \"sjfnb\"\nassert solution(\"3\\n2 3 1\\n\") == \"sjfnb\"\nassert solution(\"1\\n0\\n\") == \"cslnb\"\nassert solution(\"2\\n1 0\\n\") == \"cslnb\"\nassert solution(\"2\\n2 2\\n\") == \"sjfnb\"\nassert solution(\"3\\n2 3 1\\n\") == \"sjfnb\""
    },
    {
        "number": 3694,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n0\\n\") == \"cslnb\"\nassert solution(\"2\\n1 0\\n\") == \"cslnb\"\nassert solution(\"2\\n2 2\\n\") == \"sjfnb\"\nassert solution(\"3\\n2 3 1\\n\") == \"sjfnb\"\nassert solution(\"1\\n0\\n\") == \"cslnb\"\nassert solution(\"2\\n1 0\\n\") == \"cslnb\"\nassert solution(\"2\\n2 2\\n\") == \"sjfnb\"\nassert solution(\"3\\n2 3 1\\n\") == \"sjfnb\""
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 5\\n1 5 3\\n\") == \"2\"\nassert solution(\"1 2\\n1\\n\") == \"1\"\nassert solution(\"1 1\\n1\\n\") == \"0\""
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 5\\n1 5 3\\n') == '2\\n'\nassert solution('1 2\\n1\\n') == '1\\n'\nassert solution('1 1\\n1\\n') == '0\\n'"
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 5\\n1 5 3\\n') == 2\nassert solution('1 2\\n1\\n') == 1\nassert solution('1 1\\n1\\n') == 0"
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 5\\n1 5 3\\n\\n1 2\\n1\\n1 1\\n1\\n\") == 2\nassert solution(\"1 2\\n1\\n1\\n\") == 1\nassert solution(\"1 1\\n1\\n\") == 0"
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 5\\n1 5 3\\n\") == \"2\\n\"\nassert solution(\"1 2\\n1\\n\") == \"1\\n\"\nassert solution(\"1 1\\n1\\n\") == \"0\\n\""
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 5\\n1 5 3\\n\") == \"2\"\nassert solution(\"1 2\\n1\\n\") == \"1\"\nassert solution(\"1 1\\n1\\n\") == \"0\""
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 5\\n1 5 3\") == 2\nassert solution(\"1 2\\n1\") == 1\nassert solution(\"1 1\\n1\") == 0"
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"2\"\nassert solution() == \"1\"\nassert solution() == \"0\"\n\nfrom typing import List"
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3695,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Solution is incorrect. Expected {output}, but got {solution(input())}\""
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1') == '1\\n0 1\\n0\\n1'\nassert solution('2') == '2\\n-1 0 1\\n1'"
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == ['1', '0', '1']\nassert solution(2) == ['2', '-1', '0', '1']"
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n\") == \"1\\n0 1\\n0\\n1\\n\"\nassert solution(\"2\\n\") == \"2\\n-1 0 1\\n1\\n0 1\\n\""
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == \"1\\n0 1\\n0\\n1\\n\"\nassert solution(2) == \"2\\n-1 0 1\\n1\\n0 1\\n\"\nassert solution(10) == \"10\\n-1 0 1 0 1 1\\n1\\n0 1 0 1\\n\"\nassert solution(100) == \"-1\\n\""
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == 1\nassert solution(2) == 1\nassert solution(3) == 1\nassert solution(4) == 1\nassert solution(5) == 0\nassert solution(6) == 0\nassert solution(7) == 0\nassert solution(8) == 1\nassert solution(9) == 0\nassert solution(10) == -1"
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == 1, \"Expected 1, got {}\".format(solution(1))\nassert solution(2) == 1, \"Expected 1, got {}\".format(solution(2))\nassert solution(3) == 0, \"Expected 0, got {}\".format(solution(3))\nassert solution(4) == -1, \"Expected -1, got {}\".format(solution(4))"
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == 1\nassert solution(2) == -1\nassert solution(3) == 0\nassert solution(4) == 0\nassert solution(5) == 0\nassert solution(6) == 1\nassert solution(7) == 1\nassert solution(8) == 1\nassert solution(9) == 1\nassert solution(10) == -1\nassert solution(11) == 0\nassert solution(12) == 0\nassert solution(13) == 0\nassert solution(14) == 0\nassert solution(15) == 0\nassert solution(16) == -1\nassert solution(17) == 0\nassert solution(18) == 0\nassert solution(19) == 0\nassert solution(20) == 0\nassert solution(21) == 0\nassert solution(22) == 0\nassert solution(23) == 0\nassert solution(24) == -1\nassert solution(25) == 0\nassert solution(26) == 0\nassert solution(27) == 0\nassert solution(28) == 0\nassert solution(29) == 0\nassert solution(30) == 0\nassert solution(31) == 0\nassert solution(32) == -1\nassert solution(33) == 0\nassert solution(34) == 0\nassert solution(35) == 0\nassert solution(36) == 0\nassert solution(37) == 0\nassert solution(38) == 0\nassert solution(39) == 0\nassert solution(40) == -1\nassert solution(41) == 0\nassert solution(42) == 0\nassert solution(43) == 0\nassert solution(44) == 0\nassert solution(45) == 0\nassert solution(46) == 0\nassert solution(47) == 0\nassert solution(48) == -1\nassert solution(49) == 0\nassert solution(50) == 0\nassert solution(51) == 0\nassert solution(52) == 0\nassert solution(53) == 0\nassert solution(54) == 0\nassert solution(55) == 0\nassert solution(56) == -1\nassert solution(57) == 0\nassert solution(58) == 0\nassert solution(59) == 0\nassert solution(60) == 0\nassert solution(61) == 0\nassert solution(62) == 0\nassert solution(63) == 0\nassert solution(64) == -1\nassert solution(65) == 0\nassert solution(66) == 0\nassert solution(67) == 0\nassert solution(68) == 0\nassert solution(69) == 0\nassert solution(70) == 0\nassert solution(71) == 0\nassert solution(72) == -1\nassert solution(73) == 0\nassert solution(74) == 0\nassert solution(75) == 0\nassert solution(76) == 0\nassert solution(77) == 0\nassert solution(78) == 0\nassert solution(79) == 0\nassert solution(80) == -1\nassert solution(81) == 0\nassert solution(82) == 0\nassert solution(83) == 0\nassert solution(84) == 0\nassert solution(85) == 0\nassert solution(86) == 0\nassert solution(87) == 0\nassert solution(88) == -1\nassert solution(89) == 0\nassert solution(90) == 0\nassert solution(91) == 0\nassert solution(92) == 0\nassert solution(93) == 0\nassert solution(94) == 0\nassert solution(95) == 0\nassert solution(96) == -1\nassert solution(97) == 0\nassert solution(98) == 0\nassert solution(99) == 0\nassert solution(100) == 0\nassert solution(101) == 0\nassert solution(102) == 0\nassert solution(103) == 0\n"
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == '1\\n0 1\\n0'\nassert solution(2) == '2\\n-1 0 1\\n1'"
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == '1'\nassert solution(2) == '1'\nassert solution(10) == '1'"
    },
    {
        "number": 3696,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == 1, \"1 should be 1\"\nassert solution(2) == 2, \"2 should be 2\"\nassert solution(3) == -1, \"3 should be -1\"\nassert solution(4) == -1, \"4 should be -1\"\nassert solution(5) == 1, \"5 should be 1\"\nassert solution(6) == 1, \"6 should be 1\"\nassert solution(7) == -1, \"7 should be -1\"\nassert solution(8) == -1, \"8 should be -1\"\nassert solution(9) == 1, \"9 should be 1\"\nassert solution(10) == 1, \"10 should be 1\"\nassert solution(11) == -1, \"11 should be -1\"\nassert solution(12) == -1, \"12 should be -1\"\nassert solution(13) == 1, \"13 should be 1\"\nassert solution(14) == 1, \"14 should be 1\"\nassert solution(15) == -1, \"15 should be -1\"\nassert solution(16) == -1, \"16 should be -1\"\nassert solution(17) == 1, \"17 should be 1\"\nassert solution(18) == 1, \"18 should be 1\"\nassert solution(19) == -1, \"19 should be -1\"\nassert solution(20) == -1, \"20 should be -1\"\nassert solution(21) == 1, \"21 should be 1\"\nassert solution(22) == 1, \"22 should be 1\"\nassert solution(23) == -1, \"23 should be -1\"\nassert solution(24) == -1, \"24 should be -1\"\nassert solution(25) == 1, \"25 should be 1\"\nassert solution(26) == 1, \"26 should be 1\"\nassert solution(27) == -1, \"27 should be -1\"\nassert solution(28) == -1, \"28 should be -1\"\nassert solution(29) == 1, \"29 should be 1\"\nassert solution(30) == 1, \"30 should be 1\"\nassert solution(31) == -1, \"31 should be -1\"\nassert solution(32) == -1, \"32 should be -1\"\nassert solution(33) == 1, \"33 should be 1\"\nassert solution(34) == 1, \"34 should be 1\"\nassert solution(35) == -1, \"35 should be -1\"\nassert solution(36) == -1, \"36 should be -1\"\nassert solution(37) == 1, \"37 should be 1\"\nassert solution(38) == 1, \"38 should be 1\"\nassert solution(39) == -1, \"39 should be -1\"\nassert solution(40) == -1, \"40 should be -1\"\nassert solution(41) == 1, \"41 should be 1\"\nassert solution(42) == 1, \"42 should be 1\"\nassert solution(43) == -1, \"43 should be -1\"\nassert solution(44) == -1, \"44 should be -1\"\nassert solution(45) == 1, \"45 should be 1\"\nassert solution(46) == 1, \"46 should be 1\"\nassert solution(47) == -1, \"47 should be -1\"\nassert solution(48) == -1, \"48 should be -1\"\nassert solution(49) == 1, \"49 should be 1\"\nassert solution(50) == 1, \"50 should be 1\"\nassert solution(51) == -1, \"51 should be -1\"\nassert solution(52) == -1, \"52 should be -1\"\nassert solution(53) == 1, \"53 should be 1\"\nassert solution(54) == 1, \"54 should be 1\"\nassert solution(55) == -1, \"55 should be -1\""
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1 5 4\\n1 2 1 3\\n\") == \"1 3 3 \"\nassert solution(\"3 1 5 3\\n1 3 1\\n\") == \"2 3 2 \"\nassert solution(\"3 2 5 3\\n1 3 1\\n\") == \"1 2 2\""
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n3 1 5 4\n1 2 1 3\n''') == '''\n1 3 3 \n'''\n\nassert solution('''\n3 1 5 3\n1 3 1\n''') == '''\n2 3 2 \n'''\n\nassert solution('''\n3 2 5 3\n1 3 1\n''') == '''\n1 2 2\n'''"
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1 5 4\\n1 2 1 3\\n\") == \"1 3 3 \"\nassert solution(\"3 1 5 3\\n1 3 1\\n\") == \"2 3 2 \"\nassert solution(\"3 2 5 3\\n1 3 1\\n\") == \"1 2 2\"\n"
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3 1 5 4\n1 2 1 3\n\"\"\") == '1 3 3 '\n\nassert solution(\"\"\"\n3 1 5 3\n1 3 1\n\"\"\") == '2 3 2 '\n\nassert solution(\"\"\"\n3 2 5 3\n1 3 1\n\"\"\") == '1 2 2'"
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1 5 4\\n1 2 1 3\\n\") == \"1 3 3 \\n1 3 3 \\n2 3 2 \\n1 2 2\"\nassert solution(\"3 1 5 3\\n1 3 1\\n\") == \"2 3 2 \\n1 2 1\"\nassert solution(\"3 2 5 3\\n1 3 1\\n\") == \"1 2 2\""
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '1 3 3 ', \"Expected output: 1 3 3 \""
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3 1 5 4\n1 2 1 3\n\"\"\") == \"\"\"\n1 3 3 \n\"\"\"\n\nassert solution(\"\"\"\n3 1 5 3\n1 3 1\n\"\"\") == \"\"\"\n2 3 2 \n\"\"\"\n\nassert solution(\"\"\"\n3 2 5 3\n1 3 1\n\"\"\") == \"\"\"\n1 2 2\n\"\"\""
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1 5 4\\n1 2 1 3\\n\") == \"1 3 3 \"\nassert solution(\"3 1 5 3\\n1 3 1\\n\") == \"2 3 2 \"\nassert solution(\"3 2 5 3\\n1 3 1\\n\") == \"1 2 2\"\n"
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"\"\"\n1 3 3 \n\"\"\""
    },
    {
        "number": 3697,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"3 1 5 4\n1 2 1 3\n\"\"\") == \"\"\"1 3 3 \n\"\"\"\n\nassert solution(\"\"\"3 1 5 3\n1 3 1\n\"\"\") == \"\"\"2 3 2 \n\"\"\"\n\nassert solution(\"\"\"3 2 5 3\n1 3 1\n\"\"\") == \"\"\"1 2 2\n\"\"\""
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"110\\n2\\n\") == \"3\\n\"\nassert solution(\"111111011\\n2\\n\") == \"169\\n\""
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"110\\n2\\n\") == \"3\"\nassert solution(\"111111011\\n2\\n\") == \"169\"\n"
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\"\n\ninput_ = input()\nn = int(input_.split()[0])\nk = int(input_.split()[1])"
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('110\\n2\\n') == '3\\n'\nassert solution('111111011\\n2\\n') == '169\\n'"
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"110\\n2\\n\\n111111011\\n2\\n\\n\") == \"3\\n169\"\nassert solution(\"110\\n2\\n\\n111111011\\n2\\n\\n\") == \"3\\n169\"\nassert solution(\"110\\n2\\n\\n111111011\\n2\\n\\n\") == \"3\\n169\"\nassert solution(\"110\\n2\\n\\n111111011\\n2\\n\\n\") == \"3\\n169\"\nassert solution(\"110\\n2\\n\\n111111011\\n2\\n\\n\") == \"3\\n169\""
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"110\\n2\") == \"3\"\nassert solution(\"111111011\\n2\") == \"169\""
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(110) == 3\nassert solution(111111011) == 169\nassert solution(110) == 3\nassert solution(111111011) == 169"
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"110\\n2\\n\") == \"3\"\nassert solution(\"111111011\\n2\\n\") == \"169\""
    },
    {
        "number": 3698,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"110\\n2\\n\") == \"3\"\nassert solution(\"111111011\\n2\\n\") == \"169\""
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"11.084259940083\", \"Your solution is incorrect.\""
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1 1 2 0 0\\n3\\n1 1\\n2 1\\n2 3\") == \"11.084259940083\"\nassert solution(\"5 0 4 2 2 0\\n5\\n5 2\\n3 0\\n5 5\\n3 5\\n3 3\") == \"33.121375178000\"\n\nassert solution(\"\") == \"0\""
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1 1 2 0 0\\n3\\n1 1\\n2 1\\n2 3\\n\") == \"11.084259940083\\n\"\nassert solution(\"5 0 4 2 2 0\\n5\\n5 2\\n3 0\\n5 5\\n3 5\\n3 3\\n\") == \"33.121375178000\\n\""
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1 1 2 0 0\\n3\\n1 1\\n2 1\\n2 3\") == \"11.084259940083\"\nassert solution(\"5 0 4 2 2 0\\n5\\n5 2\\n3 0\\n5 5\\n3 5\\n3 3\") == \"33.121375178000\""
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == expected, f\"Expected {expected}, got {solution}\"\n"
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '11.084259940083', 'Please provide the correct input'"
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1 1 2 0 0\\n3\\n1 1\\n2 1\\n2 3\") == \"11.084259940083\"\nassert solution(\"5 0 4 2 2 0\\n5\\n5 2\\n3 0\\n5 5\\n3 5\\n3 3\") == \"33.121375178000\""
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"Test case failed!\""
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1 1 2 0 0\\n3\\n1 1\\n2 1\\n2 3\\n\") == \"11.084259940083\"\nassert solution(\"5 0 4 2 2 0\\n5\\n5 2\\n3 0\\n5 5\\n3 5\\n3 3\\n\") == \"33.121375178000\"\n"
    },
    {
        "number": 3699,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1 1 2 0 0\\n3\\n1 1\\n2 1\\n2 3\") == \"11.084259940083\"\nassert solution(\"5 0 4 2 2 0\\n5\\n5 2\\n3 0\\n5 5\\n3 5\\n3 3\") == \"33.121375178000\""
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 5\") == \"2\"\nassert solution(\"8 15\") == \"1\"\nassert solution(\"7 20\") == \"0\"\nassert solution(\"1000000000000 1000000000001\") == \"500000000000\""
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 5\") == \"2\"\nassert solution(\"8 15\") == \"1\"\nassert solution(\"7 20\") == \"0\"\nassert solution(\"1000000000000 1000000000001\") == \"500000000000\""
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Incorrect output.\\nExpected: {output()}\\nGot: {solution(input())}\""
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(10) == \"2\"\nassert solution(80) == \"1\"\nassert solution(20) == \"0\"\nassert solution(1000000000000) == \"500000000000\""
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 5\\n\") == \"2\"\nassert solution(\"8 15\\n\") == \"1\"\nassert solution(\"7 20\\n\") == \"0\"\nassert solution(\"1000000000000 1000000000001\\n\") == \"500000000000\""
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 5\") == \"2\"\nassert solution(\"8 15\") == \"1\"\nassert solution(\"7 20\") == \"0\"\nassert solution(\"1000000000000 1000000000001\") == \"500000000000\""
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''8 5''') == '2'\nassert solution('''8 15''') == '1'\nassert solution('''7 20''') == '0'\nassert solution('''1000000000000 1000000000001''') == '500000000000'"
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('8 5') == '2\\n'\nassert solution('8 15') == '1\\n'\nassert solution('7 20') == '0\\n'\nassert solution('1000000000000 1000000000001') == '500000000000\\n'"
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 5\") == \"2\"\nassert solution(\"8 15\") == \"1\"\nassert solution(\"7 20\") == \"0\"\nassert solution(\"1000000000000 1000000000001\") == \"500000000000\""
    },
    {
        "number": 3700,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 5\\n\") == \"2\\n\"\nassert solution(\"8 15\\n\") == \"1\\n\"\nassert solution(\"7 20\\n\") == \"0\\n\"\nassert solution(\"1000000000000 1000000000001\\n\") == \"500000000000\\n\""
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 1 10\\n01000\") == \"11\"\nassert solution(\"5 10 1\\n01000\") == \"2\"\nassert solution(\"7 2 3\\n1111111\") == \"0\""
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 1 10\\n01000\") == \"11\"\nassert solution(\"5 10 1\\n01000\") == \"2\"\nassert solution(\"7 2 3\\n1111111\") == \"0\""
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 1 10\\n01000\") == \"11\"\nassert solution(\"5 10 1\\n01000\") == \"2\"\nassert solution(\"7 2 3\\n1111111\") == \"0\""
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 1 10\\n01000\\n\") == \"11\"\nassert solution(\"5 10 1\\n01000\\n\") == \"2\"\nassert solution(\"7 2 3\\n1111111\\n\") == \"0\""
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 1 10\\n01000\") == \"11\"\nassert solution(\"5 10 1\\n01000\") == \"2\"\nassert solution(\"7 2 3\\n1111111\") == \"0\""
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 1 10\\n01000\\n') == '11'\nassert solution('5 10 1\\n01000\\n') == '2'\nassert solution('7 2 3\\n1111111\\n') == '0'"
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 1 10\\n01000\\n\") == \"11\"\nassert solution(\"5 10 1\\n01000\\n\") == \"2\"\nassert solution(\"7 2 3\\n1111111\\n\") == \"0\"\n"
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 1 10\") == \"11\"\nassert solution(\"5 10 1\") == \"2\"\nassert solution(\"7 2 3\") == \"0\""
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3701,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 1 10\\n01000\\n\\n5 10 1\\n01000\\n\\n7 2 3\\n1111111\\n\") == \"11\"\nassert solution(\"5 10 1\\n01000\\n\\n7 2 3\\n1111111\\n\") == \"2\"\nassert solution(\"7 2 3\\n1111111\\n\") == \"0\""
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 1 1') == '2 1\\n'\nassert solution('5 1 2') == '19 5\\n'\nassert solution('10 2 1') == '-1\\n'"
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3, 1, 1) == \"2 1\"\nassert solution(5, 1, 2) == \"19 5\"\nassert solution(3, 1, 2) == \"-1\"\nassert solution(5, 1, 2) == \"-1\""
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1 1\") == \"2 1\"\nassert solution(\"5 1 2\") == \"19 5\"\nassert solution(\"7 1 3\") == \"-1\"\nassert solution(\"8 1 4\") == \"-1\"\nassert solution(\"9 1 5\") == \"-1\"\nassert solution(\"10 1 6\") == \"-1\""
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1 1\\n5 1 2\\n\") == \"2 1\\n19 5\\n\"\nassert solution(\"6 1 1\\n10 1 2\\n14 1 3\\n18 1 4\\n22 1 5\\n\") == \"10 1\\n22 1\\n34 1\\n\"\nassert solution(\"8 1 1\\n12 1 2\\n16 1 3\\n20 1 4\\n24 1 5\\n28 1 6\\n32 1 7\\n36 1 8\\n\") == \"-1\\n\"\n"
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1 1\\n5 1 2\\n\") == \"2 1\\n19 5\"\nassert solution(\"3 3 1\\n5 3 2\\n\") == \"-1\"\nassert solution(\"3 1 1\\n5 2 2\\n\") == \"-1\"\nassert solution(\"3 1 1\\n5 1 1\\n\") == \"2 1\\n20 1\""
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 1 1') == '2 1'\nassert solution('5 1 2') == '19 5'"
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 1 1') == '2 1'\nassert solution('5 1 2') == '19 5'\nassert solution('1 1 1') == '-1'\nassert solution('3 1 2') == '-1'\nassert solution('2 2 1') == '-1'\nassert solution
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), \"Test failed.\"\nfor i in range(n):\n    for j in range(i+1, n):\n        if (a + i * d) in str(F[b + j * e]) and len(str(F[b + j * e])) <= 18:\n            result = True\n            break\n    if result:\n        print(b + i * e)\n        break"
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"Test failed: expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3702,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 1 1') == '2 1'\nassert solution('5 1 2') == '19 5'\nassert solution('5 1 1') == '-1'"
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(7, 1) == 6\nassert solution(10, 2) == 4"
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"The given input and output are not matching\""
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('7 1\\n') == '6\\n'\nassert solution('10 2\\n') == '4\\n'\nassert solution('') == ''"
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 1\") == \"6\"\nassert solution(\"10 2\") == \"4\""
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 1\") == \"6\"\nassert solution(\"10 2\") == \"4\""
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 1\\n\") == \"6\\n\"\nassert solution(\"10 2\\n\") == \"4\\n\""
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 1\") == \"6\"\nassert solution(\"10 2\") == \"4\"\n\nfrom functools import reduce"
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(7, 1) == 6\nassert solution(10, 2) == 4"
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), \"Expected:\\n{}\\nGot:\\n{}\".format(output(), solution(input()))"
    },
    {
        "number": 3703,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 1\") == \"6\", \"The first case is incorrect\"\nassert solution(\"10 2\") == \"4\", \"The second case is incorrect\""
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(4) == 2, \"Output: 2\"\nassert solution(5) == 2, \"Output: 2\"\nassert solution(1) == -1, \"Output: -1\"\nassert solution(2) == 1, \"Output: 1\"\nassert solution(3) == 1, \"Output: 1\""
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1\\n0.0.0.0/0\\n2\\n149.154.167.99\\n149.154.167.120/29\\n-1\\n\""
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''1\n-149.154.167.99\n''') == '1\\n0.0.0.0/0'\nassert solution('''4\n-149.154.167.99\n+149.154.167.100/30\n+149.154.167.128/25\n-149.154.167.120/29\n''') == '2\\n149.154.167.99\\n149.154.167.120/29'\nassert solution('''5\n-127.0.0.4/31\n+127.0.0.8\n+127.0.0.0/30\n-195.82.146.208/29\n-127.0.0.6/31\n''') == '2\\n195.0.0.0/8\\n127.0.0.4/30'\nassert solution('''2\n+127.0.0.1/32\n-127.0.0.1\n''') == '-1\\ndef solution(stdin: str) -> str:\\n    pass'"
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=input()) == output()"
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == expected_solution\n"
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(solution_input) == expected_output, f\"Expected output: {expected_output}, but got {solution(solution_input)}\""
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == expected, f\"Solution '{solution}' is incorrect. Expected: {expected}\"\n"
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\") == -1\nassert solution(\"1\") == -1\nassert solution(\"1\\n0.0.0.0/0\") == -1\n\nn = int(stdin.readline())\n\nblacklist = set()\nwhitelist = set()\n\nfor _ in range(n):\n    line = stdin.readline().strip()\n    if line == \"-\":\n        blacklist.add(line)\n    else:\n        subnet = line.split(\"/\")\n        subnet = [int(s) for s in subnet]\n        if len(subnet)!= 4:\n            return -1\n        subnet[3] = 32 - subnet[3]\n        subnet_str = \".\".join(map(str, subnet))\n        whitelist.add(subnet_str)\n\nfor subnet in whitelist:\n    if subnet in blacklist:\n        return -1\n\nblacklist = list(blacklist)\nfor subnet in blacklist:\n    if subnet in whitelist:\n        return -1\n\nt = len(whitelist)\noutput = []\nfor i in range(t):\n    subnet = \".\".join(map(str, whitelist[i]))\n    output.append(subnet)\n\nfor subnet in blacklist:\n    output.append(subnet)\n\nfor subnet in output:\n    print(subnet)\n\nassert solution(\"1\\n0.0.0.0/0\") == -1\nassert solution(\"1\\n0.0.0.0/0\") == 1\nassert solution(\"1\\n-149.154.167.99\\n+149.154.167.100/30\\n+149.154.167.128/25\\n-149.154.167.120/29\") == 2\nassert solution(\"1\\n-127.0.0.4/31\\n+127.0.0.8\\n+127.0.0.0/30\\n-195.82.146.208/29\\n-127.0.0.6/31\") == 2\nassert solution(\"1\\n+127.0.0.1/32\\n-127.0.0.1\") == -1"
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == expected_output, f\"Expected output: {expected_output}, Actual output: {solution}\""
    },
    {
        "number": 3704,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == expected_output, f\"The solution does not match the expected output.\\nInput:\\n{stdin}\\nExpected output:\\n{expected_output}\"\n"
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"11\\n00000000008\") == \"1\"\nassert solution(\"22\\n0011223344556677889988\") == \"2\"\nassert solution(\"11\\n31415926535\") == \"0\""
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('11\\n00000000008\\n') == '1\\n'\nassert solution('22\\n0011223344556677889988\\n') == '2\\n'\nassert solution('11\\n31415926535\\n') == '0\\n'"
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"11\\n00000000008\") == 1\nassert solution(\"22\\n0011223344556677889988\") == 2\nassert solution(\"11\\n31415926535\") == 0"
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"11\\n00000000008\") == \"1\"\nassert solution(\"22\\n0011223344556677889988\") == \"2\"\nassert solution(\"11\\n31415926535\") == \"0\""
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '1'"
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"11\\n00000000008\\n\") == \"1\"\nassert solution(\"22\\n0011223344556677889988\\n\") == \"2\"\nassert solution(\"11\\n31415926535\\n\") == \"0\""
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"11\\n00000000008\\n\") == \"1\"\nassert solution(\"22\\n0011223344556677889988\\n\") == \"2\"\nassert solution(\"11\\n31415926535\\n\") == \"0\""
    },
    {
        "number": 3705,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"11\\n00000000008\\n\") == 1\nassert solution(\"22\\n0011223344556677889988\\n\") == 2\nassert solution(\"11\\n31415926535\\n\") == 0"
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 5\\n2 2 2 3 2\\n0 0 0 1 0\\n1 1 1 2 1\") == \"4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\"\nassert solution(\"3 3\\n0 0 0\\n0 1 0\\n0 0 0\") == \"-1\"\nassert solution(\"3 3\\n1 1 1\\n1 1 1\\n1 1 1\") == \"3\\nrow 1\\nrow 2\\nrow 3\""
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 5\\n2 2 2 3 2\\n0 0 0 1 0\\n1 1 1 2 1\\n\\n3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\") == 4\nassert solution(\"3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\") == -1\nassert solution(\"3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\") == 3"
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input) == expected_output, f\"Test case {i+1} failed: {solution(input)}!= {expected_output}\" for i, (input, expected_output) in enumerate(zip(test_cases, expected_outputs))\n"
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"Output\""
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\\n'\nassert solution() == '-1\\n'\nassert solution() == '3\\nrow 1\\nrow 2\\nrow 3\\n'"
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 5\\n2 2 2 3 2\\n0 0 0 1 0\\n1 1 1 2 1\\n\\n3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\") == \"4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\\n\"\nassert solution(\"3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\") == \"-1\\n\"\nassert solution(\"3 3\\n1 1 1\\n1 1 1\\n1 1 1\") == \"3\\nrow 1\\nrow 2\\nrow 3\\n\""
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=input()) == expected_output, f\"Test Case {test_case} failed. Expected output: {expected_output}, got: {solution(stdin=input())}\""
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"\"\"def solution(stdin: str) -> str:\n    pass\n\"\"\""
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 5\\n2 2 2 3 2\\n0 0 0 1 0\\n1 1 1 2 1\\n\\n3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\\n3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\\n\\n3\\nrow 1\\nrow 2\\nrow 3\\n\""
    },
    {
        "number": 3706,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 5\\n2 2 2 3 2\\n0 0 0 1 0\\n1 1 1 2 1\\n\") == \"4\\nrow 1\\nrow 1\\ncol 4\\nrow 3\\n\"\nassert solution(\"3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n\") == \"-1\\n\"\nassert solution(\"3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"3\\nrow 1\\nrow 2\\nrow 3\\n\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_str=\"8 6 4 5\") == \"YES\"\nassert solution(input_str=\"8 6 4 6\") == \"NO\"\nassert solution(input_str=\"10 3 11 4\") == \"NO\"\nassert solution(input_str=\"4 2 1 4\") == \"YES\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\"\n"
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(8, 6, 4, 5) == \"YES\"\nassert solution(8, 6, 4, 6) == \"NO\"\nassert solution(10, 3, 11, 4) == \"NO\"\nassert solution(4, 2, 1, 4) == \"YES\""
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\"\n"
    },
    {
        "number": 3707,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\"\n"
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 2\\n1 3\\n1 4\\n\\n7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n\\n2 2\\n1 2\\n2 1\\n\\n') == 6\nassert solution('7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n\\n2 2\\n1 2\\n2 1\\n') == 12\nassert solution('2 2\\n1 2\\n2 1\\n\\n') == -1\nprint(\"All test cases passed successfully!\")"
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\n1 3\\n1 4\\n\") == \"6\\n\"\nassert solution(\"7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n\") == \"12\\n\"\nassert solution(\"2 2\\n1 2\\n2 1\\n\") == \"-1\\n\""
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\n1 3\\n1 4\\n\") == \"6\\n\"\nassert solution(\"7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n\") == \"12\\n\"\nassert solution(\"2 2\\n1 2\\n2 1\\n\") == \"-1\\n\""
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n4 2\n1 3\n1 4\n''') == '6'\nassert solution('''\n7 8\n1 6\n2 6\n3 5\n3 6\n4 3\n5 1\n5 2\n5 3\n''') == '12'\nassert solution('''\n2 2\n1 2\n2 1\n''') == '-1'"
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(4, 2) == 6\nassert solution(7, 8) == 12\nassert solution(2, 2) == -1"
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected, f\"Solution should return {expected}, but instead returned {solution(input())}\""
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n1 3\\n1 4\\n\\n7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n\\n2 2\\n1 2\\n2 1\\n\\n\") == 6\nassert solution(\"7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n\\n2 2\\n1 2\\n2 1\\n\\n\") == 12\nassert solution(\"2 2\\n1 2\\n2 1\\n\\n\") == -1"
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4 2\\n1 3\\n1 4\\n') == 6\nassert solution('7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n') == 12\nassert solution('2 2\\n1 2\\n2 1\\n') == -1"
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n4 2\n1 3\n1 4\n\"\"\") == \"6\"\n\nassert solution(\"\"\"\n7 8\n1 6\n2 6\n3 5\n3 6\n4 3\n5 1\n5 2\n5 3\n\"\"\") == \"12\"\n\nassert solution(\"\"\"\n2 2\n1 2\n2 1\n\"\"\") == \"-1\""
    },
    {
        "number": 3708,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n1 3\\n1 4\\n\") == 6\nassert solution(\"7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n\") == 12\nassert solution(\"2 2\\n1 2\\n2 1\\n\") == -1"
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 3\\n1 0 1\\n1 1 0\\n1 0 0\\n1 0 0\\n1 0 0') == 'NO'\nassert solution('3 2\\n1 0\\n1 1\\n0 1') == 'YES'"
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == 'YES', \"Test failed\""
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n1 0 1\\n1 1 0\\n1 0 0\\n1 0 0\\n1 0 0\") == \"NO\"\nassert solution(\"3 2\\n1 0\\n1 1\\n0 1\") == \"YES\""
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n1 0 1\\n1 1 0\\n1 0 0\\n1 0 0\\n1 0 0\") == \"NO\"\nassert solution(\"3 2\\n1 0\\n1 1\\n0 1\") == \"YES\""
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n1 0 1\\n1 1 0\\n1 0 0\\n1 0 0\\n1 0 0\") == \"NO\"\nassert solution(\"3 2\\n1 0\\n1 1\\n0 1\") == \"YES\""
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"YES\""
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"NO\""
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    '''\n    5 3\n    1 0 1\n    1 1 0\n    1 0 0\n    1 0 0\n    1 0 0\n    ''') == 'YES'\n\nassert solution(\n    '''\n    3 2\n    1 0\n    1 1\n    0 1\n    ''') == 'YES'\n\nassert solution(\n    '''\n    5 3\n    1 0 1\n    1 1 0\n    1 0 0\n    1 0 0\n    1 0 0\n    ''') == 'NO'\n\nassert solution(\n    '''\n    3 2\n    1 0\n    1 1\n    0 1\n    ''') == 'NO'"
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n1 0 1\\n1 1 0\\n1 0 0\\n1 0 0\\n1 0 0\") == \"NO\"  # NO\n\nassert solution(\"3 2\\n1 0\\n1 1\\n0 1\") == \"YES\"  # YES"
    },
    {
        "number": 3709,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"YES\""
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5\\n2 3 5 12\\n\") == \"Yes\\n\"\nassert solution(\"2 7\\n2 3\\n\") == \"No\\n\""
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 5\\n2 3 5 12\\n') == 'Yes'\nassert solution('2 7\\n2 3\\n') == 'No'\n"
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"Yes\", \"Please implement the solution.\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"Yes\", \"Incorrect solution\""
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 5\\n2 3 5 12\\n') == 'Yes\\n'\nassert solution('2 7\\n2 3\\n') == 'No\\n'"
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Your code is incorrect.\""
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"Yes\"\n"
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"Yes\\n\", \"Please provide a solution to the problem\""
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 5\\n2 3 5 12\\n\") == \"Yes\"\nassert solution(\"2 7\\n2 3\\n\") == \"No\""
    },
    {
        "number": 3710,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 5\\n2 3 5 12\") == \"Yes\"\nassert solution(\"2 7\\n2 3\") == \"No\""
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4 1\") == \"6\"\nassert solution(\"6 4 2\") == \"8\"\nassert solution(\"2 3 4\") == \"-1\"\nassert solution(\"5 6 1\") == \"6\"\nassert solution(\"5 6 2\") == \"8\"\nassert solution(\"5 6 3\") == \"-1\"\nassert solution(\"5 6 4\") == \"6\"\nassert solution(\"5 6 5\") == \"8\"\nassert solution(\"5 6 6\") == \"-1\""
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()\nfor i in range(10):\n    assert solution(input()) == output()"
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4 1\\n\") == \"6\"\nassert solution(\"6 4 2\\n\") == \"8\"\nassert solution(\"2 3 4\\n\") == \"-1\""
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4 1\") == \"6\"\nassert solution(\"6 4 2\") == \"8\"\nassert solution(\"2 3 4\") == \"-1\""
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4 1\") == 6\nassert solution(\"6 4 2\") == 8\nassert solution(\"2 3 4\") == -1\n"
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, 4, 1) == 6\nassert solution(6, 4, 2) == 8\nassert solution(2, 3, 4) == -1"
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4 1\\n6 4 2\\n2 3 4\\n\") == \"6\"\nassert solution(\"6 4 2\\n8 4 2\\n2 3 4\\n\") == \"8\"\nassert solution(\"2 3 4\\n\") == \"-1\"\nassert solution(\"1 1 1\\n2 2 2\\n3 3 3\\n\") == \"-1\""
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4 1\") == 6\nassert solution(\"6 4 2\") == 8\nassert solution(\"2 3 4\") == -1"
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 4 1') == 6\nassert solution('6 4 2') == 8\nassert solution('2 3 4') == -1"
    },
    {
        "number": 3711,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"6\", \"Expected 6 but got \" + solution(input())\nassert solution(input()) == \"8\", \"Expected 8 but got \" + solution(input())\nassert solution(input()) == \"-1\", \"Expected -1 but got \" + solution(input())"
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n1 2 2 4 3\\n') == '2\\n'\nassert solution('3\\n4 1 1\\n') == '2\\n'\nassert solution('4\\n0 3 0 4\\n') == '0\\n'"
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 2 2 4 3\") == \"2\"\nassert solution(\"3\\n4 1 1\") == \"2\"\nassert solution(\"4\\n0 3 0 4\") == \"0\"\n"
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Test failed for input {input()} and expected output {output}\""
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 2 2 4 3\\n\") == \"2\\n\"\nassert solution(\"3\\n4 1 1\\n\") == \"2\\n\"\nassert solution(\"4\\n0 3 0 4\\n\") == \"0\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(b'\\n'.join(str(int(input())) for _ in range(int(input())))) == \"2\"\nassert solution(b'\\n'.join(str(int(input())) for _ in range(int(input())))) == \"2\"\nassert solution(b'\\n'.join(str(int(input())) for _ in range(int(input())))) == \"2\"\nassert solution(b'\\n'.join(str(int(input())) for _ in range(int(input())))) == \"2\"\nassert solution(b'\\n'.join(str(int(input())) for _ in range(int(input())))) == \"-1\""
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 2 2 4 3\\n3\\n4 1 1\\n4\\n0 3 0 4\") == \"2\"\nassert solution(\"3\\n4 1 1\\n4\\n0 3 0 4\") == \"2\"\nassert solution(\"4\\n0 3 0 4\\n\") == \"0\""
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5\\n1 2 2 4 3') == '2'\nassert solution('3\\n4 1 1') == '2'\nassert solution('4\\n0 3 0 4') == '0'\n\nfrom typing import List"
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"5\n    1 2 2 4 3\n    \"\"\"\n) == \"2\\n\"\n\nassert solution(\n    \"\"\"3\n    4 1 1\n    \"\"\"\n) == \"2\\n\"\n\nassert solution(\n    \"\"\"4\n    0 3 0 4\n    \"\"\"\n) == \"0\\n\""
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 2 2 4 3\\n\") == \"2\"\nassert solution(\"3\\n4 1 1\\n\") == \"2\"\nassert solution(\"4\\n0 3 0 4\\n\") == \"0\""
    },
    {
        "number": 3712,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 2 2 4 3\\n3\\n4 1 1\\n4\\n0 3 0 4\\n\") == \"2\\n\"\nassert solution(\"3\\n4 1 1\\n4\\n0 3 0 4\\n\") == \"2\\n\"\nassert solution(\"4\\n0 3 0 4\\n\") == \"0\\n\""
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('8\\n10000011\\n\\n2\\n01\\n\\n') == '5'\nassert solution('2\\n01\\n\\n') == '2'"
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8\\n10000011\") == \"5\"\nassert solution(\"2\\n01\") == \"2\""
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"5\"\n"
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8\\n10000011\") == \"5\\n\"\nassert solution(\"2\\n01\") == \"2\\n\""
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('8\\n10000011\\n') == '5'\nassert solution('2\\n01\\n') == '2'"
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"8\\n10000011\") == 5\nassert solution(\"2\\n01\") == 2"
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"8\\n10000011\\n\") == \"5\"\nassert solution(\"2\\n01\\n\") == \"2\"\n"
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(solution) == \"5\""
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"8\\n10000011\") == 5\nassert solution(\"2\\n01\") == 2"
    },
    {
        "number": 3713,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('8\\n10000011') == '5', 'Incorrect output'\nassert solution('2\\n01') == '2', 'Incorrect output'"
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output() for input, output in zip(sample_inputs, sample_outputs)"
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n4\n2 3 1 4\n''') == '3\\n'\n\nassert solution('''\n4\n4 4 4 4\n''') == '-1\\n'\n\nassert solution('''\n4\n2 1 4 3\n''') == '1\\n'"
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n4\n2 3 1 4\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n4\n4 4 4 4\n\"\"\") == \"-1\"\n\nassert solution(\"\"\"\n4\n2 1 4 3\n\"\"\") == \"1\""
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n2 3 1 4\\n4\\n4 4 4 4\\n4\\n2 1 4 3\\n\") == \"3\\n\"\nassert solution(\"4\\n4 4 4 4\\n4\\n2 1 4 3\\n\") == \"-1\\n\"\nassert solution(\"4\\n2 1 4 3\\n\") == \"1\\n\""
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n2 3 1 4\\n\") == \"3\"\nassert solution(\"4\\n4 4 4 4\\n\") == \"-1\"\nassert solution(\"4\\n2 1 4 3\\n\") == \"1\""
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n2 3 1 4\\n\") == \"3\"\nassert solution(\"4\\n4 4 4 4\\n\") == \"-1\"\nassert solution(\"4\\n2 1 4 3\\n\") == \"1\""
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n2 3 1 4\") == \"3\"\nassert solution(\"4\\n4 4 4 4\") == \"-1\"\nassert solution(\"4\\n2 1 4 3\") == \"1\""
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n2 3 1 4\\n\\n4\\n4 4 4 4\\n\\n4\\n2 1 4 3\\n\\n4\\n2\\n1\") == \"3\\n\"\nassert solution(\"4\\n4 4 4 4\\n\\n4\\n2 1 4 3\\n\\n4\\n2\\n1\") == \"-1\\n\"\nassert solution(\"4\\n2 1 4 3\\n\\n4\\n4 4 4 4\\n\\n4\\n4 4 4 4\\n\\n4\\n4 4 4 4\\n\\n4\\n4 4 4 4\\n\\n4\\n4 4 4 4\\n\\n4\\n4 4 4 4\\n\\n4\\n4 4 4 4\\n\\n4\\n4 4 4 4\\n\\n4\\n4 4 4 4\\n\\n4\\n4 4 4 4\\n\\n4\\n4 4 4 4\\n\\n4\\n4 4 4 4\\n\\n4\\n4 4 4 4\\n\\n4\\n4 4 4 4\\n\\n4\\n4 4 4 4\\n\\n4\\n4 4 4 4\\n\\n4\\n4 4 4 4\\n\\n4\\n4 4 4 4\\n\\n4\\n4 4 4 4\\n\\n4\\n4 4 4 4\\n\\n4\\n4 4 4 4\\n\\n4\\n4 4 4 4\\n\\n4\\n4 4 4 4\\n\\n4\\n4 4 4 4\\n\\n4\\n4 4 4 4\\n\\n4\\n4 4 4 4\\n\\n4\\n4 4 4 4\\n\\n4\\n4 4 4 4\\n\\n4\\n4 4 4 4\\n\\n4\\n4 4 4 4\\n\\n4\\n4 4 4 4\\n\\n4\\n4 4 4 4\\n\\n4\\n4 4 4 4\\n\\n4\\n4 4 4 4\\n\\n4\\n4 4 4 4\\n\\n4\\n4 4 4 4\\n\\n4\\n4 4 4 4\\n\\n4\\n4 4 4 4\\n\\n4\\n4 4 4 4\\n\\n4\\n4 4 4 4\\n\\n4\\n4 4 4 4\\n\\n4\\n4 4 4 4\\n\\n4\\n4 4 4 4\\n\\n4\\n4 4 4 4\\n\\n4\\n4 4 4 4\\n\\n4\\n4 4 4 4\\n\\n4\\n4 4 4 4\\n\\n4\\n4 4 4 4\\n\\n4\\n4 4 4 4\\n\\n4\\n4 4 4 4\\n\\n4\\n4 4 4 4\\n\\n4\\n4 4 4 4\\n\\n4\\n4 4 4 4\\n\\n4\\n4 4 4 4\\n\\n4\\n4 4 4 4\\n\\n4\\n4 4 4 4\\n\\n4\\n4 4 4 4\\n\\n4\\n4 4 4 4\\n\\n4\\n4 4 4 4\\n\\n4\\n4 4 4 4\\n\\n4\\n4 4 4 4\\n\\n4\\n4 4 4 4\\n\\n4\\n4 4 4 4\\n\\n4\\n4 4 4 4\\n\\n4\\n4 4 "
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n2 3 1 4\") == \"3\\n\"\nassert solution(\"4\\n4 4 4 4\") == \"-1\\n\"\nassert solution(\"4\\n2 1 4 3\") == \"1\\n\""
    },
    {
        "number": 3714,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n2 3 1 4\\n4\\n4 4 4 4\\n4\\n2 1 4 3\\n\") == \"3\\n\"\nassert solution(\"4\\n2 1 4 3\\n\") == \"-1\\n\"\nassert solution(\"4\\n4 4 4 4\\n\") == \"-1\\n\"\nassert solution(\"4\\n2 1 4 3\\n\") == \"1\\n\""
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 3 2 0\\n\") == \"2\"\nassert solution(\"7\\n1 3 3 2 1 2 3\\n\") == \"0\"\nassert solution(\"2\\n2 2\\n\") == \"1\""
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 3 2 0\\n\") == \"2\\n\"\nassert solution(\"7\\n1 3 3 2 1 2 3\\n\") == \"0\\n\"\nassert solution(\"2\\n2 2\\n\") == \"1\\n\""
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"For input {input()}, expected output {expected_output}, but got {solution(input())}\""
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 3 2 0\\n\") == \"2\\n\"\nassert solution(\"7\\n1 3 3 2 1 2 3\\n\") == \"0\\n\"\nassert solution(\"2\\n2 2\\n\") == \"1\\n\""
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 3 2 0\\n\") == \"2\\n\"\nassert solution(\"7\\n1 3 3 2 1 2 3\\n\") == \"0\\n\"\nassert solution(\"2\\n2 2\\n\") == \"1\\n\""
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 3 2 0\\n2\\n1 3 3 2 1 2 3\\n0\\n2\\n2 2\\n1\") == \"2\"\nassert solution(\"7\\n1 3 3 2 1 2 3\\n\\n2\\n1\\n1\") == \"0\"\nassert solution(\"2\\n2 2\\n2\") == \"1\""
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('Input\\n4\\n1 3 2 0\\nOutput\\n2\\n\\nInput\\n7\\n1 3 3 2 1 2 3\\nOutput\\n0\\n\\nInput\\n2\\n2 2\\nOutput\\n1\\n\\n') == '2\\n\\n'"
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 3 2 0\\n\") == \"2\"\nassert solution(\"7\\n1 3 3 2 1 2 3\\n\") == \"0\"\nassert solution(\"2\\n2 2\\n\") == \"1\""
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 3 2 0\\n2\\n1 3 3 2 1 2 3\\n0\\n2\\n2 2\\n1\\n\") == \"2\\n\"\nassert solution(\"7\\n1 3 3 2 1 2 3\\n2\\n1\\n\") == \"0\\n\"\nassert solution(\"2\\n2 2\\n1\\n\") == \"1\\n\""
    },
    {
        "number": 3715,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\""
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"9\\n\") == \"504\\n\"\nassert solution(\"7\\n\") == \"210\\n\""
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"504\"\nassert solution() == \"210\""
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"9\\n\") == \"504\"\nassert solution(\"7\\n\") == \"210\""
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Expected output: {expected_output}, got: {solution(input())}\"\n\nn = int(input())"
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"9\") == 504\nassert solution(\"7\") == 210"
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\"\n\nn = int(stdin.readline().strip())"
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"9\\n\") == \"504\\n\"\nassert solution(\"7\\n\") == \"210\\n\"\n\nfrom math import gcd"
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(9) == 504\nassert solution(7) == 210"
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"9\") == \"504\"\nassert solution(\"7\") == \"210\""
    },
    {
        "number": 3716,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Output\\n504\\n\", \"Test 1 failed\"\n\nassert solution(input()) == \"Output\\n210\\n\", \"Test 2 failed\"\n\nn = int(input())"
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), \"The solution is incorrect. Please check your code and try again.\""
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1 1\"\nassert solution() == \"1 1\"\nassert solution() == \"1 1\"\nassert solution() == \"1 1\"\nassert solution() == \"1 1\""
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3, 0, 1, 1) == (1, 1)\nassert solution(3, 1, 1, 2) == (1, 1)\nassert solution(3, 0, 1, 1) == (1, 1)\nassert solution(3, 0, 1, 1) == (1, 1)\nassert solution(4, 0, 5, 5) == (1, 1)\nassert solution(4, 0, 4, 4) == (1, 1)\nassert solution(4, 1, 4, 4) == (1, 1)\nassert solution(4, 1, 4, 4) == (1, 1)\nassert solution(5, 0, 10, 8) == (3, 4)"
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n0 0 1 1\\n1 1 2 2\\n3 0 4 1\\n\\n3\\n0 0 1 1\\n0 1 1 2\\n1 0 2 1\\n\\n4\\n0 0 5 5\\n0 0 4 4\\n1 1 4 4\\n1 1 4 4\\n\\n5\\n0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2\\n\\n\") == \"1 1\\n\\n\""
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0 0 1 1\\n1 1 2 2\\n3 0 4 1\\n\") == \"1 1\\n\"\nassert solution(\"0 0 1 1\\n0 1 1 2\\n1 0 2 1\\n\") == \"1 1\\n\"\nassert solution(\"0 0 5 5\\n0 0 4 4\\n1 1 4 4\\n1 1 4 4\\n\") == \"1 1\\n\"\nassert solution(\"0 0 10 8\\n1 2 6 7\\n2 3 5 6\\n3 4 4 5\\n8 1 9 2\\n\") == \"3 4\\n\""
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=input()) == expected, f\"Expected '{expected}', got '{solution(stdin=input())}'\"\n\nfrom typing import List"
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0 0 1 1\\n1 1 2 2\\n3 0 4 1\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n"
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(0, 0, 1, 1) == '1 1'\nassert solution(1, 1, 2, 2) == '1 1'\nassert solution(3, 0, 4, 1) == '1 1'\nassert solution(3, 0, 10, 8) == '1 1'\nassert solution(4, 0, 5, 5) == '1 1'\nassert solution(4, 0, 4, 4) == '1 1'\nassert solution(8, 1, 9, 2) == '3 4'"
    },
    {
        "number": 3717,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '''\n1 1\n'''\n\nassert solution() == '''\n3 4\n'''\n\nassert solution() == '''\n1 1\n'''\n\nassert solution() == '''\n3 4\n'''"
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n18 55 16 17\") == \"YES\"\nassert solution(\"6\\n40 41 43 44 44 44\") == \"NO\"\nassert solution(\"8\\n5 972 3 4 1 4 970 971\") == \"YES\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('test_cases/test_example_1.txt').read()) == 'YES'\nassert solution(open('test_cases/test_example_2.txt').read()) == 'NO'\nassert solution(open('test_cases/test_example_3.txt').read()) == 'YES'"
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Input\") == \"YES\"\nassert solution(\"Input\") == \"NO\"\nassert solution(\"Input\") == \"YES\""
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(18) == \"YES\"\nassert solution(6) == \"NO\"\nassert solution(8) == \"YES\"\n\nfrom typing import List"
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n18 55 16 17\\n6\\n40 41 43 44 44 44\\n8\\n5 972 3 4 1 4 970 971\") == \"YES\\n\"\nassert solution(\"6\\n40 41 43 44 44 44\\n8\\n5 972 3 4 1 4 970 971\") == \"NO\\n\""
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n18 55 16 17\") == \"YES\"\nassert solution(\"6\\n40 41 43 44 44 44\") == \"NO\"\nassert solution(\"8\\n5 972 3 4 1 4 970 971\") == \"YES\"\n\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input(\"Enter number of balls: \")) == \"YES\"\nassert solution(input(\"Enter number of balls: \")) == \"NO\"\nassert solution(input(\"Enter number of balls: \")) == \"YES\""
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"YES\\n\", \"Expected 'YES', got {}\".format(solution(stdin))"
    },
    {
        "number": 3718,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: '{expected_output}', Received output: '{solution(input())}'\""
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 9\\n1 2 3\\n1 2 3 7 8 9 11 12 13\") == \"9\"\nassert solution(\"5 5\\n1 2 3 4 5\\n1 2 3 4 5\") == \"10\"\nassert solution(\"\") == \"\""
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 9\\n1 2 3\\n1 2 3 7 8 9 11 12 13\") == \"9\"\nassert solution(\"5 5\\n1 2 3 4 5\\n1 2 3 4 5\") == \"10\""
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 9\n\nassert solution(\"3 9\\n1 2 3\\n1 2 3 7 8 9 11 12 13\") == 9\n\nassert solution(\"5 5\\n1 2 3 4 5\\n1 2 3 4 5\") == 10"
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 9\\n1 2 3\\n1 2 3 7 8 9 11 12 13\\n\") == \"9\\n\"\nassert solution(\"5 5\\n1 2 3 4 5\\n1 2 3 4 5\\n\") == \"10\\n\""
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 9\\n1 2 3\\n1 2 3 7 8 9 11 12 13') == '9'\nassert solution('5 5\\n1 2 3 4 5\\n1 2 3 4 5') == '10'"
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 9\\n1 2 3\\n1 2 3 7 8 9 11 12 13\\n\") == \"9\\n\"\nassert solution(\"5 5\\n1 2 3 4 5\\n1 2 3 4 5\\n\") == \"10\\n\""
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 9\\n1 2 3\\n1 2 3 7 8 9 11 12 13\") == \"9\\n\"\nassert solution(\"5 5\\n1 2 3 4 5\\n1 2 3 4 5\") == \"10\\n\""
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 9\\n1 2 3\\n1 2 3 7 8 9 11 12 13\") == \"9\\n\"\nassert solution(\"5 5\\n1 2 3 4 5\\n1 2 3 4 5\") == \"10\\n\""
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 9\\n1 2 3\\n1 2 3 7 8 9 11 12 13\\n\") == \"9\\n\"\nassert solution(\"5 5\\n1 2 3 4 5\\n1 2 3 4 5\\n\") == \"10\\n\""
    },
    {
        "number": 3719,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 9\\n1 2 3\\n1 2 3 7 8 9 11 12 13\\n') == '9\\n'\nassert solution('5 5\\n1 2 3 4 5\\n1 2 3 4 5\\n') == '10\\n'"
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Vasya\" or solution(input()) == \"Petya\", \"Incorrect output\""
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"Vasya\"\nassert solution(\"2\") == \"Petya\"\nassert solution(\"8\") == \"Petya\""
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == 'Vasya'\nassert solution(2) == 'Petya'\nassert solution(8) == 'Petya'"
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n\") == \"Vasya\"\nassert solution(\"2\\n\") == \"Petya\"\nassert solution(\"8\\n\") == \"Petya\""
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == \"Vasya\"\nassert solution(2) == \"Petya\"\nassert solution(8) == \"Petya\""
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == \"Vasya\"\nassert solution(2) == \"Petya\"\nassert solution(8) == \"Petya\""
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(2) == \"Petya\"\nassert solution(8) == \"Petya\"\nassert solution(1) == \"Vasya\"\nassert solution(2) == \"Vasya\""
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"Vasya\"\nassert solution(\"2\") == \"Petya\"\nassert solution(\"8\") == \"Petya\""
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == \"Vasya\"\nassert solution(2) == \"Petya\"\nassert solution(8) == \"Petya\""
    },
    {
        "number": 3720,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == \"Vasya\"\nassert solution(2) == \"Petya\"\nassert solution(8) == \"Petya\"\n\nfrom typing import List"
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt', 'r').read()) == \"0\\n\"\nassert solution(open('input1.txt', 'r').read()) == \"0\\n\"\nassert solution(open('input2.txt', 'r').read()) == \"2\\n\"\nassert solution(open('input3.txt', 'r').read()) == \"1\\n\""
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == '1'"
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Test {i+1} failed\" for i, (input, output) in enumerate(zip(test_cases, expected_outputs))\n"
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 2 3\\n1 2\\n2 2\\n2 1') == '0\\n'\nassert solution('1 5 3\\n1 3\\n1 1\\n1 5') == '2\\n'\nassert solution('4 3 6\\n1 2\\n1 3\\n2 2\\n2 3\\n3 1\\n3 3') == '1\\n'"
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Input\\n2 2 3\\n1 2\\n2 2\\n2 1\\n\") == \"0\"\nassert solution(\"Input\\n1 5 3\\n1 3\\n1 1\\n1 5\\n\") == \"2\"\nassert solution(\"Input\\n4 3 6\\n1 2\\n1 3\\n2 2\\n2 3\\n3 1\\n3 3\\n\") == \"1\""
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 2 3\\n1 2\\n2 2\\n2 1\\n') == '0\\n'\nassert solution('1 5 3\\n1 3\\n1 1\\n1 5\\n') == '2\\n'\nassert solution('4 3 6\\n1 2\\n1 3\\n2 2\\n2 3\\n3 1\\n3 3\\n') == '1\\n'\n"
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"0\"\nassert solution(open(\"example1.txt\", \"r\")) == \"0\"\nassert solution(open(\"example2.txt\", \"r\")) == \"2\"\nassert solution(open(\"example3.txt\", \"r\")) == \"1\""
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"0\\n\"\nassert solution() == \"2\\n\"\nassert solution() == \"1\\n\""
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), f\"Test {t+1} failed. Expected {output()}, got {solution(input())}.\"\nfor t in range(1, 11):\n    assert solution(input()) == output(), f\"Test {t+1} failed.\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3721,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2 3\\n1 2\\n2 2\\n2 1\\n\") == \"0\"\nassert solution(\"1 5 3\\n1 3\\n1 1\\n1 5\\n\") == \"2\"\nassert solution(\"4 3 6\\n1 2\\n1 3\\n2 2\\n2 3\\n3 1\\n3 3\\n\") == \"1\""
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '2', \"Test Case 1 Failed\""
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\") == 0\nassert solution(\"1\\n\") == 1\nassert solution(\"2\\nc\\n\") == 2\nassert solution(\"3\\nc\\n\") == 2\nassert solution(\"4\\nc\\nc\\nc\\nc\\nc\\n\") == 2\nassert solution(\"5\\nc\\nc\\nc\\nc\\nc\\nc\\n\") == 1\nassert solution(\"6\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\n\") == 0\nassert solution(\"7\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\n\") == 2\nassert solution(\"8\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\n\") == 1\nassert solution(\"9\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\n\") == 0\nassert solution(\"10\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\n\") == 2\nassert solution(\"11\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\n\") == 1\nassert solution(\"12\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\n\") == 0\nassert solution(\"13\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\n\") == 2\nassert solution(\"14\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\n\") == 1\nassert solution(\"15\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\nc\\"
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\" # Solution 1"
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\"  # correct output"
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=\"4\\nA\\nB\\nB\\nA\\n\") == \"2\\n\"\nprint(\"All test cases passed successfully\")"
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, \"Your solution is not correct.\"\nprint(\"You are correct.\")"
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2\"\n"
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\"\nassert solution(\"1\\nA\\nB\\nA\") == \"1\"\nassert solution(\"3\\nA\\nB\\nC\") == \"0\"\nassert solution(\"2\\nA\\nA\\nA\") == \"1\"\nassert solution(\"4\\nC\\nC\\nC\") == \"1\"\nassert solution(\"5\\nC\\nC\\nA\") == \"2\"\nassert solution(\"6\\nA\\nA\\nC\") == \"3\"\nassert solution(\"7\\nC\\nA\\nC\") == \"5\"\nassert solution(\"8\\nC\\nA\\nA\") == \"10\"\nassert solution(\"9\\nA\\nA\\nA\") == \"36\"\n"
    },
    {
        "number": 3722,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution"
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n2 3 4\\n\") == \"2\\n\"\nassert solution(\"3\\n2 3 4\\n\") == \"2\\n\""
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '2\\n'\nassert solution() == '3\\n'"
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n2 3 4\") == \"2\\n\"\nassert solution(\"5\\n2 3 4 6 7\") == \"3\\n\""
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, 2, 3, 4) == 2\nassert solution(5, 2, 3, 4, 6, 7) == 3"
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"The output is incorrect. Please check the example and input.\""
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected\n"
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n2 3 4\\n\") == \"2\\n\"\nassert solution(\"5\\n2 3 4 6 7\\n\") == \"3\\n\"\n\nassert solution(\"3\\n2 3 4\\n\") == \"2\\n\"\nassert solution(\"5\\n2 3 4 6 7\\n\") == \"3\\n\"\n\nassert solution(\"3\\n2 3 4\\n\") == \"2\\n\"\nassert solution(\"5\\n2 3 4 6 7\\n\") == \"3\\n\""
    },
    {
        "number": 3723,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2\", \"Expected output '2', got '{}'.\".format(solution(input()))"
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\nABAAC\") == \"11\""
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\nABAAC\") == \"11\\n\", \"Test case 1 failed\""
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5\\nABAAC') == '11\\n'\nassert solution('5\\nCBAAC') == '11\\n'\nassert solution('5\\nABBBB') == '11\\n'\nassert solution('5\\nABACB') == '11\\n'\nassert solution('5\\nBACB') == '11\\n'\nassert solution('5\\nABAAB') == '11\\n'\nassert solution('5\\nABCBA') == '11\\n'"
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\nABAAC\") == \"11\\n\", \"Test case 1 failed\"\nassert solution(\"5\\nABACD\") == \"5\\n\", \"Test case 2 failed\"\nassert solution(\"5\\nA\") == \"5\\n\", \"Test case 3 failed\"\nassert solution(\"5\\n\") == \"5\\n\", \"Test case 4 failed\"\nassert solution(\"5\\nAB\") == \"5\\n\", \"Test case 5 failed\"\nassert solution(\"5\\nABC\") == \"5\\n\", \"Test case 6 failed\"\n\nprint(\"All test cases passed\")"
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '11', 'The solution is incorrect'"
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '11\\n', \"The function should return 11, but it returned {}\".format(solution(stdin))"
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\nAABC\\n\") == \"11\"\nassert solution(\"6\\nABAAC\\n\") == \"11\"\nassert solution(\"7\\nAABCAC\\n\") == \"13\"\nassert solution(\"8\\nAABCABAC\\n\") == \"15\"\nassert solution(\"9\\nAABCABACB\\n\") == \"15\"\nassert solution(\"10\\nAABCABACBC\\n\") == \"16\""
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\nA\\n\") == \"11\\n\""
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\nABAAC\") == \"11\""
    },
    {
        "number": 3724,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\nABAAC\") == \"11\\n\", \"Test case 1\"\nassert solution(\"10\\nA\\nB\\nC\\n\") == \"20\\n\", \"Test case 2\"\nassert solution(\"10\\nA\\nB\\nC\\n\\n\") == \"20\\n\", \"Test case 3\"\nassert solution(\"10\\nAB\\nAC\\nAD\\nBC\\nBD\\nBE\\n\") == \"10\\n\", \"Test case 4\"\nassert solution(\"10\\nA\\n\\n\") == \"20\\n\", \"Test case 5\"\n"
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Output\", \"Test Case 1 Failed\""
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n4 2\\n1 1\\n0 1\\n2 3\\n\") == \"3\\n\"\nassert solution(\"1023\\n1 2\\n1 0\\n1 2\\n1 1\\n\") == \"-1\\n\""
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n4 2\\n1 1\\n0 1\\n2 3\\n\") == \"3\\n\"\nassert solution(\"1023\\n1 2\\n1 0\\n1 2\\n1 1\\n\") == \"-1\\n\"\n"
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 3, \"Expected output: 3, but got: {}\".format(solution())"
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Test failed. Expected output: {output}, but got {solution(input())}.\"\n"
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\").read()) == \"3\\n\"\nassert solution(\"5\\n4 2\\n1 1\\n0 1\\n2 3\\n\") == \"3\\n\"\nassert solution(\"1023\\n1 2\\n1 0\\n1 2\\n1 1\\n\") == \"-1\\n\""
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n4 2\\n1 1\\n0 1\\n2 3\\n\") == \"3\\n\"\nassert solution(\"1023\\n1 2\\n1 0\\n1 2\\n1 1\\n\") == \"-1\\n\""
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 2\\n1 0\\n1 2\\n1 1\\n1 2') == '3'\nassert solution('5\\n4 2\\n1 1\\n0 1\\n2 3') == '3'\nassert solution('1023\\n1 2\\n1 0\\n1 2\\n1 1') == '-1'"
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"sample_input.txt\", \"r\")) == \"3\"\nassert solution(open(\"sample_input.txt\", \"r\")) == \"3\"\nassert solution(open(\"sample_input.txt\", \"r\")) == \"3\"\nassert solution(open(\"sample_input.txt\", \"r\")) == \"3\"\nassert solution(open(\"sample_input.txt\", \"r\")) == \"3\"\nassert solution(open(\"sample_input.txt\", \"r\")) == \"-1\""
    },
    {
        "number": 3725,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n4 2\\n1 1\\n0 1\\n2 3\\n') == '3\\n'\nassert solution('1023\\n1 2\\n1 0\\n1 2\\n1 1\\n') == '-1\\n'"
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n4 5\") == \"2\"\nassert solution(\"1\\n2 3\") == \"1\"\nassert solution(\"2\\n1 4\") == \"3\"\nassert solution(\"1\\n3 5\") == \"3\"\n"
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n4 5\\n\") == \"2\\n\"\nassert solution(\"3\\n1 2\\n\") == \"1\\n\""
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n4 5\\n\") == \"2\\n\"\n"
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n4 5\\n\") == \"2\\n\"\nassert solution(\"2\\n4 5\\n3\\n\") == \"2\\n\"\nassert solution(\"3\\n2 4 5\\n\") == \"2\\n\""
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n4 5\") == \"2\\n\", \"Output should be 2\\n\"\nassert solution(\"3\\n4 5\") == \"1\\n\", \"Output should be 1\\n\"\nassert solution(\"2\\n1 2\\n3 4\") == \"2\\n\", \"Output should be 2\\n\"\nassert solution(\"1000000000\\n\") == \"0\\n\", \"Output should be 0\\n\"\nassert solution(\"2\\n3 4\\n5 6\") == \"3\\n\", \"Output should be 3\\n\"\nassert solution(\"1\\n2\\n3\\n4\\n5\") == \"1\\n\", \"Output should be 1\\n\""
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n4 5\") == \"2\\n\"\n"
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n4 5\") == \"2\\n\", \"The solution should be 2.\"\n\nassert solution(\"2\\n3 4 5\") == \"2\\n\", \"The solution should be 2.\""
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n4 5\") == \"2\", \"Expected result 2, but got {}\".format(solution(\"2\\n4 5\"))"
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n4 5\") == \"2\\n\", \"Test 1: Should return 2.\"\nassert solution(\"3\\n1 2 3\") == \"1\\n\", \"Test 2: Should return 1.\"\nassert solution(\"2\\n1\\n1\\n2\\n\") == \"2\\n\", \"Test 3: Should return 2.\"\nassert solution(\"1\\n\") == \"1\\n\", \"Test 4: Should return 1.\"\nassert solution(\"2\\n1\\n1\\n2\\n\") == \"2\\n\", \"Test 5: Should return 2.\""
    },
    {
        "number": 3726,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\n4 5') == '2', \"The minimum number of operations required to achieve the objective is 2.\"\nassert solution('3\\n1 2 3') == '1', \"The minimum number of operations required to achieve the objective is 1.\""
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2 2 1\\n\") == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(\"1 2 3 4\\n\") == \"NO\"\nassert solution(\"2 2 2 3\\n\") == \"NO\"\n"
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2 2 1\") == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"NO\""
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2 2 1\\n\") == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(\"1 2 3 4\\n\") == \"NO\"\nassert solution(\"2 2 2 3\\n\") == \"NO\""
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2 2 1\") == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"NO\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2 2 1\") == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"NO\"\n\nfrom typing import List"
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2 2 1\") == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"NO\""
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"NO\""
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 2 2 1') == 'YES\\n0 1 0 1 2 3 2'\nassert solution('1 2 3 4') == 'NO'\nassert solution('2 2 2 3') == 'NO'\n\nprint(\"All test cases passed\")"
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2 2 1\") == \"YES\\n0 1 0 1 2 3 2\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"NO\""
    },
    {
        "number": 3727,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Input\\n2 2 2 1\\n\\nOutput\\nYES\\n0 1 0 1 2 3 2\\n\\nInput\\n1 2 3 4\\n\\nOutput\\nNO\\n\\nInput\\n2 2 2 3\\n\\nOutput\\nNO\\n\") == \"YES\\n0 1 0 1 2 3 2\\nYES\\nNO\\nNO\"\nassert solution(\"Input\\n2 2 2 3\\n\\nOutput\\nNO\\n\\nInput\\n1 2 3 4\\n\\nOutput\\nNO\\n\\nInput\\n1 2 3 4\\n\\nOutput\\nNO\\n\") == \"NO\\nYES\\nNO\\nNO\"\nassert solution(\"Input\\n2 2 2 3\\n\\nOutput\\nNO\\n\\nInput\\n2 2 2 3\\n\\nOutput\\nYES\\nNO\\n\") == \"NO\\nYES\\nYES\"\nassert solution(\"Input\\n2 2 2 3\\n\\nOutput\\nYES\\nNO\\n\\nInput\\n2 2 2 3\\n\\nOutput\\nYES\\nYES\\n\") == \"YES\\nYES\\nYES\""
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Input\\n2 4\\n1 3 2 4\\n1 3 4 2\\n\") == \"YES\"\nassert solution(\"Input\\n4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\\n\") == \"NO\"\nassert solution(\"Input\\n3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\\n\") == \"YES\""
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n2 4\n1 3 2 4\n1 3 4 2\n\"\"\") == \"YES\\n\"\n\nassert solution(\"\"\"\n4 4\n1 2 3 4\n2 3 4 1\n3 4 1 2\n4 1 2 3\n\"\"\") == \"NO\\n\"\n\nassert solution(\"\"\"\n3 6\n2 1 3 4 5 6\n1 2 4 3 5 6\n1 2 3 4 6 5\n\"\"\") == \"YES\\n\""
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 4\\n1 3 2 4\\n1 3 4 2\") == \"YES\"\nassert solution(\"4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\") == \"NO\"\nassert solution(\"3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\") == \"YES\"\n\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n    2 4\n    1 3 2 4\n    1 3 4 2\n    \"\"\") == \"YES\"\n\nassert solution(\"\"\"\n    4 4\n    1 2 3 4\n    2 3 4 1\n    3 4 1 2\n    4 1 2 3\n    \"\"\") == \"NO\"\n\nassert solution(\"\"\"\n    3 6\n    2 1 3 4 5 6\n    1 2 4 3 5 6\n    1 2 3 4 6 5\n    \"\"\") == \"YES\""
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('Input\\n2 4\\n1 3 2 4\\n1 3 4 2\\n\\nInput\\n4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\\n\\nInput\\n3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\\n') == 'YES'\nassert solution('Input\\n4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\\n\\nInput\\n3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\\n') == 'NO'"
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 4\\n1 3 2 4\\n1 3 4 2') == 'YES'\nassert solution('4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3') == 'NO'\nassert solution('3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5') == 'YES'"
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 4\\n1 3 2 4\\n1 3 4 2') == 'YES'\nassert solution('4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3') == 'NO'\nassert solution('3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5') == 'YES'"
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 4\\n1 3 2 4\\n1 3 4 2\") == \"YES\"\nassert solution(\"4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\") == \"NO\"\nassert solution(\"3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\") == \"YES\"\nassert solution(\"2 4\\n1 3 2 4\\n1 3 4 2\") == \"YES\"\nassert solution(\"4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\") == \"NO\"\nassert solution(\"3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\") == \"YES\"\nassert solution(\"2 4\\n1 3 2 4\\n1 3 4 2\") == \"YES\"\nassert solution(\"4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\") == \"NO\"\nassert solution(\"3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\") == \"YES\"\n"
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\""
    },
    {
        "number": 3728,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 4\\n1 3 2 4\\n1 3 4 2\") == \"YES\"\nassert solution(\"4 4\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\") == \"NO\"\nassert solution(\"3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\") == \"YES\""
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1 1\") == \"0\"\nassert solution(\"1 2 1\") == \"666666672\""
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"0\\n\"\n\nfrom math import pow"
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1 1\") == \"0\"\nassert solution(\"1 2 1\") == \"666666672\"\n"
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1, 1, 1) == 0\nassert solution(1, 2, 1) == 666666672\n\nimport random"
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), \"Expected: {}, Got: {}\".format(output(), solution(input()))\n"
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1\") == \"0\"\nassert solution(\"1 2 1\") == \"666666672\""
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"0\"\nassert solution(input()) == \"666666672\""
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1 1\") == \"0\"\nassert solution(\"1 2 1\") == \"666666672\"\n\nfrom math import factorial"
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1 1\") == \"0\"\n\nassert solution(\"1 2 1\") == \"666666672\"\n\nassert solution(\"1 1 1\") == \"0\""
    },
    {
        "number": 3729,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 1 1') == '0'\nassert solution('1 2 1') == '666666672'"
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n7 2 3 1 5 6\") == \"5\"\n"
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n7 2 3 1 5 6\\n\") == \"5\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9\\n\") == \"6\\n\"\nassert solution(\"20\\n2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\\n\") == \"12\\n\""
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n7 2 3 1 5 6\") == \"5\"\nassert solution(\"10\\n1 2 3 4 5 6\") == \"5\"\nassert solution(\"10\\n1 2 3 4 5\") == \"3\"\nassert solution(\"10\\n1 2 3 4\") == \"2\"\nassert solution(\"10\\n1 2 3\") == \"1\"\nassert solution(\"10\\n1 2\") == \"0\"\n"
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n7 2 3 1 5 6\") == \"5\"\nassert solution(\"5\\n3 5 7 9\") == \"5\"\nassert solution(\"10\\n1 2 3 4 5\") == \"0\""
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Output\\n5\""
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"5\\n\""
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"5\", \"The output is incorrect.\""
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n7 2 3 1 5 6\") == \"5\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7 2 3 1 5 6\") == \"5\"\nassert solution(\"6\") == \"1\"\nassert solution(\"1\") == \"1\""
    },
    {
        "number": 3730,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"3\\n\"\nassert solution(5) == \"5\\n\"\nassert solution(10) == \"10\\n\"\nassert solution(25) == \"25\\n\"\nassert solution(50) == \"50\\n\""
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 1 1 8') == '2', 'Test 1 failed'\nassert solution('4 2 2 6') == '3', 'Test 2 failed'\nassert solution('3 7 4 6') == '1', 'Test 3 failed'"
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1 1 8\") == \"2\", \"Test case 1\"\nassert solution(\"4 2 2 6\") == \"3\", \"Test case 2\"\nassert solution(\"3 7 4 6\") == \"1\", \"Test case 3\""
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1 1 8\") == \"2\"\nassert solution(\"4 2 2 6\") == \"3\"\nassert solution(\"3 7 4 6\") == \"1\"\n"
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1 1 8\") == \"2\", \"Test case 1\"\nassert solution(\"4 2 2 6\") == \"3\", \"Test case 2\"\nassert solution(\"3 7 4 6\") == \"1\", \"Test case 3\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1 1 8\") == \"2\", \"Wrong answer for sample test 1\"\nassert solution(\"4 2 2 6\") == \"3\", \"Wrong answer for sample test 2\"\nassert solution(\"3 7 4 6\") == \"1\", \"Wrong answer for sample test 3\""
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1 8\") == \"2\", \"Test 1\"\nassert solution(\"4 2 2 6\") == \"3\", \"Test 2\"\nassert solution(\"3 7 4 6\") == \"1\", \"Test 3\""
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1 1 8\") == \"2\"\nassert solution(\"4 2 2 6\") == \"3\"\nassert solution(\"3 7 4 6\") == \"1\""
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1 1 8\") == \"2\\n\", \"The first test case is incorrect.\"\nassert solution(\"4 2 2 6\") == \"3\\n\", \"The second test case is incorrect.\"\nassert solution(\"3 7 4 6\") == \"1\\n\", \"The third test case is incorrect.\"\n"
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1 1 8\") == \"2\", \"Test 1\"\nassert solution(\"4 2 2 6\") == \"3\", \"Test 2\"\nassert solution(\"3 7 4 6\") == \"1\", \"Test 3\""
    },
    {
        "number": 3731,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1 1 8\") == \"2\", \"Test case 1 failed\"\nassert solution(\"4 2 2 6\") == \"3\", \"Test case 2 failed\"\nassert solution(\"3 7 4 6\") == \"1\", \"Test case 3 failed\"\n"
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"2\", \"The output should be 2\""
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 5\") == \"2\"\nassert solution(\"-1 4 15\") == \"4\"\nassert solution(\"0 -1 5\") == \"-1\""
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"-1 4 15\") == \"4\"\nassert solution(\"0 -1 5\") == \"-1\"\nassert solution(\"1 2 5\") == \"2\"\nassert solution(\"0 0 1000000000\") == \"1\""
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 5\") == \"2\"\nassert solution(\"-1 4 15\") == \"4\"\nassert solution(\"0 -1 5\") == \"-1\""
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1, 2, 5) == 2\nassert solution(-1, 4, 15) == 4\nassert solution(0, -1, 5) == -1"
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == '2'\nassert solution(-1) == '-1'\nassert solution(0) == '-1'\nassert solution(1) == '-1'\nassert solution(2) == '-1'\nassert solution(3) == '-1'\nassert solution(4) == '-1'\nassert solution(5) == '-1'\nassert solution(6) == '-1'\nassert solution(7) == '-1'\nassert solution(8) == '-1'\nassert solution(9) == '-1'\nassert solution(10) == '-1'\nassert solution(11) == '-1'\nassert solution(12) == '-1'\nassert solution(13) == '-1'\nassert solution(14) == '-1'\nassert solution(15) == '-1'\nassert solution(16) == '-1'\nassert solution(17) == '-1'\nassert solution(18) == '-1'\nassert solution(19) == '-1'\nassert solution(20) == '-1'\nassert solution(21) == '-1'\nassert solution(22) == '-1'\nassert solution(23) == '-1'\nassert solution(24) == '-1'\nassert solution(25) == '-1'\nassert solution(26) == '-1'\nassert solution(27) == '-1'\nassert solution(28) == '-1'\nassert solution(29) == '-1'\nassert solution(30) == '-1'\nassert solution(31) == '-1'\nassert solution(32) == '-1'\nassert solution(33) == '-1'\nassert solution(34) == '-1'\nassert solution(35) == '-1'\nassert solution(36) == '-1'\nassert solution(37) == '-1'\nassert solution(38) == '-1'\nassert solution(39) == '-1'\nassert solution(40) == '-1'\nassert solution(41) == '-1'\nassert solution(42) == '-1'\nassert solution(43) == '-1'\nassert solution(44) == '-1'\nassert solution(45) == '-1'\nassert solution(46) == '-1'\nassert solution(47) == '-1'\nassert solution(48) == '-1'\nassert solution(49) == '-1'\nassert solution(50) == '-1'\nassert solution(51) == '-1'\nassert solution(52) == '-1'\nassert solution(53) == '-1'\nassert solution(54) == '-1'\nassert solution(55) == '-1'\nassert solution(56) == '-1'\nassert solution(57) == '-1'\nassert solution(58) == '-1'\nassert solution(59) == '-1'\nassert solution(60) == '-1'\nassert solution(61) == '-1'\nassert solution(62) == '-1'\nassert solution(63) == '-1'\nassert solution(64) == '-1'\nassert solution(65) == '-1'\nassert solution(66) == '-1'\nassert solution(67) == '-1'\nassert solution(68) == '-1'\nassert solution(69) == '-1'\nassert solution(70) == '-1'\nassert solution(71) == '-1'\nassert solution(72) == '-1'\nassert solution(73) == '-1'\nassert solution(74) == '-1'\nassert solution(75) == '-1'\nassert solution(76) == '-1'\nassert solution(77) == '-1'\nassert solution(78) == '-1'\nassert solution(79) == '-1'\nassert solution(80) == '-1'\nassert solution(81) == '-1'\nassert solution(82) == '-1'\nassert solution(83) == '-1'\nassert solution(84) == '-1'\nassert solution(85) == '-1'\nassert solution(86) == '-1'\nassert solution(87) == '-1'\nassert solution(88) == '-1'\nassert solution(89) == '-1'\nassert solution(90) == '-1'\nassert solution(91) == '-1'\nassert solution(9"
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(f\"{1} {2} {5}\") == \"2\"\nassert solution(f\"-1 {4} {15}\") == \"4\"\nassert solution(f\"{0} {-1} {5}\") == \"-1\""
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 5\") == \"2\"\nassert solution(\"-1 4 15\") == \"4\"\nassert solution(\"0 -1 5\") == \"-1\""
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 5\") == \"2\\n\"\nassert solution(\"-1 4 15\") == \"4\\n\"\nassert solution(\"0 -1 5\") == \"-1\\n\""
    },
    {
        "number": 3732,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2 5\") == \"2\\n\"\nassert solution(\"-1 4 15\") == \"4\\n\"\nassert solution(\"0 -1 5\") == \"-1\\n\""
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('6 1\\n2 1 2 3 4 3\\n') == '2'\nassert solution('6 2\\n2 1 2 3 4 3\\n') == '0'\nassert solution('6 1\\n1 1 2 2 3 3\\n') == '2'"
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 1\\n2 1 2 3 4 3\") == \"2\\n\"\nassert solution(\"6 2\\n2 1 2 3 4 3\") == \"0\\n\"\nassert solution(\"6 1\\n1 1 2 2 3 3\") == \"2\\n\"\n\nfrom collections import Counter"
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(r'''\n    6 1\n    2 1 2 3 4 3\n''') == '2'\n\nassert solution(r'''\n    6 2\n    2 1 2 3 4 3\n''') == '0'\n\nassert solution(r'''\n    6 1\n    1 1 2 2 3 3\n''') == '2'"
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 1\\n2 1 2 3 4 3\\n\") == \"2\\n\"\nassert solution(\"6 2\\n2 1 2 3 4 3\\n\") == \"0\\n\"\nassert solution(\"6 1\\n1 1 2 2 3 3\\n\") == \"2\\n\""
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 1\\n2 1 2 3 4 3\\n\") == \"2\"\nassert solution(\"6 2\\n2 1 2 3 4 3\\n\") == \"0\"\nassert solution(\"6 1\\n1 1 2 2 3 3\\n\") == \"2\""
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 1\\n2 1 2 3 4 3\") == \"2\"\nassert solution(\"6 2\\n2 1 2 3 4 3\") == \"0\"\nassert solution(\"6 1\\n1 1 2 2 3 3\") == \"2\""
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(b'6 1\\n2 1 2 3 4 3\\n') == '2'\nassert solution(b'6 2\\n2 1 2 3 4 3\\n') == '0'\nassert solution(b'6 1\\n1 1 2 2 3 3\\n') == '2'"
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"2\"\n\nassert solution(stdin) == \"0\"\n\nassert solution(stdin) == \"2\""
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('6 1\\n2 1 2 3 4 3') == '2'\nassert solution('6 2\\n2 1 2 3 4 3') == '0'\nassert solution('6 1\\n1 1 2 2 3 3') == '2'"
    },
    {
        "number": 3733,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 1\\n2 1 2 3 4 3\") == \"2\"\nassert solution(\"6 2\\n2 1 2 3 4 3\") == \"0\"\nassert solution(\"6 1\\n1 1 2 2 3 3\") == \"2\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"tuesday\") == \"YES\"\nassert solution(\"sunday\") == \"YES\"\nassert solution(\"saturday\") == \"YES\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"tuesday\") == \"NO\"\nassert solution(\"wednesday\") == \"NO\"\nassert solution(\"thursday\") == \"NO\"\nassert solution(\"friday\") == \"NO\"\nassert solution(\"saturday\") == \"NO\"\nassert solution(\"sunday\") == \"NO\"\nassert solution(\"saturday\") == \"YES\"\nassert solution(\"tuesday\") == \"YES\"\nassert solution(\"monday\") == \"NO\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"tuesday\") == \"NO\"\nassert solution(\"sunday\") == \"YES\"\nassert solution(\"saturday\") == \"YES\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"tuesday\") == \"NO\"\nassert solution(\"wednesday\") == \"NO\"\nassert solution(\"thursday\") == \"NO\"\nassert solution(\"friday\") == \"NO\"\nassert solution(\"saturday\") == \"NO\"\nassert solution(\"sunday\") == \"NO\"\nassert solution(\"saturday\") == \"NO\"\n\nassert solution(\"monday\") == \"NO\"\nassert solution(\"tuesday\") == \"NO\"\nassert solution(\"wednesday\") == \"NO\"\nassert solution(\"thursday\") == \"NO\"\nassert solution(\"friday\") == \"NO\"\nassert solution(\"saturday\") == \"NO\"\nassert solution(\"sunday\") == \"NO\"\nassert solution(\"sunday\") == \"YES\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"sunday\") == \"YES\"\nassert solution(\"saturday\") == \"YES\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"tuesday\") == \"NO\"\nassert solution(\"sunday\") == \"NO\"\nassert solution(\"saturday\") == \"NO\"\nassert solution(\"monday\") == \"NO\"\nassert solution(\"tuesday\") == \"NO\"\nassert solution(\"sunday\") == \"NO\"\nassert solution(\"saturday\") == \"NO\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"tuesday\") == \"NO\"\nassert solution(\"sunday\") == \"NO\"\nassert solution(\"saturday\") == \"NO\"\nassert solution(\"wednesday\") == \"YES\"\nassert solution(\"thursday\") == \"YES\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"sunday\") == \"YES\"\nassert solution(\"saturday\") == \"YES\"\n\nassert solution(\"tuesday\") == \"YES\"\nassert solution(\"wednesday\") == \"YES\"\nassert solution(\"thursday\") == \"YES\"\n\nassert solution(\"friday\") == \"YES\"\nassert solution(\"saturday\") == \"YES\"\nassert solution(\"sunday\") == \"YES\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"tuesday\") == \"NO\"\nassert solution(\"wednesday\") == \"NO\"\nassert solution(\"thursday\") == \"NO\"\nassert solution(\"friday\") == \"NO\"\nassert solution(\"saturday\") == \"NO\"\nassert solution(\"sunday\") == \"NO\"\n\nassert solution(\"saturday\") == \"YES\"\nassert solution(\"tuesday\") == \"YES\"\nassert solution(\"monday\") == \"YES\""
    },
    {
        "number": 3734,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"monday\") == \"NO\", \"Solution 1 should return NO\"\nassert solution(\"tuesday\") == \"YES\", \"Solution 2 should return YES\"\nassert solution(\"sunday\") == \"NO\", \"Solution 3 should return NO\"\nassert solution(\"saturday\") == \"YES\", \"Solution 4 should return YES\""
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Output\\n17\"\nassert solution(input()) == \"Output\\n91\"\nassert solution(input()) == \"Output\\n17\""
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('35') == '17'\nassert solution('10000000000') == '91'"
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('35') == '17'\nassert solution('10000000000') == '91'"
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(35) == \"17\"\nassert solution(10000000000) == \"91\""
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(35) == \"17\"\nassert solution(10000000000) == \"91\""
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"Output\", \"The output is not correct.\""
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"35\") == \"17\"\nassert solution(\"10000000000\") == \"91\""
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(35) == \"17\"\nassert solution(10000000000) == \"91\""
    },
    {
        "number": 3735,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(17) == 17\nassert solution(5000000001) == 91\nassert solution(10000000000) == 91"
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('AHA') == 'YES'\nassert solution('Z') == 'NO'\nassert solution('XO') == 'NO'"
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\""
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('AHA') == 'YES'\nassert solution('Z') == 'NO'\nassert solution('XO') == 'NO'"
    },
    {
        "number": 3736,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"AHA\") == \"YES\", \"Test 1\"\nassert solution(\"Z\") == \"NO\", \"Test 2\"\nassert solution(\"XO\") == \"NO\", \"Test 3\""
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1 5\\n\") == \"0\\n\"\nassert solution(\"3\\n1 2 5\\n\") == \"1\\n\""
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 5\") == 0\nassert solution(\"3 1 2 5\") == 1\n"
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1 5\") == \"0\\n\"\nassert solution(\"3\\n1 2 5\") == \"1\\n\""
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"0\\n\", \"Test Case 1\"\nassert solution(stdin) == \"1\\n\", \"Test Case 2\"\nassert solution(stdin) == \"1\\n\", \"Test Case 3\"\n\nfrom typing import List"
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2\\n1 5\\n') == '0\\n'\nassert solution('3\\n1 2 5\\n') == '1\\n'"
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1 5\\n\") == \"0\"\nassert solution(\"3\\n1 2 5\\n\") == \"1\""
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 5\\n\") == \"0\\n\"\nassert solution(\"3\\n1 2 5\\n\") == \"1\\n\""
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1 5\\n\") == 0\nassert solution(\"3\\n1 2 5\\n\") == 1"
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1 5\\n\") == 0\nassert solution(\"3\\n1 2 5\\n\") == 1"
    },
    {
        "number": 3737,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1 5\\n\") == \"0\\n\"\nassert solution(\"3\\n1 2 5\\n\") == \"1\\n\""
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 2\\nRU') == 'Yes', 'Test 1'\nassert solution('1 2\\nRU') == 'No', 'Test 2'\nassert solution('-1 1000000000\\nLRRLU') == 'Yes', 'Test 3'\nassert solution('0 0\\nD') == 'Yes', 'Test 4'\n\nprint(\"All tests passed.\")"
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\nRU\") == \"Yes\", \"Case 1\"\nassert solution(\"1 2\\nRU\") == \"No\", \"Case 2\"\nassert solution(\"-1 1000000000\\nLRRLU\") == \"Yes\", \"Case 3\"\nassert solution(\"0 0\\nD\") == \"Yes\", \"Case 4\""
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\nRU\") == \"Yes\"\nassert solution(\"1 2\\nRU\") == \"No\"\nassert solution(\"-1 1000000000\\nLRRLU\") == \"Yes\"\nassert solution(\"0 0\\nD\") == \"Yes\""
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\nRU\") == \"Yes\\n\"\nassert solution(\"1 2\\nRU\") == \"No\\n\"\nassert solution(\"-1 1000000000\\nLRRLU\") == \"Yes\\n\"\nassert solution(\"0 0\\nD\") == \"Yes\\n\""
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\nRU\") == \"Yes\\n\", \"Test 1\"\nassert solution(\"1 2\\nRU\") == \"No\\n\", \"Test 2\"\nassert solution(\"-1 1000000000\\nLRRLU\") == \"Yes\\n\", \"Test 3\"\nassert solution(\"0 0\\nD\") == \"Yes\\n\", \"Test 4\""
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\nRU\") == \"Yes\"\nassert solution(\"1 2\\nRU\") == \"No\"\nassert solution(\"-1 1000000000\\nLRRLU\") == \"Yes\"\nassert solution(\"0 0\\nD\") == \"Yes\""
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\nRU\\n\") == \"Yes\\n\"\nassert solution(\"1 2\\nRU\\n\") == \"No\\n\"\nassert solution(\"-1 1000000000\\nLRRLU\\n\") == \"Yes\\n\"\nassert solution(\"0 0\\nD\\n\") == \"Yes\\n\""
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 2\\nRU') == 'Yes', 'Expected \"Yes\" for input \"2 2\\nRU\"'\nassert solution('1 2\\nRU') == 'No', 'Expected \"No\" for input \"1 2\\nRU\"'\nassert solution('-1 1000000000\\nLRRLU') == 'Yes', 'Expected \"Yes\" for input \"-1 1000000000\\nLRRLU\"'\nassert solution('0 0\\nD') == 'Yes', 'Expected \"Yes\" for input \"0 0\\nD\"'\n\nprint('All test cases passed!')"
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\nRU\") == \"Yes\\n\", \"Test 1 Failed\"\nassert solution(\"1 2\\nRU\") == \"No\\n\", \"Test 2 Failed\"\nassert solution(\"-1 1000000000\\nLRRLU\") == \"Yes\\n\", \"Test 3 Failed\"\nassert solution(\"0 0\\nD\") == \"Yes\\n\", \"Test 4 Failed\""
    },
    {
        "number": 3738,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 2\\nRU') == 'Yes'\nassert solution('1 2\\nRU') == 'No'\nassert solution('-1 1000000000\\nLRRLU') == 'Yes'\nassert solution('0 0\\nD') == 'Yes'"
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '1'\nassert solution(input()) == '0'\nassert solution(input()) == '1'\nassert solution(input()) == '1'"
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"0\"\n\nassert solution(\"10 3 7\") == \"1\"\n\nassert solution(\"10   3   7\") == \"1\"\n\nassert solution(\"314\") == \"0\"\n\nassert solution(\"22 19 3\") == \"1\"\n\nassert solution(\"   60\\n29\\n31\\n358\") == \"1\"\n\nassert solution(\"50\\n12\\n27\\n36\\n60\\n123\\n456\\n789\\n\") == \"1\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10 3 7\") == \"1\"\nassert solution(\"10   3   7\") == \"1\"\nassert solution(\"314\") == \"0\"\nassert solution(\"22 19 3\") == \"1\"\nassert solution(\"   60\\n29\\n\\n31\\n\\n\\n35\\n\") == \"1\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 3 7\") == \"1\"\nassert solution(\"10   3   7\") == \"1\"\nassert solution(\"314\") == \"0\"\nassert solution(\"22 19 3\") == \"1\"\nassert solution(\"   60\\n29\\n   31\\n    \\n    \\n    \\n    \\n\") == \"1\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 3 7\") == \"1\\n\"\nassert solution(\"10   3   7\") == \"1\\n\"\nassert solution(\"314\") == \"0\\n\"\nassert solution(\"22 19 3\") == \"1\\n\"\nassert solution(\"   60\\n 29\\n    31\\n     \\n     \\n     \") == \"1\\n\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 3 7\") == \"1\"\nassert solution(\"10   3   7\") == \"1\"\nassert solution(\"314\") == \"0\"\nassert solution(\"22 19 3\") == \"1\"\nassert solution(\" 60 \\n29\\n31\\n358\\n\") == \"1\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 3 7\") == \"1\"\nassert solution(\"10   3   7\") == \"1\"\nassert solution(\"314\") == \"0\"\nassert solution(\"22 19 3\") == \"1\"\nassert solution(\"60\\n29\\n\\n31\\n\\n\\n\\n\") == \"1\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 3 7\") == \"1\", \"Output should be 1\"\nassert solution(\"10   3   7\") == \"1\", \"Output should be 1\"\nassert solution(\"314\") == \"0\", \"Output should be 0\"\nassert solution(\"22 19 3\") == \"1\", \"Output should be 1\"\nassert solution(\"   60\\n29\\n31\\n\\n\\n\\n\\n\") == \"1\", \"Output should be 1\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 3 7\") == \"1\"\nassert solution(\"10   3   7\") == \"1\"\nassert solution(\"314\") == \"0\"\nassert solution(\"22 19 3\") == \"1\"\nassert solution(\"   60\\n29\\n\\n31\\n\\n\\n\") == \"1\""
    },
    {
        "number": 3739,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '1', \"The first test case is incorrect.\"\nassert solution(\"10 3 7\") == '1', \"The second test case is incorrect.\"\nassert solution(\"10   3   7\") == '1', \"The third test case is incorrect.\"\nassert solution(\"314\") == '0', \"The fourth test case is incorrect.\"\nassert solution(\"22 19 3\") == '1', \"The fifth test case is incorrect.\""
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n\") == \"9\"\nassert solution(\"2\\n\") == \"18\"\nassert solution(\"3\\n\") == \"27\"\nassert solution(\"4\\n\") == \"36\"\nassert solution(\"5\\n\") == \"45\"\nassert solution(\"6\\n\") == \"54\"\nassert solution(\"7\\n\") == \"63\"\nassert solution(\"8\\n\") == \"72\"\nassert solution(\"9\\n\") == \"81\"\n"
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"9\\n\", \"Incorrect output\""
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"9\""
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"9\\n\"\n"
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"9\", \"The output should be 9, not {}.\".format(solution(\"1\"))\nassert solution(\"99\") == \"9\", \"The output should be 9, not {}.\".format(solution(\"99\"))\nassert solution(\"10\") == \"8\", \"The output should be 8, not {}.\".format(solution(\"10\"))\nassert solution(\"999\") == \"8\", \"The output should be 8, not {}.\".format(solution(\"999\"))"
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == \"9\"\nassert solution(2) == \"18\"\nassert solution(3) == \"27\"\nassert solution(4) == \"36\"\nassert solution(5) == \"45\"\nassert solution(6) == \"54\"\nassert solution(7) == \"63\"\nassert solution(8) == \"72\"\nassert solution(9) == \"81\"\nassert solution(10) == \"90\"\nassert solution(11) == \"99\"\nassert solution(12) == \"108\"\nassert solution(13) == \"117\"\nassert solution(14) == \"126\"\nassert solution(15) == \"135\"\nassert solution(16) == \"144\"\nassert solution(17) == \"153\"\nassert solution(18) == \"162\"\nassert solution(19) == \"171\"\nassert solution(20) == \"180\"\nassert solution(21) == \"189\"\nassert solution(22) == \"198\"\nassert solution(23) == \"207\"\nassert solution(24) == \"216\"\nassert solution(25) == \"225\"\nassert solution(26) == \"234\"\nassert solution(27) == \"243\"\nassert solution(28) == \"252\"\nassert solution(29) == \"261\"\nassert solution(30) == \"270\"\nassert solution(31) == \"279\"\nassert solution(32) == \"288\"\nassert solution(33) == \"297\"\nassert solution(34) == \"306\"\nassert solution(35) == \"315\"\nassert solution(36) == \"324\"\nassert solution(37) == \"333\"\nassert solution(38) == \"342\"\nassert solution(39) == \"351\"\nassert solution(40) == \"360\"\nassert solution(41) == \"369\"\nassert solution(42) == \"378\"\nassert solution(43) == \"387\"\nassert solution(44) == \"396\"\nassert solution(45) == \"405\"\nassert solution(46) == \"414\"\nassert solution(47) == \"423\"\nassert solution(48) == \"432\"\nassert solution(49) == \"441\"\nassert solution(50) == \"450\"\nassert solution(51) == \"459\"\nassert solution(52) == \"468\"\nassert solution(53) == \"477\"\nassert solution(54) == \"486\"\nassert solution(55) == \"495\"\nassert solution(56) == \"504\"\nassert solution(57) == \"513\"\nassert solution(58) == \"522\"\nassert solution(59) == \"531\"\nassert solution(60) == \"540\"\nassert solution(61) == \"549\"\nassert solution(62) == \"558\"\nassert solution(63) == \"567\"\nassert solution(64) == \"576\"\nassert solution(65) == \"585\"\nassert solution(66) == \"594\"\nassert solution(67) == \"603\"\nassert solution(68) == \"612\"\nassert solution(69) == \"621\"\nassert solution(70) == \"630\"\nassert solution(71) == \"639\"\nassert solution(72) == \"648\"\nassert solution(73) == \"657\"\nassert solution(74) == \"666\"\nassert solution(75) == \"675\"\nassert solution(76) == \"684\"\nassert solution(77) == \"693\"\nassert solution(78) == \"702\"\nassert solution(79) == \"711\"\nassert solution(80) == \"720\"\nassert solution(81) =="
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"9\""
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '9\\n'\n"
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"9\", \"Incorrect Output\""
    },
    {
        "number": 3740,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '9'\n"
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Input\\n4\\n3 6 28 9\\n\") == \"4\\n\"\nassert solution(\"Input\\n5\\n5 12 9 16 48\\n\") == \"3\\n\"\nassert solution(\"Input\\n4\\n1 2 4 8\\n\") == \"-1\\n\""
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Output\" # correct solution\nassert solution(input()) == \"-1\" # incorrect solution\nprint(\"All tests passed.\")"
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == 'Output', \"Invalid input\""
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4\\n3 6 28 9\\n5\\n5 12 9 16 48\\n4\\n1 2 4 8\\n-1') == '4\\n4\\n3\\n-1'"
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n3 6 28 9\") == \"4\\n4\"\nassert solution(\"5\\n5 12 9 16 48\") == \"3\\n-1\"\nassert solution(\"4\\n1 2 4 8\") == \"-1\""
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"4\\n\"\nassert solution() == \"3\\n\"\nassert solution() == \"-1\\n\""
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n3 6 28 9\") == \"4\"\nassert solution(\"5\\n5 12 9 16 48\") == \"3\"\nassert solution(\"4\\n1 2 4 8\") == \"-1\"\n\nassert solution(\"4\\n3 6 28 9\\n4 6 28 10\") == \"4\"\nassert solution(\"5\\n5 12 9 16 48\\n10 12 9 16 48\") == \"3\"\nassert solution(\"4\\n1 2 4 8\\n10 12 9 16 48\") == \"-1\""
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(4) == 4\nassert solution(5) == 3\nassert solution(4) == -1"
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n3 6 28 9\") == 4\nassert solution(\"5\\n5 12 9 16 48\") == 3\nassert solution(\"4\\n1 2 4 8\") == -1"
    },
    {
        "number": 3741,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n3 6 28 9') == '4\\n4'\nassert solution('5\\n5 12 9 16 48') == '3\\n3'\nassert solution('4\\n1 2 4 8') == '-1'\n\nprint('All tests passed.')"
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n0 5 0 2 3\\n').strip() == '2'\nassert solution('7\\n1 0 0 5 0 0 2\\n').strip() == '1'"
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n0 5 0 2 3\") == \"2\"\nassert solution(\"7\\n1 0 0 5 0 0 2\") == \"1\""
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n0 5 0 2 3\\n\") == \"2\"\nassert solution(\"7\\n1 0 0 5 0 0 2\\n\") == \"1\"\n"
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"2\"\nassert solution(7) == \"1\"\nassert solution(5) == \"2\""
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Test failed for example {input()} and output {output()}\""
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 2\nassert solution(7) == 1"
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(example1) == \"2\"\nassert solution(example2) == \"1\"\n\nfrom typing import List\n"
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    5\n    0 5 0 2 3\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    7\n    1 0 0 5 0 0 2\n    \"\"\"\n) == \"1\""
    },
    {
        "number": 3742,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '2'\n\nassert solution(stdin) == '1'"
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\") == 2\nassert solution(\"5\") == 5"
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Solution({input()})!= {expected_output}\""
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"5\""
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(4) == 2\nassert solution(5) == 5"
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(5) == 5, \"Output 5\""
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(4) == 2\nassert solution(5) == 5\n"
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"5\""
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\") == 2\nassert solution(\"5\") == 5"
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(4) == 2\nassert solution(5) == 5"
    },
    {
        "number": 3743,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"5\""
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 2 2\\n1 3 4 5 2\\n5 3 2 1 4\\n\") == \"18\\n3 4 \\n1 5 \\n\"\nassert solution(\"4 2 2\\n10 8 8 3\\n10 7 9 4\\n\") == \"31\\n1 2 \\n3 4 \\n\"\nassert solution(\"5 3 1\\n5 2 5 1 7\\n6 3 1 6 3\\n\") == \"23\\n1 3 5 \\n4\\n\""
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 2 2\\n1 3 4 5 2\\n5 3 2 1 4\") == \"18\\n3 4\\n1 5\\n\"\nassert solution(\"4 2 2\\n10 8 8 3\\n10 7 9 4\") == \"31\\n1 2\\n3 4\\n\"\nassert solution(\"5 3 1\\n5 2 5 1 7\\n6 3 1 6 3\") == \"23\\n1 3 5\\n4\""
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, f\"Your solution is incorrect. Please check your code and try again.\""
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 2 2\\n1 3 4 5 2\\n5 3 2 1 4') == '18\\n3 4 \\n1 5 \\n'\nassert solution('4 2 2\\n10 8 8 3\\n10 7 9 4') == '31\\n1 2 \\n3 4 \\n'\nassert solution('5 3 1\\n5 2 5 1 7\\n6 3 1 6 3') == '23\\n1 3 5 \\n4'"
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 2 2\\n1 3 4 5 2\\n5 3 2 1 4\\n\") == \"18\\n3 4 \\n1 5 \\n\"\nassert solution(\"4 2 2\\n10 8 8 3\\n10 7 9 4\\n\") == \"31\\n1 2 \\n3 4 \\n\"\nassert solution(\"5 3 1\\n5 2 5 1 7\\n6 3 1 6 3\\n\") == \"23\\n1 3 5 \\n4\\n\"\n"
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 2 2\\n1 3 4 5 2\\n5 3 2 1 4\\n\\n4 2 2\\n10 8 8 3\\n10 7 9 4\\n\\n5 3 1\\n5 2 5 1 7\\n6 3 1 6 3\\n') == '18\\n3 4 \\n1 5 \\n'\nassert solution('4 2 2\\n10 8 8 3\\n10 7 9 4\\n\\n5 3 1\\n5 2 5 1 7\\n6 3 1 6 3\\n') == '31\\n1 2 \\n3 4 \\n'\nassert solution('5 3 1\\n5 2 5 1 7\\n6 3 1 6 3\\n') == '23\\n1 3 5 \\n4\\n'"
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"3 4\", \"Expected '3 4' but got '{}'.\".format(solution())"
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2 2\\n1 3 4 5 2\\n5 3 2 1 4\\n\") == \"18\\n3 4 \\n1 5 \\n\"\n\nassert solution(\"4 2 2\\n10 8 8 3\\n10 7 9 4\\n\") == \"31\\n1 2 \\n3 4 \\n\"\n\nassert solution(\"5 3 1\\n5 2 5 1 7\\n6 3 1 6 3\\n\") == \"23\\n1 3 5 \\n4\\n\""
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '31\\n1 2 \\n3 4'\nassert solution(stdin) == '23\\n1 3 5 \\n4'"
    },
    {
        "number": 3744,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n5 2 2\n1 3 4 5 2\n5 3 2 1 4\n''') == '18\\n3 4\\n1 5\\n'\n\nassert solution('''\n4 2 2\n10 8 8 3\n10 7 9 4\n''') == '31\\n1 2\\n3 4\\n'\n\nassert solution('''\n5 3 1\n5 2 5 1 7\n6 3 1 6 3\n''') == '23\\n1 3 5\\n4\\n'"
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"Input\\n2 1\\n1 2\\n\\nInput\\n4 3\\n1 2\\n1 3\\n1 4\\n\\nOutput\\nYes\\naa\\n\\nOutput\\nNo\\n\") == \"Yes\\naa\\n\\nNo\\n\""
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''2 1\n1 2''') == 'Yes'\nassert solution('''4 3\n1 2\n1 3\n1 4''') == 'No'"
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 2\\n1 3\\n1 4') == 'Yes'\nassert solution('4 3\\n1 2\\n1 3\\n1 4') == 'No'"
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"Yes\", \"Incorrect solution\""
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1\\n1 2\") == \"Yes\\naa\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\") == \"No\""
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1\\n1 2\\n\") == \"Yes\\na\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\\n\") == \"No\"\nassert solution(\"5 5\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n1 11\\n1 12\\n1 13\\n1 14\\n1 15\\n1 16\\n1 17\\n1 18\\n1 19\\n1 20\\n\") == \"No\""
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1\\n1 2\\n\") == \"Yes\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\\n\") == \"No\"\nassert solution(\"2 3\\n1 2\\n1 3\\n\") == \"Yes\"\nassert solution(\"2 1\\n1 3\\n\") == \"No\"\nassert solution(\"3 2\\n1 2\\n1 3\\n\") == \"No\"\nassert solution(\"5 4\\n1 2\\n1 3\\n1 4\\n\") == \"No\"\nassert solution(\"2 2\\n1 2\\n1 3\\n\") == \"No\"\n"
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1\\n1 2\") == \"Yes\\naa\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\") == \"No\"\n"
    },
    {
        "number": 3745,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 'No' # Add your solution here\nassert solution == 'aa' # Add your solution here"
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 1 1\\n1 0 1\\n1 1 0\\n3\\n\") == 7\nassert solution(\"0 2 2\\n1 0 100\\n1 2 0\\n3\\n\") == 19\nassert solution(\"0 2 1\\n1 0 100\\n1 2 0\\n5\\n\") == 87"
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin=input()) == output, f\"Test {test_case} failed: The output is incorrect. Expected: {output}, Received: {solution(stdin=input())}\""
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('0 1 1\\n1 0 1\\n1 1 0\\n3\\n') == 7\nassert solution('0 2 2\\n1 0 100\\n1 2 0\\n3\\n') == 19\nassert solution('0 2 1\\n1 0 100\\n1 2 0\\n5\\n') == 87"
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 1 1\\n1 0 1\\n1 1 0\\n3\\n\") == \"7\\n\"\nassert solution(\"0 2 2\\n1 0 100\\n1 2 0\\n3\\n\") == \"19\\n\"\nassert solution(\"0 2 1\\n1 0 100\\n1 2 0\\n5\\n\") == \"87\\n\""
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"7\"\nassert solution() == \"19\"\nassert solution() == \"87\""
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('0 1 1\\n1 0 1\\n1 1 0\\n3') == 7\nassert solution('0 2 2\\n1 0 100\\n1 2 0\\n3') == 19\nassert solution('0 2 1\\n1 0 100\\n1 2 0\\n5') == 87"
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(None) == 'Not enough input'"
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(0, 1, 1) == 7\nassert solution(0, 2, 2) == 19\nassert solution(0, 2, 1) == 87"
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(0, 1, 1) == 7\nassert solution(0, 2, 2) == 19\nassert solution(0, 2, 1) == 87"
    },
    {
        "number": 3746,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 1 1\\n1 0 1\\n1 1 0\\n3\") == \"7\\n\"\nassert solution(\"0 2 2\\n1 0 100\\n1 2 0\\n3\") == \"19\\n\"\nassert solution(\"0 2 1\\n1 0 100\\n1 2 0\\n5\") == \"87\\n\"\n"
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Bulbbasaur\") == \"1\"\nassert solution(\"F\") == \"0\"\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == \"2\""
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Bulbbasaur\") == 1\nassert solution(\"F\") == 0\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == 2"
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Bulbbasaur\") == \"1\"\nassert solution(\"F\") == \"0\"\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == \"2\"\n"
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Bulbbasaur\") == \"1\"\nassert solution(\"F\") == \"0\"\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == \"2\""
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Bulbbasaur\") == \"1\", \"The output of solution should be 1\"\nassert solution(\"F\") == \"0\", \"The output of solution should be 0\"\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == \"2\", \"The output of solution should be 2\""
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('Bulbbasaur') == 1\nassert solution('F') == 0\nassert solution('aBddulbasaurrgndgbualdBdsagaurrgndbb') == 2"
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Bulbbasaur\") == \"1\"\nassert solution(\"F\") == \"0\"\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == \"2\""
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('Bulbbasaur') == '1', \"Invalid solution\"\nassert solution('F') == '0', \"Invalid solution\"\nassert solution('aBddulbasaurrgndgbualdBdsagaurrgndbb') == '2', \"Invalid solution\""
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('Bulbbasaur') == '1'\nassert solution('F') == '0'\nassert solution('aBddulbasaurrgndgbualdBdsagaurrgndbb') == '2'"
    },
    {
        "number": 3747,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"Bulbbasaur\") == \"1\"\nassert solution(\"F\") == \"0\"\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == \"2\"\n"
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\narc\\nrac\") == \"YES\"\nassert solution(\"2 3\\nbac\") == \"NO\""
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\narc\\nrac\") == \"YES\"\nassert solution(\"4 5\\nsni\\nfa\") == \"NO\""
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"YES\""
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\narc\\nrac\\n\") == \"YES\"\nassert solution(\"3 2\\nfoo\\nbar\\n\") == \"YES\"\nassert solution(\"2 3\\nabc\\nxyz\\n\") == \"NO\"\nassert solution(\"1 1\\n\\n\") == \"NO\""
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\narc\\nrac\") == \"YES\"\nassert solution(\"2 3\\nabc\\nbcd\") == \"NO\"\nassert solution(\"1 1\\nabc\") == \"YES\"\nassert solution(\"1 1\\nxyz\") == \"NO\"\nassert solution(\"2 2\\nabc\\ndef\") == \"YES\""
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 3\\narc\\nrac') == 'YES'\nassert solution('2 3\\nabcd') == 'NO'\nassert solution('3 2\\nrac\\nabc') == 'YES'\nassert solution('5 5\\n123456789') == 'YES'\nassert solution('7 7\\n0123456789') == 'NO'\nassert solution('7 6\\n0123456789') == 'YES'"
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\narc\\nrac\\n\") == \"YES\"\nassert solution(\"1 1\\nabc\\ndef\\nghi\\n\") == \"NO\"\n"
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\narc\\nrac\") == \"YES\"\nassert solution(\"2 3\\nabc\\nxyz\") == \"NO\"\nassert solution(\"3 4\\nabc\\nxyz\") == \"NO\"\nassert solution(\"4 2\\nabc\\nxyz\") == \"YES\""
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\narc\\nrac\\n\") == \"YES\"\nassert solution(\"1 1\\na\\n\") == \"NO\""
    },
    {
        "number": 3748,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\narc\\nrac\\n\") == \"YES\"\nassert solution(\"2 3\\nbad\\nbad\\n\") == \"NO\"\nassert solution(\"2 3\\nabcd\\n\") == \"NO\"\nassert solution(\"2 3\\n123456789\\n\") == \"YES\"\nassert solution(\"2 3\\n1234567890\\n\") == \"YES\"\nassert solution(\"2 3\\n12345678901\\n\") == \"NO\"\n"
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\nassert solution(input()) =="
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"4\", \"The output should be 4.\""
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\"\nassert solution(\"4 100\\n0100\\n1111\") == \"3\"\nassert solution(\"5 101\\n1111\\n1111\") == \"2\"\nassert solution(\"6 010\\n1111\\n1010\") == \"4\"\nassert solution(\"7 101\\n1111\\n1001\") == \"1\"\nassert solution(\"8 110\\n1111\\n1011\") == \"5\"\nassert solution(\"9 110\\n1111\\n1000\") == \"0\""
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\""
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '4\\n'\nassert solution(input()) == '4\\n'\nassert solution(input()) == '4\\n'\nassert solution(input()) == '4\\n'\nassert solution(input()) == '4\\n'"
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\"\nassert solution(\"3 111\\n1111\\n10111\\n10010\") == \"4\"\nassert solution(\"3 1"
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\\n\") == \"4\\n\", \"Incorrect output. Expected '4\\n' but got: {}.\".format(solution(\"3 111\\n1111\\n10111\\n10010\\n\"))\n"
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\\n\") == \"4\\n\"\nassert solution
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"4\\n\"\nassert solution(input()) == \"4\\n\""
    },
    {
        "number": 3749,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\\n\") == \"4\\n\"\nassert solution(\"2 111\\n1111\\n10111\\n10010\\n\") == \"2\\n\"\nassert solution(\"2 111\\n1111\\n10111\\n10010\\n2 111\\n1111\\n10111\\n10010\\n\") == \"2\\n\""
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"11 11 5\") == \"1\\n\"\nassert solution(\"11 2 3\") == \"-1\\n\""
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"11 11 5\") == \"1\\n\"\nassert solution(\"11 2 3\") == \"-1\\n\""
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 2 3\") == \"-1\"\n\nfrom typing import List"
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"11 11 5\") == \"1\\n\"\nassert solution(\"11 2 3\") == \"-1\\n\""
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 2 3\") == \"-1\""
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('11 11 5') == '1\\n'\nassert solution('11 2 3') == '-1\\n'"
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"1\\n\"\nassert solution(stdin) == \"1\\n\"\nassert solution(stdin) == \"-1\\n\""
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('11 11 5') == '1\\n'\nassert solution('11 2 3') == '-1\\n'"
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('11 11 5') == '1\\n'\nassert solution('11 2 3') == '-1\\n'"
    },
    {
        "number": 3750,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"11 11 5\") == \"1\\n\"\nassert solution(\"11 2 3\") == \"-1\\n\""
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\"\n"
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('abacaba') == 'YES'\nassert solution('jinotega') == 'NO'"
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\"\n"
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('abacaba') == 'YES'\nassert solution('jinotega') == 'NO'"
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3751,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3, 2, 6) == 6.5\nassert solution(4, 2, 20) == 20.0"
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2 6\") == \"6.5\"\nassert solution(\"4 2 20\") == \"20.0\""
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 2 6') == '6.5', 'Invalid output'\nassert solution('4 2 20') == '20.0', 'Invalid output'"
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2 6\") == \"6.5\"\nassert solution(\"4 2 20\") == \"20.0\""
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2 6\") == \"6.5\"\nassert solution(\"4 2 20\") == \"20.0\""
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 2 6') == '6.5'\nassert solution('4 2 20') == '20.0'"
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 2, 6) == 6.5\nassert solution(4, 2, 20) == 20.0"
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2 6\") == \"6.5\"\nassert solution(\"4 2 20\") == \"20.0\""
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2 6\") == \"6.5\"\nassert solution(\"4 2 20\") == \"20.0\""
    },
    {
        "number": 3752,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == '6.5'\nassert solution(input()) == '20.0'\n\nimport math"
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n2 2\n..\n..\n''') == '2'\nassert solution('''\n4 4\n....\n"
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\n..\\n..\") == \"2\"\nassert solution(\"4 4\\n....\\n#.#.\\n....\\n.#..\") == \"1\"\nassert solution(\"3 4\\n....\\n.##.\\n....\\n\") == \"2\""
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"2\""
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\n..\\n..\\n\\n4 4\\n....\\n#.#.\\n....\\n.#..\\n\\n3 4\\n....\\n.##.\\n....\\n\") == \"2\\n\"\nassert solution(\"4 4\\n....\\n#.#.\\n....\\n.#..\\n\\n3 4\\n....\\n.##.\\n....\\n\") == \"1\\n\"\nassert solution(\"3 4\\n....\\n.##.\\n....\\n\") == \"2\\n\""
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\n..\\n..\\n\") == \"2\"\nassert solution(\"4 4\\n....\\n#.#.\\n....\\n.#..\\n\") == \"1\"\nassert solution(\"3 4\\n....\\n.##.\\n....\\n\") == \"2\"\nassert solution(\"1 1\\n....\\n...\\n....\\n\") == \"2\""
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\n..\\n..\\n\\n4 4\\n....\\n#.#.\\n....\\n.#..\") == \"2\\n\"\nassert solution(\"4 4\\n....\\n.##.\\n....\\n\\n3 4\\n....\\n.##.\\n....\") == \"1\\n\"\nassert solution(\"3 4\\n....\\n.##.\\n....\") == \"2\\n\""
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n..\\n..\\n\") == \"2\"\nassert solution(\"4 4\\n....\\n#.#.\\n....\\n.#..\\n\") == \"1\"\nassert solution(\"3 4\\n....\\n.##.\\n....\\n\") == \"2\"\nassert solution(\"5 5\\n..#.\\n#...\\n....\\n\") == \"0\""
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\n..\\n..\\n\\n4 4\\n....\\n#.#.\\n....\\n.#..\\n\") == \"2\"\nassert solution(\"4 4\\n....\\n.##.\\n....\\n\\n3 4\\n....\\n.##.\\n....\") == \"1\"\nassert solution(\"3 4\\n....\\n.##.\\n....\\n\") == \"2\""
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output"
    },
    {
        "number": 3753,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n..\\n..\\n\") == \"2\"\nassert solution(\"4 4\\n....\\n#.#.\\n....\\n.#..\\n\") == \"1\"\nassert solution(\"3 4\\n....\\n.##.\\n....\\n\") == \"2\""
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 1 3\") == \"6\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"1\\n2\") == \"2\"\nassert solution(\"1\\n3\") == \"3\"\nassert solution(\"2\\n1 1 3\") == \"6\"\nassert solution(\"2\\n1 2 3\") == \"8\"\nassert solution(\"2\\n2 3\") == \"10\"\nassert solution(\"3\\n3 2\") == \"10\"\nassert solution(\"3\\n3 3\") == \"12\"\nassert solution(\"3\\n1\") == \"6\"\nassert solution(\"3\\n2\") == \"8\"\nassert solution(\"3\\n3\") == \"10\"\nassert solution(\"4\\n1 1 3\") == \"11\"\nassert solution(\"4\\n1 2 3\") == \"14\"\nassert solution(\"4\\n2 3\") == \"18\"\nassert solution(\"4\\n3 2\") == \"24\"\nassert solution(\"4\\n3 3\") == \"28\"\nassert solution(\"4\\n1\") == \"11\"\nassert solution(\"4\\n2\") == \"14\"\nassert solution(\"4\\n3\") == \"18\"\nassert solution(\"5\\n1 1 3\") == \"15\"\nassert solution(\"5\\n1 2 3\") == \"18\"\nassert solution(\"5\\n2 3\") == \"22\"\nassert solution(\"5\\n3 2\") == \"26\"\nassert solution(\"5\\n3 3\") == \"30\"\nassert solution(\"5\\n1\") == \"15\"\nassert solution(\"5\\n2\") == \"18\"\nassert solution(\"5\\n3\") == \"22\"\nassert solution(\"6\\n1 1 3\") == \"21\"\nassert solution(\"6\\n1 2 3\") == \"24\"\nassert solution(\"6\\n2 3\") == \"28\"\nassert solution(\"6\\n3 2\") == \"32\"\nassert solution(\"6\\n3 3\") == \"36\"\nassert solution(\"6\\n1\") == \"21\"\nassert solution(\"6\\n2\") == \"24\"\nassert solution(\"6\\n3\") == \"28\"\nassert solution(\"7\\n1 1 3\") == \"25\"\nassert solution(\"7\\n1 2 3\") == \"28\"\nassert solution(\"7\\n2 3\") == \"32\"\nassert solution(\"7\\n3 2\") == \"36\"\nassert solution(\"7\\n3 3\") == \"40\"\nassert solution(\"7\\n1\") == \"25\"\nassert solution(\"7\\n2\") == \"28\"\nassert solution(\"7\\n3\") == \"32\"\nassert solution(\"8\\n1 1 3\") == \"29\"\nassert solution(\"8\\n1 2 3\") == \"32\"\nassert solution(\"8\\n2 3\") == \"36\"\nassert solution(\"8\\n3 2\") == \"40\"\nassert solution(\"8\\n3 3\") == \"44\"\nassert solution(\"8\\n1\") == \"29\"\nassert solution(\"8\\n2\") == \"32\"\nassert solution(\"8\\n3\") == \"36\"\nassert solution(\"9\\n1 1 3\") == \"33\"\nassert solution(\"9\\n1 2 3\") == \"36\"\nassert solution(\"9\\n2 3\") == \"40\"\nassert solution(\"9\\n3 2\") == \"44\"\nassert solution(\"9\\n3 3\") == \"48\"\nassert solution(\"9\\n1\") == \"33\"\nassert solution(\"9\\n2\") == \"36\"\nassert solution(\"9\\n3\") == \"40\"\nassert solution(\"10\\n1 1 3\") == \"37\"\nassert solution(\"10\\n1 2 3\") == \"40\"\nassert solution(\"10\\n2 3\") == \"44\"\nassert solution(\"10\\n3 2\") == \"48\"\nassert solution(\"10\\n3 3\") == \"52\"\nassert solution(\""
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '6\\n'"
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 1 3\") == \"6\\n\""
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 1 3\") == \"6\\n\"\n"
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 1 3\") == \"6\"\nprint(\"All test cases pass!\")"
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 1 3\") == \"6\\n\", \"Takahashi is not complete.\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"6\\n\""
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"6\", \"Test failed\""
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 1 3\") == \"6\\n\"\nassert solution(\"4\\n1 2 3 4\") == \"6\\n\"\nassert solution(\"2\\n1 2 3 4\") == \"0\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"15\\n\"\nassert solution(\"1\\n1 1\") == \"1\\n\"\n"
    },
    {
        "number": 3754,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 1 3\") == \"6\\n\""
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 4 3 7 5\") == \"11\\n3\\n1\\n4\\n2\"\nassert solution(\"2\\n1 2 3\") == \"1\\n2\\n1\\n2\"\nassert solution(\"5\\n1 4 3 7 5\") == \"11\\n3\\n1\\n4\\n2\"\nassert solution(\"2\\n1 2 3\") == \"1\\n2\\n1\\n2\""
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"11\\n3\\n1\\n4\\n2\"\n"
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 4 3 7 5\") == \"11\\n3\\n1\\n4\\n2\"\n"
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '11\\n3\\n1\\n4\\n2\\n'"
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 4 3 7 5\\n\") == \"11\\n3\\n1\\n4\\n2\\n\""
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 4 3 7 5\\n\") == \"11\\n3\\n1\\n4\\n2\\n\""
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 4 3 7 5\") == \"11\\n3\\n1\\n4\\n2\"\nassert solution(\"10\\n1 4 3 7 5 8 6 9\") == \"11\\n3\\n1\\n4\\n2\"\nassert solution(\"3\\n2 3 1\") == \"4\\n2\"\nassert solution(\"2\\n1 2 3 4 5\") == \"5\\n2\"\nassert solution(\"1\\n1 1\") == \"2\\n1\""
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '11\\n3\\n1\\n4\\n2\\n'"
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output\nassert solution(input()) == output"
    },
    {
        "number": 3755,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n1 4 3 7 5') == '11\\n3\\n1\\n4\\n2\\n'\nassert solution('2\\n1 4 3 7') == '1\\n3\\n4\\n2\\n'"
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 1\\n10.245\") == \"10.25\"\nassert solution(\"6 2\\n10.245\") == \"10.3\"\nassert solution(\"3 100\\n9.2\") == \"9.2\""
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 1\\n10.245\") == \"10.25\\n\"\nassert solution(\"6 2\\n10.245\") == \"10.3\\n\"\nassert solution(\"3 100\\n9.2\") == \"9.2\\n\""
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 1\\n10.245\\n\") == \"10.25\\n\"\nassert solution(\"6 2\\n10.245\\n\") == \"10.3\\n\"\nassert solution(\"3 100\\n9.2\\n\") == \"9.2\\n\""
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6 1\\n10.245') == '10.25'\nassert solution('6 2\\n10.245') == '10.3'\nassert solution('3 100\\n9.2') == '9.2'\nassert solution('6 1\\n10.245\\n10.3') == '10.3'"
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 1\\n10.245\") == \"10.25\\n\"\nassert solution(\"6 2\\n10.245\") == \"10.3\\n\"\nassert solution(\"3 100\\n9.2\") == \"9.2\\n\"\n"
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"10.25\", \"Test case 1 failed\"\nassert solution(input()) == \"10.3\", \"Test case 2 failed\"\nassert solution(input()) == \"9.2\", \"Test case 3 failed\""
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6 1\\n10.245\\n\") == \"10.25\"\nassert solution(\"6 2\\n10.245\\n\") == \"10.3\"\nassert solution(\"3 100\\n9.2\\n\") == \"9.2\""
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6 1\\n10.245\\n') == '10.25\\n'\nassert solution('6 2\\n10.245\\n') == '10.3\\n'\nassert solution('3 100\\n9.2\\n') == '9.2\\n'"
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 1\\n10.245\") == \"10.25\"\nassert solution(\"6 2\\n10.245\") == \"10.3\"\nassert solution(\"3 100\\n9.2\") == \"9.2\""
    },
    {
        "number": 3756,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 1\\n10.245\") == \"10.25\"\nassert solution(\"6 2\\n10.245\") == \"10.3\"\nassert solution(\"3 100\\n9.2\") == \"9.2\""
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"\nassert solution(\"1 2 2 1\") == \"0110\""
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"\nassert solution(\"1 2 2 1\") == \"0110\""
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"\n\nassert solution(\"1 2 2 1\") == \"0110\""
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"\nassert solution(\"1 2 2 1\") == \"0110\""
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == 'Impossible', \"Output should be 'Impossible'\""
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\", \"Incorrect output\"\nassert solution(\"1 2 2 1\") == \"0110\", \"Incorrect output\""
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4') == 'Impossible'\nassert solution('1 2 2 1') == '0110'\nprint('All tests passed.')"
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"\nassert solution(\"1 2 2 1\") == \"0110\""
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"\nassert solution(\"1 2 2 1\") == \"0110\""
    },
    {
        "number": 3757,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4') == 'Impossible'\nassert solution('1 2 2 1') == '0110'"
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(example1) == \"3\"\nassert solution(example2) == \"2\""
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Test failed\""
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(None) == ''"
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7\\n*..P*P*\\n\") == \"3\\n\"\nassert solution(\"10\\n.**PP.*P.*\\n\") == \"2\\n\""
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7\\n*..P*P*\\n\") == \"3\\n\"\nassert solution(\"10\\n.**PP.*P.*\\n\") == \"2\\n\""
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7\\n*..P*P*\\n\") == \"3\\n\"\nassert solution(\"10\\n.**PP.*P.*\\n\") == \"2\\n\""
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('7\\n*..P*P*\\n') == '3\\n'\nassert solution('10\\n.**PP.*P.*\\n') == '2\\n'"
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"7\\n*..P*P*\\n\") == \"3\"\nassert solution(\"10\\n.**PP.*P.*\\n\") == \"2\"\n\nfrom typing import List"
    },
    {
        "number": 3758,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('10\\n**PP.*P.*') == '2\\n'\nassert solution('7\\n*..P*P*') == '3\\n'"
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1), \"1\"\nassert solution(2), \"2\"\nassert solution(3), \"3\"\nassert solution(4), \"4\"\nassert solution(5), \"4\""
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == 4\nassert solution(2) == 8\nassert solution(3) == 16"
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"Output\\n4\\nOutput\\n8\\nOutput\\n16\\n\""
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin=input()) == \"Output\""
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"Output\""
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n\") == \"4\"\nassert solution(\"2\\n\") == \"8\"\nassert solution(\"3\\n\") == \"16\""
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1) == 4\nassert solution(2) == 8\nassert solution(3) == 16"
    },
    {
        "number": 3759,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"4\", \"The expected output is '4'.\"\nassert solution(4) == \"8\", \"The expected output is '8'.\"\nassert solution(5) == \"16\", \"The expected output is '16'.\""
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"9 9 5 5 2 1\") == \"1 3 9 7\"\nassert solution(\"100 100 52 50 46 56\") == \"17 8 86 92\"\n"
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin='5\\n9 9 5 5 2 1') == '1 3 9 7'\nassert solution(stdin='100\\n100 100 52 50 46 56') == '17 8 86 92'"
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"9 9 5 5 2 1\") == \"1 3 9 7\"\nassert solution(\"100 100 52 50 46 56\") == \"17 8 86 92\""
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"9 9 5 5 2 1\") == \"1 3 9 7\"\nassert solution(\"100 100 52 50 46 56\") == \"17 8 86 92\""
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"9 9 5 5 2 1\") == \"1 3 9 7\"\nassert solution(\"100 100 52 50 46 56\") == \"17 8 86 92\""
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"9 9 5 5 2 1\") == \"1 3 9 7\"\nassert solution(\"100 100 52 50 46 56\") == \"17 8 86 92\""
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"9 9 5 5 2 1\") == \"1 3 9 7\"\nassert solution(\"100 100 52 50 46 56\") == \"17 8 86 92\"\n"
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"9 9 5 5 2 1\") == \"1 3 9 7\\n\"\nassert solution(\"100 100 52 50 46 56\") == \"17 8 86 92\\n\""
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1 3 9 7\""
    },
    {
        "number": 3760,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"\"\"1 3 9 7\"\"\"\nassert solution(stdin) == \"\"\"17 8 86 92\"\"\""
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"FTFFTFFF\") == \"Yes\"\nassert solution(\"4 2\") == \"No\"\n"
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"FTFFTFFF\\n4 2\") == \"Yes\\n\"\nassert solution(\"TTTFFTT\\n3 2\") == \"No\\n\"\nassert solution(\"TTFFTTFT\\n2 1\") == \"No\\n\"\nassert solution(\"TTFFTTFF\\n1 3\") == \"No\\n\"\nassert solution(\"FTFFFTFF\\n3 2\") == \"No\\n\""
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"FTFFTFFF\\n4 2\") == \"Yes\"\nassert solution(\"FTRRRRRRR\\n3 2\") == \"No\""
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"FTFFTFFF\") == \"Yes\"\nassert solution(\"TTCFFTT\") == \"Yes\"\nassert solution(\"FBBFFBB\") == \"No\"\nassert solution(\"F\") == \"No\"\nassert solution(\"T\") == \"No\"\nassert solution(\"TTTTTTT\") == \"No\""
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"FTFFTFFF\\n4 2\") == \"Yes\\n\", \"Solution not correct.\""
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"FTFFTFFF\\n4 2\") == \"Yes\"\nassert solution(\"FTFFTTFF\\n4 3\") == \"No\"\nassert solution(\"TTFFTTT\\n4 4\") == \"Yes\"\nassert solution(\"FTFFTFTT\\n3 2\") == \"No\"\nassert solution(\"FTFFTTFF\\n4 2\") == \"No\""
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"FTFFTFFF\") == \"Yes\""
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"FTFFTFFF\") == \"Yes\", \"Incorrect output. Please fix the solution.\"\nprint(\"All tests passed.\")\n"
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"FTFFTFFF\") == \"Yes\\n\""
    },
    {
        "number": 3761,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('FTFFTFFF') == 'Yes', \"The objective can be achieved by, for example, turning counterclockwise in the first T and turning clockwise in the second T.\""
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\") == 2\nassert solution(\"2\") == 3\nassert solution(\"3\") == 5\nassert solution(\"4\") == 6"
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n\") == \"2\\n\"\nassert solution(\"2\\n\") == \"3\\n\"\nassert solution(\"3\\n\") == \"5\\n\"\nassert solution(\"4\\n\") == \"6\\n\""
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == 2\nassert solution(2) == 3\nassert solution(3) == 5\nassert solution(4) == 6\n"
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == 2\nassert solution(2) == 3\nassert solution(3) == 5\nassert solution(4) == 6"
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n\") == \"2\\n\"\nassert solution(\"2\\n\") == \"3\\n\"\nassert solution(\"3\\n\") == \"5\\n\"\nassert solution(\"4\\n\") == \"6\\n\"\nassert solution(\"5\\n\") == \"6\\n\""
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '3'\nassert solution('3') == '5'\nassert solution('4') == '6'\n"
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == \"2\"\nassert solution(2) == \"3\"\nassert solution(3) == \"5\"\nassert solution(4) == \"6\""
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"Test failed. Expected: {expected}, Received: {solution(input())}\""
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n\") == \"2\\n\"\nassert solution(\"2\\n\") == \"3\\n\"\nassert solution(\"3\\n\") == \"5\\n\"\nassert solution(\"4\\n\") == \"6\\n\"\n"
    },
    {
        "number": 3762,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n\") == \"2\\n\"\nassert solution(\"2\\n\") == \"3\\n\"\nassert solution(\"3\\n\") == \"5\\n\"\nassert solution(\"4\\n\") == \"6\\n\""
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1.3333333333\", \"Incorrect output. Please check the examples and the problem statement.\""
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"1.3333333333\"\n"
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"1.3333333333\"\n"
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n1 2 3\\n3\\n') == '1.3333333333'\nassert solution('3\\n1 3 2\\n3\\n') == '1.3333333333'\nassert solution('3\\n1 2 1\\n3\\n') == '2.0000000000'\nassert solution('3\\n1 3 3\\n3\\n') == '2.0000000000'\nassert solution('3\\n1 2 2\\n3\\n') == '2.0000000000'\nassert solution('3\\n1 1 1\\n3\\n') == '2.0000000000'"
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\na_1 a_2 a_3\\na_3 a_2 a_1\\na_1 a_3 a_2\\na_2 a_1 a_3\\n3\") == \"1.3333333333\"\n"
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n1 2 3\\n3') == '1.3333333333'"
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '1.3333333333' # Correct Answer"
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '1.3333333333', \"The result should be '1.3333333333', but it's actually '{result}'.\".format(result=solution())"
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2 3\\n3\") == \"1.3333333333\"\nassert solution(\"1\\n2 3 4\\n5\") == \"1.0000000000\"\nassert solution(\"4\\n1 2 3 4\\n6\") == \"1.5000000000\"\nassert solution(\"3\\n1 2 4\\n5\") == \"0.5000000000\"\nassert solution(\"1\\n2 3\\n4\") == \"0.0000000000\""
    },
    {
        "number": 3763,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1.3333333333\"\n"
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, \"Testcase not met. Please check the output.\""
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Expected: {expected}, Received: {solution(input())}\""
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Output: {solution(input())}, expected: {expected}\"\n"
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected, f\"Input {stdin} should return {expected}, but got {solution(stdin)}\"\n"
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == '13 7', \"The output should be 13 7\""
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Test case failed\"\nprint(\"Test case passed\")"
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 1 2\\n9 7 11 15 5\\n\") == \"13 7\\n\"\nassert solution(\"2 100000 569\\n605 986\\n\") == \"986 605\\n\""
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 1 2\\n9 7 11 15 5\\n2 100000 569\\n605 986\") == \"13 7\"\nassert solution(\"5 3 2\\n9 7 11 15 5\\n2 100000 569\\n605 986\") == \"18 7\"\nassert solution(\"5 2 2\\n9 7 11 15 5\\n2 100000 569\\n605 986\") == \"13 7\""
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 1 2\\n9 7 11 15 5\\n\") == \"13 7\"\nassert solution(\"2 100000 569\\n605 986\\n\") == \"986 605\"\n"
    },
    {
        "number": 3764,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 1 2\\n9 7 11 15 5\\n\\n2 100000 569\\n605 986') == '13 7\\n986 605'"
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 3 2 4 4\\n2 5 4 10') == '1\\n'\nassert solution('3 3 3 3 5\\n2 3 5 4 2') == '0\\n'\nassert solution('5 5 1 2 3\\n2 2 3') == '-1\\n'\nassert solution('3 4 1 1 3\\n2 3 2') == '3\\n'\nassert solution('3 3 4 1 3\\n2 2 2') == '-1\\n'"
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3 2 4 4\\n2 5 4 10\") == \"1\\n\"\nassert solution(\"3 3 3 3 5\\n2 3 5 4 2\") == \"0\\n\"\nassert solution(\"5 5 1 2 3\\n2 2 3\") == \"-1\\n\"\nassert solution(\"3 4 1 1 3\\n2 3 2\") == \"3\\n\""
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3 2 4 4\\n2 5 4 10\") == \"1\\n\"\nassert solution(\"3 3 3 3 5\\n2 3 5 4 2\") == \"0\\n\"\nassert solution(\"5 5 1 2 3\\n2 2 3\") == \"-1\\n\"\nassert solution(\"3 4 1 1 3\\n2 3 2\") == \"3\\n\"\n"
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3 2 4 4\\n2 5 4 10\") == \"1\\n\"\nassert solution(\"3 3 3 3 5\\n2 3 5 4 2\") == \"0\\n\"\nassert solution(\"5 5 1 2 3\\n2 2 3\") == \"-1\\n\"\nassert solution(\"3 4 1 1 3\\n2 3 2\") == \"3\\n\""
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 3 2 4 4\\n2 5 4 10\\n') == '1\\n'\nassert solution('3 3 3 3 5\\n2 3 5 4 2\\n') == '0\\n'\nassert solution('5 5 1 2 3\\n2 2 3\\n') == '-1\\n'\nassert solution('3 4 1 1 3\\n2 3 2\\n') == '3\\n'\nprint('All tests passed!')"
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 3 2 4 4\\n2 5 4 10') == '1\\n'\nassert solution('3 3 3 3 5\\n2 3 5 4 2') == '0\\n'\nassert solution('5 5 1 2 3\\n2 2 3') == '-1\\n'\nassert solution('3 4 1 1 3\\n2 3 2') == '3\\n'"
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 3 2 4 4') == '1'\nassert solution('3 3 3 3 5') == '0'\nassert solution('5 5 1 2 3') == '-1'\nassert solution('3 4 1 1 3') == '3'"
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1\"\nassert solution() == \"0\"\nassert solution() == \"-1\"\nassert solution() == \"3\""
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 3 2 4 4\\n2 5 4 10\\n') == '1'\nassert solution('3 3 3 3 5\\n2 3 5 4 2\\n') == '0'\nassert solution('5 5 1 2 3\\n2 2 3\\n') == '-1'\nassert solution('3 4 1 1 3\\n2 3 2\\n') == '3'"
    },
    {
        "number": 3765,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\nr\"\"\"\n3 3 2 4 4\n2 5 4 10\n\"\"\") == \"1\\n\"\n\nassert solution(\nr\"\"\"\n3 3 3 3 5\n2 3 5 4 2\n\"\"\") == \"0\\n\"\n\nassert solution(\nr\"\"\"\n5 5 1 2 3\n2 2 3\n\"\"\") == \"-1\\n\"\n\nassert solution(\nr\"\"\"\n3 4 1 1 3\n2 3 2\n\"\"\") == \"3\\n\"\n\nassert solution(\nr\"\"\"\n1 1 1 1 1\n1 1 1 1 1\n\"\"\") == \"3\\n\"\n\nassert solution(\nr\"\"\"\n1 1 1 1 1\n1 1 1 1 1\n\"\"\") == \"3\\n\""
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"G3 G3\") == \"0\", \"Incorrect output\"\nassert solution(\"G4 R4 R3 B3\") == \"2\", \"Incorrect output\"\nassert solution(\"B1 Y1 W1 G1 R1\") == \"4\", \"Incorrect output\""
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\nG3 G3\\n') == '0'\nassert solution('4\\nG4 R4 R3 B3\\n') == '2'\nassert solution('5\\nB1 Y1 W1 G1 R1\\n') == '4'"
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\nG3 G3\\n\") == \"0\"\nassert solution(\"4\\nG4 R4 R3 B3\\n\") == \"2\"\nassert solution(\"5\\nB1 Y1 W1 G1 R1\\n\") == \"4\""
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\nG3 G3\\n\") == \"0\"\nassert solution(\"4\\nG4 R4 R3 B3\\n\") == \"2\"\nassert solution(\"5\\nB1 Y1 W1 G1 R1\\n\") == \"4\""
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(4) == \"2\", \"First sample test case\"\nassert solution(5) == \"4\", \"Second sample test case\"\nassert solution(7) == \"6\", \"Third sample test case\""
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Your solution is incorrect, please check the function signature and examples provided.\""
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\nG3 G3\\n\") == \"0\"\nassert solution(\"4\\nG4 R4 R3 B3\\n\") == \"2\"\nassert solution(\"5\\nB1 Y1 W1 G1 R1\\n\") == \"4\""
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('Input\\n2\\nG3 G3\\n\\nOutput\\n0\\n\\nInput\\n4\\nG4 R4 R3 B3\\n\\nOutput\\n2\\n\\nInput\\n5\\nB1 Y1 W1 G1 R1\\n\\nOutput\\n4') == 'Output\\n0\\n\\nOutput\\n2\\n\\nOutput\\n4'"
    },
    {
        "number": 3766,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"G3 G3\") == 0, \"Solution should return 0\"\nassert solution(\"G4 R4 R3 B3\") == 2, \"Solution should return 2\"\nassert solution(\"B1 Y1 W1 G1 R1\") == 4, \"Solution should return 4\""
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n4\n3 3 4 3\n4 7 6 5\n\"\"\") == \"2 6\"\n\nassert solution(\"\"\"\n2\n1 1\n100 100\n\"\"\") == \"1 1\"\n\nassert solution(\"\"\"\n5\n10 30 5 6 24\n10 41 7 8 24\n\"\"\") == \"3 11\""
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '2 6'\nassert solution() == '1 1'\nassert solution() == '3 11'"
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n3 3 4 3\\n4 7 6 5\\n\\n2\\n1 1\\n100 100\\n\\n5\\n10 30 5 6 24\\n10 41 7 8 24\") == \"2 6\\n1 1\\n\"\nassert solution(\"2\\n1 1\\n100 100\\n\\n5\\n10 30 5 6 24\\n10 41 7 8 24\") == \"1 1\\n\"\nassert solution(\"5\\n10 30 5 6 24\\n10 41 7 8 24\\n\\n3\\n1 1\\n100 100\") == \"3 11\\n\"\n"
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n3 3 4 3\\n4 7 6 5\\n2\\n1 1\\n100 100\\n5\\n10 30 5 6 24\\n10 41 7 8 24\") == \"2 6\\n\"\nassert solution(\"2\\n1 1\\n100 100\\n5\\n10 30 5 6 24\\n10 41 7 8 24\") == \"1 1\\n\"\nassert solution(\"5\\n10 30 5 6 24\\n10 41 7 8 24\\n\\n\") == \"3 11\\n\""
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(str(4)) == \"2 6\"\nassert solution(str(2)) == \"1 1\"\nassert solution(str(5)) == \"3 11\"\n\nfrom typing import List"
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4\\n3 3 4 3\\n4 7 6 5\\n\\n2\\n1 1\\n100 100\\n\\n5\\n10 30 5 6 24\\n10 41 7 8 24\\n') == '2 6\\n1 1\\n3 11'\n\nassert solution('2\\n1 1\\n100 100\\n\\n5\\n10 30 5 6 24\\n10 41 7 8 24\\n') == '1 1\\n3 11'"
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n3 3 4 3\\n4 7 6 5\\n2\\n1 1\\n100 100\\n5\\n10 30 5 6 24\\n10 41 7 8 24\") == \"2 6\"\nassert solution(\"2\\n1 1\\n100 100\\n5\\n10 30 5 6 24\\n10 41 7 8 24\") == \"1 1\"\nassert solution(\"5\\n10 30 5 6 24\\n10 41 7 8 24\") == \"3 11\""
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n3 3 4 3\\n4 7 6 5\\n\\n2\\n1 1\\n100 100\\n\\n5\\n10 30 5 6 24\\n10 41 7 8 24\") == \"2 6\\n1 1\\n3 11\""
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), \"Incorrect output\""
    },
    {
        "number": 3767,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n3 3 4 3\\n4 7 6 5\\n\\n2\\n1 1\\n100 100\\n\\n5\\n10 30 5 6 24\\n10 41 7 8 24\") == \"2 6\\n\"\n\nassert solution(\"2\\n1 1\\n100 100\\n\\n5\\n10 30 5 6 24\\n10 41 7 8 24\") == \"1 1\\n\"\n\nassert solution(\"5\\n10 30 5 6 24\\n10 41 7 8 24\\n\\n\") == \"3 11\\n\"\n\nassert solution(\"4\\n3 3 4 3\\n4 7 6 5\\n\\n2\\n1 1\\n100 100\\n\\n5\\n10 30 5 6 24\\n10 41 7 8 24\") == \"2 6\\n\""
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 4\") == \"3B\"\nassert solution(\"2 2\") == \"Impossible\"\nassert solution(\"3 2\") == \"1A1B\"\n"
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 4\") == \"3B\"\nassert solution(\"2 2\") == \"Impossible\"\nassert solution(\"3 2\") == \"1A1B\""
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 4\\n') == '3B'\nassert solution('2 2\\n') == 'Impossible'\nassert solution('3 2\\n') == '1A1B'"
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 4\") == \"3B\"\nassert solution(\"2 2\") == \"Impossible\"\nassert solution(\"3 2\") == \"1A1B\""
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 4\") == \"3B\"\nassert solution(\"2 2\") == \"Impossible\"\nassert solution(\"3 2\") == \"1A1B\""
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"3B\"\nassert solution(input()) == \"Impossible\"\nassert solution(input()) == \"1A1B\""
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 4\") == \"3B\"\nassert solution(\"2 2\") == \"Impossible\"\nassert solution(\"3 2\") == \"1A1B\""
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 4\") == \"3B\"\nassert solution(\"2 2\") == \"Impossible\"\nassert solution(\"3 2\") == \"1A1B\""
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected\nfor i in range(1, len(input()) + 1):\n    assert solution(input()) == expected"
    },
    {
        "number": 3768,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 4\\n') == '3B\\n'\nassert solution('2 2\\n') == 'Impossible\\n'\nassert solution('3 2\\n') == '1A1B\\n'"
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == 3\nassert solution(input()) == 25"
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\\n5 4\\n\") == \"3\\n25\\n\""
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\") == \"3\"\nassert solution(\"5 4\") == \"25\""
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 2') == '3\\n'\nassert solution('5 4') == '25\\n'"
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2\") == \"3\\n\"\nassert solution(\"5 4\") == \"25\\n\""
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2\") == \"3\"\nassert solution(\"5 4\") == \"25\"\n"
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\") == \"3\"\nassert solution(\"5 4\") == \"25\"\nassert solution(\"2 4\") == \"0\"\nassert solution(\"3 5\") == \"0\"\nassert solution(\"4 6\") == \"1\"\nassert solution(\"5 7\") == \"0\"\nassert solution(\"5 10\") == \"25\"\nassert solution(\"3 13\") == \"0\""
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\") == \"3\\n\"\nassert solution(\"5 4\") == \"25\\n\""
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\") == \"3\"\nassert solution(\"5 4\") == \"25\""
    },
    {
        "number": 3769,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\") == \"3\"\nassert solution(\"5 4\") == \"25\"\nassert solution(\"1000000000 0\") == \"1000000000\"\nassert solution(\"0 1000000000\") == \"1000000000\"\nassert solution(\"1000000000 1000000000\") == \"999999999999999999999999999999999\"\nassert solution(\"2000000000 1000000000\") == \"99999999999999999999999999999999\"\nassert solution(\"2000000000 1000000000\") == \"999999999999999999999999999999999\""
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1\\n\""
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\") == \"1\\nDeleting Vertex 2 costs 1.After that, the graph is separated into two connected components.\\nThe score of the component consisting of Vertex 1 is |0| = 0. The score of the component consisting of Vertices 3 and 4 is |(-3) + 1| = 2. Therefore, Snuke's profit is 0 + 2 - 1 = 1. He cannot gain more than 1, so the answer is 1.\""
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\") == \"1\"\nassert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\") == \"1\"\nassert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\") == \"1\"\n"
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1\", \"The answer is 1.\""
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\") == \"1\"\nassert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\") == \"1\"\nassert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\") == \"1\"\n"
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2') == '1'"
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"1\""
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(sample_input) == \"1\\n\""
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1\\n\", \"Solution is incorrect\""
    },
    {
        "number": 3770,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\") == \"1\""
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 3\\nS.o\\no.o.o.T\\n') == '2\\nRemove the upper-right and lower-left leaves.'"
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\nS.o\\n.o.o\\no.T\\n\") == \"2\\n\"\nassert solution(\"3 3\\nS.o\\n.o.T\\no.o\\n\") == \"2\\n\"\nassert solution(\"3 3\\nS.o\\n.o.o\\no.o\\n\") == \"2\\n\"\nassert solution(\"3 3\\nS.o\\n.o.o\\no.o\\n\") == \"2\\n\"\nassert solution(\"3 3\\nS.o\\n.o.o\\no.o\\n\") == \"2\\n\"\nassert solution(\"3 3\\nS.o\\n.o.o\\no.o\\n\") == \"2\\n\""
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\nS.o\\n.o.o\\nT.T\\n\") == \"2\\nRemove the upper-right and lower-left leaves.\""
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\nS.o\\n.o.o\\no.T\\n\") == \"2\\nRemove the upper-right and lower-left leaves.\"\nassert solution(\"3 3\\nS.o\\n.o.o\\no.T\\n\") == \"-1\\n\""
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\nS.o\\n.o.o\\nT\") == \"2\\nRemove the upper-right and lower-left leaves.\""
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''3 3\nS.o\n.o.\no.T''') == '2'\n\nassert solution('''3 3\nS.o\n.o.\no.T''') == '2'\n\nassert solution('''3 3\nS.o\n.o.\no.T''') == '2'\n\nassert solution('''3 3\nS.o\n.o.\no.T''') == '2'\n\nassert solution('''3 3\nS.o\n.o.\no.T''') == '2'\n\nassert solution('''3 3\nS.o\n.o.\no.T''') == '2'\n\nassert solution('''3 3\nS.o\n.o.\no.T''') == '2'\n\nassert solution('''3 3\nS.o\n.o.\no.T''') == '2'"
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"\"\"3 3\nS.o\n.o.\no.T\"\"\") == \"2\\nRemove the upper-right and lower-left leaves.\"\n\nprint(solution(\"\"\"3 3\nS.o\n.o.\no.T\"\"\"))"
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\ns.o\\no.o.\\no.T\") == \"2\\nRemove the upper-right and lower-left leaves.\"\nassert solution(\"3 3\\ns.o\\no.o.\\no.T\\nS.o\") == \"2\\nRemove the upper-right and lower-left leaves.\"\nassert solution(\"3 3\\ns.o\\no.o.\\no.T\\nS.o\\no.o.\") == \"2\\nRemove the upper-right and lower-left leaves.\"\nassert solution(\"3 3\\ns.o\\no.o.\\no.T\\nS.o\\no.o.\\no.T\") == \"2\\nRemove the upper-right and lower-left leaves.\"\nassert solution(\"3 3\\ns.o\\no.o.\\no.T\\nS.o\\no.o.\\no.T\\ns.o\\no.o.\\no.T\") == \"2\\nRemove the upper-right and lower-left leaves.\"\nassert solution(\"3 3\\ns.o\\no.o.\\no.T\\nS.o\\no.o.\\no.T\\ns.o\\no.o.\\no.T\\no.o.\\no.o.\") == \"2\\nRemove the upper-right and lower-left leaves.\"\nassert solution(\"3 3\\ns.o\\no.o.\\no.T\\nS.o\\no.o.\\no.T\\ns.o\\no.o.\\no.T\\no.o.\\no.o.\\ns.o\\no.o.\\no.T\") == \"2\\nRemove the upper-right and lower-left leaves.\"\nassert solution(\"3 3\\ns.o\\no.o.\\no.T\\nS.o\\no.o.\\no.T\\ns.o\\no.o.\\no.T\\no.o.\\no.o.\\ns.o\\no.o.\\no.T\\no.o.\\no.o.\\no.o.\\no.o.\") == \"2\\nRemove the upper-right and lower-left leaves.\"\nassert solution(\"3 3\\ns.o\\no.o.\\no.T\\nS.o\\no.o.\\no.T\\ns.o\\no.o.\\no.T\\no.o.\\no.o.\\ns.o\\no.o.\\no.T\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o.\\no.o"
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\nS.o\\n.o.o.T\\n\") == \"2\\nRemove the upper-right and lower-left leaves.\\n\""
    },
    {
        "number": 3771,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 3\\nS.o\\no.o.\\no.T') == '2\\nRemove the upper-right and lower-left leaves.'"
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(str(input())) == str(input()) # Correctness check\n\nprint(solution(input())) # Printing the output"
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3,2) == 3, \"Expected 3, got {}\".format(solution(3,2))\nassert solution(199,200) == 200, \"Expected 200, got {}\".format(solution(199,200))"
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=input()) == expected, f\"Expected {expected}, got {solution(stdin=input())}\""
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == \"1\", \"1\"\nassert solution(\"3 2\") == \"3\", \"3\"\nassert solution(\"199 200\") == \"200\", \"200\"\n"
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1 1) == 1\nassert solution(3 2) == 3\nassert solution(199 200) == 200\n"
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1), \"Test Case 1\"\nassert solution(3), \"Test Case 2\"\nassert solution(199), \"Test Case 3\""
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"3\"\nassert solution(\"199 200\") == \"200\""
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1 1) == 1\nassert solution(3 2) == 3\nassert solution(199 200) == 200"
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1\\n\", \"The output should be 1.\"\nassert solution(stdin) == \"3\\n\", \"The output should be 3.\"\nassert solution(stdin) == \"200\\n\", \"The output should be 200.\""
    },
    {
        "number": 3772,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1\\n3 2\\n199 200\\n\") == \"200\"\nassert solution(\"1 1\\n\") == \"1\"\nassert solution(\"1 2\\n2 4\\n\") == \"2\"\nassert solution(\"5 2\\n4 3\\n\") == \"1\"\nassert solution(\"1 1\\n1 1\\n\") == \"1\""
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n5 2\\n3 3\") == \"Aoki\"\nassert solution(\"3\\n1 3\\n4 1\") == \"Takahashi\"\nassert solution(\"1\\n2 2\") == \"Takahashi\"\nassert solution(\"2\\n3 2\\n1 3\") == \"Aoki\"\nassert solution(\"1\\n3 3\\n2 1\") == \"Takahashi\"\nassert solution(\"2\\n1 1\") == \"Aoki\"\nassert solution(\"1\\n1 1\") == \"Aoki\"\n"
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n5 2\\n3 3\") == \"Aoki\"\nassert solution(\"4\\n10 2\\n1 100\") == \"Takahashi\"\nassert solution(\"5\\n10 2\\n1 100\") == \"Aoki\"\nassert solution(\"6\\n10 2\\n1 100\") == \"Takahashi\"\nassert solution(\"7\\n10 2\\n1 100\") == \"Aoki\"\nassert solution(\"8\\n10 2\\n1 100\") == \"Takahashi\"\nassert solution(\"9\\n10 2\\n1 100\") == \"Aoki\"\nassert solution(\"10\\n10 2\\n1 100\") == \"Takahashi\"\nassert solution(\"11\\n10 2\\n1 100\") == \"Aoki\"\nassert solution(\"12\\n10 2\\n1 100\") == \"Takahashi\"\nassert solution(\"13\\n10 2\\n1 100\") == \"Aoki\"\nassert solution(\"14\\n10 2\\n1 100\") == \"Takahashi\"\nassert solution(\"15\\n10 2\\n1 100\") == \"Aoki\"\nassert solution(\"16\\n10 2\\n1 100\") == \"Takahashi\"\nassert solution(\"17\\n10 2\\n1 100\") == \"Aoki\"\nassert solution(\"18\\n10 2\\n1 100\") == \"Takahashi\"\nassert solution(\"19\\n10 2\\n1 100\") == \"Aoki\"\nassert solution(\"20\\n10 2\\n1 100\") == \"Takahashi\"\nassert solution(\"21\\n10 2\\n1 100\") == \"Aoki\"\nassert solution(\"22\\n10 2\\n1 100\") == \"Takahashi\"\nassert solution(\"23\\n10 2\\n1 100\") == \"Aoki\"\nassert solution(\"24\\n10 2\\n1 100\") == \"Takahashi\"\nassert solution(\"25\\n10 2\\n1 100\") == \"Aoki\"\nassert solution(\"26\\n10 2\\n1 100\") == \"Takahashi\"\nassert solution(\"27\\n10 2\\n1 100\") == \"Aoki\"\nassert solution(\"28\\n10 2\\n1 100\") == \"Takahashi\"\nassert solution(\"29\\n10 2\\n1 100\") == \"Aoki\"\nassert solution(\"30\\n10 2\\n1 100\") == \"Takahashi\"\nassert solution(\"31\\n10 2\\n1 100\") == \"Aoki\"\nassert solution(\"32\\n10 2\\n1 100\") == \"Takahashi\"\nassert solution(\"33\\n10 2\\n1 100\") == \"Aoki\"\nassert solution(\"34\\n10 2\\n1 100\") == \"Takahashi\"\nassert solution(\"35\\n10 2\\n1 100\") == \"Aoki\"\nassert solution(\"36\\n10 2\\n1 100\") == \"Takahashi\"\nassert solution(\"37\\n10 2\\n1 100\") == \"Aoki\"\nassert solution(\"38\\n10 2\\n1 100\") == \"Takahashi\"\nassert solution(\"39\\n10 2\\n1 100\") == \"Aoki\"\nassert solution(\"40\\n10 2\\n1 100\") == \"Takahashi\"\nassert solution(\"41\\n10 2\\n1 100\") == \"Aoki\"\nassert solution(\"42\\n10 2\\n1 100\") == \"Tak"
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n5 2\\n3 3\") == \"Aoki\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n5 2\\n3 3\") == \"Aoki\"\nassert solution(\"5\\n1 1\\n1 1\") == \"Takahashi\"\nassert solution(\"5\\n1 1\\n2 1\") == \"Aoki\"\nassert solution(\"5\\n1 1\\n3 1\") == \"Takahashi\""
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n5 2\\n3 3\") == \"Aoki\"\nassert solution(\"3\\n1 1\\n5 5\") == \"Takahashi\""
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2\\n5 2\\n3 3') == 'Aoki'\n\nprint(\"All tests passed.\")"
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"Aoki\\n\""
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Aoki\""
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n5 2\\n3 3\") == \"Aoki\""
    },
    {
        "number": 3773,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2\\n5 2\\n3 3\\n') == 'Aoki\\n'\nassert solution('3\\n5 2\\n2 3\\n') == 'Takahashi\\n'\nassert solution('4\\n5 2\\n3 2\\n') == 'Aoki\\n'\nassert solution('5\\n5 2\\n3 3\\n') == 'Takahashi\\n'\nassert solution('6\\n5 2\\n3 4\\n') == 'Aoki\\n'\nassert solution('7\\n5 2\\n3 5\\n') == 'Takahashi\\n'\nassert solution('8\\n5 2\\n3 6\\n') == 'Aoki\\n'\nassert solution('9\\n5 2\\n3 7\\n') == 'Takahashi\\n'\nassert solution('10\\n5 2\\n3 8\\n') == 'Aoki\\n'\nassert solution('11\\n5 2\\n3 9\\n') == 'Takahashi\\n'\nassert solution('12\\n5 2\\n3 10\\n') == 'Aoki\\n'\nassert solution('13\\n5 2\\n3 11\\n') == 'Takahashi\\n'\nassert solution('14\\n5 2\\n3 12\\n') == 'Aoki\\n'\nassert solution('15\\n5 2\\n3 13\\n') == 'Takahashi\\n'\nassert solution('16\\n5 2\\n3 14\\n') == 'Aoki\\n'\nassert solution('17\\n5 2\\n3 15\\n') == 'Takahashi\\n'\nassert solution('18\\n5 2\\n3 16\\n') == 'Aoki\\n'\nassert solution('19\\n5 2\\n3 17\\n') == 'Takahashi\\n'\nassert solution('20\\n5 2\\n3 18\\n') == 'Aoki\\n'\nassert solution('21\\n5 2\\n3 19\\n') == 'Takahashi\\n'\nassert solution('22\\n5 2\\n3 20\\n') == 'Aoki\\n'\nassert solution('23\\n5 2\\n3 21\\n') == 'Takahashi\\n'\nassert solution('24\\n5 2\\n3 22\\n') == 'Aoki\\n'\nassert solution('25\\n5 2\\n3 23\\n') == 'Takahashi\\n'\nassert solution('26\\n5 2\\n3 24\\n') == 'Aoki\\n'\nassert solution('27\\n5 2\\n3 25\\n') == 'Takahashi\\n'\nassert solution('28\\n5 2\\n3 26\\n') == 'Aoki\\n'\nassert solution('29\\n5 2\\n3 27\\n') == 'Takahashi\\n'\nassert solution('30\\n5 2\\n3 28\\n') == 'Aoki\\n'\nassert solution('31\\n5 2\\n3 29\\n') == 'Takahashi\\n'\nassert solution('32\\n5 2\\n3 30\\n') == 'Aoki\\n'\nassert solution('33\\n5 2\\n3 31\\n') == 'Takahashi\\n'\nassert solution('34\\n5 2\\n3 32\\n') == 'Aoki\\n'\nassert solution('35\\n5 2\\n3 33\\n') == 'Takahashi\\n'\nassert solution('36\\n5 2\\n3 34\\n') == 'Aoki\\n'\nassert solution('37\\n5 2\\n3 35\\n') == 'Takahashi\\n'\nassert solution('38\\n5 2\\n3 36\\n') == 'Aoki\\n'\nassert solution('39\\n5 "
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"0\"\nassert solution(\"3 3\") == \"8\""
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"0\"\nassert solution(input()) == \"8\""
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\") == \"0\"\nassert solution(\"3 3\") == \"8\""
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\n3 3\\n\") == \"0\\n\"\nassert solution(\"3 3\\n\") == \"8\\n\""
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == \"0\\n\"\nassert solution(\"3 3\") == \"8\\n\""
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"0\"\nassert solution(\"3 3\") == \"8\""
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\n3 3\\n\") == \"0\\n8\"\nassert solution(\"3 3\\n\") == \"8\""
    },
    {
        "number": 3774,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == 0\nassert solution(2) == 8"
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n2 2\n1 2 3 4\n1 5 3 4\n\"\"\") == \"1\\n\"\n\nassert solution(\"\"\"\n2 2\n1 2 3 4\n1 5 6 4\n\"\"\") == \"0\\n\"\n\nassert solution(\"\"\"\n2 3\n1 2 4 5\n1 2 1 3 2 3\n\"\"\") == \"-1\\n\""
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1\"\nassert solution() == \"0\"\nassert solution() == \"-1\""
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\n1 2 3 4\\n1 5 3 4\\n\") == \"1\"\nassert solution(\"2 2\\n1 2 3 4\\n1 5 6 4\\n\") == \"0\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 3\\n\") == \"-1\""
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\n1 2 3 4\\n1 5 3 4\") == \"1\\n\"\nassert solution(\"2 2\\n1 2 3 4\\n1 5 6 4\") == \"0\\n\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 3\") == \"-1\\n\"\nassert solution(\"2 1\\n1 2 3\\n1 2 1 3\") == \"0\\n\"\nassert solution(\"1 1\\n1 2 3\\n1 2 1 3\") == \"0\\n\"\nassert solution(\"2 2\\n1 2 3\\n1 2 1 3 2 3\") == \"0\\n\"\nassert solution(\"1 1\\n1 2 3\\n1 2 1 3\") == \"-1\\n\""
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\n1 2 3 4\\n1 5 3 4\\n\") == \"1\\n\"\nassert solution(\"2 2\\n1 2 3 4\\n1 5 6 4\\n\") == \"0\\n\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 3\\n\") == \"-1\\n\""
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 2\\n1 2 3 4\\n1 5 3 4') == '1'\nassert solution('2 2\\n1 2 3 4\\n1 5 6 4') == '0'\nassert solution('2 3\\n1 2 4 5\\n1 2 1 3 2 3') == '-1'\n\nprint(\"All tests passed\")"
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n1 2 3 4\\n1 5 3 4\") == \"1\\n\"\nassert solution(\"2 2\\n1 2 3 4\\n1 5 6 4\") == \"0\\n\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 3\") == \"-1\\n\""
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"For input {input()}, expected output {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 2\\n1 2 3 4\\n1 5 3 4') == '1'\nassert solution('2 2\\n1 2 3 4\\n1 5 6 4') == '0'\nassert solution('2 3\\n1 2 4 5\\n1 2 1 3 2 3') == '-1'\n\nprint('All tests passed!')"
    },
    {
        "number": 3775,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 2\\n1 2 3 4\\n1 5 3 4') == '1'\nassert solution('2 2\\n1 2 3 4\\n1 5 6 4') == '0'\nassert solution('2 3\\n1 2 4 5\\n1 2 1 3 2 3') == '-1'"
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"24\") == \"17:30\", \"Test 1: Incorrect output\"\nassert solution(\"12\") == \"07:30\", \"Test 2: Incorrect output\"\nassert solution(\"24\") == \"09:09\", \"Test 3: Incorrect output\""
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('24') == '17:30'\nassert solution('12') == '07:30'\nassert solution('24') == '09:09'"
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"24\") == \"17:30\"\nassert solution(\"12\") == \"07:30\"\nassert solution(\"24\") == \"09:09\""
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"24\") == \"17:30\"\nassert solution(\"12\") == \"07:30\"\nassert solution(\"24\") == \"09:09\""
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('24') == '17:30'\nassert solution('12') == '07:30'\nassert solution('24') == '09:09'"
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"12\") == \"07:30\"\nassert solution(\"24\") == \"17:30\"\nassert solution(\"12\") == \"07:30\"\nassert solution(\"24\") == \"09:09\"\n"
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('24') == '00:30'\nassert solution('12') == '00:30'\nassert solution('24') == '17:30'\nassert solution('12') == '01:30'\nassert solution('24') == '09:09'\nassert solution('12') == '07:30'"
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"24\") == \"17:30\"\nassert solution(\"12\") == \"07:30\"\nassert solution(\"24\") == \"09:09\""
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"24\\n17:30\") == \"17:30\"\nassert solution(\"12\\n17:30\") == \"07:30\"\nassert solution(\"24\\n99:99\") == \"09:09\""
    },
    {
        "number": 3776,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"24\") == \"17:30\"\nassert solution(\"12\") == \"07:30\"\nassert solution(\"24\") == \"09:09\""
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1') == '6'"
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\") == \"6\"\nassert solution(\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\") == \"5\"\nassert solution(\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\") == \"4\"\nassert solution(\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\") == \"3\"\nassert solution(\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\") == \"2\"\nassert solution(\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\") == \"1\""
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"6\\n\"\n"
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"6\"\n"
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '6'"
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\") == \"6\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"6\\n\""
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\") == \"6\\n\""
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\") == \"6\"\nassert solution(\"3 3\\n1\\n1 1\") == \"1\"\nassert solution(\"3 3\\n1\\n1 1\") == \"1\"\nassert solution(\"3 3\\n1\\n1 1\") == \"1\"\n"
    },
    {
        "number": 3777,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\") == \"6\"\n"
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\n2 0 3 0 1 1\") == \"5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6\"\nassert solution(\"1\\n0\") == \"0\\n\"\nassert solution(\"6\\n3 2 2 2 1 1\") == \"-1\""
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n2 0 3 0 1 1\") == \"5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"6\\n3 2 2 2 1 1\") == \"-1\"\n\nassert solution(\"6\\n1\\n2\\n3\\n4\\n5\\n6\") == \"2 1\\n2 5\\n3 3\\n3 6\\n5 6\"\nassert solution(\"6\\n2\\n3\\n4\\n5\\n6\\n1\") == \"2 1\\n2 5\\n3 3\\n3 6\\n5 6\"\nassert solution(\"6\\n2\\n3\\n4\\n5\\n6\\n1\\n2\") == \"2 1\\n2 5\\n3 3\\n3 6\\n5 6\"\nassert solution(\"6\\n1\\n2\\n3\\n4\\n5\\n6\\n1\\n2\") == \"2 1\\n2 5\\n3 3\\n3 6\\n5 6\"\nassert solution(\"6\\n2\\n3\\n4\\n5\\n6\\n1\\n2\\n3\") == \"2 1\\n2 5\\n3 3\\n3 6\\n5 6\"\nassert solution(\"6\\n1\\n2\\n3\\n4\\n5\\n6\\n1\\n2\\n3\") == \"2 1\\n2 5\\n3 3\\n3 6\\n5 6\"\nassert solution(\"6\\n2\\n3\\n4\\n5\\n6\\n1\\n2\\n3\\n4\") == \"2 1\\n2 5\\n3 3\\n3 6\\n5 6\"\nassert solution(\"6\\n1\\n2\\n3\\n4\\n5\\n6\\n1\\n2\\n3\\n4\") == \"2 1\\n2 5\\n3 3\\n3 6\\n5 6\"\nassert solution(\"6\\n2\\n3\\n4\\n5\\n6\\n1\\n2\\n3\\n4\\n5\") == \"2 1\\n2 5\\n3 3\\n3 6\\n5 6\"\nassert solution(\"6\\n1\\n2\\n3\\n4\\n5\\n6\\n1\\n2\\n3\\n4\\n5\") == \"2 1\\n2 5\\n3 3\\n3 6\\n5 6\"\nassert solution(\"6\\n2\\n3\\n4\\n5\\n6\\n1\\n2\\n3\\n4\\n5\\n6\") == \"2 1\\n2 5\\n3 3\\n3 6\\n5 6\"\nassert solution(\"6\\n1\\n2\\n3\\n4\\n5\\n6\\n1\\n2\\n3\\n4\\n5\\n6\") == \"2 1\\n2 5\\n3 3\\n3 6\\n5 6\"\nassert solution(\"6\\n2\\n3\\n4\\n5\\n6\\n1\\n2\\n3\\n4\\n5\\n6\\n1\") == \"2 1\\n2 5\\n3 3\\n3 6\\n5 6\"\nassert solution(\"6\\n2\\n3\\n4\\n5\\n6\\n1\\n2\\n3\\n4\\n5\\n6\\n1\\n2\") == \"2 1\\n2 5\\n3 3\\n3 6\\n5 6\"\nassert solution(\"6\\n1\\n2\\n3\\n4\\n5\\n6\\n1\\n2\\n3\\n4\\n5\\n6\\n1\\n2\") == \"2 1\\n2 5\\n3 3\\n3 6\\n5 6\"\nassert solution(\"6\\n2\\n3\\n4\\n5\\n6\\n1\\"
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n2 0 3 0 1 1\") == \"5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"6\\n3 2 2 2 1 1\") == \"-1\"\n\nprint(\"All test cases pass!\")"
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"\"\"5\n2 1\n2 5\n3 3\n3 6\n5 6\n\"\"\"\n"
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n2 0 3 0 1 1\\n\\n5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6\") == \"2 1\\n2 5\\n3 3\\n3 6\\n5 6\"\nassert solution(\"1\\n0\\n\\n0\") == \"0\"\nassert solution(\"6\\n3 2 2 2 1 1\\n\\n-1\") == \"-1\"\n"
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '''\n5\n2 1\n2 5\n3 3\n3 6\n5 6\n'''"
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6\\n\", \"Incorrect solution\""
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n2 0 3 0 1 1\\n\") == \"5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6\\n\"\nassert solution(\"1\\n0\\n\") == \"0\\n\"\nassert solution(\"6\\n3 2 2 2 1 1\\n\") == \"-1\\n\""
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"Expected: {expected}, Received: {solution(stdin)}\""
    },
    {
        "number": 3778,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '''5\n2 1\n2 5\n3 3\n3 6\n5 6'''"
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == expected, f\"The solution is incorrect. Please check the solution in the tests.\"\n\nfor d in range(0, 9):\n    expected_d = d\n    expected_decimal = int(expected_d, 8)\n    actual_decimal = int(solution(f\"{n} {d}\"))\n    assert expected_decimal == actual_decimal, f\"The solution for the given test case failed.\""
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 8\\n12 20\\n\") == \"2\\n0 4\\n\"\nassert solution(\"3 10\\n10 20 30\\n\") == \"1\\n0\\n\""
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 8\\n12 20\") == \"2\\n0 4 \\n\", \"First test case failed\"\nassert solution(\"3 10\\n10 20 30\") == \"1\\n0\", \"Second test case failed\"\n"
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output, f\"Your solution does not match the expected output.\\n\\nInput:\\n{stdin}\\n\\nOutput:\\n{solution(stdin)}\""
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"Here's the solution:\"\n"
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"Your solution goes here\""
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 8\\n12 20\\n\") == \"2\\n0 4\\n\"\nassert solution(\"3 10\\n10 20 30\\n\") == \"1\\n0 \""
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 8\\n12 20\\n\") == \"2\\n0 4 \\n\"\nassert solution(\"3 10\\n10 20 30\\n\") == \"1\\n0 \"\n"
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"answer\""
    },
    {
        "number": 3779,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 8\\n12 20\\n') == '2\\n0 4\\n'\nassert solution('3 10\\n10 20 30\\n') == '1\\n0'"
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 0 5 5\\n3 2\\n-1 -1\\n-1 0\") == \"3.729935587093555327\"\nassert solution(\"0 0 0 1000\\n100 1000\\n-50 0\\n50 0\") == \"11.547005383792516398\""
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 3.729935587093555327\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"0 0 5 5\\n3 2\\n-1 -1\\n-1 0\") == \"3.729935587093555327\"\nassert solution(\"0 0 0 1000\\n100 1000\\n-50 0\\n50 0\") == \"11.547005383792516398\""
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n0 0 5 5\n3 2\n-1 -1\n-1 0\n''') == 3.729935587093555327\n\nassert solution('''\n0 0 0 1000\n100 1000\n-50 0\n50 0\n''') == 11.547005383792516398"
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '3.729935587093555327\\n'\n"
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '3.729935587093555327', 'Expected output: 3.729935587093555327, but got:'+ solution(stdin)"
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"3.729935587093555327\"\nassert solution(stdin) == \"11.547005383792516398\"\n"
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"3.729935587093555327\"\n"
    },
    {
        "number": 3780,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('0 0 5 5\\n3 2\\n-1 -1\\n-1 0') == 3.729935587093555327\nassert solution('0 0 0 1000\\n100 1000\\n-50 0\\n50 0') == 11.547005383792516398\n"
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == 'Second\\nFirst\\nSecond\\n'\nassert solution(stdin) == 'Second\\nFirst\\nSecond\\n'\nassert solution(stdin) == 'Second\\nFirst\\nSecond\\n'\nassert solution(stdin) == 'Second\\nFirst\\nSecond\\n'\nassert solution(stdin) == 'Second\\nFirst\\nSecond\\n'\nassert solution(stdin) == 'Second\\nFirst\\nSecond\\n'"
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\n# Example usage\\nstdin = \"3\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\"\\nfor _ in range(int(stdin)):\\n    stdin = stdin.strip()\\n    moves = stdin.split()[:2]\\n    print(solution(stdin))\\n\\n# Test cases\\ntest_cases = [(\"3\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\", \"Second\"),\\n             (\"1\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\", \"Second\"),\\n             (\"1\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\", \"First\"),\\n             (\"3\\n1\\n10\\n2"
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\") == \"Second\\nFirst\\nSecond\"\n"
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"Second\\nFirst\\nSecond\\n\"\n"
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"First\\n\"\nassert solution(input()) == \"Second\\n\""
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162') == 'Second\\nFirst\\nSecond'"
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"\"\"3\n1\n10\n2\n1 2\n21\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\"\"\") == \"Second\\nFirst\\nSecond\""
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\") == \"Second\\nFirst\"\nassert solution(\"4\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\") == \"First\"\nassert solution(\"6\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\\n\") == \"Second\"\n"
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\\n\") == \"Second\\nFirst\\nSecond\"\nassert solution(\"3\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\\n\") == \"Second\\nFirst\\nSecond\"\nassert solution(\"4\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\\n\") == \"First\\nFirst\\nSecond\"\nassert solution(\"5\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\\n\") == \"First\\nFirst\\nSecond\"\nassert solution(\"6\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 70680367"
    },
    {
        "number": 3781,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1\\n10\\n2\\n1 2\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\\n\") == \"Second\\nFirst\\nSecond\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5 3 2\\n4 3 1 5 2\\n') == '1\\n'"
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3 2\\n4 3 1 5 2\") == \"1\""
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3 2\\n4 3 1 5 2\") == \"1\"\nassert solution(\"5 3 2\\n1 2 3 4 5\") == \"1\"\nassert solution(\"5 3 2\\n1 2 3 4 5 6 7 8 9 10\") == \"1\"\nassert solution(\"5 3 2\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\") == \"1\"\nassert solution(\"5 3 2\\n
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '1\\n'\n"
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1\\n\"\n"
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('5 3 2\\n4 3 1 5 2') == '1'"
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=r\"\"\"\n5 3 2\n4 3 1 5 2\n\"\"\") == \"1\\n\"\n"
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3 2\\n4 3 1 5 2\") == \"1\"\nassert solution(\"5 3 2\\n4 3 1 5 2\\n5 3 2\\n4 3 1 5 2\\n5 3 2\\n4 3 1 5 2\") == \"2\"\nassert solution(\"5 3 2\\n4 3 1 5 2\\n5 3 2\\n4 3 1 5 2\\n5 3 2\\n4 3 1 5 2\\n5 3 2\\n4 3 1 5 2\\n5 3 2\\n4 3 1 5 2\\n5 3 2\\n4 3 1 5 2\\n5 3 2\\n4 3 1 5 2\\n5 3 2\\n4 3 1 5 2\\n5 3 2\\n4 3 1 5 2\\n5 3 2\\n4 3 1 5 2\\n5 3 2\\n4 3 1 5 2\\n5 3 2\\n4 3 1 5 2\\n5 3 2\\n4 3 1 5 2\\n5 3 2\\n4 3 1 5 2\\n5 3 2\\n4 3 1 5 2\\n5 3 2\\n4 3 1 5 2\\n5 3 2\\n4 3 1 5 2\\n5 3 2\\n4 3 1 5 2\\n5 3 2\\n4 3 1 5 2\\n5 3 2\\n4 3 1 5 2\\n5 3 2\\n4 3 1 5 2\\n5 3 2\\n4 3 1 5 2\\n5 3 2\\n4 3 1 5 2\\n5 3 2\\n4 3 1 5 2\\n5 3 2\\n4 3 1 5 2\\n5 3 2\\n4 3 1 5 2\\n5 3 2\\n4 3 1 5 2\\n5 3 2\\n4 3 1 5 2\\n5 3 2\\n4 3 1 5 2\\n5 3 2\\n4 3 1 5 2\\n5 3 2\\n4 3 1 5 2\\n5 3 2\\n4 3 1 5 2\\n5 3 2\\n4 3 1 5 2\\n5 3 2\\n4 3 1 5 2\\n5 3 2\\n4 3 1 5 2\\n5 3 2\\n4 3 1 5 2\\n5 3 2\\n4 3 1 5 2\\n5 3 2\\n4 3 1 5 2\\n5 3 2\\n4 3 1 5 2\\n5 3 2\\n4 3 1 5 2\\n5 3 2\\n4 3 1 5 2\\n5 3 2\\n4 3 1 5 2\\n5 3 2\\n4 3 1 5 2\\n5 3 2\\n4 3 1 5 2\\n5 3 2\\n4 3 1 5 2\\n5 3 2\\n4 3 1 5 2\\n5 3 2\\n4 3 1 5 2\\n5 3 2\\n4 3 1 5 2\\n5 3 2\\n4 3 1 5 2\\n5 3 2\\n4 3 1 5 2\\n5 3 2\\n4 3 1 5 2\\n5 3 2\\n4 3 1 5 2\\n5"
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3 2\\n4 3 1 5 2\") == \"1\""
    },
    {
        "number": 3782,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('input.txt').read()) == '1'\n"
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"24\"\n\nfrom itertools import combinations\nfrom functools import reduce"
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\""
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"24\"\nassert solution(\"5 3\") == \"5000\"\nassert solution(\"6 1\") == \"0\"\nassert solution(\"7 1\") == \"1\"\nassert solution(\"100 1\") == \"1\"\nassert solution(\"100000 1\") == \"1\"\n\nfrom typing import List"
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 2') == '24'"
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"24\""
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"24\""
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 2') == '24'"
    },
    {
        "number": 3783,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 1') == '1\\n'\nassert solution('3 2') == '24\\n'\n"
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1208453685\", \"Expected 1208453685, but got {}\".format(solution())\nassert solution() == \"6\", \"Expected 6, but got {}\".format(solution())\nassert solution() == \"3\", \"Expected 3, but got {}\".format(solution())\nassert solution() == \"1196\", \"Expected 1196, but got {}\".format(solution())\nassert solution() == \"64921457\", \"Expected 64921457, but got {}\".format(solution())"
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 6\n\nassert solution() == 3\n\nassert solution() == 1196\n\nassert solution() == 64921457"
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"Output\", \"Invalid output format.\""
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3, 2) == 6\nassert solution(4, 4) == 3\nassert solution(7, 3) == 1196\nassert solution(31, 8) == 64921457\n"
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(31) == \"6\"\nassert solution(4) == \"3\"\nassert solution(7) == \"1196\"\nassert solution(3) == \"64921457\"\n"
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2\") == \"6\"\nassert solution(\"4 4\") == \"3\"\nassert solution(\"7 3\") == \"1196\"\nassert solution(\"31 8\") == \"64921457\""
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"6\", \"Output should be '6'.\""
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(31) == '64921457'\nassert solution(4) == '3'\nassert solution(7) == '1196'\nassert solution(3) == '6'"
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == \"6\"\nassert solution(4) == \"3\"\nassert solution(7) == \"1196\"\nassert solution(31) == \"64921457\""
    },
    {
        "number": 3784,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"6\", \"Incorrect output\"\n"
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == '''#.X#\nX.#.\n"
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4 2\\n#..#\\n..#.\\n#...\") == \".X#\"\nassert solution(\"5 4 5\\n#...\\n#.#.\\n.#..\\n...#\\n.#.#\") == \"#XXX\\n#X#.\\nX#..\\n...#\\n.#.#\""
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4 2\\n#..#\\n..#.\\n#...\") == \".X#\"\nassert solution(\"5 4 5\\n#...\\n#.#.\\n.#..\\n...#\\n.#.#\") == \"#XXX\\n#X#.X\\nX#..X\\n...#X\\n.#.#X\""
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 4 2\\n#..#\\n..#.\\n#...') == '#.X#\\nX.#.\\n#...\\n'\nassert solution('5 4 5\\n#...\\n#.#.\\n.#..\\n...#\\n.#.#') == '#XXX\\n#X#.X\\nX#..#\\n...#X\\n.#.#\\n'\n\nfrom typing import List"
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3 4 2\n"
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n    3 4 2\n"
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4 2\\n#..#\\n..#.\\n#...\") == \"#XXX\\n#X#.\\nX#..\\n...#\\n.#.#\"\nassert solution(\"5 4 5\\n#...\\n#.#.\\n.#..\\n...#\") == \"#XXX\\n#X#.\\nX#..\\n...#\\n.#.#\"\nassert solution(\"5 4 3\\n#...#\") == \"#XXX\\n#X#.\\nX#..\\n...#\\n.#.#\""
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"X.X\\nX..\\nX..\\n\"\n"
    },
    {
        "number": 3785,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4 2\") == \".X#\"\nassert solution(\"5 4 5\") == \"#XXX\""
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 1\\n\") == \"1\\n\"\nassert solution(\"5\\n1 2 2 2\\n\") == \"3\\n\"\nassert solution(\"18\\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4\\n\") == \"4\\n\""
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 1\") == \"1\\n\", \"Expected output 1, but got: \" + solution(\"3\\n1 1\")"
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 1\") == \"1\"\nassert solution(\"5\\n1 2 2 2\") == \"3\"\nassert solution(\"18\\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4\") == \"4\""
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Input\\n3\\n1 1\\n\") == \"Output\\n1\\n\"\nassert solution(\"Input\\n5\\n1 2 2 2\\n\") == \"Output\\n3\\n\"\nassert solution(\"Input\\n18\\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4\\n\") == \"Output\\n4\\n\""
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n1 1') == '1'\nassert solution('5\\n1 2 2 2') == '3'\nassert solution('18\\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4') == '4'\n"
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected, f\"Testcase {i+1} failed: expected {expected}, got {solution(stdin)}\""
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == '1\\n'\n"
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 1\") == \"1\\n\"\nassert solution(\"5\\n1 2 2 2\") == \"3\\n\"\nassert solution(\"18\\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4\") == \"4\\n\""
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n1 1\\n') == '1\\n'\nassert solution('5\\n1 2 2 2\\n') == '3\\n'\nassert solution('18\\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4\\n') == '4\\n'"
    },
    {
        "number": 3786,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n1 1\\n') == '1\\n'\nassert solution('5\\n1 2 2 2\\n') == '3\\n'\nassert solution('18\\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4\\n') == '4\\n'"
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3 2\") == \"2 4 1 5 3\""
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 3 2\") == \"2 4 1 5 3\\n\""
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3 2\") == \"2 4 1 5 3\\n\""
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3 2\") == \"2 4 1 5 3\"\n\nassert solution(\"10 5 3\") == \"1 3 5 10\"\n\nassert solution(\"10 10 10\") == \"-1\""
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 3 2') == '2 4 1 5 3'\nprint(solution('5 3 2'))"
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3 2\") == \"2 4 1 5 3\""
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3 2\\n\") == \"2 4 1 5 3\\n\"\nassert solution(\"5 6 4\\n\") == \"-1\\n\""
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 3 2\") == \"2 4 1 5 3\"\nassert solution(\"1 2 3\") == \"-1\"\nassert solution(\"1 2\") == \"1 2\"\nassert solution(\"1\") == \"1\"\nprint(\"All test cases passed successfully\")"
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2 4 1 5 3\", \"Incorrect output\"\n"
    },
    {
        "number": 3787,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 3 2\") == \"2 4 1 5 3\""
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"Yes\"\nassert solution() == \"No\"\nassert solution() == \"Yes\""
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Input\") == \"Yes\", \"The solution is incorrect.\"\nassert solution(\"Input\") == \"No\", \"The solution is incorrect.\"\nassert solution(\"Input\") == \"No\", \"The solution is incorrect.\"\nassert solution(\"Input\") == \"No\", \"The solution is incorrect.\""
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\n3 6 9 18 36 108\") == \"Yes\\n\"\nassert solution(\"2\\n7 17\") == \"No\\n\"\nassert solution(\"9\\n4 8 10 12 15 18 33 44 81\") == \"Yes\\n\""
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 'No'\nassert solution(6) == 'Yes'\nassert solution(2) == 'No'\nassert solution(9) == 'Yes'"
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Input\\n6\\n3 6 9 18 36 108\\n\") == \"Yes\\n\"\nassert solution(\"Input\\n2\\n7 17\\n\") == \"No\\n\"\nassert solution(\"Input\\n9\\n4 8 10 12 15 18 33 44 81\\n\") == \"Yes\\n\""
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, 6, 9, 18, 36, 108) == 'Yes'\nassert solution(2, 7, 17) == 'No'\nassert solution(9, 4, 8, 10, 12, 15, 18, 33, 44, 81) == 'Yes'"
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"No\"  # expected output: \"No\""
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Input\") == \"Yes\"\nassert solution(\"Input\") == \"No\"\nassert solution(\"Input\") == \"Yes\""
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution( \"\"\"6\n3 6 9 18 36 108\"\"\") == \"Yes\"\nassert solution( \"\"\"2\n7 17\"\"\") == \"No\"\nassert solution( \"\"\"9\n4 8 10 12 15 18 33 44 81\"\"\") == \"Yes\""
    },
    {
        "number": 3788,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n3 6 9 18 36 108\") == \"Yes\"\nassert solution(\"2\\n7 17\") == \"No\"\nassert solution(\"9\\n4 8 10 12 15 18 33 44 81\") == \"Yes\""
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6\\na_1 a_2 -6 a_4 a_5 a_3\\n\") == \"12\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"12\""
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"12\", \"Test failed\""
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n1 2 -6 4 5 3\") == \"12\"\nassert solution(\"5\\n2 1 3 -2 -4\") == \"5\"\nassert solution(\"7\\n4 5 6 -5 2 -8 3\") == \"60\"\nassert solution(\"8\\n-2 10 7 8 -3 9 -1 4\") == \"34\"\nassert solution(\"4\\n10 15 20 30 50 100 150 200\") == \"0\""
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('6\\n1 2 -6 4 5 3') == '12'\nassert solution('5\\n1 2 3 4 5') == '25'\nassert solution('1\\n') == '0'\nassert solution('2\\n3 4 5') == '0'\nassert solution('3\\n6 -4') == '0'"
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"12\"\n"
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n1 2 -6 4 5 3\") == \"12\""
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n1 2 -6 4 5 3\") == \"12\""
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n1 2 -6 4 5 3\") == \"12\\n\", \"Test 1\"\nassert solution(\"6\\n1 2 -6 4 5 3\\n\") == \"12\\n\", \"Test 2\"\nassert solution(\"6\\n1 2 -6 4 5 3\\n5\") == \"18\\n\", \"Test 3\"\nassert solution(\"6\\n1 2 -6 4 5 3\\n5 10\") == \"200\\n\", \"Test 4\"\nassert solution(\"6\\n1 2 -6 4 5 3\\n5 10 100\") == \"200\\n\", \"Test 5\""
    },
    {
        "number": 3789,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"12\", \"The solution is incorrect.\"\n"
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n3 1 4 2\") == \"5\"\nassert solution(\"4 5\\n1 2 3 4 5\") == \"5\"\nassert solution(\"5 1\\n1 2 3 4 5\") == \"1\"\nassert solution(\"5 2\\n1 2 3 4 5\") == \"2\"\nassert solution(\"4 5\\n1 2 3 4 5\") == \"5\"\n\nfor i in range(1, 11):\n    assert solution(f\"{i} {i}\\n{i + 1} {i + 2}\\n{i + 3} {i + 4}\\n{i + 5}\") == str(i)"
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n3 1 4 2\\n\") == \"5\\n\"\nassert solution(\"1 2 3 4 5\\n\") == \"10\\n\"\nassert solution(\"10 5 3 2 1\\n\") == \"15\\n\"\nassert solution(\"1 2 3 4 5\\n\") == \"10\\n\"\nassert solution(\"10 5 3 2 1\\n\") == \"15\\n\""
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n3 1 4 2\") == \"5\" # correct output\n"
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 3\\n3 1 4 2\\n') == '5\\n'"
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n3 1 4 2\") == \"5\", \"The output should be 5.\""
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n3 1 4 2\") == \"5\"\nassert solution(\"5 3\\n3 1 4 2 3 1 4 2\") == \"5\""
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n3 1 4 2\") == 5\nassert solution(\"6 3\\n1 2 3 4 5\") == 3\nassert solution(\"1 1\\n1 1 1\") == 1\nassert solution(\"1 2\\n3 2\") == 2\nassert solution(\"1 1\\n1 1\") == 1"
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"5\\n\", \"Output does not match expected output.\""
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n3 1 4 2\\n\") == \"5\\n\"\nassert solution(\"3 2\\n2 3 2\\n1 4 4\\n\") == \"3\\n\"\nassert solution(\"3 1\\n1 2 2\\n\") == \"3\\n\"\nassert solution(\"4 2\\n2 1 1 3\\n\") == \"3\\n\"\nassert solution(\"5 3\\n3 2 3 4 5\\n\") == \"6\\n\"\nassert solution(\"1 1\\n1 2 3\\n\") == \"2\\n\"\nassert solution(\"4 1\\n2 3 4\\n\") == \"2\\n\"\nassert solution(\"1 1 1 1 1\\n1 2 3 4 5\\n\") == \"5\\n\""
    },
    {
        "number": 3790,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n3 1 4 2\") == \"5\""
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 2 3\") == \"0 0\\n\"\nassert solution(\"3\\n2 3 1\") == \"0 1\\n\"\nassert solution(\"3\\n3 2 1\") == \"2 1\\n\""
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n2 3 1\\n3\\n3 2 1\") == \"0 0\"\nassert solution(\"3\\n2 3 1\\n3\\n3 2 1\") == \"0 1\"\nassert solution(\"3\\n3 2 1\\n3\\n3 2 1\") == \"2 1\""
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Test failed\""
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n2 3 1\") == \"0 0\\n\"\nassert solution(\"3\\n2 3 1\\n3\\n3 2 1\") == \"0 1\\n\"\nassert solution(\"3\\n3 2 1\\n3\\n2 1 3\") == \"2 1\\n\""
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(str(3)) == '0 0'\nassert solution(str(3)) == '0 1'\nassert solution(str(3)) == '2 1'"
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n1 2 3\\n3 2 1\\n3 3 2\\n') == '0 0\\n0 1\\n2 1\\n'"
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '0 0\\n0 1\\n2 1'"
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 2 3\") == \"0 0\"\nassert solution(\"3\\n2 3 1\") == \"0 1\"\nassert solution(\"3\\n3 2 1\") == \"2 1\""
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n1 2 3\\n3\\n2 3 1\\n3\\n3 2 1') == '0 0\\n0 1\\n2 1'\nassert solution('3\\n2 3 1\\n3\\n3 2 1') == '0 1\\n2 1'\nassert solution('3\\n3 2 1\\n3\\n3 2 1') == '2 1'"
    },
    {
        "number": 3791,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Expected {expected_output}, got {solution(input())}.\"\n\nn = int(stdin.readline().strip())\np = list(map(int, stdin.readline().strip().split()))"
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 4\\na\\nb\\n\") == \"6\"\nassert solution(\"2 4\\na\\nb\\n\") == \"6\"\nassert solution(\"3 3\\na\\nb\\nc\\n\") == \"8\"\nassert solution(\"4 5\\nabbb\\naba\\n\") == \"8\""
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 4\\na\\nb\\n\") == \"6\"\nassert solution(\"3 3\\naba\\nbba\\n\") == \"8\"\nassert solution(\"4 5\\nabbb\\naaaa\\n\") == \"8\"\n"
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 4\\naab\\nbbb\") == \"6\"\nassert solution(\"3 3\\nabba\\nbbba\") == \"8\"\nassert solution(\"4 5\\nabbb\\nbaaa\") == \"8\""
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 4\\naa\\nbb\") == \"6\\n\"\nassert solution(\"3 3\\naba\\nbba\") == \"8\\n\"\nassert solution(\"4 5\\nabbb\\nbaaa\") == \"8\\n\""
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 4\\naa\\nbb\\n\") == \"6\\n\"\nassert solution(\"3 3\\naba\\nbba\\n\") == \"8\\n\"\nassert solution(\"4 5\\nabbb\\nbaaa\\n\") == \"8\\n\""
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 4\\naa\\nbb\\n\") == \"6\"\nassert solution(\"3 3\\naba\\nbba\\n\") == \"8\"\nassert solution(\"4 5\\nabbb\\nbaaa\\n\") == \"8\""
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''2 4\naa\nbb''') == '6'\nassert solution('''3 3\naba\nbba''') == '8'\nassert solution('''4 5\nabbb\nbaaa''') == '8'\n"
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 4\\naa\\nbb\\n\") == \"6\"\nassert solution(\"2 4\\naa\\nbb\\n\") == \"6\"\nassert solution(\"3 3\\nab\\nba\\n\") == \"8\"\nassert solution(\"4 5\\nabbb\\nbaaa\\n\") == \"8\""
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 4\\na\\nb\\n\") == \"6\"\nassert solution(\"3 3\\na\\nb\\nc\\n\") == \"8\"\nassert solution(\"4 5\\nabbb\\nbaaa\\n\") == \"8\""
    },
    {
        "number": 3792,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(example1) == 6\nassert solution(example2) == 8\nassert solution(example3) == 8\n"
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"NO\""
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"NO\"\n"
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == 'YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1'"
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''0 0 0\n0 0 1\n0 0 1\n0 0 1\n0 1 1\n0 1 1\n0 1 1\n1 1 1\n''') == 'YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1'\n\nassert solution('''0 0 0\n0 0 0\n0 0 0\n0 0 0\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n''') == 'NO'\n\nassert solution('''0 0 0\n0 0 0\n0 0 0\n0 0 0\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n''') == 'YES\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0"
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"NO\"\n\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"0 0 0\n0 0 1\n0 0 1\n0 0 1\n0 1 1\n0 1 1\n0 1 1\n1 1 1\n\"\"\") == \"YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1\"\n\nassert solution(\"\"\"0 0 0\n0 0 0\n0 0 0\n0 0 0\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n\"\"\") == \"NO\""
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == 'YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1'"
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == 'YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1'\nassert solution('0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == 'NO'"
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0"
    },
    {
        "number": 3793,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"NO\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n0 0 0\\n0 0 0\\n0 0 0\\n\") == \"NO\""
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Testcase {test_case_num} failed: {solution(input())}!= {expected_output}\"\n"
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(4) == \"YES\\n2 2 1 1\"\nassert solution(5) == \"YES\\n2 1 2 1 1\"\nassert solution(5) == \"NO\\n2 1 2 1 1\"\n"
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n2 3 6 7\") == \"YES\\n2 2 1 1\\n\"\nassert solution(\"5\\n6 15 35 77 22\") == \"YES\\n2 1 2 1 1\\n\"\nassert solution(\"5\\n6 10 15 1000 75\") == \"NO\\ndef solution(stdin: str) -> str:\n    pass\""
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n2 3 6 7\\n\") == \"YES\\n2 2 1 1\\n\"\nassert solution(\"5\\n6 15 35 77 22\\n\") == \"YES\\n2 1 2 1 1\\n\"\nassert solution(\"5\\n6 10 15 1000 75\\n\") == \"NO\""
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3 6 7\") == \"YES\"\nassert solution(\"5 6 15 35 77 22\") == \"YES\"\nassert solution(\"5 6 10 15 1000 75\") == \"NO\""
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 3 6 7') == 'YES\\n2 2 1 1'\nassert solution('5 6 15 35 77 22') == 'YES\\n2 1 2 1 1'\nassert solution('5 6 10 15 1000 75') == 'NO'"
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(4) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"YES\""
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Input\") == \"YES\\n2 2 1 1\\nYES\\n2 1 2 1 1\\nNO\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3794,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"5\") == \"YES\"\nassert solution(\"5\") == \"YES\"\nassert solution(\"5\") == \"YES\"\nassert solution(\"5\") == \"NO\""
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"100\\n60\\n70\") == \"40\"\nassert solution(\"410\\n55\\n70\") == \"5\"\nassert solution(\"600\\n60\\n70\") == \"0\""
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Incorrect output for test case #{test_case_num}\""
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"100\\n60\\n70\") == \"40\"\nassert solution(\"410\\n55\\n70\") == \"5\"\nassert solution(\"600\\n60\\n70\") == \"0\""
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"100\\n60\\n70\\n\") == \"40\\n\"\nassert solution(\"410\\n55\\n70\\n\") == \"5\\n\"\nassert solution(\"600\\n60\\n70\\n\") == \"0\\n\""
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"410\\n55\\n70\\n\") == \"5\"\nassert solution(\"600\\n60\\n70\\n\") == \"0\""
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(open(\"input.txt\").read()) == \"40\"\nassert solution(open(\"example1.txt\").read()) == \"40\"\nassert solution(open(\"example2.txt\").read()) == \"0\"\nassert solution(open(\"example3.txt\").read()) == \"5\""
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"100\\n60\\n70\\n\") == \"40\"\nassert solution(\"410\\n55\\n70\\n\") == \"5\"\nassert solution(\"600\\n60\\n70\\n\") == \"0\""
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"100\\n60\\n70\") == \"40\"\nassert solution(\"410\\n55\\n70\") == \"5\"\nassert solution(\"600\\n60\\n70\") == \"0\""
    },
    {
        "number": 3795,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"100\\n60\\n70\\n\") == \"40\"\nassert solution(\"410\\n55\\n70\\n\") == \"5\"\nassert solution(\"600\\n60\\n70\\n\") == \"0\"\n"
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, got: {solution(input())}\"\n"
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('12\\n3 1 4 1 5 9 2 6 5 3 5 8\\n\\n5\\n1 1 1 1 1') == '12\\n3 4\\n1 2 3 5\\n3 1 5 4\\n5 6 8 9'\nassert solution('5\\n1 1 1 1 1') == '1\\n1 1'\nassert solution('1\\n1\\n1\\n1\\n1') == '1'"
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected, f\"Test failed: expected '{expected}', got '{solution(input())}'\""
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"12\\n3 1 4 1 5 9 2 6 5 3 5 8\") == \"12\\n3 4\\n1 2 3 5\\n3 1 5 4\\n5 6 8 9\""
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"12\\n3 1 4 1 5 9 2 6 5 3 5 8\") == \"12\\n3 4\\n1 2 3 5\\n3 1 5 4\\n5 6 8 9\"\nassert solution(\"5\\n1 1 1 1 1\") == \"1\\n1 1 1\""
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"12\\n3 1 4 1 5 9 2 6 5 3 5 8\\n\") == \"12\\n3 4\\n1 2 3 5\\n3 1 5 4\\n5 6 8 9\\n\"\nassert solution(\"5\\n1 1 1 1 1\\n\") == \"1\\n1 1\\n1\\n\""
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"12\\n3 1 4 1 5 9 2 6 5 3 5 8\") == \"12\\n3 4\\n1 2 3 5\\n3 1 5 4\\n5 6 8 9\"\nassert solution(\"5\\n1 1 1 1 1\") == \"1\\n1 1 1\""
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"12\\n3 1 4 1 5 9 2 6 5 3 5 8\") == \"12\\n3 4\\n1 2 3 5\\n3 1 5 4\\n5 6 8 9\"\nassert solution(\"5\\n1 1 1 1 1\") == \"1\\n1 1\""
    },
    {
        "number": 3796,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(open('example.in', 'r').read()) == '12\\n3 4\\n1 2 3 5\\n3 1 5 4\\n5 6 8 9'"
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 1\\n1 3 3\\n\") == \"6\"\nassert solution(\"4 1\\n2 4 2\\n\") == \"16\"\nassert solution(\"5 1\\n1 2 1\\n2 3 2\\n3 4 3\\n\") == \"800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 1\\n1 3 3\\n\") == \"6\""
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\\n1 3 3\\n\") == \"6\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1\\n1 3 3\") == \"6\"\nassert solution(\"3 2\\n1 3 3\\n2 3 3\") == \"6\"\nassert solution(\"4 2\\n2 3 3\\n3 3 3\\n1 3 3\\n2 3 3\") == \"6\"\nassert solution(\"6 3\\n1 3 3\\n2 3 3\\n3 3 3\\n4 3 3\\n5 3 3\\n1 3 3\\n2 3 3\") == \"6\"\nassert solution(\"8 4\\n1 3 3\\n2 3 3\\n3 3 3\\n4 3 3\\n5 3 3\\n6 3 3\\n7 3 3\\n8 3 3\\n1 3 3\\n2 3 3\") == \"6\"\nassert solution(\"10 5\\n1 3 3\\n2 3 3\\n3 3 3\\n4 3 3\\n5 3 3\\n6 3 3\\n7 3 3\\n8 3 3\\n9 3 3\\n10 3 3\\n1 3 3\\n2 3 3\") == \"6\"\nassert solution(\"12 6\\n1 3 3\\n2 3 3\\n3 3 3\\n4 3 3\\n5 3 3\\n6 3 3\\n7 3 3\\n8 3 3\\n9 3 3\\n10 3 3\\n11 3 3\\n12 3 3\\n1 3 3\\n2 3 3\") == \"6\"\nassert solution(\"14 7\\n1 3 3\\n2 3 3\\n3 3 3\\n4 3 3\\n5 3 3\\n6 3 3\\n7 3 3\\n8 3 3\\n9 3 3\\n10 3 3\\n11 3 3\\n12 3 3\\n13 3 3\\n14 3 3\\n1 3 3\\n2 3 3\") == \"6\"\nassert solution(\"16 8\\n1 3 3\\n2 3 3\\n3 3 3\\n4 3 3\\n5 3 3\\n6 3 3\\n7 3 3\\n8 3 3\\n9 3 3\\n10 3 3\\n11 3 3\\n12 3 3\\n13 3 3\\n14 3 3\\n15 3 3\\n16 3 3\\n1 3 3\\n2 3 3\") == \"6\"\nassert solution(\"18 9\\n1 3 3\\n2 3 3\\n3 3 3\\n4 3 3\\n5 3 3\\n6 3 3\\n7 3 3\\n8 3 3\\n9 3 3\\n10 3 3\\n11 3 3\\n12 3 3\\n13 3 3\\n14 3 3\\n15 3 3\\n16 3 3\\n17 3 3\\n18 3 3\\n1 3 3\\n2 3 3\") == \"6\"\nassert solution(\"20 10\\n1 3 3\\n2 3 3\\n3 3 3\\n4 3 3\\n5 3 3\\n6 3 3\\n7 3 3\\n8 3 3\\n9 3 3\\n10 3 3\\n11 3 3\\n12 3 3\\n13 3 3\\n14 3 3\\n15 3 3\\n16 3 3\\n17 3 3\\n18 3 3\\n19 "
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '6\\n', 'Testcase failed'"
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1\\n1 3 3\\n\") == \"6\\n\"\nassert solution(\"4 1\\n1 2 3\\n2 4 6\\n3 5 9\\n\") == \"17\\n\"\nassert solution(\"5 1\\n1 2 3\\n2 3 4\\n3 4 5\\n4 5 6\\n5 6 7\\n\") == \"15768\\n\"\nassert solution(\"6 1\\n1 2 3\\n2 3 4\\n3 4 5\\n4 5 6\\n5 6 7\\n6 7 8\\n\") == \"1087216\\n\"\nassert solution(\"7 1\\n1 2 3\\n2 3 4\\n3 4 5\\n4 5 6\\n5 6 7\\n6 7 8\\n7 8 9\\n\") == \"56322560\\n\""
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1\\n1 3 3\\n\") == \"6\"\nassert solution(\"3 1\\n2 3 3\\n\") == \"12\"\nassert solution(\"3 1\\n1 2 3\\n\") == \"0\"\n\nfrom collections import Counter"
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1\\n1 3 3\\n\") == \"6\"\nassert solution(\"5 2\\n1 2 3\\n4 5 6\\n7 8 9\\n\") == \"14\"\nassert solution(\"10 1\\n2 3\\n4 5\\n6 7\\n8 9\\n10 11\\n12 13\\n14 15\\n16 17\\n18 19\\n20 21\\n22 23\\n24 25\\n\") == \"424\""
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3 1\n1 3 3\n\"\"\") == \"6\\n\"\n\nassert solution(\"\"\"\n3 2\n1 2 3\n\"\"\") == \"18\\n\"\n\nassert solution(\"\"\"\n3 2\n1 2 2\n\"\"\") == \"0\\n\"\n\nassert solution(\"\"\"\n3 1\n1 1 1\n\"\"\") == \"0\\n\"\n\nassert solution(\"\"\"\n3 2\n1 1 1\n\"\"\") == \"0\\n\"\n\nassert solution(\"\"\"\n3 2\n1 2 3\n\"\"\") == \"0\\n\"\n\nassert solution(\"\"\"\n3 2\n1 1 3\n\"\"\") == \"0\\n\"\n\nassert solution(\"\"\"\n3 2\n1 2 1\n\"\"\") == \"0\\n\"\n\nassert solution(\"\"\"\n3 2\n1 1 2\n\"\"\") == \"0\\n\"\n\nassert solution(\"\"\"\n3 2\n1 2 2\n\"\"\") == \"0\\n\"\n\nassert solution(\"\"\"\n3 2\n1 1 2\n\"\"\") == \"0\\n\"\n\nassert solution(\"\"\"\n3 2\n1 2 2\n\"\"\") == \"0\\n\"\n\nassert solution(\"\"\"\n3 2\n1 1 2\n\"\"\") == \"0\\n\"\n\nassert solution(\"\"\"\n3 2\n1 2 2\n\"\"\") == \"0\\n\"\n\nassert solution(\"\"\"\n3 2\n1 1 2\n\"\"\") == \"0\\n\"\n\nassert solution(\"\"\"\n3 2\n1 2 2\n\"\"\") == \"0\\n\"\n\nassert solution(\"\"\"\n3 2\n1 1 2\n\"\"\") == \"0\\n\"\n\nassert solution(\"\"\"\n3 2\n1 2 2\n\"\"\") == \"0\\n\"\n\nassert solution(\"\"\"\n3 2\n1 1 2\n\"\"\") == \"0\\n\"\n\nassert solution(\"\"\"\n3 2\n1 2 2\n\"\"\") == \"0\\n\"\n\nassert solution(\"\"\"\n3 2\n1 1 2\n\"\"\") == \"0\\n\"\n\nassert solution(\"\"\"\n3 2\n1 2 2\n\"\"\") == \"0\\n\"\n\nassert solution(\"\"\"\n3 2\n1 1 2\n\"\"\") == \"0\\n\"\n\nassert solution(\"\"\"\n3 2\n1 2 2\n\"\"\") == \"0\\n\"\n\nassert solution(\"\"\"\n3 2\n1 1 2\n\"\"\") == \"0\\n\"\n\nassert solution(\"\"\"\n3 2\n1 2 2\n\"\"\") == \"0\\n\"\n\nassert solution(\"\"\"\n3 2\n1 1 2\n\"\"\") == \"0\\n\"\n\nassert solution(\"\"\"\n3 2\n1 2 2\n\"\"\") == \"0\\n\"\n\nassert solution(\"\"\"\n3 2\n1 1 2\n\"\"\") == \"0\\n\"\n\nassert solution(\"\"\"\n3 2\n1 2 2\n\"\"\") == \"0\\n\"\n\nassert solution(\"\"\"\n3 2\n1 1 2\n\"\"\") == \"0\\n\"\n\nassert solution(\"\"\"\n3 2\n1 2 2\n\"\"\") == \"0\\n\"\n\nassert solution(\"\"\"\n3 2\n1 1 2\n\"\"\") == \"0\\n\"\n\nassert solution(\"\"\"\n3 2\n1 2 2\n\"\"\") == \"0\\n\"\n\nassert solution(\"\"\"\n3 2\n1 1 2\n\"\"\") == \"0\\n\"\n\nassert solution(\"\"\"\n3 2\n1 2 2\n\"\"\") == \"0\\n\"\n\nassert solution(\"\"\"\n3 2\n1 1 2\n\"\"\") == \"0\\n\"\n\nassert solution(\"\"\"\n3 2\n1 2 2\n\"\"\") == \"0\\n\"\n\nassert solution(\"\"\"\n3 2\n1 1 2\n\"\"\") == \"0\\n\"\n\nassert solution(\"\"\"\n3 2\n1 2 2\n\"\"\") == \"0\\n\"\n\nassert solution(\"\"\"\n3 2\n1 1 2\n\"\"\") == \"0\\n\"\n\nassert solution(\"\"\"\n3 2\n1 2 2\n\"\"\") == \"0\\n\"\n\nassert solution(\"\"\"\n3 2\n1 1 2\n\"\"\") == \"0\\n\"\n\nassert solution(\"\"\"\n3 2\n1 2 2\n\"\"\") == \"0\\n\"\n\nassert solution(\"\"\"\n3 2\n1 1 2"
    },
    {
        "number": 3797,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1\\n1 3 3\") == \"6\\n\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(b'\\n87654\\n30') == '10'"
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"87654\\n30\") == 10"
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"87654\\n30\") == \"10\"\nassert solution(\"1000000\\n500000\") == \"-1\"\n"
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"87654\\n30\\n\") == \"10\"\nassert solution(\"87654\\n300\\n\") == \"-1\"\nassert solution(\"123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901"
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"87654 30\") == \"10\"\nassert solution(\"100 87654\") == \"138\"\nassert solution(\"1000000000 87654\") == \"-1\"\nassert solution(\"500 123\") == \"-1\"\nassert solution(\"5 3\") == \"2\""
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"87654\\n30\") == \"10\"\nassert solution(\"123456\\n20\") == \"-1\""
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"87654\") == \"10\"\nassert solution(\"30\") == \"-1\"\nassert solution
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input(\"Enter n: \")) == \"10\""
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('87654\\n30') == '10'"
    },
    {
        "number": 3798,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"87654\") == \"10\"\nassert solution(\"30\") == \"10\"\nassert solution(\"987654321\") == \"-1\""
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"aba\") == \"Second\", \"Takahashi, who goes first, cannot perform the operation, since removal of the b, which is the only character not at either ends of s, would result in s becoming aa, with two as neighboring.\""
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"aba\") == \"Second\", \"Expected 'Second', got '{}'.\".format(solution(\"aba\"))"
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"aba\") == \"Second\"\n"
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"aba\") == \"Second\", \"Expected 'Second', but got: {}\".format(solution(\"aba\"))\nassert solution(\"aabb\") == \"First\", \"Expected 'First', but got: {}\".format(solution(\"aabb\"))\nassert solution(\"acdb\") == \"Second\", \"Expected 'Second', but got: {}\".format(solution(\"acdb\"))\nassert solution(\"abcb\") == \"First\", \"Expected 'First', but got: {}\".format(solution(\"abcb\"))\nassert solution(\"abbc\") == \"Second\", \"Expected 'Second', but got: {}\".format(solution(\"abbc\"))"
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"aba\") == \"Second\""
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('aba') == 'Second'"
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"aba\") == \"Second\"\nassert solution(\"cat\") == \"First\"\nassert solution(\"abcdefg\") == \"First\"\nassert solution(\"hello\") == \"First\"\nassert solution(\"good\") == \"Second\"\n"
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aba\") == \"Second\"\n"
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('aba') == 'Second', \"Expected Output: Second, Actual Output: {}\".format(solution('aba'))  # Test Case 1\nassert solution('acba') == 'First', \"Expected Output: First, Actual Output: {}\".format(solution('acba'))  # Test Case 2\nassert solution('ababa') == 'Second', \"Expected Output: Second, Actual Output: {}\".format(solution('ababa'))  # Test Case 3\nassert solution('abbaca') == 'First', \"Expected Output: First, Actual Output: {}\".format(solution('abbaca'))  # Test Case 4\nassert solution('aaabbaca') == 'Second', \"Expected Output: Second, Actual Output: {}\".format(solution('aaabbaca'))  # Test Case 5"
    },
    {
        "number": 3799,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"aba\") == \"Second\""
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(10) == 6\nassert solution(16) == 40"
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"6\\n\"\nassert solution() == \"40\\n\""
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10\\n12345\") == \"6\"\nassert solution(\"16\\n439873893693495623498263984765\") == \"40\""
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"Output\" # correct output\n"
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 6\nassert solution(25) == 10\nassert solution
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == 'Output'"
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('10') == '6'\nassert solution('16') == '40'"
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    '''\n    10\n    12345\n    '''\n) == 6\n\nassert solution(\n    '''\n    16\n    439873893693495623498263984765\n    '''\n) == 40"
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10\\n12345\") == \"6\\n\"\nassert solution(\"16\\n439873893693495623498263984765\") == \"40\\n\""
    },
    {
        "number": 3800,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10\\n12345\") == \"6\"\nassert solution(\"16\\n439873893693495623498263984765\") == \"40\""
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '332748119'\nassert solution() == '332748119'\nassert solution() == '3'\nassert solution() == '160955686'\nassert solution() == '185138929'\nassert solution() == '974061117'"
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Solution: {solution(input())}, Expected: {expected}\"\n\nn, m = map(int, stdin.split())\na = list(map(int, input().split()))\nw = list(map(int, input().split()))"
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1\\n0 1\\n2 1\\n\") == \"332748119\\n332748119\\n\"\nassert solution(\"1 2\\n1\\n1\\n\") == \"3\\n\"\nassert solution(\"3 3\\n0 1 1\\n4 3 5\\n\") == \"160955686\\n185138929\\n974061117\\n\"\n\nfor line in stdin.readlines():\n    n, m = map(int, line.strip().split())\n    a = list(map(int, input().split()))\n    w = list(map(int, input().split()))\n    print(\" \".join(map(str, solution(a, w))))"
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n2 1\n0 1\n2 1\n''') == '332748119\\n332748119\\n'\n\nassert solution('''\n1 2\n1\n1\n''') == '3\\n'\n\nassert solution('''\n3 3\n0 1 1\n4 3 5\n''') == '160955686\\n185138929\\n974061117\\n'"
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n2\\n2\\n\") == \"332748119\\n332748119\\n\"\nassert solution(\"1\\n1\\n1\\n\") == \"3\\n\"\nassert solution(\"3\\n0\\n1\\n1\\n\") == \"160955686\\n185138929\\n974061117\\n\""
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1\\n0 1\\n2 1\\n\") == \"332748119\\n332748119\\n\"\nassert solution(\"1 2\\n1\\n1\\n\") == \"3\\n\"\nassert solution(\"3 3\\n0 1 1\\n4 3 5\\n\") == \"160955686\\n185138929\\n974061117\\n\""
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Test case {test_case_num + 1} failed\"\n\ntest_case_num += 1"
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output\nprint(output)"
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(r\"2 1\\n0 1\\n2 1\") == \"332748119\"\nassert solution(r\"1 2\\n1\") == \"3\"\nassert solution(r\"3 3\\n0 1 1\\n4 3 5\") == \"160955686\"\nassert solution(r\"1 5\\n0\\n1\\n0\\n0\\n0\\n1\\n0\\n0\\n1\\n0\\n0\\n1\\n1\\n0\\n1\\n0\\n1\\n1\\n0\\n1\\n0\\n1\\n1\\n1\\n1\\n0\\n1\\n0\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 3801,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_output, f\"The solution is incorrect. Expected: {expected_output}, Received: {solution(stdin)}\"\n"
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('AJKEQSLOBSROFGZ\\nOVGURWZLWVLUXTH\\nOZ') == 'ORZ'\nassert solution('AA\\nA\\nA') == 0"
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"ORZ\", \"Output should be 'ORZ', but got '{}'.\".format(solution(input()))"
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"AJKEQSLOBSROFGZ\") == \"ORZ\", \"Test case 1 failed\"\nassert solution(\"OVGURWZLWVLUXTH\") == \"OZ\", \"Test case 2 failed\"\nassert solution(\"AA\") == \"0\", \"Test case 3 failed\""
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin='AJKEQSLOBSROFGZ\\nOVGURWZLWVLUXTH\\nOZ') == 'ORZ'\nassert solution(stdin='AA\\nA\\nA') == '0'"
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('AJKEQSLOBSROFGZ\\nOVGURWZLWVLUXTH\\nOZ') == 'ORZ\\n', \"The output is incorrect.\"\nassert solution('AA\\nA\\nA') == '0\\n', \"The output is incorrect.\""
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('AJKEQSLOBSROFGZ') == 'ORZ', \"Test Case 1 failed\"\nassert solution('OVGURWZLWVLUXTH') == 'OZ', \"Test Case 2 failed\"\nassert solution('AA') == '0', \"Test Case 3 failed\""
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"AJKEQSLOBSROFGZ\\nOVGURWZLWVLUXTH\\nOZ\") == \"ORZ\\n\"\nassert solution(\"AA\\nA\\nA\") == \"0\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"ORZ\", \"Output should be ORZ, but it is {}\".format(solution(input()))"
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"AJKEQSLOBSROFGZ\") == \"ORZ\"\nassert solution(\"AA\") == \"0\""
    },
    {
        "number": 3802,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('AJKEQSLOBSROFGZ') == 'ORZ', 'The output should be ORZ'\nassert solution('AA') == '0', 'The output should be 0'\nprint('All test cases pass.')"
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 2 1\\n1 100 1\\n1 100 100\") == \"99\\n\"\nassert solution(\"100 100 100\\n1 1 1\\n1 1 1\") == \"0\\n\""
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 2 1\\n1 100 1\\n1 100 100\") == \"99\"\nassert solution(\"100 100 100\\n1 1 1\\n1 1 1\") == \"0\""
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 2 1\\n1 100 1\\n1 100 100\") == 99\nassert solution(\"100 100 100\\n1 1 1\\n1 1 1\") == 0\n\nprint(\"All tests passed.\")"
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 2 1\\n1 100 1\\n1 100 100\") == 99\nassert solution(\"100 100 100\\n1 1 1\\n1 1 1\") == 0"
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 2 1\\n1 100 1\\n1 100 100\") == \"99\\n\"\nassert solution(\"100 100 100\\n1 1 1\\n1 1 1\") == \"0\\n\""
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 2 1\\n1 100 1\\n1 100 100') == '99'\nassert solution('100 100 100\\n1 1 1\\n1 1 1') == '0'"
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2 1\\n1 100 1\\n1 100 100\") == \"99\\n\"\nassert solution(\"100 100 100\\n1 1 1\\n1 1 1\") == \"0\\n\""
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 2 1\\n1 100 1\\n1 100 100') == 99\nassert solution('100 100 100\\n1 1 1\\n1 1 1') == 0"
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 2 1\\n1 100 1\\n1 100 100\") == \"99\"\nassert solution(\"100 100 100\\n1 1 1\\n1 1 1\") == \"0\"\n\nfrom typing import List"
    },
    {
        "number": 3803,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 2 1\\n1 100 1\\n1 100 100') == '99\\n'\n\nassert solution('100 100 100\\n1 1 1\\n1 1 1') == '0\\n'"
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1\\n\") == \"1\\n\"\nassert solution(\"3 2\\n\") == \"1\\n\"\nassert solution(\"3 3\\n\") == \"0\\n\"\nassert solution(\"1000000000000 1048576\\n\") == \"118606527258\\n\""
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == '1'\nassert solution() == '1'\nassert solution() == '1'\nassert solution() == '0'\nassert solution() == '118606527258'"
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"1\\n\"\nassert solution(\"3 2\") == \"1\\n\"\nassert solution(\"3 3\") == \"0\\n\"\nassert solution(\"1000000000000 1048576\") == \"118606527258\\n\""
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 1\\n') == '1\\n'\nassert solution('3 2\\n') == '1\\n'\nassert solution('3 3\\n') == '0\\n'\nassert solution('1000000000000 1048576\\n') == '118606527258\\n'"
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1\") == \"1\", \"Test 1: Wrong output\"\nassert solution(\"3 2\") == \"1\", \"Test 2: Wrong output\"\nassert solution(\"3 3\") == \"0\", \"Test 3: Wrong output\"\nassert solution(\"1000000000000 1048576\") == \"118606527258\", \"Test 4: Wrong output\""
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\\n\") == \"1\\n\"\nassert solution(\"3 2\\n\") == \"1\\n\"\nassert solution(\"3 3\\n\") == \"0\\n\"\nassert solution(\"1000000000000 1048576\\n\") == \"118606527258\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 1\nassert solution() == 1\nassert solution() == 0\nassert solution() == 118606527258\nassert solution() == 0\nassert solution() == 0\n"
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == 1\nassert solution(3) == 1\nassert solution(3, 2) == 1\nassert solution(3, 3) == 0\nassert solution(1000000000000, 1048576) == 118606527258"
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"1\\n\"\nassert solution(input()) == \"0\\n\"\nassert solution(input()) == \"118606527258\\n\""
    },
    {
        "number": 3804,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1, 1) == 1\nassert solution(3, 2) == 1\nassert solution(3, 3) == 0\nassert solution(1000000000000, 1048576) == 118606527258"
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"-++-\") == \"Yes\"\nassert solution(\"+-\") == \"No\"\nassert solution(\"++\") == \"Yes\"\nassert solution(\"-\") == \"No\"\n"
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"-++-\") == \"Yes\"\nassert solution(\"+-\") == \"No\"\nassert solution(\"++\") == \"Yes\"\nassert solution(\"-\") == \"No\""
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"+-\") == \"Yes\", \"Expected 'Yes' but got '{}' instead.\".format(solution(\"+-\"))\nassert solution(\"++\") == \"Yes\", \"Expected 'Yes' but got '{}' instead.\".format(solution(\"++\"))\nassert solution(\"-\") == \"No\", \"Expected 'No' but got '{}' instead.\".format(solution(\"-\"))\nassert solution(\"---\") == \"No\", \"Expected 'No' but got '{}' instead.\".format(solution(\"---\"))"
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"-++-\") == \"Yes\"\nassert solution(\"+-\") == \"No\"\nassert solution(\"++\") == \"Yes\"\nassert solution(\"-\") == \"No\"\n"
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"No\""
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"-++-\") == \"Yes\", \"Testcase 1\"\nassert solution(\"+-\") == \"No\", \"Testcase 2\"\nassert solution(\"++\") == \"Yes\", \"Testcase 3\"\nassert solution(\"-\") == \"No\", \"Testcase 4\""
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"+-\") == \"Yes\"\nassert solution(\"++\") == \"Yes\"\nassert solution(\"-\") == \"No\"\nassert solution(\"+-\") == \"Yes\"\nassert solution(\"++\") == \"No\"\nassert solution(\"+-\") == \"Yes\"\nassert solution(\"+-\") == \"No\""
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"+-\") == \"Yes\"\nassert solution(\"++\") == \"Yes\"\nassert solution(\"-\") == \"No\""
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"-----\\n-+\") == \"No\" # Wrong input\nassert solution(\"-----\\n--\") == \"No\" # Wrong input\nassert solution(\"-----\\n+-\") == \"No\" # Wrong input\nassert solution(\"-----\\n\") == \"No\" # Empty input\nassert solution(\"-----\\n+---\") == \"No\" # Incorrect input\nassert solution(\"-----\\n+---+\") == \"No\" # Incorrect input\nassert solution(\"-----\\n++\") == \"No\" # Incorrect input\nassert solution(\"-----\\n-\") == \"No\" # Incorrect input\nassert solution(\"-----\\n+---\") == \"Yes\" # Test case 1\nassert solution(\"-----\\n+-\") == \"Yes\" # Test case 2\nassert solution(\"-----\\n--\") == \"No\" # Test case 3\nassert solution(\"-----\\n+---+\") == \"No\" # Test case 4\nassert solution(\"-----\\n+---+\") == \"Yes\" # Test case 5"
    },
    {
        "number": 3805,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"-++-\") == \"Yes\", \"The first testcase should return Yes\"\nassert solution(\"+\") == \"No\", \"The second testcase should return No\"\nassert solution(\"++\") == \"Yes\", \"The third testcase should return Yes\"\nassert solution(\"-\") == \"No\", \"The fourth testcase should return No\""
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 0 0\\n0 1\\n-1 2\\n1 2') == '12.566370614359172464'\nassert solution('4 1 -1\\n0 0\\n1 2\\n2 0\\n1 1') == '21.991148575128551812'"
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_data) == expected_output, f\"Test Case {case_num} failed.\""
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 0 0\\n0 1\\n-1 2\\n1 2\") == 12.566370614359172464\nassert solution(\"4 1 -1\\n0 0\\n1 2\\n2 0\\n1 1\") == 21.991148575128551812"
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"12.566370614359172464\", \"Your solution is incorrect. Please check the given sample inputs and output.\""
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == \"12.566370614359172464\", \"The solution is incorrect. Please check the input and output examples.\""
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 0 0\\n0 1\\n-1 2\\n1 2\") == \"12.566370614359172464\"\nassert solution(\"4 1 -1\\n0 0\\n1 2\\n2 0\\n1 1\") == \"21.991148575128551812\""
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 0 0\\n0 1\\n-1 2\\n1 2\") == 12.566370614359172464\nassert solution(\"4 1 -1\\n0 0\\n1 2\\n2 0\\n1 1\") == 21.991148575128551812"
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution([3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "
    },
    {
        "number": 3806,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(r\"\"\"\n3 0 0\n0 1\n-1 2\n1 2\n\"\"\") == \"12.566370614359172464\"\n\nassert solution(r\"\"\"\n4 1 -1\n0 0\n1 2\n2 0\n1 1\n\"\"\") == \"21.991148575128551812\""
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('48') == '9 42'\nassert solution('6') == '6 6'"
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(48) == \"9 42\", \"Test case 48 failed.\"\nassert solution(6) == \"6 6\", \"Test case 6 failed.\""
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Output\\n9 42\\n6 6\""
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"48\") == \"9 42\\n\"\nassert solution(\"6\") == \"6 6\\n\""
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=input()) == output, f\"Input: {stdin}, Output: {output}\""
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"48\") == \"9 42\"\nassert solution(\"6\") == \"6 6\""
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"48\") == \"9 42\"\nassert solution(\"6\") == \"6 6\"\n"
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"48\") == \"9 42\", \"Test 1 failed\"\nassert solution(\"6\") == \"6 6\", \"Test 2 failed\""
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"42 6\", \"Incorrect output\""
    },
    {
        "number": 3807,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"48\") == \"9 42\", \"Test case 1 failed\"\nassert solution(\"6\") == \"6 6\", \"Test case 2 failed\""
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n()(\") == \"Yes\"\nassert solution(\"3\\n(()\") == \"No\"\nassert solution(\"2\\n()\") == \"Yes\"\nassert solution(\"10\\n)))))(((((\") == \"No\""
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n(()\\n\") == \"Yes\"\nassert solution(\"3\\n(()\\n\") == \"No\"\nassert solution(\"2\\n()\\n\") == \"Yes\"\nassert solution(\"10\\n(((\\n\") == \"No\""
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n2\n)(\n\"\"\") == \"Yes\"\n\nassert solution(\"\"\"\n3\n(()\n\"\"\") == \"No\"\n\nassert solution(\"\"\"\n2\n()\n\"\"\") == \"Yes\"\n\nassert solution(\"\"\"\n10\n)))))(((((\n\"\"\") == \"No\""
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n)(\\n\") == \"Yes\\n\"\nassert solution(\"3\\n(()\\n\") == \"No\\n\"\nassert solution(\"2\\n()\") == \"Yes\\n\"\nassert solution(\"10\\n)))))(((((\\n\") == \"No\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2\\n())') == 'Yes'\nassert solution('3\\n(()') == 'No'\nassert solution('2\\n()') == 'Yes'\nassert solution('10\\n())))(((((') == 'No'"
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"Yes\"\nassert solution(2) == \"Yes\"\nassert solution(10) == \"No\""
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\""
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n(()\\n\") == \"Yes\\n\", \"Petya's friends made him a birthday present \u2014 a bracket sequence. Petya was quite disappointed with his gift, because he dreamed of correct bracket sequence, yet he told his friends nothing about his dreams and decided to fix present himself.\")\nassert solution(\"3\\n(()\\n\") == \"No\\n\", \"Petya's friends made him a birthday present \u2014 a bracket sequence. Petya was quite disappointed with his gift, because he dreamed of correct bracket sequence, yet he told his friends nothing about his dreams and decided to fix present himself.\")\nassert solution(\"2\\n()\") == \"Yes\\n\", \"Petya's friends made him a birthday present \u2014 a bracket sequence. Petya was quite disappointed with his gift, because he dreamed of correct bracket sequence, yet he told his friends nothing about his dreams and decided to fix present himself.\")\nassert solution(\"10\\n((((\\n\") == \"No\\n\", \"Petya's friends made him a birthday present \u2014 a bracket sequence. Petya was quite disappointed with his gift, because he dreamed of correct bracket sequence, yet he told his friends nothing about his dreams and decided to fix present himself.\")"
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n)()\") == \"Yes\"\nassert solution(\"3\\n)()\") == \"No\"\nassert solution(\"2\\n()\") == \"Yes\"\nassert solution(\"10\\n())(((\\n\")) == \"No\""
    },
    {
        "number": 3808,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n(()\\n\") == \"Yes\", \"First example should return Yes\")\nassert solution(\"3\\n(()\\n\") == \"No\", \"Second example should return No\")\nassert solution(\"2\\n()\\n\") == \"Yes\", \"Third example should return Yes\")\nassert solution(\"10\\n))(((((\\n\") == \"No\", \"Fourth example should return No\")"
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 50\\n50\\n\") == \"1\\n1\\n\"\nassert solution(\"3 100\\n50 50 100\\n\") == \"5\\n2\\n\"\nassert solution(\"2 50\\n50 50\\n\") == \"-1\\n0\\n\""
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 50\\n50\\n\") == \"1\\n1\\n\"\nassert solution(\"3 100\\n50 50 100\\n\") == \"5\\n2\\n\"\nassert solution(\"2 50\\n50 50\\n\") == \"-1\\n0\\n\"\n\nassert solution(\"1 50\\n50\\n\") == \"1\\n1\\n\"\nassert solution(\"3 100\\n50 50 100\\n\") == \"5\\n2\\n\"\nassert solution(\"2 50\\n50 50\\n\") == \"-1\\n0\\n\"\n\nassert solution(\"1 50\\n50\\n\") == \"1\\n1\\n\"\nassert solution(\"3 100\\n50 50 100\\n\") == \"5\\n2\\n\"\nassert solution(\"2 50\\n50 50\\n\") == \"-1\\n0\\n\"\n\nassert solution(\"1 50\\n50\\n\") == \"1\\n1\\n\"\nassert solution(\"3 100\\n50 50 100\\n\") == \"5\\n2\\n\"\nassert solution(\"2 50\\n50 50\\n\") == \"-1\\n0\\n\""
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_string) == output_string for input_string, output_string in [(\"1 50\", \"1\"), (\"3 100\", \"5\"), (\"2 50\", \"0\"), (\"1 50\", \"1\")]:\n    assert solution(input_string) == output_string, f\"Input {input_string} has incorrect output. Output: {solution(input_string)}, Expected: {output_string}\""
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 50\\n50\\n') == '1\\n1\\n'\nassert solution('3 100\\n50 50 100\\n') == '5\\n2\\n'\nassert solution('2 50\\n50 50\\n') == '-1\\n0\\n'\n\nfrom functools import reduce\n"
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 50\\n50') == '1\\n1\\n'\nassert solution('3 100\\n50 50 100') == '5\\n2\\n'\nassert solution('2 50\\n50 50') == '-1\\n0\\n'"
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 50\\n50\\n') == '1\\n1\\n'\nassert solution('3 100\\n50 50 100\\n') == '5\\n2\\n'\nassert solution('2 50\\n50 50\\n') == '-1\\n0\\n'\n"
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Test failed with input: {input()}, output: {output()}\""
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 50\\n50\") == \"1\\n1\"\nassert solution(\"3 100\\n50 50 100\") == \"5\\n2\"\nassert solution(\"2 50\\n50 50\") == \"-1\\n0\"\n"
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(str(int(input()) + 1) + \" \" + str(int(input()) + 1)) == \"1\"\nassert solution(str(int(input()) + 1) + \" \" + str(int(input()) + 1) + \" \" + str(int(input()) + 1)) == \"5\"\nassert solution(str(int(input()) + 1) + \" \" + str(int(input()) + 1) + \" \" + str(int(input()) + 1) + \" \" + str(int(input()) + 1)) == \"2\""
    },
    {
        "number": 3809,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''1 50\n50''') == '1\\n1\\n'\nassert solution('''3 100\n50 50 100''') == '5\\n2\\n'\nassert solution('''2 50\n50 50''') == '-1\\n0\\n'\nassert solution('''1 100\n200''') == '-1\\n0\\n'\nassert solution('''5 100\n50 50 100 50 50 100''') == '5\\n2\\n'"
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n2 6 8\\n') == '2'\nassert solution('5\\n2 3 4 9 12\\n') == '4'\nassert solution('4\\n5 7 2 9\\n') == '1'"
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 2\nassert solution(5) == 4\nassert solution(4) == 1"
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n2 6 8') == '2\\n'\nassert solution('5\\n2 3 4 9 12') == '4\\n'\nassert solution('4\\n5 7 2 9') == '1\\n'"
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Test failed. Expected: {output}, Received: {solution(input())}\"\nprint(\"Test passed\")"
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n2 6 8') == '2'\nassert solution('5\\n2 3 4 9 12') == '4'\nassert solution('4\\n5 7 2 9') == '1'"
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n2 6 8\") == \"2\\n\"\nassert solution(\"5\\n2 3 4 9 12\") == \"4\\n\"\nassert solution(\"4\\n5 7 2 9\") == \"1\\n\""
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n2 6 8') == '2\\n'\nassert solution('5\\n2 3 4 9 12') == '4\\n'\nassert solution('4\\n5 7 2 9') == '1\\n'"
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n2 6 8\") == \"2\"\nassert solution(\"5\\n2 3 4 9 12\") == \"4\"\nassert solution(\"4\\n5 7 2 9\") == \"1\""
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n2 6 8\\n\") == \"2\\n\"\nassert solution(\"5\\n2 3 4 9 12\\n\") == \"4\\n\"\nassert solution(\"4\\n5 7 2 9\\n\") == \"1\\n\""
    },
    {
        "number": 3810,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n2 6 8\\n') == '2\\n'\nassert solution('5\\n2 3 4 9 12\\n') == '4\\n'\nassert solution('4\\n5 7 2 9\\n') == '1\\n'"
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"5\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) =="
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n17 18\\n15 24\\n12 15\\n\") == \"6\\n\"\nassert solution(\"2\\n10 16\\n7 17\\n\") == \"1\\n\"\nassert solution(\"5\\n90 108\\n45 105\\n75 40\\n165 175\\n33 30\\n\") == \"5\\n\"\n"
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\"\n"
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == 6\nassert solution() == -1\nassert solution() == 5\n"
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == 6, \"The given solution is incorrect\""
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 17, 15, 12) == 6\nassert solution(2, 10, 16, 7) == -1\nassert solution(5, 90, 108, 45, 75, 165, 33, 30) == 5"
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 6\nassert solution(2) == -1\nassert solution(5) == 5"
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n17 18\\n15 24\\n12 15') == '6\\n'\nassert solution('2\\n10 16\\n7 17') == '-1\\n'\nassert solution('5\\n90 108\\n45 105\\n75 40\\n165 175\\n33 30') == '5\\n'\n\nfrom typing import List"
    },
    {
        "number": 3811,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 6\nassert solution() == 6\nassert solution() == -1\nassert solution() == 5"
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"bab\") == \"1 0\\n1 3\"\nassert solution(\"bb\") == \"1 0\\n1 3\"\nassert solution(\"bbbb\") == \"0\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"bab\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bb\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bbbb\") == \"0\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"bab\") == \"1 0\"\nassert solution(\"bb\") == \"1 3\"\nassert solution(\"bbbb\") == \"0\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"bab\") == \"1 0\\n1 3\"\nassert solution(\"bb\") == \"1 0\\n1 3\"\nassert solution(\"bbbb\") == \"0\"\n\nfor s, t in [(\"bab\", \"bb\"), (\"bb\", \"bb\"), (\"bbbb\", \"aaa\")]:\n    assert solution(s) == f\"{len(s)} {len(t)}\\n\" + s.replace(s[0], \"a\", 1).replace(s[1:], \"b\", 1)"
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"bab\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bb\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bbbb\") == \"0\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input(\"bab\\nbb\\n\")) == \"2\\n1 0\\n1 3\\n\"\nassert solution(input(\"bbbb\\naaa\\n\")) == \"0\\n\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"bab\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bb\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bbbb\") == \"0\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"bab\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bb\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bbbb\") == \"0\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"bab\") == \"1 0\"\nassert solution(\"bb\") == \"1 3\"\nassert solution(\"bbbb\") == \"0\""
    },
    {
        "number": 3812,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"bab\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bb\") == \"1\\n0\"\nassert solution(\"bbbb\") == \"0\""
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 1\\n4 3 2\\n\") == \"POSSIBLE\""
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 1\\n4 3 2\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 3\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 4\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 5\") == \"IMPOSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 1\") == \"IMPOSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 6\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n1 1\\n4 3 2\\n') == 'POSSIBLE'\nassert solution('5\\n1 1\\n4 3 2\\n') == 'POSSIBLE'\nassert solution('3\\n1 1\\n4 3\\n') == 'IMPOSSIBLE'\nassert solution('1\\n1 1\\n4 3\\n') == 'IMPOSSIBLE'"
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 1\\n4 3 2\\n\") == \"POSSIBLE\""
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 1\\n4 3 2\") == \"POSSIBLE\""
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 1\\n4 3 2\") == \"POSSIBLE\"\nassert solution(\"4\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\") == \"IMPOSSIBLE\"\nassert solution(\"6\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\") == \"POSSIBLE\""
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 1\\n4 3 2\\n\") == \"POSSIBLE\"\nassert solution(\"5\\n1 1\\n4 3 2\\n\") == \"IMPOSSIBLE\"\nassert solution(\"3\\n1 2\\n4 3 2\\n\") == \"IMPOSSIBLE\"\nassert solution(\"1\\n1 1\\n4 3 2\\n\") == \"IMPOSSIBLE\"\nassert solution(\"5\\n1 1\\n4 2 2\\n\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 4\\n\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 2\\n5\\n\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 1\\n4 3 2\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 2\\n5 6 7\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 1\\n4 3 2\\n\") == \"POSSIBLE\"\nassert solution(\"5\\n1 1\\n4 3 2\\n\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3813,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_format) == output_format"
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1000000007\") == \"2\", \"Test case 1 failed\"\nassert solution(\"2 9999999993\") == \"0\", \"Test case 2 failed\"\nassert solution(\"3 1000000007\") == \"3\", \"Test case 3 failed\"\nassert solution(\"2 1000000005\") == \"0\", \"Test case 4 failed\"\nassert solution(\"3 9999999993\") == \"1\", \"Test case 5 failed\""
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1000000007\") == \"2\\n\"\n\nassert solution(\"1 5\") == \"1\\n\"\n\nassert solution(\"4 5\") == \"2\\n\"\n\nassert solution(\"5 600\") == \"1\\n\""
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 1000000007\") == \"2\"\n"
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1000000007\") == \"2\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1000000007\") == \"2\\n\", \"Test 1\""
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1000000007\") == \"2\\n\"\n"
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1000000007\") == \"2\"\nassert solution(\"5 2000000009\") == \"2\"\nassert solution(\"3 1000000007\") == \"1\"\nassert solution(\"7 2000000009\") == \"0\""
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 2, \"Expected Output: 2, Actual Output: {}\".format(solution())"
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 2, \"Your solution is incorrect.\""
    },
    {
        "number": 3814,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1000000007\") == \"2\"\n"
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n2 2 3 3\n+-+\n''') == '7'\n\nassert solution('''\n4 1 5 1\n-\n''') == '999999228'"
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3, 2, 3, 3) == 7\nassert solution(4, 1, 5, 1) == 999999228\nassert solution(2, 2, 3, 3) == 7\nassert solution(4, 1, 5, 1) == 999999228\nassert solution(5, 1, 2, 1) == 23\nassert solution(5, 1, 3, 2) == 23\nassert solution(5, 2, 3, 1) == 14\nassert solution(5, 3, 4, 2) == 14\nassert solution(5, 4, 5, 3) == 14\nassert solution(5, 5, 6, 4) == 14\nassert solution(5, 6, 7, 5) == 14\nassert solution(5, 7, 8, 6) == 14\nassert solution(5, 8, 9, 7) == 14\nassert solution(5, 9, 10, 8) == 14\nassert solution(5, 10, 11, 9) == 14\nassert solution(5, 11, 12, 10) == 14\nassert solution(5, 12, 13, 11) == 14\nassert solution(5, 13, 14, 12) == 14\nassert solution(5, 14, 15, 13) == 14\nassert solution(5, 15, 16, 14) == 14\nassert solution(5, 16, 17, 15) == 14\nassert solution(5, 17, 18, 16) == 14\nassert solution(5, 18, 19, 17) == 14\nassert solution(5, 19, 20, 18) == 14\nassert solution(5, 20, 21, 19) == 14\nassert solution(5, 21, 22, 20) == 14\nassert solution(5, 22, 23, 21) == 14\nassert solution(5, 23, 24, 22) == 14\nassert solution(5, 24, 25, 23) == 14\nassert solution(5, 25, 26, 24) == 14\nassert solution(5, 26, 27, 25) == 14\nassert solution(5, 27, 28, 26) == 14\nassert solution(5, 28, 29, 27) == 14\nassert solution(5, 29, 30, 28) == 14\nassert solution(5, 30, 31, 29) == 14\nassert solution(5, 31, 32, 30) == 14\nassert solution(5, 32, 33, 31) == 14\nassert solution(5, 33, 34, 32) == 14\nassert solution(5, 34, 35, 33) == 14\nassert solution(5, 35, 36, 34) == 14\nassert solution(5, 36, 37, 35) == 14\nassert solution(5, 37, 38, 36) == 14\nassert solution(5, 38, 39, 37) == 14\nassert solution(5, 39, 40, 38) == 14\nassert solution(5, 40, 41, 39) == 14\nassert solution(5, 41, 42, 40) == 14\nassert solution(5, 42, 43, 41) == 14\nassert solution(5, 43, 44, 42) == 14\n"
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n2 2 3 3\n+-+\n\"\"\") == \"7\"\n\nassert solution(\"\"\"\n4 1 5 1\n-\n\"\"\") == \"999999228\""
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == 'def solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nfor case in range(1, int(stdin.strip()) + 1):\\n    n, a, b, k = map(int, stdin.readline().split())\\n    s = []\\n    for _ in range(k):\\n        s.append(int(stdin.readline().strip()))\\n    result = (sum(s[:n-1]*[a**i*b**(i-n+1)] for i in range(n)) - sum(s[:n-1]*[a**i*b**(i-n) for i in range(n))) % (10**9+9)\\n    print(result)\\n\\n# Test cases\\n# for case in range(1, int(stdin.strip()) + 1):\\n#     n, a, b, k = map(int, stdin.readline().split())\\n#     s = []\\n#     for _ in range(k):\\n#         s.append(int(stdin.readline().strip()))\\n#     result = (sum(s[:n-1]*[a**i*b**(i-n+1)] for i in range(n)) - sum(s[:n-1]*[a**i*b**(i-n) for i in range(n))) % (10**9+9)\\n#     print(result)'"
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 2 3 3\\n+-+\") == \"7\"\nassert solution(\"4 1 5 1\\n-\") == \"999999228\""
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 2 3 3\\n+-+') == 7\nassert solution('4 1 5 1\\n-') == 999999228"
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n2 2 3 3\n+-+\n\"\"\") == \"7\"\n\nassert solution(\"\"\"\n4 1 5 1\n-\n\"\"\") == \"999999228\""
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output\nassert solution(input()) == output"
    },
    {
        "number": 3815,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('Input\\n2 2 3 3\\n+-+\\n\\nOutput\\n7\\n\\nInput\\n4 1 5 1\\n-') == '7\\n999999228'"
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1 1 2\") == \"4\"\nassert solution(\"1 2 3 1\") == \"2\"\nassert solution(\"10 2 1 7\") == \"0\"\n"
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Test failed. Expected output: {output()}, but got {solution(input())}\""
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1 1 2\") == \"4\"\nassert solution(\"1 2 3 1\") == \"2\"\nassert solution(\"10 2 1 7\") == \"0\""
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1 1 2\") == \"4\\n\", \"1\"\nassert solution(\"1 2 3 1\") == \"2\\n\", \"2\"\nassert solution(\"10 2 1 7\") == \"0\\n\", \"3\""
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1, 1, 1, 2) == 4\nassert solution(1, 2, 3, 1) == 2\nassert solution(10, 2, 1, 7) == 0"
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1 2\\n\") == \"4\\n\"\nassert solution(\"1 2 3 1\\n\") == \"2\\n\"\nassert solution(\"10 2 1 7\\n\") == \"0\\n\""
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1 1 2\") == \"4\"\nassert solution(\"1 2 3 1\") == \"2\"\nassert solution(\"10 2 1 7\") == \"0\"\n"
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Test failed: {solution(input())}!= {output()}\""
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 1 1 2') == '4'\nassert solution('1 2 3 1') == '2'\nassert solution('10 2 1 7') == '0'"
    },
    {
        "number": 3816,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1 1 2\") == \"4\"\nassert solution(\"1 2 3 1\") == \"2\"\nassert solution(\"10 2 1 7\") == \"0\"\nassert solution(\"1 2 1 3\") == \"0\"\nassert solution(\"10 4 2 5\") == \"4\"\nassert solution(\"2 1 3 2\") == \"0\"\nassert solution(\"3 2 2 1\") == \"0\"\nassert solution(\"1 4 3 3\") == \"2\"\nassert solution(\"4 3 2 1\") == \"0\"\nassert solution(\"3 1 2 1\") == \"0\"\nassert solution(\"2 3 1 1\") == \"0\"\nassert solution(\"1 5 4 3\") == \"4\"\nassert solution(\"5 4 3 2\") == \"0\"\nassert solution(\"4 2 3 1\") == \"0\"\nassert solution(\"3 4 2 1\") == \"0\"\nassert solution(\"2 2 1 1\") == \"0\"\nassert solution(\"1 3 2 1\") == \"0\"\nassert solution(\"1 2 3 4\") == \"0\"\nassert solution(\"10 5 2 6\") == \"4\"\nassert solution(\"5 2 1 1\") == \"0\"\nassert solution(\"2 1 2 1\") == \"0\"\nassert solution(\"1 3 4 1\") == \"0\"\nassert solution(\"1 2 4 3\") == \"0\"\nassert solution(\"10 4 5 3\") == \"4\"\nassert solution(\"5 3 2 1\") == \"0\"\nassert solution(\"4 1 2 1\") == \"0\"\nassert solution(\"3 2 1 1\") == \"0\"\nassert solution(\"2 1 1 1\") == \"0\"\nassert solution(\"1 2 2 1\") == \"0\"\nassert solution(\"1 1 1 5\") == \"0\"\nassert solution(\"1 1 2 3\") == \"0\"\nassert solution(\"1 1 2 2\") == \"0\"\nassert solution(\"1 2 3 4\") == \"0\"\nassert solution(\"1 3 4 5\") == \"0\"\nassert solution(\"2 4 5 6\") == \"0\"\nassert solution(\"3 5 6 7\") == \"0\"\nassert solution(\"4 6 7 8\") == \"0\"\nassert solution(\"5 7 8 9\") == \"0\"\nassert solution(\"6 8 9 10\") == \"0\"\nassert solution(\"7 9 10 11\") == \"0\"\nassert solution(\"8 10 11 12\") == \"0\"\nassert solution(\"9 11 12 13\") == \"0\"\nassert solution(\"10 12 13 14\") == \"0\"\nassert solution(\"11 13 14 15\") == \"0\"\nassert solution(\"12 14 15 16\") == \"0\"\nassert solution(\"13 15 16 17\") == \"0\"\nassert solution(\"14 16 17 18\") == \"0\"\nassert solution(\"15 17 18 19\") == \"0\"\nassert solution(\"16 18 19 20\") == \"0\"\nassert solution(\"17 19 20 21\") == \"0\"\nassert solution(\"18 20 21 22\") == \"0\"\nassert solution(\"19 21 22 23\") == \"0\"\nassert solution(\"20 22 23 24\") == \"0\"\nassert solution(\"21 23 24 25\") == \"0\"\nassert solution(\"22 24 25 26\") == \"0\"\nassert solution(\"23 25 26 27\") == \"0\"\nassert solution(\"24 26 27 28\") == \"0\"\nassert solution(\"25 27 28 29\") == \"0\"\nassert solution(\"26 28 29 30\") == \"0\"\n"
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"6\"\nassert solution(\"1 2\") == \"6\"\nassert solution(\"0 2\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"0 1\") == \"0\""
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\") == \"6\\n\", \"The output should be 6.\"\nassert solution(\"4 5\") == \"2\\n\", \"The output should be 2.\"\nassert solution(\"10 3\") == \"16\\n\", \"The output should be 16.\"\nassert solution(\"2 2\") == \"0\\n\", \"The output should be 0.\""
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\") == \"6\\n\"\n"
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 2\\n') == '6\\n'\n"
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 6, \"The correct answer is 6, but it is %s\" % (solution(3))\n"
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2\") == \"6\"\nassert solution(\"10 3\") == \"106\"\nassert solution(\"7 3\") == \"120\"\nassert solution(\"8 4\") == \"208\"\nassert solution(\"10 1\") == \"100\""
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\") == \"6\"\nassert solution(\"4 3\") == \"24\"\nassert solution(\"5 4\") == \"40\"\nassert solution(\"6 5\") == \"58\"\nassert solution(\"7 6\") == \"120\"\nassert solution(\"8 7\") == \"214\"\nassert solution(\"9 8\") == \"346\"\nassert solution(\"10 9\") == \"524\"\nassert solution(\"11 10\") == \"776\"\nassert solution(\"12 11\") == \"1140\"\nassert solution(\"13 12\") == \"1550\"\nassert solution(\"14 13\") == \"2014\"\nassert solution(\"15 14\") == \"2546\"\nassert solution(\"16 15\") == \"3160\"\nassert solution(\"17 16\") == \"3866\"\nassert solution(\"18 17\") == \"4680\"\nassert solution(\"19 18\") == \"5602\"\nassert solution(\"20 19\") == \"6648\"\nassert solution(\"21 20\") == \"7822\"\nassert solution(\"22 21\") == \"9144\"\nassert solution(\"23 22\") == \"10634\"\nassert solution(\"24 23\") == \"12290\"\nassert solution(\"25 24\") == \"14126\"\nassert solution(\"26 25\") == \"16142\"\nassert solution(\"27 26\") == \"18348\"\nassert solution(\"28 27\") == \"20754\"\nassert solution(\"29 28\") == \"23360\"\nassert solution(\"30 29\") == \"26178\"\nassert solution(\"31 30\") == \"29212\"\nassert solution(\"32 31\") == \"32470\"\nassert solution(\"33 32\") == \"36070\"\nassert solution(\"34 33\") == \"40026\"\nassert solution(\"35 34\") == \"44258\"\nassert solution(\"36 35\") == \"48888\"\nassert solution(\"37 36\") == \"54040\"\nassert solution(\"38 37\") == \"59740\"\nassert solution(\"39 38\") == \"66000\"\nassert solution(\"40 39\") == \"72840\"\nassert solution(\"41 40\") == \"80380\"\nassert solution(\"42 41\") == \"88638\"\nassert solution(\"43 42\") == \"97634\"\nassert solution(\"44 43\") == \"107400\"\nassert solution(\"45 44\") == \"117950\"\nassert solution(\"46 45\") == \"129316\"\nassert solution(\"47 46\") == \"141498\"\nassert solution(\"48 47\") == \"154518\"\nassert solution(\"49 48\") == \"168394\"\nassert solution(\"50 49\") == \"183150\"\nassert solution(\"51 50\") == \"198800\"\nassert solution(\"52 51\") == \"215362\"\nassert solution(\"53 52\") == \"232858\"\nassert solution(\"54 53\") == \"251300\"\nassert solution(\"55 54\") == \"270708\"\nassert solution(\"56 55\") == \"292102\"\nassert solution(\"57 56\") == \"315502\"\nassert solution(\"58 57\") == \"341020\"\nassert solution(\"59 58\") == \"368676\"\nassert solution(\"60 59\") == \"400700\"\nassert solution(\"61 60\") == \"446"
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 2') == '6'\n"
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3, 2) == 6\n"
    },
    {
        "number": 3817,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\") == \"6\""
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\""
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\"\n"
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1 2\") == \"2\"\nassert solution(\"2\\n1 3\\n3 4\") == \"2\"\nassert solution(\"2\\n2 3\\n1 3\\n3 4\\n4 5\") == \"2\"\nassert solution(\"2\\n1 3\\n2 4\\n3 5\\n4 5\\n5 6\") == \"2\"\nassert solution(\"2\\n1 3\\n2 4\\n3 5\\n4 5\\n5 6\\n3 7\") == \"0\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == '2\\n'"
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\"\nassert solution(\"4\\n2 1 3 4\\n\") == \"2\\n\"\nassert solution(\"6\\n5 1 2 3 4 6\\n\") == \"10\\n\"\nassert solution(\"8\\n1 2 3 4 5 6 7 8\\n\") == \"10\\n\"\nassert solution(\"12\\n1 2 3 4 5 6 7 8 9 10 11 12\\n\") == \"26\\n\""
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '2', \"Output should be '2'.\"\n"
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\") == 0\nassert solution(\"2\\n1 2\\n\") == 2"
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3818,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '2\\n'"
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt').read()) == \"2\"\nassert solution(open('input2.txt').read()) == \"4\"\nassert solution(open('input3.txt').read()) == \"18\""
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n0 2 0\\n3 0 1\\n') == '2'\nassert solution('3\\n0 2 0\\n1 0 3\\n') == '4'\nassert solution('11\\n0 0 0 5 0 0 0 4 0 0 11\\n9 2 6 0 8 1 7 0 3 0 10\\n') == '18'"
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(None) == 'Invalid input'"
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Output\\n18\\n\"\n"
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n0 2 0\\n3 0 1\\n') == '2\\n'\nassert solution('3\\n0 2 0\\n1 0 3\\n') == '4\\n'\nassert solution('11\\n0 0 0 5 0 0 0 4 0 0 11\\n9 2 6 0 8 1 7 0 3 0 10\\n') == '18\\n'"
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == 2\nassert solution(11) == 18"
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input) == expected, f\"Test case {i+1} failed. Input: {input}, expected: {expected}\""
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n0 2 0\\n3 0 1\\n\") == \"2\\n\"\nassert solution(\"3\\n0 2 0\\n1 0 3\\n\") == \"4\\n\"\nassert solution(\"11\\n0 0 0 5 0 0 0 4 0 0 11\\n9 2 6 0 8 1 7 0 3 0 10\\n\") == \"18\\n\""
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), \"Test Failed\""
    },
    {
        "number": 3819,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 10\\ncode*s\\ncodeforces\") == \"YES\"\nassert solution(\"6 5\\nvk*cup\\nvkcup\") == \"YES\"\nassert solution(\"1 1\\nv\\nk\") == \"NO\"\nassert solution(\"9 6\\ngfgf*gfgf\\n\") == \"NO\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6 10\\ncode*s\\ncodeforces\\n\") == \"YES\"\nassert solution(\"6 5\\nvk*cup\\nvkcup\\n\") == \"YES\"\nassert solution(\"1 1\\nv\\nk\\n\") == \"NO\"\nassert solution(\"9 6\\ngfgf*gfgf\\ngfgfgf\\n\") == \"NO\"\n\nfrom typing import List"
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"code*s\") == \"YES\"\nassert solution(\"codeforces\") == \"YES\"\nassert solution(\"vk*cup\") == \"YES\"\nassert solution(\"v\") == \"NO\"\nassert solution(\"k\") == \"NO\"\nassert solution(\"gfgf*gfgf\") == \"NO\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"code*s\") == \"YES\"\nassert solution(\"codeforces\") == \"YES\"\nassert solution(\"vk*cup\") == \"YES\"\nassert solution(\"v\") == \"NO\"\nassert solution(\"k\") == \"NO\"\nassert solution(\"gfgf*gfgf\") == \"NO\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"code*s\") == \"YES\"\nassert solution(\"codeforces\") == \"YES\"\nassert solution(\"vk*cup\") == \"YES\"\nassert solution(\"v\") == \"NO\"\nassert solution(\"k\") == \"NO\"\nassert solution(\"gfgf*gfgf\") == \"NO\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6 10\\ncode*s\\ncodeforces\\n\\n6 5\\nvk*cup\\nvkcup\\n\\n1 1\\nv\\nk\\n\\n9 6\\ngfgf*gfgf\\ngfgfgf\\n\\n\") == \"YES\"\nassert solution(\"6 5\\nvk*cup\\nvkcup\\n\\n1 1\\nv\\nk\\n\\n9 6\\ngfgf*gfgf\\ngfgfgf\\n\") == \"YES\"\nassert solution(\"1 1\\nv\\nk\\n\\n9 6\\ngfgf*gfgf\\ngfgfgf\\n\") == \"NO\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"code*s\") == \"YES\"\nassert solution(\"codeforces\") == \"YES\"\nassert solution(\"vkcup\") == \"YES\"\nassert solution(\"v\") == \"NO\"\nassert solution(\"k\") == \"NO\"\nassert solution(\"gfgf*gfgf\") == \"NO\"\nassert solution(\"\") == \"NO\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"code*s\\ncodeforces\") == \"YES\"\nassert solution(\"6 10\\ncode*s\") == \"YES\"\nassert solution(\"6 5\\nvk*cup\") == \"YES\"\nassert solution(\"1 1\\nv\") == \"NO\"\nassert solution(\"9 6\\ngfgf*gfgf\") == \"NO\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, f\"Output {output}, expected {solution(input())}\"\nfor n, m, output in test_cases:\n    assert solution(f\"{n} {m}\") == output, f\"Output {output}, expected {solution(f\"{n} {m}\")}\""
    },
    {
        "number": 3820,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"code*s\") == \"YES\"\nassert solution(\"codeforces\") == \"YES\"\nassert solution(\"vk*cup\") == \"YES\"\nassert solution(\"v\") == \"NO\"\nassert solution(\"k\") == \"NO\"\nassert solution(\"gfgf*gfgf\") == \"NO\""
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('input.txt').read()) == 0.260000000000\nprint('All tests passed.')"
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n0.1 0.2 0.3 0.8\") == \"0.800000000000\\n\"\nassert solution(\"2\\n0.1 0.2\") == \"0.260000000000\\n\""
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: '{expected_output}', Received output: '{solution(input())}'\""
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"0.260000000000\"\n"
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Test failed: Expected output {output}, but got {solution(input())}\""
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '0.26', \"The output should be 0.26\""
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"0.800000000000\"\nassert solution(input()) == \"0.260000000000\""
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Input\\n4\\n0.1 0.2 0.3 0.8\\n\") == \"0.800000000000\\n\"\nassert solution(\"Input\\n2\\n0.1 0.2\\n\") == \"0.260000000000\\n\""
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n0.1 0.2 0.3 0.8\") == \"0.800000000000\"\nassert solution(\"2\\n0.1 0.2\") == \"0.260000000000\""
    },
    {
        "number": 3821,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"0.26\", \"Invalid output\""
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 10 1 2 5\") == \"5.0000000000\\n\"\nassert solution(\"3 6 1 2 1\") == \"4.7142857143\\n\""
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 10 1 2 5\") == \"5.0000000000\"\nassert solution(\"3 6 1 2 1\") == \"4.7142857143\""
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Output: {solution(input())}, Expected: {expected_output}\""
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 10 1 2 5') == '5.0000000000'\nassert solution('3 6 1 2 1') == '4.7142857143'"
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    5 10 1 2 5\n    \"\"\"\n) == \"5.0000000000\"\n\nassert solution(\n    \"\"\"\n    3 6 1 2 1\n    \"\"\"\n) == \"4.7142857143\""
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 10 1 2 5\") == \"5.0000000000\"\nassert solution(\"3 6 1 2 1\") == \"4.7142857143\""
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 10 1 2 5\") == \"5.0000000000\"\nassert solution(\"3 6 1 2 1\") == \"4.7142857143\""
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"5.0000000000\" # expected output\nassert solution(input()) == \"4.7142857143\" # expected output"
    },
    {
        "number": 3822,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 10 1 2 5') == '5.0000000000'\nassert solution('3 6 1 2 1') == '4.7142857143'"
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n0.000 0.500 0.750 1.000 2.000 3.000\") == \"0.250\\n\"\nassert solution(\"3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\") == \"0.279\\n\""
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\n0.000 0.500 0.750 1.000 2.000 3.000\\n') == '0.250\\n'\nassert solution('3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\\n') == '0.279\\n'"
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n0.000 0.500 0.750 1.000 2.000 3.000\") == \"0.250\"\nassert solution(\"3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\") == \"0.279\""
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\"\n"
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_str) == output_str, f\"Expected '{output_str}', but got '{solution(input_str)}'\" for input_str, output_str in [\n    ('3', '0.250'),\n    ('3', '0.279'),\n    ('3', '0.350'),\n    ('3', '0.250'),\n    ('3', '0.250'),\n    ('3', '0.250'),\n]"
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n0.000 0.500 0.750 1.000 2.000 3.000') == '0.250'\nassert solution('3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896') == '0.279'"
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n0.000 0.500 0.750 1.000 2.000 3.000\") == \"0.250\\n\"\nassert solution(\"3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\") == \"0.279\\n\""
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n0.000 0.500 0.750 1.000 2.000 3.000') == '0.250\\n'\n\nassert solution('3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896') == '0.279\\n'\n\nsolution(stdin)"
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n0.000 0.500 0.750 1.000 2.000 3.000\") == \"0.250\", \"The solution should return 0.250 for the given input.\"\n\nassert solution(\"3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\") == \"0.279\", \"The solution should return 0.279 for the given input.\""
    },
    {
        "number": 3823,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n0.000 0.500 0.750 1.000 2.000 3.000\\n') == '0.250\\n'\nassert solution('3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\\n') == '0.279\\n'"
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"18\""
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 5\\n5 2\\n') == '18'\nassert solution('0 1\\n0 0\\n') == '8'"
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 5\\n5 2\\n\") == \"18\\n\"\nassert solution(\"0 1\\n0 0\\n\") == \"8\\n\""
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\""
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"18\""
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 5\\n5 2\\n\") == \"18\"\nassert solution(\"0 1\\n0 0\\n\") == \"8\""
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0 1\\n0 0\") == \"8\"\nassert solution(\"1 5\\n5 2\") == \"18\""
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1 5\\n5 2') == '18'\nassert solution('0 1\\n0 0') == '8'"
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 5\\n5 2\") == \"18\"\nassert solution(\"0 1\\n0 0\") == \"8\""
    },
    {
        "number": 3824,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin=input()) == \"18\"\n"
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == \"4\"\nassert solution(2) == \"10\"\nassert solution(10) == \"244\""
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == 4\nassert solution(2) == 10\nassert solution(10) == 244"
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1) == 4, \"Expected 4, got {} instead.\".format(solution(1))  # 4\nassert solution(2) == 10, \"Expected 10, got {} instead.\".format(solution(2))  # 10\nassert solution(10) == 244, \"Expected 244, got {} instead.\".format(solution(10))  # 244"
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == 4, \"Test 1\"\nassert solution(2) == 10, \"Test 2\"\nassert solution(10) == 244, \"Test 3\""
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1) == 4\nassert solution(2) == 10\nassert solution(10) == 244"
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == 4\nassert solution(2) == 10\nassert solution(10) == 244"
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == 4\nassert solution(2) == 10\nassert solution(10) == 244"
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == \"4\"\nassert solution(2) == \"10\"\nassert solution(10) == \"244\""
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"4\"\nassert solution(\"2\") == \"10\"\nassert solution(\"10\") == \"244\""
    },
    {
        "number": 3825,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == 4\nassert solution(2) == 10\nassert solution(10) == 244"
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Input\") == \"Output\""
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3') == '0'\nassert solution('4') == '2'\nassert solution('5') == '2'"
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 1 2 2\\n2\\n1 4 1 4 9\\n3\\n1 2 3\\n\") == \"2\\n\"\nassert solution(\"3\\n1 2 3\\n4\\n1 1 2 2\\n5\\n1 4 1 4 9\\n\") == \"2\\n\"\nassert solution(\"5\\n1 4 1 4 9\\n1 2 3\\n\") == \"0\\n\""
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 2 3\") == \"0\"\nassert solution(\"4\\n1 1 2 2\") == \"2\"\nassert solution(\"5\\n1 4 1 4 9\") == \"2\""
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"0\"\nassert solution(4) == \"2\"\nassert solution(5) == \"2\""
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Test case {i+1} failed. Expected output: {expected_output}, but got {solution(input())}\""
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Input\\n3\\n1 2 3\\n\") == \"0\\n\"\nassert solution(\"Input\\n4\\n1 1 2 2\\n\") == \"2\\n\"\nassert solution(\"Input\\n5\\n1 4 1 4 9\\n\") == \"2\\n\""
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n\") == \"2\\n\"\nassert solution(\"1\\n1\\n2\\n2\\n9\\n\") == \"2\\n\"\nassert solution(\"1\\n4\\n1\\n4\\n9\\n\") == \"2\\n\""
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n1 1 2 2\\n5\\n1 4 1 4 9') == '2'\nassert solution('3\\n1 2 3\\n') == '0'\nassert solution('5\\n1 4 1 4 9\\n') == '2'"
    },
    {
        "number": 3826,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n\") == \"0\\n2\\n2\\n2\\n\"\nassert solution(\"1\\n1\\n2\\n2\\n\") == \"0\\n2\\n2\\n2\\n\"\nassert solution(\"1\\n4\\n1\\n4\\n9\\n\") == \"2\\n2\\n2\\n2\\n\""
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"aaabccc\") == \"YES\"\nassert solution(\"bbacc\") == \"NO\"\nassert solution(\"aabc\") == \"YES\""
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('aaabccc') == 'YES'\nassert solution('bbacc') == 'NO'\nassert solution('aabc') == 'YES'"
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('aaabccc') == 'YES'\nassert solution('bbacc') == 'NO'\nassert solution('aabc') == 'YES'"
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"aaabccc\") == \"YES\"\nassert solution(\"bbacc\") == \"NO\"\nassert solution(\"aabc\") == \"YES\""
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"aaabccc\") == \"YES\"\nassert solution(\"bbacc\") == \"NO\"\nassert solution(\"aabc\") == \"YES\""
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"aaabccc\") == \"YES\"\nassert solution(\"bbacc\") == \"NO\"\nassert solution(\"aabc\") == \"YES\""
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('aaabccc') == 'YES'\nassert solution('bbacc') == 'NO'\nassert solution('aabc') == 'YES'"
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('aaabccc') == 'YES', \"Expected YES, got {}\".format(solution('aaabccc'))\nassert solution('bbacc') == 'NO', \"Expected NO, got {}\".format(solution('bbacc'))\nassert solution('aabc') == 'YES', \"Expected YES, got {}\".format(solution('aabc'))"
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aaabccc\") == \"YES\"\nassert solution(\"bbacc\") == \"NO\"\nassert solution(\"aabc\") == \"YES\""
    },
    {
        "number": 3827,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('aaabccc') == 'YES', \"Expected 'YES', got '{}'\".format(solution('aaabccc'))\nassert solution('bbacc') == 'NO', \"Expected 'NO', got '{}'\".format(solution('bbacc'))\nassert solution('aabc') == 'YES', \"Expected 'YES', got '{}'\".format(solution('aabc'))"
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open('railway_sort.txt', 'r')) == 2, \"Error: Incorrect output.\"\nprint(solution(open('railway_sort.txt', 'r')))  # Test the solution with sample input"
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n4 1 2 5 3\") == \"2\\n\"\nassert solution(\"4\\n4 1 3 2\") == \"2\\n\""
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n4 1 2 5 3\") == \"2\\n\"\nassert solution(\"4\\n4 1 3 2\") == \"2\\n\""
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n4 1 2 5 3\") == \"2\"\nassert solution(\"4\\n4 1 3 2\") == \"2\""
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"4\\n4 1 3 2\") == \"2\"\nassert solution(stdin=\"4\\n4 1 2 5 3\") == \"2\"\n"
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 1 2 5 3') == '2'\nassert solution('4 1 3 2') == '2'"
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n4 1 2 5 3\\n\") == \"2\\n\", \"Your code is not correct.\"\nassert solution(\"4\\n4 1 3 2\\n\") == \"2\\n\", \"Your code is not correct.\"\n\nsolution = '''\n"
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2\""
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n4 1 2 5 3\") == \"2\\n\"\nassert solution(\"4\\n4 1 3 2\") == \"2\\n\""
    },
    {
        "number": 3828,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('Input') == 'Output\\n2'\nassert solution('Input') == 'Output\\n2'\nassert solution('Input') == 'Output\\n2'\nassert solution('Input') == 'Output\\n2'\nassert solution('Input') == 'Output\\n2'"
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 1\") == \"3.500000000000\"\nassert solution(\"6 3\") == \"4.958333333333\"\nassert solution(\"2 2\") == \"1.750000000000\""
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(r'6 1') == '3.5', 'Incorrect output'\nassert solution(r'6 3') == '4.96', 'Incorrect output'\nassert solution(r'2 2') == '1.75', 'Incorrect output'"
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 1\") == \"3.5\"\nassert solution(\"6 3\") == \"4.96\"\nassert solution(\"2 2\") == \"1.76\"\n\nfrom math import floor\n"
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 1\") == \"3.500000000000\\n\", \"Test 1\"\nassert solution(\"6 3\") == \"4.958333333333\\n\", \"Test 2\"\nassert solution(\"2 2\") == \"1.750000000000\\n\", \"Test 3\""
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(example1) == \"3.500000000000\", \"Expected output: 3.500000000000\"\nassert solution(example2) == \"4.958333333333\", \"Expected output: 4.958333333333\"\nassert solution(example3) == \"1.750000000000\", \"Expected output: 1.750000000000\""
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"3.500000000000\"\nassert solution(stdin) == \"4.958333333333\"\nassert solution(stdin) == \"1.750000000000\""
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Your solution is incorrect. Expected output: {expected_output}, but got: {solution(input())}\"\n\nimport math"
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 1\\n\") == \"3.5\"\nassert solution(\"6 3\\n\") == \"4.96\"\nassert solution(\"2 2\\n\") == \"1.76\""
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 1\") == \"3.5\"\nassert solution(\"6 3\") == \"4.96\"\nassert solution(\"2 2\") == \"1.75\""
    },
    {
        "number": 3829,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Test case failed. Expected: {expected}, Got: {solution(input())}\""
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n4\\n-><-\\n5\\n>>>>>\") == \"3\\n5\\n3\\n0\\n\"\nassert solution(\"4\\n4\\n<>\") == \"0\\n\"\nassert solution(\"4\\n4\\n<--\") == \"0\\n\"\nassert solution(\"4\\n4\\n<>\") == \"0\\n\"\nassert solution(\"4\\n4\\n<>\") == \"0\\n\"\n"
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Expected output: \" + str(output()) + \", but got: \" + str(solution(input()))"
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n4\\n-><-\\n5\\n>>>>>\") == \"3\\n5\\n3\\n0\"\nassert solution(\"3\\n4\\n\\n-><-\\n2\\n<>\") == \"2\\n1\\n0\""
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n4\\n-><-\\n5\\n>>>>>\") == \"3\\n5\\n3\\n0\"\nassert solution(\"3\\n<--\\n2\\n<>\") == \"3\\n3\\n2\\n0\""
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4\\n4\\n-><-\\n5\\n>>>>>') == '3\\n5\\n3\\n0'\nassert solution('4\\n4\\n<--\\n2\\n<>') == '3\\n5\\n3\\n0'\nassert solution('4\\n4\\n<<<\\n2\\n<>\\n') == '3\\n5\\n3\\n0'\nassert solution('4\\n4\\n<->\\n2\\n<->') == '3\\n5\\n3\\n0'\nassert solution('4\\n4\\n<->\\n2\\n<->') == '3\\n5\\n3\\n0'"
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == 3\nassert solution() == 5\nassert solution() == 3"
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n4\\n-><-\\n5\\n>>>>>\") == \"3\\n5\\n3\\n0\"\nassert solution(\"4\\n4\\n<--\\n2\\n<>\") == \"3\\n5\\n3\\n0\"\nassert solution(\"4\\n4\\n<--\\n2\\n<>\") == \"3\\n5\\n3\\n0\""
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n4\\n-><-\\n5\\n>>>>>\\n3\\n<--\\n2\\n<>\") == \"3\\n5\\n3\\n0\"\nassert solution(\"4\\n5\\n<>\") == \"0\"\nassert solution(\"4\\n3\\n<-\") == \"3\"\nassert solution(\"5\\n2\\n>>\") == \"5\"\nassert solution(\"4\\n3\\n<>\") == \"0\"\nassert solution(\"4\\n3\\n<-\") == \"3\"\nassert solution(\"5\\n2\\n>>\") == \"5\"\nassert solution(\"4\\n3\\n<>\") == \"0\"\nassert solution(\"4\\n3\\n<-\") == \"3\"\nassert solution(\"5\\n2\\n>>\") == \"5\"\nassert solution(\"4\\n3\\n<>\") == \"0\"\nassert solution(\"4\\n3\\n<-\") == \"3\"\nassert solution(\"5\\n2\\n>>\") == \"5\"\nassert solution(\"4\\n3\\n<>\") == \"0\"\nassert solution(\"4\\n3\\n<-\") == \"3\"\nassert solution(\"5\\n2\\n>>\") == \"5\"\nassert solution(\"4\\n3\\n<>\") == \"0\"\nassert solution(\"4\\n3\\n<-\") == \"3\"\nassert solution(\"5\\n2\\n>>\") == \"5\"\nassert solution(\"4\\n3\\n<>\") == \"0\"\nassert solution(\"4\\n3\\n<-\") == \"3\"\nassert solution(\"5\\n2\\n>>\") == \"5\"\nassert solution(\"4\\n3\\n<>\") == \"0\"\nassert solution(\"4\\n3\\n<-\") == \"3\"\nassert solution(\"5\\n2\\n>>\") == \"5\"\nassert solution(\"4\\n3\\n<>\") == \"0\"\nassert solution(\"4\\n3\\n<-\") == \"3\"\nassert solution(\"5\\n2\\n>>\") == \"5\"\nassert solution(\"4\\n3\\n<>\") == \"0\"\nassert solution(\"4\\n3\\n<-\") == \"3\"\nassert solution(\"5\\n2\\n>>\") == \"5\"\nassert solution(\"4\\n3\\n<>\") == \"0\"\nassert solution(\"4\\n3\\n<-\") == \"3\"\nassert solution(\"5\\n2\\n>>\") == \"5\"\nassert solution(\"4\\n3\\n<>\") == \"0\"\nassert solution(\"4\\n3\\n<-\") == \"3\"\nassert solution(\"5\\n2\\n>>\") == \"5\"\nassert solution(\"4\\n3\\n<>\") == \"0\"\nassert solution(\"4\\n3\\n<-\") == \"3\"\nassert solution(\"5\\n2\\n>>\") == \"5\"\nassert solution(\"4\\n3\\n<>\") == \"0\"\nassert solution(\"4\\n3\\n<-\") == \"3\"\nassert solution(\"5\\n2\\n>>\") == \"5\"\nassert solution(\"4\\n3\\n<>\") == \"0\"\nassert solution(\"4\\n3\\n<-\") == \"3\"\nassert solution(\"5\\n2\\n>>\") == \"5\"\nassert solution(\"4\\n3\\n<>\") == \"0\"\nassert solution(\"4\\n3\\n<-\") == \"3\"\nassert solution(\"5\\n2\\n>>\") == \"5\"\nassert solution(\"4\\n3\\n<>\") == \"0\"\nassert solution(\"4\\n3\\n<-\") == \"3\"\nassert solution(\"5\\n2\\n>>\") == \"5\"\nassert solution(\"4\\n3\\n<>\") == \"0\"\nassert solution(\"4\\n3\\n<-\") == \"3\"\nassert solution(\"5\\n2\\n>>\") == \"5\"\nassert solution(\"4\\n3\\n<>\") == \"0\"\nassert solution(\"4\\n3\\n<-\") == \"3\"\nassert solution(\"5\\n2\\n>>\") == \"5\"\nassert solution(\"4\\n3\\n<>\") == \"0\"\nassert solution(\"4\\n3\\n<-\") == \"3\"\nassert solution(\"5\\n2\\n>>\") == \"5\"\nassert solution(\"4\\n3\\n<>\") == \"0\"\nassert solution(\"4"
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"3\\n5\\n3\\n0\\n\", \"Test case failed.\""
    },
    {
        "number": 3830,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n4\\n-><-\\n5\\n>>>>>\") == \"3\\n5\\n3\\n0\""
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3) == 9\nassert solution(4) == 9\nassert solution(4) == 9\nassert solution(4) == 10\nassert solution(4) == -1"
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '16\\n9 9 10 \\n202\\n101 101 101 101'"
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 5\\n4 5\\n4 10\\n\") == \"16\"\nassert solution(\"4\\n1 100\\n100 1\\n1 100\\n100 1\\n\") == \"202\"\nassert solution(\"3\\n1 1\\n100 100\\n1 1\\n\") == \"-1\""
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n4 5\\n4 5\\n4 10\\n\") == \"16\\n9 9 10 \\n\"\nassert solution(\"4\\n1 100\\n100 1\\n1 100\\n100 1\\n\") == \"202\\n101 101 101 101 \\n\"\nassert solution(\"3\\n1 1\\n100 100\\n1 1\\n\") == \"-1\\n\""
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(open('input.txt', 'r').read()) == expected_output, \"The solution is incorrect.\""
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n4 5\\n4 5\\n4 10\") == \"16\\n9 9 10\"\nassert solution(\"4\\n1 100\\n100 1\\n1 100\\n100 1\") == \"202\\n101 101 101 101\"\nassert solution(\"3\\n1 1\\n100 100\\n1 1\") == \"-1\"\n"
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n4 5\\n4 5\\n4 10') == '16\\n9 9 10\\n\\n202\\n101 101 101 101\\n'"
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3\\n4 5\\n4 5\\n4 10') == 16\nassert solution('4\\n1 100\\n100 1\\n1 100\\n100 1') == 202\nassert solution('3\\n1 1\\n100 100\\n1 1') == -1"
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), \"Testcase failed\"\nprint(\"Testcase passed\")\n\nSolution:\n\nWe can solve this problem by using the following recurrence relation:\n\nFor each part, the total width of lawns will be equal to the total width of road for that part plus the width of the lawn at the current position.\n\nOnce the total width of lawns is equal to the total width of road for all parts, we can print the total width of lawns.\n\nThe recurrence relation can be broken down into the following steps:\n\nStep 1: Initialize the variables:\n\n- `total_road_width`: The total width of road for each part.\n- `total_lawn_width`: The total width of lawn for each part.\n- `current_part_width`: The width of the lawn for the current part.\n- `current_road_width`: The width of the road for the current part.\n- `current_lawn_width`: The width of the lawn for the current part.\n- `total_width`: The total width of lawns.\n\nStep 2: Iterate over the parts:\n\n- `for i in range(1, n + 1):`\n\nStep 3: Initialize the variables:\n\n- `current_part_width`: The width of the lawn for the current part.\n- `current_road_width`: The width of the road for the current part.\n- `current_lawn_width`: The width of the lawn for the current part.\n- `total_width`: The total width of lawns.\n\nStep 4: Calculate the width of the lawn for the current part:\n\n- `current_part_width = g_{i}`\n\nStep 5: Calculate the width of the road for the current part:\n\n- `current_road_width = s_{i}`\n\nStep 6: Calculate the width of the lawn for the current part:\n\n- `current_lawn_width = current_part_width`\n\nStep 7: Calculate the total width of lawns:\n\n- `total_width = current_road_width + current_lawn_width`\n\nStep 8: Update the variables:\n\n- `total_road_width[i] = current_road_width`\n- `total_lawn_width[i] = current_lawn_width`\n\nStep 9: Print the total width of lawns:\n\n- `print(total_width)`\n\nStep 10: Return the total width of lawns.\n\nThe time complexity of this solution is O(n), where n is the number of parts."
    },
    {
        "number": 3831,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n4 5\\n4 5\\n4 10\") == \"16\\n9 9 10\"\nassert solution(\"4\\n1 100\\n100 1\\n1 100\\n100 1\") == \"202\\n101 101 101 101\"\nassert solution(\"3\\n1 1\\n100 100\\n1 1\") == \"-1\""
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '''1 2 2 0 1'''\n\nn = int(input())\na = list(map(int, input().split()))\n\nhills = sorted(set(range(1, n+1)))\n\nmin_hours = [0] * n\n\nfor h in hills:\n    min_hours[h-1] += 1\n\nmin_hours[0] += min_hours[1]\nmin_hours[1] += min_hours[2]\n\nfor i in range(3, n+1):\n    min_hours[i-1] += min_hours[i-2]\n\nmin_hours[n-1] += min_hours[n-2]\n\nprint(*min_hours)\n"
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Incorrect output!\""
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Expected '{output}', got '{solution(input())}'\""
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 1 1 1 1\") == \"1 2 2\\n\"\nassert solution(\"3\\n1 2 3\") == \"0 2\\n\"\nassert solution(\"5\\n1 2 3 2 2\") == \"0 1 3\\n\""
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 1 1 1 1\\n\") == \"1 2 2\\n\"\nassert solution(\"3\\n1 2 3\\n\") == \"0 2\\n\"\nassert solution(\"5\\n1 2 3 2 2\\n\") == \"0 1 3\\n\""
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"1 2 2\\n0 2 \"\nassert solution() == \"0 2 \"\nassert solution() == \"0 1 3 \"\nassert solution() == \"0 2 \"\n\nfor k in range(1, int(n/2)+1):\n    if k % 2 == 0:\n        k //= 2\n    else:\n        k += 1\n    if solution() == \"0 2 \":\n        break\nelse:\n    print(\"No suitable hills found\")"
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 1 1 1 1\") == \"1 2 2\\n\", \"Test 1\"\nassert solution(\"3\\n1 2 3\") == \"0 2\\n\", \"Test 2\"\nassert solution(\"5\\n1 2 3 2 2\") == \"0 1 3\\n\", \"Test 3\""
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 1 1 1 1\") == \"1 2 2\\n\"\nassert solution(\"3\\n1 2 3\") == \"0 2\\n\"\nassert solution(\"5\\n1 2 3 2 2\") == \"0 1 3\\n\""
    },
    {
        "number": 3832,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 1 1 1 1\") == \"1 2 2\\n\"\nassert solution(\"3\\n1 2 3\") == \"0 2\\n\"\nassert solution(\"5\\n1 2 3 2 2\") == \"0 1 3\\n\""
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"101101\") == \"110110\", \"Input 1\"\nassert solution(\"10010110\") == \"01100011\", \"Input 2\"\nassert solution(\"10\") == \"01\", \"Input 3\""
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Test failed. Input: {input()}, Output: {output()}\"\n"
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"101101\\n110\\n\") == \"110110\"\nassert solution(\"10010110\\n100011\\n\") == \"01100011\"\nassert solution(\"10\\n11100\\n\") == \"01\""
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('101101') == '110110'\nassert solution('10010110') == '01100011'\nassert solution('10') == '01'"
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for input {input()} with output {expected_output}\""
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('101101') == '110110'\nassert solution('10010110') == '01100011'\nassert solution('10') == '01'"
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('101101', '110') == '110110'\nassert solution('10010110', '100011') == '01100011'\nassert solution('10', '11100') == '01'"
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"101101\") == \"110110\"\nassert solution(\"10010110\") == \"01100011\"\nassert solution(\"10\") == \"01\""
    },
    {
        "number": 3833,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('101101') == '110110'\nassert solution('10010110') == '01100011'\nassert solution('10') == '01'"
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 5 2\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n\") == \"1\"\nassert solution(\"3 4 1\\n1 0 0 0\\n0 1 1 1\\n1 1 1 0\\n1 0 0 1\\n1 0 0 1\\n\") == \"-1\"\nassert solution(\"3 4 1\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n1 0 0 1\\n\") == \"0\""
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 5 2\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n\") == 1\nassert solution(\"3 4 1\\n1 0 0 0\\n0 1 1 1\\n1 1 1 0\\n1 0 0 1\\n1 0 0 1\\n\") == -1\nassert solution(\"3 4 1\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n1 0 0 1\\n\") == 0"
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 5 2\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1\\n1 1 1 1 1\") == 1\nassert solution(\"3 4 1\\n1 0 0 0\\n0 1 1 1\\n1 1 1 0\\n1 0 0 1\\n1 1 1 0\") == -1\nassert solution(\"3 4 1\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n1 1 1 0\\n1 0 0 1\") == 0"
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(10) == -1\nassert solution(30) == 1\nassert solution(10) == 0"
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 5 2\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n\") == 1\nassert solution(\"3 4 1\\n1 0 0 0\\n0 1 1 1\\n1 1 1 0\\n1 0 0 1\\n1 0 0 1\\n\") == -1\nassert solution(\"3 4 1\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n1 0 0 1\\n\") == 0"
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt', 'r').read()) == '-1'\nassert solution(open('input2.txt', 'r').read()) == '1'\nassert solution(open('input3.txt', 'r').read()) == '-1'\nassert solution(open('input4.txt', 'r').read()) == '0'\nassert solution(open('input5.txt', 'r').read()) == '-1'"
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 5 2\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1\\n1 1 1 1 1\") == 1\nassert solution(\"3 4 1\\n1 0 0 0\\n0 1 1 1\\n1 1 1 0\\n1 0 0 1\\n1 0 0 1\") == -1\nassert solution(\"3 4 1\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n1 0 0 1\") == 0"
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 5 2\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n\") == \"1\"\nassert solution(\"3 4 1\\n1 0 0 0\\n0 1 1 1\\n1 1 1 0\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n\") == \"-1\"\nassert solution(\"3 4 1\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n\") == \"0\""
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 5 2\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 0 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n\") == \"1\\n\"\nassert solution(\"3 4 1\\n1 0 0 0\\n0 1 1 1\\n1 1 1 0\\n1 0 0 1\\n1 0 0 1\\n\") == \"-1\\n\"\nassert solution(\"3 4 1\\n1 0 0 1\\n0 1 1 0\\n1 0 0 1\\n1 0 0 1\\n\") == \"0\\n\""
    },
    {
        "number": 3834,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution(solution"
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"2 2 3 1 2  \\n9999 10000 9998\", \"Your solution is incorrect. Please check the examples given.\""
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected_output, f\"Got {solution(input())}, expected {expected_output}\""
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n0 4 6 2 4\\n4 0 6 2 4\\n6 6 0 3 6\\n2 2 3 0 2\\n4 4 6 2 0\\n\") == \"2 2 3 1 2 2 1 2\"\nassert solution(\"3\\n0 99990000 99970002\\n99990000 0 99980000\\n99970002 99980000 0\\n\") == \"9999 10000 9998\"\nassert solution(\"\") == \"\""
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0 4 6 2 4\\n4 0 6 2 4\\n6 6 0 3 6\\n2 2 3 0 2\\n4 4 6 2 0\") == \"2 2 3 1 2 4\"\nassert solution(\"0 0\\n99990000 99970002\\n99990000 0 99980000\\n99970002 99980000 0\") == \"9999 10000 9998\"\nassert solution(\"0 0\\n0 0\\n0 0\\n0 0\") == \"0 0\""
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n0 4 6 2 4\\n4 0 6 2 4\\n6 6 0 3 6\\n2 2 3 0 2\\n4 4 6 2 0\") == \"2 2 3 1 2 2 2 3 3 2 2 3 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 "
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"2 2 3 1 2 2\", \"Expected output is: '2 2 3 1 2 2', but got: '\"+str(solution())+\"'\"\n"
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Solution does not match the expected output. Input: {input()}, Expected Output: {expected_output}\""
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2 2 3 1 2 0\", \"Expected output is incorrect.\""
    },
    {
        "number": 3835,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n0 4 6 2 4\\n4 0 6 2 4\\n6 6 0 3 6\\n2 2 3 0 2\\n4 4 6 2 0\\n\") == \"2 2 3 1 2  \"\nassert solution(\"3\\n0 99990000 99970002\\n99990000 0 99980000\\n99970002 99980000 0\\n\") == \"9999 10000 9998\""
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_str) == expected_output\n"
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\n11 6\\n10 4\\n01 3\\n00 3\\n00 7\\n00 9\") == 22\nassert solution(\"5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1\\n\") == 103\nassert solution(\"6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28\\n\") == 105\nassert solution(\"3\\n00 5000\\n00 5000\\n00 5000\") == 0"
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Solution {solution(input())} doesn't match expected output.\\nExpected: {expected}\"\n"
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"0\""
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('6\\n11 6\\n10 4\\n01 3\\n00 3\\n00 7\\n00 9') == '22\\n'\nassert solution('5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1') == '103\\n'\nassert solution('6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28') == '105\\n'\nassert solution('3\\n00 5000\\n00 5000\\n00 5000') == '0\\n'"
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n11 6\\n10 4\\n01 3\\n00 3\\n00 7\\n00 9\") == \"22\"\nassert solution(\"5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1\") == \"103\"\nassert solution(\"6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28\") == \"105\"\nassert solution(\"3\\n00 5000\\n00 5000\\n00 5000\") == \"0\""
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 22\nassert solution(input()) == 22"
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"11 6\\n10 4\\n01 3\\n00 3\\n00 7\\n00 9\") == 22\nassert solution(\"5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1\") == 103\nassert solution(\"6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28\") == 105\nassert solution(\"3\\n00 5000\\n00 5000\\n00 5000\") == 0"
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n11 6\\n10 4\\n01 3\\n00 3\\n00 7\\n00 9\\n\") == 22\nassert solution(\"5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1\\n\") == 103\nassert solution(\"6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28\\n\") == 105\nassert solution(\"3\\n00 5000\\n00 5000\\n00 5000\\n\") == 0"
    },
    {
        "number": 3836,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('6\\n11 6\\n10 4\\n01 3\\n00 3\\n00 7\\n00 9') == '22'\nassert solution('5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1') == '103'\nassert solution('6\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28') == '105'\nassert solution('3\\n00 5000\\n00 5000\\n00 5000') == '0'"
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 4 9\\n1 3 1 2\\n2 1 3\\n4 3 6') == 'YES\\n2 3 2 3\\n'\nassert solution('3 4 10\\n2 3 1 2\\n2 1 3\\n4 3 6') == 'YES\\n1 3 1 3\\n'\nassert solution('3 4 9\\n2 3 1 2\\n2 1 3\\n4 3 6') == 'YES\\n3 3 2 3\\n'\nassert solution('3 4 5\\n1 3 1 2\\n2 1 3\\n5 3 6') == 'NO'"
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    3 4 9\n    1 3 1 2\n    2 1 3\n    4 3 6\n    \"\"\"\n) == \"YES\\n2 3 2 3\\n\"\n\nassert solution(\n    \"\"\"\n    3 4 10\n    2 3 1 2\n    2 1 3\n    4 3 6\n    \"\"\"\n) == \"YES\\n1 3 1 3\\n\"\n\nassert solution(\n    \"\"\"\n    3 4 9\n    2 3 1 2\n    2 1 3\n    4 3 6\n    \"\"\"\n) == \"YES\\n3 3 2 3\\n\"\n\nassert solution(\n    \"\"\"\n    3 4 5\n    1 3 1 2\n    2 1 3\n    5 3 6\n    \"\"\"\n) == \"NO\""
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4 9\\n1 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n2 3 2 3\"\nassert solution(\"3 4 10\\n2 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n1 3 1 3\"\nassert solution(\"3 4 9\\n2 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n3 3 2 3\"\nassert solution(\"3 4 5\\n1 3 1 2\\n2 1 3\\n5 3 6\") == \"NO\""
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 4 9\\n1 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n2 3 2 3\\n\"\nassert solution(\"3 4 10\\n2 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n1 3 1 3\\n\"\nassert solution(\"3 4 9\\n2 3 1 2\\n2 1 3\\n4 3 6\") == \"YES\\n3 3 2 3\\n\"\nassert solution(\"3 4 5\\n1 3 1 2\\n2 1 3\\n5 3 6\") == \"NO\""
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 4 9\\n1 3 1 2\\n2 1 3\\n4 3 6') == 'YES\\n2 3 2 3\\nYES\\n1 3 1 3\\nYES\\n3 3 2 3'\nassert solution('3 4 10\\n2 3 1 2\\n2 1 3\\n4 3 6') == 'YES\\n1 3 1 3\\nYES\\n3 3 2 3'\nassert solution('3 4 9\\n2 3 1 2\\n2 1 3\\n4 3 6') == 'YES\\n3 3 2 3\\nYES\\n1 3 1 3'\nassert solution('3 4 5\\n1 3 1 2\\n2 1 3\\n5 3 6') == 'NO'\n"
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 4 9\\n1 3 1 2\\n2 1 3\\n4 3 6') == 'YES\\n2 3 2 3'\nassert solution('3 4 10\\n2 3 1 2\\n2 1 3\\n4 3 6') == 'YES\\n1 3 1 3'\nassert solution('3 4 9\\n2 3 1 2\\n2 1 3\\n4 3 6') == 'YES\\n3 3 2 3'\nassert solution('3 4 5\\n1 3 1 2\\n2 1 3\\n5 3 6') == 'NO'"
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 4 9\\n1 3 1 2\\n2 1 3\\n4 3 6') == 'YES\\n2 3 2 3\\n'\nassert solution('3 4 10\\n2 3 1 2\\n2 1 3\\n4 3 6') == 'YES\\n1 3 1 3\\n'\nassert solution('3 4 9\\n2 3 1 2\\n2 1 3\\n4 3 6') == 'YES\\n3 3 2 3\\n'\nassert solution('3 4 5\\n1 3 1 2\\n2 1 3\\n5 3 6') == 'NO\\n'"
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open('input.txt', 'r')) == 'YES\\n2 3 2 3\\nYES\\n1 3 1 3\\nYES\\n3 3 2 3\\nNO'\n"
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4 9\\n1 3 1 2\\n2 1 3\\n4 3 6\\n\") == \"YES\\n2 3 2 3\\n\"\nassert solution(\"3 4 10\\n2 3 1 2\\n2 1 3\\n4 3 6\\n\") == \"YES\\n1 3 1 3\\n\"\nassert solution(\"3 4 9\\n2 3 1 2\\n2 1 3\\n4 3 6\\n\") == \"YES\\n3 3 2 3\\n\"\nassert solution(\"3 4 5\\n1 3 1 2\\n2 1 3\\n5 3 6\\n\") == \"NO\""
    },
    {
        "number": 3837,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 2, \"The solution is incorrect.\""
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 1\\n2 3 4 1\\n1 2 3 4\\n') == 'NO'\nassert solution('4 1\\n4 3 1 2\\n3 4 2 1\\n') == 'YES'\nassert solution('4 3\\n4 3 1 2\\n3 4 2 1\\n') == 'YES'\nassert solution('4 2\\n4 3 1 2\\n2 1 4 3\\n') == 'YES'\nassert solution('4 1\\n4 3 1 2\\n2 1 4 3\\n') == 'NO'"
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 1\\n2 3 4 1\\n1 2 3 4\") == \"NO\"\nassert solution(\"4 1\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 3\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 2\\n4 3 1 2\\n2 1 4 3\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n2 1 4 3\") == \"NO\""
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 1\\n2 3 4 1\\n1 2 3 4\") == \"NO\"\nassert solution(\"4 1\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 3\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 2\\n4 3 1 2\\n2 1 4 3\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n2 1 4 3\") == \"NO\""
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 1\\n2 3 4 1\\n1 2 3 4\\n\") == \"NO\"\nassert solution(\"4 1\\n4 3 1 2\\n3 4 2 1\\n\") == \"YES\"\nassert solution(\"4 3\\n4 3 1 2\\n3 4 2 1\\n\") == \"YES\"\nassert solution(\"4 2\\n4 3 1 2\\n2 1 4 3\\n\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n2 1 4 3\\n\") == \"NO\""
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 1\\n2 3 4 1\\n1 2 3 4') == 'NO'\nassert solution('4 1\\n4 3 1 2\\n3 4 2 1') == 'YES'\nassert solution('4 3\\n4 3 1 2\\n3 4 2 1') == 'YES'\nassert solution('4 2\\n4 3 1 2\\n2 1 4 3') == 'YES'\nassert solution('4 1\\n4 3 1 2\\n2 1 4 3') == 'NO'\n"
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\""
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 1\\n2 3 4 1\\n1 2 3 4\") == \"NO\"\nassert solution(\"4 1\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 3\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 2\\n4 3 1 2\\n2 1 4 3\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n2 1 4 3\") == \"NO\""
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 1\\n2 3 4 1\\n1 2 3 4\") == \"NO\"\nassert solution(\"4 1\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 3\\n4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 2\\n4 3 1 2\\n2 1 4 3\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n2 1 4 3\") == \"NO\""
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 1\\n2 3 4 1\\n1 2 3 4') == 'NO'\nassert solution('4 1\\n4 3 1 2\\n3 4 2 1') == 'YES'\nassert solution('4 3\\n4 3 1 2\\n3 4 2 1') == 'YES'\nassert solution('4 2\\n4 3 1 2\\n2 1 4 3') == 'YES'\nassert solution('4 1\\n4 3 1 2\\n2 1 4 3') == 'NO'"
    },
    {
        "number": 3838,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 1\\n2 3 4 1\\n1 2 3 4\\n\") == \"NO\\n\"\nassert solution(\"4 1\\n4 3 1 2\\n3 4 2 1\\n\") == \"YES\\n\"\nassert solution(\"4 3\\n4 3 1 2\\n3 4 2 1\\n\") == \"YES\\n\"\nassert solution(\"4 2\\n4 3 1 2\\n2 1 4 3\\n\") == \"YES\\n\"\nassert solution(\"4 1\\n4 3 1 2\\n2 1 4 3\\n\") == \"NO\\n\""
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(4) == '1 1\\n3 1\\n1 5\\n4 4'\nassert solution(7) == '2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6'"
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n\") == \"1 1\\n3 1\\n1 5\\n4 4\\n\", \"Input\"\nassert solution(\"7\\n\") == \"2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n\", \"Input\""
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\") == \"1 1\\n3 1\\n1 5\\n4 4\"\nassert solution(\"7\") == \"2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\""
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n'\nassert solution() == '1 1\\n3 1\\n1 5\\n4 4\\n'\nassert solution() == '2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n'\nassert solution() == '1 1\\n3 1\\n1 5\\n4 4\\n'\nassert solution() == '2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n'\nassert solution() == '1 1\\n3 1\\n1 5\\n4 4\\n'\nassert solution() == '2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n'\nassert solution() == '1 1\\n3 1\\n1 5\\n4 4\\n'\nassert solution() == '2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n'\nassert solution() == '1 1\\n3 1\\n1 5\\n4 4\\n'\nassert solution() == '2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n'\nassert solution() == '1 1\\n3 1\\n1 5\\n4 4\\n'\nassert solution() == '2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n'\nassert solution() == '1 1\\n3 1\\n1 5\\n4 4\\n'\nassert solution() == '2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n'\nassert solution() == '1 1\\n3 1\\n1 5\\n4 4\\n'\nassert solution() == '2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n'\nassert solution() == '1 1\\n3 1\\n1 5\\n4 4\\n'\nassert solution() == '2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n'\nassert solution() == '1 1\\n3 1\\n1 5\\n4 4\\n'\nassert solution() == '2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n'\nassert solution() == '1 1\\n3 1\\n1 5\\n4 4\\n'\nassert solution() == '2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n'\nassert solution() == '1 1\\n3 1\\n1 5\\n4 4\\n'\nassert solution() == '2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n'\nassert solution() == '1 1\\n3 1\\n1 5\\n4 4\\n'\nassert solution() == '2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n'\nassert solution() == '1 1\\n3 1\\n1 5\\n4 4\\n'\nassert solution() == '2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n'\nassert solution() == '1 1\\n3 1\\n1 5"
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''4''') == '''1 1\n3 1\n1 5\n4 4'''\n\nassert solution('''7''') == '''2 1\n1 2\n4 1\n5 2\n2 6\n5 7\n6 6'''"
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(4) == '1 1\\n3 1\\n1 5\\n4 4'\nassert solution(7) == '2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6'"
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\") == \"1 1\\n3 1\\n1 5\\n4 4\"\nassert solution(\"7\") == \"2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\""
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\") == \"1 1\\n3 1\\n1 5\\n4 4\"\nassert solution(\"7\") == \"2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\""
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3839,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n\") == \"1 1\\n3 1\\n1 5\\n4 4\\n\"\nassert solution(\"7\\n\") == \"2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n\""
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 2 3\") == \"3\"\nassert solution(\"1\\n\") == \"-1\"\nassert solution(\"2\\n1 2\\n\") == \"2\"\nassert solution(\"1\\n1\\n\") == \"1\"\nassert solution(\"3\\n1 1 1\\n2 2 2\\n3 3 3\") == \"3\"\nassert solution(\"2\\n1 1\\n2 2\\n\") == \"2\"\nassert solution(\"2\\n1 2\\n3 3\\n\") == \"2\"\nassert solution(\"1\\n1 1\\n2 2\\n3 3\\n\") == \"1\"\nassert solution(\"2\\n1 1\\n2 2\\n3 3\\n4 4\\n\") == \"1\"\nassert solution(\"1\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n\") == \"1\"\nassert solution(\"3\\n1 1 1\\n2 2 2\\n3 3 3\\n4 4 4\\n5 5 5\") == \"2\"\nassert solution(\"2\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n\") == \"2\"\nassert solution(\"2\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n\") == \"2\"\nassert solution(\"1\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n\") == \"2\"\nassert solution(\"2\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n\") == \"2\"\nassert solution(\"1\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n\") == \"2\"\nassert solution(\"2\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 11\\n\") == \"2\"\nassert solution(\"1\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 11\\n12 12\\n\") == \"2\"\nassert solution(\"2\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 11\\n12 12\\n13 13\\n\") == \"2\"\nassert solution(\"1\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 11\\n12 12\\n13 13\\n14 14\\n\") == \"2\"\nassert solution(\"2\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 11\\n12 12\\n13 13\\n14 14\\n15 15\\n\") == \"2\"\nassert solution(\"1\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 1"
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n1\\n\") == -1\nassert solution(\"3\\n1 2 3\\n\") == 3\nprint(\"All tests passed.\")"
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n') == '-1\\n'\nassert solution('3\\n1 2 3\\n') == '3\\n'"
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n1\\n\") == -1\nassert solution(\"3\\n1 2 3\\n\") == 3\nassert solution(\"5\\n1 2 3\\n2 3 4\\n1 2 3\\n\") == -1\nassert solution(\"3\\n1 2 3\\n4 5 6\\n7 8 9\\n\") == 4\n"
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('''\n    1\n    1\n    ''') == '-1'\n\nassert solution('''\n    3\n    1 2 3\n    ''') == '3'"
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1') == -1\nassert solution('3') == 3"
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input_1) == \"3\", \"Incorrect output. Expected '3', got '{}'.\".format(solution(input_1))\nassert solution(input_2) == \"1\", \"Incorrect output. Expected '1', got '{}'.\".format(solution(input_2))\nassert solution(input_3) == \"1\", \"Incorrect output. Expected '1', got '{}'.\".format(solution(input_3))"
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n1\") == \"0\\n0\"\nassert solution(\"3\\n1 2 3\") == \"3\\n1\\n1\\n0\"\nassert solution(\"2\\n5\\n5\") == \"-1\\n-1\"\nassert solution(\"1\\n1 1 1 1 1\") == \"-1\\n-1\"\n"
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n1 2 3\\n') == '-1\\n'\nassert solution('4\\n1 2 3 4\\n') == '3\\n'\nassert solution('5\\n1 2 3 4 5\\n') == '4\\n'\nassert solution('6\\n1 2 3 4 5 6\\n') == '3\\n'\nassert solution('7\\n1 2 3 4 5 6 7\\n') == '2\\n'\nassert solution('8\\n1 2 3 4 5 6 7 8\\n') == '1\\n'\nassert solution('9\\n1 2 3 4 5 6 7 8 9\\n') == '0\\n'"
    },
    {
        "number": 3840,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1\\n1\\n') == '-1\\n'  # no moves allowed\nassert solution('3\\n1 2 3\\n') == '3\\n'  # can't empty the third chest\nassert solution('3\\n1 2 3\\n') == '3\\n'  # can't empty the third chest\nassert solution('3\\n1 2 3\\n') == '3\\n'  # can't empty the third chest\nassert solution('3\\n1 2 3\\n') == '3\\n'  # can't empty the third chest\nassert solution('3\\n1 2 3\\n') == '3\\n'  # can't empty the third chest\nassert solution('3\\n1 2 3\\n') == '3\\n'  # can't empty the third chest\nassert solution('3\\n1 2 3\\n') == '3\\n'  # can't empty the third chest\nassert solution('3\\n1 2 3\\n') == '3\\n'  # can't empty the third chest\nassert solution('3\\n1 2 3\\n') == '3\\n'  # can't empty the third chest\nassert solution('3\\n1 2 3\\n') == '3\\n'  # can't empty the third chest\nassert solution('3\\n1 2 3\\n') == '3\\n'  # can't empty the third chest\nassert solution('3\\n1 2 3\\n') == '3\\n'  # can't empty the third chest\nassert solution('3\\n1 2 3\\n') == '3\\n'  # can't empty the third chest\nassert solution('3\\n1 2 3\\n') == '3\\n'  # can't empty the third chest\nassert solution('3\\n1 2 3\\n') == '3\\n'  # can't empty the third chest\nassert solution('3\\n1 2 3\\n') == '3\\n'  # can't empty the third chest\nassert solution('3\\n1 2 3\\n') == '3\\n'  # can't empty the third chest\nassert solution('3\\n1 2 3\\n') == '3\\n'  # can't empty the third chest\nassert solution('3\\n1 2 3\\n') == '3\\n'  # can't empty the third chest\nassert solution('3\\n1 2 3\\n') == '3\\n'  # can't empty the third chest\nassert solution('3\\n1 2 3\\n') == '3\\n'  # can't empty the third chest\nassert solution('3\\n1 2 3\\n') == '3\\n'  # can't empty the third chest\nassert solution('3\\n1 2 3\\n') == '3\\n'  # can't empty the third chest\nassert solution('3\\n1 2 3\\n') == '3\\n'  # can't empty the third chest\nassert solution('3\\n1 2 3\\n') == '3\\n'  # can't empty the third chest\nassert solution('3\\n1 2 3\\n') == '3\\n'  # can't empty the third chest\nassert solution('3\\n1 2 3\\n') == '3\\n'  # can't empty the third chest\nassert solution('3\\n1 2 3\\n') == '3\\n'  # can't empty the third chest\nassert solution('3\\n1 2 3\\n') == '3\\n'  # can't empty the third chest\nassert solution('3\\n1 2 3\\n') == '3\\n'  # can't empty the third chest\nassert solution('3\\n1 2 3\\n') == '3\\n'  # can't empty the third chest\nassert solution('3\\n1 2 3\\n') == '3\\n'  # can't empty the third chest\nassert solution('3\\n1 2 3\\n') == '3\\n'  # can't empty the third chest\nassert solution('3\\n1 2 3\\n')"
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"\"\"\n7\n0 1 0 0 1 1 1\n3\n92 205 1\n\"\"\"\n\nfrom functools import reduce"
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"46 2\\n2018 214\") == \"3\\n92 205 1\"\nassert solution(\"2018 1\") == \"2\""
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"46 2\\n2018 214\") == \"3\\n92 205 1\"\nassert solution(\"2018 214\") == \"3\\n92 205 1\"\n"
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, \"Test case failed\"\n"
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"46 2\\n2018 214\\n\") == \"3\\n92 205 1\\n\"\nassert solution(\"2018 214\\n46 2\\n\") == \"7\\n0 1 0 0 1 1 1\\n\"\nassert solution(\"1 1\\n1\\n\") == \"2\\n1\\n\"\nassert solution(\"1 2\\n1\\n\") == \"-1\\n1\\n\"\nassert solution(\"1 3\\n1\\n\") == \"0\\n1\\n\"\n"
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"46 2\\n2018 214\\n\") == \"3\\n92 205 1\\n\"\nprint(solution(\"46 2\\n2018 214\\n\"))"
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('46 2') == '7\\n0 1 0 0 1 1 1'\nassert solution('2018 214') == '3\\n92 205 1'"
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"46 2\") == \"7\\n0 1 0 0 1 1 1\"\nassert solution(\"2018 214\") == \"3\\n92 205 1\""
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"\"\"7\n0 1 0 0 1 1 1\n3\n92 205 1\"\"\""
    },
    {
        "number": 3841,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"46 2\") == \"7\\n0 1 0 0 1 1 1\"\nassert solution(\"2018 214\") == \"3\\n92 205 1\"\nassert solution(\"2017 213\") == \"1\\n1\""
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 20 20\\n6 2\\n1 3\\n2 6\") == 5.0\nassert solution(\"4 1 1\\n2 3\\n3 2\\n2 3\\n3 2\") == 0.4"
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 20 20\\n6 2\\n1 3\\n2 6\\n\") == 5.0\nassert solution(\"4 1 1\\n2 3\\n3 2\\n2 3\\n3 2\\n\") == 0.4\nassert solution(\"10 10 10\\n10 10 10\\n10 10 10\\n10 10 10\\n\") == 5.0\nassert solution(\"5 10 5\\n10 5\\n5 10\\n10 5\\n5 10\\n\") == 5.0\nassert solution(\"1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == 0.0\n"
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == 5.000000000000000"
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 20 20\\n6 2\\n1 3\\n2 6\") == \"5.000000000000000\\n\", \"The output is incorrect\""
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 20 20\\n6 2\\n1 3\\n2 6\\n\") == \"5.000000000000000\"\nassert solution(\"4 1 1\\n2 3\\n3 2\\n2 3\\n3 2\\n\") == \"0.400000000000000\""
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"5.000000000000000\""
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == 5.000000000000000"
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"5.000000000000000\"\n"
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 20 20\\n6 2\\n1 3\\n2 6\\n\") == \"5.000000000000000\"\nassert solution(\"4 1 1\\n2 3\\n3 2\\n2 3\\n3 2\\n\") == \"0.400000000000000\""
    },
    {
        "number": 3842,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 20 20\\n6 2\\n1 3\\n2 6\") == 5.0\nassert solution(\"4 1 1\\n2 3\\n3 2\\n2 3\\n3 2\") == 0.4\nassert solution(\"3 20 20\\n6 2\\n1 3\\n2 6\\n3 2\\n1 5\\n4 3\\n2 5\\n5 4\\n\") == 5.0\nassert solution(\"4 1 1\\n2 3\\n3 2\\n2 3\\n3 2\\n\") == 0.4\nassert solution(\"3 20 20\\n6 2\\n1 3\\n2 6\\n3 2\\n1 5\\n4 3\\n2 5\\n5 4\\n\") == 5.0\nassert solution(\"4 1 1\\n2 3\\n3 2\\n2 3\\n3 2\\n\") == 0.4"
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"4\"\nassert solution(\"8 2\") == \"5\""
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\") == \"4\", \"Test 1\"\nassert solution(\"8 2\") == \"5\", \"Test 2\"\n"
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == \"4\"\nassert solution(\"8 2\") == \"5\""
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\"\n"
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"4\"\nassert solution(\"8 2\") == \"5\"\n"
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == 4\nassert solution(\"8 2\") == 5"
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"4\"\nassert solution(\"8 2\") == \"5\""
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 3') == '4'\nassert solution('8 2') == '5'"
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == \"4\"\nassert solution(\"8 2\") == \"5\""
    },
    {
        "number": 3843,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"4\"\nassert solution(\"8 2\") == \"5\""
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n4 5 7\\n\") == \"Conan\"\nassert solution(\"2\\n1 1\\n\") == \"Agasa\""
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == 'Conan'\nassert solution(2) == 'Agasa'"
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n4 5 7\") == \"Conan\"\nassert solution(\"2\\n1 1\") == \"Agasa\""
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Error: Expected {expected_output}, but got {solution(input())}.\""
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n4 5 7\\n\") == \"Conan\"\nassert solution(\"2\\n1 1\\n\") == \"Agasa\""
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"Conan\"\nassert solution(2) == \"Agasa\""
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"Conan\"\nassert solution() == \"Agasa\""
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n4 5 7\\n\") == \"Conan\"\nassert solution(\"2\\n1 1\\n\") == \"Agasa\""
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n4 5 7\") == \"Conan\"\nassert solution(\"2\\n1 1\") == \"Agasa\""
    },
    {
        "number": 3844,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n4 5 7\") == \"Conan\"\nassert solution(\"2\\n1 1\") == \"Agasa\""
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"\"\"\n3 3\n##.\n..#\n"
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"\"\"\n    3 3\n##.\n..#\n"
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(2, 3) == \"3 3\\n##.##\\n..#..#\\n#.#..#\"\n"
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == \"\"\"\n3 3\n##.\n..#\n"
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"3 3\\n3 3\\n3 3\""
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"3 3\\n##.\\n..#\\n#.#\\n\"\n"
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 3') == '3 3\\n3\\n#.\\n#.\\n'\nassert solution('2 2') == '3 3\\n3\\n#.\\n#.\\n'\nassert solution('3 3') == '3 3\\n3\\n#.\\n#.\\n'\nassert solution('4 4') == '3 3\\n3\\n#.\\n#.\\n'\nassert solution('5 5') == '3 3\\n3\\n#.\\n#.\\n'"
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"\"\"\n3 3\n"
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == \"3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 3\\n3 "
    },
    {
        "number": 3845,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == '''3 3\n##.\n..#\n"
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Input\") == \"Output\""
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r').read()) == '4\\n1 3 4 5 \\n1 3 \\n0\\n'"
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output, \"The solution is not correct.\""
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\") == \"4\\n1 3 4 5 \"\nassert solution(\"3 2\\n+ 1\\n- 2\\n\") == \"1\\n3 \nassert solution(\"2 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\") == \"0\\n\"\nassert solution(\"5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\") == \"3\\n2 3 5 \"\nassert solution(\"2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\") == \"0\\n\""
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Input {input()} is incorrect, expected {expected_output}, but got {solution(input())}\""
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt').read()) == '0\\n'"
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\") == \"4\\n1 3 4 5 \\n\"\nassert solution(\"3 2\\n+ 1\\n- 2\\n\") == \"1\\n3 \nInput\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\") == \"0\\n\"\nassert solution(\"5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\") == \"3\\n2 3 5 \\n\"\nassert solution(\"2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\") == \"0\\n\""
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\\n5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\\n5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\\n5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\") == \"4\\n1 3 4 5\"\nassert solution(\"3 2\\n+ 1\\n- 2\\n\\n3 2\\n+ 1\\n- 2\\n\\n3 2\\n+ 1\\n- 2\\n\\n3 2\\n+ 1\\n- 2\\n\\n3 2\\n+ 1\\n- 2\\n\\n3 2\\n+ 1\\n- 2\\n\") == \"1\"\nassert solution(\"2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\") == \"0\"\nassert solution(\"5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\") == \"3\\n2 3 5\"\nassert solution(\"2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\") == \"0\""
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n5 4\n+ 1\n+ 2\n- 2\n- 1\n''') == '''\n4\n1 3 4 5\n'''.strip()\n\nassert solution('''\n3 2\n+ 1\n- 2\n''') == '''\n1\n3 \n'''.strip()\n\nassert solution('''\n2 4\n+ 1\n- 1\n+ 2\n- 2\n''') == '''\n0\n'''.strip()\n\nassert solution('''\n5 6\n+ 1\n- 1\n- 3\n+ 3\n+ 4\n- 4\n''') == '''\n3\n2 3 5\n'''.strip()\n\nassert solution('''\n2 4\n+ 1\n- 2\n+ 2\n- 1\n''') == '''\n0\n'''.strip()"
    },
    {
        "number": 3846,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\\n5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n\\n5 4\\n+ 1\\n+ 2\\n- 2\\n- 1\\n') == '4\\n1 3 4 5 '\nassert solution('3 2\\n+ 1\\n- 2\\n\\n5 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n') == '1\\n3 \nassert solution('2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\\n5 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n') == '0\\n'\nassert solution('5 6\\n+ 1\\n- 1\\n- 3\\n+ 3\\n+ 4\\n- 4\\n\\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n') == '3\\n2 3 5 '\nassert solution('2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n\\n5 4\\n+ 1\\n- 1\\n+ 2\\n- 2\\n\\n2 4\\n+ 1\\n- 2\\n+ 2\\n- 1\\n') == '0\\n'"
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"4\"\nassert solution() == \"1\""
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\na 2 3\\na 2 3\\nx 9\\n\\nOutput\\n4\\nx 1\") == \"4\\nx 1\"\nassert solution(\"5 1\\nx 5 4 2 4 5\\ny 2\\nx 5\\n\\nOutput\\n1\") == \"1\""
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n1 2 3\\n1 2 3\\n9\\n\") == \"4\"\nassert solution(\"5 1\\n5 4 2 4 5\\n2\\n5\\n\") == \"1\"\n"
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n1 2 3\\n1 2 3\\n9\\n\") == \"4\\n\"\nassert solution(\"5 1\\n5 4 2 4 5\\n2\\n5\\n\") == \"1\\n\""
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n1 2 3\\n1 2 3\\n9\\n\") == \"4\\n\"\nassert solution(\"5 1\\n5 4 2 4 5\\n2\\n5\\n\") == \"1\\n\"\n"
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 1\\n5 4 2 4 5\\n2\\n5\") == \"1\"\nassert solution(\"3 3\\n1 2 3\\n1 2 3\\n9\") == \"4\"\nassert solution(\"5 1\\n5 4 2 4 5\\n2\\n5\") == \"1\"\nassert solution(\"3 3\\n1 2 3\\n1 2 3\\n9\") == \"4\""
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''3 3\n1 2 3\n1 2 3\n9\n''') == '4'\n\nassert solution('''5 1\n5 4 2 4 5\n2\n5\n''') == '1'"
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 3\\n1 2 3\\n1 2 3\\n9\\n\\n5 1\\n5 4 2 4 5\\n2\\n5\\n\\n\\nOutput\\n4\\n\\nInput\\n5 1\\n5 4 2 4 5\\n2\\n5\\n\\nOutput\\n1') == '4\\n\\nInput\\n5 1\\n5 4 2 4 5\\n2\\n5\\n\\nOutput\\n1\\n\\nInput\\n5 1\\n5 4 2 4 5\\n2\\n5\\n\\nOutput\\n0')\n"
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"4\\n\", \"Output not as expected.\"\nassert solution(stdin) == \"1\\n\", \"Output not as expected.\""
    },
    {
        "number": 3847,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"0\\n\""
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\ncba\") == \"NO\"\nassert solution(\"3 4\\ncba\") == \"cbd\"\nassert solution(\"4 4\\nabcd\") == \"abda\"\n\nfrom typing import List"
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\ncba\\n\") == \"NO\\n\"\nassert solution(\"3 4\\ncba\\n\") == \"cbd\\n\"\nassert solution(\"4 4\\nabcd\\n\") == \"abda\\n\""
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\ncba\") == \"NO\"\nassert solution(\"3 4\\ncba\") == \"cbd\"\nassert solution(\"4 4\\nabcd\") == \"abda\""
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\ncba\") == \"NO\"\nassert solution(\"3 4\\ncba\") == \"cbd\"\nassert solution(\"4 4\\nabcd\") == \"abda\""
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3, 3, \"cba\") == \"NO\"\nassert solution(3, 4, \"cba\") == \"cbd\"\nassert solution(4, 4, \"abcd\") == \"abda\""
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\ncba\") == \"NO\"\nassert solution(\"3 4\\ncba\") == \"cbd\"\nassert solution(\"4 4\\nabcd\") == \"abda\""
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 3\\ncab') == 'NO'\nassert solution('3 4\\ncab') == 'cbd'\nassert solution('4 4\\nabd') == 'abda'"
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\ncba\") == \"NO\"\nassert solution(\"3 4\\ncba\") == \"cbd\"\nassert solution(\"4 4\\nabcd\") == \"abda\"\n"
    },
    {
        "number": 3848,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\ncba\") == \"NO\"\nassert solution(\"3 4\\ncba\") == \"cbd\"\nassert solution(\"4 4\\nabcd\") == \"abda\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 2\\n0101\\n\") == \"quailty\\n\"\nassert solution(\"6 1\\n010101\\n\") == \"once again\\n\"\nassert solution(\"6 5\\n010101\\n\") == \"tokitsukaze\\n\"\nassert solution(\"4 1\\n0011\\n\") == \"once again\\n\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"Duel!\") == \"quailty\"\nassert solution(\"Betting on the lovely princess Claris, the duel between Tokitsukaze and Quailty has started.\") == \"quailty\"\nassert solution(\"There are $n$ cards in a row. Each card has two sides, one of which has color. At first, some of these cards are with color sides facing up and others are with color sides facing down. Then they take turns flipping cards, in which Tokitsukaze moves first. In each move, one should choose exactly $k$ consecutive cards and flip them to the same side, which means to make their color sides all face up or all face down. If all the color sides of these $n$ cards face the same direction after one's move, the one who takes this move will win.\") == \"quailty\"\nassert solution(\"Princess Claris wants to know who will win the game if Tokitsukaze and Quailty are so clever that they won't make mistakes.\") == \"quailty\"\n\nassert solution(\"4 2\") == \"quailty\"\nassert solution(\"6 1\") == \"once again\"\nassert solution(\"6 5\") == \"tokitsukaze\"\nassert solution(\"4 1\") == \"once again\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\n0101\") == \"quailty\"\nassert solution(\"6 1\\n010101\") == \"once again\"\nassert solution(\"6 5\\n010101\") == \"tokitsukaze\"\nassert solution(\"4 1\\n0011\") == \"once again\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n0101\") == \"quailty\"\nassert solution(\"6 1\\n010101\") == \"once again\"\nassert solution(\"6 5\\n010101\") == \"tokitsukaze\"\nassert solution(\"4 1\\n0011\") == \"once again\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n0101\") == \"quailty\"\nassert solution(\"6 1\\n010101\") == \"once again\"\nassert solution(\"6 5\\n010101\") == \"tokitsukaze\"\nassert solution(\"4 1\\n0011\") == \"once again\"\n"
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\n0101\") == \"quailty\"\nassert solution(\"6 1\\n010101\") == \"once again\"\nassert solution(\"6 5\\n010101\") == \"tokitsukaze\"\nassert solution(\"4 1\\n0011\") == \"once again\"\n\nfrom typing import TextIO"
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Duel!\\n0101\\n\") == \"quailty\\n\"\nassert solution(\"Betting on the lovely princess Claris, the duel between Tokitsukaze and Quailty has started.\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n010101\\n01"
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n0101\\n\") == \"quailty\"\nassert solution(\"6 1\\n010101\\n\") == \"once again\"\nassert solution(\"6 5\\n010101\\n\") == \"tokitsukaze\"\nassert solution(\"4 1\\n0011\\n\") == \"once again\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n0101\\n\") == \"quailty\"\nassert solution(\"6 1\\n010101\\n\") == \"once again\"\nassert solution(\"6 5\\n010101\\n\") == \"tokitsukaze\"\nassert solution(\"4 1\\n0011\\n\") == \"once again\""
    },
    {
        "number": 3849,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\n0101\") == \"quailty\"\nassert solution(\"6 1\\n010101\") == \"once again\"\nassert solution(\"6 5\\n010101\") == \"tokitsukaze\"\nassert solution(\"4 1\\n0011\") == \"once again\""
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"50\""
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"50\\n\"\nassert solution(input()) == \"7\\n\"\nassert solution(input()) == \"50\\n\""
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 4 50\\n20 100\\n60 10 40 80\") == \"50\"\n\nassert solution(\"1 2 10\\n11\") == \"7\""
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 4 50\\n20 100\\n60 10 40 80\") == \"50\"\nassert solution(\"1 2 10\\n11\") == \"7\"\n"
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 4 50\\n20 100\\n60 10 40 80\") == \"50\"\nassert solution(\"1 2 10\\n11\") == \"7\""
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 4 50\\n20 100\\n60 10 40 80\") == \"50\\n\"\nassert solution(\"1 2 10\\n11\\n15 7\") == \"7\\n\""
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 4 50\\n20 100\\n60 10 40 80\") == \"50\\n\"\n\nassert solution(\"1 2 10\\n11\") == \"7\\n\""
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 50, \"Solution does not work for the given input.\""
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, but got {solution(input())}\""
    },
    {
        "number": 3850,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 4 50\\n20 100\\n60 10 40 80\") == 50\nassert solution(\"1 2 10\\n11\") == 7"
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n1 1\") == \"1 6\\n\"\nassert solution(\"3 2\\n0 0\") == \"1 3\\n\"\nassert solution(\"1 10\\n5 3\") == \"5 5\\n\""
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input1) == output1, \"Test 1 Failed\"\nassert solution(input2) == output2, \"Test 2 Failed\"\nassert solution(input3) == output3, \"Test 3 Failed\"\nassert solution(input4) == output4, \"Test 4 Failed\"\nassert solution(input5) == output5, \"Test 5 Failed\""
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Expected output: {expected_output}, Received: {solution(input())}\"\n"
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed. Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Input:\\n{input()}\\nOutput:\\n{output()}\""
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('2 3\\n1 1\\n') == '1 6\\n'\nassert solution('3 2\\n0 0\\n') == '1 3\\n'\nassert solution('1 10\\n5 3\\n') == '5 5\\n'\nassert solution('1 10\\n5 5\\n') == '5 5\\n'"
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 3\\n1 1\\n') == '1 6\\n'\nassert solution('3 2\\n0 0\\n') == '1 3\\n'\nassert solution('1 10\\n5 3\\n') == '5 5\\n'\n\nprint('All tests passed!')"
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\n1 1\\n\\n3 2\\n0 0\\n\\n1 10\\n5 3\") == \"1 6\\n5 5\""
    },
    {
        "number": 3851,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n1 1\\n\") == \"1 6\\n\"\nassert solution(\"3 2\\n0 0\\n\") == \"1 3\\n\"\nassert solution(\"1 10\\n5 3\\n\") == \"5 5\\n\""
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"\"\"\n2\n2 3\n3 3\n\"\"\""
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"-2 5 -1\") == \"2\\n2 3\\n3 3\"\nassert solution(\"-2 5 4 6 8 9 10\") == \"2\\n2 3\\n3 3\"\nassert solution(\"-2 5 4 6 8 9 10 11 12 13 14 15 16 17 18 19 20\" == \"2\\n2 3\\n3 3\")"
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '''\n2\n2 3\n3 3\n'''\n"
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n-2 5 -1\") == \"2\\n2 3\\n3 3\"\n"
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n-2 5 -1\") == \"2\\n2 3\\n3 3\"\nassert solution(\"2\\n1 2 3 4\") == \"1\\n1 1 1 1\"\nassert solution(\"4\\n1 2 3 4\") == \"3\\n3 3 3 3\"\nassert solution(\"5\\n1 2 3 4 5\") == \"1\\n1 1 1 1\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"4\\n4 4 4 4\"\nassert solution(\"7\\n1 2 3 4 5 6 7\") == \"1\\n1 1 1 1\"\nassert solution(\"8\\n1 2 3 4 5 6 7 8\") == \"4\\n4 4 4 4\"\nassert solution(\"9\\n1 2 3 4 5 6 7 8 9\") == \"1\\n1 1 1 1\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"5\\n5 5 5 5\"\nassert solution(\"11\\n1 2 3 4 5 6 7 8 9 10 11\") == \"1\\n1 1 1 1\"\nassert solution(\"12\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"5\\n5 5 5 5\""
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n-2 5 -1\") == \"2\\n2 3\\n3 3\\n\"\nassert solution(\"2\\n-1 2 1\") == \"1\\n1 2\\n2 2\\n\"\nassert solution(\"3\\n1 1 1 1\") == \"3\\n1 2 3 4\\n2 2 2 3\\n\"\nassert solution(\"3\\n1 1 1 1 1\") == \"4\\n1 2 3 4 5\\n2 2 2 3 3\\n3 3 3 3 3\\n\"\nassert solution(\"4\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=input()) == '2\\n2 3\\n3 3'\n"
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n-2 5 -1\") == \"\"\"2\n2 3\n3 3\n\"\"\"\n"
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''3\n-2 5 -1''') == '''2\n2 3\n3 3'''\n\nassert solution('''4\n1 2 3 4''') == '''4\n1 2 3 4'''\n\nassert solution('''5\n1 2 3 4 5''') == '''4\n1 2 3 4 5'''\n\nassert solution('''6\n0 1 2 3 4''') == '''1\n0 1 2 3 4'''\n\nassert solution('''7\n1 2 3 4 5 6''') == '''4\n1 2 3 4 5 6'''\n\nassert solution('''8\n0 1 2 3 4 5 6 7''') == '''2\n0 1 2 3 4 5 6'''\n\nassert solution('''9\n-10 10 -5 0 -7''') == '''0\n-10 10 -5 0 -7'''\n\nassert solution('''10\n100 99 98 97 96 95 94 93 92 91 90''') == '''2\n100 99 98 97 96 95 94 93 92 91'''"
    },
    {
        "number": 3852,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n-2 5 -1\") == \"2\\n2 3\\n3 3\\n\""
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n0 3\\n1 5\") == \"3\"\nassert solution(\"1\\n0 4\\n\") == \"1\"\nassert solution(\"2\\n1 10\\n2 2\") == \"3\""
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n0 3\\n1 5\\n\\n1\\n0 4\\n\\n2\\n1 10\\n2 2\\n\") == \"3\"\nassert solution(\"1\\n0 4\\n\\n2\\n1 10\\n2 2\\n\") == \"1\"\nassert solution(\"2\\n1 10\\n2 2\\n\") == \"3\""
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2\\n0 3\\n1 5\\n') == '3'\nassert solution('1\\n0 4\\n') == '1'\nassert solution('2\\n1 10\\n2 2\\n') == '3'"
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected_output, f\"Solution: {solution(stdin)}, Expected Output: {expected_output}\""
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n0 3\\n1 5\\n\") == \"3\"\nassert solution(\"1\\n0 4\\n\") == \"1\"\nassert solution(\"2\\n1 10\\n2 2\\n\") == \"3\""
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Input\\n2\\n0 3\\n1 5\\n\\nOutput\\n3\\n\\nInput\\n1\\n0 4\\n\\nOutput\\n1\\n\\nInput\\n2\\n1 10\\n2 2\\n\\nOutput\\n3\") == \"3\\n\\n1\\n\\n3\""
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n0 3\\n1 5\\n\\n1\\n0 4\\n\\n2\\n1 10\\n2 2\") == 3\nassert solution(\"1\\n0 4\\n\\n2\\n1 10\\n2 2\") == 1\nassert solution(\"2\\n1 10\\n2 2\\n\\n1\\n0 4\") == 3"
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2\\n0 3\\n1 5\\n') == '3'\nassert solution('1\\n0 4\\n') == '1'\nassert solution('2\\n1 10\\n2 2\\n') == '3'"
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n0 3\\n1 5\\n\") == \"3\\n\"\nassert solution(\"1\\n0 4\\n\") == \"1\\n\"\nassert solution(\"2\\n1 10\\n2 2\\n\") == \"3\\n\""
    },
    {
        "number": 3853,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed. Expected output: {expected_output}, Received output: {solution(input())}\""
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''\n6 18\n5 6 1 10 12 2\n''') == \"16\\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18 \\n\"\n\nassert solution('''\n3 50\n25 25 50\n''') == \"3\\n0 25 50\\n\""
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == expected_output, f\"Expected output: {expected_output}, got: {solution()}\"\n"
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected, f\"Test case failed: {solution(stdin)}!= {expected}\""
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 18\\n5 6 1 10 12 2\\n\") == \"16\\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18 \\n\"\nassert solution(\"3 50\\n25 25 50\\n\") == \"3\\n0 25 50\\n\""
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"\"\"16\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18 \"\"\""
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 6 1 10 12 2') == '16\\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18'\nassert solution('3 50') == '3\\n0 25 50'\n"
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == output, f\"Solution does not match the expected output.\\nExpected: {output}\\nGot: {solution(stdin)}\""
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 18\\n5 6 1 10 12 2\\n\") == \"16\\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18 \"\nassert solution(\"3 50\\n25 25 50\\n\") == \"3\\n0 25 50\""
    },
    {
        "number": 3854,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6 18\\n5 6 1 10 12 2\\n\") == \"16\\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18\\n\"\nassert solution(\"3 50\\n25 25 50\\n\") == \"3\\n0 25 50\\n\""
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"Output\\n3\"\nassert solution(stdin) == \"Output\\n2\""
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\") == \"3\"\nassert solution(\"2\") == \"2\"\n\nfrom typing import List"
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 3\nassert solution(2) == 2"
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\") == \"3\"\nassert solution(\"2\") == \"2\"\n\nfrom typing import List"
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\") == \"3\"\nassert solution(\"2\") == \"2\""
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\") == \"3\"\nassert solution(\"2\") == \"2\""
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(6) == \"3\"\nassert solution(2) == \"2\""
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(10) == \"3\"\nassert solution(2) == \"2\"\nassert solution(1) == \"3\"\nassert solution(20) == \"1\""
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '3'\nassert solution() == '2'"
    },
    {
        "number": 3855,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\") == \"3\"\nassert solution(\"2\") == \"2\""
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n10 1\\n20 2\\n30 3\\n\") == \"180\\n\"\nassert solution(\"3\\n3 1\\n2 2\\n4 3\\n\") == \"21\\n\"\nassert solution(\"1\\n5 10\\n\") == \"50\\n\""
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n10 1\\n20 2\\n30 3\\n\") == 180\nassert solution(\"3\\n3 1\\n2 2\\n4 3\\n\") == 21\nassert solution(\"1\\n5 10\\n\") == 50"
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == 180\nassert solution(3) == 21\nassert solution(1) == 50"
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '180'"
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n10 1\\n20 2\\n30 3\\n') == '180\\n'\nassert solution('3\\n3 1\\n2 2\\n4 3\\n') == '21\\n'\nassert solution('1\\n5 10\\n') == '50\\n'"
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"180\"\nassert solution(input()) == \"21\"\nassert solution(input()) == \"50\""
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3) == 180\nassert solution(3) == 21\nassert solution(1) == 50"
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n3\n10 1\n20 2\n30 3\n\"\"\"\n) == \"180\"\n\nassert solution(\n    \"\"\"\n3\n3 1\n2 2\n4 3\n\"\"\"\n) == \"21\"\n\nassert solution(\n    \"\"\"\n1\n5 10\n\"\"\"\n) == \"50\""
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n10 1\\n20 2\\n30 3\") == 180\nassert solution(\"3\\n3 1\\n2 2\\n4 3\") == 21\nassert solution(\"1\\n5 10\") == 50"
    },
    {
        "number": 3856,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n10 1\\n20 2\\n30 3\\n\") == \"180\"\nassert solution(\"3\\n3 1\\n2 2\\n4 3\\n\") == \"21\"\nassert solution(\"1\\n5 10\\n\") == \"50\""
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1\", \"The expected result is 1, but got: %r\" % solution()\nassert solution() == \"2\", \"The expected result is 2, but got: %r\" % solution()\nassert solution() == \"1\", \"The expected result is 1, but got: %r\" % solution()\nassert solution() == \"4\", \"The expected result is 4, but got: %r\" % solution()\nassert solution() == \"3\", \"The expected result is 3, but got: %r\" % solution()"
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"Output\\n2\"\nassert solution(stdin) == \"Output\\n1\"\nassert solution(stdin) == \"Output\\n4\"\nassert solution(stdin) == \"Output\\n3\""
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"2\\n\""
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n0 0 10\\n\\n5\\n0 1 2 3 4\\n\\n4\\n0 0 0 0\\n\\n9\\n0 1 0 2 0 1 1 2 10\\n\") == \"2\"\nassert solution(\"5\\n0 1 2 3 4\\n\\n4\\n0 0 0 0\\n\\n9\\n0 1 0 2 0 1 1 2 10\\n\") == \"1\"\nassert solution(\"4\\n0 0 0 0\\n\\n4\\n0 0 0 0\\n\\n9\\n0 1 0 2 0 1 1 2 10\\n\") == \"4\"\nassert solution(\"9\\n0 1 0 2 0 1 1 2 10\\n\\n4\\n0 0 0 0\\n\\n9\\n0 1 0 2 0 1 1 2 10\\n\") == \"3\"\nassert solution(\"9\\n0 1 0 2 0 1 1 2 10\\n\\n4\\n0 0 0 0\\n\\n9\\n0 1 0 2 0 1 1 2 10\\n\") == \"3\""
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n0 0 10\") == \"2\"\nassert solution(\"5\\n0 1 2 3 4\") == \"1\"\nassert solution(\"4\\n0 0 0 0\") == \"4\"\nassert solution(\"9\\n0 1 0 2 0 1 1 2 10\") == \"3\"\nassert solution(\"3\\n0 1 1 2 1 1 1\") == \"1\""
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n0 0 10\") == \"2\"\nassert solution(\"5\\n0 1 2 3 4\") == \"1\"\nassert solution(\"4\\n0 0 0 0\") == \"4\"\nassert solution(\"9\\n0 1 0 2 0 1 1 2 10\") == \"3\""
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n0 0 10\") == \"2\\n\"\nassert solution(\"5\\n0 1 2 3 4\") == \"1\\n\"\nassert solution(\"4\\n0 0 0 0\") == \"4\\n\"\nassert solution(\"9\\n0 1 0 2 0 1 1 2 10\") == \"3\\n\"\n\nfrom typing import List\n"
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n0 0 10\") == \"2\"\nassert solution(\"5\\n0 1 2 3 4\") == \"1\"\nassert solution(\"4\\n0 0 0 0\") == \"4\"\nassert solution(\"9\\n0 1 0 2 0 1 1 2 10\") == \"3\"\nassert solution(\"6\\n0 0 1 0 1 0 1 0 1 0 0 1\") == \"1\""
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}, Received: {solution(input())}\""
    },
    {
        "number": 3857,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n0 0 10\\n\") == \"2\"\nassert solution(\"5\\n0 1 2 3 4\\n\") == \"1\"\nassert solution(\"4\\n0 0 0 0\\n\") == \"4\"\nassert solution(\"9\\n0 1 0 2 0 1 1 2 10\\n\") == \"3\""
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''4\n0 0\n0 1\n1 0\n1 1''') == '5'"
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n0 0\\n0 1\\n1 0\\n1 1\\n') == '5'\nprint(solution('4\\n0 0\\n0 1\\n1 0\\n1 1\\n'))"
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 0\\n1 1\\n\") == \"5\\n\""
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"5\\n\"\n"
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\n    '''\n    4\n    0 0\n    0 1\n    1 0\n    1 1\n    '''\n) == '5\\n'\n\nprint(sum(2**n for n in range(len(set(solution(stdin))))) % 998244353)"
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"4\n0 0\n0 1\n1 0\n1 1\n\"\"\") == \"5\\n\""
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == '5\\n'\nprint(5)"
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 0\\n1 1\\n\") == \"5\""
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 0\\n1 1\") == \"5\\n\""
    },
    {
        "number": 3858,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('4\\n0 0\\n0 1\\n1 0\\n1 1\\n') == '5'\nprint('All test cases pass.')"
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"4\\n\"\nassert solution(\"4\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"5\\n\"\nassert solution(\"2\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"2\\n\"\nassert solution(\"1\\nW 1\\nW 1\\nW 1\\nW 1\\nW 1\\n\") == \"1\\n\"\nassert solution(\"6\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"3\\n\"\nassert solution(\"1\\nW 1\\nW 1\\nW 1\\nW 1\\nW 1\\n\") == \"1\\n\""
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"4\\n\", \"Invalid output\""
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"4\"\n"
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"4\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"4\\n\", solution(input())\n"
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3\nB 1\nW 2\nB 3\nW 1\nW 3\nB 2\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n4\nB 1\nW 2\nB 3\nW 1\nW 3\nB 2\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n5\nB 1\nW 2\nB 3\nW 1\nW 3\nB 2\nW 4\nW 5\nW 6\n\"\"\") == \"5\"\n\nassert solution(\"\"\"\n1\nB 1\nW 1\nB 2\nW 2\nB 3\nW 3\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n1\nB 1\nW 1\nB 2\nW 2\nB 3\nW 3\nB 4\nW 4\nB 5\nW 5\nB 6\nW 6\n\"\"\") == \"6\"\n\nassert solution(\"\"\"\n1\nB 1\nW 1\nB 2\nW 2\nB 3\nW 3\nB 4\nW 4\nB 5\nW 5\nB 6\nW 6\nB 7\nW 7\n\"\"\") == \"7\""
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\") == \"4\"\n\nThis is the correct solution. We have to swap two adjacent balls to achieve the objective. We have to swap the black balls with numbers from 1 to N to the left of the white balls, and vice versa."
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '4', \"Your solution is incorrect.\""
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\") == \"4\"\nassert solution(\"4\\nB 2\\nW 1\\nW 3\\nB 1\\nW 2\") == \"4\"\nassert solution(\"1\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\") == \"3\"\nassert solution(\"1\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\") == \"3\"\nassert solution(\"2\\nB 2\\nW 1\\nW 3\\nB 1\\nW 2\") == \"3\"\nassert solution(\"2\\nB 2\\nW 1\\nW 3\\nB 1\\nW 2\") == \"3\"\nassert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\") == \"3\"\nassert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\") == \"3\"\nassert solution(\"4\\nB 2\\nW 1\\nW 3\\nB 1\\nW 2\") == \"3\"\nassert solution(\"4\\nB 2\\nW 1\\nW 3\\nB 1\\nW 2\") == \"3\"\nassert solution(\"5\\nB 3\\nW 1\\nW 2\\nB 1\\nW 4\\nB 5\") == \"4\"\nassert solution(\"5\\nB 3\\nW 1\\nW 2\\nB 1\\nW 4\\nB 5\") == \"4\"\nassert solution(\"6\\nB 4\\nW 1\\nW 2\\nB 1\\nW 3\\nB 6\") == \"4\"\nassert solution(\"6\\nB 4\\nW 1\\nW 2\\nB 1\\nW 3\\nB 6\") == \"4\"\nassert solution(\"7\\nB 5\\nW 1\\nW 2\\nB 1\\nW 3\\nB 4\\nB 7\") == \"4\"\nassert solution(\"7\\nB 5\\nW 1\\nW 2\\nB 1\\nW 3\\nB 4\\nB 7\") == \"4\"\nassert solution(\"8\\nB 6\\nW 1\\nW 2\\nB 1\\nW 3\\nB 4\\nB 5\\nB 8\") == \"4\"\nassert solution(\"8\\nB 6\\nW 1\\nW 2\\nB 1\\nW 3\\nB 4\\nB 5\\nB 8\") == \"4\"\nassert solution(\"9\\nB 7\\nW 1\\nW 2\\nB 1\\nW 3\\nB 4\\nB 5\\nB 6\\nB 9\") == \"4\"\nassert solution(\"9\\nB 7\\nW 1\\nW 2\\nB 1\\nW 3\\nB 4\\nB 5\\nB 6\\nB 9\") == \"4\"\nassert solution(\"10\\nB 8\\nW 1\\nW 2\\nB 1\\nW 3\\nB 4\\nB 5\\nB 6\\nB 7\\nB 10\") == \"4\"\nassert solution(\"10\\nB 8\\nW 1\\nW 2\\nB 1\\nW 3\\nB 4\\nB 5\\nB 6\\nB 7\\nB 10\") == \"4\""
    },
    {
        "number": 3859,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n') == '4\\n'\nassert solution('3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n') == '4\\n'\nassert solution('3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n') == '4\\n'\nassert solution('3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n') == '4\\n'\nassert solution('3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n') == '4\\n'\nassert solution('3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n') == '4\\n'"
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, but got {solution(input())}\""
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Got '{solution(input())}', expected '{expected}'\""
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n6\\n3\\n\") == \"4\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\""
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n6\\n3\\n\") == \"4\\n\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\\n\""
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Output\\n4\\n\"\nassert solution(input()) == \"Output\\n4\\n\"\nassert solution(input()) == \"Output\\n4\\n\"\nassert solution(input()) == \"Output\\n4\\n\""
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"4\"\nassert solution(input()) == \"4\""
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n6\\n3\\n\") == \"4\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\""
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n6\\n3\\n\") == \"4\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\""
    },
    {
        "number": 3860,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 'Output\\n4'"
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=input()) == 'Output\\n32\\n'"
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n4 2\") == \"2\"\nassert solution(\"8\\n1 2 4 8 16 32 64 576\") == \"32\""
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Test failed.\""
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '2', 'Your solution is incorrect!'"
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n4 2\") == \"2\\n\"\nassert solution(\"8\\n1 2 4 8 16 32 64 576\") == \"32\\n\""
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''2\n4 2\n8\n1 2 4 8 16 32 64 576''') == '32'"
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2\\n4 2\\n') == '2\\n'\nassert solution('8\\n1 2 4 8 16 32 64 576\\n') == '32\\n'"
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n4 2\\n\") == \"2\"\nassert solution(\"8\\n1 2 4 8 16 32 64 576\\n\") == \"32\""
    },
    {
        "number": 3861,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n4 2\\n\") == \"2\\n\"\nassert solution(\"8\\n1 2 4 8 16 32 64 576\\n\") == \"32\\n\""
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"400 4\\n100 300 450 500\") == \"2\"\nassert solution(\"50 2\\n100 25\") == \"3\"\nassert solution(\"\") == \"-1\""
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}, Diff: {abs(output - output)}\""
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"400 4\\n100 300 450 500\") == \"2\"\nassert solution(\"50 2\\n100 25\") == \"3\"\n"
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('''\n400 4\n100 300 450 500\n''') == '2'\n\nassert solution('''\n50 2\n100 25\n''') == '3'"
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('400 4\\n100 300 450 500') == '2\\n'\nassert solution('50 2\\n100 25') == '3\\n'\nassert solution('') == '-1\\n'"
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"400 4\\n100 300 450 500\") == \"2\"\nassert solution(\"50 2\\n100 25\") == \"3\""
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('400 4\\n100 300 450 500') == '2'\nassert solution('50 2\\n100 25') == '3'\n\nprint(\"All test cases passed\")"
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"400 4\\n100 300 450 500\\n\") == \"2\\n\"\nassert solution(\"50 2\\n100 25\\n\") == \"3\\n\""
    },
    {
        "number": 3862,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"400 4\\n100 300 450 500\") == \"2\\n\"\nassert solution(\"50 2\\n100 25\") == \"3\\n\"\n\nprint(\"All test cases passed\")"
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"6\\n\", \"Incorrect output\""
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\") == \"6\\n\""
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\") == \"6\\n\"\nassert solution(\"10 10\") == \"108\\n\"\nassert solution(\"5 7\") == \"100\\n\"\nassert solution(\"2 2\") == \"4\\n\"\nassert solution(\"10 15\") == \"0\\n\""
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\") == \"6\\n\", \"Takahashi and Aoki are going to together construct a sequence of integers. First, Takahashi will provide a sequence of integers a, satisfying all of the following conditions: - The length of a is N. - Each element in a is an integer between 1 and K, inclusive. - a is a palindrome, that is, reversing the order of elements in a will result in the same sequence as the original. Then, Aoki will perform the following operation an arbitrary number of times: - Move the first element in a to the end of a. How many sequences a can be obtained after this procedure, modulo 10^9+7? The constraints are as follows: - 1\u2264N\u226410^9 - 1\u2264K\u226410^9\""
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\") == \"6\\n\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '6\\n'"
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n\") == \"6\\n\"\nassert solution(\"8 1\\n\") == \"24\\n\"\nassert solution(\"10 2\\n\") == \"184\\n\"\nassert solution(\"12 3\\n\") == \"7568\\n\"\nassert solution(\"15 4\\n\") == \"25840\\n\"\nassert solution(\"18 5\\n\") == \"558720\\n\"\nassert solution(\"20 6\\n\") == \"6071360\\n\"\nassert solution(\"25 8\\n\") == \"132730240\\n\""
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\") == \"6\\n\""
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == \"6\\n\", \"Sample Output\"\n"
    },
    {
        "number": 3863,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 2\") == \"6\\n\"\n\nTakahashi and Aoki are going to together construct a sequence of integers.\n\nFirst, Takahashi will provide a sequence of integers a, satisfying all of the following conditions:\n - The length of a is N.\n - Each element in a is an integer between 1 and K, inclusive.\n - a is a palindrome, that is, reversing the order of elements in a will result in the same sequence as the original.\n\nThen, Aoki will perform the following operation an arbitrary number of times:\n - Move the first element in a to the end of a.\n\nHow many sequences a can be obtained after this procedure, modulo 10^9+7?"
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"499122178\"\n"
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"499122178\", \"Test failed for solution(3).\"\n"
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3) == \"499122178\""
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"499122178\"\nassert solution(\"10\") == \"998244353\"\nassert solution(\"5\") == \"1000000000\""
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"499122178\\n499122178\\n499122178\"\nassert solution(\"10\") == \"255921639\\n255921639\\n255921639\"\nassert solution(\"4\") == \"96496731\\n96496731\\n96496731\"\n"
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3') == '499122178'"
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"499122178\\n499122178\\n499122178\"\n"
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"499122178\\n499122178\\n499122178\"\nassert solution(\"4\") == \"22178\\n22178\\n22178\"\nassert solution(\"5\") == \"11111\\n11111\\n11111\"\nassert solution(\"6\") == \"00000\\n00000\\n00000\"\nassert solution(\"7\") == \"00000\\n00000\\n00000\"\nassert solution(\"8\") == \"00000\\n00000\\n00000\""
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n') == '499122178\\n499122178\\n499122178\\n'\nassert solution('5\\n') == '499122178\\n499122178\\n499122178\\n'\nassert solution('6\\n') == '499122178\\n499122178\\n499122178\\n'\nassert solution('7\\n') == '499122178\\n499122178\\n499122178\\n'\nassert solution('8\\n') == '499122178\\n499122178\\n499122178\\n'\nassert solution('9\\n') == '499122178\\n499122178\\n499122178\\n'\nassert solution('10\\n') == '499122178\\n499122178\\n499122178\\n'"
    },
    {
        "number": 3864,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"499122178\\n499122178\\n499122178\"\nprint(\"Test Passed\")\n"
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(2) == 6\nassert solution(3) == 6669\nassert solution(10) == -1"
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n\") == \"6\"\nassert solution(\"3\\n\") == \"6669\"\nassert solution(\"10\\n\") == \"-1\""
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(2) == 6\nassert solution(3) == 6669\nassert solution(10) == -1"
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(2) == 6\nassert solution(3) == 6669\nassert solution(10) == -1\n"
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2') == '6'\nassert solution('3') == '6669'\nassert solution('10') == '-1'\n\nprint('All test cases passed!')"
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(2) == 6\nassert solution(3) == 6669\nassert solution(10) == -1"
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == '6'\nassert solution(2) == '6669'\nassert solution(3) == '6669'\nassert solution(10) == '-1'"
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"6\"\nassert solution(\"3\") == \"6669\"\nassert solution(\"10\") == \"-1\""
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3865,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"6669\"\nassert solution(10) == -1\n"
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"1 4 3 2 0\"\nassert solution(\"2\") == \"-1\""
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(str(5)) == '1 4 3 2 0\\n1 0 2 4 3\\n2 4 0 1 3\\n'\nassert solution(str(2)) == '-1'"
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n\") == \"1 4 3 2 0\\n1 0 2 4 3\\n2 4 0 1 3\\n\"\nassert solution(\"2\\n\") == \"-1\\n\""
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == expected\n"
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"Test failed. Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open('input.txt').read()) == \"1 4 3 2 0\\n1 0 2 4 3\\n2 4 0 1 3\\n-1\"\nassert solution(open('input.txt').read()) == \"1 0 2 4 3\\n-1\"\nassert solution(open('input.txt').read()) == \"-1\""
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n\") == \"1 4 3 2 0\\n1 0 2 4 3\\n2 4 0 1 3\\n\"\nassert solution(\"2\\n\") == \"-1\""
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"1 4 3 2 0\\n1 0 2 4 3\\n2 4 0 1 3\"\nassert solution(\"2\") == \"-1\"\n"
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n\") == \"1 4 3 2 0\\n1 0 2 4 3\\n2 4 0 1 3\"\nassert solution(\"2\\n\") == \"-1\""
    },
    {
        "number": 3866,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(5) == \"1 4 3 2 0\\n1 0 2 4 3\\n2 4 0 1 3\"\nassert solution(2) == \"-1\""
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == 'Yes'\nassert solution(input()) == 'No'"
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 3 4\\n\") == \"Yes\"\nassert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 4 3\\n\") == \"No\"\nassert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 4 3\\n\") == \"Yes\""
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 3 4\") == \"Yes\\n\"\nassert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 4 3\") == \"No\\n\""
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"Yes\""
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Test case failed: {input()}!= {output}\""
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\").read()) == \"Yes\"\nassert solution(open(\"input2.txt\").read()) == \"No\""
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 3 4\") == \"Yes\"\nassert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 4 3\") == \"No\""
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\""
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 3 4\") == \"Yes\"\nassert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 4 3\") == \"No\""
    },
    {
        "number": 3867,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"Yes\" # expected output: \"Yes\"\nassert solution() == \"No\" # expected output: \"No\""
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 6 5\\n1 1 0 5000\\n3 2 0 5500\\n2 2 0 6000\\n15 0 2 9000\\n9 0 1 7000\\n8 0 2 6500\\n\") == 24500\nassert solution(\"2 4 5\\n1 2 0 5000\\n2 1 0 4500\\n2 1 0 3000\\n8 0 1 6000\\n\") == -1"
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 6 5\\n1 1 0 5000\\n3 2 0 5500\\n2 2 0 6000\\n15 0 2 9000\\n9 0 1 7000\\n8 0 2 6500\\n\") == \"24500\"\n\nassert solution(\"2 4 5\\n1 2 0 5000\\n2 1 0 4500\\n2 1 0 3000\\n8 0 1 6000\\n\") == \"-1\""
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"24500\""
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 6 5\\n1 1 0 5000\\n3 2 0 5500\\n2 2 0 6000\\n15 0 2 9000\\n9 0 1 7000\\n8 0 2 6500\\n\") == 24500 # expected output: 24500\nassert solution(\"2 4 5\\n1 2 0 5000\\n2 1 0 4500\\n2 1 0 3000\\n8 0 1 6000\\n\") == -1 # expected output: -1"
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 6 5\\n1 1 0 5000\\n3 2 0 5500\\n2 2 0 6000\\n15 0 2 9000\\n9 0 1 7000\\n8 0 2 6500\\n\") == \"24500\"\n\nassert solution(\"2 4 5\\n1 2 0 5000\\n2 1 0 4500\\n2 1 0 3000\\n8 0 1 6000\\n\") == \"-1\""
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 6 5\\n1 1 0 5000\\n3 2 0 5500\\n2 2 0 6000\\n15 0 2 9000\\n9 0 1 7000\\n8 0 2 6500\") == 24500\nassert solution(\"2 4 5\\n1 2 0 5000\\n2 1 0 4500\\n2 1 0 3000\\n8 0 1 6000\") == -1"
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 6 5\\n1 1 0 5000\\n3 2 0 5500\\n2 2 0 6000\\n15 0 2 9000\\n9 0 1 7000\\n8 0 2 6500\\n\") == 24500\nassert solution(\"2 4 5\\n1 2 0 5000\\n2 1 0 4500\\n2 1 0 3000\\n8 0 1 6000\\n\") == -1"
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 6 5\\n1 1 0 5000\\n3 2 0 5500\\n2 2 0 6000\\n15 0 2 9000\\n9 0 1 7000\\n8 0 2 6500\") == \"24500\"\nassert solution(\"2 4 5\\n1 2 0 5000\\n2 1 0 4500\\n2 1 0 3000\\n8 0 1 6000\") == \"-1\""
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 24500\nassert solution() == -1"
    },
    {
        "number": 3868,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 24500\nprint(\"Test passed\")"
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output\n"
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1 45\\n\") == \"0.828427125\\n\"\nassert solution(\"6 4 30\\n\") == \"19.668384925\\n\""
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1 45\") == 0.828427125, \"The area of the region which belongs to both given rectangles should be 0.828427125\"\nassert solution(\"6 4 30\") == 19.668384925, \"The area of the region which belongs to both given rectangles should be 19.668384925\"\nassert solution(\"4 1 45\") == 1.0, \"The area of the region which belongs to both given rectangles should be 1.0\""
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1 45\") == 0.828427125, \"The given input is incorrect.\"\nassert solution(\"6 4 30\") == 19.668384925, \"The given input is incorrect.\""
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1 45\") == 0.828427125\nassert solution(\"6 4 30\") == 19.668384925"
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 45\") == \"0.828427125\\n\", \"Test 1\"\nassert solution(\"6 4 30\") == \"19.668384925\\n\", \"Test 2\"\nassert solution
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1 1 45') == 0.828427125, \"Failed\"\nassert solution('6 4 30') == 19.668384925, \"Failed\""
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1 45\") == 0.828427125\nassert solution(\"6 4 30\") == 19.668384925"
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1 1 45\") == 0.828427125\nassert solution(\"6 4 30\") == 19.668384925"
    },
    {
        "number": 3869,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 1 45\") == 0.828427125, \"Test 1\"\nassert solution(\"6 4 30\") == 19.668384925, \"Test 2\""
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500\\n\") == \"3000\\n\"\nassert solution(\"3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\\n\") == \"992\\n\"\nassert solution(\"2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\") == \"1\\n\""
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500\\n\") == \"3000\"\nassert solution(\"3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\\n\") == \"992\"\nassert solution(\"2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\") == \"1\""
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500\") == \"3000\"\nassert solution(\"3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\") == \"992\"\nassert solution(\"2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\") == \"1\""
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500\\n\") == \"3000\"\nassert solution(\"3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\\n\") == \"992\"\nassert solution(\"2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\") == \"1\""
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Output\", \"The solution is incorrect\""
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500') == '3000'\nassert solution('3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001') == '992'\nassert solution('2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1') == '1'"
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 4) == 992\nassert solution(2, 4) == 1\nassert solution(2, 3) == 3000"
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500\\n\") == \"3000\"\nassert solution(\"3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\\n\") == \"992\"\nassert solution(\"2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\") == \"1\"\n\nfrom typing import List"
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500\") == \"3000\\n\"\nassert solution(\"3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\") == \"992\\n\"\nassert solution(\"2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\") == \"1\\n\""
    },
    {
        "number": 3870,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500\") == \"3000\\n\", \"Testcase 1\"\n\nassert solution(\"3 4\\nATK 10\\nATK 100\\nATK 1000\\n1\\n11\\n101\\n1001\\n\") == \"992\\n\", \"Testcase 2\"\n\nassert solution(\"2 4\\nDEF 0\\nATK 0\\n0\\n0\\n1\\n1\\n\") == \"1\\n\", \"Testcase 3\""
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"6\\n\"\nassert solution(open(\"sample_input.txt\", \"r\")) == \"2\\n\"\nassert solution(open(\"invalid_input.txt\", \"r\")) == \"62\\n\""
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == 62, \"The solution is incorrect\""
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n1 2 3 4 5 6 7 8 9\\n') == '6'\nassert solution('2 2\\n1 2\\n0 0\\n2 1 -100 -100\\n') == '2'\nassert solution('5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\\n') == '62'\n"
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n\") == \"6\\n\"\nassert solution(\"2 2\\n1 2\\n0 0\\n2 1 -100 -100\\n\") == \"2\\n\"\nassert solution(\"5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\\n\") == \"62\\n\""
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n5 4\n4 3 1 2 1\n1 2 1 2 1\n1 2 3 4 5 6 7 8 9\n''') == 6\n\nassert solution('''\n2 2\n1 2\n0 0\n2 1 -100 -100\n''') == 2\n\nassert solution('''\n5 4\n4 3 2 1 1\n0 2 6 7 4\n12 12 12 6 -3 -5 3 10 -4\n''') == 62"
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''5 4\n4 3 1 2 1\n1 2 1 2 1\n1 2 3 4 5 6 7 8 9''') == '6'\nassert solution('''2 2\n1 2\n0 0\n2 1 -100 -100''') == '2'\nassert solution('''5 4\n4 3 2 1 1\n0 2 6 7 4\n12 12 12 6 -3 -5 3 10 -4''') == '62'"
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n1 2 3 4 5 6 7 8 9\\n\") == \"6\"\nassert solution(\"2 2\\n1 2\\n0 0\\n2 1 -100 -100\\n\") == \"2\"\nassert solution(\"5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\\n\") == \"62\""
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"6\\n\"\nassert solution(stdin) == \"2\\n\"\nassert solution(stdin) == \"62\\n\"\n"
    },
    {
        "number": 3871,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n\") == 6\nassert solution(\"2 2\\n1 2\\n0 0\\n2 1 -100 -100\\n\") == 2\nassert solution(\"5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n12 12 12 6 -3 -5 3 10 -4\\n\") == 62\nassert solution(\"3 3\\n2 1\\n1 0\\n0 2\\n0 3\\n\") == 0"
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"abaa\") == \"NO\"\nassert solution(\"aabb\") == \"YES\""
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"aabb\") == \"NO\"\n"
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"abaa\") == \"NO\"\nassert solution(\"aabb\") == \"YES\"\nassert solution(\"abab\") == \"NO\"\n"
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"abaa\") == \"YES\"\nassert solution(\"aabb\") == \"NO\""
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"abaa\") == \"NO\"\nassert solution(\"aabb\") == \"YES\"\nassert solution(\"abab\") == \"NO\""
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"abaa\") == \"NO\"\nassert solution(\"aabb\") == \"NO\""
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"aabb\") == \"NO\""
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"abaa\") == \"NO\"\nassert solution(\"aabb\") == \"NO\"\n\nassert solution(\"aabb\") == \"YES\"\nassert solution(\"abab\") == \"NO\"\nassert solution(\"aaaa\") == \"YES\""
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"abaa\") == \"NO\"\nassert solution(\"aabb\") == \"YES\"\nassert solution(\"abab\") == \"NO\""
    },
    {
        "number": 3872,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('aaba') == 'YES'\nassert solution('abaa') == 'YES'\nassert solution('aabb') == 'NO'"
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\\n\") == \"NO\"\nassert solution(\"3\\n\") == \"NO\"\nassert solution(\"4\\n\") == \"YES\\n0\\n2\"\nassert solution(\"5\\n\") == \"YES\\n0\\n2\\n1\\n3\"\nassert solution(\"6\\n\") == \"YES\\n0\\n1\\n3\\n2\"\nassert solution(\"7\\n\") == \"YES\\n0\\n2\\n3\\n1\"\nassert solution(\"8\\n\") == \"YES\\n0\\n1\\n3\\n2\\n4\"\nassert solution(\"9\\n\") == \"YES\\n0\\n2\\n3\\n4\\n1\"\nassert solution(\"10\\n\") == \"YES\\n0\\n1\\n3\\n4\\n2\\n5\"\nassert solution(\"11\\n\") == \"YES\\n0\\n2\\n4\\n3\\n5\\n1\"\nassert solution(\"12\\n\") == \"YES\\n0\\n1\\n3\\n5\\n4\\n2\"\nassert solution(\"13\\n\") == \"YES\\n0\\n2\\n4\\n5\\n3\\n1\"\nassert solution(\"14\\n\") == \"YES\\n0\\n1\\n4\\n5\\n2\\n3\"\nassert solution(\"15\\n\") == \"YES\\n0\\n2\\n5\\n4\\n3\\n1\"\nassert solution(\"16\\n\") == \"YES\\n0\\n1\\n4\\n2\\n5\\n3\"\nassert solution(\"17\\n\") == \"YES\\n0\\n2\\n5\\n3\\n1\\n4\"\nassert solution(\"18\\n\") == \"YES\\n0\\n1\\n3\\n4\\n5\\n2\"\nassert solution(\"19\\n\") == \"YES\\n0\\n2\\n4\\n5\\n1\\n3\"\nassert solution(\"20\\n\") == \"YES\\n0\\n1\\n3\\n5\\n2\\n4\"\nassert solution(\"21\\n\") == \"YES\\n0\\n2\\n4\\n1\\n5\\n3\"\nassert solution(\"22\\n\") == \"YES\\n0\\n1\\n4\\n2\\n5\\n3\"\nassert solution(\"23\\n\") == \"YES\\n0\\n2\\n5\\n3\\n1\\n4\"\nassert solution(\"24\\n\") == \"YES\\n0\\n1\\n3\\n5\\n4\\n2\"\nassert solution(\"25\\n\") == \"YES\\n0\\n2\\n4\\n5\\n3\\n1\"\nassert solution(\"26\\n\") == \"YES\\n0\\n1\\n4\\n2\\n5\\n3\"\nassert solution(\"27\\n\") == \"YES\\n0\\n2\\n5\\n1\\n4\\n3\"\nassert solution(\"28\\n\") == \"YES\\n0\\n1\\n3\\n4\\n5\\n2\"\nassert solution(\"29\\n\") == \"YES\\n0\\n2\\n5\\n1\\n3\\n4\"\nassert solution(\"30\\n\") == \"YES\\n0\\n1\\n4\\n5\\n2\\n3\"\nassert solution(\"31\\n\") == \"YES\\n0\\n2\\n4\\n3\\n5\\n1\"\nassert solution(\"32\\n\") == \"YES\\n0\\n1\\n3\\n4\\n5\\n2\"\nassert solution(\"33\\n\") == \"YES\\n0\\n2\\n5\\n1\\n4\\n3\"\nassert solution(\"34\\n\") == \"YES\\n0\\n1\\n4\\n2\\n5\\n3\"\nassert solution(\"35\\n\") == \"YES\\n0\\n2\\n3\\n5\\n1\\n4\"\nassert solution(\"36\\n\") == \"YES\\n0\\n1\\n3\\n2\\n5\\n4\"\nassert solution(\"37\\n\") == \"YES\\n0\\n2\\n1\\"
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"NO\"\nassert solution(\"1\") == \"YES\""
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"NO\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=input()) == \"YES\\n2\"\nassert solution(stdin=input()) == \"NO\""
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"YES\\n3\""
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n\") == \"NO\"\nassert solution(\"1\\n\") == \"YES\\n1 0\"\n"
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n\") == \"NO\\n\"\nassert solution(\"1\\n\") == \"YES\\n\\n1\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == \"NO\"\nassert solution(1) == \"YES\""
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n\") == \"NO\"\nassert solution(\"3\\n\") == \"YES\\n1\\n2\\n\"\nassert solution(\"10\\n\") == \"YES\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n\""
    },
    {
        "number": 3873,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"NO\"\nassert solution(\"1\") == \"YES\""
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(solution(stdin)) == \"Yes\"\nassert solution(solution(stdin)) == \"No\"\nassert solution(solution(stdin)) == \"Yes\"\nassert solution(solution(stdin)) == \"No\"\nassert solution(solution(stdin)) == \"Yes\"\nassert solution(solution(stdin)) == \"No\"\nassert solution(solution(stdin)) == \"Yes\"\nassert solution(solution(stdin)) == \"No\"\nassert solution(solution(stdin)) == \"Yes\"\nassert solution(solution(stdin)) == \"No\""
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Yes\\na?\" or solution(input()) == \"Yes\\n?es?\""
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"ab\") == \"Yes\\na?\"\nassert solution(\"ac\") == \"Yes\\na?\"\nassert solution(\"cd\") == \"Yes\\na?\"\n\nassert solution(\"1 2\") == \"Yes\\na?\"\nassert solution(\"2 1\") == \"Yes\\na?\"\nassert solution(\"3 2\") == \"Yes\\na?\"\n\nassert solution(\"a\") == \"No\"\nassert solution(\"1 4 5\") == \"No\"\nassert solution(\"test\") == \"No\"\nassert solution(\"tesz\") == \"No\"\nassert solution(\"a b c d\") == \"No\"\nassert solution(\"ab.cd\") == \"No\"\nassert solution(\"test.git\") == \"No\"\nassert solution(\"....git\") == \"No\"\nassert solution(\"...git\") == \"No\"\nassert solution(\"..git\") == \"No\"\nassert solution(\".git\") == \"No\"\nassert solution(\".svn\") == \"Yes\\n.svn\"\nassert solution(\".git\") == \"Yes\\n.git\"\nassert solution(\".??def\") == \"Yes\\n.??\""
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(str(input().split())) == \"Yes\"\nassert solution(str(input().split())) == \"No\"\nassert solution(str(input().split())) == \"Yes\""
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('abac') == 'Yes\\na?'\nassert solution('acbd') == 'Yes\\na?'\nassert solution('abad') == 'Yes\\na?'\nassert solution('ab') == 'No'\nassert solution('ab.a') == 'No'\nassert solution('ab..a') == 'No'\nassert solution('test') == 'Yes\\ntes?'\nassert solution('test.txt') == 'Yes\\ntes.txt'\nassert solution('test.txt.md') == 'Yes\\ntes.txt.md'\nassert solution('test.txt.md.html') == 'Yes\\ntes.txt.md.html'\nassert solution('test.txt.md..html') == 'Yes\\ntes.txt.md.html'\nassert solution('test.txt.md.html..') == 'Yes\\ntes.txt.md.html'\nassert solution('test.txt.md.html.test') == 'Yes\\ntes.txt.md.html.test'\nassert solution('test.txt.md.html.test..') == 'Yes\\ntes.txt.md.html.test'\nassert solution('test.txt.md.html.test.txt') == 'Yes\\ntes.txt.md.html.test.txt'\nassert solution('test.txt.md.html.test.txt..') == 'Yes\\ntes.txt.md.html.test.txt'\nassert solution('test.txt.md.html.test.txt.md') == 'Yes\\ntes.txt.md.html.test.txt.md'\nassert solution('test.txt.md.html.test.txt.md..') == 'Yes\\ntes.txt.md.html.test.txt.md'\nassert solution('test.txt.md.html.test.txt.md.html') == 'Yes\\ntes.txt.md.html.test.txt.md.html'\nassert solution('test.txt.md.html.test.txt.md.html..') == 'Yes\\ntes.txt.md.html.test.txt.md.html'\nassert solution('test.txt.md.html.test.txt.md.html.test') == 'Yes\\ntes.txt.md.html.test.txt.md.html.test'\nassert solution('test.txt.md.html.test.txt.md.html.test..') == 'Yes\\ntes.txt.md.html.test.txt.md.html.test'\nassert solution('test.txt.md.html.test.txt.md.html.test.txt') == 'Yes\\ntes.txt.md.html.test.txt.md.html.test.txt'\nassert solution('test.txt.md.html.test.txt.md.html.test.txt..') == 'Yes\\ntes.txt.md.html.test.txt.md.html.test.txt'\nassert solution('test.txt.md.html.test.txt.md.html.test.txt.md') == 'Yes\\ntes.txt.md.html.test.txt.md.html.test.txt.md'\nassert solution('test.txt.md.html.test.txt.md.html.test.txt.md..') == 'Yes\\ntes.txt.md.html.test.txt.md.html.test.txt.md'\nassert solution('test.txt.md.html.test.txt.md.html.test.txt.md.html') == 'Yes\\ntes.txt.md.html.test.txt.md.html.test.txt.md.html'\nassert solution('test.txt.md.html.test.txt.md.html.test.txt.md.html..') == 'Yes\\ntes.txt.md.html.test.txt.md.html.test.txt.md.html'\nassert solution('test.txt.md.html.test.txt.md.html.test.txt.md.html.test') == 'Yes\\ntes.txt.md.html.test.txt.md.html.test.txt.md.html.test'\nassert solution('test.txt.md.html.test.txt.md.html.test.txt.md.html.test..') == 'Yes\\ntes.txt.md.html.test.txt.md.html.test.txt.md.html.test'\nassert solution('test.txt."
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"Yes\\na?\"\nassert solution(stdin) == \"Yes\\ntes?\"\nassert solution(stdin) == \"No\""
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('ab') == 'a?'\nassert solution('ab') == 'a?'\nassert solution('ab') == 'a?'\nassert solution('ab') == 'a?'"
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == 'Yes'\nassert solution(input()) == 'No'\nassert solution(input()) == 'Yes'\nassert solution(input()) == 'No'\nassert solution(input()) == 'Yes'\nassert solution(input()) == 'No'"
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"ab\") == \"Yes\\na?\"\nassert solution(\"ac\") == \"Yes\\na?\"\nassert solution(\"cd\") == \"Yes\\na?\"\nassert solution(\"1 2\") == \"Yes\\na?\"\nassert solution(\"1 2 3\") == \"No\"\nassert solution(\"1 4 5\") == \"Yes\\a?\"\nassert solution(\".svn\") == \"Yes\\a?\"\nassert solution(\".git\") == \"Yes\\a?\"\nassert solution(\"....\") == \"Yes\\a?\"\nassert solution(\"...  \") == \"Yes\\a?\"\nassert solution(\"..  \") == \"Yes\\a?\"\nassert solution(\".  \") == \"Yes\\a?\"\nassert solution(\".\") == \"Yes\\a?\""
    },
    {
        "number": 3874,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Yes\\na?\"\nassert solution(input()) == \"Yes\\n?es?\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"Yes\\n.???def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\"\n"
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2 3\") == \"2\"\nassert solution(\"4\\n1 2 3 4\") == \"1\"\nassert solution(\"5\\n1 2 3 4 5\") == \"2\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"1\"\nassert solution(\"7\\n1 2 3 4 5 6 7\") == \"2\"\nassert solution(\"8\\n1 2 3 4 5 6 7 8\") == \"1\"\nassert solution(\"9\\n1 2 3 4 5 6 7 8 9\") == \"2\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"1\"\nassert solution(\"11\\n1 2 3 4 5 6 7 8 9 10 11\") == \"2\"\nassert solution(\"12\\n1 2 3 4 5 6 7 8 9 10 11 12\") == \"1\"\nassert solution(\"13\\n1 2 3 4 5 6 7 8 9 10 11 12 13\") == \"2\"\nassert solution(\"14\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14\") == \"1\"\nassert solution(\"15\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\") == \"2\"\nassert solution(\"16\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\") == \"1\"\nassert solution(\"17\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\") == \"2\"\nassert solution(\"18\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18\") == \"1\"\nassert solution(\"19\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\") == \"2\"\nassert solution(\"20\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\") == \"1\"\nassert solution(\"21\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21\") == \"2\"\nassert solution(\"22\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22\") == \"1\"\nassert solution(\"23\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23\") == \"2\"\nassert solution(\"24\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24\") == \"1\"\nassert solution(\"25\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 "
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3\\n1 2 3') == '2\\n'"
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '2\\n', 'Incorrect output'"
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"2\\n\"\nassert solution(\"4\\n1 2 3 4\\n\") == \"2\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"2\\n\"\nassert solution(\"6\\n1 2 3 4 5 6\\n\") == \"2\\n\"\nassert solution(\"7\\n1 2 3 4 5 6 7\\n\") == \"2\\n\"\nassert solution(\"8\\n1 2 3 4 5 6 7 8\\n\") == \"2\\n\"\nassert solution(\"9\\n1 2 3 4 5 6 7 8 9\\n\") == \"2\\n\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\\n\") == \"2\\n\""
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"2\", \"Output should be '2'.\""
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 2, \"Invalid test case.\""
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 2 3\") == \"2\""
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2\\n\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3875,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 2 3\") == \"2\\n\"\nassert solution(\"5\\n1 2 3 4 5\") == \"2\\n\"\nassert solution(\"3\\n5 4 3\") == \"3\\n\"\nassert solution(\"5\\n5 4 3 2 1\") == \"3\\n\"\nassert solution(\"2\\n1 2\") == \"2\\n\""
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\\n\", \"Test Case 1 failed\""
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n1 2\\n2 3\\n3 4\\n') == '2\\n'\nassert solution('5\\n1 2\\n3 4\\n2 3\\n1 4\\n') == '1\\n'"
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_data) == output_data, \"Test Failed\"\n\ninput_data = \"\"\"\n4\n1 2\n2 3\n3 4\n\"\"\"\n\noutput_data = \"2\"\n"
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\""
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\\n\") == \"2\""
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\"\nassert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\"\nassert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\"\nassert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 2\\n2 3\\n3 4\") == \"2\"\n\nimport sys"
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\\n\"\nassert solution(\"2\\n1 2\\n2 3\\n3 4\") == \"2\\n\"\nassert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"3\\n\"\nassert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"4\\n\"\nassert solution(\"1\\n1\\n1\\n1\\n1\") == \"1\\n\"\nassert solution(\"1\\n1\\n1\\n1\\n2\") == \"1\\n\"\nassert solution(\"1\\n1\\n1\\n2\\n1\") == \"1\\n\"\nassert solution(\"1\\n1\\n2\\n1\\n1\") == \"1\\n\"\nassert solution(\"3\\n1 2\\n1 3\\n1 4\\n1 5\\n2 3\\n2 4\\n2 5\\n3 4\\n3 5\\n4 5\") == \"3\\n\""
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '2'\n"
    },
    {
        "number": 3876,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\\n\") == \"2\\n\"\n"
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Expected: {expected_output}, Received: {solution(input())}\""
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"The output is not correct!\""
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 2 5\") == \"4\"\nassert solution(\"10 3 10\") == \"5\""
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 2 5\\n\") == \"4\\n\"\nassert solution(\"10 3 10\\n\") == \"5\\n\"\n\nSolution:"
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"7 2 5\") == \"4\"\nassert solution(\"10 3 10\") == \"5\""
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(10, 3, 10) == 5"
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"7 2 5\") == \"4\"\nassert solution(\"10 3 10\") == \"5\""
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 3 10\") == \"5\"\nassert solution(\"7 2 5\") == \"4\""
    },
    {
        "number": 3877,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('7 2 5') == '4'\nassert solution('10 3 10') == '5'"
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 6\\n1 2\\n1 3\\n2 3\\n2 5\\n3 4\\n4 5\") == \"2\\n2 3\"\nassert solution(\"4 4\\n1 2\\n1 3\\n1 4\\n3 4\\n\") == \"1\\n1\""
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n5 6\n1 2\n1 3\n2 3\n2 5\n3 4\n4 5\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n4 4\n1 2\n1 3\n1 4\n3 4\n\"\"\") == \"1\""
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('Input\\n5 6\\n1 2\\n1 3\\n2 3\\n2 5\\n3 4\\n4 5\\n\\nOutput\\n2\\n2 3\\n\\nInput\\n4 4\\n1 2\\n1 3\\n1 4\\n3 4\\n\\nOutput\\n1\\n1\\n\\n'), 'Test case 1 failed'\nassert solution('Input\\n4 4\\n1 2\\n1 3\\n1 4\\n3 4\\n\\nOutput\\n1\\n1\\n\\n'), 'Test case 2 failed'\n\nsolution = '''\n"
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(str(input())) == \"2\\n2 3\\n\"\nassert solution(str(input())) == \"1\\n1\\n\""
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 6\\n1 2\\n1 3\\n2 3\\n2 5\\n3 4\\n4 5\") == \"2\\n2 3\\n\"\nassert solution(\"4 4\\n1 2\\n1 3\\n1 4\\n3 4\") == \"1\\n1\"\n"
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('Input\\n5 6\\n1 2\\n1 3\\n2 3\\n2 5\\n3 4\\n4 5\\n\\nOutput\\n2\\n2 3\\n\\nInput\\n4 4\\n1 2\\n1 3\\n1 4\\n3 4\\n\\nOutput\\n1\\n1') == '2\\n2 3\\n\\n1\\n1\\n'"
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n5 6\n1 2\n1 3\n2 3\n2 5\n3 4\n4 5\n''') == '2\\n2 3 \\n'\n\nassert solution('''\n4 4\n1 2\n1 3\n1 4\n3 4\n''') == '1\\n1 \\n'"
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(open(\"test_case.txt\", \"r\")) == \"\"\"1\n1\"\"\""
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 2"
    },
    {
        "number": 3878,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == expected, f\"Test failed. Expected: {expected}, got: {solution(input())}\""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == 'Yes'\n"
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n75 150 75 50\") == \"Yes\\n\"\nassert solution(\"3\\n100 150 250\") == \"No\\n\""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n75 150 75 50\") == \"Yes\"\nassert solution(\"3\\n100 150 250\") == \"No\""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n75 150 75 50\\n\") == \"Yes\\n\"\nassert solution(\"3\\n100 150 250\\n\") == \"No\\n\""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n75 150 75 50\") == \"Yes\\n\"\nassert solution(\"3\\n100 150 250\") == \"No\\n\""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 'Yes', \"Test case 1 failed\"\n\nassert solution(input()) == 'No', \"Test case 2 failed\"\n\nassert solution(input()) == 'Yes', \"Test case 3 failed\"\n\nassert solution(input()) == 'No', \"Test case 4 failed\"\n\nassert solution(input()) == 'Yes', \"Test case 5 failed\"\n\nassert solution(input()) == 'No', \"Test case 6 failed\"\n\nassert solution(input()) == 'Yes', \"Test case 7 failed\"\n\nassert solution(input()) == 'No', \"Test case 8 failed\"\n\nassert solution(input()) == 'Yes', \"Test case 9 failed\"\n\nassert solution(input()) == 'No', \"Test case 10 failed\""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\""
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == 'Yes'"
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n75 150 75 50') == 'Yes\\n'\nassert solution('3\\n100 150 250') == 'No\\n'"
    },
    {
        "number": 3879,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n75 150 75 50\") == \"Yes\\n\"\nassert solution(\"3\\n100 150 250\") == \"No\\n\"\n\nprint(\"All tests passed\")\n"
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n50 50 50\") == \"150\\n\", \"The expected output is incorrect.\"\n\nassert solution(\"2\\n-1 -100 -1\") == \"100\\n\", \"The expected output is incorrect.\"\n\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected, f\"Test failed: expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n50 50 50\") == \"150\\n\"\nassert solution(\"2\\n-1 -100 -1\") == \"100\\n\""
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n50 50 50\") == \"150\\n\", \"Expected output: 150\\n, but got: \" + solution(\"2\\n50 50 50\")\nassert solution(\"2\\n-1 -100 -1\") == \"100\\n\", \"Expected output: 100\\n, but got: \" + solution(\"2\\n-1 -100 -1\")"
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('2\\n50 50 50') == '150\\n'\n\nassert solution('2\\n-1 -100 -1') == '100\\n'\n\nprint('All tests passed!')"
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n50 50 50\\n\") == \"150\\n\"\n\nassert solution(\"2\\n-1 -100 -1\\n\") == \"100\\n\""
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n50 50 50\") == \"150\"\nassert solution(\"2\\n-1 -100 -1\") == \"100\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"150\"\nassert solution(input()) == \"100\""
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == \"150\", \"Incorrect solution\""
    },
    {
        "number": 3880,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n50 50 50\\n\") == \"150\"\nassert solution(\"2\\n-1 -100 -1\\n\") == \"100\""
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n3 5\nab a\ncc c\nca a\nee c\nff d\n''') == '4'\n\nassert solution('''\n2 8\naf e\ndc d\ncc f\nbc b\nda b\neb a\nbb b\nff c\n''') == '1'\n\nassert solution('''\n6 2\nbb a\nba a\n''') == '0'"
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Test failed for input {input()}, output {output()}\""
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5\\nab a\\ncc c\\nca a\\nee c\\nff d\") == \"4\"\nassert solution(\"2 8\\naf e\\ndc d\\ncc f\\nbc b\\nda b\\neb a\\nbb b\\nff c\") == \"1\"\nassert solution(\"6 2\\nbb a\\nba a\\n\") == \"0\""
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"4\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"0\""
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 5\\nab a\\ncc c\\nca a\\nee c\\nff d\") == \"4\\n\"\nassert solution(\"2 8\\naf e\\ndc d\\ncc f\\nbc b\\nda b\\neb a\\nbb b\\nff c\\n\") == \"1\\n\"\nassert solution(\"6 2\\nbb a\\nba a\\n\") == \"0\\n\""
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 5\\nab a\\ncc c\\nca a\\nee c\\nff d\") == \"4\"\nassert solution(\"2 8\\naf e\\ndc d\\ncc f\\nbc b\\nda b\\nee a\\nbb b\\nff c\") == \"1\"\nassert solution(\"6 2\\nbb a\\nba a\\n\") == \"0\""
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 5\\nab a\\ncc c\\nca a\\nee c\\nff d\\n\") == \"4\"\nassert solution(\"2 8\\naf e\\ndc d\\ncc f\\nbc b\\nda b\\neb a\\nbb b\\nff c\\n\") == \"1\"\nassert solution(\"6 2\\nbb a\\nba a\\n\") == \"0\""
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 5\\na b\\nc c\\na c\\nee c\\nff d\") == \"4\"\nassert solution(\"2 8\\na f\\ncc d\\ncc f\\nbc b\\nda b\\neb a\\nbb b\\nff c\") == \"1\"\nassert solution(\"6 2\\nbb a\\nba a\") == \"0\""
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 5\\nab a\\ncc c\\nca a\\nee c\\nff d\") == 4\nassert solution(\"2 8\\naf e\\ndc d\\ncc f\\nbc b\\nda b\\neb a\\nbb b\\nff c\") == 1\nassert solution(\"6 2\\nbb a\\nba a\\n\") == 0"
    },
    {
        "number": 3881,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Test case {input()} failed\""
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(1) == '1'\nassert solution(2) == '3'\nassert solution(3) == '10'"
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == 1\nassert solution(2) == 3\nassert solution(3) == 10"
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('3') == '10'"
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == 1\nassert solution(2) == 3\nassert solution(3) == 10"
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"10\""
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(1) == \"1\"\nassert solution(2) == \"3\"\nassert solution(3) == \"10\""
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(1) == \"1\"\nassert solution(2) == \"3\"\nassert solution(3) == \"10\""
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(1) == \"1\"\nassert solution(2) == \"3\"\nassert solution(3) == \"10\""
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1\\n\", \"Expected Output: 1\\nActual Output: \" + str(solution()) + \"\\n\"\n"
    },
    {
        "number": 3882,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1) == 1\nassert solution(2) == 3\nassert solution(3) == 10"
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output, f\"Test case failed: {input()}!= {output}\""
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 1') == 1.0\nassert solution('1 3') == -1\nassert solution('4 1') == 1.25"
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 1\") == \"1.000000000000\"\nassert solution(\"1 3\") == \"-1\"\nassert solution(\"4 1\") == \"1.250000000000\""
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1\") == \"1.000000000000\\n\"\nassert solution(\"1 3\") == \"-1\\n\"\nassert solution(\"4 1\") == \"1.250000000000\\n\""
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1\\n1 3\\n4 1\\n1 3\") == \"1.000000000000\\n-1\\n1.250000000000\"\nassert solution(\"1 3\\n4 1\\n1 3\") == \"-1\"\nassert solution(\"4 1\\n1 3\") == \"1.250000000000\"\n\nThe graphs demonstrate that the solution is correct. The only line containing the answer is 1.250000000000."
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1\") == \"1.000000000000\"\nassert solution(\"1 3\") == \"-1\"\nassert solution(\"4 1\") == \"1.250000000000\"\n\nprint(\"All test cases passed\")"
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1\") == \"1.000000000000\\n\"\nassert solution(\"1 3\") == \"-1\\n\"\nassert solution(\"4 1\") == \"1.250000000000\\n\""
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1\") == \"1.000000000000\", \"Sample 1\"\nassert solution(\"1 3\") == \"-1\", \"Sample 3\"\nassert solution(\"4 1\") == \"1.250000000000\", \"Sample 4\"\n\nprint(\"-1\" if solution(\"4 1\") == \"1.250000000000\" else \"1.000000000000\")  # Sample 5"
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1\") == \"1.000000000000\", \"Incorrect output 1\"\nassert solution(\"1 3\") == \"-1\", \"Incorrect output 2\"\nassert solution(\"4 1\") == \"1.250000000000\", \"Incorrect output 3\""
    },
    {
        "number": 3883,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1\\n1 3\\n4 1\\n\") == \"1.000000000000\\n-1\\n1.250000000000\\n\"\nassert solution(\"1 3\\n4 1\\n\") == \"-1\\n1.250000000000\\n\"\nassert solution(\"4 1\\n\") == \"1.250000000000\\n\""
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2') == '10.0000000000\\n'\nassert solution('3') == '-1\\n'\nassert solution('6') == '85.4800000000\\n'"
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n12\\n11 8\\n7 5\") == \"10.0000000000\"\nassert solution(\"3\\n1\\n1 4 1\\n2 5 3\") == \"-1\"\nassert solution(\"6\\n2\\n4 6 3 3 5 6\\n2 6 3 6 5 3\") == \"85.4800000000\""
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_data) == expected_output, f\"Test failed: {solution(input_data)}!= {expected_output}\\nInput: {input_data}\\nExpected output: {expected_output}\\n\"\nprint(\"Test passed\")\n\nn = int(input())\nm = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))"
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, \"Your solution is incorrect.\"\n\nfor i in range(len(input())):\n    if input()[i] == '-':\n        assert solution(input()) == expected_output, \"Your solution is incorrect.\"\n        break"
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"10.0000000000\\n\""
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '10.0000000000\\n'"
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == expected_output, f\"Solution for the given inputs is incorrect. Expected: {expected_output}, Received: {solution(input())}\"\nprint(\"Test case passed\")"
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == expected_output\n"
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"10.0000000000\"\nassert solution() == \"-1\"\nassert solution() == \"85.4800000000\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3884,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == expected_output, f\"Test failed. Expected output: {expected_output}, Actual output: {solution(stdin)}\"\n\nsolution = \"\"\"\n"
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"0\\n\"\nassert solution(open(\"input.txt\", \"r\").read()) == \"4\\n\"\n"
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"10\") == \"4\""
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n\") == \"0\\n\"\nassert solution(\"2\\n\") == \"0\\n\"\nassert solution(\"10\\n\") == \"4\\n\""
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"0\\n\"\nassert solution(\"10\") == \"4\\n\""
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n2\\n\") == \"0\\n\"\nassert solution(\"10\\n\") == \"4\\n\"\n"
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == 0, \"Test failed\""
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Test failed for input: {input()}, output: {output()}\""
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '0\\n'"
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\\n2\\n1\\n2\\n3\\n2\\n4\\n3\\n2\") == \"0\"\nassert solution(\"10\\n4\\n7\\n1\\n8\\n10\\n5\\n9\\n6\") == \"4\""
    },
    {
        "number": 3885,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 0"
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"Wh.\"\nassert solution(\"1 2\") == \"What are you doing at the end of the world? Are you busy? Will you save us?\".\nassert solution(\"1 111111111111\") == \"What are you doing at the end of the world? Are you busy? Will you save us?\"."
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 1\\n1 2\\n1 111111111111') == 'Wh.'\nassert solution('0 69\\n1 194\\n1 139\\n0 47\\n1 66') == 'abdef'\nassert solution('4 1825\\n3 75\\n3 530\\n4 1829\\n4 1651\\n3 187\\n4 584\\n4 255\\n4 774\\n2 474') == 'Areyoubusy'"
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 1\\n1 2\\n1 111111111111\") == \"Wh.\\n\"\nassert solution(\"5\\n0 69\\n1 194\\n1 139\\n0 47\\n1 66\") == \"abdef\\n\"\nassert solution(\"10\\n4 1825\\n3 75\\n3 530\\n4 1829\\n4 1651\\n3 187\\n4 584\\n4 255\\n4 774\\n2 474\") == \"Areyoubusy\\n\""
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1\\n1 2\\n1 111111111111\\n\") == \"Wh.\\n\"\nassert solution(\"0 69\\n1 194\\n1 139\\n0 47\\n1 66\\n\") == \"abdef\\n\"\nassert solution(\"4 1825\\n3 75\\n3 530\\n4 1829\\n4 1651\\n3 187\\n4 584\\n4 255\\n4 774\\n2 474\\n\") == \"Areyoubusy\\n\""
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1\\n1 2\\n1 111111111111\") == \"Wh.\"\nassert solution(\"0 69\\n1 194\\n1 139\\n0 47\\n1 66\") == \"abdef\"\nassert solution(\"4 1825\\n3 75\\n3 530\\n4 1829\\n4 1651\\n3 187\\n4 584\\n4 255\\n4 774\\n2 474\") == \"Areyoubusy\""
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1\\n1 2\\n1 111111111111\") == \"Wh.\"\nassert solution(\"0 69\\n1 194\\n1 139\\n0 47\\n1 66\") == \"abdef\"\nassert solution(\"4 1825\\n3 75\\n3 530\\n4 1829\\n4 1651\\n3 187\\n4 584\\n4 255\\n4 774\\n2 474\") == \"Areyoubusy\""
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1\\n1 2\\n1 111111111111\\n\") == \"Wh.\"\nassert solution(\"0 69\\n1 194\\n1 139\\n0 47\\n1 66\\n\") == \"abdef\"\nassert solution(\"4 1825\\n3 75\\n3 530\\n4 1829\\n4 1651\\n3 187\\n4 584\\n4 255\\n4 774\\n2 474\\n\") == \"Areyoubusy\"\n"
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1\\n1 2\\n1 111111111111\") == \"Wh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\nWh.\\n"
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 1\\n1 2\\n1 111111111111') == 'Wh.', \"The solution for the first example is incorrect. It should be Wh.\"\nassert solution('0 69\\n1 194\\n1 139\\n0 47\\n1 66') == 'abdef', \"The solution for the second example is incorrect. It should be abdef.\"\nassert solution('4 1825\\n3 75\\n3 530\\n4 1829\\n4 1651\\n3 187\\n4 584\\n4 255\\n4 774\\n2 474') == 'Areyoubusy', \"The solution for the third example is incorrect. It should be Areyoubusy.\""
    },
    {
        "number": 3886,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == 'Wh.', 'Your solution is incorrect.'"
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"? +? -? +? +? = 42\") == \"Possible\\n9 + 13 - 39 + 28 + 31 = 42\"\nassert solution(\"? -? = 1\") == \"Impossible\"\nassert solution(\"? = 1000000\") == \"Possible\\n1000000 = 1000000\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"? +? -? +? +? = 42\") == \"Possible\\n9 + 13 - 39 + 28 + 31 = 42\"\nassert solution(\"? -? = 1\") == \"Impossible\"\nassert solution(\"? = 1000000\") == \"Possible\\n1000000 = 1000000\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"? +? -? +? +? = 42\") == \"Possible\", \"Test 1: Correctly replaced each question mark with integers from 1 to 42.\"\n\nassert solution(\"? -? = 1\") == \"Impossible\", \"Test 2: Cannot replace a question mark with a question mark.\"\n\nassert solution(\"? = 1000000\") == \"Possible\", \"Test 3: Correctly replaced each question mark with a question mark.\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('? +? -? +? +? = 42') == 'Possible\\n9 + 13 - 39 + 28 + 31 = 42'\nassert solution('? -? = 1') == 'Impossible'\nassert solution('? = 1000000') == 'Possible\\n1000000 = 1000000'"
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('? +? -? +? +? = 42') == 'Possible\\n9 + 13 - 39 + 28 + 31 = 42'\nassert solution('? -? = 1') == 'Impossible'\nassert solution('? = 1000000') == 'Possible\\n1000000 = 1000000'"
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"? +? -? +? +? = 42\") == \"Possible\\n9 + 13 - 39 + 28 + 31 = 42\"\n\nassert solution(\"? -? = 1\") == \"Impossible\"\n\nassert solution(\"? = 1000000\") == \"Possible\\n1000000 = 1000000\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"? +? -? +? = 42\") == \"Possible\\n9 + 13 - 39 + 28 + 31 = 42\"\nassert solution(\"? -? = 1\") == \"Impossible\"\nassert solution(\"? = 1000000\") == \"Possible\\n1000000 = 1000000\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"? +? -? +? +? = 42\") == \"Possible\\n9 + 13 - 39 + 28 + 31 = 42\"\nassert solution(\"? -? = 1\") == \"Impossible\"\nassert solution(\"? = 1000000\") == \"Possible\\n1000000 = 1000000\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"? +? -? +? +? = 42\") == \"Possible\\n9 + 13 - 39 + 28 + 31 = 42\"\nassert solution(\"? -? = 1\") == \"Impossible\"\nassert solution(\"? = 1000000\") == \"Possible\\n1000000 = 1000000\""
    },
    {
        "number": 3887,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"? +? -? +? +? = 42\") == \"Possible\\n9 + 13 - 39 + 28 + 31 = 42\"\nassert solution(\"? -? = 1\") == \"Impossible\"\nassert solution(\"? = 1000000\") == \"Possible\\n1000000 = 1000000\""
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2 0 2\\n0\\n0\\n0\\n\\n\") == \"7 4 5\\n\", \"Test case 1 failed\"\nassert solution(\"5\\n1 2 0 2 1\\n0\\n0\\n0\\n\\n\") == \"3 0 1\\n\", \"Test case 2 failed\"\nassert solution(\"1\\n1 2\\n0\\n0\\n\\n\") == \"0 0\\n\", \"Test case 3 failed\"\nassert solution(\"5\\n1 2 0 2 1\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n\\n\") == \"0 0 0 0 0\\n\", \"Test case 4 failed\"\nassert solution(\"1\\n1 2 1 2\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n\\n\") == \"2\\n\", \"Test case 5 failed\""
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 2 0 2\\n0\\n0\\n0\\n\") == \"7 4 5\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4\\n1 2 0 2\\n0\\n0\\n0\\n') == '7 4 5'\n"
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\na1 2 0 2\\na0\\na0\\na0\\na0\\na0\\na0\") == \"7 4 5\"\n"
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 2 0 2\\n0\\n0\\n0\") == \"7 4 5\\n\", \"Incorrect output\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 2 0 2\\n0\\n0\\n0\\n\") == \"7 4 5\\n\", \"Test Case 1\"\n\nassert solution(\"4\\n1 2 0 2\\n0\\n0\\n0\\n\") == \"7 4 5\\n\", \"Test Case 2\""
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\na1 2 0 2\\na\\na\\na\\na\\n\") == \"7 4 5\\n\", \"Test case 1 failed\"\nassert solution(\"4\\na1 2 0 2\\na\\na\\na\\na\\na\\n\") == \"7 4 5\\n\", \"Test case 2 failed\"\nassert solution(\"4\\na1 2 0 2\\na\\na\\na\\na\\na\\n\") == \"7 4 5\\n\", \"Test case 3 failed\"\nassert solution(\"4\\na1 2 0 2\\na\\na\\na\\na\\na\\n\") == \"7 4 5\\n\", \"Test case 4 failed\"\nassert solution(\"4\\na1 2 0 2\\na\\na\\na\\na\\na\\n\") == \"7 4 5\\n\", \"Test case 5 failed\""
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"7 4 5\\n\", \"Incorrect output\"\n"
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(sample_input) == \"7 4 5\\n\", \"The solution is incorrect\""
    },
    {
        "number": 3888,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 2 0 2\\n0\\n0\\n0\\n\") == \"7 4 5\"\n"
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"aabddc\") == \"Yes\"\nassert solution(\"3abc\") == \"No\"\nassert solution(\"3jjj\") == \"Yes\"\n"
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"6\\naabddc\") == \"Yes\"\nassert solution(\"3\\nabc\") == \"No\"\nassert solution(\"3\\njjj\") == \"Yes\""
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6\\naabddc\") == \"Yes\"\nassert solution(\"3\\nabc\") == \"No\"\nassert solution(\"3\\njjj\") == \"Yes\"\n"
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"aabddc\") == \"Yes\"\nassert solution(\"3abc\") == \"No\"\nassert solution(\"3jjj\") == \"Yes\""
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"aabddc\") == \"Yes\"\nassert solution(\"3abc\") == \"No\"\nassert solution(\"3jjj\") == \"Yes\"\n\nfrom typing import List"
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Test failed: got {solution(input())}, expected {expected_output}\"\n"
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\naabddc\\n\") == \"Yes\"\nassert solution(\"3\\nab\\n\") == \"No\"\nassert solution(\"3\\njjj\\n\") == \"Yes\""
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6\\naabddc') == 'Yes'\nassert solution('3\\nabc') == 'No'\nassert solution('3\\njjj') == 'Yes'"
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('6\\naabddc') == 'Yes'\nassert solution('3\\nabc') == 'No'\nassert solution('3\\njjj') == 'Yes'"
    },
    {
        "number": 3889,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"aabddc\") == \"Yes\"\nassert solution(\"abc\") == \"No\"\nassert solution(\"jjj\") == \"Yes\"\n"
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '54'\n"
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), f\"Input: {input()}, Output: {output()}\""
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 2\") == \"54\"\nassert solution(\"7 4\") == \"1728\"\n"
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2\") == \"54\\n\"\nassert solution(\"7 4\") == \"1728\\n\"\n"
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 2\") == \"54\"\nassert solution(\"7 4\") == \"1728\""
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"54\\n\""
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 2\\n\") == \"54\"\nassert solution(\"7 4\\n\") == \"1728\""
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2\") == \"54\\n\"\nassert solution(\"7 4\") == \"1728\\n\""
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=None) == \"54\""
    },
    {
        "number": 3890,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2\") == \"54\"\nassert solution(\"7 4\") == \"1728\""
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW\") == \"2 4\"\nassert solution(\"3 3\\nWWW\\nBWW\\nWWW\") == \"2 1\""
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW\") == \"2 4\\n\"\nassert solution(\"3 3\\nWWW\\nBWW\\nWWW\") == \"2 1\\n\""
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW\\n\") == \"2 4\\n\", \"The center of the black square should be 2, 4\"\nassert solution(\"3 3\\nWWW\\nBWW\\nWWW\\n\") == \"2 1\\n\", \"The center of the black square should be 2, 1\""
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW\\n\") == \"2 4\\n\", \"Input 1 failed\"\nassert solution(\"3 3\\nWWW\\nBWW\\nWWW\\n\") == \"2 1\\n\", \"Input 2 failed\"\nassert solution(\"1 1\\nW\\n\") == \"0 0\\n\", \"Input 3 failed\"\nassert solution(\"1 1\\nW\\n\") == \"0 0\\n\", \"Input 4 failed\"\nassert solution(\"1 1\\nW\\n\") == \"0 0\\n\", \"Input 5 failed\""
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW\") == \"2 4\"\nassert solution(\"3 3\\nWWW\\nBWW\\nWWW\") == \"2 1\"\n"
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW\") == \"2 4\\n\"\nassert solution(\"3 3\\nWWW\\nBWW\\nWWW\") == \"2 1\\n\""
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW\") == \"2 4\\n\"\nassert solution(\"3 3\\nWWW\\nBWW\\nWWW\") == \"2 1\\n\""
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Output\\n2 4\""
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW') == '2 4\\n'\nassert solution('3 3\\nWWW\\nBWW\\nWWW') == '2 1\\n'\nassert solution('1 1\\nW') == '1 1\\n'"
    },
    {
        "number": 3891,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW\") == \"2 4\\n\"\nassert solution(\"3 3\\nWWW\\nBWW\\nWWW\") == \"2 1\\n\""
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 7\\n2 4\\n5 1\\n2 3\\n3 4\\n4 1\\n5 3\\n3 5\\n\") == \"10 9 10 10 9 \\n\"\nassert solution(\"2 3\\n1 2\\n1 2\\n1 2\\n\") == \"5 6 \\n\"\n"
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5 7\\n2 4\\n5 1\\n2 3\\n3 4\\n4 1\\n5 3\\n3 5\\n') == '10 9 10 10 9\\n5 6'\nassert solution('2 3\\n1 2\\n1 2\\n1 2\\n') == '5 6'"
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 7\\n2 4\\n5 1\\n2 3\\n3 4\\n4 1\\n5 3\\n3 5\") == \"10 9 10 10 9\\n5 6\"\nassert solution(\"2 3\\n1 2\\n1 2\\n1 2\") == \"5 6\""
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 7\\n2 4\\n5 1\\n2 3\\n3 4\\n4 1\\n5 3\\n3 5\\n\") == \"10 9 10 10 9 \\n\"\nassert solution(\"2 3\\n1 2\\n1 2\\n1 2\\n\") == \"5 6 \\n\""
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 7\\n2 4\\n5 1\\n2 3\\n3 4\\n4 1\\n5 3\\n3 5\\n\") == \"10 9 10 10 9 \\n\"\nassert solution(\"2 3\\n1 2\\n1 2\\n1 2\\n\") == \"5 6 \\n\""
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 7\\n2 4\\n5 1\\n2 3\\n3 4\\n4 1\\n5 3\\n3 5\\n\") == \"10 9 10 10 9\\n5 6\\n\"\nassert solution(\"2 3\\n1 2\\n1 2\\n1 2\\n\") == \"5 6\\n\"\nassert solution(\"3 4\\n1 2\\n1 2\\n1 2\\n\") == \"7 6\\n\"\nassert solution(\"2 1\\n1 2\\n1 2\\n1 2\\n\") == \"3 4\\n\""
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 7\\n2 4\\n5 1\\n2 3\\n3 4\\n4 1\\n5 3\\n3 5\\n\") == \"10 9 10 10 9\\n\"\nassert solution(\"2 3\\n1 2\\n1 2\\n1 2\\n\") == \"5 6\\n\"\nassert solution(\"5 7\\n2 4\\n5 1\\n2 3\\n3 4\\n4 1\\n5 3\\n3 5\\n\") == \"10 9 10 10 9\\n\""
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected\nassert solution(stdin_2) == expected_2"
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 7\\n2 4\\n5 1\\n2 3\\n3 4\\n4 1\\n5 3\\n3 5\\n\") == \"10 9 10 10 9\\n\"\nassert solution(\"2 3\\n1 2\\n1 2\\n1 2\\n\") == \"5 6\\n\""
    },
    {
        "number": 3892,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 7\\n2 4\\n5 1\\n2 3\\n3 4\\n4 1\\n5 3\\n3 5\\n\") == \"10 9 10 10 9\"\nassert solution(\"2 3\\n1 2\\n1 2\\n1 2\\n\") == \"5 6\"\n"
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n1 1 -3') == '2'\nassert solution('1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3') == '2'"
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n1 1 -3') == '2\\n'\nassert solution('1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3') == '2\\n'\nassert solution('1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3') == '2\\n'\nassert solution('1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3') == '2\\n'\nassert solution('1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3') == '2\\n'\nassert solution('1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3') == '2\\n'"
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n') == '2'\nassert solution('1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\\n') == '2'\n\nfrom typing import List"
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n\") == \"2\"\nassert solution(\"1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\\n\") == \"2\"\nassert solution(\"\") == \"Error: Invalid input\""
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution == \"output\""
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input) == output, \"Test failed\"\nfor input, output in zip(input_data, output_data):\n    assert solution(input) == output, \"Test failed\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n1 1 -3\\n\") == \"2\"\nassert solution(\"1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\\n\") == \"2\""
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n1 1 -3\") == \"2\"\nassert solution(\"1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\") == \"2\""
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output() for input, output in zip(sample_inputs, sample_outputs)"
    },
    {
        "number": 3893,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n1 1 -3') == '2'\nassert solution('1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3') == '2'\n\nsolution = '''\n"
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"The function should return '{expected_output}', but it returned '{solution(input())}'.\""
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1\\n3 4\\n\") == \"Kevin\"\nassert solution(\"1 2\\n3\\n\") == \"Nicky\""
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_str) == output_str, f\"Test failed for {input_str} and expected {output_str}\"\n"
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 1\\n3 4\") == \"Kevin\"\nassert solution(\"1 2\\n3\") == \"Nicky\""
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 1\\n3 4\") == \"Kevin\\n\"\nassert solution(\"1 2\\n3\") == \"Nicky\\n\""
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1\\n3 4\") == \"Kevin\"\nassert solution(\"1 2\\n3\") == \"Nicky\""
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1\\n3 4\\n\") == \"Kevin\"\nassert solution(\"1 2\\n3\\n\") == \"Nicky\"\n"
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\"\n"
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2 1\\n3 4') == 'Kevin'\nassert solution('1 2\\n3') == 'Nicky'"
    },
    {
        "number": 3894,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 1\\n3 4') == 'Kevin'\nassert solution('1 2\\n3') == 'Nicky'\nassert solution('1 2\\n2') == 'Nicky'"
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 2 3\\n2 2 2\\n3\\n2 2 1\") == \"3\\n1 2 3\\n2 2 1\\n1\\n1 1 1\\n2\\n\"\n\nassert solution(\"3\\n2 2 2\\n2 2 1\") == \"1\\n1 1 1\\n2\\n\"\n\nassert solution(\"2\\n2 1\\n\") == \"-1\\ndef solution(stdin: str) -> str:\n    pass\""
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Test {test_case_number} failed. Expected: {output}, got: {solution(input())}\""
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == '3\\n1\\n2\\n\\n-1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n"
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 2 3\\n2 2 2\\n2\\n1 1 1\") == \"3\\n1 2 3\\n2\\n1 1 1\"\nassert solution(\"3\\n2 2 2\\n2 1\\n1 2\\n2\") == \"1\\n1 1 1\"\nassert solution(\"2\\n2 1\\n1 2\\n2\") == \"-1\\ndef solution(stdin: str) -> str: \\n    pass\""
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3, 1, 2, 3) == 3\nassert solution(3, 2, 2, 2) == 1\nassert solution(2, 2, 1, ) == -1"
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == expected, f\"Test {test_case} failed. Received {solution(stdin)}, expected {expected}\"\nfor test_case in range(1, 11):\n    expected = None\n    stdin = input()\n    solution(stdin)\n    print(f\"Test {test_case} passed\")"
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2 3\\n2 2 2\\n2\\n2 1\\n\") == \"3\\n1 2 3\\n1 2 3\\n1\\n2\\n\"\nassert solution(\"3\\n2 2 2\\n2 1\\n\") == \"2\\n1 1 1\\n\"\nassert solution(\"2\\n2 1\\n\") == \"-1\\ndef solution(stdin: str) -> str:pass\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 2 3\\n2\\n2 2 2\\n2\\n2 1\\n\") == \"3\\n1 2 3\\n1 2 3\\n2\\n1 1 1\\n2\\n1\\n\"\nassert solution(\"3\\n2 2 2\\n2\\n2 1\\n\") == \"1\\n1 1 1\\n2\\n1\\n\"\nassert solution(\"2\\n2 1\\n\") == \"-1\\ndef solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == expected, f\"Test {test_case} failed: expected output '{expected}', got '{solution(stdin)}'\"\ntest_case += 1"
    },
    {
        "number": 3895,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"3\\n1 2 3\\n1 2 3\\n\"\nassert solution(3) == \"3\\n1 2 3\\n1 2 3\\n\"\nassert solution(3) == \"3\\n1 2 3\\n1 2 3\\n\"\nassert solution(2) == \"1\\n1 1 1\\n2\\n\"\nassert solution(2) == \"1\\n1 1 1\\n2\\n\"\nassert solution(2) == \"1\\n1 1 1\\n2\\n\""
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(11) == 6, \"Test failed\"\nassert solution(01) == 2, \"Test failed\"\nassert solution(1) == 1, \"Test failed\""
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('11') == '6', 'Test 1'\nassert solution('01') == '2', 'Test 2'\nassert solution('1') == '1', 'Test 3'"
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('11') == '6', 'Test 1'\nassert solution('01') == '2', 'Test 2'\nassert solution('1') == '1', 'Test 3'"
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"11\") == \"6\"\nassert solution(\"01\") == \"2\"\nassert solution(\"1\") == \"1\""
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"11\") == \"6\"\nassert solution(\"01\") == \"2\"\nassert solution(\"1\") == \"1\""
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"11\") == \"6\"\nassert solution(\"01\") == \"2\"\nassert solution(\"1\") == \"1\""
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"11\") == 6\nassert solution(\"01\") == 2\nassert solution(\"1\") == 1"
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(11) == 6\nassert solution(01) == 2\nassert solution(1) == 1"
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"11\") == \"6\"\nassert solution(\"01\") == \"2\"\nassert solution(\"1\") == \"1\""
    },
    {
        "number": 3896,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(11) == 6\nassert solution(01) == 2\nassert solution(1) == 1"
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '1\\n'"
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n    pass\""
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n15\\n\") == \"1\\n\"\nassert solution(\"3\\n1 1 2\\n\") == \"3\\n\"\nassert solution(\"2\\n5 7\\n\") == \"4\\n\""
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n15\") == \"1\"\nassert solution(\"3\\n1 1 2\") == \"3\"\nassert solution(\"2\\n5 7\") == \"4\""
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for input {input()}, expected output {expected_output}.\"\n"
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('Input\\n1\\n15\\n') == '1\\n'\nassert solution('Input\\n3\\n1 1 2\\n') == '3\\n'\nassert solution('Input\\n2\\n5 7\\n') == '4\\n'"
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1\\n15') == '1\\n'\nassert solution('3\\n1 1 2') == '3\\n'\nassert solution('2\\n5 7') == '4\\n'"
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1\\n15') == '1\\n'\nassert solution('3\\n1 1 2') == '3\\n'\nassert solution('2\\n5 7') == '4\\n'\n\nfor _ in range(input()):\n    n = int(input())\n    a = list(map(int, input().split()))\n    if n == 1:\n        print(1)\n    else:\n        count = 0\n        for i in range(1, n+1):\n            factor = 1\n            for j in range(1, i+1):\n                factor *= j\n            count += factor\n        print(count % (10**9 + 7))"
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1\\n15\\n') == '1\\n'\nassert solution('3\\n1 1 2\\n') == '3\\n'\nassert solution('2\\n5 7\\n') == '4\\n'"
    },
    {
        "number": 3897,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n15\\n\") == \"1\\n\"\nassert solution(\"3\\n1 1 2\\n\") == \"3\\n\"\nassert solution(\"2\\n5 7\\n\") == \"4\\n\""
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') == 'YES\\n'\nassert solution('Input') =="
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 0 2\\n2 0 1\\n\\n2\\n1 0\\n0 1\\n\") == \"YES\"\nassert solution(\"2\\n1 0\\n0 1\\n\") == \"YES\"\nassert solution(\"4\\n1 2 3 0\\n0 3 2 1\\n\") == \"NO\""
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\""
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"YES\\n\""
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 0 2\\n2 0 1\\n\") == \"YES\"\nassert solution(\"2\\n1 0\\n0 1\\n\") == \"YES\"\nassert solution(\"4\\n1 2 3 0\\n0 3 2 1\\n\") == \"NO\""
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 0 2\\n2 0 1\\n4\\n1 2 3 0\\n0 3 2 1\\n\") == \"YES\"\nassert solution(\"2\\n1 0\\n0 1\\n\") == \"YES\"\nassert solution(\"4\\n1 2 3 0\\n0 3 2 1\\n\") == \"NO\"\nassert solution(\"3\\n1 0 2\\n2 0 1\\n1 2 0 3\\n\") == \"YES\""
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 0 2\\n2 0 1\\n\") == \"YES\\n\"\nassert solution(\"2\\n1 0\\n0 1\\n\") == \"YES\\n\"\nassert solution(\"4\\n1 2 3 0\\n0 3 2 1\\n\") == \"NO\\n\""
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Input\\n3\\n1 0 2\\n2 0 1\\n\\nInput\\n2\\n1 0\\n0 1\\n\\nInput\\n4\\n1 2 3 0\\n0 3 2 1\\n\") == \"YES\\nYES\\nNO\\n\""
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 0 2\\n2 0 1\\n\") == \"YES\"\nassert solution(\"2\\n1 0\\n0 1\\n\") == \"YES\"\nassert solution(\"4\\n1 2 3 0\\n0 3 2 1\\n\") == \"NO\""
    },
    {
        "number": 3898,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 0 2\\n2 0 1\\n\") == \"YES\\n\"\nassert solution(\"2\\n1 0\\n0 1\\n\") == \"YES\\n\"\nassert solution(\"4\\n1 2 3 0\\n0 3 2 1\\n\") == \"NO\\n\""
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 1160, \"Your solution is incorrect.\""
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(6) == \"9000\", \"Test 1\"\nassert solution(6) == \"9000\", \"Test 2\"\nassert solution(6) == \"9000\", \"Test 3\"\nassert solution(6) == \"1160\", \"Test 4\"\nassert solution(6) == \"1160\", \"Test 5\""
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"9000\", \"Output should be 9000, but is \" + solution(stdin)"
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6\\n8 10 9 9 8 10\\n1 1 1 1 1 1\\n\") == \"9000\"\nassert solution(\"6\\n8 10 9 9 8 10\\n1 10 5 5 1 10\\n\") == \"1160\"\n\nprint(\"All tests passed.\")"
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n8 10 9 9 8 10\\n1 1 1 1 1 1\\n\") == \"9000\\n\"\nassert solution(\"6\\n8 10 9 9 8 10\\n1 10 5 5 1 10\\n\") == \"1160\\n\""
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n8 10 9 9 8 10\\n1 1 1 1 1 1\") == \"9000\"\nassert solution(\"6\\n8 10 9 9 8 10\\n1 10 5 5 1 10\") == \"1160\""
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 9000\nassert solution == 1160\nassert solution == 9000\nassert solution == 1160\nassert solution == 9000\nassert solution == 1160\nassert solution == 9000\nassert solution == 1160\nassert solution == 9000\nassert solution == 1160\nassert solution == 9000\nassert solution == 1160\nassert solution == 9000\nassert solution == 1160\nassert solution == 9000\nassert solution == 1160\nassert solution == 9000\nassert solution == 1160\nassert solution == 9000\nassert solution == 1160\nassert solution == 9000\nassert solution == 1160\nassert solution == 9000\nassert solution == 1160\nassert solution == 9000\nassert solution == 1160\nassert solution == 9000\nassert solution == 1160\nassert solution == 9000\nassert solution == 1160\nassert solution == 9000\nassert solution == 1160\nassert solution == 9000\nassert solution == 1160\nassert solution == 9000\nassert solution == 1160\nassert solution == 9000\nassert solution == 1160\nassert solution == 9000\nassert solution == 1160\nassert solution == 9000\nassert solution == 1160\nassert solution == 9000\nassert solution == 1160\nassert solution == 9000\nassert solution == 1160\nassert solution == 9000\nassert solution == 1160\nassert solution == 9000\nassert solution == 1160\nassert solution == 9000\nassert solution == 1160\nassert solution == 9000\nassert solution == 1160\nassert solution == 9000\nassert solution == 1160\nassert solution == 9000\nassert solution == 1160\nassert solution == 9000\nassert solution == 1160\nassert solution == 9000\nassert solution == 1160\nassert solution == 9000\nassert solution == 1160\nassert solution == 9000\nassert solution == 1160\nassert solution == 9000\nassert solution == 1160\nassert solution == 9000\nassert solution == 1160\nassert solution == 9000\nassert solution == 1160\nassert solution == 9000\nassert solution == 1160\nassert solution == 9000\nassert solution == 1160\nassert solution == 9000\nassert solution == 1160\nassert solution == 9000\nassert solution == 1160\nassert solution == 9000\nassert solution == 1160\nassert solution == 9000\nassert solution == 1160\nassert solution == 9000\nassert solution == 1160\nassert solution == 9000\nassert solution == 1160\nassert solution == 9000\nassert solution == 1160\nassert solution == 9000\nassert solution == 1160\nassert solution == 9000\nassert solution == 1160\nassert solution == 9000\nassert solution == 1160\nassert solution == 9000\nassert solution == 1160\nassert solution == 9000\nassert solution == 1160\nassert solution == 9000\nassert solution == 1160\nassert solution == 9000\nassert solution == 1160\nassert solution == 9000\nassert solution == 1160\nassert solution == 9000\nassert solution == 1160\nassert solution == 9000\nassert solution == 1160\nassert solution == 9000\nassert solution == 1160\nassert solution == 9000\nassert solution == 1160\n"
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('6\\n8 10 9 9 8 10\\n1 1 1 1 1 1\\n') == '9000\\n'\nassert solution('6\\n8 10 9 9 8 10\\n1 10 5 5 1 10\\n') == '1160\\n'"
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(None) == \"Error: Please provide input\\n\", \"Solution should return error message for invalid input\""
    },
    {
        "number": 3899,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n8 10 9 9 8 10\\n1 1 1 1 1 1\") == \"9000\"\nassert solution(\"6\\n8 10 9 9 8 10\\n1 10 5 5 1 10\") == \"1160\""
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 1\n"
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4 2\\n2 3\\n1 4\\n1 4\\n2 1\\n') == '6\\n'\nassert solution('8 6\\n5 6\\n5 7\\n5 8\\n6 2\\n2 1\\n7 3\\n1 3\\n1 4\\n') == '1\\n'"
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 2\\n2 3\\n1 4\\n1 4\\n2 1\\n') == 6\nassert solution('8 6\\n5 6\\n5 7\\n5 8\\n6 2\\n2 1\\n7 3\\n1 3\\n1 4\\n') == 1"
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == '6\\n'\nassert solution(stdin) == '1\\n'"
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n2 3\\n1 4\\n1 4\\n2 1\") == 6\nassert solution(\"8 6\\n5 6\\n5 7\\n5 8\\n6 2\\n2 1\\n7 3\\n1 3\\n1 4\") == 1"
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''\n4 2\n2 3\n1 4\n1 4\n2 1\n''') == 6\n\nassert solution('''\n8 6\n5 6\n5 7\n5 8\n6 2\n2 1\n7 3\n1 3\n1 4\n''') == 1"
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"6\\n\"\nassert solution(input()) == \"1\\n\""
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n2 3\\n1 4\\n1 4\\n2 1\") == 6\nassert solution(\"8 6\\n5 6\\n5 7\\n5 8\\n6 2\\n2 1\\n7 3\\n1 3\\n1 4\") == 1"
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"6\\n\""
    },
    {
        "number": 3900,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(example_input) == example_output, \"Incorrect output for example\""
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n2 2 3 4 6\") == \"5\\n\"\nassert solution(\"4\\n2 4 6 8\") == \"-1\\n\"\nassert solution(\"3\\n2 6 9\") == \"4\\n\""
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n2 2 3 4 6\\n\\n4\\n2 4 6 8\\n\\n3\\n2 6 9\\n\\n\") == \"5\\n\"\nassert solution(\"4\\n2 4 6 8\\n\\n3\\n2 6 9\\n\\n\") == \"-1\\n\"\nassert solution(\"3\\n2 6 9\\n\\n\") == \"4\\n\""
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2 2 3 4 6\\n4\\n2 4 6 8\\n3\\n2 6 9\\n\") == \"-1\\n\"\n\nassert solution(\"4\\n2 4 6 8\\n3\\n2 6 9\\n\") == \"4\\n\"\n\nassert solution(\"3\\n2 6 9\\n\") == \"4\\n\""
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n2 2 3 4 6\") == \"5\\n\"\nassert solution(\"4\\n2 4 6 8\") == \"-1\\n\"\nassert solution(\"3\\n2 6 9\") == \"4\\n\"\n\nprint(\"All tests passed\")"
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n2 2 3 4 6\\n\") == \"5\\n\"\nassert solution(\"4\\n2 4 6 8\\n\") == \"-1\\n\"\nassert solution(\"3\\n2 6 9\\n\") == \"4\\n\""
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n2 2 3 4 6\\n\") == \"5\\n\"\nassert solution(\"4\\n2 4 6 8\\n\") == \"-1\\n\"\nassert solution(\"3\\n2 6 9\\n\") == \"4\\n\""
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n2 2 3 4 6\\n\\n4\\n2 4 6 8\\n\\n3\\n2 6 9\\n\") == \"-1\\n\"\nassert solution(\"4\\n2 4 6 8\\n\\n3\\n2 6 9\\n\") == \"4\\n\"\nassert solution(\"3\\n2 6 9\\n\\n2\\n1 1 1 1 1\\n\") == \"-1\\n\""
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n2 2 3 4 6') == '5\\n'\nassert solution('4\\n2 4 6 8') == '-1\\n'\nassert solution('3\\n2 6 9') == '4\\n'"
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2 2 3 4 6\") == \"5\"\nassert solution(\"4\\n2 4 6 8\") == \"-1\"\nassert solution(\"3\\n2 6 9\") == \"4\""
    },
    {
        "number": 3901,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Error: Please provide the correct input and output\""
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abacabaca\") == \"3\\naca\\nba\\nca\"\nassert solution(\"abaca\") == \"0\""
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abacabaca\") == \"3\\naca\\nba\\nca\"\nassert solution(\"abaca\") == \"0\""
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"abacabaca\") == \"3\\naca\\nba\\nca\"\nassert solution(stdin=\"abaca\") == \"0\""
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"abacabaca\") == \"3\\naca\\nba\\nca\"\nassert solution(\"abaca\") == \"0\""
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abacabaca\") == \"aca\\nba\\nca\\n\"\nassert solution(\"abaca\") == \"0\""
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == '3\\naca\\nba\\nc', 'First-rate specialists graduate from Berland State Institute of Peace and Friendship. You are one of the most talented students in this university. The education is not easy because you need to have fundamental knowledge in different areas, which sometimes are not related to each other. \n\nFor example, you should know linguistics very well. You learn a structure of Reberland language as foreign language. In this language words are constructed according to the following rules. First you need to choose the \"root\" of the word \u2014 some string which has more than 4 letters. Then several strings with the length 2 or 3 symbols are appended to this word. The only restriction \u2014  it is not allowed to append the same string twice in a row. All these strings are considered to be suffixes of the word (this time we use word \"suffix\" to describe a morpheme but not the few last characters of the string as you may used to).\n\nHere is one exercise that you have found in your task list. You are given the word s. Find all distinct strings with the length 2 or 3, which can be suffixes of this word according to the word constructing rules in Reberland language.\n\nTwo strings are considered distinct if they have different length or there is a position in which corresponding characters do not match. \n\nLet's look at the example: the word abacabaca is given. This word can be obtained in the following ways: [Image], where the root of the word is overlined, and suffixes are marked by \"corners\". Thus, the set of possible suffixes for this word is {aca, ba, ca}. \n\n-----Input-----\n\nThe only line contains a string s (5 \u2264 |s| \u2264 10^4) consisting of lowercase English letters.\n\n-----Output-----\n\nOn the first line print integer k \u2014 a number of distinct possible suffixes. On the next k lines print suffixes. \n\nPrint suffixes in lexicographical (alphabetical) order. \n\n-----Examples-----\nInput\nabacabaca\n\nOutput\n3\naca\nba\nca\n\nInput\nabaca\n\nOutput\n0\n\n-----Note-----\n\nThe first test was analysed in the problem statement. \n\nIn the second example the length of the string equals 5. The length of the root equals 5, so no string can be used as a suffix.\n"
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abacabaca\") == \"3\\naca\\nba\\nca\"\nassert solution(\"abaca\") == \"0\""
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abacabaca\") == \"3\\naca\\nba\\nca\"\nassert solution(\"abaca\") == \"0\"\n"
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"abacabaca\") == \"3\\naca\\nba\\nca\"\nassert solution(\"abaca\") == \"0\""
    },
    {
        "number": 3902,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abacabaca\") == \"3\\naca\\nba\\nca\"\nassert solution(\"abaca\") == \"0\"\n\nprint(\"3\")"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('Input\\n4 5\\n11..2\\n#..22\\n#.323\\n.#333\\nOutput\\n2\\nInput\\n1 5\\n1#2#3\\n\\nOutput\\n-1\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Output: {}\\n# The correctness of the solution is not guaranteed.\\n\\n# Expected output: 2'.replace('\\n', '\\n# ')) == '2'"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, \"Test failed\""
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\") == 0, \"There is no solution for an empty map.\"\nassert solution(\"1 1\") == 1, \"There is no solution for a map with only one cell.\"\nassert solution(\"4 5\") == 2, \"There is no solution for a map with more than one cell.\""
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5\\n11..2\\n#..22\\n#.323\\n.#333\\n\") == \"2\\n\"\nassert solution(\"1 5\\n1#2#3\\n\") == \"-1\\n\""
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 5\\n11..2\\n#..22\\n#.323\\n.#333\\nOutput\\n2\\nInput\\n1 5\\n1#2#3') == 2\nassert solution('1 5\\n1#2#3') == -1"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1 5\\n1#2#3') == '2'\nassert solution('4 5\\n11..2\\n#..22\\n#.323\\n.#333') == '2'\nassert solution('1 5\\n1#2#3\\n1#2#3') == '-1'\nassert solution('1 5\\n11#2#3\\n#..22\\n#.323\\n.#333') == '2'\nassert solution('4 5\\n11..2\\n#..22\\n#.323\\n.#333\\n11#2#3\\n#..22\\n#.323\\n.#333') == '2'\nassert solution('4 5\\n11..2\\n#..22\\n#.323\\n.#333\\n11#2#3\\n#..22\\n#.323\\n.#333\\n11#2#3') == '-1'"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 'Output'"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, \"Test failed\""
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 5\\n11..2\\n#..22\\n#.323\\n.#333\\n') == 2\nassert solution('1 5\\n1#2#3\\n') == -1\n"
    },
    {
        "number": 3903,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 2\n"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"8)\\n(())()\\n(()()))\\n\" == \"6\"\nassert solution(\"3)\\n(())\\n(())\\n\" == \"-1\""
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"8\") == \"6\"\nassert solution(\"3\") == \"-1\"\nassert solution(\"1\") == \"0\"\nassert solution(\"5\") == \"4\"\nassert solution(\"10\") == \"18\"\nassert solution(\"9\") == \"6\"\nassert solution(\"0\") == \"0\""
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"8\"))((())(\nprint(6)\n\nassert solution(\"3\"))(()\nprint(-1)"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"8\\n())((())(\") == 6\nassert solution(\"3\\n(()\") == -1"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"8\\n))((())(\") == 6\nassert solution(\"3\\n(()\") == -1"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('8\\n))((()\\n') == 6\nassert solution('3\\n(()\\n') == -1"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(8) == '6'\nassert solution(3) == '-1'"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"8\n))((())(\"\"\") == 6\nassert solution(\"\"\"3\n(()\"\"\") == -1"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('8') == '6'\nassert solution('3') == '-1'"
    },
    {
        "number": 3904,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"6\\n\", \"Output: {}\\nInput: {}\".format(solution(stdin), stdin)"
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input) == output, f\"Expected: {output}\\nGot: {solution(input)}\""
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 3 5\\n4 4 0\\n1 3\\n3 2\\n3 1\\n') == '1\\n3 \\n'\nassert solution('4 5 4\\n2 1 0 3\\n4 3\\n3 2\\n1 2\\n1 4\\n1 3\\n') == '4\\n1 2 3 4 \\n'"
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3 5\\n4 4 0\\n1 3\\n3 2\\n3 1\") == \"1\"\nassert solution(\"4 5 4\\n2 1 0 3\\n4 3\\n3 2\\n1 2\\n1 4\\n1 3\") == \"4\""
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 3 5\\n4 4 0\\n1 3\\n3 2\\n3 1\\n\") == \"1\\n3 2\\n3 1\\n\"\nassert solution(\"4 5 4\\n2 1 0 3\\n4 3\\n3 2\\n1 2\\n1 4\\n1 3\\n\") == \"4\\n1 2 3 4 \\n\""
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output"
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '1\\n3 1'"
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(str(3, 3, 5)) == \"1\"\nassert solution(str(4, 4, 0)) == \"1\"\nassert solution(str(1, 3)) == \"3 1\"\nassert solution(str(3, 2)) == \"3 2\"\nassert solution(str(3, 1)) == \"3 1\"\nassert solution(str(4, 5, 4)) == \"4\"\nassert solution(str(2, 1, 0, 3)) == \"1 2\"\nassert solution(str(4, 3)) == \"1 2 3 4\"\nassert solution(str(1, 2, 3, 4)) == \"4\""
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 3 5\\n4 4 0\\n1 3\\n3 2\\n3 1\\n') == '1'\nassert solution('4 5 4\\n2 1 0 3\\n4 3\\n3 2\\n1 2\\n1 4\\n1 3\\n') == '4'\nassert solution('3 3 1\\n2 1\\n3 1\\n1 2\\n1 1\\n') == '3'"
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 3 5\\n4 4 0\\n1 3\\n3 2\\n3 1\") == \"1\\n3 2\\n3 1\"\nassert solution(\"4 5 4\\n2 1 0 3\\n4 3\\n3 2\\n1 2\\n1 4\\n1 3\") == \"4\\n1 2 3 4\""
    },
    {
        "number": 3905,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 3 5\\n4 4 0\\n1 3\\n3 2\\n3 1\\n\") == \"1\\n3 1\\n\"\n\nassert solution(\"4 5 4\\n2 1 0 3\\n4 3\\n3 2\\n1 2\\n1 4\\n1 3\\n\") == \"4\\n1 2 3 4\\n\""
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2 3') == '8'"
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Output\\n8\\n\"\n"
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == \"8\" # correct"
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"8\\n\"\n"
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"8\\n\"\n"
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == \"8\", \"Solution should return the expected output.\""
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n\") == \"8\\n\""
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == \"8\\n\""
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 8\n"
    },
    {
        "number": 3906,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(b'2 3\\n') == '8\\n'"
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 2\\n1 2\\n2 3\\n\") == \"5\\n\"\nassert solution(\"100 3\\n1 2\\n2 1\\n3 1\\n\") == \"4\\n\"\nassert solution(\"1 2\\n1 1\\n2 100\\n\") == \"100\\n\""
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"def solution(stdin: str) -> str:\\n\\tpass\\n\\n\\ndef main():\\n\\tstdin = input()\\n\\tstdin = stdin.strip()\\n\\tinput_array = list(map(int, stdin.split()))\\n\\n\\tbeautiful_array = []\\n\\tfor i in range(len(input_array)):\\n\\t\\tfor j in range(i+1, len(input_array)):\\n\\t\\t\\tif j == i + 1 or input_array[j] + 1 == input_array[i] or input_array[j] == input_array[i]:\\n\\t\\t\\t\\tbeautiful_array.append(input_array[i])\\n\\n\\tprint(max(beautiful_array))\\n\\n\\tprint(max(beautiful_array) * 2)\\n\\n\\tprint(max(beautiful_array) * 3)\\n\\n\\tprint(max(beautiful_array) * 4)\\n\\n\\tprint(max(beautiful_array) * 5)\\n\\n\\tprint(max(beautiful_array) * 6)\\n\\n\\tprint(max(beautiful_array) * 7)\\n\\n\\tprint(max(beautiful_array) * 8)\\n\\n\\tprint(max(beautiful_array) * 9)\\n\\n\\tprint(max(beautiful_array) * 10)\\n\\n\\tprint(max(beautiful_array) * 11)\\n\\n\\tprint(max(beautiful_array) * 12)\\n\\n\\tprint(max(beautiful_array) * 13)\\n\\n\\tprint(max(beautiful_array) * 14)\\n\\n\\tprint(max(beautiful_array) * 15)\\n\\n\\tprint(max(beautiful_array) * 16)\\n\\n\\tprint(max(beautiful_array) * 17)\\n\\n\\tprint(max(beautiful_array) * 18)\\n\\n\\tprint(max(beautiful_array) * 19)\\n\\n\\tprint(max(beautiful_array) * 20)\\n\\n\\tprint(max(beautiful_array) * 21)\\n\\n\\tprint(max(beautiful_array) * 22)\\n\\n\\tprint(max(beautiful_array) * 23)\\n\\n\\tprint(max(beautiful_array) * 24)\\n\\n\\tprint(max(beautiful_array) * 25)\\n\\n\\tprint(max(beautiful_array) * 26)\\n\\n\\tprint(max(beautiful_array) * 27)\\n\\n\\tprint(max(beautiful_array) * 28)\\n\\n\\tprint(max(beautiful_array) * 29)\\n\\n\\tprint(max(beautiful_array) * 30)\\n\\n\\tprint(max(beautiful_array) * 31)\\n\\n\\tprint(max(beautiful_array) * 32)\\n\\n\\tprint(max(beautiful_array) * 33)\\n\\n\\tprint(max(beautiful_array) * 34)\\n\\n\\tprint(max(beautiful_array) * 35)\\n\\n\\tprint(max(beautiful_array) * 36)\\n\\n\\tprint(max(beautiful_array) * 37)\\n\\n\\tprint(max(beautiful_array) * 38)\\n\\n\\tprint(max(beautiful_array) * 39)\\n\\n\\tprint(max(beautiful_array) * 40)\\n\\n\\tprint(max(beautiful_array) * 41)\\n\\n\\tprint(max(beautiful_array) * 42)\\n\\n\\tprint(max(beautiful_array) * 43)\\n\\n\\tprint(max(beautiful_array) * 44)\\n\\n\\tprint(max(beautiful_array) * 45)\\n\\n\\tprint"
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 'Output: 4\\n'\nassert solution() == 'Output: 100\\n'"
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 2\\n1 2\\n2 3\\n\") == \"5\\n\"\nassert solution(\"100 3\\n1 2\\n2 1\\n3 1\\n\") == \"4\\n\"\nassert solution(\"1 2\\n1 1\\n2 100\\n\") == \"100\\n\""
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 2\\n1 2\\n2 3\\n\") == \"5\"\nassert solution(\"100 3\\n1 2\\n2 1\\n3 1\\n\") == \"4\"\nassert solution(\"1 2\\n1 1\\n2 100\\n\") == \"100\"\n"
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Test case {index + 1} failed.\" for index, (input_, expected_output) in enumerate(zip(stdin.strip().split('\\n'), expected_output.split('\\n'))):\n    input_, expected_output = input_.split(), expected_output.split()\n    actual_output = solution(input_)\n    assert actual_output == expected_output, f\"Test case {index + 1} failed.\""
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 2\\n1 2\\n2 3\\n\") == \"5\\n\"\nassert solution(\"100 3\\n1 2\\n2 1\\n3 1\\n\") == \"4\\n\"\nassert solution(\"1 2\\n1 1\\n2 100\\n\") == \"100\\n\""
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == \"def solution(stdin: str) -> str: \\n\\tpass\\n\\n\"\n"
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 2\\n1 2\\n2 3\\n\") == \"5\\n\"\nassert solution(\"100 3\\n1 2\\n2 1\\n3 1\\n\") == \"4\\n\"\nassert solution(\"1 2\\n1 1\\n2 100\\n\") == \"100\\n\""
    },
    {
        "number": 3907,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 2\\n2 3\\n\") == \"5\\n\"\nassert solution(\"1 2\\n2 1\\n3 1\\n\") == \"4\\n\"\nassert solution(\"1 2\\n1 1\\n2 100\\n\") == \"100\\n\"\n\nfor i in range(1, 2):\n    for j in range(1, i+1):\n        for k in range(1, i+1):\n            if a[j-1]!= a[j] or a[j] + 1!= a[j+1] or a[j]!= a[j-1] + 1:\n                print(\"0\")\n                return\n\nprint(\"100\")"
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"aaabb\") == \"6\", \"The number of occurrences of the secret message should be 6.\"\nassert solution(\"usaco\") == \"1\", \"The number of occurrences of the secret message should be 1.\"\nassert solution(\"lol\") == \"2\", \"The number of occurrences of the secret message should be 2.\""
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"aaabb\") == \"6\", \"Input: aaabb\\nOutput: 6\\n\\nExpected: 6\"\nassert solution(\"usaco\") == \"1\", \"Input: usaco\\nOutput: 1\\n\\nExpected: 1\"\nassert solution(\"lol\") == \"2\", \"Input: lol\\nOutput: 2\\n\\nExpected: 2\""
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('aaabb') == '6', 'aaabb'\nassert solution('usaco') == '1', 'usaco'\nassert solution('lol') == '2', 'lol'"
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('aaabb') == '6'\nassert solution('usaco') == '1'\nassert solution('lol') == '2'"
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('aaabb') == '6', \"Expected '6', got '{}'\".format(solution('aaabb'))\nassert solution('usaco') == '1', \"Expected '1', got '{}'\".format(solution('usaco'))\nassert solution('lol') == '2', \"Expected '2', got '{}'\".format(solution('lol'))"
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"aaabb\") == \"6\"\nassert solution(\"usaco\") == \"1\"\nassert solution(\"lol\") == \"2\""
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"aaabb\") == \"6\"\nassert solution(\"usaco\") == \"1\"\nassert solution(\"lol\") == \"2\""
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('aaabb') == '6', 'The expected output is 6, but it is {}'.format(solution('aaabb'))\nassert solution('usaco') == '1', 'The expected output is 1, but it is {}'.format(solution('usaco'))\nassert solution('lol') == '2', 'The expected output is 2, but it is {}'.format(solution('lol'))"
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aaabb\") == \"6\"\nassert solution(\"usaco\") == \"1\"\nassert solution(\"lol\") == \"2\""
    },
    {
        "number": 3908,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"aaabb\") == \"6\", \"Input 1 failed.\"\nassert solution(\"usaco\") == \"1\", \"Input 2 failed.\"\nassert solution(\"lol\") == \"2\", \"Input 3 failed.\""
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test case {test_case_number} failed: Solution returned {solution(input())}, expected {expected_output}\"\n\ntest_case_number = 1\nexpected_output = 1\nsolution(input())"
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(1) == \"1\"\nassert solution(4) == \"2\""
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n\") == \"1\\n\"\nassert solution(\"4\\n\") == \"2\\n\""
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(1) == \"1\\n\"\nassert solution(4) == \"2\\n\""
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"2\""
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Input {input()}, Output {output()}\""
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n\") == \"1\\n\"\nassert solution(\"4\\n\") == \"2\\n\""
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\\n\") == \"1\\n\"\nassert solution(\"4\\n\") == \"2\\n\""
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"2\""
    },
    {
        "number": 3909,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"Test failed for input '{input()}', expected output '{output()}'.\""
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Expected output: {expected_output}, Received output: {solution(input())}\"\n"
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1\\n4\\n2\\n5\\n3\\n6') == '1 2\\n2 1\\n1 2\\n1 2'\nprint('All tests passed!')"
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution == \"1 2\\n2 1\\n1 2\""
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n1 4\\n2 5\\n3 6') == '1 2\\n2 1\\n1 2\\n'\n"
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 4\\n2 5\\n3 6\") == \"1 2\\n2 1\\n1 2\\n\""
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == '1 2'\nassert solution(2) == '2 1'\nassert solution(1) == '-1'"
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == '1 2\\n2 1\\n1 2\\n', \"The solution is incorrect.\"\n"
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == '1 2'\nassert solution() == '2 1'\nassert solution() == '-1'"
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n1 4\\n2 5\\n3 6\\n') == '1 2\\n2 1\\n1 2'"
    },
    {
        "number": 3910,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n1 4\\n2 5\\n3 6') == '1 2\\n2 1\\n1 2\\n'\n"
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\\n\", \"1\"\nassert solution(\"2\") == \"2\\n\", \"2\"\nassert solution(\"3\") == \"2 1\\n\", \"2 1\"\nassert solution(\"8\") == \"4\\n\", \"4\""
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(3) == \"2 1\"\nassert solution(5) == \"4\"\nassert solution(8) == \"4\"\nassert solution(1) == \"1\"\nassert solution(2) == \"2\"\nassert solution(4) == \"2 1\""
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1\\n\"\nassert solution(\"2\") == \"2\\n\"\nassert solution(\"3\") == \"2 1\\n\"\nassert solution(\"8\") == \"4\\n\"\n"
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2 1\"\nassert solution(\"8\") == \"4\""
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=\"1\\n\") == \"1\\n\"\nassert solution(stdin=\"2\\n\") == \"2\\n\"\nassert solution(stdin=\"3\\n\") == \"2 1\\n\"\nassert solution(stdin=\"8\\n\") == \"4\\n\""
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('1') == '1\\n', \"Test failed\"\nassert solution('2') == '2\\n', \"Test failed\"\nassert solution('3') == '2 1\\n', \"Test failed\"\nassert solution('8') == '4\\n', \"Test failed\""
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '2 1'\nassert solution('8') == '4'"
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\\n\"\nassert solution(\"2\") == \"2\\n\"\nassert solution(\"3\") == \"2 1\\n\"\nassert solution(\"8\") == \"4\\n\""
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == \"2 1\"\nassert solution(8) == \"4\""
    },
    {
        "number": 3911,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2 1\"\nassert solution(\"8\") == \"4\""
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('aabaac') == 'aba aca ', 'The output should be \"aba aca\"'\nassert solution('0rTrT022') == '02TrrT20 ', 'The output should be \"02TrrT20\"'\nassert solution('aA') == 'a A ', 'The output should be \"a A\"'"
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"aabaac\") == \"aba aca\", \"Test 1 failed\"\nassert solution(\"0rTrT022\") == \"02TrrT20\", \"Test 2 failed\"\nassert solution(\"aA\") == \"a A\", \"Test 3 failed\""
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('abaac') == ['aba', 'aca'], \"aba and aca should be palindromes\"\nassert solution('0rTrT022') == ['02TrrT20'], \"02TrrT20 should be a palindrome\"\nassert solution('aA') == ['a', 'A'], \"a and A should be palindromes\""
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r')) == '2\\naba aca\\n02TrrT20\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"aabaac\") == \"2\\naba aca\\n02TrrT20\"\\nassert solution(\"0rTrT022\") == \"1\\n02TrrT20\"\\nassert solution(\"aA\") == \"2\\na A\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"aabaac\") == \"2\\naba aca\\n02TrrT20\"\\nassert solution(\"0rTrT022\") == \"1\\n02TrrT20\"\\nassert solution(\"aA\") == \"2\\na A\"'"
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"abc\") == \"aba\"\nassert solution(\"0rTrT022\") == \"02TrrT20\"\nassert solution(\"aA\") == \"a A\"\n\nfrom typing import List"
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('aabaac') == ['aba aca']\nassert solution('0rTrT022') == ['02TrrT20']\nassert solution('aA') == ['a A']"
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('aabaac') == '2\\naba aca '\nassert solution('0rTrT022') == '1\\n02TrrT20 '\nassert solution('aA') == '2\\nA A'"
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"aabaac\") == \"aba aca\"\nassert solution(\"0rTrT022\") == \"02TrrT20\"\nassert solution(\"aA\") == \"a A\""
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0rTrT022\") == \"02TrrT20\"\nassert solution(\"aA\") == \"a A\""
    },
    {
        "number": 3912,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(6) == 'aba aca'\nassert solution(8) == '02TrrT20'\nassert solution(2) == 'a A'"
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == 2, \"Expected output: 2, got: {}\".format(solution())"
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\na**d\\n2\\abcd\\nacbd\\n') == '2\\n'\nassert solution('5\\nlo*er\\n2\\lover\\nloser\\n') == '0\\n'\nassert solution('3\\na*a\\n2\\aaa\\aba\\n') == '1\\n'"
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), f\"Test cases failed: {solution(input())}!= {output()}\""
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\na**d\\n2\\abcd\\nacbd\\n\") == \"2\", \"Expected output: 2\"\nassert solution(\"5\\nlo*er\\n2\\lover\\nloser\\n\") == \"0\", \"Expected output: 0\"\nassert solution(\"3\\na*a\\n2\\aaa\\aba\\n\") == \"1\", \"Expected output: 1\"\n"
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_data) == expected_output, f\"Incorrect output: got '{solution(input_data)}', expected '{expected_output}'\""
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), \"Test failed\""
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\na**d\\n2\\abcd\\nacbd\\n\") == \"2\\n\"\nassert solution(\"5\\nlo*er\\n2\\lover\\nloser\\n\") == \"0\\n\"\nassert solution(\"3\\na*a\\n2\\aaa\\aba\\n\") == \"1\\n\""
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('4\\na**d\\n2\\nabcd\\nacbd\\n') == '2'\nassert solution('5\\nlo*er\\n2\\lover\\nloser\\n') == '0'\nassert solution('3\\na*a\\n2\\aaa\\aba\\n') == '1'\n"
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\na**d\\n2\\abcd\\nacbd\\n\") == \"2\"\nassert solution(\"5\\nlo*er\\n2\\lover\\nloser\\n\") == \"0\"\nassert solution(\"3\\na*a\\n2\\aaa\\aba\\n\") == \"1\""
    },
    {
        "number": 3913,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\na**d\\n2\\abcd\\nacbd\\n\") == \"2\"\nassert solution(\"5\\nlo*er\\n2\\lover\\nloser\\n\") == \"0\"\nassert solution(\"3\\na*a\\n2\\aaa\\aba\\n\") == \"1\""
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 1 1\\n1 0 0 0 4\\n\") == \"1\\n\"\nassert solution(\"6 1 2\\n3 8 0 1 0 0\\n\") == \"2\\n\"\n"
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"1\\n\", \"Input not as expected.\""
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 1 1\\n1 0 0 0 4\") == \"1\\n\"\nassert solution(\"6 1 2\\n3 8 0 1 0 0\") == \"2\\n\""
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 1 1\\n1 0 0 0 4\\n\") == \"1\\n\"\nassert solution(\"6 1 2\\n3 8 0 1 0 0\\n\") == \"2\\n\""
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 1 1\\n1 0 0 0 4\\n\") == \"1\\n\"\nassert solution(\"6 1 2\\n3 8 0 1 0 0\\n\") == \"2\\n\""
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('5 1 1\\n1 0 0 0 4') == '1\\n'\nassert solution('6 1 2\\n3 8 0 1 0 0') == '2\\n'\n"
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 1 1\\n1 0 0 0 4\\n') == '1\\n'\nassert solution('6 1 2\\n3 8 0 1 0 0\\n') == '2\\n'"
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 1 1\\n1 0 0 0 4\\n\") == \"1\\n\"\nassert solution(\"6 1 2\\n3 8 0 1 0 0\\n\") == \"2\\n\"\nassert solution(\"100 1000 100000\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 "
    },
    {
        "number": 3914,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 'Output'"
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin=\"1 1\") == \"40\"\nassert solution(stdin=\"1 42\") == \"1\"\nassert solution(stdin=\"6 4\") == \"172\""
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"Palindromic tree is better than splay tree\"\n"
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(1, 1) == 40\nassert solution(1, 42) == 1\nassert solution(6, 4) == 172"
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1 1\\n\") == \"40\"\nassert solution(\"1 42\\n\") == \"1\"\nassert solution(\"6 4\\n\") == \"172\""
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(1, 1) == 40\nassert solution(1, 42) == 1\nassert solution(6, 4) == 172"
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"40\"\nassert solution(stdin) == \"1\"\nassert solution(stdin) == \"172\""
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"40\"\nassert solution(\"1 42\") == \"1\"\nassert solution(\"6 4\") == \"172\""
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"Palindromic tree is better than splay tree\""
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1 1') == '40'\nassert solution('1 42') == '1'\nassert solution('6 4') == '172'"
    },
    {
        "number": 3915,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(1, 1) == 40\nassert solution(1, 42) == 1\nassert solution(6, 4) == 172"
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2 1 4\\n4\\n3 1 4 4\\n4\\n3 1 4 1\\n5\\n3 1 4 1 5\\n\") == \"5\\n6\\n11\\n\"\nassert solution(\"4\\n3 1 4 4\\n4\\n3 1 4 1\\n4\\n3 1 4 1\\n5\\n3 1 4 1 5\\n\") == \"6\\n6\\n11\\n\"\nassert solution(\"4\\n3 1 4 4\\n4\\n3 1 4 1\\n4\\n3 1 4 1\\n5\\n3 1 4 1 5\\n\") == \"6\\n6\\n11\\n\""
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1 4\\n\" + \"4\\n\" + \"3 1 4 4\\n\" + \"4\\n\" + \"3 1 4 1\\n\" + \"5\\n\" + \"3 1 4 1 5\\n\") == \"5\\n\"\nassert solution(\"4\\n\" + \"3 1 4 4\\n\" + \"4\\n\" + \"3 1 4 1\\n\" + \"5\\n\" + \"3 1 4 1 5\\n\") == \"6\\n\"\nassert solution(\"4\\n\" + \"3 1 4 4\\n\" + \"4\\n\" + \"3 1 4 1\\n\" + \"5\\n\" + \"3 1 4 1 5\\n\") == \"6\\n\"\nassert solution(\"5\\n\" + \"3 1 4 1 5\\n\") == \"11\\n\""
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n3\n2 1 4\n''') == 5\n\nassert solution('''\n4\n3 1 4 4\n''') == 6\n\nassert solution('''\n4\n3 1 4 1\n''') == 6\n\nassert solution('''\n5\n3 1 4 1 5\n''') == 11"
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == \"5\"\nassert solution == \"6\"\nassert solution == \"11\""
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n2 1 4\") == 5\nassert solution(\"4\\n3 1 4 4\") == 6\nassert solution(\"4\\n3 1 4 1\") == 6\nassert solution(\"5\\n3 1 4 1 5\") == 11"
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n2 1 4\") == \"5\\n\"\nassert solution(\"4\\n3 1 4 4\") == \"6\\n\"\nassert solution(\"4\\n3 1 4 1\") == \"6\\n\"\nassert solution(\"5\\n3 1 4 1 5\") == \"11\\n\"\n"
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 5, \"Expected output: 5, but got: {}\".format(solution())"
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n2 1 4\") == 5\nassert solution(\"4\\n3 1 4 4\") == 6\nassert solution(\"4\\n3 1 4 1\") == 6\nassert solution(\"5\\n3 1 4 1 5\") == 11\n"
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n2 1 4\\n') == '5\\n'\nassert solution('4\\n3 1 4 4\\n') == '6\\n'\nassert solution('4\\n3 1 4 1\\n') == '6\\n'\nassert solution('5\\n3 1 4 1 5\\n') == '11\\n'"
    },
    {
        "number": 3916,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n2 1 4\\n\\n4\\n3 1 4 4\\n\\n4\\n3 1 4 1\\n\\n5\\n3 1 4 1 5') == '5'"
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\na 1 0 0 -1\\n\") == \"1\\n\"\nassert solution(\"2\\na -1\\n\") == \"2\\n\""
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('4\\n1 0 0 -1\\n2\\n1 -1\\n') == '1'"
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"1\""
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"1\\n\", \"Output: \" + solution(stdin) + \"\\n\\nInput: \" + stdin\n"
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 0 0 -1') == '1'\nassert solution('2 1 -1') == '2'"
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '1'\n"
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 0 0 -1\\n2\\n1 -1\\n\") == \"1\"\nassert solution(\"2\\n1 -1\\n\") == \"2\""
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"1\"\nprint(\"All tests passed successfully!\")"
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == 1, \"Output should be 1.\""
    },
    {
        "number": 3917,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1 0 0 -1\\n\") == \"1\\n\"\nassert solution(\"2\\n1 -1\\n\") == \"2\\n\""
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 0 0\\n1 2\\n2 3\\n\") == \"2\\n\"\nassert solution(\"2 1 0\\n1 2\\n2 2\\n\") == \"0\\n\"\nassert solution(\"2 5 7\\n3 4\\n14 4\\n\") == \"1\\n\""
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == \"\"\"\nimport math"
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 0 0\\n1 2\\n2 3\\n\") == \"2\\n\"\nassert solution(\"2 1 0\\n1 2\\n2 2\\n\") == \"0\\n\"\nassert solution(\"2 5 7\\n3 4\\n14 4\\n\") == \"1\\n\""
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 0 0\\n1 2\\n2 3\") == \"2\"\nassert solution(\"2 1 0\\n1 2\\n2 2\") == \"0\"\nassert solution(\"2 5 7\\n3 4\\n14 4\") == \"1\""
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 0 0\\n1 2\\n2 3\\n\") == \"2\\n\"\nassert solution(\"2 1 0\\n1 2\\n2 2\\n\") == \"0\\n\"\nassert solution(\"2 5 7\\n3 4\\n14 4\\n\") == \"1\\n\""
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"Output\\n2\"\n\nassert solution(input()) == \"Output\\n0\"\n\nassert solution(input()) == \"Output\\n1\""
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 0 0\\n1 2\\n2 3\\n\") == \"2\"\nassert solution(\"2 1 0\\n1 2\\n2 2\\n\") == \"0\"\nassert solution(\"2 5 7\\n3 4\\n14 4\\n\") == \"1\""
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 0 0\\n1 2\\n2 3\\n\") == \"2\"\nassert solution(\"2 1 0\\n1 2\\n2 2\\n\") == \"0\"\nassert solution(\"2 5 7\\n3 4\\n14 4\\n\") == \"1\"\n"
    },
    {
        "number": 3918,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 0 0\\n1 2\\n2 3\\n\") == \"2\\n\"\nassert solution(\"2 1 0\\n1 2\\n2 2\\n\") == \"0\\n\"\nassert solution(\"2 5 7\\n3 4\\n14 4\\n\") == \"1\\n\""
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\\n\") == \"6\""
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"6\\n\", \"Incorrect output\""
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\\n\"\n\nassert solution(\"5 3\\n01010\\n3 7\\n4 8\") == \"8\\n\"\n\nassert solution(\"5 4\\n01010\\n3 7\\n4 8\") == \"10\\n\"\n\nassert solution(\"5 5\\n01010\\n3 7\\n4 8\") == \"12\\n\"\n\nassert solution(\"5 6\\n01010\\n3 7\\n4 8\") == \"14\\n\"\n\nassert solution(\"5 7\\n01010\\n3 7\\n4 8\") == \"16\\n\""
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('5 2\\n01001\\n2 4\\n3 5') == '6'"
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5 2\\n01001\\n2 4\\n3 5\\n') == '6\\n'\nassert solution('5 2\\n01100\\n2 4\\n3 5\\n') == '12\\n'\nassert solution('5 2\\n01010\\n2 4\\n3 5\\n') == '16\\n'\nassert solution('5 2\\n00101\\n2 4\\n3 5\\n') == '3\\n'\nassert solution('5 2\\n01001\\n2 4\\n3 5\\n') == '6\\n'"
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\\n\"\n"
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\\n\") == \"6\"\nassert solution(\"10 3\\n10101\\n5 10\\n1 10\\n1 20\\n\") == \"10\"\nassert solution(\"5 2\\n01001\\n2 4\\n3 5\\n\") == \"6\"\n"
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\\n\") == \"6\\n\""
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('5 2\\n01001\\n2 4\\n3 5\\n') == '6\\n'\nassert solution('5 2\\n11111\\n2 4\\n3 5\\n') == '6\\n'\nassert solution('5 2\\n11111\\n2 4\\n3 5\\n') == '6\\n'\nassert solution('5 2\\n11111\\n2 4\\n3 5\\n') == '6\\n'\nassert solution('5 2\\n11111\\n2 4\\n3 5\\n') == '6\\n'\nassert solution('5 2\\n11111\\n2 4\\n3 5\\n') == '6\\n'\nassert solution('5 2\\n11111\\n2 4\\n3 5\\n') == '6\\n'\nassert solution('5 2\\n11111\\n2 4\\n3 5\\n') == '6\\n'"
    },
    {
        "number": 3919,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\") == \"6\\n\"\n"
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 1 1 1 1 1\") == \"6\"\nassert solution(\"1 2 1 2 1 2\") == \"13\""
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1 1 1 1 1\") == \"6\\n\", \"Input 1\"\nassert solution(\"1 2 1 2 1 2\") == \"13\\n\", \"Input 2\""
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1 1 1 1 1\") == 6\nassert solution(\"1 2 1 2 1 2\") == 13\nassert solution(\"5 5 5 5 5 5\") == 13\n\nprint(solution(\"10 20 10 20 10 20\"))"
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input_str) == expected_output, f\"Solution: {solution(input_str)}, Expected output: {expected_output}\""
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('1 1 1 1 1 1') == '6', 'Incorrect output'\nassert solution('1 2 1 2 1 2') == '13', 'Incorrect output'"
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1 1 1 1\") == 6\nassert solution(\"1 2 1 2 1 2\") == 13"
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1 1 1 1 1 1\") == \"6\"\nassert solution(\"1 2 1 2 1 2\") == \"13\"\n"
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1 1 1 1 1\") == 6, \"Gerald got a very curious hexagon for his birthday. The boy found out that all the angles of the hexagon are equal to $120^{\\circ}$. Then he measured the length of its sides, and found that each of them is equal to an integer number of centimeters. There the properties of the hexagon ended and Gerald decided to draw on it. He painted a few lines, parallel to the sides of the hexagon. The lines split the hexagon into regular triangles with sides of 1 centimeter. Now Gerald wonders how many triangles he has got. But there were so many of them that Gerald lost the track of his counting. Help the boy count the triangles.\"\n\nassert solution(\"1 2 1 2 1 2\") == 13, \"Gerald got a very curious hexagon for his birthday. The boy found out that all the angles of the hexagon are equal to $120^{\\circ}$. Then he measured the length of its sides, and found that each of them is equal to an integer number of centimeters. There the properties of the hexagon ended and Gerald decided to draw on it. He painted a few lines, parallel to the sides of the hexagon. The lines split the hexagon into regular triangles with sides of 1 centimeter. Now Gerald wonders how many triangles he has got. But there were so many of them that Gerald lost the track of his counting. Help the boy count the triangles.\""
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == 'Solution not provided', 'Solution provided incorrectly'"
    },
    {
        "number": 3920,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_str) == expected_output, f\"Testcase {i+1} failed: got {solution(input_str)}, expected {expected_output}\" for i, (input_str, expected_output) in enumerate(test_cases)"
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n2 3 4 6 9\") == \"4\"\nassert solution(\"9\\n1 2 3 5 6 7 8 9 10\") == \"4\""
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n2 3 4 6 9\") == \"4\\n\"\nassert solution(\"9\\n1 2 3 5 6 7 8 9 10\") == \"4\\n\""
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2 3 4 6 9\") == \"4\\n\"\nassert solution(\"9\\n1 2 3 5 6 7 8 9 10\") == \"4\\n\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"4\\n\""
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n2 3 4 6 9\") == \"4\"\nassert solution(\"9\\n1 2 3 5 6 7 8 9 10\") == \"4\""
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"Output\""
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n2 3 4 6 9\") == \"4\\n\"\nassert solution(\"9\\n1 2 3 5 6 7 8 9 10\") == \"4\\n\""
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2 3 4 6 9\") == \"4\\n\"\nassert solution(\"9\\n1 2 3 5 6 7 8 9 10\") == \"4\\n\""
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2 3 4 6 9\") == \"4\\n\"\nassert solution(\"9\\n1 2 3 5 6 7 8 9 10\") == \"4\\n\""
    },
    {
        "number": 3921,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5\\n2 3 4 6 9\\n') == '4\\n'\nassert solution('9\\n1 2 3 5 6 7 8 9 10\\n') == '4\\n'"
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"SURGERY COMPLETE\\n\"\n"
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n\") == \"SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED\\n\"\nassert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n\") == \"SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED\\n\"\nassert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n\") == \"SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED\\n\"\nassert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n\") == \"SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED\\n\"\nassert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 3"
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED\"\nassert solution(\"3\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED\"\nassert solution(\"1 2 3 E\\n8 9 10 E\\n11\") == \"SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED\"\nassert solution(\"1 2 3 E\\n8 9 10 E\\n11\") == \"SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED\"\nassert solution(\"1 2 3 E\\n8 9 10 E\\n11\") == \"SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED\""
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 'TODO'"
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"SURGERY COMPLETE\"\nassert solution(input()) == \"DONE\"\nassert solution(input()) == \"SURGERY FAILED\""
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input) == expected_output\n"
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\") == \"SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED\""
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n\") == \"SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED\\n\"\n\nassert solution(\"2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n\") == \"SURGERY COMPLETE\\nIR\\nR SrS\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED\\n\""
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output, \"The solution is incorrect.\""
    },
    {
        "number": 3922,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n2\n3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n\"\"\") == \"\"\"\nSURGERY COMPLETE\nIR\nR SrS\nS rr\nI lldll\nDONE\nSURGERY FAILED\n\"\"\""
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(9, 2, 5) == [6, 5, 8, 3, 4, 1, 9, 2, 7]\nassert solution(3, 2, 1) == [1, 2, 3]"
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"9 2 5\") == \"6 5 8 3 4 1 9 2 7\""
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"9 2 5\") == \"6 5 8 3 4 1 9 2 7\"\nassert solution(\"3 2 1\") == \"1 2 3\""
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3, 2, 1) == [1, 2, 3]\nassert solution(9, 2, 5) == [6, 5, 8, 3, 4, 1, 9, 2, 7]"
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(9, 2, 5) == \"6 5 8 3 4 1 9 2 7\"\nassert solution(3, 2, 1) == \"1 2 3\""
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(Input) == Output, \"Test Failed\"\nelse:\n    print(\"Test Passed\")"
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('9 2 5') == '-1'\nassert solution('3 2 1') == '1 2 3'\nassert solution('1 2 3') == '3 2 1'"
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2 1\") == \"1 2 3\"\nassert solution(\"9 2 5\") == \"6 5 8 3 4 1 9 2 7\"\nassert solution(\"1 2 3\") == \"1 2 3\"\nassert solution(\"1 2 3\") == -1"
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(1, 2, 5) == 6, \"Output should be 6, but is \" + str(solution(1, 2, 5))\nassert solution(3, 2, 1) == 1, \"Output should be 1, but is \" + str(solution(3, 2, 1))\n\nfor i in range(1, 101):\n    for j in range(i+1):\n        if solution(i, j, i) == i:\n            print(i, j)\n            break"
    },
    {
        "number": 3923,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"9 2 5\") == \"6 5 8 3 4 1 9 2 7\", \"Test 1 failed\"\nassert solution(\"3 2 1\") == \"1 2 3 \", \"Test 2 failed\"\nassert solution(\"7 2 1\") == \"-1\", \"Test 3 failed\""
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n3 2 1\\n\") == \"3\\n\"\nassert solution(\"5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000\\n\") == \"5000000000\\n\"\nassert solution(\"3 2\\n1 0 1\\n\") == \"2\\n\"\nassert solution(\"4 4\\n2 8 4 1\\n\") == \"4\\n\""
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\\n3 2 1\\n\") == \"3\"\nassert solution(\"5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000\\n\") == \"5000000000\"\nassert solution(\"3 2\\n1 0 1\\n\") == \"2\"\nassert solution(\"4 4\\n2 8 4 1\\n\") == \"4\""
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(3, 2) == 3\nassert solution(3, 2, 1) == 3\nassert solution(5, 1) == 5000000000\nassert solution(3, 2, 1, 0, 1) == 2\nassert solution(4, 4) == 4"
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2\\n3 2 1\") == 3\nassert solution(\"5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000\") == 5000000000\nassert solution(\"3 2\\n1 0 1\") == 2\nassert solution(\"4 4\\n2 8 4 1\") == 4"
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2\\n3 2 1\\n\") == \"3\\n\"\nassert solution(\"5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000\\n\") == \"5000000000\\n\"\nassert solution(\"3 2\\n1 0 1\\n\") == \"2\\n\"\nassert solution(\"4 4\\n2 8 4 1\\n\") == \"4\\n\""
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\\n3 2 1\\n\") == \"3\"\nassert solution(\"5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000\\n\") == \"5000000000\"\nassert solution(\"3 2\\n1 0 1\\n\") == \"2\"\nassert solution(\"4 4\\n2 8 4 1\\n\") == \"4\""
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\n3 2 1\\n\") == \"3\"\nassert solution(\"5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000\\n\") == \"5000000000\"\nassert solution(\"3 2\\n1 0 1\\n\") == \"2\"\nassert solution(\"4 4\\n2 8 4 1\\n\") == \"4\"\n"
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 2\\n3 2 1') == '3\\n'\nassert solution('5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000') == '5000000000\\n'\nassert solution('3 2\\n1 0 1') == '2\\n'\nassert solution('4 4\\n2 8 4 1') == '4\\n'"
    },
    {
        "number": 3924,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\\n3 2 1\\n\") == 3\nassert solution(\"5 1\\n1000000000 1000000000 1000000000 1000000000 1000000000\\n\") == 5000000000\nassert solution(\"3 2\\n1 0 1\\n\") == 2\nassert solution(\"4 4\\n2 8 4 1\\n\") == 4"
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"bwwwbwwbw\") == 5\nassert solution(\"bwwbwwb\") == 3"
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"bwwwbwwbw\") == \"5\", \"Expected: '5' Got: '{}'\"\nassert solution(\"bwwbwwb\") == \"3\", \"Expected: '3' Got: '{}'\""
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"bwwwbwwbw\") == \"5\"\nassert solution(\"bwwbwwb\") == \"3\""
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"bwwwbwwbw\") == 5\nassert solution(\"bwwbwwb\") == 3\n"
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"bwwwbwwbw\") == 5\nassert solution(\"bwwbwwb\") == 3\n\nfrom typing import List"
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"bwwwbwwbw\") == 5\nassert solution(\"bwwbwwb\") == 3\n\nfrom typing import List"
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"bwwwbwwbw\") == \"5\", \"Solution for the first example is not correct.\"\nassert solution(\"bwwbwwb\") == \"3\", \"Solution for the second example is not correct.\""
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"bwwwbwwbw\") == \"5\"\nassert solution(\"bwwbwwb\") == \"3\""
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"bwwwbwwbw\") == \"5\"\nassert solution(\"bwwbwwb\") == \"3\""
    },
    {
        "number": 3925,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(b\"bwwwbwwbw\") == \"5\"\nassert solution(b\"bwwbwwb\") == \"3\""
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 5\\n3 2\\n1 2\\n.....\\n.***. \\n...**\\n*....\\n\") == \"10\"\nassert solution(\"4 4\\n2 2\\n0 1\\n....\\n..*. \\n....\\n....\\n\") == \"7\""
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 5\\n3 2\\n1 2\\n.....\\n.***.\\n...**\\n*....\\n\") == 10\nassert solution(\"4 4\\n2 2\\n0 1\\n....\\n..*.\\n....\\n....\\n\") == 7"
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 10, \"Test 1 failed\"\nassert solution() == 7, \"Test 2 failed\""
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 5\\n3 2\\n1 2\\n.....\\n.***.\\n...**\\n*....\\n\") == \"10\"\nassert solution(\"4 4\\n2 2\\n0 1\\n....\\n..*.\\n....\\n....\\n\") == \"7\""
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('4 5\\n3 2\\n1 2\\n.....\\n.***.\\n...**\\n*....\\n') == '10\\n'\nassert solution('4 4\\n2 2\\n0 1\\n....\\n..*.\\n....\\n....\\n') == '7\\n'"
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 5\\n3 2\\n1 2\\n.....\\n.***.\\n...**\\n*....\\n\") == \"10\"\nassert solution(\"4 4\\n2 2\\n0 1\\n....\\n..*.\\n....\\n....\\n\") == \"7\""
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 5\\n3 2\\n1 2\\n....\\n.***.\\n...**\\n*....\\n\") == 10, \"Expected 10, got {}\".format(solution(\"4 5\\n3 2\\n1 2\\n....\\n.***.\\n...**\\n*....\\n\"))\nassert solution(\"4 4\\n2 2\\n0 1\\n....\\n..*.\\n....\\n....\\n\") == 7, \"Expected 7, got {}\".format(solution(\"4 4\\n2 2\\n0 1\\n....\\n..*.\\n....\\n....\\n\"))"
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 5\\n3 2\\n1 2\\n.....\\n.***. \\n...** \\n*.... \\n\") == \"10\"\nassert solution(\"4 4\\n2 2\\n0 1\\n....\\n..*. \\n.... \\n.... \\n\") == \"7\""
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Input\\n4 5\\n3 2\\n1 2\\n.....\\n.***. \\n...**\\n*....\\n\\nOutput\\n10\\n\\nInput\\n4 4\\n2 2\\n0 1\\n....\\n..*.\\n....\\n....\\n\\nOutput\\n7\") == 10\nassert solution(\"Input\\n4 5\\n3 2\\n1 2\\n.....\\n.***. \\n...**\\n*....\\n\\nOutput\\n10\\n\\nInput\\n4 4\\n2 2\\n0 1\\n....\\n..*.\\n....\\n....\\n\\nOutput\\n7\") == 7"
    },
    {
        "number": 3926,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == '10', \"The solution should return 10, but it returns {}\".format(solution(sample_input))\nassert solution(sample_input1) == '7', \"The solution should return 7, but it returns {}\".format(solution(sample_input1))"
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 4 2 2\\n\") == \"2\"\nassert solution(\"6\\n1 2 4 4 4 9\\n\") == \"2\""
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Solution mismatch: expected '{output()}' but got '{solution(input())}'\""
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 4 2 2\\n\") == \"2\"\nassert solution(\"6\\n1 2 4 4 4 9\\n\") == \"2\""
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 4 2 2\") == \"2\"\nassert solution(\"6\\n1 2 4 4 4 9\") == \"2\"\n"
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 4 2 2\\n\\n6\\n1 2 4 4 4 9\\n\") == \"2\"\nassert solution(\"6\\n1 2 4 4 4 9\\n\") == \"2\""
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 4 2 2\\n\") == \"2\\n\"\nassert solution(\"6\\n1 2 4 4 4 9\\n\") == \"2\\n\""
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(r'4\\n1 4 2 2\\n') == '2\\n'\nassert solution(r'6\\n1 2 4 4 4 9\\n') == '2\\n'"
    },
    {
        "number": 3927,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 4 2 2\\n\") == \"2\"\nassert solution(\"6\\n1 2 4 4 4 9\\n\") == \"2\""
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3 1\\naba\") == \"7\\n\"\nassert solution(\"4 1 1\\nabcd\") == \"4\\n\"\nassert solution(\"4 10 1\\naaaa\") == \"12\\n\""
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 3 1\\naba') == '7'\nassert solution('4 1 1\\nabcd') == '4'\nassert solution('4 10 1\\naaaa') == '12'"
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('aba') == '7'\nassert solution('abcd') == '4'\nassert solution('aaaa') == '12'"
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output(), f\"Expected {output()}, got {solution(input())}\""
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3 1\\naba\") == \"7\"\nassert solution(\"4 1 1\\nabcd\") == \"4\"\nassert solution(\"4 10 1\\naaaa\") == \"12\""
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), \"Test failed\""
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('aba') == '7'\nassert solution('abcd') == '4'\nassert solution('aaaa') == '12'"
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"aba\") == \"7\"\nassert solution(\"abcd\") == \"4\"\nassert solution(\"aaaa\") == \"12\""
    },
    {
        "number": 3928,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('aba') == '7'\nassert solution('abcd') == '4'\nassert solution('aaaa') == '12'"
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 1\\n\") == \"1\\n\"\n\nassert solution(\"3 1\\n\") == \"2\\n\"\n\nassert solution(\"4 2\\n\") == \"3\\n\"\n\nassert solution(\"5 2\\n\") == \"5\\n\"\n\nassert solution(\"6 3\\n\") == \"6\\n\"\n\nassert solution(\"7 3\\n\") == \"8\\n\"\n\nassert solution(\"8 4\\n\") == \"10\\n\"\n\nassert solution(\"9 4\\n\") == \"12\\n\""
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"3 1\") == \"1\"\nassert solution(\"10 2\") == \"2\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"1 10\") == \"1\"\nassert solution(\"1 20\") == \"2\"\nassert solution(\"1 30\") == \"3\"\nassert solution(\"1 40\") == \"4\"\nassert solution(\"1 50\") == \"5\"\nassert solution(\"1 60\") == \"6\"\nassert solution(\"1 70\") == \"7\"\nassert solution(\"1 80\") == \"8\"\nassert solution(\"1 90\") == \"9\"\nassert solution(\"1 100\") == \"10\"\nassert solution(\"1 1000\") == \"1\""
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('2 1') == '1'"
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == '1\\n', \"The solution is incorrect\""
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == '1\\n'"
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 1\\n\") == \"1\\n\", \"The solution is incorrect\"\nassert solution(\"1 1\\n\") == \"1\\n\", \"The solution is incorrect\"\nassert solution(\"1 2\\n\") == \"2\\n\", \"The solution is incorrect\"\nassert solution(\"1 3\\n\") == \"1\\n\", \"The solution is incorrect\"\nassert solution(\"1 4\\n\") == \"1\\n\", \"The solution is incorrect\"\nprint(solution(\"\"))  # Output: \"0\\n\"\n"
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 1\") == \"1\\n\", \"Test case 1 failed\"\nassert solution(\"3 2\") == \"3\\n\", \"Test case 2 failed\"\nassert solution(\"4 3\") == \"1\\n3\\n\", \"Test case 3 failed\"\nassert solution(\"5 4\") == \"5\\n\", \"Test case 4 failed\"\nassert solution(\"6 5\") == \"5\\n6\\n\", \"Test case 5 failed\""
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2 1\\n\") == \"1\\n\""
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2 1\") == \"1\"\nprint(\"All test cases passed\")"
    },
    {
        "number": 3929,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 1\\n\") == \"1\"\n\nfor _ in range(int(stdin.readline())):\n    N, K = map(int, stdin.readline().split())\n    # snuke decides to play with N cards and a deque (with a deque data structure)\n    # each card shows an integer from 1 to N, and the deque is initially empty\n    # snuke will insert the cards at the beginning or the end of the deque one at a time\n    # in order from 1 to N, then will perform the following action N times:\n    # take out the card from the beginning or the end of the deque and eat it\n    # afterwards, we will construct an integer sequence by arranging the integers written on the eaten cards\n    # in the order they are eaten.\n    # among the sequences that can be obtained in this way, find the number of the sequences such that the K-th element is 1\n    # print the answer modulo 10^{9} + 7\n\n    # snuke decides to play with N cards and a deque (with a deque data structure)\n    # each card shows an integer from 1 to N, and the deque is initially empty\n    # snuke will insert the cards at the beginning or the end of the deque one at a time\n    # in order from 1 to N, then will perform the following action N times:\n    # take out the card from the beginning or the end of the deque and eat it\n    # afterwards, we will construct an integer sequence by arranging the integers written on the eaten cards\n    # in the order they are eaten.\n    # among the sequences that can be obtained in this way, find the number of the sequences such that the K-th element is 1\n    # print the answer modulo 10^{9} + 7"
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n4 2\n2 2 2 2\n\"\"\") == \"8\"\n\nassert solution(\n\"\"\"\n4 -3\n3 -6 -3 12\n\"\"\") == \"3\""
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\n2 2 2 2\\n\") == \"8\"\nassert solution(\"4 -3\\n3 -6 -3 12\\n\") == \"3\""
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 2\\n2 2 2 2\\n\") == \"8\\n\"\nassert solution(\"4 -3\\n3 -6 -3 12\\n\") == \"3\\n\""
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('4 2\\n2 2 2 2') == 8\nassert solution('4 -3\\n3 -6 -3 12') == 3"
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n2 2 2 2\") == 8\nassert solution(\"4 -3\\n3 -6 -3 12\") == 3"
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\n2 2 2 2\") == 8\nassert solution(\"4 -3\\n3 -6 -3 12\") == 3\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 2\\n2 2 2 2\\n') == 8\nassert solution('4 -3\\n3 -6 -3 12\\n') == 3\n\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n2 2 2 2\") == 8\nassert solution(\"4 -3\\n3 -6 -3 12\") == 3"
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(example1) == \"8\"\nassert solution(example2) == \"3\"\nassert solution(example3) == \"3\"\nassert solution(example4) == \"8\""
    },
    {
        "number": 3930,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Output\\n8\""
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 5 3 1 8\\nBerBank University\\nUniversity BerMall\\nUniversity BerBank\") == \"11\\n\"\nassert solution(\"4 2 1 300 1000\\nA A\\nA aa\\naa AA\\nA a\") == \"5\\n\""
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"11\\n\", \"Incorrect output for example 1\"\n\nassert solution() == \"5\\n\", \"Incorrect output for example 2\"\n\nassert solution() == \"5\\n\", \"Incorrect output for example 3\""
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 5 3 1 8\\nBerBank University\\nUniversity BerMall\\nUniversity BerBank\\n\") == \"11\"\nassert solution(\"4 2 1 300 1000\\na A\\nA aa\\naa AA\\nAA a\\n\") == \"5\""
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(open('input.txt', 'r')) == '11'\nassert solution(open('input2.txt', 'r')) == '5'\n"
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"11\"\n"
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == '11'"
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output(), f\"Test failed. Input: {input()}, Output: {output()}\""
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Your solution does not match the expected output.\\n\\nInput: {input()}\\n\\nExpected Output: {expected_output}\\n\\nOutput: {solution(input())}\"\n"
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 5 3 1 8\\nBerBank University\\nUniversity BerMall\\nUniversity BerBank\\n\") == \"11\\n\"\nassert solution(\"4 2 1 300 1000\\nA\\nAaa\\nAaAa\\nAaaa\\n\") == \"5\\n\""
    },
    {
        "number": 3931,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 5 3 1 8\\nBerBank University\\nUniversity BerMall\\nUniversity BerBank\\n\") == \"11\"\nassert solution(\"4 2 1 300 1000\\na A\\nA aa\\naa AA\\nA a\\n\") == \"5\""
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 1 1 4\") == \"YES\"\nassert solution(\"5\\n1 1 5 2 1\") == \"NO\"\nassert solution(\"\") == \"YES\"\nassert solution(\"6\\n1 1 5 2 1\") == \"NO\"\n"
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"YES\" # correct solution\n\nassert solution(input()) == \"NO\" # incorrect solution"
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('1 1 1 4') == 'YES'\nassert solution('1 1 5 2 1') == 'NO'\n"
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(None) == \"YES\"\nassert solution(open('input.txt', 'r')) == \"YES\"\n"
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 1 1 4\") == \"YES\"\nassert solution(\"5\\n1 1 5 2 1\") == \"NO\""
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('Input\\n4\\n1 1 1 4\\n') == 'YES\\n'\nassert solution('Input\\n5\\n1 1 5 2 1\\n') == 'NO\\n'"
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 1 1 4\") == \"YES\"\nassert solution(\"5\\n1 1 5 2 1\") == \"NO\""
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 1 1 4\\n\") == \"YES\"\nassert solution(\"5\\n1 1 5 2 1\\n\") == \"NO\""
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n1 1 1 4') == 'YES\\n'\nassert solution('5\\n1 1 5 2 1') == 'NO\\n'"
    },
    {
        "number": 3932,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Expected '{output}', got '{solution(input())}'\"\n"
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('Input\\n5\\n10 5 0 -5 -10\\n\\nOutput\\n-15\\n\\nInput\\n4\\n1 1 1 1\\n\\nOutput\\n1\\n\\nInput\\n3\\n5 1 -5\\n\\nOutput\\n-5\\n\\nInput\\n2\\n900 1000\\n\\nOutput\\n1100') == 'Output\\n-15\\n\\nOutput\\n1\\n\\nOutput\\n-5\\n\\nOutput\\n1100'"
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n10 5 0 -5 -10\") == \"-15\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"1\\n\"\nassert solution(\"3\\n5 1 -5\") == \"-5\\n\"\nassert solution(\"2\\n900 1000\") == \"1100\\n\"\n"
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n10 5 0 -5 -10\") == \"-15\"\nassert solution(\"4\\n1 1 1 1\") == \"1\"\nassert solution(\"3\\n5 1 -5\") == \"-5\"\nassert solution(\"2\\n900 1000\") == \"1100\"\n"
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(5) == -15\nassert solution(4) == 1\nassert solution(3) == -5\nassert solution(2) == 1100"
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n10 5 0 -5 -10\\n4\\n1 1 1 1\\n3\\n5 1 -5\\n2\\n900 1000\\n\") == \"-15\"\nassert solution(\"4\\n1 1 1 1\\n3\\n5 1 -5\\n2\\n900 1000\\n\") == \"1\"\nassert solution(\"3\\n5 1 -5\\n2\\n900 1000\\n\") == \"-5\"\nassert solution(\"2\\n900 1000\\n\") == \"1100\""
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"Input\") == \"-15\\n\"\nassert solution(\"Input\") == \"-15\\n\"\nassert solution(\"Input\") == \"-5\\n\"\nassert solution(\"Input\") == \"1\\n\"\nassert solution(\"Input\") == \"1100\\n\""
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n10 5 0 -5 -10\") == \"-15\"\nassert solution(\"4\\n1 1 1 1\") == \"1\"\nassert solution(\"3\\n5 1 -5\") == \"-5\"\nassert solution(\"2\\n900 1000\") == \"1100\""
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n10 5 0 -5 -10\") == \"-15\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"1\\n\"\nassert solution(\"3\\n5 1 -5\") == \"-5\\n\"\nassert solution(\"2\\n900 1000\") == \"1100\\n\""
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3) == '-5'\nassert solution(2) == '1100'\nassert solution(1) == '1'\nassert solution(5) == '-15'\nassert solution(4) == '1'"
    },
    {
        "number": 3933,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n10 5 0 -5 -10\") == \"-15\\n\"\nassert solution(\"4\\n1 1 1 1\") == \"1\\n\"\nassert solution(\"3\\n5 1 -5\") == \"-5\\n\"\nassert solution(\"2\\n900 1000\") == \"1100\\n\"\n"
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('2\\n1 2') == 'YES\\n'\nassert solution('3\\n1 2\\n2 3') == 'NO\\n'\nassert solution('5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6') == 'NO\\n'\nassert solution('6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6') == 'YES\\n'"
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"Input\") == \"YES\"\nassert solution(\"Input\\nInput\") == \"NO\"\nassert solution(\"Input\\n2\\n1\\n2\") == \"YES\"\nassert solution(\"Input\\n2\\n1\\n3\") == \"NO\"\nassert solution(\"Input\\n2\\n2\\n5\") == \"NO\"\nassert solution(\"Input\\n2\\n2\\n6\") == \"YES\""
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Test case {test_case} failed: {output}\""
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"Input\\n2\\n1 2\\nOutput\\nYES\\nInput\\n3\\n1 2\\n2 3\\nOutput\\nNO\\nInput\\n5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\nOutput\\nNO\") == \"YES\\nNO\\nYES\"\nassert solution(\"Input\\n6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\nOutput\\nYES\") == \"YES\""
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"YES\"\nassert solution(\"3\\n1 2\\n2 3\\n\") == \"NO\"\nassert solution(\"5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"NO\"\nassert solution(\"6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"YES\""
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"Input\\n3\\n1 2\\n2 3\\n\\nOutput\\nNO\\n\\nInput\\n5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\\nOutput\\nYES\") == \"YES\\nNO\\nYES\\nNO\"\nassert solution(\"Input\\n6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\\nOutput\\nNO\\n\\nInput\\n1\\n2\\n\\nOutput\\nYES\") == \"NO\\nYES\\nYES\\nYES\"\nassert solution(\"Input\\n2\\n1 2\\n\\nOutput\\nYES\\n\\nInput\\n3\\n1 2\\n2 3\\n\\nOutput\\nNO\\n\\nInput\\n5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\\nOutput\\nYES\\nNO\") == \"YES\\nNO\\nYES\\nNO\""
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Input\\n2\\n1 2\\n\") == \"YES\\n\"\nassert solution(\"Input\\n3\\n1 2\\n2 3\\n\") == \"NO\\n\"\nassert solution(\"Input\\n5\\n1 2\\n1 3\\n1 4\\n2 5\\n\") == \"NO\\n\"\nassert solution(\"Input\\n6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"YES\\n\""
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(3), \"3\"\nassert solution(4), \"YES\"\nassert solution(5), \"NO\"\nassert solution(6), \"NO\""
    },
    {
        "number": 3934,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"YES\", \"The solution should be YES\"\nprint(\"YES\")"
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"1\"\nassert solution(\"2\\n2 6\\n\") == \"0\""
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"1\\n2 2\\n0\"\nassert solution() == \"0\"\nassert solution() == \"0\""
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution([3, 2, 3, 2, 6, 3]) == 0\nassert solution([2, 2, 6]) == 0\nassert solution([1, 2, 3, 2, 6]) == 1\nassert solution([1, 2, 3, 2, 6, 7, 8, 9]) == 2"
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3\\n1 2 3\\n\\n2\\n2 6') == '1\\n2 6\\n'\nassert solution('2\\n2 6\\n') == '0\\n\\n'"
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == 1\nassert solution(2) == 0"
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n1 2 3\\n2\\n2 6') == '1\\n2 6'\nassert solution('2\\n2 6\\n6') == '0'"
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == expected, f\"Expected '{expected}', got '{solution(stdin)}'\"\n"
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(stdin) == expected, f\"Expected {expected}, got {solution(stdin)}\""
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2 3\\n2\\n2 6\\n\") == \"1\\n2 6\\n\"\nassert solution(\"2\\n2 6\\n\") == \"0\\n\""
    },
    {
        "number": 3935,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"1\\n\"\n"
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\naab\\nccb\") == \"6\"\n"
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3\\naab\\nccb') == 6\nprint(\"All tests passed!\")"
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=\"3\\naab\\nccb\\n\") == \"6\\n\"\nassert solution(stdin=\"1\\nabc\\n\") == \"2\\n\"\nassert solution(stdin=\"2\\nacb\\n\") == \"4\\n\"\nassert solution(stdin=\"3\\nabc\\ndef\\n\") == \"16\\n\"\nassert solution(stdin=\"1\\nuvwxyz\\n\") == \"1\\n\"\nassert solution(stdin=\"2\\nhjkl\\n\") == \"3\\n\"\nassert solution(stdin=\"3\\nghij\\nklm\\n\") == \"15\\n\"\n"
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\naab\\nccb\") == \"6\\n\"\nassert solution(\"2\\naab\\nbbb\") == \"2\\n\"\nassert solution(\"1\\naab\\nbbb\") == \"6\\n\"\nassert solution(\"2\\naab\\nbaa\") == \"0\\n\"\nassert solution(\"1\\naab\\nbab\") == \"10\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"6\\n\", \"Expected output: 6\\nGot: \" + solution(input())"
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\naab\\nccb') == '6'\nassert solution('2\\na\\nb\\nc') == '4'\nassert solution('5\\na\\nb\\nc\\nd\\ne\\nf\\ng\\nh\\ni\\nj\\nk\\nl\\nm\\nn\\no\\np\\nq\\nr\\ns\\nt\\nu\\nv\\nw\\nx\\ny\\nz\\n') == '122'"
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\naab\\ncco\\n') == '6'\nassert solution('5\\naabbcc\\nbbbbbb\\ncccddd\\n') == '24'\nassert solution('6\\na\\nb\\nc\\nd\\ne\\nf\\ng\\nh\\ni\\nj\\nk\\nl\\nm\\nn\\no\\np\\nq\\nr\\ns\\nt\\nu\\nv\\nw\\nx\\ny\\nz\\n') == '1040'\nassert solution('4\\nb\\nc\\nd\\ne\\nf\\ng\\nh\\ni\\nj\\nk\\nl\\nm\\nn\\no\\np\\nq\\nr\\ns\\nt\\nu\\nv\\nw\\nx\\ny\\nz\\n') == '1120'"
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\naab\\nccb\\n\") == \"6\"\nassert solution(\"10\\nabc\\ndef\\nghi\\njkl\\nmnop\\nqr\\nstu\\nuvw\\nxzy\\n\") == \"33\""
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\naab\\nccb\") == \"6\\n\"\nassert solution(\"4\\nabcd\\nefg\\nhij\") == \"6\\n\"\nassert solution(\"5\\nabcde\\nfghi\\njklm\\npqr\") == \"6\\n\"\nassert solution(\"6\\naabb\\ncccc\\ndddd\\neeee\") == \"6\\n\"\nassert solution(\"7\\naabbaa\\ncccccd\\ndddddddd\\neeeeeeeee\") == \"6\\n\"\nassert solution(\"8\\naabbaabba\\ncccccccccd\\nddddddddddddd\\neeeeeeeeeeeeeeeee\") == \"6\\n\""
    },
    {
        "number": 3936,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"6\\n\""
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(r'100 100 5\\n5 2 1 2 1\\n') == 'YES'\nassert solution(r'100 8 5\\n5 2 1 2 1\\n') == 'NO'\nassert solution(r'100 100 7\\n1 2 3 4 5 6 7\\n') == 'NO'"
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"100 100 5\\n5 2 1 2 1\\n\") == \"YES\"\nassert solution(\"100 8 5\\n5 2 1 2 1\\n\") == \"NO\"\nassert solution(\"100 100 7\\n1 2 3 4 5 6 7\\n\") == \"NO\""
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"YES\" or solution(input()) == \"NO\""
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"100 100 5\\n5 2 1 2 1\") == \"YES\"\nassert solution(\"100 8 5\\n5 2 1 2 1\") == \"NO\"\nassert solution(\"100 100 7\\n1 2 3 4 5 6 7\") == \"NO\""
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('100 100 5\\n5 2 1 2 1\\n') == 'YES'\nassert solution('100 8 5\\n5 2 1 2 1\\n') == 'NO'\nassert solution('100 100 7\\n1 2 3 4 5 6 7\\n') == 'NO'"
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"100 100 5\\n5 2 1 2 1\") == \"YES\"\nassert solution(\"100 8 5\\n5 2 1 2 1\") == \"NO\"\nassert solution(\"100 100 7\\n1 2 3 4 5 6 7\") == \"NO\""
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"100 100 5\\n5 2 1 2 1\\n\") == \"YES\\n\"\nassert solution(\"100 8 5\\n5 2 1 2 1\\n\") == \"NO\\n\"\nassert solution(\"100 100 7\\n1 2 3 4 5 6 7\\n\") == \"NO\\n\""
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Input {stdin} expected output {expected_output}, but got {solution(input())}.\""
    },
    {
        "number": 3937,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"100 100 5\\n5 2 1 2 1\") == \"YES\"\nassert solution(\"100 8 5\\n5 2 1 2 1\") == \"NO\"\nassert solution(\"100 100 7\\n1 2 3 4 5 6 7\") == \"NO\""
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin='10 2\\n4 1 5 10\\n1 4 10 5\\n') == '4\\n'\nassert solution(stdin='7 6\\n2 1 2 1\\n4 2 4 3\\n2 5 2 5\\n2 3 5 3\\n1 2 1 2\\n3 2 5 3\\n') == '3\\n'"
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(None) == \"Invalid input\""
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(str(10)) == 4\nassert solution(str(7)) == 3"
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 2\\n4 1 5 10\\n1 4 10 5\\n\") == \"4\"\nassert solution(\"7 6\\n2 1 2 1\\n4 2 4 3\\n2 5 2 5\\n2 3 5 3\\n1 2 1 2\\n3 2 5 3\\n\") == \"3\""
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 2\\n4 1 5 10\\n1 4 10 5\\n\") == \"4\\n\"\nassert solution(\"7 6\\n2 1 2 1\\n4 2 4 3\\n2 5 2 5\\n2 3 5 3\\n1 2 1 2\\n3 2 5 3\\n\") == \"3\\n\""
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output() # Test case 1\nassert solution(input()) == output() # Test case 2\nassert solution(input()) == output() # Test case 3\nassert solution(input()) == output() # Test case 4\nassert solution(input()) == output() # Test case 5\n"
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 2\\n4 1 5 10\\n1 4 10 5\\n\") == \"4\\n\"\nassert solution(\"7 6\\n2 1 2 1\\n4 2 4 3\\n2 5 2 5\\n2 3 5 3\\n1 2 1 2\\n3 2 5 3\\n\") == \"3\\n\""
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == 4, \"Test Case 1 Failed\""
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 2\\n4 1 5 10\\n1 4 10 5\") == \"4\"\nassert solution(\"7 6\\n2 1 2 1\\n4 2 4 3\\n2 5 2 5\\n2 3 5 3\\n1 2 1 2\\n3 2 5 3\") == \"3\""
    },
    {
        "number": 3938,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n10 2\n4 1 5 10\n1 4 10 5\n\"\"\") == 4\n\nassert solution(\"\"\"\n7 6\n2 1 2 1\n4 2 4 3\n2 5 2 5\n2 3 5 3\n1 2 1 2\n3 2 5 3\n\"\"\") == 3"
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    5\n    5 3\n    1 5 2 6 1\n    1 6\n    6\n    3 2\n    1 2 3\n    4 3\n    3 1 2 3\n    10 3\n    1 2 3 4 5 6 7 8 9 10\n    \"\"\"\n) == \"no\\nno\\nno\\nno\\n\"\n\nassert solution(\n    \"\"\"\n    5\n    5 3\n    1 5 2 6 1\n    1 6\n    6\n    3 2\n    1 2 3\n    4 3\n    3 1 2 3\n    10 3\n    1 2 3 4 5 6 7 8 9 10\n    \"\"\"\n) == \"no\\nno\\nno\\nno\\n\"\n\nassert solution(\n    \"\"\"\n    5\n    5 3\n    1 5 2 6 1\n    1 6\n    6\n    3 2\n    1 2 3\n    4 3\n    3 1 2 3\n    10 3\n    1 2 3 4 5 6 7 8 9 10\n    \"\"\"\n) == \"yes\\nyes\\nyes\\nyes\\n\""
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == \"yes\""
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(open('input.txt').read()) == \"no\\nyes\\nyes\\nno\\nyes\"\n"
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n5\\n1 5 2 6 1\\n1 6\\n6\\n3 2\\n1 2 3\\n4 3\\n3 1 2 3\\n10 3\\n1 2 3 4 5 6 7 8 9 10\\n\") == \"no\\nyes\\nyes\\nno\\nyes\"\n"
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n5 3\\n1 5 2 6 1\\n1 6\\n6\\n3 2\\n1 2 3\\n4 3\\n3 1 2 3\\n10 3\\n1 2 3 4 5 6 7 8 9 10\") == \"no\\nyes\\nyes\\nno\\nyes\""
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input) == expected, f\"Test failed for {input}\"\nprint(\"Test passed\")"
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == expected"
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"5\\n5 3\\n1 5 2 6 1\\n1 6\\n6\\n3 2\\n1 2 3\\n4 3\\n3 1 2 3\\n10 3\\n1 2 3 4 5 6 7 8 9 10\") == \"no\\nyes\\nyes\\nno\\nyes\""
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n5 3\\n1 5 2 6 1\\n1 6\\n6\\n3 2\\n1 2 3\\n4 3\\n3 1 2 3\\n10 3\\n1 2 3 4 5 6 7 8 9 10\") == \"no\\nyes\\nyes\\nyes\\nno\\nyes\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3939,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n5 3\\n1 5 2 6 1\\n1 6\\n6\\n3 2\\n1 2 3\\n4 3\\n3 1 2 3\\n10 3\\n1 2 3 4 5 6 7 8 9 10\\n\") == \"no\\nyes\\nyes\\nno\\nyes\\n\"\nprint(\"All tests passed successfully\")"
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n1 3\\n2 5\\n4 5\") == \"2\\n1 0 2 1 0\"\nassert solution(\"4 2\\n1 4\\n2 4\") == \"3\\n5 2 0 1\""
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == \"2\\n1 0 2 1 0\\n\"\nassert solution(input()) == \"3\\n5 2 0 1\"\nassert solution(input()) == \"4\\n5 2 0 1\""
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n1 3\\n2 5\\n4 5\\n\") == \"2\\n1 0 2 1 0\\n\"\nassert solution(\"4 2\\n1 4\\n2 4\\n\") == \"3\\n5 2 0 1\\n\""
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n1 3\\n2 5\\n4 5\") == \"2\\n1 0 2 1 0\\n\"\nassert solution(\"4 2\\n1 4\\n2 4\") == \"3\\n5 2 0 1\\n\"\nassert solution(\"5 4\\n1 1\\n2 3\\n3 2\") == \"3\\n2 0 1 2\\n\"\n"
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n1 3\\n2 5\\n4 5\") == \"2\\n1 0 2 1 0\\n\"\nassert solution(\"4 2\\n1 4\\n2 4\\n\") == \"3\\n5 2 0 1\\n\"\nassert solution(\"1 3\\n2 5\\n3 7\\n4 11\") == \"3\\n5 2 0 1\\n\"\nassert solution(\"3 5\\n1 3\\n4 5\\n6 7\") == \"2\\n1 0 2 1 0\\n\""
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n1 3\\n2 5\\n4 5\\n\") == \"2\\n1 0 2 1 0\\n\"\nassert solution(\"4 2\\n1 4\\n2 4\\n\") == \"3\\n5 2 0 1\\n\"\nprint(\"All test cases pass\")"
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n1 3\\n2 5\\n4 5\") == \"2\\n1 0 2 1 0\\n\"\nassert solution(\"4 2\\n1 4\\n2 4\\n\") == \"3\\n5 2 0 1\\n\"\nassert solution(\"5 3\\n1 3\\n2 5\\n4 5\") == \"2\\n1 0 2 1 0\\n\"\nassert solution(\"4 2\\n1 4\\n2 4\\n\") == \"3\\n5 2 0 1\\n\""
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == '''def solution(stdin: str) -> str:\n    pass'''\n"
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n1 3\\n2 5\\n4 5\\n\") == \"2\\n1 0 2 1 0\\n\"\nassert solution(\"4 2\\n1 4\\n2 4\\n\") == \"3\\n5 2 0 1\\n\"\n"
    },
    {
        "number": 3940,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n1 0 1\\n2 1 3\\n2 1 2\\n2 2 3\") == \"NO\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n1 2\\n2 1 3\") == \"YES\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n2 1 2\\n1 3\") == \"NO\""
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n1 0 1\\n2 1 3\\n2 1 2\\n2 2 3\") == \"YES\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n1 2\\n2 1 3\\n\") == \"NO\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n2 1 2\\n1 3\\n\") == \"NO\""
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n1 0 1\\n2 1 3\\n2 1 2\\n2 2 3\") == \"NO\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n1 2\\n2 1 3\\n\") == \"YES\"\n\nfrom typing import List"
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 3\\n1 0 1\\n2 1 3\\n2 1 2\\n2 2 3') == 'NO'\nassert solution('3 3\\n1 0 1\\n3 1 2 3\\n1 2\\n2 1 3\\n') == 'YES'\nassert solution('3 3\\n1 0 1\\n3 1 2 3\\n2 1 2\\n1 3\\n') == 'NO'"
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"YES\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 'YES'"
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"YES\"\n"
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n1 0 1\\n2 1 3\\n2 1 2\\n2 2 3\") == \"YES\\n\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n1 2\\n2 1 3\") == \"NO\\n\"\nassert solution(\"3 3\\n1 0 1\\n3 1 2 3\\n2 1 2\\n1 3\") == \"NO\\n\""
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 3\\n1 0 1\\n2 1 3\\n2 1 2\\n2 2 3') == 'NO'\nassert solution('3 3\\n1 0 1\\n3 1 2 3\\n1 2\\n2 1 3') == 'YES'\nassert solution('3 3\\n1 0 1\\n3 1 2 3\\n2 1 2\\n1 3') == 'NO'\n"
    },
    {
        "number": 3941,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == 'NO'\nassert solution(input()) == 'YES'"
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('(((#)((#)')) == '1\\n2\\n'\nassert solution('()((#((#(#()')) == '2\\n2\\n1\\n'\nassert solution('#') == '-1\\n'\nassert solution('(#)') == '-1\\n'"
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''(((#)((#)\n\nOutput\n1\n2\n''') == 1\n\nassert solution('''()((#((#(#()\n\nOutput\n2\n2\n1\n''') == 2\n\nassert solution('''#\n\nOutput\n-1\n''') == -1\n\nassert solution('''(#)\n\nOutput\n-1\n''') == -1\n\nassert solution('''(((#)((#)\n\nOutput\n1\n2\n''') == 1\n\nassert solution('''()((#((#(#()\n\nOutput\n2\n2\n1\n''') == 2\n\nassert solution('''#\n\nOutput\n-1\n''') == -1\n\nassert solution('''(#)\n\nOutput\n-1\n''') == -1"
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''()((#((#(#()''') == '''1\n2\n1\n1\n2\n2\n1\n-1\n-1\n-1\n-1\n''') == True, 'Test 1 failed')\n\nassert solution('''#''') == '''-1\n''', 'Test 2 failed')\n\nassert solution('''()((#((#(#()''') == '''-1\n-1\n-1\n-1\n''') == True, 'Test 3 failed')\n\nassert solution('''()()()''') == '''-1\n-1\n-1\n-1\n''', 'Test 4 failed')\n\nassert solution('''()()(())''') == '''-1\n-1\n-1\n-1\n''', 'Test 5 failed')"
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"(((#)((#)\")) == 1\nassert solution(\"(())((#((#(#()\")) == 2\nassert solution(\"#\") == -1\nassert solution(\"(#)\") == -1"
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"(((#)((#)\")) == \"1\\n2\\n\"\nassert solution(\"(())((#((#(#()\")) == \"2\\n2\\n1\\n\"\nassert solution(\"#\") == \"-1\\n\"\nassert solution(\"(#)\") == \"-1\\n\""
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"()((#((#(#()\") == \"1\\n2\\n2\\n1\")\nassert solution(\"()((#())\") == \"2\\n1\\n\")\nassert solution(\"#\") == \"-1\\n\"\nassert solution(\"\") == \"-1\\n\""
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"(((#)((#)\")) == 1\nassert solution(\"()((#((#(#()\")) == 2\nassert solution(\"#\") == -1\nassert solution(\"(#)\") == -1"
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"(((#)((#)\")) == \"1\\n2\\n\", \"((#)((#)\"))\nassert solution(\"()((#((#(#()\")) == \"2\\n2\\n1\\n\", \"((#)((#)\"))\nassert solution(\"#\") == \"-1\\n\", \"#\")\nassert solution(\"(#)\") == \"-1\\n\", \"#\")"
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('(((#)((#)')) == '1\\n2\\n'\nassert solution('()((#((#(#()')) == '2\\n2\\n1\\n'\nassert solution('#') == '-1\\n'\nassert solution('(#)') == '-1\\n')"
    },
    {
        "number": 3942,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"(((#)((#)\")) == \"1\\n2\\n\"\nassert solution(\"(())((#((#(#()\")) == \"2\\n2\\n1\\n\"\nassert solution(\"#\") == \"-1\\n\"\nassert solution(\"(#)\") == \"-1\\n\"\nassert solution(\"()\") == \"-1\\n\")"
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"xoxox\"\nassert solution(\"4 0\") == \"oooo\"\nassert solution(\"0 4\") == \"-16\""
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == '''-1\nxoxox\n'''\n\nassert solution(stdin) == '''16\noooo\nInput\n0 4\n\nOutput\n-16\nxxxx\n'''"
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == -1\nassert solution(\"4 0\") == 16\nassert solution(\"0 4\") == -16\nprint(\"All tests passed!\")"
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 3') == '-1'\nassert solution('4 0') == '16'"
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Incorrect solution. Expected: {output}, Received: {solution(input())}\""
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n4 0\\n0 4\\n\") == \"-1\\nxoxox\\n16\\noooo\\n-16\\nxxxx\\n\""
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Test failed: Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 3') == '-1'\nassert solution('4 0') == '16'\nassert solution('0 4') == '-16'\n"
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '-1\\nxoxox'\nassert solution() == '16\\no\\no\\no\\no'\nassert solution() == '-16\\no\\no\\no\\no'"
    },
    {
        "number": 3943,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"-1\\nxoxox\\n\"\nassert solution(\"4 0\") == \"16\\noooo\\n\"\nassert solution(\"0 4\") == \"-16\\nxxxx\\n\"\n"
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == '17'"
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1 1 1\") == \"17\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1 1 1\") == \"17\""
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1 1 1') == '17'\n"
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1 1 1\") == \"17\"\nassert solution(\"2 3 4\") == \"12\"\nassert solution(\"3 2 1\") == \"6\"\nassert solution(\"10 10 10\") == \"10000000000000\""
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1\") == \"17\", \"Your implementation is wrong\""
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"17\""
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1 1 1\") == \"17\", \"Incorrect Output\""
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == '17', \"Incorrect output\""
    },
    {
        "number": 3944,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '17', \"The given solution is incorrect.\"\n"
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '2 2 2\\n2 2 2\\n'\nassert solution(stdin) == '2 3\\n3 2\\n'\nassert solution(stdin) == '2 3\\n3 2\\n'\nassert solution(stdin) == '2 3\\n3 2\\n'\nassert solution(stdin) == '2 3\\n3 2\\n'\n"
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2 3\\n1 2 1\\n2 1 2') == '2 2 2'\nassert solution('2 2\\n1 2\\n3 4') == '2 3'"
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n1 2 1\\n2 1 2\") == \"2 2 2 \\n2 2 2 \\n\"\nassert solution(\"2 2\\n1 2\\n3 4\") == \"2 3 \\n3 2 \""
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('2 3\\n1 2 1\\n2 1 2') == '2 2 2\\n2 2 2\\n'\nassert solution('2 2\\n1 2\\n3 4') == '2 3\\n3 2\\n'"
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n1 2 1\\n2 1 2\") == \"2 2 2 \\n2 2 2 \\n\"\nassert solution(\"2 2\\n1 2\\n3 4\") == \"2 3 \\n3 2 \\n\"\n\nprint(\"All tests passed!\")"
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution() == '''2 2 2 2 2 2'''\nprint('All test cases pass.')"
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n1 2 1\\n2 1 2\") == \"2 2 2\\n2 2 2\\n\"\nassert solution(\"2 2\\n1 2\\n3 4\") == \"2 3 \\n3 2\""
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == solution1"
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"2 2 2\\n2 2 2\\n\""
    },
    {
        "number": 3945,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution([2, 3]) == '2 2 2\\n2 2 2\\n'\nassert solution([2, 2]) == '2 3\\n3 2\\n'\n\nassert solution([2, 2]) == '2 3\\n3 2\\n'\n"
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input) == expected, f\"Test failed for {input} and expected {expected}\"\n"
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2 1\\n0 1\\n2 1\\n\") == \"332748119\\n332748119\\n\"\nassert solution(\"1 2\\n1\\n1\\n\") == \"3\\n\"\nassert solution(\"3 3\\n0 1 1\\n4 3 5\\n\") == \"160955686\\n185138929\\n974061117\\n\""
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(r\"2 1\n0 1\n2 1\") == \"332748119\"\nassert solution(r\"1 2\n1\") == \"3\"\nassert solution(r\"3 3\n0 1 1\n4 3 5\") == \"160955686\"\nassert solution(r\"10 1000000000\") == \"3789262031082776131939965966802077517542245470611417976931326760610741041726666195229212977949023100459592306501094793067396160666715908460279098311066995603739998944135652598733445808633186620790702205159211454779247604364769489110772741447690606767113251959094011401953749029437902543134303870924247730171686721082649677776830094857601824328131762790640069355648273588885349433914207783806133158476526622346480986612621734081528763352547011278563201903766216941921421336243666366063327954511237702198609586172943045193216014069542336196029297509347286636902995977652064115298953184736716946663329814358544394859309509887812998876529715760265295227656749983780651758372332697976742175556629599516396759075096338903132598122470192192785286080958718334113751241506898720484912765851359155832566431067756947804356515338256546217929837670265998417601316003150930843239429751993990918545049486866932749674590707866770564445786451"
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"332748119\", \"Test Failed\" # expected output: 332748119\nprint(\"All Test Cases Passed\")"
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"332748119\\n332748119\\n3\"\nassert solution() == \"3\\n160955686\\n185138929\\n974061117\""
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == expected_output, \"Expected output doesn't match the actual output.\""
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"332748119\""
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"332748119\"\nassert solution() == \"332748119\"\nassert solution() == \"3\"\nassert solution() == \"160955686\"\nassert solution() == \"185138929\"\nassert solution() == \"974061117\""
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output() for input, output in zip(input_data, output_data)"
    },
    {
        "number": 3946,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('2 1\\n0 1\\n2 1\\n') == '332748119'\nassert solution('1 2\\n1\\n1\\n') == '3'\nassert solution('3 3\\n0 1 1\\n4 3 5\\n') == '160955686'\nassert solution('') == ''\nassert solution('1 2\\n2 3\\n') == '3'\nassert solution('1 2\\n3 4\\n5 6\\n') == '3'\nassert solution('1 2\\n3 4\\n6 7\\n') == '2'"
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n3 1 5 2 6') == '11\\n'\nassert solution('5\\n1 2 3 4 5') == '6\\n'\nassert solution('5\\n1 100 101 100 1') == '102\\n'"
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"11\"\nassert solution(stdin) == \"6\"\nassert solution(stdin) == \"102\""
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"5\\n3 1 5 2 6\\n\") == \"11\\n\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"6\\n\"\nassert solution(\"5\\n1 100 101 100 1\\n\") == \"102\\n\""
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 1 5 2 6\") == \"11\"\nassert solution(\"5 1 2 3 4 5\") == \"6\"\nassert solution(\"1 100 101 100 1\") == \"102\"\n"
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('5\\n3 1 5 2 6') == '11\\n'\nassert solution('5\\n1 2 3 4 5') == '6\\n'\nassert solution('5\\n1 100 101 100 1') == '102\\n'"
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n3 1 5 2 6\\n5\\n1 2 3 4 5\\n5\\n1 100 101 100 1\") == \"11\\n\""
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Test case {test_case} failed\" for test_case in range(1, 6)\nfor test_case in range(1, 6):\n    expected_output = [11, 6, 102]\n    assert solution(input()) == expected_output[test_case - 1], f\"Test case {test_case} failed\"\n"
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(example1()) == 11\nassert solution(example2()) == 6\nassert solution(example3()) == 102\n"
    },
    {
        "number": 3947,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\n    '''\n    Input\n    5\n   3 1 5 2 6\n    '''\n) == '11\\n'\n\nassert solution(\n    '''\n    Input\n    5\n   1 2 3 4 5\n    '''\n) == '6\\n'\n\nassert solution(\n    '''\n    Input\n    5\n   1 100 101 100 1\n    '''\n) == '102\\n'"
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('14 2\\n1 4\\n2 4\\n3 4\\n4 13\\n10 5\\n11 5\\n12 5\\n14 5\\n5 13\\n6 7\\n8 6\\n13 6\\n9 6') == 'Yes\\n', \"The given graph is not a hedgehog\"\nprint(\"Test Passed\")"
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == expected_output, f\"Test failed for {input()}\""
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''14 2\n1 4\n2 4\n3 4\n4 13\n10 5\n11 5\n12 5\n14 5\n5 13\n6 7\n8 6\n13 6\n9 6''') == 'Yes'\nassert solution('''3 1\n1 3\n2 3''') == 'No'"
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"14 2\\n1 4\\n2 4\\n3 4\\n4 13\\n10 5\\n11 5\\n12 5\\n14 5\\n5 13\\n6 7\\n8 6\\n13 6\\n9 6\\n\") == \"Yes\"\nassert solution(\"3 1\\n1 3\\n2 3\\n\") == \"No\""
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"14 2\\n1 4\\n2 4\\n3 4\\n4 13\\n10 5\\n11 5\\n12 5\\n14 5\\n5 13\\n6 7\\n8 6\\n13 6\\n9 6\\n\") == \"Yes\\n\"\nassert solution(\"3 1\\n1 3\\n2 3\\n\") == \"No\\n\""
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"14 2\\n1 4\\n2 4\\n3 4\\n4 13\\n10 5\\n11 5\\n12 5\\n14 5\\n5 13\\n6 7\\n8 6\\n13 6\\n9 6\") == \"Yes\\n\"\nassert solution(\"3 1\\n1 3\\n2 3\") == \"No\\n\""
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(3, 1) == \"No\"\n\nassert solution(14, 2) == \"No\"\n\nassert solution(14, 5) == \"Yes\"\n\nassert solution(3, 6) == \"No\""
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"14 2\\n1 4\\n2 4\\n3 4\\n4 13\\n10 5\\n11 5\\n12 5\\n14 5\\n5 13\\n6 7\\n8 6\\n13 6\\n9 6\") == \"Yes\"\nassert solution(\"3 1\\n1 3\\n2 3\") == \"No\""
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input) == expected, f\"Test case failed: {input}!= {expected}\"\n"
    },
    {
        "number": 3948,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"14 2\\n1 4\\n2 4\\n3 4\\n4 13\\n10 5\\n11 5\\n12 5\\n14 5\\n5 13\\n6 7\\n8 6\\n13 6\\n9 6\") == \"Yes\"\nassert solution(\"3 1\\n1 3\\n2 3\") == \"No\"\n"
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(3,3) == 1\nassert solution(4,2) == -1\nassert solution(4,5) == 2\nassert solution(2,1) == -1\nassert solution(3,5) == 0"
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n.#.\\n##. \\n\\n4 2\\n##\\n.#\\n.#\\n##\\n\\n4 5\\n....#\\n####. \\n.###. \\n.#... \\n\\n2 1\\n.\\n# \\n\\n3 5\\n.....\\n.....\\n.....\\n\\n\") == \"1\"\nassert solution(\"4 2\\n##\\n.#\\n.#\\n##\\n\\n4 5\\n....#\\n####. \\n.###. \\n.#... \\n\\n2 1\\n.\\n# \\n\\n3 5\\n.....\\n.....\\n.....\\n\\n\") == \"2\"\nassert solution(\"2 1\\n.\\n# \\n\\n3 5\\n.....\\n.....\\n.....\\n\\n\") == \"-1\"\nassert solution(\"4 5\\n.....\\n.....\\n.....\\n\\n\") == \"0\""
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input_data) == output_data, f\"Test cases have failed. Input: \\n{input_data}\\nOutput: {output_data}\\n\"\n\ninput_data = \"\"\"3 3\n.#.\n###\n##.\n\nOutput\n1\n\nInput\n4 2\n##\n.#\n.#\n##\n\nOutput\n-1\n\nInput\n4 5\n....#\n####.\n.###.\n.#...\n\nOutput\n2\n\nInput\n2 1\n.\n"
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(3) == 1\nassert solution(4) == -1\nassert solution(5) == 2"
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n###\\n##.\\n\") == \"1\"\nassert solution(\"4 2\\n##\\n.#\\n.#\\n##\\n\") == \"1\"\nassert solution(\"4 5\\n....#\\n####. \\n.###. \\n.#... \\n\") == \"2\"\nassert solution(\"2 1\\n. \\n# \\n\") == \"1\"\nassert solution(\"3 5\\n.....\\n.....\\n.....\\n\") == \"0\""
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"\"\"3 3\n.#.\n###\n##.\"\"\") == \"1\"\nassert solution(\"\"\"4 2\n##\n.#\n.#\n##\n\"\"\") == \"1\"\nassert solution(\"\"\"4 5\n....#\n####.\n.###.\n.#...\n\"\"\") == \"-1\"\nassert solution(\"\"\"2 1\n.\n"
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3 3\\n.#.\\n###\\n##.\\n') == '1\\n'\nassert solution('4 2\\n##\\n.#\\n.#\\n##\\n') == '-1\\n'\nassert solution('4 5\\n....#\\n####.#\\n.###.#\\n.#...#\\n') == '2\\n'\nassert solution('2 1\\n.#\\n\\n\\n\\n') == '-1\\n'\nassert solution('3 5\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\n.....\\"
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(solution_input1) == solution_output1\nassert solution(solution_input2) == solution_output2\nassert solution(solution_input3) == solution_output3\nassert solution(solution_input4) == solution_output4\nassert solution(solution_input5) == solution_output5"
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input_1) == \"1\\n\"\nassert solution(input_2) == \"-1\\n\"\nassert solution(input_3) == \"2\\n\"\nassert solution(input_4) == \"-1\\n\"\nassert solution(input_5) == \"0\\n\"\n"
    },
    {
        "number": 3949,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"Output: -1\\n\"\nassert solution(\"4 2\\n##\\n.#\\n##\\n\") == \"Output: -1\\n\"\nassert solution(\"4 5\\n....#\\n####. \\n.###. \\n.#... \\n\") == \"Output: 2\\n\"\nassert solution(\"2 1\\n. \\n# \\n\") == \"Output: -1\\n\"\nassert solution(\"3 5\\n.....\\n.....\\n.....\\n\") == \"Output: 0\\n\""
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n1 0 2 3\\n\") == \"YES\\n1 2 2 3\\n\"\nassert solution(\"3 10\\n10 10 10\\n\") == \"YES\\n10 10 10 \\n\"\nassert solution(\"5 6\\n6 5 6 2 2\\n\") == \"NO\\n\"\nassert solution(\"3 5\\n0 0 0\\n\") == \"YES\\n5 4 2\\n\"\nassert solution(\"4 2\\n1 2 3 4\\n\") == \"NO\\n\"\nassert solution(\"1 1\\n0 1\\n\") == \"YES\\n1 1\\n\"\nassert solution(\"1 3\\n1 2 3\\n\") == \"NO\\n\"\nassert solution(\"4 4\\n4 3 4 2\\n\") == \"YES\\n4 4 4 4\\n\""
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('Input\\n4 3\\n1 0 2 3\\n\\nOutput\\nYES\\n1 2 2 3\\n\\nInput\\n3 10\\n10 10 10\\n\\nOutput\\nYES\\n10 10 10\\n\\nInput\\n5 6\\n6 5 6 2 2\\n\\nOutput\\nNO\\n\\nInput\\n3 5\\n0 0 0\\n\\nOutput\\nYES\\n5 4 2') == 'YES\\n1 2 2 3\\n\\nNO\\n\\nYES\\n5 4 2'\n\nassert solution('Input\\n3 10\\n10 10 10\\n\\nOutput\\nYES\\n10 10 10\\n\\nInput\\n5 6\\n6 5 6 2 2\\n\\nOutput\\nNO\\n\\nInput\\n3 5\\n0 0 0\\n\\nOutput\\nYES\\n5 4 2') == 'YES\\n5 4 2'\n\nassert solution('Input\\n5 6\\n6 5 6 2 2\\n\\nOutput\\nNO\\n\\nInput\\n3 5\\n0 0 0\\n\\nOutput\\nYES\\n5 4 2') == 'YES\\n5 4 2'"
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"YES\\n1 2 2 3\\n\"\nassert solution(stdin) == \"YES\\n10 10 10\\n\"\nassert solution(stdin) == \"YES\\n5 4 2\\n\""
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"YES\\n5 4 2\"\nassert solution() == \"NO\"\nassert solution() == \"YES\\n10 10 10\"\nassert solution() == \"YES\\n1 2 2 3\"\nassert solution() == \"YES\\n10 10 10\"\nassert solution() == \"YES\\n5 4 2\""
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n1 0 2 3\\n\") == \"YES\\n1 2 2 3\\n\"\nassert solution(\"3 10\\n10 10 10\\n\") == \"YES\\n10 10 10 \\n\"\nassert solution(\"5 6\\n6 5 6 2 2\\n\") == \"NO\\n\"\nassert solution(\"3 5\\n0 0 0\\n\") == \"YES\\n5 4 2\\n\"\n"
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n1 0 2 3\\n\") == \"YES\\n1 2 2 3\\n\"\nassert solution(\"3 10\\n10 10 10\\n\") == \"YES\\n10 10 10 \\n\"\nassert solution(\"5 6\\n6 5 6 2 2\\n\") == \"NO\\n\"\nassert solution(\"3 5\\n0 0 0\\n\") == \"YES\\n5 4 2 \\n\""
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"YES\\n1 2 2 3\\nYES\\n10 10 10\\nYES\\n5 4 2\""
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"Input\\n4 3\\n1 0 2 3\\nOutput\\nYES\\n1 2 2 3\\n\\nInput\\n3 10\\n10 10 10\\nOutput\\nYES\\n10 10 10 \\n\\nInput\\n5 6\\n6 5 6 2 2\\nOutput\\nNO\\n\\nInput\\n3 5\\n0 0 0\\nOutput\\nYES\\n5 4 2\") == \"YES\\n5 4 2\\nNO\\n\\nYES\\n10 10 10\\nYES\\n10 10 10\\nNO\\nYES\\n5 4 2\""
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"Input\\n4 3\\n1 0 2 3\\nOutput\\nYES\\n1 2 2 3\\n\\nInput\\n3 10\\n10 10 10\\nOutput\\nYES\\n10 10 10\\n\\nInput\\n5 6\\n6 5 6 2 2\\nOutput\\nNO\\n\\nInput\\n3 5\\n0 0 0\\nOutput\\nYES\\n5 4 2\") == \"YES\\n1 2 2 3\\nNO\\n\\nYES\\n10 10 10\\nYES\\n5 4 2\""
    },
    {
        "number": 3950,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('1\\n2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2') == '4 3 6 2'\nassert solution('2\\n1 1 1 1') == '1 1'\nassert solution('4\\n2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2') == '4 3 6 2'\n"
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(read_input(stdin)) == read_output(stdout)"
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"4 3 6 2\\n42\\n1 1\", \"The output is incorrect.\"\n"
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"4 3 6 2\\n42\\n1 1\\n1 1\", \"Test Failed\""
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == \"4 3 6 2\\n42\""
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"4 3 6 2\\n42\\n1 1\\n1 1\""
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\\n2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2\\n1\\n42\\n2\\n1 1 1 1\\n\") == \"4 3 6 2\\n42 1 1 1\\n\"\nassert solution(\"1\\n42\\n2\\n1 1 1 1\\n\") == \"42\\n\"\nassert solution(\"2\\n1 1 1 1\\n\") == \"1 1\\n\""
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == '4 3 6 2\\n42\\n1 1\\n1 1', \"Test 1\"\nassert solution(input()) == '1\\n1', \"Test 2\""
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\n    input_data = '''\n    4\n    2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2\n    '''\n) == '''\n4 3 6 2\n'''\n\nassert solution(\n    input_data = '''\n    1\n    42\n    '''\n) == '''\n42 \n'''\n\nassert solution(\n    input_data = '''\n    2\n    1 1 1 1\n    '''\n) == '''\n1 1\n'''"
    },
    {
        "number": 3951,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 1\\n1 2\\n1 3\\n\") == \"3\\n\"\nassert solution(\"3\\n1 1\\n2 1\\n3 1\\n\") == \"6\\n\"\nassert solution(\"4\\n2 1\\n2 2\\n3 1\\n3 2\\n\") == \"6\\n\""
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == 'Here is the code to test the correctness of solution:\\n\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n# Test cases\\nassert solution(\"3\\n1 1\\n1 2\\n1 3\\n\") == \"3\\n\" # 3 sets of 1 point each\\nassert solution(\"3\\n1 1\\n2 1\\n3 1\\n\") == \"6\\n\" # 6 sets of 1 point each\\nassert solution(\"4\\n2 1\\n2 2\\n3 1\\n3 2\\n\") == \"6\\n\" # 6 sets of 2 points each\\n\\n'\n"
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"3\", \"Example 1\"\nassert solution(input()) == \"6\", \"Example 2\"\nassert solution(input()) == \"6\", \"Example 3\""
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(stdin=\"3\\n1 1\\n1 2\\n1 3\\n\") == \"3\\n\", \"example 1\"\nassert solution(stdin=\"3\\n1 1\\n2 1\\n3 1\\n\") == \"6\\n\", \"example 2\"\nassert solution(stdin=\"4\\n2 1\\n2 2\\n3 1\\n3 2\\n\") == \"6\\n\", \"example 3\"\n"
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3\\n1 1\\n1 2\\n1 3') == '3\\n'\nassert solution('3\\n1 1\\n2 1\\n3 1') == '6\\n'\nassert solution('4\\n2 1\\n2 2\\n3 1\\n3 2') == '6\\n'"
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == \"3\", \"Your solution is incorrect.\"\nassert solution(input()) == \"6\", \"Your solution is incorrect.\"\nassert solution(input()) == \"6\", \"Your solution is incorrect.\""
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == 3\nassert solution() == 6\nassert solution() == 6"
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output(), f\"Test failed for {input()} and expected output {output()}\"\n\nn = int(input())\npoints = [list(map(int, input().split())) for _ in range(n)]"
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == expected_output, f\"Your code is incorrect. \\nExpected output: {expected_output} \\nActual output: {solution}.\""
    },
    {
        "number": 3952,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n1 1\\n1 2\\n1 3') == '3\\n'\nassert solution('3\\n1 1\\n2 1\\n3 1') == '6\\n'\nassert solution('4\\n2 1\\n2 2\\n3 1\\n3 2') == '6\\n'\nassert solution('') == ''\n"
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3\\n.E.\\nE.E.\\n.E.\\n') == '1 1\\n2 2\\n3 3\\n'\nassert solution('3\\nEEE\\nE..\\nE.E\\n') == '-1\\n'\nassert solution('5\\nEE.EE\\nE.EE.\\nE...E\\n.EE.E\\nEE.EE\\n') == '3 3\\n1 3\\n2 2\\n4 4\\n5 3\\n'"
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n.E.\\nE.E\\n.E.\\n\") == \"1 1\\n2 2\\n3 3\\n\"\nassert solution(\"3\\nEEE\\nE..\\nE.E\\n\") == \"-1\\n\"\nassert solution(\"5\\nEE.EE\\nE.EE.E\\nE...E\\n.EE.E\\nEE.EE\\n\") == \"3 3\\n1 3\\n2 2\\n4 4\\n5 3\\n\""
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n.E.\\nE.E\\n.E.\\n\") == \"1 1\\n2 2\\n3 3\\n\"\nassert solution(\"3\\nEEE\\nE..\\nE.E\\n\") == \"-1\\n\"\nassert solution(\"5\\nEE.EE\\nE.EE.E\\nE...E\\n.EE.E\\nEE.EE\\n\") == \"3 3\\n1 3\\n2 2\\n4 4\\n5 3\\n\""
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n.E.\\nE.E\\n.E.\") == \"1 1\\n2 2\\n3 3\"\nassert solution(\"3\\nEEE\\nE..\\nE.E\") == \"-1\"\nassert solution(\"5\\nEE.EE\\nE.EE.\\nE...E\\n.EE.E\\nEE.EE\") == \"3 3\\n1 3\\n2 2\\n4 4\\n5 3\""
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"\"\"3\n.E.\nE.E\n.E.\"\"\") == '1 1\\n2 2\\n3 3'\n\nassert solution(\"\"\"3\nEEE\nE..\nE.E\n\"\"\") == '-1'\n\nassert solution(\"\"\"5\nEE.EE\nE.EE.\nE...E\n.EE.E\nEE.EE\n\"\"\") == '3 3\\n1 3\\n2 2\\n4 4\\n5 3'"
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n.E.\\nE.E\\n.E.\\n') == '1 1\\n2 2\\n3 3'\nassert solution('3\\nEEE\\nE..\\nE.E\\n') == '-1'\nassert solution('5\\nEE.EE\\nE.EE.E\\nE...E\\n.EE.E\\nEE.EE\\n') == '3 3\\n1 3\\n2 2\\n4 4\\n5 3'"
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n.E.\\nE.E.\\n.E.\\n') == ['1 1', '2 2', '3 3']\nassert solution('3\\nEEE\\nE..\\nE.E.\\n') == ['-1']\nassert solution('5\\nEE.EE\\nE.EE.\\nE...E\\n.EE.E\\nEE.EE\\n') == ['3 3', '1 3', '2 2', '4 4', '5 3']"
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n.E.\\nE.E\\n.E.\\n\") == \"1 1\\n2 2\\n3 3\\n\"\nassert solution(\"3\\nEEE\\nE..\\nE.E\\n\") == \"-1\\n\"\nassert solution(\"5\\nEE.EE\\nE.EE.\\nE...E\\n.EE.E\\nEE.EE\\n\") == \"3 3\\n1 3\\n2 2\\n4 4\\n5 3\\n\""
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n.E.\\nE.E\\n.E.\\n') == '1 1\\n2 2\\n3 3\\n'\nassert solution('3\\nEEE\\nE..\\nE.E\\n') == '-1\\n'\nassert solution('5\\nEE.EE\\nE.EE.E\\nE...E\\n.EE.E\\nEE.EE\\n') == '3 3\\n1 3\\n2 2\\n4 4\\n5 3\\n'"
    },
    {
        "number": 3953,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''\n    3\n        .E.\n        E.E\n        .E.\n''') == '1 1\\n2 2\\n3 3'\n\nassert solution('''\n    3\n        EEE\n        E..\n        E.E\n        E.EE\n        EE.EE\n        E.EE\n        EEE\n''') == '-1'\n\nassert solution('''\n    5\n        EE.EE\n        E.EE.\n        E...E\n        .EE.E\n        EE.EE\n        .EE.E\n        E...E\n        EE.EE\n        E.EE.\n        E.EE.\n        E...E\n        EE.EE\n        E.EE.\n        E.EE.\n        E...E\n        EE.EE\n        E.EE.\n        E.EE.\n        E...E\n        EE.EE\n        E.EE.\n        E.EE.\n        E...E\n        EE.EE\n        E.EE.\n        E.EE.\n        E...E\n        EE.EE\n        E.EE.\n        E.EE.\n        E...E\n        EE.EE\n        E.EE.\n        E.EE.\n        E...E\n        EE.EE\n        E.EE.\n        E.EE.\n        E...E\n        EE.EE\n        E.EE.\n        E.EE.\n        E...E\n        EE.EE\n        E.EE.\n        E.EE.\n        E...E\n        EE.EE\n        E.EE.\n        E.EE.\n        E...E\n        EE.EE\n        E.EE.\n        E.EE.\n        E...E\n        EE.EE\n        E.EE.\n        E.EE.\n        E...E\n        EE.EE\n        E.EE.\n        E.EE.\n        E...E\n        EE.EE\n        E.EE.\n        E.EE.\n        E...E\n        EE.EE\n        E.EE.\n        E.EE.\n        E...E\n        EE.EE\n        E.EE.\n        E.EE.\n        E...E\n        EE.EE\n        E.EE.\n        E.EE.\n        E...E\n        EE.EE\n        E.EE.\n        E.EE.\n        E...E\n        EE.EE\n        E.EE.\n        E.EE.\n        E...E\n        EE.EE\n        E.EE.\n        E.EE.\n        E...E\n        EE.EE\n        E.EE.\n        E.EE.\n        E...E\n        EE.EE\n        E.EE.\n        E.EE.\n        E...E\n        EE.EE\n        E.EE.\n        E.EE.\n        E...E\n        EE.EE\n        E.EE.\n        E.EE.\n        E...E\n        EE.EE\n        E.EE.\n        E.EE.\n        E...E\n        EE.EE\n        E.EE.\n        E.EE.\n        E...E\n        EE.EE\n        E.EE.\n        E.EE.\n        E...E\n        EE.EE\n        E.EE.\n        E.EE.\n        E...E\n        EE.EE\n        E.EE.\n        E.EE.\n        E...E\n        EE.EE\n        E.EE.\n        E.EE.\n        E...E\n        EE.EE\n        E.EE.\n        E.EE.\n        E...E\n        EE.EE\n        E.EE.\n        E.EE.\n        E...E\n        EE.EE\n        E.EE.\n        E.EE.\n        E...E\n        EE.EE\n        E.EE.\n        E.EE.\n        E...E\n        EE.EE\n        E.EE.\n        E.EE.\n        E...E\n        EE.EE\n        E.EE.\n        E.EE.\n        E...E\n        EE.EE\n        E.EE.\n        E.EE.\n        E...E\n        EE.EE\n        E.EE.\n        E.EE.\n        E...E\n        EE.EE\n        E.EE.\n        E.EE.\n        E...E\n        EE.EE\n        E.EE.\n        E.EE.\n    "
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('10 2\\n10 -1 2 2 2 2 2 2 -1 10') == '32'\nassert solution('5 10\\n-1 -1 -1 -1 -1') == '-1'"
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, f\"Input {input()} and Output {output} are not matching.\""
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"32\\n\"\n\nsolution(stdin)"
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\""
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"32\""
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"32\""
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == 'Output\\n32\\n', \"Incorrect output for the given input.\""
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 2\\n10 -1 2 2 2 2 2 2 -1 10\") == \"32\"\nassert solution(\"5 10\\n-1 -1 -1 -1 -1\") == \"-1\""
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"32\\n\", \"Test 1 failed\""
    },
    {
        "number": 3954,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"32\\n\", \"Error: Please provide the correct input.\"\n\nfrom typing import List"
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Output\\n3\\n\"\n"
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == 'Output\\n79'"
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Your code is incorrect. Please check the provided code and the given examples.\""
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Output the maximum value of a bitwise OR of sequence elements after performing operations.\""
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 1 2\\n1 1 1\\n\") == \"3\"\nassert solution(\"4 2 3\\n1 2 4 8\\n\") == \"79\""
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 1 2\\n1 1 1\") == \"3\"\nassert solution(\"4 2 3\\n1 2 4 8\") == \"79\""
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 1 2\\n1 1 1\") == \"3\\n\"\nassert solution(\"4 2 3\\n1 2 4 8\") == \"79\\n\""
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 1 2\\n1 1 1\\n\") == \"3\"\nassert solution(\"4 2 3\\n1 2 4 8\\n\") == \"79\""
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 1 2\\n1 1 1\\n\") == \"3\"\nassert solution(\"4 2 3\\n1 2 4 8\\n\") == \"79\""
    },
    {
        "number": 3955,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 1 2\\n1 1 1\\n\") == \"3\"\nassert solution(\"4 2 3\\n1 2 4 8\\n\") == \"79\""
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n\") == \"7\\n7\\n4\\n7\\n7\\n\"\nassert solution(\"5 5\\n\") == \"25\\n25\\n10\\n25\\n25\\n\"\nassert solution(\"4 6\\n\") == \"12\\n12\\n6\\n12\\n12\\n\"\nassert solution(\"6 10\\n\") == \"24\\n24\\n4\\n24\\n24\\n\"\nassert solution(\"5 10\\n\") == \"40\\n40\\n20\\n40\\n40\\n\"\nassert solution(\"5 6\\n\") == \"20\\n20\\n12\\n20\\n20\\n\"\nassert solution(\"6 7\\n\") == \"20\\n20\\n14\\n20\\n20\\n\"\nassert solution(\"6 10\\n\") == \"35\\n35\\n6\\n35\\n35\\n\"\n"
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"1 1\\n\") == \"1\\n1\\n1\"\nassert solution(\"5 5\\n\") == \"45\"\nassert solution(\"10 10\\n\") == \"1410555903\""
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"4 4\") == \"14\\n14\\n7\\n14\\n14\"\nassert solution(\"6 5\") == \"24\\n24\\n12\\n24\\n24\"\nassert solution(\"10 10\") == \"106\\n106\\n56\\n106\\n106\""
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"7\\n7\\n4\\n7\\n7\\n\""
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n\") == \"7\\n7\\n4\\n7\\n7\\n\"\nassert solution(\"5 3\\n\") == \"7\\n7\\n4\\n7\\n7\\n\"\nassert solution(\"1 3\\n\") == \"7\\n7\\n4\\n7\\n7\\n\"\nassert solution(\"4 2\\n\") == \"7\\n7\\n4\\n7\\n7\\n\"\nassert solution(\"1 2\\n\") == \"7\\n7\\n4\\n7\\n7\\n\"\nassert solution(\"2 2\\n\") == \"7\\n7\\n4\\n7\\n7\\n\""
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Expected output: {expected_output}\\nGot output: {solution(input())}\""
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 3\") == \"7\\n7\\n4\\n7\\n7\\n\"\nassert solution(\"4 4\") == \"8\\n8\\n4\\n8\\n8\\n\"\nassert solution(\"5 5\") == \"5\\n5\\n10\\n5\\n5\\n\"\nassert solution(\"3 10\") == \"37\\n37\\n10\\n37\\n37\\n\""
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 3\") == \"7\\n7\\n4\\n7\\n7\"\nassert solution(\"5 4\") == \"2\\n1\\n2\\n1\\n2\"\nassert solution(\"10 5\") == \"7685\\n257\\n125\\n125\\n7685\"\nassert solution(\"20 3\") == \"320\\n160\\n80\\n80\\n320\""
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == '7\\n7\\n4\\n7\\n7'"
    },
    {
        "number": 3956,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"7\\n7\\n4\\n7\\n7\"\n"
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1 5 6 2\\n1 3\\n3 2\\n4 5\\n3 7\\n4 3\\n4 6\\n\") == \"6\\n\"\nassert solution(\"9 3\\n3 2 1 6 5 9\\n8 9\\n3 2\\n2 7\\n3 4\\n7 6\\n4 5\\n2 1\\n2 8\\n\") == \"9\\n\""
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 2\\n1 5 6 2\\n1 3\\n3 2\\n4 5\\n3 7\\n4 3\\n4 6\\n\") == \"6\\n\"\nassert solution(\"9 3\\n3 2 1 6 5 9\\n8 9\\n3 2\\n2 7\\n3 4\\n7 6\\n4 5\\n2 1\\n2 8\\n\") == \"9\\n\""
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 2\\n1 5 6 2\\n1 3\\n3 2\\n4 5\\n3 7\\n4 3\\n4 6\") == \"6\"\nassert solution(\"9 3\\n3 2 1 6 5 9\\n8 9\\n3 2\\n2 7\\n3 4\\n7 6\\n4 5\\n2 1\\n2 8\") == \"9\"\n"
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"7 2\\n1 5 6 2\\n1 3\\n3 2\\n4 5\\n3 7\\n4 3\\n4 6\") == \"6\"\nassert solution(\"9 3\\n3 2 1 6 5 9\\n8 9\\n3 2\\n2 7\\n3 4\\n7 6\\n4 5\\n2 1\\n2 8\") == \"9\"\n"
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_str) == output_str, f\"Test failed. Input: {input_str}, Output: {output_str}\""
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('''7 2\n1 5 6 2\n1 3\n3 2\n4 5\n3 7\n4 3\n4 6''') == '6\\n'\n\nassert solution('''9 3\n3 2 1 6 5 9\n8 9\n3 2\n2 7\n3 4\n7 6\n4 5\n2 1\n2 8''') == '9\\n'"
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 2\\n1 5 6 2\\n1 3\\n3 2\\n4 5\\n3 7\\n4 3\\n4 6\\n\") == \"6\\n\"\n\nassert solution(\"9 3\\n3 2 1 6 5 9\\n8 9\\n3 2\\n2 7\\n3 4\\n7 6\\n4 5\\n2 1\\n2 8\\n\") == \"9\\n\"\n\nassert solution(\"7 5\\n3 5 8\\n6 3\\n1 9\\n2 8\\n\") == \"6\\n\"\n\nassert solution(\"1 1\\n2 2\\n3 3\\n\") == \"3\\n\"\n\nassert solution(\"5 1\\n2 3\\n4 5\\n\") == \"1\\n\""
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('7 2\\n1 5 6 2\\n1 3\\n3 2\\n4 5\\n3 7\\n4 3\\n4 6\\n') == '6\\n'\nassert solution('9 3\\n3 2 1 6 5 9\\n8 9\\n3 2\\n2 7\\n3 4\\n7 6\\n4 5\\n2 1\\n2 8\\n') == '9\\n'\nassert solution('10 5\\n1 2 3 4 5\\n2 3 4 5 6\\n3 4 5 6 7\\n4 5 6 7 8\\n5 6 7 8 9\\n') == '10\\n'"
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"\"\"7 2\n1 5 6 2\n1 3\n3 2\n4 5\n3 7\n4 3\n4 6\"\"\") == \"6\\n\"\n\nassert solution(\"\"\"9 3\n3 2 1 6 5 9\n8 9\n3 2\n2 7\n3 4\n7 6\n4 5\n2 1\n2 8\"\"\") == \"9\\n\""
    },
    {
        "number": 3957,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(sample_input) == '6', \"Incorrect output. Expected: 6, got: \" + solution(sample_input)"
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"\") == -1\nassert solution(\"0010100\") == 3\nassert solution(\"111\") == -1"
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"\") == -1"
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == -1"
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('0010100') == '3\\n3 1 3 4\\n3 2 5 6\\n1 7'\nassert solution('111') == '-1'"
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"0010100\") == \"3\\n3 1 3 4\\n3 2 5 6\\n1 7\"\nassert solution(\"111\") == \"-1\""
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"0010100\") == \"3\\n3 1 3 4\\n3 2 5 6\\n1 7\"\nassert solution(\"111\") == \"-1\""
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"0010100\") == \"3\\n3 1 3 4\\n3 2 5 6\\n1 7\""
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"0010100\") == 3\nassert solution(\"111\") == -1"
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"0010100\") == \"3\\n3 1 3 4\\n3 2 5 6\\n1 7\""
    },
    {
        "number": 3958,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('0010100') == 3\nassert solution('111') == -1\n"
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1\", \"Expected: 1\\nActual: \" + solution(stdin)"
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('Input\\n2 3\\n2 1 2\\n2 2 3\\n') == '1\\n'\nassert solution('Input\\n1 3\\n3 1 2 3\\n') == '6\\n'\nassert solution('Input\\n2 4\\n2 1 2\\n3 2 3 4\\n') == '2\\n'\nassert solution('Input\\n2 2\\n3 2 2 1\\n2 1 2\\n') == '1\\n'\nassert solution('Input\\n3 7\\n2 1 2\\n2 3 4\\n3 5 6 7\\n') == '24\\n'"
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n2 1 2\\n2 2 3\") == \"1\\n\"\nassert solution(\"1 3\\n3 1 2 3\\n\") == \"6\\n\"\nassert solution(\"2 4\\n2 1 2\\n3 2 3 4\\n\") == \"2\\n\"\nassert solution(\"2 2\\n3 2 2 1\\n2 1 2\\n\") == \"1\\n\"\nassert solution(\"3 7\\n2 1 2\\n2 3 4\\n3 5 6 7\\n\") == \"24\\n\""
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\n2 1 2\\n2 2 3\") == \"1\\n\"\nassert solution(\"1 3\\n3 1 2 3\\n\") == \"6\\n\"\nassert solution(\"2 4\\n2 1 2\\n3 2 3 4\\n\") == \"2\\n\"\nassert solution(\"2 2\\n3 2 2 1\\n2 1 2\\n\") == \"1\\n\"\nassert solution(\"3 7\\n2 1 2\\n2 3 4\\n3 5 6 7\\n\") == \"24\\n\""
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n2 1 2\\n2 2 3\") == \"1\"\nassert solution(\"1 3\\n3 1 2 3\\n\") == \"6\"\nassert solution(\"2 4\\n2 1 2\\n3 2 3 4\\n\") == \"2\"\nassert solution(\"2 2\\n3 2 2 1\\n2 1 2\\n\") == \"1\"\nassert solution(\"3 7\\n2 1 2\\n2 3 4\\n3 5 6 7\\n\") == \"24\"\n"
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"1\", \"The given input is incorrect.\"\nassert solution(\"2 3\\n2 1 2\\n2 2 3\\n\") == \"1\", \"The given input is incorrect.\"\nassert solution(\"1 3\\n3 1 2 3\\n\") == \"6\", \"The given input is incorrect.\"\nassert solution(\"2 4\\n2 1 2\\n3 2 3 4\\n\") == \"2\", \"The given input is incorrect.\"\nassert solution(\"2 2\\n3 2 2 1\\n2 1 2\\n\") == \"1\", \"The given input is incorrect.\"\nassert solution(\"3 7\\n2 1 2\\n2 3 4\\n3 5 6 7\\n\") == \"24\", \"The given input is incorrect.\""
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2 3\\n2 1 2\\n2 2 3\\n') == '1\\n'\nassert solution('1 3\\n3 1 2 3\\n') == '6\\n'\nassert solution('2 4\\n2 1 2\\n3 2 3 4\\n') == '2\\n'\nassert solution('2 2\\n3 2 2 1\\n2 1 2\\n') == '1\\n'\nassert solution('3 7\\n2 1 2\\n2 3 4\\n3 5 6 7\\n') == '24\\n'\n"
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(2, 3) == 1\nassert solution(1, 3) == 6\nassert solution(2, 4) == 2\nassert solution(2, 2) == 1\nassert solution(3, 7) == 24\n"
    },
    {
        "number": 3959,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"1\\n\", \"The correct answer is 1.\"\nassert solution() == \"6\\n\", \"The correct answer is 6.\"\nassert solution() == \"2\\n\", \"The correct answer is 2.\"\nassert solution() == \"1\\n\", \"The correct answer is 1.\"\nassert solution() == \"24\\n\", \"The correct answer is 24.\""
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 4 2 3 1\\n4\\n1 5 4 7\\n\") == \"3\\n\"\nassert solution(\"4\\n1 5 4 7\\n\") == \"6\\n\"\nassert solution(\"5\\n1 4 2 3 1\\n4\\n1 5 4 7\\n\") == \"6\\n\""
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('5\\n1 4 2 3 1\\n\\n4\\n1 5 4 7\\n\\n') == '3\\n6\\n'\nassert solution('4\\n1 5 4 7\\n\\n') == '6\\n'\nassert solution('5\\n1 4 2 3 1\\n\\n4\\n1 5 4 7\\n\\n5\\n2 6 5 8 3\\n\\n') == '3\\n6\\n'"
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == expected, f\"Expected {expected}, got {solution(input())}\""
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 4 2 3 1\\n4\\n1 5 4 7\\n\") == \"3\\n\"\nassert solution(\"4\\n1 5 4 7\\n\") == \"6\\n\"\nassert solution(\"1\\n1 1\\n\") == \"1\\n\""
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 4 2 3 1\\n\") == \"3\\n\"\nassert solution(\"4\\n1 5 4 7\\n\") == \"6\\n\""
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(3) == \"3\"\nassert solution(4) == \"6\"\n"
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\n    '''\n    5\n    1 4 2 3 1\n    ''') == '3'\n\nassert solution(\n    '''\n    4\n    1 5 4 7\n    ''') == '6'"
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output, f\"Testcase failed: {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3960,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 4 2 3 1\\n4\\n1 5 4 7\") == \"3\"\nassert solution(\"4\\n1 5 4 7\") == \"6\""
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"4\\n\"\nassert solution(\"4\\n1 1 2 3\\n\") == \"20\\n\"\nassert solution(\"5\\n1 1 1 1 1\\n\") == \"62\\n\"\n"
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution() == 20, \"Expected output: 20\""
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 4, \"The solution is incorrect.\""
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n') == '4'\nassert solution('4\\n1 1 2 3\\n') == '20'\nassert solution('5\\n1 1 1 1 1\\n') == '62'"
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == output, f\"Your solution is incorrect. Expected {output}, but got {solution(stdin)}\""
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"Output\", \"Your solution should return the output of the test case.\""
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output, f\"Expected {output}, got {solution(input())}\""
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('2\\n1 2\\n') == '4\\n'\nassert solution('4\\n1 1 2 3\\n') == '20\\n'\nassert solution('5\\n1 1 1 1 1\\n') == '62\\n'"
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('2\\n1 2\\n') == '4'\nassert solution('4\\n1 1 2 3\\n') == '20'\nassert solution('5\\n1 1 1 1 1\\n') == '62'"
    },
    {
        "number": 3961,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == 20, \"The output should be 20, but it is \" + str(solution())\n"
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"6\", \"The correct output should be: 6\"\n\nassert solution() == \"15\", \"The correct output should be: 15\"\n\nassert solution() == \"7\", \"The correct output should be: 7\""
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('1 1\\n1 1\\n1 1\\n') == '6\\n'\nassert solution('4\\n1 2\\n2 1\\n3 5\\n5 3\\n') == '15\\n'\nassert solution('1\\n5 6\\n') == '7\\n'"
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 1\\n1 1\\n1 1\\n\") == \"6\"\nassert solution(\"4\\n1 2\\n2 1\\n3 5\\n5 3\\n\") == \"15\"\nassert solution(\"1\\n5 6\\n\") == \"7\"\nassert solution(\"\") == \"0\"\nassert solution(\"3\\n1 1\\n2 2\\n1 1\\n\") == \"6\"\nassert solution(\"4\\n1 2\\n2 1\\n3 5\\n5 3\\n\") == \"15\"\nassert solution(\"1\\n5 6\\n\") == \"7\""
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n1\\n1\\n\") == \"6\"\nassert solution(\"4\\n1 2\\n2 1\\n3 5\\n5 3\\n\") == \"15\"\nassert solution(\"1\\n5 6\\n\") == \"7\""
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output(), \"Your solution is incorrect\""
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 1\\n1 1\\n1 1\\n\") == \"6\"\nassert solution(\"4\\n1 2\\n2 1\\n3 5\\n5 3\\n\") == \"15\"\nassert solution(\"1\\n5 6\\n\") == \"7\""
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution() == \"7\", \"Expected: 7, Actual: {}\".format(solution())\nassert solution() == \"15\", \"Expected: 15, Actual: {}\".format(solution())\nassert solution() == \"6\", \"Expected: 6, Actual: {}\".format(solution())"
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\n    '''\n    3\n    1 1\n    1 1\n    1 1\n    '''\n) == '6'\n\nassert solution(\n    '''\n    4\n    1 2\n    2 1\n    3 5\n    5 3\n    '''\n) == '15'\n\nassert solution(\n    '''\n    1\n    5 6\n    '''\n) == '7'"
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input) == expected, f\"Expected {expected}, got {solution(input)}\""
    },
    {
        "number": 3962,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 1\\n1 1\\n1 1\") == \"6\"\nassert solution(\"4\\n1 2\\n2 1\\n3 5\\n5 3\") == \"15\"\nassert solution(\"1\\n5 6\") == \"7\"\nassert solution(\"5\\n1 2\\n3 4\\n5 6\") == \"16\"\n"
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 1"
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1\\n4\\n2\\n\\n10000\\n\") == \"1\\n\"\nassert solution(\"2\\n1\\n4 4\\n2\\n\\n10000\\n\") == \"3\\n\"\nassert solution(\"3\\n3 3\\n10 10 10\\n17\\n\\n10000\\n\") == \"6\\n\""
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1\\n4\\n2\\n\") == \"1\\n\"\nassert solution(\"2\\n1\\n4 4\\n2\\n\") == \"3\\n\"\nassert solution(\"3\\n3 3\\n10 10 10\\n17\\n\") == \"6\\n\""
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\n\na = [int(x) for x in input().split()]\nb = [int(x) for x in input().split()]\n\ntotal_coins = sum(a)\ntotal_tugricks = total_coins * 20\n\nways = 1\nfor i in range(1, len(a) + 1):\n    coin_amount = total_coins // i\n    if coin_amount == 0:\n        ways *= ways\n        break\n    else:\n        ways *= coin_amount\n        total_tugricks -= coin_amount\n        if total_tugricks < 0:\n            break\n\nways = (ways - 1) % (10**9 + 7)\n\nprint(ways)"
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution() == \"1\\n\", \"The solution should be 1.\"\nassert solution() == \"3\\n\", \"The solution should be 3.\"\nassert solution() == \"6\\n\", \"The solution should be 6.\""
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1\\n4\\n2\\n\") == \"1\"\nassert solution(\"2\\n1\\n4 4\\n2\\n\") == \"3\"\nassert solution(\"3\\n3 3\\n10 10 10\\n17\\n\") == \"6\""
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n4\\n2\\n\\n2\") == \"1\"\nassert solution(\"2\\n1\\n4 4\\n2\\n\") == \"3\"\nassert solution(\"3\\n3 3\\n10 10 10\\n17\\n\") == \"6\"\n"
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Output: {solution(input())}, Expected: {output}\""
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"1\\n4\\n2\\n\") == \"1\"\nassert solution(\"2\\n1\\n4\\n4\\n\") == \"1\"\nassert solution(\"3\\n3\\n3\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"2\\n4\\n8\\n\") == \"3\"\nassert solution(\"3\\n9\\n27\\n\") == \"6\""
    },
    {
        "number": 3963,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output, f\"Input: {input()}, Output: {output}\""
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == output\n"
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 3 3 100\\n1 1 1') == '10'\nassert solution('3 6 5 1000000007\\n1 2 3') == '0'\nassert solution('3 5 6 11\\n1 2 1') == '0'"
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 3 3 100\\n1 1 1\") == \"10\"\nassert solution(\"3 6 5 1000000007\\n1 2 3\") == \"0\"\nassert solution(\"3 5 6 11\\n1 2 1\") == \"0\""
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == '10'\nassert solution() == '0'\nassert solution() == '0'\n\nprint(solution())"
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Solution is incorrect. Expected {expected_output}, got {solution(input())}\""
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 3 3 100\\n1 1 1\") == \"10\"\nassert solution(\"3 6 5 1000000007\\n1 2 3\") == \"0\"\nassert solution(\"3 5 6 11\\n1 2 1\") == \"0\""
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin='3 3 3 100\\n1 1 1\\n') == '10\\n'\nassert solution(stdin='3 6 5 1000000007\\n1 2 3\\n') == '0\\n'\nassert solution(stdin='3 5 6 11\\n1 2 1\\n') == '0\\n'"
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 3 3 100\\n1 1 1') == '10'\nassert solution('3 6 5 1000000007\\n1 2 3') == '0'\nassert solution('3 5 6 11\\n1 2 1') == '0'"
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '10', 'Test case 1 failed'"
    },
    {
        "number": 3964,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"10\", \"Expected output is 10, got \" + solution(input())"
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Input\\n3\\n2 2 3\\nintel\\ncode\\nch allenge\") == \"YES\"\nassert solution(\"Input\\n4\\n1 2 3 1\\na\\nbcdefghi\\njklmnopqrstu\\nvwxyz\") == \"NO\"\nassert solution(\"Input\\n4\\n13 11 15 15\\ntobel or not to be that is the question\\nwhether tis nobler in the mind to suffer\\nthe slings and arrows of outrageous fortune\\nor to take arms against a sea of troubles\") == \"YES\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2 2 3\\nintel\\ncode\\nch allenge\") == \"YES\"\nassert solution(\"4\\n1 2 3 1\\na\\nbcdefghi\\njklmnopqrstu\\nvwxyz\") == \"NO\"\nassert solution(\"4\\n13 11 15 15\\nto be or not to be that is the question\\nwhether tis nobler in the mind to suffer\\the slings and arrows of outrageous fortune\\nor to take arms against a sea of troubles\") == \"YES\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3\n2 2 3\nintel\ncode\nch allenge\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"\n4\n1 2 3 1\na\nbcdefghi\njklmnopqrstu\nvwxyz\n\"\"\") == \"NO\"\n\nassert solution(\"\"\"\n4\n13 11 15 15\nto be or not to be that is the question\nwhether tis nobler in the mind to suffer\nthe slings and arrows of outrageous fortune\nor to take arms against a sea of troubles\n\"\"\") == \"YES\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Input\\n4\\n1 2 3 1\\na\\nbcd\\ncdefghi\\njklmnopqrstuvwxyz\\n\\nOutput\\nYES\\n\\nInput\\n4\\n13 11 15 15\\nto be or not to be that is the question\\nwhether tis nobler in the mind to suffer\\nthe slings and arrows of outrageous fortune\\nor to take arms against a sea of troubles\\n\\nOutput\\nYES\\n\") == \"YES\"\n\nassert solution(\"Input\\n4\\n13 11 15 15\\nto be or not to be that is the question\\nwhether tis nobler in the mind to suffer\\nthe slings and arrows of outrageous fortune\\nor to take arms against a sea of troubles\\n\\nOutput\\nNO\\n\\nInput\\n3\\n2 2 3\\nintel\\ncode\\nch allenge\\n\\nOutput\\nYES\\n\") == \"NO\"\n\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n2 2 3\\nintel\\ncode\\nch allenge\") == \"YES\\n\"\nassert solution(\"4\\n1 2 3 1\\na\\nbcdefghi\\njklmnopqrstu\\nvwxyz\\n\") == \"NO\\n\"\nassert solution(\"4\\n13 11 15 15\\nto be or not to be that is the question\\nwhether tis nobler in the mind to suffer\\nthe slings and arrows of outrageous fortune\\nor to take arms against a sea of troubles\\n\") == \"YES\\n\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"intel\") == \"YES\"\nassert solution(\"code\") == \"NO\"\nassert solution(\"ch allenge\") == \"YES\"\nassert solution(\"a b c d e f g h i j k l m n o p q r s t u v w x y z\") == \"NO\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == \"YES\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n2 2 3\\nintel\\ncode\\nch allenge\") == \"YES\"\nassert solution(\"4\\n1 2 3 1\\na\\nbcdefghi\\njklmnopqrstu\\nvwxyz\") == \"NO\"\nassert solution(\"4\\n13 11 15 15\\nto be or not to be that is the question\\nwhether tis nobler in the mind to suffer\\nthe slings and arrows of outrageous fortune\\nor to take arms against a sea of troubles\") == \"YES\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(open('input.txt', 'r').read()) == 'YES', \"Solution should return 'YES' for sample input\"\n\nassert solution(open('sample_input.txt', 'r').read()) == 'NO', \"Solution should return 'NO' for sample input\"\n\nassert solution(open('large_input.txt', 'r').read()) == 'YES', \"Solution should return 'YES' for large input\""
    },
    {
        "number": 3965,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3\\n2 2 3\\nintel\\ncode\\nch allenge') == 'YES'\nassert solution('4\\n1 2 3 1\\na\\nbcdefghi\\njklmnopqrstu\\nvwxyz') == 'NO'\nassert solution('4\\n13 11 15 15\\nto be or not to be that is the question\\nwhether tis nobler in the mind to suffer\\nthe slings and arrows of outrageous fortune\\nor to take arms against a sea of troubles') == 'YES'\n"
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3 1 5\") == \"26\\n\", \"Output does not match expected output\"\nassert solution(\"1\\n10\") == \"10\\n\", \"Output does not match expected output\"\n\nassert solution(\"1\\n10\") == \"10\\n\", \"Output does not match expected output\""
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3 1 5\") == \"26\\n\"\nassert solution(\"1\\n10\") == \"10\\n\""
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n3 1 5\") == \"26\\n\"\nassert solution(\"1\\n10\") == \"10\\n\""
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3\\n3 1 5\\n\") == \"26\"\nassert solution(\"1\\n10\\n\") == \"10\""
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\\n3 1 5\") == \"26\\n\"\nassert solution(\"1\\n10\") == \"10\\n\""
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n3 1 5\") == \"26\\n\"\nassert solution(\"1\\n10\") == \"10\\n\""
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n3 1 5') == '26\\n'\nassert solution('1\\n10') == '10\\n'"
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n3 1 5\") == \"26\\n\", \"Incorrect output for example 1\"\nassert solution(\"1\\n10\") == \"10\\n\", \"Incorrect output for example 2\""
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3\\n3 1 5\\n') == '26\\n'\nassert solution('1\\n10\\n') == '10\\n'"
    },
    {
        "number": 3966,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output(), f\"The solution is incorrect, expected {output()}, got {solution(input())}.\""
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\n1 3 5\") == \"3\\n\"\nassert solution(\"3 40\\n10 30 50\") == \"32\\n\""
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4\\n1 3 5\\n\") == \"3\"\nassert solution(\"3 40\\n10 30 50\\n\") == \"32\""
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 4\\n1 3 5\\n') == '3\\n'\nassert solution('3 40\\n10 30 50\\n') == '32\\n'"
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('3 4\\n1 3 5\\n') == '3'\nassert solution('3 40\\n10 30 50\\n') == '32'"
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 4\\n1 3 5\\n\") == \"3\\n\"\nassert solution(\"3 40\\n10 30 50\\n\") == \"32\\n\""
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == expected_output, f\"Test failed. Expected output: {expected_output}, Got: {solution(input())}\""
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4\\n1 3 5\") == \"3\"\nassert solution(\"3 40\\n10 30 50\") == \"32\""
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\n1 3 5\") == \"3\\n\"\nassert solution(\"3 40\\n10 30 50\") == \"32\\n\""
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 4\") == \"3\\n\"\nassert solution(\"3 40\") == \"32\\n\""
    },
    {
        "number": 3967,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('''3 4\n1 3 5\n''') == '3\\n'\n\nassert solution('''3 40\n10 30 50\n''') == '32\\n'"
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"1 4 5 6 7 8 9\", \"The output is incorrect.\""
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"9 1\\n1 1\\n5 10\\n1 3\\n11 14\\n5 5\\n10 10\\n3 6\\n6 12\\n7 7\\n4 11\\n\") == [\"1\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"]"
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"1 4 5 6 7 8 9\\n\", \"Testcase 1 failed\"\nassert solution(stdin) == \"1 2 4\\n\", \"Testcase 2 failed\"\nassert solution(stdin) == \"1\\n\", \"Testcase 3 failed\""
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"9 1\\n1 1\\n5 10\\n1 3\\n11 14\\n5 5\\n10 10\\n3 6\\n6 12\\n7 7\\n4 11\") == \"1 4 5 6 7 8 9\\n\"\nassert solution(\"5 1\\n1 1\\n3 3\\n2 3\\n1 2\\n3 4\\n4 5\\n\") == \"1 2 4\\n\"\nassert solution(\"5 1\\n1 1\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5\\n\") == \"1 2\\n\""
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('9 1\\n1 1\\n5 10\\n1 3\\n11 14\\n5 5\\n10 10\\n3 6\\n6 12\\n7 7\\n4 11\\n') == '1 4 5 6 7 8 9\\n'\nassert solution('5 1\\n1 1\\n3 3\\n2 3\\n1 2\\n3 4\\n4 5\\n') == '1 2 4\\n'\nassert solution('5 1\\n1 1\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5\\n') == '1 2\\n'\nassert solution('5 1\\n1 1\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5\\n') == '1 2\\n'"
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"9 1\\n1 1\\n5 10\\n1 3\\n11 14\\n5 5\\n10 10\\n3 6\\n6 12\\n7 7\\n4 11\") == \"1 4 5 6 7 8 9\"\nassert solution(\"5 1\\n1 1\\n3 3\\n2 3\\n1 2\\n3 4\\n4 5\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\") == \"1 2 4\"\nassert solution(\"5 1\\n1 1\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\") == \"1 2\""
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''\n5 1\n1 1\n3 3\n2 3\n1 2\n3 4\n4 5\n''') == '''\n1 2 4\n'''\n\nassert solution('''\n9 1\n1 1\n5 10\n1 3\n11 14\n5 5\n10 10\n3 6\n6 12\n7 7\n4 11\n''') == '''\n1 4 5 6 7 8 9\n'''\n\nassert solution('''\n5 1\n1 1\n3 3\n3 3\n4 4\n4 4\n5 5\n''') == '''\n1 2\n'''"
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == \"1 4 5 6 7 8 9\\n1 2 4\"\nassert solution() == \"1 2 4\"\nassert solution() == \"1\"\nassert solution() == \"1\""
    },
    {
        "number": 3968,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '1 4 5 6 7 8 9', \"The correct output should be '1 4 5 6 7 8 9'.\""
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input_data) == output_data, f\"Testcase {i+1} failed. Expected output: {output_data}, Received output: {solution(input_data)}\""
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 2\\n2 1\\n1 2.0\\n1 3.100\\n\") == \"1\"\nassert solution(\"3 3\\n1 5.0\\n2 5.5\\n3 6.0\\n\") == \"0\"\nassert solution(\"6 3\\n1 14.284235\\n2 17.921382\\n1 20.328172\\n3 20.842331\\n1 25.790145\\n1 27.204125\\n\") == \"2\""
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 2\\n2 1\\n1 2.0\\n1 3.100\\n') == '1\\n'\nassert solution('3 3\\n1 5.0\\n2 5.5\\n3 6.0\\n') == '0\\n'\nassert solution('6 3\\n1 14.284235\\n2 17.921382\\n1 20.328172\\n3 20.842331\\n1 25.790145\\n1 27.204125\\n') == '2\\n'"
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1\"\nprint(\"PASS\")\n\nassert solution() == \"0\"\nprint(\"PASS\")\n\nassert solution() == \"2\"\nprint(\"PASS\")"
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2\\n2 1\\n1 2.0\\n1 3.100\") == \"1\\n\"\nassert solution(\"3 3\\n1 5.0\\n2 5.5\\n3 6.0\") == \"0\\n\"\nassert solution(\"6 3\\n1 14.284235\\n2 17.921382\\n1 20.328172\\n3 20.842331\\n1 25.790145\\n1 27.204125\") == \"2\\n\""
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3 2\\n2 1\\n1 2.0\\n1 3.100\") == \"1\"\nassert solution(\"3 3\\n1 5.0\\n2 5.5\\n3 6.0\") == \"0\"\nassert solution(\"6 3\\n1 14.284235\\n2 17.921382\\n1 20.328172\\n3 20.842331\\n1 25.790145\\n1 27.204125\") == \"2\""
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 2\\n2 1\\n1 2.0\\n1 3.100\\n\") == \"1\\n\"\nassert solution(\"3 3\\n1 5.0\\n2 5.5\\n3 6.0\\n\") == \"0\\n\"\nassert solution(\"6 3\\n1 14.284235\\n2 17.921382\\n1 20.328172\\n3 20.842331\\n1 25.790145\\n1 27.204125\\n\") == \"2\\n\""
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\n2 1\\n1 2.0\\n1 3.100\\n\") == \"1\\n\"\nassert solution(\"3 3\\n1 5.0\\n2 5.5\\n3 6.0\\n\") == \"0\\n\"\nassert solution(\"6 3\\n1 14.284235\\n2 17.921382\\n1 20.328172\\n3 20.842331\\n1 25.790145\\n1 27.204125\\n\") == \"2\\n\""
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\\n2 1\\n1 2.0\\n1 3.100\\n\") == \"1\\n\"\nassert solution(\"3 3\\n1 5.0\\n2 5.5\\n3 6.0\\n\") == \"0\\n\"\nassert solution(\"6 3\\n1 14.284235\\n2 17.921382\\n1 20.328172\\n3 20.842331\\n1 25.790145\\n1 27.204125\\n\") == \"2\\n\""
    },
    {
        "number": 3969,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 2\\n2 1\\n1 2.0\\n1 3.100\\n\") == \"1\\n\"\nassert solution(\"3 3\\n1 5.0\\n2 5.5\\n3 6.0\\n\") == \"0\\n\"\nassert solution(\"6 3\\n1 14.284235\\n2 17.921382\\n1 20.328172\\n3 20.842331\\n1 25.790145\\n1 27.204125\\n\") == \"2\\n\""
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"6 2\\n2 3 6 5 4 10\") == \"3\""
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution == expected"
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"6 2\\n2 3 6 5 4 10\") == \"3\""
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"6 2\\n2 3 6 5 4 10\") == \"3\"\n\nassert solution(\"3 2\\n1 2 3 4\") == \"2\"\n\nassert solution(\"2 2\\n1 1 2 3\") == \"3\"\n\nassert solution(\"5 2\\n2 3 4 5\") == \"5\"\n\nassert solution(\"1 1\\n1\") == \"1\""
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6 2\\n2 3 6 5 4 10\") == \"3\"\nassert solution(\"4 2\\n2 3 6 5 4 10\") == \"2\"\nassert solution(\"6 2\\n1 2 3 4 5 6 7 8 9\") == \"4\"\nassert solution(\"4 2\\n1 2 3 4 5 6 7 8 9\") == \"2\"\nassert solution(\"6 2\\n1 2 3 4 5 6 7 8 9\") == \"4\"\n"
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('6 2\\n2 3 6 5 4 10') == '3'"
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"Output\\n3\""
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6 2\\n2 3 6 5 4 10\") == \"3\""
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6 2\\n2 3 6 5 4 10\") == \"3\""
    },
    {
        "number": 3970,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == 3\n"
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\"\nassert solution(\"3\\n1 2 3\\n\") == \"4\\n\"\nassert solution(\"9\\n1 2 1 3 2 2 2 2 3\\n\") == \"10\\n\"\n"
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('2\\n1 2\\n\\n3\\n1 2 3\\n\\n9\\n1 2 1 3 2 2 2 2 2 3\\n') == '2\\n'\nassert solution('3\\n1 2 3\\n\\n9\\n1 2 1 3 2 2 2 2 2 3\\n') == '4\\n'\nassert solution('9\\n1 2 1 3 2 2 2 2 2 3\\n') == '10\\n'"
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == 2"
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\", \"Alex doesn't like boredom. That's why whenever he gets bored, he comes up with games.\\n\"\nassert solution(\"3\\n1 2 3\\n\") == \"4\\n\", \"One long winter evening he came up with a game and decided to play it.\\n\"\nassert solution(\"9\\n1 2 1 3 2 2 2 2 3\\n\") == \"10\\n\", \"Alex is a perfectionist, so he decided to get as many points as possible.\\n\""
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"2\\n\", \"The output is not as expected\"\n\nsolution(stdin)"
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution == 2361934425936473\n"
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"2\\n\", \"Test case 1 failed\"\nassert solution(\"3\") == \"4\\n\", \"Test case 2 failed\"\nassert solution(\"9\") == \"10\\n\", \"Test case 3 failed\""
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"2\"\n\nassert solution() == \"4\"\n\nassert solution() == \"10\""
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('Input\\n2\\n1 2\\n\\nOutput\\n2\\n\\nInput\\n3\\n1 2 3\\n\\nOutput\\n4\\n\\nInput\\n9\\n1 2 1 3 2 2 2 2 3\\n\\nOutput\\n10\\n') == 'Output\\n2\\n\\n'"
    },
    {
        "number": 3971,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"2\\n\"\nassert solution(\"3\\n1 2 3\\n\") == \"4\\n\"\nassert solution(\"9\\n1 2 1 3 2 2 2 2 3\\n\") == \"10\\n\""
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"2\\n\") == \"4\\n\""
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"2\\n\") == \"4\\n\"\n\nfrom itertools import permutations"
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(b\"2\\n\") == \"4\\n\", \"The output is incorrect.\""
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"2\\n\") == \"4\\n\", \"The four sequences that satisfy the conditions are: \\n1, 1, 1,...\\n1, 2, 2,...\\n2, 1, 1,...\\n2, 2, 2,...\\n\"\n"
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"4\", \"Output should be 4, not {}.\".format(solution(\"2\"))"
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"4\\n\", \"Expected output: 4\\nActual output: {}\\n\".format(solution(stdin))"
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"4\"\n\nprint(\"All tests passed successfully!\")"
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"4\\n\"\nassert solution(\"2\") == \"4\\n\"\nassert solution(\"3\") == \"2\\n\"\nassert solution(\"4\") == \"4\\n\"\nassert solution(\"5\") == \"1\\n\"\nassert solution(\"6\") == \"2\\n\"\nassert solution(\"7\") == \"3\\n\"\nassert solution(\"8\") == \"3\\n\"\nassert solution(\"9\") == \"4\\n\"\nassert solution(\"10\") == \"4\\n\"\nassert solution(\"11\") == \"4\\n\"\nassert solution(\"12\") == \"4\\n\"\nassert solution(\"13\") == \"4\\n\"\nassert solution(\"14\") == \"4\\n\"\nassert solution(\"15\") == \"4\\n\"\nassert solution(\"16\") == \"4\\n\"\nassert solution(\"17\") == \"4\\n\"\nassert solution(\"18\") == \"4\\n\"\nassert solution(\"19\") == \"4\\n\"\nassert solution(\"20\") == \"4\\n\"\nassert solution(\"21\") == \"4\\n\"\nassert solution(\"22\") == \"4\\n\"\nassert solution(\"23\") == \"4\\n\"\nassert solution(\"24\") == \"4\\n\"\nassert solution(\"25\") == \"4\\n\"\nassert solution(\"26\") == \"4\\n\"\nassert solution(\"27\") == \"4\\n\"\nassert solution(\"28\") == \"4\\n\"\nassert solution(\"29\") == \"4\\n\"\nassert solution(\"30\") == \"4\\n\"\nassert solution(\"31\") == \"4\\n\"\nassert solution(\"32\") == \"4\\n\"\nassert solution(\"33\") == \"4\\n\"\nassert solution(\"34\") == \"4\\n\"\nassert solution(\"35\") == \"4\\n\"\nassert solution(\"36\") == \"4\\n\"\nassert solution(\"37\") == \"4\\n\"\nassert solution(\"38\") == \"4\\n\"\nassert solution(\"39\") == \"4\\n\"\nassert solution(\"40\") == \"4\\n\"\nassert solution(\"41\") == \"4\\n\"\nassert solution(\"42\") == \"4\\n\"\nassert solution(\"43\") == \"4\\n\"\nassert solution(\"44\") == \"4\\n\"\nassert solution(\"45\") == \"4\\n\"\nassert solution(\"46\") == \"4\\n\"\nassert solution(\"47\") == \"4\\n\"\nassert solution(\"48\") == \"4\\n\"\nassert solution(\"49\") == \"4\\n\"\nassert solution(\"50\") == \"4\\n\"\nassert solution(\"51\") == \"4\\n\"\nassert solution(\"52\") == \"4\\n\"\nassert solution(\"53\") == \"4\\n\"\nassert solution(\"54\") == \"4\\n\"\nassert solution(\"55\") == \"4\\n\"\nassert solution(\"56\") == \"4\\n\"\nassert solution(\"57\") == \"4\\n\"\nassert solution(\"58\") == \"4\\n\"\nassert solution(\"59\") == \"4\\n\"\nassert solution(\"60\") == \"4\\n\"\nassert solution(\"61\") == \"4\\n\"\nassert solution(\"62\") == \"4\\n\"\nassert solution(\"63\") == \"4\\n\"\nassert solution(\"64\") == \"4\\n\"\nassert solution(\"65\") == \"4\\n\"\nassert solution(\"66\") == \"4\\n\"\nassert solution(\"67\") == \"4\\n\"\nassert solution(\"68\") == \"4\\n\"\nassert solution(\"69\") == \"4\\n\"\nassert solution(\"70\") == \"4\\n\"\nassert solution(\"71\") == \"4\\n\"\nassert solution(\"72\") == \"4\\n\"\nassert solution(\"73\") == \"4\\n\"\nassert solution(\"74\") == \"4\\n\"\nassert solution(\"75\") == \"4\\n\"\nassert solution(\"76\") == \"4\\n\"\nassert solution(\"77\") == \"4\\n\"\nassert solution(\"78\") == \"4\\n\"\nassert solution(\"79\") == \"4\\n\"\nassert solution(\"80\") == \""
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin=input()) == \"4\\n\"\nassert solution(stdin=input()) == \"4\\n\"\nassert solution(stdin=input()) == \"4\\n\"\nassert solution(stdin=input()) == \"4\\n\"\nassert solution(stdin=input()) == \"4\\n\""
    },
    {
        "number": 3972,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"4\\n\", \"Incorrect Output\""
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 6\\n1 5 1 4\\n\") == \"5\"\nassert solution(\"5 4\\n2 3 2 3\\n\") == \"8\"\nassert solution(\"6 6\\n4 5 3 2\\n\") == \"9\"\nassert solution(\"7 4\\n3 2 1 2\\n\") == \"7\"\nassert solution(\"5 5\\n4 5 5 4\\n\") == \"6\"\nassert solution(\"8 8\\n4 5 6 5\\n\") == \"7\""
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(b'4 6\\n1 5 1 4\\n') == '5'\nassert solution(b'8 9 7 5 6 9\\n') == '5'\nassert solution(b'4 3\\n2 4 5 6\\n') == '2'\nassert solution(b'5 4\\n3 4 5 6\\n') == '2'\nassert solution(b'3 2\\n2 3 4 5 6\\n') == '1'\nassert solution(b'3 4\\n2 3 4 5 6\\n') == '2'\nassert solution(b'4 3\\n2 4 5 6\\n') == '2'\nassert solution(b'4 4\\n2 3 4 5 6\\n') == '1'\nassert solution(b'4 3\\n2 4 5 6\\n') == '1'"
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 6\\n1 5 1 4\\n\") == \"5\"\nassert solution(\"6 4\\n2 1 2 3\\n\") == \"11\"\nassert solution(\"3 5\\n1 5 1 4\\n\") == \"6\""
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 6\\n1 5 1 4\") == \"5\"\nprint(\"All tests pass\")"
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 6\\n1 5 1 4\\n\") == \"5\\n\"\nassert solution(\"6 7\\n2 4 1 3\\n\") == \"2\\n\"\nassert solution(\"3 5\\n2 4 1 3\\n\") == \"4\\n\"\nassert solution(\"6 7\\n2 4 1 3\\n\") == \"2\\n\"\nassert solution(\"6 6\\n2 4 1 3\\n\") == \"2\\n\"\n"
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"5\", \"The given input is not correct.\""
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"5\\n\", \"The minimum number of times Snuke needs to press the buttons is 5.\""
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4 6\\n1 5 1 4\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\\n\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\\n\""
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 6\\n1 5 1 4\") == \"5\"\nassert solution(\"2 6\\n1 5 1 4\") == \"5\"\nassert solution(\"2 5\\n1 4 1 3\") == \"3\"\nassert solution(\"5 7\\n1 5 1 4 5 6 7\") == \"7\"\nassert solution(\"3 4\\n1 4 1 3\") == \"3\"\nassert solution(\"4 4\\n1 4 1 3 2 3\") == \"5\"\n"
    },
    {
        "number": 3973,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 6\\n1 5 1 4\\n\") == \"5\"\nassert solution(\"2 4\\n1 2 3\\n\") == \"2\"\nassert solution(\"3 5\\n1 2 3 4 5\\n\") == \"4\"\nassert solution(\"4 6\\n1 5 1 4\\n\") == \"5\""
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"+-+-+\") == \"1\", \"Polycarpus just has been out of luck lately!\"\nassert solution(\"---\") == \"3\", \"The club got burgled.\""
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"+-+-+\") == 1, \"Polycarpus just has been out of luck lately!\"\nassert solution(\"---\") == 3, \"The club got burgled. All ice-cream was stolen.\""
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"+-+-+\") == \"1\", \"The correct minimum number of distinct people should be 1.\"\nassert solution(\"---\") == \"3\", \"The correct minimum number of distinct people should be 3.\""
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"+-+-+\") == \"1\"\nassert solution(\"---\") == \"3\""
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"+-+-+\") == \"1\\n\"\nassert solution(\"---\") == \"3\\n\""
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"+-+-+\"), \"Test 1\"\nassert solution(\"---\"), \"Test 2\""
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"+-+-+\") == \"1\"\nassert solution(\"---\") == \"3\""
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"+-+-+\") == \"1\\n\", \"Test 1\"\nassert solution(\"---\") == \"3\\n\", \"Test 2\"\n"
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution() == '1', 'Polycarpus just has been out of luck lately! As soon as he found a job in the \"Binary Cat\" cafe, the club got burgled. All ice-cream was stolen.'"
    },
    {
        "number": 3974,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == \"1\\n\""
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8') == '10110'\n"
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output, \"Test Failed\""
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\\n\") == \"10110\", \"The solution should be '10110', but it is '{}'\".format(solution(\"10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\\n\"))"
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\") == \"10110\\n\", \"Test Failed\""
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\") == \"10110\"\n"
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8') == '10110'"
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\\n') == '10110\\n'\n"
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\\n') == '10110'"
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\\n\") == \"10110\", \"Testcase failed\""
    },
    {
        "number": 3975,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution == \"10110\""
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"\"\"2\n1 3\"\"\""
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('''5 3 1\n1 2 3 2 1\n1 2 3''') == '''2\n1 3\n'''"
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Test failed\""
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\\n\") == \"2\\n1 3\\n\""
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected, f\"The output is {solution(input())}, but expected {expected}\""
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output, f\"Test failed. Expected: {output}, Got: {solution(input())}\""
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution == 'Output\\n2\\n1 3\\n2\\n1 2\\n'"
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5 3 1\\n1 2 3 2 1\\n1 2 3') == '2\\n1 3'\nassert solution('6 3 2\\n1 3 2 2 3 1\\n1 2 3') == '2\\n1 2'"
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\") == \"2\\n1 3\"\nassert solution(\"6 3 2\\n1 3 2 2 3 1\\n1 2 3\") == \"2\\n1 2\""
    },
    {
        "number": 3976,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('5 3 1\\n1 2 3 2 1\\n1 2 3\\n6 3 2\\n1 3 2 2 3 1\\n1 2 3\\n') == '2\\n1 3\\n'"
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('4 1 2\\n1 3\\n1 2\\n') == '2\\n'\nassert solution('3 3 1\\n2\\n1 2\\n1 3\\n2 3\\n') == '0\\n'\n"
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 1 2\\n1 3\\n1 2\\n\") == \"2\"\nassert solution(\"3 3 1\\n2\\n1 2\\n1 3\\n2 3\\n\") == \"0\""
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4 1 2\\n1 3\\n1 2\\n\") == \"2\"\nassert solution(\"3 3 1\\n2\\n1 2\\n1 3\\n2 3\\n\") == \"0\""
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(r'''\n4 1 2\n1 3\n1 2\n\nInput\n3 3 1\n2\n1 2\n1 3\n2 3\n\nOutput\n2\n''') == '2\\n'\n\nassert solution(r'''\n3 3 1\n2\n1 2\n1 3\n2 3\n\nInput\n4 1 2\n1 3\n1 2\n\nOutput\n2\n''') == '2\\n'\n\nassert solution(r'''\n4 1 2\n1 3\n1 2\n\nInput\n3 3 1\n2\n1 2\n1 3\n2 3\n\nOutput\n0\n''') == '0\\n'"
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4 1 2\\n1 3\\n1 2\\n\") == \"2\\n\"\nassert solution(\"3 3 1\\n2\\n1 2\\n1 3\\n2 3\\n\") == \"0\\n\""
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 1 2\\n1 3\\n1 2\\n\\n3 3 1\\n2\\n1 2\\n1 3\\n2 3\\n\\n\\n0') == '2\\n'"
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('Input\\n4 1 2\\n1 3\\n1 2\\n\\nInput\\n3 3 1\\n2\\n1 2\\n1 3\\n2 3\\n\\nOutput\\n2') == '2\\n'\nassert solution('Input\\n3 3 1\\n2\\n1 2\\n1 3\\n2 3\\n\\nOutput\\n0') == '0\\n'\nassert solution('Input\\n4 1 2\\n1 3\\n1 2\\n\\nInput\\n3 3 1\\n2\\n1 2\\n1 3\\n2 3\\n\\nOutput\\n0') == '0\\n'"
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 1 2\\n1 3\\n1 2\\n\") == \"2\"\nassert solution(\"3 3 1\\n2\\n1 2\\n1 3\\n2 3\\n\") == \"0\""
    },
    {
        "number": 3977,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 1 2\\n1 3\\n1 2\\n\") == \"2\"\nassert solution(\"3 3 1\\n2\\n1 2\\n1 3\\n2 3\\n\") == \"0\""
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('Input\\n6\\n10 2 3 5 4 2\\n\\nOutput\\n3\\n\\nInput\\n4\\n100 100 100 100\\n\\nOutput\\n1\\n\\nInput\\n8\\n7 6 5 4 3 2 2 3\\n\\nOutput\\n4') == 'Output\\n3\\n\\nInput\\n4\\n100 100 100 100\\n\\nOutput\\n1\\n\\nInput\\n8\\n7 6 5 4 3 2 2 3\\n\\nOutput\\n4'"
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('6\\n10 2 3 5 4 2') == '3'\nassert solution('4\\n100 100 100 100') == '1'\nassert solution('8\\n7 6 5 4 3 2 2 3') == '4'"
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n100 100 100 100\") == \"1\"\nassert solution(\"8\\n7 6 5 4 3 2 2 3\") == \"4\"\nassert solution(\"6\\n10 2 3 5 4 2\") == \"3\"\nassert solution(\"6\\n10 2 3 5 4 2\") == \"3\"\n"
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('6\\n10 2 3 5 4 2') == '3'\nassert solution('4\\n100 100 100 100') == '1'\nassert solution('8\\n7 6 5 4 3 2 2 3') == '4'"
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n10 2 3 5 4 2\\n\") == \"3\"\nassert solution(\"4\\n100 100 100 100\\n\") == \"1\"\nassert solution(\"8\\n7 6 5 4 3 2 2 3\\n\") == \"4\""
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n10 2 3 5 4 2\") == \"3\"\nassert solution(\"4\\n100 100 100 100\") == \"1\"\nassert solution(\"8\\n7 6 5 4 3 2 2 3\") == \"4\""
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"6\\n10 2 3 5 4 2\") == \"3\"\nassert solution(\"4\\n100 100 100 100\") == \"1\"\nassert solution(\"8\\n7 6 5 4 3 2 2 3\") == \"4\""
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == solution_test, \"Test case not implemented\""
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output"
    },
    {
        "number": 3978,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n10 2 3 5 4 2\") == \"3\"\nassert solution(\"4\\n100 100 100 100\") == \"1\"\nassert solution(\"8\\n7 6 5 4 3 2 2 3\") == \"4\""
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('''\n4 3\n1 2\n1 1\n3 1 3 2\n2 1 1\n''') == 'No\\n0\\n'\nassert solution('''\n6 5\n2 1 2\n2 1 2\n3 1 2 3\n2 1 5\n2 4 4\n2 4 4\n''') == 'No\\n0\\n'\nassert solution('''\n4 3\n4 3 2 2 1\n3 1 1 3\n3 2 3 3\n2 3 1\n''') == 'Yes\\n2\\n2 3\\n'\n"
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n1 2\\n1 1\\n3 1 3 2\\n2 1 1\") == \"Yes\\n2\\n2 3 \"\nassert solution(\"6 5\\n2 1 2\\n2 1 2\\n3 1 2 3\\n2 1 5\\n2 4 4\\n2 4 4\") == \"Yes\\n0\"\nassert solution(\"4 3\\n4 3 2 2 1\\n3 1 1 3\\n3 2 3 3\\n2 3 1\") == \"No\""
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n4 3\n1 2\n1 1\n3 1 3 2\n2 1 1\n\"\"\"\n) == \"Yes\\n2\"\n\nassert solution(\n\"\"\"\n6 5\n2 1 2\n2 1 2\n3 1 2 3\n2 1 5\n2 4 4\n2 4 4\n\"\"\"\n) == \"Yes\\n0\"\n\nassert solution(\n\"\"\"\n4 3\n4 3 2 2 1\n3 1 1 3\n3 2 3 3\n2 3 1\n\"\"\"\n) == \"No\""
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 3\\n1 2\\n1 1\\n3 1 3 2\\n2 1 1\") == \"Yes\"\nassert solution(\"6 5\\n2 1 2\\n2 1 2\\n3 1 2 3\\n2 1 5\\n2 4 4\\n2 4 4\") == \"No\""
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"Yes\\n2\\n2 3\"\nassert solution(stdin) == \"No\\n0\"\nassert solution(stdin) == \"Yes\\n0\""
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n1 2\\n1 1\\n3 1 3 2\\n2 1 1\") == \"Yes\\n2\\n2 3\"\nassert solution(\"6 5\\n2 1 2\\n2 1 2\\n3 1 2 3\\n2 1 5\\n2 4 4\\n2 4 4\") == \"Yes\\n0\"\nassert solution(\"4 3\\n4 3 2 2 1\\n3 1 1 3\\n3 2 3 3\\n2 3 1\") == \"No\"\nassert solution(\"1 1 1 1 1 1 1\\n2 2 2 2 2 2 2\") == \"No\"\nassert solution(\"1 2 2 2 1 2 2 1\\n2 2 1 1 2 2 2 2 1\") == \"Yes\\n2\\n2 3\"\nassert solution(\"1 2 2 2 1 2 2 1\\n2 2 1 1 2 2 2 2 1\\n1 1 2 2 1 2 2 1 1\") == \"No\""
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n1 2\\n1 1\\n3 1 3 2\\n2 1 1\\n\") == \"Yes\\n2\\n2 3\"\nassert solution(\"6 5\\n2 1 2\\n2 1 2\\n3 1 2 3\\n2 1 5\\n2 4 4\\n2 4 4\\n\") == \"Yes\\n0\""
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('''4 3\n1 2\n1 1\n3 1 3 2\n2 1 1''') == 'Yes\\n2\\n2 3 '\nassert solution('''6 5\n2 1 2\n2 1 2\n3 1 2 3\n2 1 5\n2 4 4\n2 4 4''') == 'Yes\\n0'"
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n1 2\\n1 1\\n3 1 3 2\\n2 1 1\") == \"Yes\\n2\\n2 3\"\nassert solution(\"6 5\\n2 1 2\\n2 1 2\\n3 1 2 3\\n2 1 5\\n2 4 4\\n2 4 4\") == \"No\"\nassert solution(\"4 3\\n4 3 2 2 1\\n3 1 1 3\\n3 2 3 3\\n2 3 1\") == \"No\""
    },
    {
        "number": 3979,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"Yes\""
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\") == \"20\\n0 2 1 4 3\""
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(4) == \"20\"\nassert solution(7) == \"0 2 1 4 3\""
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"20\\n0 2 1 4 3\\ndef solution(stdin: str) -> str:\\npass\\n\"\n"
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\") == \"20\"\nassert solution(\"5\") == \"21 22 23 24 25\"\nassert solution(\"10\") == \"363 425 132 187 92 206 214 121 155 164 113 147 89 104 57\""
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(3) == \"20\"\nassert solution(4) == \"0 2 1 4 3\"\nprint(\"ok\")"
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(4) == '20\\n0 2 1 4 3'"
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"4\") == \"20\"  # Example 1\nassert solution(\"10\") == \"100\"  # Example 2\nassert solution(\"20\") == \"200\"  # Example 3\nassert solution(\"5\") == \"25\"  # Example 4\nassert solution(\"15\") == \"500\"  # Example 5"
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"20\\n0 2 1 4 3\"\n"
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4\\n') == '20\\n0 2 1 4 3\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n\nassert solution('3\\n') == '20\\n0 1 2\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n\nassert solution('5\\n') == '20\\n0 1 2 3 4\\ndef solution(stdin: str) -> str:\\n    pass\\n'"
    },
    {
        "number": 3980,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(3) == \"0 2 1 4 3\\n0 1 3 2 4\"\nassert solution(10) == \"0 1 2 3 4 5 6 7 8 9\\n0 1 2 3 4 5 6 7 8 9\"\nassert solution(100) == \"0 1 2 3 4 5 6 7 8 9\\n0 1 2 3 4 5 6 7 8 9\\n0 1 2 3 4 5 6 7 8 9\\n0 1 2 3 4 5 6 7 8 9\\n0 1 2 3 4 5 6 7 8 9\\n0 1 2 3 4 5 6 7 8 9\\n0 1 2 3 4 5 6 7 8 9\\n0 1 2 3 4 5 6 7 8 9\\n0 1 2 3 4 5 6 7 8 9\\n0 1 2 3 4 5 6 7 8 9\\n0 1 2 3 4 5 6 7 8 9\\n0 1 2 3 4 5 6 7 8 9\\n0 1 2 3 4 5 6 7 8 9\\n0 1 2 3 4 5 6 7 8 9\\n0 1 2 3 4 5 6 7 8 9\\n0 1 2 3 4 5 6 7 8 9\\n0 1 2 3 4 5 6 7 8 9\\n0 1 2 3 4 5 6 7 8 9\\n0 1 2 3 4 5 6 7 8 9\\n0 1 2 3 4 5 6 7 8 9\\n0 1 2 3 4 5 6 7 8 9\\n0 1 2 3 4 5 6 7 8 9\\n0 1 2 3 4 5 6 7 8 9\\n0 1 2 3 4 5 6 7 8 9\\n0 1 2 3 4 5 6 7 8 9\\n0 1 2 3 4 5 6 7 8 9\\n0 1 2 3 4 5 6 7 8 9\\n0 1 2 3 4 5 6 7 8 9\\n0 1 2 3 4 5 6 7 8 9\\n0 1 2 3 4 5 6 7 8 9\\n0 1 2 3 4 5 6 7 8 9\\n0 1 2 3 4 5 6 7 8 9\\n0 1 2 3 4 5 6 7 8 9\\n0 1 2 3 4 5 6 7 8 9\\n0 1 2 3 4 5 6 7 8 9\\n0 1 2 3 4 5 6 7 8 9\\n0 1 2 3 4 5 6 7 8 9\\n0 1 2 3 4 5 6 7 8 9\\n0 1 2 3 4 5 6 7 8 9\\n0 1 2 3 4 5 6 7 8 9\\n0 1 2 3 4 5 6 7 8 9\\n0 1 2 3 4 5 6 7 8 9\\n0 1 2 3 4 5 6 7 8 9\\n0 1 2 3 4 5 6 7 8 9\\n0 1 2 3 4 5 6 "
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n1 1\\n') == 'YES\\n'\nassert solution('3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n') == 'NO\\n'"
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n1 1\\n\") == \"YES\"\nassert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n0 0\\n1 1\\n\") == \"NO\""
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n\") == \"YES\"\nassert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n\") == \"NO\""
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == expected_output, f\"Test case {input()} failed. Expected output: {expected_output}, but got {solution(input())}\""
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n\\n1 1') == 'YES'\nassert solution('3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n\\n0 0') == 'NO'"
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"YES\", \"Expected 'YES' but got '{}'.\".format(solution(stdin))\n"
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n\") == \"YES\"\nassert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n\") == \"NO\"\nassert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n1 1\\n\") == \"YES\"\nassert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n1 1\\n\") == \"NO\""
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n\\n1 1') == 'YES'\nassert solution('3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n\\n0 0\\n\\n1 1') == 'NO'"
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n0 0\\n1 1\\n') == 'YES'\nassert solution('3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n0 0\\n1 1\\n0 0\\n0 0\\n') == 'NO'\nassert solution('1 1\\n0 0\\n0 0\\n') == 'YES'\nassert solution('1 1\\n0 0\\n0 0\\n0 0\\n') == 'NO'\nassert solution('1 1\\n0 0\\n0 0\\n1 1\\n0 0\\n0 0\\n') == 'YES'\nassert solution('1 1\\n0 0\\n0 0\\n1 1\\n0 0\\n0 0\\n0 0\\n1 1\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n') == 'NO'"
    },
    {
        "number": 3981,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n1 1\\n\") == \"YES\"\nassert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n0 0\\n\") == \"NO\""
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"Input\\n3\\n1\\n1\\n1\\n\") == \"1\\n3\\n7\\n\"\nassert solution(\"Input\\n5\\n1\\n0\\n1\\n0\\n1\\n\") == \"1\\n4\\n10\\n22\\n43\\n\"\nassert solution(\"Input\\n9\\n1\\n1\\n0\\n0\\n0\\n1\\n1\\n0\\n1\\n\") == \"1\\n3\\n10\\n24\\n51\\n109\\n213\\n421\\n833\\n\""
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('Input') == '1\\n3\\n7\\n'\nassert solution('Input') == '1\\n4\\n10\\n22\\n43\\n'\nassert solution('Input') == '1\\n3\\n10\\n24\\n51\\n109\\n213\\n421\\n833\\n'"
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1\\n1\\n1\") == 1\nassert solution(\"5\\n1\\n0\\n1\\n0\") == 1\nassert solution(\"9\\n1\\n1\\n0\\n0\\n0\\n1\\n1\\n0\\n1\\n1\") == 1\n"
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1\\n1\\n1\\n\") == \"1\\n3\\n7\\n\"\nassert solution(\"1\\n1\\n0\\n1\\n\") == \"1\\n4\\n10\\n22\\n43\\n\"\nassert solution(\"1\\n1\\n1\\n0\\n\") == \"1\\n3\\n10\\n24\\n51\\n109\\n213\\n421\\n833\\n\""
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1\\n1\\n1\\n1\\n\") == \"1\\n3\\n7\\n\"\nassert solution(\"5\\n1\\n0\\n1\\n0\\n1\\n\") == \"1\\n4\\n10\\n22\\n43\\n\"\nassert solution(\"9\\n1\\n1\\n0\\n0\\n0\\n1\\n1\\n0\\n1\\n\") == \"1\\n3\\n10\\n24\\n51\\n109\\n213\\n421\\n833\\n\"\n\nfrom typing import List"
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1\\n1\\n1\\n\") == \"1\\n3\\n7\\n\"\nassert solution(\"5\\n1\\n0\\n1\\n0\\n1\\n\") == \"1\\n4\\n10\\n22\\n43\\n\"\nassert solution(\"9\\n1\\n1\\n0\\n0\\n0\\n1\\n1\\n0\\n1\\n\") == \"1\\n3\\n10\\n24\\n51\\n109\\n213\\n421\\n833\\n\""
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1\\n1\\n1\\n\") == 1\nassert solution(\"1\\n0\\n1\\n\") == 3\nassert solution(\"1\\n1\\n1\\n\") == 7\n\nassert solution(\"1\\n0\\n1\\n1\\n\") == 1\nassert solution(\"1\\n1\\n1\\n1\\n\") == 4\nassert solution(\"1\\n1\\n1\\n1\\n1\\n\") == 10\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n\") == 22\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(3) == 1\nassert solution(5) == 1\nassert solution(9) == 1"
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('1\\n1\\n1') == '1\\n2\\n3'\nassert solution('1\\n0\\n1') == '1\\n1\\n2'\nassert solution('1\\n0\\n1\\n1\\n0') == '1\\n1\\n2\\n2\\n3'\nassert solution('1\\n0\\n1\\n1\\n0\\n1\\n0\\n1\\n0\\n0') == '1\\n1\\n2\\n2\\n3\\n3\\n4\\n4\\n5\\n5\\n6\\n6\\n7\\n7\\n8\\n8\\n9\\n9\\n10\\n10\\n11\\n11\\n12\\n12\\n13\\n13\\n14\\n14\\n15\\n15\\n16\\n16\\n17\\n17\\n18\\n18\\n19\\n19\\n20\\n20\\n21\\n21\\n22\\n22\\n23\\n23\\n24\\n24\\n25\\n25\\n26\\n26\\n27\\n27\\n28\\n28\\n29\\n29\\n30\\n30\\n31\\n31\\n32\\n32\\n33\\n33\\n34\\n34\\n35\\n35\\n36\\n36\\n37\\n37\\n38\\n38\\n39\\n39\\n40\\n40\\n41\\n41\\n42\\n42\\n43\\n43\\n44\\n44\\n45\\n45\\n46\\n46\\n47\\n47\\n48\\n48\\n49\\n49\\n50\\n50\\n51\\n51\\n52\\n52\\n53\\n53\\n54\\n54\\n55\\n55\\n56\\n56\\n57\\n57\\n58\\n58\\n59\\n59\\n60\\n60\\n61\\n61\\n62\\n62\\n63\\n63\\n64\\n64\\n65\\n65\\n66\\n66\\n67\\n67\\n68\\n68\\n69\\n69\\n70\\n70\\n71\\n71\\n72\\n72\\n73\\n73\\n74\\n74\\n75\\n75\\n76\\n76\\n77\\n77\\n78\\n78\\n79\\n79\\n80\\n80\\n81\\n81\\n82\\n82\\n83\\n83\\n84\\n84\\n85\\n85\\n86\\n86\\n87\\n87\\n88\\n88\\n89\\n89\\n90\\n90\\n91\\n91\\n92\\n92\\n93\\n93\\n94\\n94\\n95\\n95\\n96\\n96\\n97\\n97\\n98\\n98\\n99\\n99\\n100\\n100\\n101\\n101\\n102\\n102\\n103\\n103\\n104\\n104\\n105\\n105\\n106\\n106\\n107\\n107\\n108\\n108\\n109\\n109\\n110\\n110\\n111\\n111\\n112\\n112\\n"
    },
    {
        "number": 3982,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n1\\n1\\n1\\n1\") == \"1\\n1\\n1\\n1\\n1\"\nassert solution(\"1\\n1\\n1\\n1\\n1\") == \"1\\n1\\n1\\n1\\n1\"\nassert solution(\"1\\n1\\n1\\n1\\n1\") == \"1\\n1\\n1\\n1\\n1\"\nassert solution(\"1\\n1\\n1\\n1\\n1\") == \"1\\n1\\n1\\n1\\n1\""
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\") == \"First\\nSecond\"\n\nassert solution(\"1\\n5 1\\n2 3\\n4 4\\n6 5\") == \"First\"\n\nassert solution(\"4\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 11\\n12 12\\n13 13\\n14 14\\n15 15\") == \"Second\""
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"First\\nSecond\\nFirst\\n\""
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2') == 'First\\nSecond\\nFirst\\n'"
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3\n3 0\n6 2\n1 2\n2 3\n15 10\n12 14\n8 3\n10 1\n14 6\n12 6\n1 9\n13 1\n2 5\n3 9\n7 2\n\"\"\") == \"First\\nSecond\\nFirst\"\n\nassert solution(\"\"\"\n3\n3 0\n6 2\n1 2\n2 3\n15 10\n12 14\n8 3\n10 1\n14 6\n12 6\n1 9\n13 1\n2 5\n3 9\n7 2\n\"\"\") == \"Second\\nFirst\\nSecond\"\n\nassert solution(\"\"\"\n3\n3 0\n6 2\n1 2\n2 3\n15 10\n12 14\n8 3\n10 1\n14 6\n12 6\n1 9\n13 1\n2 5\n3 9\n7 2\n\"\"\") == \"First\\nSecond\\nSecond\""
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == expected_output, f\"Test case failed.\\nInput: {stdin}\\nExpected output: {expected_output}\\nOutput: {solution(stdin)}\"\n"
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\\n\") == \"First\\nSecond\\nFirst\\n\"\n\nimport sys\n\nT = int(input())\nfor i in range(T):\n    N = int(input())\n    M = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    \n    if N + M <= 2 * 10**5:\n        graph = [[0] * N for _ in range(N)]\n        for i in range(M):\n            u, v = map(int, input().split())\n            graph[u-1][v-1] = 1\n            graph[v-1][u-1] = 1\n        for i in range(N):\n            for j in range(N):\n                if not graph[i][j] and (i == j or not graph[i][j] and not graph[j][i]):\n                    graph[i][j] = 1\n        if all(graph[i][j] == 1 for i in range(N) for j in range(N) if i!= j):\n            print(\"First\")\n        else:\n            print(\"Second\")\n    else:\n        print(\"Invalid input\")\n"
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('3\\n3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2') == 'First\\nSecond\\nFirst\\n'\nassert solution('5\\n2 0\\n7 3\\n1 4\\n5 6\\n11 8\\n9 9\\n10 10\\n11 12\\n13 15\\n12 17\\n14 18\\n13 20\\n15 23\\n16 24') == 'Second\\nFirst\\nSecond\\n'\nassert solution('5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 11\\n12 12\\n13 13\\n14 14\\n15 15\\n16 16\\n17 17\\n18 18\\n19 19\\n20 20\\n21 21\\n22 22\\n23 23\\n24 24') == 'First\\nSecond\\nFirst\\n'"
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\") == \"First\\nSecond\"\nassert solution(\"3\\n3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\") == \"First\"\nassert solution(\"3\\n3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\") == \"Second\"\nprint(\"All test cases pass\")"
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == 'First\\nSecond\\nFirst\\n', \"Solution should return 'First\\nSecond\\nFirst\\n', but got '{}'.\".format(solution(stdin))"
    },
    {
        "number": 3983,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3 0\\n6 2\\n1 2\\n2 3\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6\\n1 9\\n13 1\\n2 5\\n3 9\\n7 2\") == \"First\\nSecond\"\n"
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"abba\") == \"Mike\\nAnn\\nAnn\\nMike\\n\"\nassert solution(\"cba\") == \"Mike\\nMike\\nMike\\ndef solution(stdin: str) -> str:\\n\\tpass\""
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"abba\") == \"Mike\"\nassert solution(\"cba\") == \"Mike\"\n"
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"abba\") == \"Mike\\nAnn\\nAnn\\nMike\"\nassert solution(\"cba\") == \"Mike\\nMike\\nMike\\ndef solution(stdin: str) -> str:\\n    pass\\n\""
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == ['Mike', 'Ann', 'Ann', 'Mike']"
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('abba') == 'Mike'\nassert solution('cba') == 'Mike'"
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"abba\") == \"Mike\\nAnn\"\nassert solution(\"cba\") == \"Mike\\nMike\\nMike\\ndef solution(stdin: str) -> str:\n    pass\""
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"abba\") == \"Mike\\nAnn\\nAnn\\nMike\"\nassert solution(\"cba\") == \"Mike\\nMike\\nMike\\ndef solution(stdin: str) -> str:\n    pass\"\n"
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"abba\") == \"Mike\"\nassert solution(\"cba\") == \"Mike\""
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('abba') == 'Mike'\nassert solution('cba') == 'Mike'"
    },
    {
        "number": 3984,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"abba\") == \"Mike\"\nassert solution(\"cba\") == \"Mike\""
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\n8 3 8\\n1 2\\n2 3\\n\") == \"0\\n\"\nassert solution(\"3 2\\n8 12 8\\n1 2\\n2 3\\n\") == \"2\\n\""
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('3 2\\n8 3 8\\n1 2\\n2 3\\n') == '0\\n'\nassert solution('3 2\\n8 12 8\\n1 2\\n2 3\\n') == '2\\n'\n"
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3 2\\n8 3 8\\n1 2\\n2 3\") == 0\nassert solution(\"3 2\\n8 12 8\\n1 2\\n2 3\") == 2"
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"3 2\\n8 3 8\\n1 2\\n2 3\") == \"0\\n\"\nassert solution(\"3 2\\n8 12 8\\n1 2\\n2 3\") == \"2\\n\""
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3 2\\n8 3 8\\n1 2\\n2 3\") == \"0\\n\"\n\nassert solution(\"3 2\\n8 12 8\\n1 2\\n2 3\") == \"2\\n\""
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3 2\\n8 3 8\\n1 2\\n2 3') == '0\\n'\nassert solution('3 2\\n8 12 8\\n1 2\\n2 3') == '2\\n'"
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"0\"\n"
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == expected_output, f\"Your solution does not match the expected output. Please check the given code and ensure that the code is well-formatted and follows the problem statement.\""
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3 2\\n8 3 8\\n1 2\\n2 3\\n\") == \"0\\n\"\nassert solution(\"3 2\\n8 12 8\\n1 2\\n2 3\\n\") == \"2\\n\"\n"
    },
    {
        "number": 3985,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution('3 2\\n8 3 8\\n1 2\\n2 3') == '0\\n'\nassert solution('3 2\\n8 12 8\\n1 2\\n2 3') == '2\\n'"
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"7 4\") == \"ababacd\"\nassert solution(\"4 7\") == \"-1\""
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"7 4\") == \"ababacd\"\nassert solution(\"4 7\") == \"-1\"\n"
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"7 4\") == \"ababacd\"\nassert solution(\"4 7\") == \"-1\""
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('7 4') == 'ababacd'\nassert solution('4 7') == '-1'"
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(read_input()) == \"ababacd\"\nassert solution(read_input()) == \"-1\""
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"7 4\") == \"ababacd\"\nassert solution(\"4 7\") == \"-1\""
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"7 4\") == \"ababacd\"\nassert solution(\"4 7\") == \"-1\""
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution() == \"ababacd\""
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"ababacd\""
    },
    {
        "number": 3986,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"7 4\") == \"ababacd\"\nassert solution(\"4 7\") == \"-1\""
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2 1 2\\n10\\n1 1 2 2 2 1 1 2 2 1\\n\") == \"4\\n\"\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\\n\") == \"9\\n\""
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 2 1 2\") == \"4\\n\"\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\") == \"9\\n\""
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 2 1 2\") == \"4\\n\"\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\") == \"9\\n\""
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 2 1 2\") == \"4\"\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\") == \"9\""
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 2 1 2\\n10\\n1 1 2 2 2 1 1 2 2 1\\n\") == \"4\\n\"\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\\n\") == \"9\\n\""
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 2 1 2\") == \"4\\n\"\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\") == \"9\\n\""
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 2 1 2\\n\") == \"4\\n\"\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\\n\") == \"9\\n\"\n\nprint(\"All test cases pass.\")"
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 2 1 2\") == \"4\\n\"\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\") == \"9\\n\""
    },
    {
        "number": 3987,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 2 1 2\\n\") == \"4\\n\"\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\\n\") == \"9\\n\"\n"
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\\n-2\\n2\\n+++\"\n"
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"2\\n-1\\n2\\n++-\""
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"2 2 1\\n1 1 2\\n2 2 1\") == \"2\\n-\\n2\\n+\"\n\nassert solution(\"6 6 3\\n2 2 6\\n1 4 5\\n2 3 4\\n1 4 1\\n1 3 1\\n2 2 3\") == \"6\\n++-\\n2\\n+-+\""
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"Input\\n2 2 1\\n1 1 2\\n2 2 1\\n\") == \"2\\n-\\n2\\n+\"\n\nassert solution(\"Input\\n6 6 3\\n2 2 6\\n1 4 5\\n2 3 4\\n1 4 1\\n1 3 1\\n2 2 3\\n\") == \"6\\n++-\\n2\\n+-+\""
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('Input\\n2 2 1\\n1 1 2\\n2 2 1\\n') == '2\\n-\\n2\\n+'\nassert solution('Input\\n6 6 3\\n2 2 6\\n1 4 5\\n2 3 4\\n1 4 1\\n1 3 1\\n2 2 3\\n') == '6\\n++-\\n2\\n+-+\\n'"
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(input()) == output() for input, output in zip(inputs, outputs)\n"
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"2 2 1\\n1 1 2\\n2 2 1\") == \"2\\n-\\n2\"\nassert solution(\"6 6 3\\n2 2 6\\n1 4 5\\n2 3 4\\n1 4 1\\n1 3 1\\n2 2 3\") == \"6\\n++-\\n2\\n+-+def solution(stdin: str) -> str:\\n\\tpass\\n\""
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"\"\"2 2 1\n1 1 2\n2 2 1\"\"\") == \"\"\"2\n-\n2\n+\"\"\"\nassert solution(\"\"\"6 6 3\n2 2 6\n1 4 5\n2 3 4\n1 4 1\n1 3 1\n2 2 3\"\"\") == \"\"\"6\n++-\n2\n+-+\"\"\""
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('''\n2 2 1\n1 1 2\n2 2 1\n''') == '2\\n-2\\n2\\n+-'\n\nassert solution('''\n6 6 3\n2 2 6\n1 4 5\n2 3 4\n1 4 1\n1 3 1\n2 2 3\n''') == '6\\n++-2+-+\\n'"
    },
    {
        "number": 3988,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2 2 1\\n1 1 2\\n2 2 1\") == \"2\\n-\\n2\\n+\"\nassert solution(\"6 6 3\\n2 2 6\\n1 4 5\\n2 3 4\\n1 4 1\\n1 3 1\\n2 2 3\") == \"6\\n++-\\n2\\n+-+def solution(stdin: str) -> str:\\n    pass\"\n"
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"1689\") == \"1869\", \"1689\"\nassert solution(\"18906\") == \"18690\", \"18906\"\n"
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"1689\") == \"1869\"\nassert solution(\"18906\") == \"18690\""
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"1689\") == \"1869\"\nassert solution(\"18906\") == \"18690\"\nassert solution(\"1234\") == \"0\"\nassert solution(\"1111\") == \"0\"\nassert solution(\"11111111111111111111111111111111\") == \"0\""
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"1689\") == \"1869\"\nassert solution(\"18906\") == \"18690\"\nassert solution
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"1689\") == \"1869\"\nassert solution(\"18906\") == \"18690\""
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"1689\") == \"1869\"\nassert solution(\"18906\") == \"18690\""
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"1689\") == \"1869\"\nassert solution(\"18906\") == \"18690\""
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1689') == '1869', 'Invalid input'\nassert solution('18906') == '18690', 'Invalid input'"
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"1689\") == \"1869\"\nassert solution(\"18906\") == \"18690\"\nassert solution(\"1234\") == \"0\"\nassert solution(\"1000\") == \"1000\"\nassert solution(\"1000000000\") == \"0\""
    },
    {
        "number": 3989,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(input()) == expected_output, f\"Input: {input()}, Expected Output: {expected_output}\""
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(open('input.txt', 'r').read()) == 2\nassert solution(open('input2.txt', 'r').read()) == -1\nassert solution(open('input3.txt', 'r').read()) == 3\nassert solution(open('input4.txt', 'r').read()) == 3"
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('4 2\\n1 3\\n3 4\\n') == '2'\nassert solution('4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n5 1\\n1 2\\n') == '-1'\nassert solution('5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n') == '3'"
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n1 3\\n3 4\\n\") == \"2\"\nassert solution(\"4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n\") == \"-1\"\nassert solution(\"5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n\") == \"3\""
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input_str) == output_str, \"The code you provided is not correct.\""
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"4 2\\n1 3\\n3 4\\n\") == 2\nassert solution(\"4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n\") == -1\nassert solution(\"5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n\") == 3"
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('4 2\\n1 3\\n3 4\\n\\n4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n\\n1 1\\n1 2\\n\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n3 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n3 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n3 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n3 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n3 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n3 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n3 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n3 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n3 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n3 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n3 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n3 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n3 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n3 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n3 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n3 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n3 5\\n4 2\\n3 5\\n4 "
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution == 2\n"
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 2\\n1 3\\n3 4\\n') == '2'\nassert solution('4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n5 1\\n1 2\\n') == '-1'\nassert solution('5 5\\n4 2\\n3 5\\n4 5\\n5 1\\n1 2\\n') == '3'"
    },
    {
        "number": 3990,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(stdin) == output"
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"3\"\nassert solution() == \"9\"\n"
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"3\\n\"\n"
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == output(), \"Your solution is incorrect.\""
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution == 3\nprint(3)\n"
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"2\\n4 7\\n\") == \"3\\n\"\nassert solution(\"3\\n4 3 1\\n\") == \"9\\n\""
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"2\\n4 7\\n\") == \"3\\n\"\nassert solution(\"3\\n4 3 1\\n\") == \"9\\n\"\n"
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"3\\n\", \"Input: 2\\nOutput: 3\\n\"\nassert solution(stdin) == \"9\\n\", \"Input: 3\\nOutput: 9\\n\""
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"2\\n4 7\") == \"3\"\nassert solution(\"3\\n4 3 1\") == \"9\""
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"2\\n4 7\\n\") == \"3\\n\"\nassert solution(\"3\\n4 3 1\\n\") == \"9\\n\""
    },
    {
        "number": 3991,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"2\\n4 7\\n3\\n4 3 1\") == \"3\\n\"\nassert solution(\"3\\n4 3 1\\n4 1\") == \"9\\n\"\nassert solution(\"1\\n1 1\") == \"1\\n\"\nassert solution(\"1\\n1\") == \"1\\n\"\nassert solution(\"1\\n1\\n1\\n1\") == \"2\\n\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"5\\n\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n4 8 5\") == \"9\"\nassert solution(\"5\\n3 10 2 1 5\") == \"2\"\nassert solution(\"4\\n0 5 15 10\") == \"0\"\nassert solution(\"1\\n1\") == \"-1\""
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"3\\n4 8 5\") == \"9\"\nassert solution(\"5\\n3 10 2 1 5\") == \"2\"\nassert solution(\"4\\n0 5 15 10\") == \"0\"\nassert solution(\"1\\n1\") == \"-1\""
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == \"9\", \"Test Case 1\"\nassert solution() == \"2\", \"Test Case 2\"\nassert solution() == \"0\", \"Test Case 3\"\nassert solution() == \"-1\", \"Test Case 4\""
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n3 10 2 1 5\\n4\\n0 5 15 10\\n1\\n1\\n\") == \"2\"\nassert solution(\"3\\n4 8 5\\n5\\n3 10 2 1 5\\n4\\n0 5 15 10\\n1\\n1\\n\") == \"9\"\nassert solution(\"4\\n0 5 15 10\\n1\\n1\\n\") == \"0\"\nassert solution(\"1\\n1\\n\") == \"-1\""
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('3') == '9'\nassert solution('5') == '2'\nassert solution('4') == '0'\nassert solution('1') == '-1'\n"
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('3\\n4 8 5') == '9'\nassert solution('5\\n3 10 2 1 5') == '2'\nassert solution('4\\n0 5 15 10') == '0'\nassert solution('1\\n1') == '-1'"
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(stdin=\"3\\n4 8 5\\n5\\n4\\n0 5 15 10\\n1\\n1\\n-1\\n\") == \"9\\n2\\n0\\n\""
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"3\\n4 8 5\\n5\\n4\\n0 5 15 10\\n1\\n1\\n\") == \"9\\n\"\nassert solution(\"5\\n3 10 2 1 5\\n4\\n0 5 15 10\\n1\\n1\\n\") == \"2\\n\"\nassert solution(\"4\\n0 5 15 10\\n1\\n1\\n\") == \"0\\n\"\nassert solution(\"1\\n1\\n\") == \"-1\\n\""
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n4 8 5\") == \"9\"\nassert solution(\"5\\n3 10 2 1 5\") == \"2\"\nassert solution(\"4\\n0 5 15 10\") == \"0\"\nassert solution(\"1\\n1\") == \"-1\""
    },
    {
        "number": 3992,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n4 8 5\\n5\\n4\\n0 5 15 10\\n1\\n1\\n\") == \"9\"\nassert solution(\"5\\n3 10 2 1 5\\n2\\n4\\n0 5 15 10\\n1\\n1\\n\") == \"2\"\nassert solution(\"4\\n0 5 15 10\\n1\\n1\\n\") == \"0\"\nassert solution(\"1\\n1\\n\") == \"-1\""
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution == 3"
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"10 4 5\\n3 5 7 10\\n\") == \"3\\n\"\nassert solution(\"13 4 5\\n7 8 9 10\\n\") == \"1\\n\""
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(input()) == \"3\"\nassert solution(input()) == \"1\""
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"10 4 5\\n3 5 7 10\\n\") == \"3\\n\"\nassert solution(\"13 4 5\\n7 8 9 10\\n\") == \"1\\n\""
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"10 4 5\\n3 5 7 10\") == \"3\"\nassert solution(\"13 4 5\\n7 8 9 10\") == \"1\""
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"10 4 5\\n3 5 7 10\") == \"3\"\nassert solution(\"13 4 5\\n7 8 9 10\") == \"1\""
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"10 4 5\\n3 5 7 10\\n\") == \"3\\n\"\nassert solution(\"13 4 5\\n7 8 9 10\\n\") == \"1\\n\""
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"10 4 5\\n3 5 7 10\\n\") == \"3\"\nassert solution(\"13 4 5\\n7 8 9 10\\n\") == \"1\""
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"10 4 5\\n3 5 7 10\\n\") == \"3\\n\"\nassert solution(\"13 4 5\\n7 8 9 10\\n\") == \"1\\n\"\nassert solution(\"\") == \"\"\n"
    },
    {
        "number": 3993,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"10 4 5\\n3 5 7 10\") == \"3\\n\"\nassert solution(\"13 4 5\\n7 8 9 10\") == \"1\\n\""
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"3\\n101\\n3 3\\n3 2\\n3 1\") == \"2\"\nassert solution(\"4\\n1111\\n3 4\\n5 2\\n3 1\\n3 2\\n1 5\") == \"4\"\nassert solution(\"6\\n011100\\n5 3\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\") == \"6\"\n\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input_string) == output_string, f\"Test failed. Input: {input_string}, Output: {output_string}\"\nprint(\"Test passed\")"
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(\"3\\n101\\n3 3\\n3 2\\n3 1\\n\") == \"2\\n\"\nassert solution(\"4\\n1111\\n3 4\\n5 2\\n3 1\\n3 2\\n\") == \"4\\n\"\nassert solution(\"6\\n011100\\n5 3\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\\n\") == \"6\\n\""
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input) == expected, f\"The output of the solution should be '{expected}', but it is '{solution(input)}'.\" for input, expected in [\n    ([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3"
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"3\") == 2\nassert solution(\"4\") == 4\nassert solution(\"6\") == 6"
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"3\\n101\\n3 3\\n3 2\\n3 1\") == \"2\"\nassert solution(\"4\\n1111\\n3 4\\n5 2\\n3 1\\n3 2\\n3 4\") == \"4\"\nassert solution(\"6\\n011100\\n5 3\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\") == \"6\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"101\\n3 3\\n3 2\\n3 1\") == 2\nassert solution(\"1111\\n3 4\\n5 2\\n3 1\\n3 2\") == 4\nassert solution(\"011100\\n5 3\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\") == 6"
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input_data) == expected_output, f\"Test case failed. Expected output: {expected_output}, got: {solution(input_data)}\""
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution == \"TODO: implement the solution\""
    },
    {
        "number": 3994,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"3\\n101\\n3 3\\n3 2\\n3 1\") == \"2\"\nassert solution(\"4\\n1111\\n3 4\\n5 2\\n3 1\\n3 2\") == \"4\"\nassert solution(\"6\\n011100\\n5 3\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\") == \"6\"\nassert solution(\"3\\n101\\n3 3\\n3 2\\n3 1\") == \"2\"\nassert solution(\"4\\n1111\\n3 4\\n5 2\\n3 1\\n3 2\") == \"4\"\nassert solution(\"6\\n011100\\n5 3\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5\") == \"6\""
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"4 4\") == \"1111\"\nassert solution(\"5 3\") == \"01010\"\nassert solution(\"7 3\") == \"1011011\""
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"4 4\") == \"1111\"\nassert solution(\"5 3\") == \"01010\"\nassert solution(\"7 3\") == \"1011011\""
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == '1111'"
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"4 4\") == \"1111\"\nassert solution(\"5 3\") == \"01010\"\nassert solution(\"7 3\") == \"1011011\""
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(stdin=input()) == expected_output, f\"Expected output: '{expected_output}', but got: '{solution(stdin=input())}'\""
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution('4 4') == '1111'\nassert solution('5 3') == '01010'\nassert solution('7 3') == '1011011'"
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(input()) == \"1111\"\nassert solution(input()) == \"01010\"\nassert solution(input()) == \"1011011\"\n"
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output, f\"Expected: {output}\\nGot: {solution(input())}\""
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution('4 4') == '1111', 'Test 1 failed'\nassert solution('5 3') == '01010', 'Test 2 failed'\nassert solution('7 3') == '1011011', 'Test 3 failed'"
    },
    {
        "number": 3995,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"4 4\") == \"1111\\n\"\nassert solution(\"5 3\") == \"01010\\n\"\nassert solution(\"7 3\") == \"1011011\\n\""
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution() == \"1/2\\n\", \"Test failed\"  # expected output: 1/2"
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output(), \"Test failed\""
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"0/1\", \"The given input is incorrect. Please try again.\""
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n') == '1/2\\n'\nassert solution('3\\n1 1 1\\n') == '0/1\\n'"
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(input()) == output, f\"Expected '{output}', got '{solution(input())}'\""
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"1/2\\n\", \"Test failed\""
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n') == '1/2\\n'\nassert solution('3\\n1 1 1\\n') == '0/1\\n'"
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n') == '1/2\\n'\nassert solution('3\\n1 1 1\\n') == '0/1\\n'\nassert solution('4\\n1 2 3 4\\n') == '0/1\\n'\nassert solution('5\\n1 2 3 4 5\\n') == '1/1\\n'\n\nprint(\"All tests passed\")"
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 1 1\\n\") == \"0/1\\n\", \"Test case 1\""
    },
    {
        "number": 3996,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"1\\n2\\n\") == \"1/2\\n\"\nassert solution(\"3\\n1 1 1\\n\") == \"0/1\\n\""
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution('5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\\n') == '1 0 1 0 0\\n'\nassert solution('5\\n9 7 8 6 5\\n1 1\\n2 1\\n3 1\\n4 1\\n') == '4 3 2 1 0\\n'"
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(input()) == output()"
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution('''\n5\n2 5 1 4 6\n1 7\n1 1\n3 5\n3 6\n''') == '''\n1 0 1 0 0\n'''\n\nassert solution('''\n5\n9 7 8 6 5\n1 1\n2 1\n3 1\n4 1\n''') == '''\n4 3 2 1 0\n'''"
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(\"5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\\n\") == \"1 0 1 0 0\\n\"\nassert solution(\"5\\n9 7 8 6 5\\n1 1\\n2 1\\n3 1\\n4 1\\n\") == \"4 3 2 1 0\\n\""
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\") == \"1 0 1 0 0\\n4 3 2 1 0\"\nassert solution(\"5\\n9 7 8 6 5\\n1 1\\n2 1\\n3 1\\n4 1\") == \"4 3 2 1 0\""
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(stdin) == output, f\"Input: {stdin}\\nOutput: {output}\\n\""
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('''\n    5\n    2 5 1 4 6\n    1 7\n    1 1\n    3 5\n    3 6\n    ''') == '1 0 1 0 0'\n\nassert solution('''\n    5\n    9 7 8 6 5\n    1 1\n    2 1\n    3 1\n    4 1\n    ''') == '4 3 2 1 0'"
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(input()) == output()\n"
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\\n\") == \"1 0 1 0 0\\n\"\nassert solution(\"5\\n9 7 8 6 5\\n1 1\\n2 1\\n3 1\\n4 1\\n\") == \"4 3 2 1 0\\n\""
    },
    {
        "number": 3997,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(input_str) == output_str, \"The given solution is incorrect. Please provide the correct input and output.\\nExpected output: {}\\nActual output: {}\".format(output_str, solution(input_str))"
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(\"5\\n4 5 1 7 4\\n\") == \"1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000\"\nassert solution(\"2\\n1 2\\n\") == \"0\\n2\\n11\\n11\"\nassert solution(\"3\\n1 1 1\\n\") == \"1\\n0\\n11\\n11\""
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution(\"5\\n4 5 1 7 4\\n\") == \"1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000\\n\"\nassert solution(\"2\\n1 2\\n\") == \"0\\n2\\n11\\n11\\n\"\nassert solution(\"3\\n1 1 1\\n\") == \"1\\n0\\n\""
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution() == expected_output, f\"Output mismatch: {solution()!r}!= {expected_output!r}\""
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution(input()) == \"1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000\"\n"
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution('Input') == 'Output'"
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"5\\n4 5 1 7 4\\n\\n1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000\") == \"1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000\"\nassert solution(\"2\\n1 2\\n\\n0\\n2\\n11\\n11\\n\") == \"0\\n2\\n11\\n11\"\nassert solution(\"3\\n1 1 1\\n\\n1\\n0\\ndef solution(stdin: str) -> str: pass\") == \"1\\n0\\n\""
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution(\"5\\n4 5 1 7 4\") == \"1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000\"\nassert solution(\"2\\n1 2\") == \"0\\n2\\n11\\n11\"\nassert solution(\"3\\n1 1 1\") == \"1\\n0\\n11\\n11\""
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution('5\\n4 5 1 7 4\\n') == '1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000'\nassert solution('2\\n1 2\\n') == '0\\n2\\n11\\n11'\nassert solution('3\\n1 1 1\\n') == '1\\n0\\n11'"
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(input()) == output(), \"Test failed\"\n\nfrom typing import List"
    },
    {
        "number": 3998,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution() == '1\\n8\\n01010\\n00011\\n01010\\n10010\\n00011\\n11000\\n00011\\n11000\\n'"
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 0,
        "answer": "assert solution(stdin) == '1\\n'\nassert solution(stdin) == '2\\n'\nassert solution(stdin) == '3\\n'\nassert solution(stdin) == '4\\n'\nassert solution(stdin) == '5\\n'\nassert solution(stdin) == '6\\n'"
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 1,
        "answer": "assert solution('6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\\n') == '1'"
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 2,
        "answer": "assert solution(stdin=input()) == \"1\""
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 3,
        "answer": "assert solution() == \"1\\n\", \"Test case 1 failed.\""
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 4,
        "answer": "assert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\\n\") == \"1\\n\"\n"
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 5,
        "answer": "assert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == \"1\"\nassert solution(\"8\\n1 2 3 4 5 6 7\\n8 9 10 11 12 13 14\\n9 10 11 12 13 14 15\\n10 11 12 13 14 15 16\\n11 12 13 14 15 16 17\\n12 13 14 15 16 17 18\\n13 14 15 16 17 18 19\\n14 15 16 17 18 19 20\\n15 16 17 18 19 20 21\\n16 17 18 19 20 21 22\\n17 18 19 20 21 22 23\\n18 19 20 21 22 23 24\\n19 20 21 22 23 24 25\\n20 21 22 23 24 25 26\\n21 22 23 24 25 26 27\\n22 23 24 25 26 27 28\\n23 24 25 26 27 28 29\\n24 25 26 27 28 29 30\\n25 26 27 28 29 30 31\\n26 27 28 29 30 31 32\\n27 28 29 30 31 32 33\\n28 29 30 31 32 33 34\\n29 30 31 32 33 34 35\\n30 31 32 33 34 35 36\\n31 32 33 34 35 36 37\\n32 33 34 35 36 37 38\\n33 34 35 36 37 38 39\\n34 35 36 37 38 39 40\\n35 36 37 38 39 40 41\\n36 37 38 39 40 41 42\\n37 38 39 40 41 42 43\\n38 39 40 41 42 43 44\\n39 40 41 42 43 44 45\\n40 41 42 43 44 45 46\\n41 42 43 44 45 46 47\\n42 43 44 45 46 47 48\\n43 44 45 46 47 48 49\\n44 45 46 47 48 49 50\\n45 46 47 48 49 50 51\\n46 47 48 49 50 51 52\\n47 48 49 50 51 52 53\\n48 49 50 51 52 53 54\\n49 50 51 52 53 54 55\\n50 51 52 53 54 55 56"
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 6,
        "answer": "assert solution('6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5') == '1'"
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 7,
        "answer": "assert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == 1\n"
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 8,
        "answer": "assert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == 1\nprint(\"All test cases pass\")"
    },
    {
        "number": 3999,
        "checkpoint": "1B",
        "pass": 9,
        "answer": "assert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == 1\nassert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == 0\nassert solution(\"5\\n0 1\\n2 3\\n4 5\") == 0\nassert solution(\"6\\n1 1 1 1\\n2 2 2 2\\n3 3 3 3\\n4 4 4 4\") == 2"
    }
]